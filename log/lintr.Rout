NO COPY: inst/maintenance/global_variables.R:13:1: style: lines should not be more than 80 characters.
.package_root <- file.path("..", "..") # runnnig this we're in inst/maintenance, 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: inst/maintenance/global_variables.R:13:81: style: Trailing whitespace is superfluous.
.package_root <- file.path("..", "..") # runnnig this we're in inst/maintenance, 
                                                                                ^
NO COPY: inst/maintenance/global_variables.R:15:37: style: Commas should always have a space after.
source(file.path(.package_root, "R","internals.R"))
                                    ^
NO COPY: inst/maintenance/global_variables.R:16:37: style: Commas should always have a space after.
source(file.path(.package_root, "R","utils.R"))
                                    ^
NO COPY: inst/maintenance/global_variables.R:17:37: style: Commas should always have a space after.
source(file.path(.package_root, "R","variable_getters.R"))
                                    ^
NO COPY: inst/maintenance/global_variables.R:18:37: style: Commas should always have a space after.
source(file.path(.package_root, "R","batch.R"))
                                    ^
NO COPY: inst/maintenance/global_variables.R:44:4: style: Trailing whitespace is superfluous.
"A" 
   ^
NO COPY: inst/maintenance/global_variables.R:57:7: style: Trailing whitespace is superfluous.
"A.12" 
      ^
NO COPY: inst/maintenance/global_variables.R:70:5: style: Trailing whitespace is superfluous.
"nT" 
    ^
NO COPY: inst/maintenance/global_variables.R:83:9: style: Trailing whitespace is superfluous.
"nTE.12" 
        ^
NO COPY: inst/maintenance/global_variables.R:96:6: style: Trailing whitespace is superfluous.
"nTE" 
     ^
NO COPY: inst/maintenance/global_variables.R:109:8: style: Trailing whitespace is superfluous.
"RF.12" 
       ^
NO COPY: inst/maintenance/global_variables.R:123:5: style: Trailing whitespace is superfluous.
"RF" 
    ^
NO COPY: inst/maintenance/global_variables.R:167:79: style: Trailing whitespace is superfluous.
save(list = c("COLORS_BWI", "A", "A.12", "nT", "nTE.12", "nTE", "RF.12", "RF", 
                                                                              ^
NO COPY: inst/maintenance/global_variables.R:168:65: style: Trailing whitespace is superfluous.
              "bagr.bwi", "BAGR.BWI", "bagr.list", "BAGR.LIST"), 
                                                                ^
NO COPY: inst/maintenance/global_variables.R:180:1: style: Trailing blank lines are superfluous.

^
NO COPY: R/adapt_script.R:23:54: style: Trailing whitespace is superfluous.
adapt_script <- function(file_names = NA, path = ".", 
                                                     ^
NO COPY: R/adapt_script.R:25:61: style: Trailing whitespace is superfluous.
                         all.files = TRUE, recursive = TRUE, 
                                                            ^
NO COPY: R/adapt_script.R:30:67: style: Trailing whitespace is superfluous.
    file_names <- find_files(file_names = file_names, path = path, 
                                                                  ^
NO COPY: R/adapt_script.R:31:71: style: Trailing whitespace is superfluous.
                             pattern = pattern, all.files = all.files, 
                                                                      ^
NO COPY: R/adapt_script.R:40:63: style: Trailing whitespace is superfluous.
            dependencies <- c('library("bundeswaldinventur")', 
                                                              ^
NO COPY: R/adapt_script.R:41:70: style: Trailing whitespace is superfluous.
                              'library("xtable")', 'library("plyr")', 
                                                                     ^
NO COPY: R/adapt_script.R:44:40: style: Trailing whitespace is superfluous.
            header <- s[seq_len(i - 1)]  
                                       ^~
NO COPY: R/adapt_script.R:45:73: style: Trailing whitespace is superfluous.
            bottom <- s[seq.int(from = (i + 1), to = length(s), by = 1)]  
                                                                        ^~
NO COPY: R/adapt_script.R:48:58: style: Trailing whitespace is superfluous.
            s <- s[ - c(grep("^\\ *provide_data().*", s), 
                                                         ^
NO COPY: R/adapt_script.R:49:65: style: Trailing whitespace is superfluous.
                        grep("^\\ *provide_statistics().*", s))] 
                                                                ^
NO COPY: R/adapt_script.R:51:56: style: Trailing whitespace is superfluous.
                s <- s[ - grep("^options\\(warn=2\\)$", 
                                                       ^
NO COPY: R/adapt_script.R:58:74: style: Trailing whitespace is superfluous.
                    if (isTRUE(verbose)) message("backed up ", file_name, 
                                                                         ^
NO COPY: R/adapt_script.R:72:1: style: Trailing blank lines are superfluous.

^
NO COPY: R/adapt_script.R:73:1: style: Trailing blank lines are superfluous.

^
NO COPY: R/batch.R:3:1: style: Use two spaces to indent, never tabs.
	      get_Rscript_script_path()
^
NO COPY: R/batch.R:4:1: style: Use two spaces to indent, never tabs.
	      )
^
NO COPY: R/batch.R:8:1: style: Use two spaces to indent, never tabs.
				paste(get_script_name(), type, sep = '_')
^~~~
NO COPY: R/batch.R:9:1: style: Use two spaces to indent, never tabs.
				)
^~~~
NO COPY: R/batch.R:22:33: style: Put spaces around all infix operators.
    path <- r_call[which(r_call =='-f') + 1] 
                                ^~~
NO COPY: R/batch.R:22:35: style: Only use double-quotes.
    path <- r_call[which(r_call =='-f') + 1] 
                                  ^~~~
NO COPY: R/batch.R:22:45: style: Trailing whitespace is superfluous.
    path <- r_call[which(r_call =='-f') + 1] 
                                            ^
NO COPY: R/batch.R:35:17: style: Only use double-quotes.
    path <- sub('--file=', '', r_call[grep('--file', r_call)])
                ^~~~~~~~~
NO COPY: R/batch.R:35:28: style: Only use double-quotes.
    path <- sub('--file=', '', r_call[grep('--file', r_call)])
                           ^~
NO COPY: R/batch.R:35:44: style: Only use double-quotes.
    path <- sub('--file=', '', r_call[grep('--file', r_call)])
                                           ^~~~~~~~
NO COPY: R/batch.R:68:39: style: Only use double-quotes.
get_script_name <- function(default = 'interactive_R_session') {
                                      ^~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/batch.R:104:45: style: Only use double-quotes.
provide_output_directory <- function(type = 'graphics', path  = '.') {
                                            ^~~~~~~~~~
NO COPY: R/batch.R:104:65: style: Only use double-quotes.
provide_output_directory <- function(type = 'graphics', path  = '.') {
                                                                ^~~
NO COPY: R/batch.R:109:5: warning: local variable 'status' assigned but may not be used
    status <- FALSE
    ^~~~~~
NO COPY: R/batch.R:110:33: style: Commas should never have a space before.
    directory <- file.path(path , 
                               ~^
NO COPY: R/batch.R:110:34: style: Trailing whitespace is superfluous.
    directory <- file.path(path , 
                                 ^
NO COPY: R/batch.R:111:70: style: Only use double-quotes.
				paste(get_script_name(), type, sep = '_')
                                                                     ^~~
NO COPY: R/batch.R:113:35: style: Only use double-quotes.
    directory_name <- paste(type, 'directory', sep = '_')
                                  ^~~~~~~~~~~
NO COPY: R/batch.R:113:54: style: Only use double-quotes.
    directory_name <- paste(type, 'directory', sep = '_')
                                                     ^~~
NO COPY: R/batch.R:119:1: style: Trailing blank lines are superfluous.

^
NO COPY: R/bits_and_pieces.R:5:16: style: Use two spaces to indent, never tabs.
    tmp_data <-	rbind(data_frame, sum_label = colSums(data_frame))
               ^
NO COPY: R/bits_and_pieces.R:14:30: style: Only use double-quotes.
    if (german) sum_label <- 'Summe' else sum_label  <- 'Sum'
                             ^~~~~~~
NO COPY: R/bits_and_pieces.R:14:57: style: Only use double-quotes.
    if (german) sum_label <- 'Summe' else sum_label  <- 'Sum'
                                                        ^~~~~
NO COPY: R/bits_and_pieces.R:63:1: style: lines should not be more than 80 characters.
    to_eval <- paste0("data_frame[data_frame[,'", variable, "']", " ", operator, 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/bits_and_pieces.R:63:81: style: Trailing whitespace is superfluous.
    to_eval <- paste0("data_frame[data_frame[,'", variable, "']", " ", operator, 
                                                                                ^
NO COPY: R/bits_and_pieces.R:64:28: style: Commas should always have a space after.
                       " ",limit, ", '", variable, "'] <- ", limit)
                           ^
NO COPY: R/bits_and_pieces.R:82:42: style: Trailing whitespace is superfluous.
                     "1" = "1987 - 2002", 
                                         ^
NO COPY: R/bits_and_pieces.R:83:42: style: Trailing whitespace is superfluous.
                     "2" = "2002 - 2012", 
                                         ^
NO COPY: R/BWI3_HR_Landkreis.R:27:44: style: Trailing whitespace is superfluous.
flaechen.kreis.fun.1 <- function(kreiscode, 
                                           ^
NO COPY: R/BWI3_HR_Landkreis.R:41:31: style: Variable and function names should be all lowercase.
    krs.list <- unique(kreise$codeKreis)
                              ^~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:42:42: style: Variable and function names should be all lowercase.
  i <- as.numeric(rownames(kreise[kreise$codeKreis==kreiscode,]))
                                         ^~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:42:51: style: Put spaces around all infix operators.
  i <- as.numeric(rownames(kreise[kreise$codeKreis==kreiscode,]))
                                                 ~^~~
NO COPY: R/BWI3_HR_Landkreis.R:42:63: style: Commas should always have a space after.
  i <- as.numeric(rownames(kreise[kreise$codeKreis==kreiscode,]))
                                                              ^
NO COPY: R/BWI3_HR_Landkreis.R:45:31: style: Put spaces around all infix operators.
        fl.stratum.fun(list(Wa=c(3,4,5),Kreis=krs.list[i]),ecken.3,trakte.3,A))
                             ~^~
NO COPY: R/BWI3_HR_Landkreis.R:45:36: style: Commas should always have a space after.
        fl.stratum.fun(list(Wa=c(3,4,5),Kreis=krs.list[i]),ecken.3,trakte.3,A))
                                   ^
NO COPY: R/BWI3_HR_Landkreis.R:45:38: style: Commas should always have a space after.
        fl.stratum.fun(list(Wa=c(3,4,5),Kreis=krs.list[i]),ecken.3,trakte.3,A))
                                     ^
NO COPY: R/BWI3_HR_Landkreis.R:45:41: style: Commas should always have a space after.
        fl.stratum.fun(list(Wa=c(3,4,5),Kreis=krs.list[i]),ecken.3,trakte.3,A))
                                        ^
NO COPY: R/BWI3_HR_Landkreis.R:45:46: style: Put spaces around all infix operators.
        fl.stratum.fun(list(Wa=c(3,4,5),Kreis=krs.list[i]),ecken.3,trakte.3,A))
                                            ~^~
NO COPY: R/BWI3_HR_Landkreis.R:45:60: style: Commas should always have a space after.
        fl.stratum.fun(list(Wa=c(3,4,5),Kreis=krs.list[i]),ecken.3,trakte.3,A))
                                                           ^
NO COPY: R/BWI3_HR_Landkreis.R:45:68: style: Commas should always have a space after.
        fl.stratum.fun(list(Wa=c(3,4,5),Kreis=krs.list[i]),ecken.3,trakte.3,A))
                                                                   ^
NO COPY: R/BWI3_HR_Landkreis.R:45:77: style: Commas should always have a space after.
        fl.stratum.fun(list(Wa=c(3,4,5),Kreis=krs.list[i]),ecken.3,trakte.3,A))
                                                                            ^
NO COPY: R/BWI3_HR_Landkreis.R:47:31: style: Put spaces around all infix operators.
        fl.stratum.fun(list(Wa=c(1:4),Kreis=krs.list[i]),ecken.2,trakte.2,A.12))
                             ~^~
NO COPY: R/BWI3_HR_Landkreis.R:47:39: style: Commas should always have a space after.
        fl.stratum.fun(list(Wa=c(1:4),Kreis=krs.list[i]),ecken.2,trakte.2,A.12))
                                      ^
NO COPY: R/BWI3_HR_Landkreis.R:47:44: style: Put spaces around all infix operators.
        fl.stratum.fun(list(Wa=c(1:4),Kreis=krs.list[i]),ecken.2,trakte.2,A.12))
                                          ~^~
NO COPY: R/BWI3_HR_Landkreis.R:47:58: style: Commas should always have a space after.
        fl.stratum.fun(list(Wa=c(1:4),Kreis=krs.list[i]),ecken.2,trakte.2,A.12))
                                                         ^
NO COPY: R/BWI3_HR_Landkreis.R:47:66: style: Commas should always have a space after.
        fl.stratum.fun(list(Wa=c(1:4),Kreis=krs.list[i]),ecken.2,trakte.2,A.12))
                                                                 ^
NO COPY: R/BWI3_HR_Landkreis.R:47:75: style: Commas should always have a space after.
        fl.stratum.fun(list(Wa=c(1:4),Kreis=krs.list[i]),ecken.2,trakte.2,A.12))
                                                                          ^
NO COPY: R/BWI3_HR_Landkreis.R:49:31: style: Put spaces around all infix operators.
        fl.stratum.fun(list(Wa=c(1:4),Kreis=krs.list[i]),ecken.1,trakte.1,A.12))
                             ~^~
NO COPY: R/BWI3_HR_Landkreis.R:49:39: style: Commas should always have a space after.
        fl.stratum.fun(list(Wa=c(1:4),Kreis=krs.list[i]),ecken.1,trakte.1,A.12))
                                      ^
NO COPY: R/BWI3_HR_Landkreis.R:49:44: style: Put spaces around all infix operators.
        fl.stratum.fun(list(Wa=c(1:4),Kreis=krs.list[i]),ecken.1,trakte.1,A.12))
                                          ~^~
NO COPY: R/BWI3_HR_Landkreis.R:49:58: style: Commas should always have a space after.
        fl.stratum.fun(list(Wa=c(1:4),Kreis=krs.list[i]),ecken.1,trakte.1,A.12))
                                                         ^
NO COPY: R/BWI3_HR_Landkreis.R:49:66: style: Commas should always have a space after.
        fl.stratum.fun(list(Wa=c(1:4),Kreis=krs.list[i]),ecken.1,trakte.1,A.12))
                                                                 ^
NO COPY: R/BWI3_HR_Landkreis.R:49:75: style: Commas should always have a space after.
        fl.stratum.fun(list(Wa=c(1:4),Kreis=krs.list[i]),ecken.1,trakte.1,A.12))
                                                                          ^
NO COPY: R/BWI3_HR_Landkreis.R:53:4: style: Words within variable and function names should be separated by '_' rather than '.'.
  (wfl.stw.3 <-
   ^~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:54:31: style: Put spaces around all infix operators.
        fl.stratum.fun(list(Wa=c(3,4,5),Kreis=krs.list[i],EigArt=c("BW","StW")),
                             ~^~
NO COPY: R/BWI3_HR_Landkreis.R:54:36: style: Commas should always have a space after.
        fl.stratum.fun(list(Wa=c(3,4,5),Kreis=krs.list[i],EigArt=c("BW","StW")),
                                   ^
NO COPY: R/BWI3_HR_Landkreis.R:54:38: style: Commas should always have a space after.
        fl.stratum.fun(list(Wa=c(3,4,5),Kreis=krs.list[i],EigArt=c("BW","StW")),
                                     ^
NO COPY: R/BWI3_HR_Landkreis.R:54:41: style: Commas should always have a space after.
        fl.stratum.fun(list(Wa=c(3,4,5),Kreis=krs.list[i],EigArt=c("BW","StW")),
                                        ^
NO COPY: R/BWI3_HR_Landkreis.R:54:46: style: Put spaces around all infix operators.
        fl.stratum.fun(list(Wa=c(3,4,5),Kreis=krs.list[i],EigArt=c("BW","StW")),
                                            ~^~
NO COPY: R/BWI3_HR_Landkreis.R:54:59: style: Commas should always have a space after.
        fl.stratum.fun(list(Wa=c(3,4,5),Kreis=krs.list[i],EigArt=c("BW","StW")),
                                                          ^
NO COPY: R/BWI3_HR_Landkreis.R:54:65: style: Put spaces around all infix operators.
        fl.stratum.fun(list(Wa=c(3,4,5),Kreis=krs.list[i],EigArt=c("BW","StW")),
                                                               ~^~
NO COPY: R/BWI3_HR_Landkreis.R:54:73: style: Commas should always have a space after.
        fl.stratum.fun(list(Wa=c(3,4,5),Kreis=krs.list[i],EigArt=c("BW","StW")),
                                                                        ^
NO COPY: R/BWI3_HR_Landkreis.R:55:31: style: Commas should always have a space after.
                      ecken.3,trakte.3,A))
                              ^
NO COPY: R/BWI3_HR_Landkreis.R:55:40: style: Commas should always have a space after.
                      ecken.3,trakte.3,A))
                                       ^
NO COPY: R/BWI3_HR_Landkreis.R:56:4: style: Words within variable and function names should be separated by '_' rather than '.'.
  (wfl.stw.2 <-
   ^~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:57:31: style: Put spaces around all infix operators.
        fl.stratum.fun(list(Wa=c(1:4),Kreis=krs.list[i],EigArt=c("BW","StW")),
                             ~^~
NO COPY: R/BWI3_HR_Landkreis.R:57:39: style: Commas should always have a space after.
        fl.stratum.fun(list(Wa=c(1:4),Kreis=krs.list[i],EigArt=c("BW","StW")),
                                      ^
NO COPY: R/BWI3_HR_Landkreis.R:57:44: style: Put spaces around all infix operators.
        fl.stratum.fun(list(Wa=c(1:4),Kreis=krs.list[i],EigArt=c("BW","StW")),
                                          ~^~
NO COPY: R/BWI3_HR_Landkreis.R:57:57: style: Commas should always have a space after.
        fl.stratum.fun(list(Wa=c(1:4),Kreis=krs.list[i],EigArt=c("BW","StW")),
                                                        ^
NO COPY: R/BWI3_HR_Landkreis.R:57:63: style: Put spaces around all infix operators.
        fl.stratum.fun(list(Wa=c(1:4),Kreis=krs.list[i],EigArt=c("BW","StW")),
                                                             ~^~
NO COPY: R/BWI3_HR_Landkreis.R:57:71: style: Commas should always have a space after.
        fl.stratum.fun(list(Wa=c(1:4),Kreis=krs.list[i],EigArt=c("BW","StW")),
                                                                      ^
NO COPY: R/BWI3_HR_Landkreis.R:58:31: style: Commas should always have a space after.
                      ecken.2,trakte.2,A.12))
                              ^
NO COPY: R/BWI3_HR_Landkreis.R:58:40: style: Commas should always have a space after.
                      ecken.2,trakte.2,A.12))
                                       ^
NO COPY: R/BWI3_HR_Landkreis.R:59:4: style: Words within variable and function names should be separated by '_' rather than '.'.
  (wfl.stw.1 <-
   ^~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:60:31: style: Put spaces around all infix operators.
        fl.stratum.fun(list(Wa=c(1:4),Kreis=krs.list[i],EigArt=c("BW","StW")),
                             ~^~
NO COPY: R/BWI3_HR_Landkreis.R:60:39: style: Commas should always have a space after.
        fl.stratum.fun(list(Wa=c(1:4),Kreis=krs.list[i],EigArt=c("BW","StW")),
                                      ^
NO COPY: R/BWI3_HR_Landkreis.R:60:44: style: Put spaces around all infix operators.
        fl.stratum.fun(list(Wa=c(1:4),Kreis=krs.list[i],EigArt=c("BW","StW")),
                                          ~^~
NO COPY: R/BWI3_HR_Landkreis.R:60:57: style: Commas should always have a space after.
        fl.stratum.fun(list(Wa=c(1:4),Kreis=krs.list[i],EigArt=c("BW","StW")),
                                                        ^
NO COPY: R/BWI3_HR_Landkreis.R:60:63: style: Put spaces around all infix operators.
        fl.stratum.fun(list(Wa=c(1:4),Kreis=krs.list[i],EigArt=c("BW","StW")),
                                                             ~^~
NO COPY: R/BWI3_HR_Landkreis.R:60:71: style: Commas should always have a space after.
        fl.stratum.fun(list(Wa=c(1:4),Kreis=krs.list[i],EigArt=c("BW","StW")),
                                                                      ^
NO COPY: R/BWI3_HR_Landkreis.R:61:31: style: Commas should always have a space after.
                      ecken.1,trakte.1,A.12))
                              ^
NO COPY: R/BWI3_HR_Landkreis.R:61:40: style: Commas should always have a space after.
                      ecken.1,trakte.1,A.12))
                                       ^
NO COPY: R/BWI3_HR_Landkreis.R:64:4: style: Words within variable and function names should be separated by '_' rather than '.'.
  (wfl.bw.3 <-
   ^~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:65:31: style: Put spaces around all infix operators.
        fl.stratum.fun(list(Wa=c(3,4,5),Kreis=krs.list[i],EigArt="BW"),
                             ~^~
NO COPY: R/BWI3_HR_Landkreis.R:65:36: style: Commas should always have a space after.
        fl.stratum.fun(list(Wa=c(3,4,5),Kreis=krs.list[i],EigArt="BW"),
                                   ^
NO COPY: R/BWI3_HR_Landkreis.R:65:38: style: Commas should always have a space after.
        fl.stratum.fun(list(Wa=c(3,4,5),Kreis=krs.list[i],EigArt="BW"),
                                     ^
NO COPY: R/BWI3_HR_Landkreis.R:65:41: style: Commas should always have a space after.
        fl.stratum.fun(list(Wa=c(3,4,5),Kreis=krs.list[i],EigArt="BW"),
                                        ^
NO COPY: R/BWI3_HR_Landkreis.R:65:46: style: Put spaces around all infix operators.
        fl.stratum.fun(list(Wa=c(3,4,5),Kreis=krs.list[i],EigArt="BW"),
                                            ~^~
NO COPY: R/BWI3_HR_Landkreis.R:65:59: style: Commas should always have a space after.
        fl.stratum.fun(list(Wa=c(3,4,5),Kreis=krs.list[i],EigArt="BW"),
                                                          ^
NO COPY: R/BWI3_HR_Landkreis.R:65:65: style: Put spaces around all infix operators.
        fl.stratum.fun(list(Wa=c(3,4,5),Kreis=krs.list[i],EigArt="BW"),
                                                               ~^~
NO COPY: R/BWI3_HR_Landkreis.R:66:31: style: Commas should always have a space after.
                      ecken.3,trakte.3,A))
                              ^
NO COPY: R/BWI3_HR_Landkreis.R:66:40: style: Commas should always have a space after.
                      ecken.3,trakte.3,A))
                                       ^
NO COPY: R/BWI3_HR_Landkreis.R:68:4: style: Words within variable and function names should be separated by '_' rather than '.'.
  (wfl.kw.3 <-
   ^~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:69:31: style: Put spaces around all infix operators.
        fl.stratum.fun(list(Wa=c(3,4,5),Kreis=krs.list[i],EigArt="KW"),
                             ~^~
NO COPY: R/BWI3_HR_Landkreis.R:69:36: style: Commas should always have a space after.
        fl.stratum.fun(list(Wa=c(3,4,5),Kreis=krs.list[i],EigArt="KW"),
                                   ^
NO COPY: R/BWI3_HR_Landkreis.R:69:38: style: Commas should always have a space after.
        fl.stratum.fun(list(Wa=c(3,4,5),Kreis=krs.list[i],EigArt="KW"),
                                     ^
NO COPY: R/BWI3_HR_Landkreis.R:69:41: style: Commas should always have a space after.
        fl.stratum.fun(list(Wa=c(3,4,5),Kreis=krs.list[i],EigArt="KW"),
                                        ^
NO COPY: R/BWI3_HR_Landkreis.R:69:46: style: Put spaces around all infix operators.
        fl.stratum.fun(list(Wa=c(3,4,5),Kreis=krs.list[i],EigArt="KW"),
                                            ~^~
NO COPY: R/BWI3_HR_Landkreis.R:69:59: style: Commas should always have a space after.
        fl.stratum.fun(list(Wa=c(3,4,5),Kreis=krs.list[i],EigArt="KW"),
                                                          ^
NO COPY: R/BWI3_HR_Landkreis.R:69:65: style: Put spaces around all infix operators.
        fl.stratum.fun(list(Wa=c(3,4,5),Kreis=krs.list[i],EigArt="KW"),
                                                               ~^~
NO COPY: R/BWI3_HR_Landkreis.R:70:31: style: Commas should always have a space after.
                      ecken.3,trakte.3,A))
                              ^
NO COPY: R/BWI3_HR_Landkreis.R:70:40: style: Commas should always have a space after.
                      ecken.3,trakte.3,A))
                                       ^
NO COPY: R/BWI3_HR_Landkreis.R:71:4: style: Words within variable and function names should be separated by '_' rather than '.'.
  (wfl.kw.2 <-
   ^~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:72:31: style: Put spaces around all infix operators.
        fl.stratum.fun(list(Wa=c(1:4),Kreis=krs.list[i],EigArt="KW"),
                             ~^~
NO COPY: R/BWI3_HR_Landkreis.R:72:39: style: Commas should always have a space after.
        fl.stratum.fun(list(Wa=c(1:4),Kreis=krs.list[i],EigArt="KW"),
                                      ^
NO COPY: R/BWI3_HR_Landkreis.R:72:44: style: Put spaces around all infix operators.
        fl.stratum.fun(list(Wa=c(1:4),Kreis=krs.list[i],EigArt="KW"),
                                          ~^~
NO COPY: R/BWI3_HR_Landkreis.R:72:57: style: Commas should always have a space after.
        fl.stratum.fun(list(Wa=c(1:4),Kreis=krs.list[i],EigArt="KW"),
                                                        ^
NO COPY: R/BWI3_HR_Landkreis.R:72:63: style: Put spaces around all infix operators.
        fl.stratum.fun(list(Wa=c(1:4),Kreis=krs.list[i],EigArt="KW"),
                                                             ~^~
NO COPY: R/BWI3_HR_Landkreis.R:73:31: style: Commas should always have a space after.
                      ecken.2,trakte.2,A.12))
                              ^
NO COPY: R/BWI3_HR_Landkreis.R:73:40: style: Commas should always have a space after.
                      ecken.2,trakte.2,A.12))
                                       ^
NO COPY: R/BWI3_HR_Landkreis.R:74:4: style: Words within variable and function names should be separated by '_' rather than '.'.
  (wfl.kw.1 <-
   ^~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:75:31: style: Put spaces around all infix operators.
        fl.stratum.fun(list(Wa=c(1:4),Kreis=krs.list[i],EigArt="KW"),
                             ~^~
NO COPY: R/BWI3_HR_Landkreis.R:75:39: style: Commas should always have a space after.
        fl.stratum.fun(list(Wa=c(1:4),Kreis=krs.list[i],EigArt="KW"),
                                      ^
NO COPY: R/BWI3_HR_Landkreis.R:75:44: style: Put spaces around all infix operators.
        fl.stratum.fun(list(Wa=c(1:4),Kreis=krs.list[i],EigArt="KW"),
                                          ~^~
NO COPY: R/BWI3_HR_Landkreis.R:75:57: style: Commas should always have a space after.
        fl.stratum.fun(list(Wa=c(1:4),Kreis=krs.list[i],EigArt="KW"),
                                                        ^
NO COPY: R/BWI3_HR_Landkreis.R:75:63: style: Put spaces around all infix operators.
        fl.stratum.fun(list(Wa=c(1:4),Kreis=krs.list[i],EigArt="KW"),
                                                             ~^~
NO COPY: R/BWI3_HR_Landkreis.R:76:31: style: Commas should always have a space after.
                      ecken.1,trakte.1,A.12))
                              ^
NO COPY: R/BWI3_HR_Landkreis.R:76:40: style: Commas should always have a space after.
                      ecken.1,trakte.1,A.12))
                                       ^
NO COPY: R/BWI3_HR_Landkreis.R:78:4: style: Words within variable and function names should be separated by '_' rather than '.'.
  (wfl.oew.3 <-
   ^~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:79:31: style: Put spaces around all infix operators.
        fl.stratum.fun(list(Wa=c(3,4,5),Kreis=krs.list[i],
                             ~^~
NO COPY: R/BWI3_HR_Landkreis.R:79:36: style: Commas should always have a space after.
        fl.stratum.fun(list(Wa=c(3,4,5),Kreis=krs.list[i],
                                   ^
NO COPY: R/BWI3_HR_Landkreis.R:79:38: style: Commas should always have a space after.
        fl.stratum.fun(list(Wa=c(3,4,5),Kreis=krs.list[i],
                                     ^
NO COPY: R/BWI3_HR_Landkreis.R:79:41: style: Commas should always have a space after.
        fl.stratum.fun(list(Wa=c(3,4,5),Kreis=krs.list[i],
                                        ^
NO COPY: R/BWI3_HR_Landkreis.R:79:46: style: Put spaces around all infix operators.
        fl.stratum.fun(list(Wa=c(3,4,5),Kreis=krs.list[i],
                                            ~^~
NO COPY: R/BWI3_HR_Landkreis.R:80:23: style: Put spaces around all infix operators.
                EigArt=c("BW","StW","KW")), ecken.3,trakte.3,A))
                     ~^~
NO COPY: R/BWI3_HR_Landkreis.R:80:31: style: Commas should always have a space after.
                EigArt=c("BW","StW","KW")), ecken.3,trakte.3,A))
                              ^
NO COPY: R/BWI3_HR_Landkreis.R:80:37: style: Commas should always have a space after.
                EigArt=c("BW","StW","KW")), ecken.3,trakte.3,A))
                                    ^
NO COPY: R/BWI3_HR_Landkreis.R:80:53: style: Commas should always have a space after.
                EigArt=c("BW","StW","KW")), ecken.3,trakte.3,A))
                                                    ^
NO COPY: R/BWI3_HR_Landkreis.R:80:62: style: Commas should always have a space after.
                EigArt=c("BW","StW","KW")), ecken.3,trakte.3,A))
                                                             ^
NO COPY: R/BWI3_HR_Landkreis.R:81:4: style: Words within variable and function names should be separated by '_' rather than '.'.
  (wfl.oew.2 <-
   ^~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:82:31: style: Put spaces around all infix operators.
        fl.stratum.fun(list(Wa=c(1:4),Kreis=krs.list[i],
                             ~^~
NO COPY: R/BWI3_HR_Landkreis.R:82:39: style: Commas should always have a space after.
        fl.stratum.fun(list(Wa=c(1:4),Kreis=krs.list[i],
                                      ^
NO COPY: R/BWI3_HR_Landkreis.R:82:44: style: Put spaces around all infix operators.
        fl.stratum.fun(list(Wa=c(1:4),Kreis=krs.list[i],
                                          ~^~
NO COPY: R/BWI3_HR_Landkreis.R:83:23: style: Put spaces around all infix operators.
                EigArt=c("BW","StW","KW")), ecken.2,trakte.2,A.12))
                     ~^~
NO COPY: R/BWI3_HR_Landkreis.R:83:31: style: Commas should always have a space after.
                EigArt=c("BW","StW","KW")), ecken.2,trakte.2,A.12))
                              ^
NO COPY: R/BWI3_HR_Landkreis.R:83:37: style: Commas should always have a space after.
                EigArt=c("BW","StW","KW")), ecken.2,trakte.2,A.12))
                                    ^
NO COPY: R/BWI3_HR_Landkreis.R:83:53: style: Commas should always have a space after.
                EigArt=c("BW","StW","KW")), ecken.2,trakte.2,A.12))
                                                    ^
NO COPY: R/BWI3_HR_Landkreis.R:83:62: style: Commas should always have a space after.
                EigArt=c("BW","StW","KW")), ecken.2,trakte.2,A.12))
                                                             ^
NO COPY: R/BWI3_HR_Landkreis.R:84:4: style: Words within variable and function names should be separated by '_' rather than '.'.
  (wfl.oew.1 <-
   ^~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:85:31: style: Put spaces around all infix operators.
        fl.stratum.fun(list(Wa=c(1:4),Kreis=krs.list[i],
                             ~^~
NO COPY: R/BWI3_HR_Landkreis.R:85:39: style: Commas should always have a space after.
        fl.stratum.fun(list(Wa=c(1:4),Kreis=krs.list[i],
                                      ^
NO COPY: R/BWI3_HR_Landkreis.R:85:44: style: Put spaces around all infix operators.
        fl.stratum.fun(list(Wa=c(1:4),Kreis=krs.list[i],
                                          ~^~
NO COPY: R/BWI3_HR_Landkreis.R:86:23: style: Put spaces around all infix operators.
                EigArt=c("BW","StW","KW")), ecken.1,trakte.1,A.12))
                     ~^~
NO COPY: R/BWI3_HR_Landkreis.R:86:31: style: Commas should always have a space after.
                EigArt=c("BW","StW","KW")), ecken.1,trakte.1,A.12))
                              ^
NO COPY: R/BWI3_HR_Landkreis.R:86:37: style: Commas should always have a space after.
                EigArt=c("BW","StW","KW")), ecken.1,trakte.1,A.12))
                                    ^
NO COPY: R/BWI3_HR_Landkreis.R:86:53: style: Commas should always have a space after.
                EigArt=c("BW","StW","KW")), ecken.1,trakte.1,A.12))
                                                    ^
NO COPY: R/BWI3_HR_Landkreis.R:86:62: style: Commas should always have a space after.
                EigArt=c("BW","StW","KW")), ecken.1,trakte.1,A.12))
                                                             ^
NO COPY: R/BWI3_HR_Landkreis.R:89:4: style: Words within variable and function names should be separated by '_' rather than '.'.
  (wfl.pw.3 <-
   ^~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:90:31: style: Put spaces around all infix operators.
        fl.stratum.fun(list(Wa=c(3,4,5),Kreis=krs.list[i],EigArt="PW"),
                             ~^~
NO COPY: R/BWI3_HR_Landkreis.R:90:36: style: Commas should always have a space after.
        fl.stratum.fun(list(Wa=c(3,4,5),Kreis=krs.list[i],EigArt="PW"),
                                   ^
NO COPY: R/BWI3_HR_Landkreis.R:90:38: style: Commas should always have a space after.
        fl.stratum.fun(list(Wa=c(3,4,5),Kreis=krs.list[i],EigArt="PW"),
                                     ^
NO COPY: R/BWI3_HR_Landkreis.R:90:41: style: Commas should always have a space after.
        fl.stratum.fun(list(Wa=c(3,4,5),Kreis=krs.list[i],EigArt="PW"),
                                        ^
NO COPY: R/BWI3_HR_Landkreis.R:90:46: style: Put spaces around all infix operators.
        fl.stratum.fun(list(Wa=c(3,4,5),Kreis=krs.list[i],EigArt="PW"),
                                            ~^~
NO COPY: R/BWI3_HR_Landkreis.R:90:59: style: Commas should always have a space after.
        fl.stratum.fun(list(Wa=c(3,4,5),Kreis=krs.list[i],EigArt="PW"),
                                                          ^
NO COPY: R/BWI3_HR_Landkreis.R:90:65: style: Put spaces around all infix operators.
        fl.stratum.fun(list(Wa=c(3,4,5),Kreis=krs.list[i],EigArt="PW"),
                                                               ~^~
NO COPY: R/BWI3_HR_Landkreis.R:91:31: style: Commas should always have a space after.
                      ecken.3,trakte.3,A))
                              ^
NO COPY: R/BWI3_HR_Landkreis.R:91:40: style: Commas should always have a space after.
                      ecken.3,trakte.3,A))
                                       ^
NO COPY: R/BWI3_HR_Landkreis.R:92:4: style: Words within variable and function names should be separated by '_' rather than '.'.
  (wfl.pw.2 <-
   ^~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:93:31: style: Put spaces around all infix operators.
        fl.stratum.fun(list(Wa=c(1:4),Kreis=krs.list[i],EigArt="PW"),
                             ~^~
NO COPY: R/BWI3_HR_Landkreis.R:93:39: style: Commas should always have a space after.
        fl.stratum.fun(list(Wa=c(1:4),Kreis=krs.list[i],EigArt="PW"),
                                      ^
NO COPY: R/BWI3_HR_Landkreis.R:93:44: style: Put spaces around all infix operators.
        fl.stratum.fun(list(Wa=c(1:4),Kreis=krs.list[i],EigArt="PW"),
                                          ~^~
NO COPY: R/BWI3_HR_Landkreis.R:93:57: style: Commas should always have a space after.
        fl.stratum.fun(list(Wa=c(1:4),Kreis=krs.list[i],EigArt="PW"),
                                                        ^
NO COPY: R/BWI3_HR_Landkreis.R:93:63: style: Put spaces around all infix operators.
        fl.stratum.fun(list(Wa=c(1:4),Kreis=krs.list[i],EigArt="PW"),
                                                             ~^~
NO COPY: R/BWI3_HR_Landkreis.R:94:31: style: Commas should always have a space after.
                      ecken.2,trakte.2,A.12))
                              ^
NO COPY: R/BWI3_HR_Landkreis.R:94:40: style: Commas should always have a space after.
                      ecken.2,trakte.2,A.12))
                                       ^
NO COPY: R/BWI3_HR_Landkreis.R:95:4: style: Words within variable and function names should be separated by '_' rather than '.'.
  (wfl.pw.1 <-
   ^~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:96:31: style: Put spaces around all infix operators.
        fl.stratum.fun(list(Wa=c(1:4),Kreis=krs.list[i],EigArt="PW"),
                             ~^~
NO COPY: R/BWI3_HR_Landkreis.R:96:39: style: Commas should always have a space after.
        fl.stratum.fun(list(Wa=c(1:4),Kreis=krs.list[i],EigArt="PW"),
                                      ^
NO COPY: R/BWI3_HR_Landkreis.R:96:44: style: Put spaces around all infix operators.
        fl.stratum.fun(list(Wa=c(1:4),Kreis=krs.list[i],EigArt="PW"),
                                          ~^~
NO COPY: R/BWI3_HR_Landkreis.R:96:57: style: Commas should always have a space after.
        fl.stratum.fun(list(Wa=c(1:4),Kreis=krs.list[i],EigArt="PW"),
                                                        ^
NO COPY: R/BWI3_HR_Landkreis.R:96:63: style: Put spaces around all infix operators.
        fl.stratum.fun(list(Wa=c(1:4),Kreis=krs.list[i],EigArt="PW"),
                                                             ~^~
NO COPY: R/BWI3_HR_Landkreis.R:97:31: style: Commas should always have a space after.
                      ecken.1,trakte.1,A.12))
                              ^
NO COPY: R/BWI3_HR_Landkreis.R:97:40: style: Commas should always have a space after.
                      ecken.1,trakte.1,A.12))
                                       ^
NO COPY: R/BWI3_HR_Landkreis.R:100:4: style: Words within variable and function names should be separated by '_' rather than '.'.
  (wfl.gpw.3 <-
   ^~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:101:31: style: Put spaces around all infix operators.
        fl.stratum.fun(list(Wa=c(3,4,5),Kreis=krs.list[i],EigArt2="GPW"),
                             ~^~
NO COPY: R/BWI3_HR_Landkreis.R:101:36: style: Commas should always have a space after.
        fl.stratum.fun(list(Wa=c(3,4,5),Kreis=krs.list[i],EigArt2="GPW"),
                                   ^
NO COPY: R/BWI3_HR_Landkreis.R:101:38: style: Commas should always have a space after.
        fl.stratum.fun(list(Wa=c(3,4,5),Kreis=krs.list[i],EigArt2="GPW"),
                                     ^
NO COPY: R/BWI3_HR_Landkreis.R:101:41: style: Commas should always have a space after.
        fl.stratum.fun(list(Wa=c(3,4,5),Kreis=krs.list[i],EigArt2="GPW"),
                                        ^
NO COPY: R/BWI3_HR_Landkreis.R:101:46: style: Put spaces around all infix operators.
        fl.stratum.fun(list(Wa=c(3,4,5),Kreis=krs.list[i],EigArt2="GPW"),
                                            ~^~
NO COPY: R/BWI3_HR_Landkreis.R:101:59: style: Commas should always have a space after.
        fl.stratum.fun(list(Wa=c(3,4,5),Kreis=krs.list[i],EigArt2="GPW"),
                                                          ^
NO COPY: R/BWI3_HR_Landkreis.R:101:66: style: Put spaces around all infix operators.
        fl.stratum.fun(list(Wa=c(3,4,5),Kreis=krs.list[i],EigArt2="GPW"),
                                                                ~^~
NO COPY: R/BWI3_HR_Landkreis.R:102:31: style: Commas should always have a space after.
                      ecken.3,trakte.3,A))
                              ^
NO COPY: R/BWI3_HR_Landkreis.R:102:40: style: Commas should always have a space after.
                      ecken.3,trakte.3,A))
                                       ^
NO COPY: R/BWI3_HR_Landkreis.R:103:4: style: Words within variable and function names should be separated by '_' rather than '.'.
  (wfl.gpw.2 <-
   ^~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:104:31: style: Put spaces around all infix operators.
        fl.stratum.fun(list(Wa=c(1:4),Kreis=krs.list[i],EigArt2="GPW"),
                             ~^~
NO COPY: R/BWI3_HR_Landkreis.R:104:39: style: Commas should always have a space after.
        fl.stratum.fun(list(Wa=c(1:4),Kreis=krs.list[i],EigArt2="GPW"),
                                      ^
NO COPY: R/BWI3_HR_Landkreis.R:104:44: style: Put spaces around all infix operators.
        fl.stratum.fun(list(Wa=c(1:4),Kreis=krs.list[i],EigArt2="GPW"),
                                          ~^~
NO COPY: R/BWI3_HR_Landkreis.R:104:57: style: Commas should always have a space after.
        fl.stratum.fun(list(Wa=c(1:4),Kreis=krs.list[i],EigArt2="GPW"),
                                                        ^
NO COPY: R/BWI3_HR_Landkreis.R:104:64: style: Put spaces around all infix operators.
        fl.stratum.fun(list(Wa=c(1:4),Kreis=krs.list[i],EigArt2="GPW"),
                                                              ~^~
NO COPY: R/BWI3_HR_Landkreis.R:105:31: style: Commas should always have a space after.
                      ecken.2,trakte.2,A.12))
                              ^
NO COPY: R/BWI3_HR_Landkreis.R:105:40: style: Commas should always have a space after.
                      ecken.2,trakte.2,A.12))
                                       ^
NO COPY: R/BWI3_HR_Landkreis.R:106:4: style: Words within variable and function names should be separated by '_' rather than '.'.
  (wfl.gpw.1 <-
   ^~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:107:31: style: Put spaces around all infix operators.
        fl.stratum.fun(list(Wa=c(1:4),Kreis=krs.list[i],EigArt2="GPW"),
                             ~^~
NO COPY: R/BWI3_HR_Landkreis.R:107:39: style: Commas should always have a space after.
        fl.stratum.fun(list(Wa=c(1:4),Kreis=krs.list[i],EigArt2="GPW"),
                                      ^
NO COPY: R/BWI3_HR_Landkreis.R:107:44: style: Put spaces around all infix operators.
        fl.stratum.fun(list(Wa=c(1:4),Kreis=krs.list[i],EigArt2="GPW"),
                                          ~^~
NO COPY: R/BWI3_HR_Landkreis.R:107:57: style: Commas should always have a space after.
        fl.stratum.fun(list(Wa=c(1:4),Kreis=krs.list[i],EigArt2="GPW"),
                                                        ^
NO COPY: R/BWI3_HR_Landkreis.R:107:64: style: Put spaces around all infix operators.
        fl.stratum.fun(list(Wa=c(1:4),Kreis=krs.list[i],EigArt2="GPW"),
                                                              ~^~
NO COPY: R/BWI3_HR_Landkreis.R:108:31: style: Commas should always have a space after.
                      ecken.1,trakte.1,A.12))
                              ^
NO COPY: R/BWI3_HR_Landkreis.R:108:40: style: Commas should always have a space after.
                      ecken.1,trakte.1,A.12))
                                       ^
NO COPY: R/BWI3_HR_Landkreis.R:110:4: style: Words within variable and function names should be separated by '_' rather than '.'.
  (wfl.mpw.3 <-
   ^~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:111:31: style: Put spaces around all infix operators.
        fl.stratum.fun(list(Wa=c(3,4,5),Kreis=krs.list[i],EigArt2="MPW"),
                             ~^~
NO COPY: R/BWI3_HR_Landkreis.R:111:36: style: Commas should always have a space after.
        fl.stratum.fun(list(Wa=c(3,4,5),Kreis=krs.list[i],EigArt2="MPW"),
                                   ^
NO COPY: R/BWI3_HR_Landkreis.R:111:38: style: Commas should always have a space after.
        fl.stratum.fun(list(Wa=c(3,4,5),Kreis=krs.list[i],EigArt2="MPW"),
                                     ^
NO COPY: R/BWI3_HR_Landkreis.R:111:41: style: Commas should always have a space after.
        fl.stratum.fun(list(Wa=c(3,4,5),Kreis=krs.list[i],EigArt2="MPW"),
                                        ^
NO COPY: R/BWI3_HR_Landkreis.R:111:46: style: Put spaces around all infix operators.
        fl.stratum.fun(list(Wa=c(3,4,5),Kreis=krs.list[i],EigArt2="MPW"),
                                            ~^~
NO COPY: R/BWI3_HR_Landkreis.R:111:59: style: Commas should always have a space after.
        fl.stratum.fun(list(Wa=c(3,4,5),Kreis=krs.list[i],EigArt2="MPW"),
                                                          ^
NO COPY: R/BWI3_HR_Landkreis.R:111:66: style: Put spaces around all infix operators.
        fl.stratum.fun(list(Wa=c(3,4,5),Kreis=krs.list[i],EigArt2="MPW"),
                                                                ~^~
NO COPY: R/BWI3_HR_Landkreis.R:112:31: style: Commas should always have a space after.
                      ecken.3,trakte.3,A))
                              ^
NO COPY: R/BWI3_HR_Landkreis.R:112:40: style: Commas should always have a space after.
                      ecken.3,trakte.3,A))
                                       ^
NO COPY: R/BWI3_HR_Landkreis.R:113:4: style: Words within variable and function names should be separated by '_' rather than '.'.
  (wfl.mpw.2 <-
   ^~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:114:31: style: Put spaces around all infix operators.
        fl.stratum.fun(list(Wa=c(1:4),Kreis=krs.list[i],EigArt2="MPW"),
                             ~^~
NO COPY: R/BWI3_HR_Landkreis.R:114:39: style: Commas should always have a space after.
        fl.stratum.fun(list(Wa=c(1:4),Kreis=krs.list[i],EigArt2="MPW"),
                                      ^
NO COPY: R/BWI3_HR_Landkreis.R:114:44: style: Put spaces around all infix operators.
        fl.stratum.fun(list(Wa=c(1:4),Kreis=krs.list[i],EigArt2="MPW"),
                                          ~^~
NO COPY: R/BWI3_HR_Landkreis.R:114:57: style: Commas should always have a space after.
        fl.stratum.fun(list(Wa=c(1:4),Kreis=krs.list[i],EigArt2="MPW"),
                                                        ^
NO COPY: R/BWI3_HR_Landkreis.R:114:64: style: Put spaces around all infix operators.
        fl.stratum.fun(list(Wa=c(1:4),Kreis=krs.list[i],EigArt2="MPW"),
                                                              ~^~
NO COPY: R/BWI3_HR_Landkreis.R:115:31: style: Commas should always have a space after.
                      ecken.2,trakte.2,A.12))
                              ^
NO COPY: R/BWI3_HR_Landkreis.R:115:40: style: Commas should always have a space after.
                      ecken.2,trakte.2,A.12))
                                       ^
NO COPY: R/BWI3_HR_Landkreis.R:116:4: style: Words within variable and function names should be separated by '_' rather than '.'.
  (wfl.mpw.1 <-
   ^~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:117:31: style: Put spaces around all infix operators.
        fl.stratum.fun(list(Wa=c(1:4),Kreis=krs.list[i],EigArt2="MPW"),
                             ~^~
NO COPY: R/BWI3_HR_Landkreis.R:117:39: style: Commas should always have a space after.
        fl.stratum.fun(list(Wa=c(1:4),Kreis=krs.list[i],EigArt2="MPW"),
                                      ^
NO COPY: R/BWI3_HR_Landkreis.R:117:44: style: Put spaces around all infix operators.
        fl.stratum.fun(list(Wa=c(1:4),Kreis=krs.list[i],EigArt2="MPW"),
                                          ~^~
NO COPY: R/BWI3_HR_Landkreis.R:117:57: style: Commas should always have a space after.
        fl.stratum.fun(list(Wa=c(1:4),Kreis=krs.list[i],EigArt2="MPW"),
                                                        ^
NO COPY: R/BWI3_HR_Landkreis.R:117:64: style: Put spaces around all infix operators.
        fl.stratum.fun(list(Wa=c(1:4),Kreis=krs.list[i],EigArt2="MPW"),
                                                              ~^~
NO COPY: R/BWI3_HR_Landkreis.R:118:31: style: Commas should always have a space after.
                      ecken.1,trakte.1,A.12))
                              ^
NO COPY: R/BWI3_HR_Landkreis.R:118:40: style: Commas should always have a space after.
                      ecken.1,trakte.1,A.12))
                                       ^
NO COPY: R/BWI3_HR_Landkreis.R:121:4: style: Words within variable and function names should be separated by '_' rather than '.'.
  (wfl.kpw.3 <-
   ^~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:122:31: style: Put spaces around all infix operators.
        fl.stratum.fun(list(Wa=c(3,4,5),Kreis=krs.list[i],EigArt2="KPW"),
                             ~^~
NO COPY: R/BWI3_HR_Landkreis.R:122:36: style: Commas should always have a space after.
        fl.stratum.fun(list(Wa=c(3,4,5),Kreis=krs.list[i],EigArt2="KPW"),
                                   ^
NO COPY: R/BWI3_HR_Landkreis.R:122:38: style: Commas should always have a space after.
        fl.stratum.fun(list(Wa=c(3,4,5),Kreis=krs.list[i],EigArt2="KPW"),
                                     ^
NO COPY: R/BWI3_HR_Landkreis.R:122:41: style: Commas should always have a space after.
        fl.stratum.fun(list(Wa=c(3,4,5),Kreis=krs.list[i],EigArt2="KPW"),
                                        ^
NO COPY: R/BWI3_HR_Landkreis.R:122:46: style: Put spaces around all infix operators.
        fl.stratum.fun(list(Wa=c(3,4,5),Kreis=krs.list[i],EigArt2="KPW"),
                                            ~^~
NO COPY: R/BWI3_HR_Landkreis.R:122:59: style: Commas should always have a space after.
        fl.stratum.fun(list(Wa=c(3,4,5),Kreis=krs.list[i],EigArt2="KPW"),
                                                          ^
NO COPY: R/BWI3_HR_Landkreis.R:122:66: style: Put spaces around all infix operators.
        fl.stratum.fun(list(Wa=c(3,4,5),Kreis=krs.list[i],EigArt2="KPW"),
                                                                ~^~
NO COPY: R/BWI3_HR_Landkreis.R:123:31: style: Commas should always have a space after.
                      ecken.3,trakte.3,A))
                              ^
NO COPY: R/BWI3_HR_Landkreis.R:123:40: style: Commas should always have a space after.
                      ecken.3,trakte.3,A))
                                       ^
NO COPY: R/BWI3_HR_Landkreis.R:124:4: style: Words within variable and function names should be separated by '_' rather than '.'.
  (wfl.kpw.2 <-
   ^~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:125:31: style: Put spaces around all infix operators.
        fl.stratum.fun(list(Wa=c(1:4),Kreis=krs.list[i],EigArt2="KPW"),
                             ~^~
NO COPY: R/BWI3_HR_Landkreis.R:125:39: style: Commas should always have a space after.
        fl.stratum.fun(list(Wa=c(1:4),Kreis=krs.list[i],EigArt2="KPW"),
                                      ^
NO COPY: R/BWI3_HR_Landkreis.R:125:44: style: Put spaces around all infix operators.
        fl.stratum.fun(list(Wa=c(1:4),Kreis=krs.list[i],EigArt2="KPW"),
                                          ~^~
NO COPY: R/BWI3_HR_Landkreis.R:125:57: style: Commas should always have a space after.
        fl.stratum.fun(list(Wa=c(1:4),Kreis=krs.list[i],EigArt2="KPW"),
                                                        ^
NO COPY: R/BWI3_HR_Landkreis.R:125:64: style: Put spaces around all infix operators.
        fl.stratum.fun(list(Wa=c(1:4),Kreis=krs.list[i],EigArt2="KPW"),
                                                              ~^~
NO COPY: R/BWI3_HR_Landkreis.R:126:31: style: Commas should always have a space after.
                      ecken.2,trakte.2,A.12))
                              ^
NO COPY: R/BWI3_HR_Landkreis.R:126:40: style: Commas should always have a space after.
                      ecken.2,trakte.2,A.12))
                                       ^
NO COPY: R/BWI3_HR_Landkreis.R:127:4: style: Words within variable and function names should be separated by '_' rather than '.'.
  (wfl.kpw.1 <-
   ^~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:128:31: style: Put spaces around all infix operators.
        fl.stratum.fun(list(Wa=c(1:4),Kreis=krs.list[i],EigArt2="KPW"),
                             ~^~
NO COPY: R/BWI3_HR_Landkreis.R:128:39: style: Commas should always have a space after.
        fl.stratum.fun(list(Wa=c(1:4),Kreis=krs.list[i],EigArt2="KPW"),
                                      ^
NO COPY: R/BWI3_HR_Landkreis.R:128:44: style: Put spaces around all infix operators.
        fl.stratum.fun(list(Wa=c(1:4),Kreis=krs.list[i],EigArt2="KPW"),
                                          ~^~
NO COPY: R/BWI3_HR_Landkreis.R:128:57: style: Commas should always have a space after.
        fl.stratum.fun(list(Wa=c(1:4),Kreis=krs.list[i],EigArt2="KPW"),
                                                        ^
NO COPY: R/BWI3_HR_Landkreis.R:128:64: style: Put spaces around all infix operators.
        fl.stratum.fun(list(Wa=c(1:4),Kreis=krs.list[i],EigArt2="KPW"),
                                                              ~^~
NO COPY: R/BWI3_HR_Landkreis.R:129:31: style: Commas should always have a space after.
                      ecken.1,trakte.1,A.12))
                              ^
NO COPY: R/BWI3_HR_Landkreis.R:129:40: style: Commas should always have a space after.
                      ecken.1,trakte.1,A.12))
                                       ^
NO COPY: R/BWI3_HR_Landkreis.R:134:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  fl.ant.stw.3 <-
  ^~~~~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:135:1: style: lines should not be more than 80 characters.
  fl.proz.stratum.fun(list(Wa=c(3:5),Kreis=krs.list[i]),list(EigArt=c("BW","StW")),
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:135:30: style: Put spaces around all infix operators.
  fl.proz.stratum.fun(list(Wa=c(3:5),Kreis=krs.list[i]),list(EigArt=c("BW","StW")),
                            ~^~
NO COPY: R/BWI3_HR_Landkreis.R:135:38: style: Commas should always have a space after.
  fl.proz.stratum.fun(list(Wa=c(3:5),Kreis=krs.list[i]),list(EigArt=c("BW","StW")),
                                     ^
NO COPY: R/BWI3_HR_Landkreis.R:135:43: style: Put spaces around all infix operators.
  fl.proz.stratum.fun(list(Wa=c(3:5),Kreis=krs.list[i]),list(EigArt=c("BW","StW")),
                                         ~^~
NO COPY: R/BWI3_HR_Landkreis.R:135:57: style: Commas should always have a space after.
  fl.proz.stratum.fun(list(Wa=c(3:5),Kreis=krs.list[i]),list(EigArt=c("BW","StW")),
                                                        ^
NO COPY: R/BWI3_HR_Landkreis.R:135:68: style: Put spaces around all infix operators.
  fl.proz.stratum.fun(list(Wa=c(3:5),Kreis=krs.list[i]),list(EigArt=c("BW","StW")),
                                                                  ~^~
NO COPY: R/BWI3_HR_Landkreis.R:135:76: style: Commas should always have a space after.
  fl.proz.stratum.fun(list(Wa=c(3:5),Kreis=krs.list[i]),list(EigArt=c("BW","StW")),
                                                                           ^
NO COPY: R/BWI3_HR_Landkreis.R:138:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  fl.ant.kw.3 <-
  ^~~~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:139:1: style: lines should not be more than 80 characters.
  fl.proz.stratum.fun(list(Wa=c(3:5),Kreis=krs.list[i]),list(EigArt="KW"),ecken.3)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:139:30: style: Put spaces around all infix operators.
  fl.proz.stratum.fun(list(Wa=c(3:5),Kreis=krs.list[i]),list(EigArt="KW"),ecken.3)
                            ~^~
NO COPY: R/BWI3_HR_Landkreis.R:139:38: style: Commas should always have a space after.
  fl.proz.stratum.fun(list(Wa=c(3:5),Kreis=krs.list[i]),list(EigArt="KW"),ecken.3)
                                     ^
NO COPY: R/BWI3_HR_Landkreis.R:139:43: style: Put spaces around all infix operators.
  fl.proz.stratum.fun(list(Wa=c(3:5),Kreis=krs.list[i]),list(EigArt="KW"),ecken.3)
                                         ~^~
NO COPY: R/BWI3_HR_Landkreis.R:139:57: style: Commas should always have a space after.
  fl.proz.stratum.fun(list(Wa=c(3:5),Kreis=krs.list[i]),list(EigArt="KW"),ecken.3)
                                                        ^
NO COPY: R/BWI3_HR_Landkreis.R:139:68: style: Put spaces around all infix operators.
  fl.proz.stratum.fun(list(Wa=c(3:5),Kreis=krs.list[i]),list(EigArt="KW"),ecken.3)
                                                                  ~^~
NO COPY: R/BWI3_HR_Landkreis.R:139:75: style: Commas should always have a space after.
  fl.proz.stratum.fun(list(Wa=c(3:5),Kreis=krs.list[i]),list(EigArt="KW"),ecken.3)
                                                                          ^
NO COPY: R/BWI3_HR_Landkreis.R:141:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  fl.ant.oew.3 <-
  ^~~~~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:142:30: style: Put spaces around all infix operators.
  fl.proz.stratum.fun(list(Wa=c(3:5),Kreis=krs.list[i]),
                            ~^~
NO COPY: R/BWI3_HR_Landkreis.R:142:38: style: Commas should always have a space after.
  fl.proz.stratum.fun(list(Wa=c(3:5),Kreis=krs.list[i]),
                                     ^
NO COPY: R/BWI3_HR_Landkreis.R:142:43: style: Put spaces around all infix operators.
  fl.proz.stratum.fun(list(Wa=c(3:5),Kreis=krs.list[i]),
                                         ~^~
NO COPY: R/BWI3_HR_Landkreis.R:143:38: style: Put spaces around all infix operators.
                          list(EigArt=c("BW","StW","KW")),ecken.3)
                                    ~^~
NO COPY: R/BWI3_HR_Landkreis.R:143:46: style: Commas should always have a space after.
                          list(EigArt=c("BW","StW","KW")),ecken.3)
                                             ^
NO COPY: R/BWI3_HR_Landkreis.R:143:52: style: Commas should always have a space after.
                          list(EigArt=c("BW","StW","KW")),ecken.3)
                                                   ^
NO COPY: R/BWI3_HR_Landkreis.R:143:59: style: Commas should always have a space after.
                          list(EigArt=c("BW","StW","KW")),ecken.3)
                                                          ^
NO COPY: R/BWI3_HR_Landkreis.R:145:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  fl.ant.pw.3 <-
  ^~~~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:146:1: style: lines should not be more than 80 characters.
  fl.proz.stratum.fun(list(Wa=c(3:5),Kreis=krs.list[i]),list(EigArt="PW"),ecken.3)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:146:30: style: Put spaces around all infix operators.
  fl.proz.stratum.fun(list(Wa=c(3:5),Kreis=krs.list[i]),list(EigArt="PW"),ecken.3)
                            ~^~
NO COPY: R/BWI3_HR_Landkreis.R:146:38: style: Commas should always have a space after.
  fl.proz.stratum.fun(list(Wa=c(3:5),Kreis=krs.list[i]),list(EigArt="PW"),ecken.3)
                                     ^
NO COPY: R/BWI3_HR_Landkreis.R:146:43: style: Put spaces around all infix operators.
  fl.proz.stratum.fun(list(Wa=c(3:5),Kreis=krs.list[i]),list(EigArt="PW"),ecken.3)
                                         ~^~
NO COPY: R/BWI3_HR_Landkreis.R:146:57: style: Commas should always have a space after.
  fl.proz.stratum.fun(list(Wa=c(3:5),Kreis=krs.list[i]),list(EigArt="PW"),ecken.3)
                                                        ^
NO COPY: R/BWI3_HR_Landkreis.R:146:68: style: Put spaces around all infix operators.
  fl.proz.stratum.fun(list(Wa=c(3:5),Kreis=krs.list[i]),list(EigArt="PW"),ecken.3)
                                                                  ~^~
NO COPY: R/BWI3_HR_Landkreis.R:146:75: style: Commas should always have a space after.
  fl.proz.stratum.fun(list(Wa=c(3:5),Kreis=krs.list[i]),list(EigArt="PW"),ecken.3)
                                                                          ^
NO COPY: R/BWI3_HR_Landkreis.R:148:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  fl.ant.gpw.3 <-
  ^~~~~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:149:1: style: lines should not be more than 80 characters.
  fl.proz.stratum.fun(list(Wa=c(3:5),Kreis=krs.list[i]),list(EigArt2="GPW"),ecken.3)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:149:30: style: Put spaces around all infix operators.
  fl.proz.stratum.fun(list(Wa=c(3:5),Kreis=krs.list[i]),list(EigArt2="GPW"),ecken.3)
                            ~^~
NO COPY: R/BWI3_HR_Landkreis.R:149:38: style: Commas should always have a space after.
  fl.proz.stratum.fun(list(Wa=c(3:5),Kreis=krs.list[i]),list(EigArt2="GPW"),ecken.3)
                                     ^
NO COPY: R/BWI3_HR_Landkreis.R:149:43: style: Put spaces around all infix operators.
  fl.proz.stratum.fun(list(Wa=c(3:5),Kreis=krs.list[i]),list(EigArt2="GPW"),ecken.3)
                                         ~^~
NO COPY: R/BWI3_HR_Landkreis.R:149:57: style: Commas should always have a space after.
  fl.proz.stratum.fun(list(Wa=c(3:5),Kreis=krs.list[i]),list(EigArt2="GPW"),ecken.3)
                                                        ^
NO COPY: R/BWI3_HR_Landkreis.R:149:69: style: Put spaces around all infix operators.
  fl.proz.stratum.fun(list(Wa=c(3:5),Kreis=krs.list[i]),list(EigArt2="GPW"),ecken.3)
                                                                   ~^~
NO COPY: R/BWI3_HR_Landkreis.R:149:77: style: Commas should always have a space after.
  fl.proz.stratum.fun(list(Wa=c(3:5),Kreis=krs.list[i]),list(EigArt2="GPW"),ecken.3)
                                                                            ^
NO COPY: R/BWI3_HR_Landkreis.R:151:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  fl.ant.mpw.3 <-
  ^~~~~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:152:1: style: lines should not be more than 80 characters.
  fl.proz.stratum.fun(list(Wa=c(3:5),Kreis=krs.list[i]),list(EigArt2="MPW"),ecken.3)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:152:30: style: Put spaces around all infix operators.
  fl.proz.stratum.fun(list(Wa=c(3:5),Kreis=krs.list[i]),list(EigArt2="MPW"),ecken.3)
                            ~^~
NO COPY: R/BWI3_HR_Landkreis.R:152:38: style: Commas should always have a space after.
  fl.proz.stratum.fun(list(Wa=c(3:5),Kreis=krs.list[i]),list(EigArt2="MPW"),ecken.3)
                                     ^
NO COPY: R/BWI3_HR_Landkreis.R:152:43: style: Put spaces around all infix operators.
  fl.proz.stratum.fun(list(Wa=c(3:5),Kreis=krs.list[i]),list(EigArt2="MPW"),ecken.3)
                                         ~^~
NO COPY: R/BWI3_HR_Landkreis.R:152:57: style: Commas should always have a space after.
  fl.proz.stratum.fun(list(Wa=c(3:5),Kreis=krs.list[i]),list(EigArt2="MPW"),ecken.3)
                                                        ^
NO COPY: R/BWI3_HR_Landkreis.R:152:69: style: Put spaces around all infix operators.
  fl.proz.stratum.fun(list(Wa=c(3:5),Kreis=krs.list[i]),list(EigArt2="MPW"),ecken.3)
                                                                   ~^~
NO COPY: R/BWI3_HR_Landkreis.R:152:77: style: Commas should always have a space after.
  fl.proz.stratum.fun(list(Wa=c(3:5),Kreis=krs.list[i]),list(EigArt2="MPW"),ecken.3)
                                                                            ^
NO COPY: R/BWI3_HR_Landkreis.R:153:4: style: Commented code should be removed.
  #Klein-PW
   ^~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:154:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  fl.ant.kpw.3 <-
  ^~~~~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:155:1: style: lines should not be more than 80 characters.
  fl.proz.stratum.fun(list(Wa=c(3:5),Kreis=krs.list[i]),list(EigArt2="KPW"),ecken.3)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:155:30: style: Put spaces around all infix operators.
  fl.proz.stratum.fun(list(Wa=c(3:5),Kreis=krs.list[i]),list(EigArt2="KPW"),ecken.3)
                            ~^~
NO COPY: R/BWI3_HR_Landkreis.R:155:38: style: Commas should always have a space after.
  fl.proz.stratum.fun(list(Wa=c(3:5),Kreis=krs.list[i]),list(EigArt2="KPW"),ecken.3)
                                     ^
NO COPY: R/BWI3_HR_Landkreis.R:155:43: style: Put spaces around all infix operators.
  fl.proz.stratum.fun(list(Wa=c(3:5),Kreis=krs.list[i]),list(EigArt2="KPW"),ecken.3)
                                         ~^~
NO COPY: R/BWI3_HR_Landkreis.R:155:57: style: Commas should always have a space after.
  fl.proz.stratum.fun(list(Wa=c(3:5),Kreis=krs.list[i]),list(EigArt2="KPW"),ecken.3)
                                                        ^
NO COPY: R/BWI3_HR_Landkreis.R:155:69: style: Put spaces around all infix operators.
  fl.proz.stratum.fun(list(Wa=c(3:5),Kreis=krs.list[i]),list(EigArt2="KPW"),ecken.3)
                                                                   ~^~
NO COPY: R/BWI3_HR_Landkreis.R:155:77: style: Commas should always have a space after.
  fl.proz.stratum.fun(list(Wa=c(3:5),Kreis=krs.list[i]),list(EigArt2="KPW"),ecken.3)
                                                                            ^
NO COPY: R/BWI3_HR_Landkreis.R:158:36: style: Put spaces around all infix operators.
  (bhbf.3 <- fl.stratum.fun(list(Wa=c(3,5),Begehbar=1,Kreis=krs.list[i]),
                                  ~^~
NO COPY: R/BWI3_HR_Landkreis.R:158:41: style: Commas should always have a space after.
  (bhbf.3 <- fl.stratum.fun(list(Wa=c(3,5),Begehbar=1,Kreis=krs.list[i]),
                                        ^
NO COPY: R/BWI3_HR_Landkreis.R:158:44: style: Commas should always have a space after.
  (bhbf.3 <- fl.stratum.fun(list(Wa=c(3,5),Begehbar=1,Kreis=krs.list[i]),
                                           ^
NO COPY: R/BWI3_HR_Landkreis.R:158:52: style: Put spaces around all infix operators.
  (bhbf.3 <- fl.stratum.fun(list(Wa=c(3,5),Begehbar=1,Kreis=krs.list[i]),
                                                  ~^~
NO COPY: R/BWI3_HR_Landkreis.R:158:55: style: Commas should always have a space after.
  (bhbf.3 <- fl.stratum.fun(list(Wa=c(3,5),Begehbar=1,Kreis=krs.list[i]),
                                                      ^
NO COPY: R/BWI3_HR_Landkreis.R:158:60: style: Put spaces around all infix operators.
  (bhbf.3 <- fl.stratum.fun(list(Wa=c(3,5),Begehbar=1,Kreis=krs.list[i]),
                                                          ~^~
NO COPY: R/BWI3_HR_Landkreis.R:159:31: style: Commas should always have a space after.
                      ecken.3,trakte.3,A))
                              ^
NO COPY: R/BWI3_HR_Landkreis.R:159:40: style: Commas should always have a space after.
                      ecken.3,trakte.3,A))
                                       ^
NO COPY: R/BWI3_HR_Landkreis.R:160:4: style: Words within variable and function names should be separated by '_' rather than '.'.
  (bhbf.stw.3 <- fl.stratum.fun(list(Wa=c(3,5),Begehbar=1,Kreis=krs.list[i],
   ^~~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:160:40: style: Put spaces around all infix operators.
  (bhbf.stw.3 <- fl.stratum.fun(list(Wa=c(3,5),Begehbar=1,Kreis=krs.list[i],
                                      ~^~
NO COPY: R/BWI3_HR_Landkreis.R:160:45: style: Commas should always have a space after.
  (bhbf.stw.3 <- fl.stratum.fun(list(Wa=c(3,5),Begehbar=1,Kreis=krs.list[i],
                                            ^
NO COPY: R/BWI3_HR_Landkreis.R:160:48: style: Commas should always have a space after.
  (bhbf.stw.3 <- fl.stratum.fun(list(Wa=c(3,5),Begehbar=1,Kreis=krs.list[i],
                                               ^
NO COPY: R/BWI3_HR_Landkreis.R:160:56: style: Put spaces around all infix operators.
  (bhbf.stw.3 <- fl.stratum.fun(list(Wa=c(3,5),Begehbar=1,Kreis=krs.list[i],
                                                      ~^~
NO COPY: R/BWI3_HR_Landkreis.R:160:59: style: Commas should always have a space after.
  (bhbf.stw.3 <- fl.stratum.fun(list(Wa=c(3,5),Begehbar=1,Kreis=krs.list[i],
                                                          ^
NO COPY: R/BWI3_HR_Landkreis.R:160:64: style: Put spaces around all infix operators.
  (bhbf.stw.3 <- fl.stratum.fun(list(Wa=c(3,5),Begehbar=1,Kreis=krs.list[i],
                                                              ~^~
NO COPY: R/BWI3_HR_Landkreis.R:161:29: style: Put spaces around all infix operators.
                      EigArt="StW"),ecken.3,trakte.3,A))
                           ~^~
NO COPY: R/BWI3_HR_Landkreis.R:161:37: style: Commas should always have a space after.
                      EigArt="StW"),ecken.3,trakte.3,A))
                                    ^
NO COPY: R/BWI3_HR_Landkreis.R:161:45: style: Commas should always have a space after.
                      EigArt="StW"),ecken.3,trakte.3,A))
                                            ^
NO COPY: R/BWI3_HR_Landkreis.R:161:54: style: Commas should always have a space after.
                      EigArt="StW"),ecken.3,trakte.3,A))
                                                     ^
NO COPY: R/BWI3_HR_Landkreis.R:162:4: style: Words within variable and function names should be separated by '_' rather than '.'.
  (bhbf.kw.3 <- fl.stratum.fun(list(Wa=c(3,5),Begehbar=1,Kreis=krs.list[i],
   ^~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:162:39: style: Put spaces around all infix operators.
  (bhbf.kw.3 <- fl.stratum.fun(list(Wa=c(3,5),Begehbar=1,Kreis=krs.list[i],
                                     ~^~
NO COPY: R/BWI3_HR_Landkreis.R:162:44: style: Commas should always have a space after.
  (bhbf.kw.3 <- fl.stratum.fun(list(Wa=c(3,5),Begehbar=1,Kreis=krs.list[i],
                                           ^
NO COPY: R/BWI3_HR_Landkreis.R:162:47: style: Commas should always have a space after.
  (bhbf.kw.3 <- fl.stratum.fun(list(Wa=c(3,5),Begehbar=1,Kreis=krs.list[i],
                                              ^
NO COPY: R/BWI3_HR_Landkreis.R:162:55: style: Put spaces around all infix operators.
  (bhbf.kw.3 <- fl.stratum.fun(list(Wa=c(3,5),Begehbar=1,Kreis=krs.list[i],
                                                     ~^~
NO COPY: R/BWI3_HR_Landkreis.R:162:58: style: Commas should always have a space after.
  (bhbf.kw.3 <- fl.stratum.fun(list(Wa=c(3,5),Begehbar=1,Kreis=krs.list[i],
                                                         ^
NO COPY: R/BWI3_HR_Landkreis.R:162:63: style: Put spaces around all infix operators.
  (bhbf.kw.3 <- fl.stratum.fun(list(Wa=c(3,5),Begehbar=1,Kreis=krs.list[i],
                                                             ~^~
NO COPY: R/BWI3_HR_Landkreis.R:163:29: style: Put spaces around all infix operators.
                      EigArt="KW"),ecken.3,trakte.3,A))
                           ~^~
NO COPY: R/BWI3_HR_Landkreis.R:163:36: style: Commas should always have a space after.
                      EigArt="KW"),ecken.3,trakte.3,A))
                                   ^
NO COPY: R/BWI3_HR_Landkreis.R:163:44: style: Commas should always have a space after.
                      EigArt="KW"),ecken.3,trakte.3,A))
                                           ^
NO COPY: R/BWI3_HR_Landkreis.R:163:53: style: Commas should always have a space after.
                      EigArt="KW"),ecken.3,trakte.3,A))
                                                    ^
NO COPY: R/BWI3_HR_Landkreis.R:164:4: style: Words within variable and function names should be separated by '_' rather than '.'.
  (bhbf.oew.3 <- fl.stratum.fun(list(Wa=c(3,5),Begehbar=1,Kreis=krs.list[i],
   ^~~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:164:40: style: Put spaces around all infix operators.
  (bhbf.oew.3 <- fl.stratum.fun(list(Wa=c(3,5),Begehbar=1,Kreis=krs.list[i],
                                      ~^~
NO COPY: R/BWI3_HR_Landkreis.R:164:45: style: Commas should always have a space after.
  (bhbf.oew.3 <- fl.stratum.fun(list(Wa=c(3,5),Begehbar=1,Kreis=krs.list[i],
                                            ^
NO COPY: R/BWI3_HR_Landkreis.R:164:48: style: Commas should always have a space after.
  (bhbf.oew.3 <- fl.stratum.fun(list(Wa=c(3,5),Begehbar=1,Kreis=krs.list[i],
                                               ^
NO COPY: R/BWI3_HR_Landkreis.R:164:56: style: Put spaces around all infix operators.
  (bhbf.oew.3 <- fl.stratum.fun(list(Wa=c(3,5),Begehbar=1,Kreis=krs.list[i],
                                                      ~^~
NO COPY: R/BWI3_HR_Landkreis.R:164:59: style: Commas should always have a space after.
  (bhbf.oew.3 <- fl.stratum.fun(list(Wa=c(3,5),Begehbar=1,Kreis=krs.list[i],
                                                          ^
NO COPY: R/BWI3_HR_Landkreis.R:164:64: style: Put spaces around all infix operators.
  (bhbf.oew.3 <- fl.stratum.fun(list(Wa=c(3,5),Begehbar=1,Kreis=krs.list[i],
                                                              ~^~
NO COPY: R/BWI3_HR_Landkreis.R:165:29: style: Put spaces around all infix operators.
                      EigArt=c("BW","StW","KW")),ecken.3,trakte.3,A))
                           ~^~
NO COPY: R/BWI3_HR_Landkreis.R:165:37: style: Commas should always have a space after.
                      EigArt=c("BW","StW","KW")),ecken.3,trakte.3,A))
                                    ^
NO COPY: R/BWI3_HR_Landkreis.R:165:43: style: Commas should always have a space after.
                      EigArt=c("BW","StW","KW")),ecken.3,trakte.3,A))
                                          ^
NO COPY: R/BWI3_HR_Landkreis.R:165:50: style: Commas should always have a space after.
                      EigArt=c("BW","StW","KW")),ecken.3,trakte.3,A))
                                                 ^
NO COPY: R/BWI3_HR_Landkreis.R:165:58: style: Commas should always have a space after.
                      EigArt=c("BW","StW","KW")),ecken.3,trakte.3,A))
                                                         ^
NO COPY: R/BWI3_HR_Landkreis.R:165:67: style: Commas should always have a space after.
                      EigArt=c("BW","StW","KW")),ecken.3,trakte.3,A))
                                                                  ^
NO COPY: R/BWI3_HR_Landkreis.R:166:4: style: Words within variable and function names should be separated by '_' rather than '.'.
  (bhbf.pw.3 <- fl.stratum.fun(list(Wa=c(3,5),Begehbar=1,Kreis=krs.list[i],
   ^~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:166:39: style: Put spaces around all infix operators.
  (bhbf.pw.3 <- fl.stratum.fun(list(Wa=c(3,5),Begehbar=1,Kreis=krs.list[i],
                                     ~^~
NO COPY: R/BWI3_HR_Landkreis.R:166:44: style: Commas should always have a space after.
  (bhbf.pw.3 <- fl.stratum.fun(list(Wa=c(3,5),Begehbar=1,Kreis=krs.list[i],
                                           ^
NO COPY: R/BWI3_HR_Landkreis.R:166:47: style: Commas should always have a space after.
  (bhbf.pw.3 <- fl.stratum.fun(list(Wa=c(3,5),Begehbar=1,Kreis=krs.list[i],
                                              ^
NO COPY: R/BWI3_HR_Landkreis.R:166:55: style: Put spaces around all infix operators.
  (bhbf.pw.3 <- fl.stratum.fun(list(Wa=c(3,5),Begehbar=1,Kreis=krs.list[i],
                                                     ~^~
NO COPY: R/BWI3_HR_Landkreis.R:166:58: style: Commas should always have a space after.
  (bhbf.pw.3 <- fl.stratum.fun(list(Wa=c(3,5),Begehbar=1,Kreis=krs.list[i],
                                                         ^
NO COPY: R/BWI3_HR_Landkreis.R:166:63: style: Put spaces around all infix operators.
  (bhbf.pw.3 <- fl.stratum.fun(list(Wa=c(3,5),Begehbar=1,Kreis=krs.list[i],
                                                             ~^~
NO COPY: R/BWI3_HR_Landkreis.R:167:29: style: Put spaces around all infix operators.
                      EigArt="PW"),ecken.3,trakte.3,A))
                           ~^~
NO COPY: R/BWI3_HR_Landkreis.R:167:36: style: Commas should always have a space after.
                      EigArt="PW"),ecken.3,trakte.3,A))
                                   ^
NO COPY: R/BWI3_HR_Landkreis.R:167:44: style: Commas should always have a space after.
                      EigArt="PW"),ecken.3,trakte.3,A))
                                           ^
NO COPY: R/BWI3_HR_Landkreis.R:167:53: style: Commas should always have a space after.
                      EigArt="PW"),ecken.3,trakte.3,A))
                                                    ^
NO COPY: R/BWI3_HR_Landkreis.R:168:4: style: Words within variable and function names should be separated by '_' rather than '.'.
  (bhbf.gpw.3 <- fl.stratum.fun(list(Wa=c(3,5),Begehbar=1,Kreis=krs.list[i],
   ^~~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:168:40: style: Put spaces around all infix operators.
  (bhbf.gpw.3 <- fl.stratum.fun(list(Wa=c(3,5),Begehbar=1,Kreis=krs.list[i],
                                      ~^~
NO COPY: R/BWI3_HR_Landkreis.R:168:45: style: Commas should always have a space after.
  (bhbf.gpw.3 <- fl.stratum.fun(list(Wa=c(3,5),Begehbar=1,Kreis=krs.list[i],
                                            ^
NO COPY: R/BWI3_HR_Landkreis.R:168:48: style: Commas should always have a space after.
  (bhbf.gpw.3 <- fl.stratum.fun(list(Wa=c(3,5),Begehbar=1,Kreis=krs.list[i],
                                               ^
NO COPY: R/BWI3_HR_Landkreis.R:168:56: style: Put spaces around all infix operators.
  (bhbf.gpw.3 <- fl.stratum.fun(list(Wa=c(3,5),Begehbar=1,Kreis=krs.list[i],
                                                      ~^~
NO COPY: R/BWI3_HR_Landkreis.R:168:59: style: Commas should always have a space after.
  (bhbf.gpw.3 <- fl.stratum.fun(list(Wa=c(3,5),Begehbar=1,Kreis=krs.list[i],
                                                          ^
NO COPY: R/BWI3_HR_Landkreis.R:168:64: style: Put spaces around all infix operators.
  (bhbf.gpw.3 <- fl.stratum.fun(list(Wa=c(3,5),Begehbar=1,Kreis=krs.list[i],
                                                              ~^~
NO COPY: R/BWI3_HR_Landkreis.R:169:30: style: Put spaces around all infix operators.
                      EigArt2="GPW"),ecken.3,trakte.3,A))
                            ~^~
NO COPY: R/BWI3_HR_Landkreis.R:169:38: style: Commas should always have a space after.
                      EigArt2="GPW"),ecken.3,trakte.3,A))
                                     ^
NO COPY: R/BWI3_HR_Landkreis.R:169:46: style: Commas should always have a space after.
                      EigArt2="GPW"),ecken.3,trakte.3,A))
                                             ^
NO COPY: R/BWI3_HR_Landkreis.R:169:55: style: Commas should always have a space after.
                      EigArt2="GPW"),ecken.3,trakte.3,A))
                                                      ^
NO COPY: R/BWI3_HR_Landkreis.R:170:4: style: Words within variable and function names should be separated by '_' rather than '.'.
  (bhbf.mpw.3 <- fl.stratum.fun(list(Wa=c(3,5),Begehbar=1,Kreis=krs.list[i],
   ^~~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:170:40: style: Put spaces around all infix operators.
  (bhbf.mpw.3 <- fl.stratum.fun(list(Wa=c(3,5),Begehbar=1,Kreis=krs.list[i],
                                      ~^~
NO COPY: R/BWI3_HR_Landkreis.R:170:45: style: Commas should always have a space after.
  (bhbf.mpw.3 <- fl.stratum.fun(list(Wa=c(3,5),Begehbar=1,Kreis=krs.list[i],
                                            ^
NO COPY: R/BWI3_HR_Landkreis.R:170:48: style: Commas should always have a space after.
  (bhbf.mpw.3 <- fl.stratum.fun(list(Wa=c(3,5),Begehbar=1,Kreis=krs.list[i],
                                               ^
NO COPY: R/BWI3_HR_Landkreis.R:170:56: style: Put spaces around all infix operators.
  (bhbf.mpw.3 <- fl.stratum.fun(list(Wa=c(3,5),Begehbar=1,Kreis=krs.list[i],
                                                      ~^~
NO COPY: R/BWI3_HR_Landkreis.R:170:59: style: Commas should always have a space after.
  (bhbf.mpw.3 <- fl.stratum.fun(list(Wa=c(3,5),Begehbar=1,Kreis=krs.list[i],
                                                          ^
NO COPY: R/BWI3_HR_Landkreis.R:170:64: style: Put spaces around all infix operators.
  (bhbf.mpw.3 <- fl.stratum.fun(list(Wa=c(3,5),Begehbar=1,Kreis=krs.list[i],
                                                              ~^~
NO COPY: R/BWI3_HR_Landkreis.R:171:30: style: Put spaces around all infix operators.
                      EigArt2="MPW"),ecken.3,trakte.3,A))
                            ~^~
NO COPY: R/BWI3_HR_Landkreis.R:171:38: style: Commas should always have a space after.
                      EigArt2="MPW"),ecken.3,trakte.3,A))
                                     ^
NO COPY: R/BWI3_HR_Landkreis.R:171:46: style: Commas should always have a space after.
                      EigArt2="MPW"),ecken.3,trakte.3,A))
                                             ^
NO COPY: R/BWI3_HR_Landkreis.R:171:55: style: Commas should always have a space after.
                      EigArt2="MPW"),ecken.3,trakte.3,A))
                                                      ^
NO COPY: R/BWI3_HR_Landkreis.R:172:4: style: Words within variable and function names should be separated by '_' rather than '.'.
  (bhbf.kpw.3 <- fl.stratum.fun(list(Wa=c(3,5),Begehbar=1,Kreis=krs.list[i],
   ^~~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:172:40: style: Put spaces around all infix operators.
  (bhbf.kpw.3 <- fl.stratum.fun(list(Wa=c(3,5),Begehbar=1,Kreis=krs.list[i],
                                      ~^~
NO COPY: R/BWI3_HR_Landkreis.R:172:45: style: Commas should always have a space after.
  (bhbf.kpw.3 <- fl.stratum.fun(list(Wa=c(3,5),Begehbar=1,Kreis=krs.list[i],
                                            ^
NO COPY: R/BWI3_HR_Landkreis.R:172:48: style: Commas should always have a space after.
  (bhbf.kpw.3 <- fl.stratum.fun(list(Wa=c(3,5),Begehbar=1,Kreis=krs.list[i],
                                               ^
NO COPY: R/BWI3_HR_Landkreis.R:172:56: style: Put spaces around all infix operators.
  (bhbf.kpw.3 <- fl.stratum.fun(list(Wa=c(3,5),Begehbar=1,Kreis=krs.list[i],
                                                      ~^~
NO COPY: R/BWI3_HR_Landkreis.R:172:59: style: Commas should always have a space after.
  (bhbf.kpw.3 <- fl.stratum.fun(list(Wa=c(3,5),Begehbar=1,Kreis=krs.list[i],
                                                          ^
NO COPY: R/BWI3_HR_Landkreis.R:172:64: style: Put spaces around all infix operators.
  (bhbf.kpw.3 <- fl.stratum.fun(list(Wa=c(3,5),Begehbar=1,Kreis=krs.list[i],
                                                              ~^~
NO COPY: R/BWI3_HR_Landkreis.R:173:30: style: Put spaces around all infix operators.
                      EigArt2="KPW"),ecken.3,trakte.3,A))
                            ~^~
NO COPY: R/BWI3_HR_Landkreis.R:173:38: style: Commas should always have a space after.
                      EigArt2="KPW"),ecken.3,trakte.3,A))
                                     ^
NO COPY: R/BWI3_HR_Landkreis.R:173:46: style: Commas should always have a space after.
                      EigArt2="KPW"),ecken.3,trakte.3,A))
                                             ^
NO COPY: R/BWI3_HR_Landkreis.R:173:55: style: Commas should always have a space after.
                      EigArt2="KPW"),ecken.3,trakte.3,A))
                                                      ^
NO COPY: R/BWI3_HR_Landkreis.R:175:50: style: Variable and function names should be all lowercase.
  return(list(Kreis = as.character(kreise[kreise$codeKreis==kreiscode,3]),
                                                 ^~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:175:59: style: Put spaces around all infix operators.
  return(list(Kreis = as.character(kreise[kreise$codeKreis==kreiscode,3]),
                                                         ~^~~
NO COPY: R/BWI3_HR_Landkreis.R:175:71: style: Commas should always have a space after.
  return(list(Kreis = as.character(kreise[kreise$codeKreis==kreiscode,3]),
                                                                      ^
NO COPY: R/BWI3_HR_Landkreis.R:177:5: style: Only use double-quotes.
    'Kreisfl\u00e4che_gesamt_ha' = kreise[kreise$codeKreis==kreiscode,5]*100,
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:177:50: style: Variable and function names should be all lowercase.
    'Kreisfl\u00e4che_gesamt_ha' = kreise[kreise$codeKreis==kreiscode,5]*100,
                                                 ^~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:177:59: style: Put spaces around all infix operators.
    'Kreisfl\u00e4che_gesamt_ha' = kreise[kreise$codeKreis==kreiscode,5]*100,
                                                         ~^~~
NO COPY: R/BWI3_HR_Landkreis.R:177:71: style: Commas should always have a space after.
    'Kreisfl\u00e4che_gesamt_ha' = kreise[kreise$codeKreis==kreiscode,5]*100,
                                                                      ^
NO COPY: R/BWI3_HR_Landkreis.R:177:73: style: Put spaces around all infix operators.
    'Kreisfl\u00e4che_gesamt_ha' = kreise[kreise$codeKreis==kreiscode,5]*100,
                                                                       ~^~
NO COPY: R/BWI3_HR_Landkreis.R:178:15: style: Put spaces around all infix operators.
    Waldanteil=data.frame(BWI=c(1987,2002,2012),
             ~^~
NO COPY: R/BWI3_HR_Landkreis.R:178:30: style: Put spaces around all infix operators.
    Waldanteil=data.frame(BWI=c(1987,2002,2012),
                            ~^~
NO COPY: R/BWI3_HR_Landkreis.R:178:38: style: Commas should always have a space after.
    Waldanteil=data.frame(BWI=c(1987,2002,2012),
                                     ^
NO COPY: R/BWI3_HR_Landkreis.R:178:43: style: Commas should always have a space after.
    Waldanteil=data.frame(BWI=c(1987,2002,2012),
                                          ^
NO COPY: R/BWI3_HR_Landkreis.R:179:15: style: Put spaces around all infix operators.
    Waldanteil= round(c(wfl.3$Flaeche/kreise[kreise$codeKreis==kreiscode,5],
             ~^
NO COPY: R/BWI3_HR_Landkreis.R:179:38: style: Put spaces around all infix operators.
    Waldanteil= round(c(wfl.3$Flaeche/kreise[kreise$codeKreis==kreiscode,5],
                                    ~^~
NO COPY: R/BWI3_HR_Landkreis.R:179:53: style: Variable and function names should be all lowercase.
    Waldanteil= round(c(wfl.3$Flaeche/kreise[kreise$codeKreis==kreiscode,5],
                                                    ^~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:179:62: style: Put spaces around all infix operators.
    Waldanteil= round(c(wfl.3$Flaeche/kreise[kreise$codeKreis==kreiscode,5],
                                                            ~^~~
NO COPY: R/BWI3_HR_Landkreis.R:179:74: style: Commas should always have a space after.
    Waldanteil= round(c(wfl.3$Flaeche/kreise[kreise$codeKreis==kreiscode,5],
                                                                         ^
NO COPY: R/BWI3_HR_Landkreis.R:180:32: style: Put spaces around all infix operators.
                  wfl.2$Flaeche/kreise[kreise$codeKreis==kreiscode,5],
                              ~^~
NO COPY: R/BWI3_HR_Landkreis.R:180:47: style: Variable and function names should be all lowercase.
                  wfl.2$Flaeche/kreise[kreise$codeKreis==kreiscode,5],
                                              ^~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:180:56: style: Put spaces around all infix operators.
                  wfl.2$Flaeche/kreise[kreise$codeKreis==kreiscode,5],
                                                      ~^~~
NO COPY: R/BWI3_HR_Landkreis.R:180:68: style: Commas should always have a space after.
                  wfl.2$Flaeche/kreise[kreise$codeKreis==kreiscode,5],
                                                                   ^
NO COPY: R/BWI3_HR_Landkreis.R:181:32: style: Put spaces around all infix operators.
                  wfl.1$Flaeche/kreise[kreise$codeKreis==kreiscode,5]),1)),
                              ~^~
NO COPY: R/BWI3_HR_Landkreis.R:181:47: style: Variable and function names should be all lowercase.
                  wfl.1$Flaeche/kreise[kreise$codeKreis==kreiscode,5]),1)),
                                              ^~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:181:56: style: Put spaces around all infix operators.
                  wfl.1$Flaeche/kreise[kreise$codeKreis==kreiscode,5]),1)),
                                                      ~^~~
NO COPY: R/BWI3_HR_Landkreis.R:181:68: style: Commas should always have a space after.
                  wfl.1$Flaeche/kreise[kreise$codeKreis==kreiscode,5]),1)),
                                                                   ^
NO COPY: R/BWI3_HR_Landkreis.R:181:72: style: Commas should always have a space after.
                  wfl.1$Flaeche/kreise[kreise$codeKreis==kreiscode,5]),1)),
                                                                       ^
NO COPY: R/BWI3_HR_Landkreis.R:182:16: style: Put spaces around all infix operators.
    Waldflaeche=data.frame(BWI=c(1987,2002,2012),
              ~^~
NO COPY: R/BWI3_HR_Landkreis.R:182:31: style: Put spaces around all infix operators.
    Waldflaeche=data.frame(BWI=c(1987,2002,2012),
                             ~^~
NO COPY: R/BWI3_HR_Landkreis.R:182:39: style: Commas should always have a space after.
    Waldflaeche=data.frame(BWI=c(1987,2002,2012),
                                      ^
NO COPY: R/BWI3_HR_Landkreis.R:182:44: style: Commas should always have a space after.
    Waldflaeche=data.frame(BWI=c(1987,2002,2012),
                                           ^
NO COPY: R/BWI3_HR_Landkreis.R:183:41: style: Commas should always have a space after.
    Waldfl_GW   = round(c(wfl.1$Flaeche,wfl.2$Flaeche,wfl.3$Flaeche),0),
                                        ^
NO COPY: R/BWI3_HR_Landkreis.R:183:55: style: Commas should always have a space after.
    Waldfl_GW   = round(c(wfl.1$Flaeche,wfl.2$Flaeche,wfl.3$Flaeche),0),
                                                      ^
NO COPY: R/BWI3_HR_Landkreis.R:183:70: style: Commas should always have a space after.
    Waldfl_GW   = round(c(wfl.1$Flaeche,wfl.2$Flaeche,wfl.3$Flaeche),0),
                                                                     ^
NO COPY: R/BWI3_HR_Landkreis.R:184:1: style: lines should not be more than 80 characters.
    SE_Waldfl_GW= round(c(wfl.1$SE_Flaeche,wfl.2$SE_Flaeche, wfl.3$SE_Flaeche),0),
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:184:17: style: Put spaces around all infix operators.
    SE_Waldfl_GW= round(c(wfl.1$SE_Flaeche,wfl.2$SE_Flaeche, wfl.3$SE_Flaeche),0),
               ~^
NO COPY: R/BWI3_HR_Landkreis.R:184:44: style: Commas should always have a space after.
    SE_Waldfl_GW= round(c(wfl.1$SE_Flaeche,wfl.2$SE_Flaeche, wfl.3$SE_Flaeche),0),
                                           ^
NO COPY: R/BWI3_HR_Landkreis.R:184:80: style: Commas should always have a space after.
    SE_Waldfl_GW= round(c(wfl.1$SE_Flaeche,wfl.2$SE_Flaeche, wfl.3$SE_Flaeche),0),
                                                                               ^
NO COPY: R/BWI3_HR_Landkreis.R:185:1: style: lines should not be more than 80 characters.
    Waldfl_StW  = round(c(wfl.stw.1$Flaeche, wfl.stw.2$Flaeche,wfl.stw.3$Flaeche),0),
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:185:27: style: Words within variable and function names should be separated by '_' rather than '.'.
    Waldfl_StW  = round(c(wfl.stw.1$Flaeche, wfl.stw.2$Flaeche,wfl.stw.3$Flaeche),0),
                          ^~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:185:46: style: Words within variable and function names should be separated by '_' rather than '.'.
    Waldfl_StW  = round(c(wfl.stw.1$Flaeche, wfl.stw.2$Flaeche,wfl.stw.3$Flaeche),0),
                                             ^~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:185:64: style: Commas should always have a space after.
    Waldfl_StW  = round(c(wfl.stw.1$Flaeche, wfl.stw.2$Flaeche,wfl.stw.3$Flaeche),0),
                                                               ^
NO COPY: R/BWI3_HR_Landkreis.R:185:64: style: Words within variable and function names should be separated by '_' rather than '.'.
    Waldfl_StW  = round(c(wfl.stw.1$Flaeche, wfl.stw.2$Flaeche,wfl.stw.3$Flaeche),0),
                                                               ^~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:185:83: style: Commas should always have a space after.
    Waldfl_StW  = round(c(wfl.stw.1$Flaeche, wfl.stw.2$Flaeche,wfl.stw.3$Flaeche),0),
                                                                                  ^
NO COPY: R/BWI3_HR_Landkreis.R:186:18: style: Put spaces around all infix operators.
    SE_Waldfl_StW=round(c(wfl.stw.1$SE_Flaeche,wfl.stw.2$SE_Flaeche,
                ~^~
NO COPY: R/BWI3_HR_Landkreis.R:186:27: style: Words within variable and function names should be separated by '_' rather than '.'.
    SE_Waldfl_StW=round(c(wfl.stw.1$SE_Flaeche,wfl.stw.2$SE_Flaeche,
                          ^~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:186:48: style: Commas should always have a space after.
    SE_Waldfl_StW=round(c(wfl.stw.1$SE_Flaeche,wfl.stw.2$SE_Flaeche,
                                               ^
NO COPY: R/BWI3_HR_Landkreis.R:186:48: style: Words within variable and function names should be separated by '_' rather than '.'.
    SE_Waldfl_StW=round(c(wfl.stw.1$SE_Flaeche,wfl.stw.2$SE_Flaeche,
                                               ^~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:187:25: style: Words within variable and function names should be separated by '_' rather than '.'.
                        wfl.stw.3$SE_Flaeche),0),
                        ^~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:187:47: style: Commas should always have a space after.
                        wfl.stw.3$SE_Flaeche),0),
                                              ^
NO COPY: R/BWI3_HR_Landkreis.R:188:25: style: Words within variable and function names should be separated by '_' rather than '.'.
    Waldfl_KW = round(c(wfl.kw.1$Flaeche,wfl.kw.2$Flaeche,wfl.kw.3$Flaeche),0),
                        ^~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:188:42: style: Commas should always have a space after.
    Waldfl_KW = round(c(wfl.kw.1$Flaeche,wfl.kw.2$Flaeche,wfl.kw.3$Flaeche),0),
                                         ^
NO COPY: R/BWI3_HR_Landkreis.R:188:42: style: Words within variable and function names should be separated by '_' rather than '.'.
    Waldfl_KW = round(c(wfl.kw.1$Flaeche,wfl.kw.2$Flaeche,wfl.kw.3$Flaeche),0),
                                         ^~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:188:59: style: Commas should always have a space after.
    Waldfl_KW = round(c(wfl.kw.1$Flaeche,wfl.kw.2$Flaeche,wfl.kw.3$Flaeche),0),
                                                          ^
NO COPY: R/BWI3_HR_Landkreis.R:188:59: style: Words within variable and function names should be separated by '_' rather than '.'.
    Waldfl_KW = round(c(wfl.kw.1$Flaeche,wfl.kw.2$Flaeche,wfl.kw.3$Flaeche),0),
                                                          ^~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:188:77: style: Commas should always have a space after.
    Waldfl_KW = round(c(wfl.kw.1$Flaeche,wfl.kw.2$Flaeche,wfl.kw.3$Flaeche),0),
                                                                            ^
NO COPY: R/BWI3_HR_Landkreis.R:189:28: style: Words within variable and function names should be separated by '_' rather than '.'.
    SE_Waldfl_KW = round(c(wfl.kw.1$SE_Flaeche,wfl.kw.2$SE_Flaeche,
                           ^~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:189:48: style: Commas should always have a space after.
    SE_Waldfl_KW = round(c(wfl.kw.1$SE_Flaeche,wfl.kw.2$SE_Flaeche,
                                               ^
NO COPY: R/BWI3_HR_Landkreis.R:189:48: style: Words within variable and function names should be separated by '_' rather than '.'.
    SE_Waldfl_KW = round(c(wfl.kw.1$SE_Flaeche,wfl.kw.2$SE_Flaeche,
                                               ^~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:190:25: style: Words within variable and function names should be separated by '_' rather than '.'.
                        wfl.kw.3$SE_Flaeche),0),
                        ^~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:190:46: style: Commas should always have a space after.
                        wfl.kw.3$SE_Flaeche),0),
                                             ^
NO COPY: R/BWI3_HR_Landkreis.R:191:1: style: lines should not be more than 80 characters.
    Waldfl_OEW = round(c(wfl.oew.1$Flaeche,wfl.oew.2$Flaeche,wfl.oew.3$Flaeche),0),
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:191:26: style: Words within variable and function names should be separated by '_' rather than '.'.
    Waldfl_OEW = round(c(wfl.oew.1$Flaeche,wfl.oew.2$Flaeche,wfl.oew.3$Flaeche),0),
                         ^~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:191:44: style: Commas should always have a space after.
    Waldfl_OEW = round(c(wfl.oew.1$Flaeche,wfl.oew.2$Flaeche,wfl.oew.3$Flaeche),0),
                                           ^
NO COPY: R/BWI3_HR_Landkreis.R:191:44: style: Words within variable and function names should be separated by '_' rather than '.'.
    Waldfl_OEW = round(c(wfl.oew.1$Flaeche,wfl.oew.2$Flaeche,wfl.oew.3$Flaeche),0),
                                           ^~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:191:62: style: Commas should always have a space after.
    Waldfl_OEW = round(c(wfl.oew.1$Flaeche,wfl.oew.2$Flaeche,wfl.oew.3$Flaeche),0),
                                                             ^
NO COPY: R/BWI3_HR_Landkreis.R:191:62: style: Words within variable and function names should be separated by '_' rather than '.'.
    Waldfl_OEW = round(c(wfl.oew.1$Flaeche,wfl.oew.2$Flaeche,wfl.oew.3$Flaeche),0),
                                                             ^~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:191:81: style: Commas should always have a space after.
    Waldfl_OEW = round(c(wfl.oew.1$Flaeche,wfl.oew.2$Flaeche,wfl.oew.3$Flaeche),0),
                                                                                ^
NO COPY: R/BWI3_HR_Landkreis.R:192:29: style: Words within variable and function names should be separated by '_' rather than '.'.
    SE_Waldfl_OEW = round(c(wfl.oew.1$SE_Flaeche,wfl.oew.2$SE_Flaeche,
                            ^~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:192:50: style: Commas should always have a space after.
    SE_Waldfl_OEW = round(c(wfl.oew.1$SE_Flaeche,wfl.oew.2$SE_Flaeche,
                                                 ^
NO COPY: R/BWI3_HR_Landkreis.R:192:50: style: Words within variable and function names should be separated by '_' rather than '.'.
    SE_Waldfl_OEW = round(c(wfl.oew.1$SE_Flaeche,wfl.oew.2$SE_Flaeche,
                                                 ^~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:193:25: style: Words within variable and function names should be separated by '_' rather than '.'.
                        wfl.oew.3$SE_Flaeche),0),
                        ^~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:193:47: style: Commas should always have a space after.
                        wfl.oew.3$SE_Flaeche),0),
                                              ^
NO COPY: R/BWI3_HR_Landkreis.R:194:25: style: Words within variable and function names should be separated by '_' rather than '.'.
    Waldfl_PW = round(c(wfl.pw.1$Flaeche,wfl.pw.2$Flaeche,wfl.pw.3$Flaeche),0),
                        ^~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:194:42: style: Commas should always have a space after.
    Waldfl_PW = round(c(wfl.pw.1$Flaeche,wfl.pw.2$Flaeche,wfl.pw.3$Flaeche),0),
                                         ^
NO COPY: R/BWI3_HR_Landkreis.R:194:42: style: Words within variable and function names should be separated by '_' rather than '.'.
    Waldfl_PW = round(c(wfl.pw.1$Flaeche,wfl.pw.2$Flaeche,wfl.pw.3$Flaeche),0),
                                         ^~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:194:59: style: Commas should always have a space after.
    Waldfl_PW = round(c(wfl.pw.1$Flaeche,wfl.pw.2$Flaeche,wfl.pw.3$Flaeche),0),
                                                          ^
NO COPY: R/BWI3_HR_Landkreis.R:194:59: style: Words within variable and function names should be separated by '_' rather than '.'.
    Waldfl_PW = round(c(wfl.pw.1$Flaeche,wfl.pw.2$Flaeche,wfl.pw.3$Flaeche),0),
                                                          ^~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:194:77: style: Commas should always have a space after.
    Waldfl_PW = round(c(wfl.pw.1$Flaeche,wfl.pw.2$Flaeche,wfl.pw.3$Flaeche),0),
                                                                            ^
NO COPY: R/BWI3_HR_Landkreis.R:195:28: style: Words within variable and function names should be separated by '_' rather than '.'.
    SE_Waldfl_PW = round(c(wfl.pw.1$SE_Flaeche,wfl.pw.2$SE_Flaeche,
                           ^~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:195:48: style: Commas should always have a space after.
    SE_Waldfl_PW = round(c(wfl.pw.1$SE_Flaeche,wfl.pw.2$SE_Flaeche,
                                               ^
NO COPY: R/BWI3_HR_Landkreis.R:195:48: style: Words within variable and function names should be separated by '_' rather than '.'.
    SE_Waldfl_PW = round(c(wfl.pw.1$SE_Flaeche,wfl.pw.2$SE_Flaeche,
                                               ^~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:196:25: style: Words within variable and function names should be separated by '_' rather than '.'.
                        wfl.pw.3$SE_Flaeche),0),
                        ^~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:196:46: style: Commas should always have a space after.
                        wfl.pw.3$SE_Flaeche),0),
                                             ^
NO COPY: R/BWI3_HR_Landkreis.R:197:1: style: lines should not be more than 80 characters.
    Waldfl_GPW = round(c(wfl.gpw.1$Flaeche,wfl.gpw.2$Flaeche,wfl.gpw.3$Flaeche),0),
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:197:26: style: Words within variable and function names should be separated by '_' rather than '.'.
    Waldfl_GPW = round(c(wfl.gpw.1$Flaeche,wfl.gpw.2$Flaeche,wfl.gpw.3$Flaeche),0),
                         ^~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:197:44: style: Commas should always have a space after.
    Waldfl_GPW = round(c(wfl.gpw.1$Flaeche,wfl.gpw.2$Flaeche,wfl.gpw.3$Flaeche),0),
                                           ^
NO COPY: R/BWI3_HR_Landkreis.R:197:44: style: Words within variable and function names should be separated by '_' rather than '.'.
    Waldfl_GPW = round(c(wfl.gpw.1$Flaeche,wfl.gpw.2$Flaeche,wfl.gpw.3$Flaeche),0),
                                           ^~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:197:62: style: Commas should always have a space after.
    Waldfl_GPW = round(c(wfl.gpw.1$Flaeche,wfl.gpw.2$Flaeche,wfl.gpw.3$Flaeche),0),
                                                             ^
NO COPY: R/BWI3_HR_Landkreis.R:197:62: style: Words within variable and function names should be separated by '_' rather than '.'.
    Waldfl_GPW = round(c(wfl.gpw.1$Flaeche,wfl.gpw.2$Flaeche,wfl.gpw.3$Flaeche),0),
                                                             ^~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:197:81: style: Commas should always have a space after.
    Waldfl_GPW = round(c(wfl.gpw.1$Flaeche,wfl.gpw.2$Flaeche,wfl.gpw.3$Flaeche),0),
                                                                                ^
NO COPY: R/BWI3_HR_Landkreis.R:198:29: style: Words within variable and function names should be separated by '_' rather than '.'.
    SE_Waldfl_GPW = round(c(wfl.gpw.1$SE_Flaeche,wfl.gpw.2$SE_Flaeche,
                            ^~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:198:50: style: Commas should always have a space after.
    SE_Waldfl_GPW = round(c(wfl.gpw.1$SE_Flaeche,wfl.gpw.2$SE_Flaeche,
                                                 ^
NO COPY: R/BWI3_HR_Landkreis.R:198:50: style: Words within variable and function names should be separated by '_' rather than '.'.
    SE_Waldfl_GPW = round(c(wfl.gpw.1$SE_Flaeche,wfl.gpw.2$SE_Flaeche,
                                                 ^~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:199:25: style: Words within variable and function names should be separated by '_' rather than '.'.
                        wfl.gpw.3$SE_Flaeche),0),
                        ^~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:199:47: style: Commas should always have a space after.
                        wfl.gpw.3$SE_Flaeche),0),
                                              ^
NO COPY: R/BWI3_HR_Landkreis.R:200:1: style: lines should not be more than 80 characters.
    Waldfl_MPW = round(c(wfl.mpw.1$Flaeche,wfl.mpw.2$Flaeche,wfl.mpw.3$Flaeche),0),
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:200:26: style: Words within variable and function names should be separated by '_' rather than '.'.
    Waldfl_MPW = round(c(wfl.mpw.1$Flaeche,wfl.mpw.2$Flaeche,wfl.mpw.3$Flaeche),0),
                         ^~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:200:44: style: Commas should always have a space after.
    Waldfl_MPW = round(c(wfl.mpw.1$Flaeche,wfl.mpw.2$Flaeche,wfl.mpw.3$Flaeche),0),
                                           ^
NO COPY: R/BWI3_HR_Landkreis.R:200:44: style: Words within variable and function names should be separated by '_' rather than '.'.
    Waldfl_MPW = round(c(wfl.mpw.1$Flaeche,wfl.mpw.2$Flaeche,wfl.mpw.3$Flaeche),0),
                                           ^~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:200:62: style: Commas should always have a space after.
    Waldfl_MPW = round(c(wfl.mpw.1$Flaeche,wfl.mpw.2$Flaeche,wfl.mpw.3$Flaeche),0),
                                                             ^
NO COPY: R/BWI3_HR_Landkreis.R:200:62: style: Words within variable and function names should be separated by '_' rather than '.'.
    Waldfl_MPW = round(c(wfl.mpw.1$Flaeche,wfl.mpw.2$Flaeche,wfl.mpw.3$Flaeche),0),
                                                             ^~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:200:81: style: Commas should always have a space after.
    Waldfl_MPW = round(c(wfl.mpw.1$Flaeche,wfl.mpw.2$Flaeche,wfl.mpw.3$Flaeche),0),
                                                                                ^
NO COPY: R/BWI3_HR_Landkreis.R:201:29: style: Words within variable and function names should be separated by '_' rather than '.'.
    SE_Waldfl_MPW = round(c(wfl.mpw.1$SE_Flaeche,wfl.mpw.2$SE_Flaeche,
                            ^~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:201:50: style: Commas should always have a space after.
    SE_Waldfl_MPW = round(c(wfl.mpw.1$SE_Flaeche,wfl.mpw.2$SE_Flaeche,
                                                 ^
NO COPY: R/BWI3_HR_Landkreis.R:201:50: style: Words within variable and function names should be separated by '_' rather than '.'.
    SE_Waldfl_MPW = round(c(wfl.mpw.1$SE_Flaeche,wfl.mpw.2$SE_Flaeche,
                                                 ^~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:202:25: style: Words within variable and function names should be separated by '_' rather than '.'.
                        wfl.mpw.3$SE_Flaeche),0),
                        ^~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:202:47: style: Commas should always have a space after.
                        wfl.mpw.3$SE_Flaeche),0),
                                              ^
NO COPY: R/BWI3_HR_Landkreis.R:203:1: style: lines should not be more than 80 characters.
    Waldfl_KPW = round(c(wfl.kpw.1$Flaeche,wfl.kpw.2$Flaeche,wfl.kpw.3$Flaeche),0),
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:203:26: style: Words within variable and function names should be separated by '_' rather than '.'.
    Waldfl_KPW = round(c(wfl.kpw.1$Flaeche,wfl.kpw.2$Flaeche,wfl.kpw.3$Flaeche),0),
                         ^~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:203:44: style: Commas should always have a space after.
    Waldfl_KPW = round(c(wfl.kpw.1$Flaeche,wfl.kpw.2$Flaeche,wfl.kpw.3$Flaeche),0),
                                           ^
NO COPY: R/BWI3_HR_Landkreis.R:203:44: style: Words within variable and function names should be separated by '_' rather than '.'.
    Waldfl_KPW = round(c(wfl.kpw.1$Flaeche,wfl.kpw.2$Flaeche,wfl.kpw.3$Flaeche),0),
                                           ^~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:203:62: style: Commas should always have a space after.
    Waldfl_KPW = round(c(wfl.kpw.1$Flaeche,wfl.kpw.2$Flaeche,wfl.kpw.3$Flaeche),0),
                                                             ^
NO COPY: R/BWI3_HR_Landkreis.R:203:62: style: Words within variable and function names should be separated by '_' rather than '.'.
    Waldfl_KPW = round(c(wfl.kpw.1$Flaeche,wfl.kpw.2$Flaeche,wfl.kpw.3$Flaeche),0),
                                                             ^~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:203:81: style: Commas should always have a space after.
    Waldfl_KPW = round(c(wfl.kpw.1$Flaeche,wfl.kpw.2$Flaeche,wfl.kpw.3$Flaeche),0),
                                                                                ^
NO COPY: R/BWI3_HR_Landkreis.R:204:29: style: Words within variable and function names should be separated by '_' rather than '.'.
    SE_Waldfl_KPW = round(c(wfl.kpw.1$SE_Flaeche,wfl.kpw.2$SE_Flaeche,
                            ^~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:204:50: style: Commas should always have a space after.
    SE_Waldfl_KPW = round(c(wfl.kpw.1$SE_Flaeche,wfl.kpw.2$SE_Flaeche,
                                                 ^
NO COPY: R/BWI3_HR_Landkreis.R:204:50: style: Words within variable and function names should be separated by '_' rather than '.'.
    SE_Waldfl_KPW = round(c(wfl.kpw.1$SE_Flaeche,wfl.kpw.2$SE_Flaeche,
                                                 ^~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:205:25: style: Words within variable and function names should be separated by '_' rather than '.'.
                        wfl.kpw.3$SE_Flaeche),0)),
                        ^~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:205:47: style: Commas should always have a space after.
                        wfl.kpw.3$SE_Flaeche),0)),
                                              ^
NO COPY: R/BWI3_HR_Landkreis.R:206:1: style: lines should not be more than 80 characters.
    Waldfl_Proz = data.frame(Eigentum=c("StW(BW)","KW","OEW","PW","GPW","MPW","KPW"),
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:206:38: style: Put spaces around all infix operators.
    Waldfl_Proz = data.frame(Eigentum=c("StW(BW)","KW","OEW","PW","GPW","MPW","KPW"),
                                    ~^~
NO COPY: R/BWI3_HR_Landkreis.R:206:51: style: Commas should always have a space after.
    Waldfl_Proz = data.frame(Eigentum=c("StW(BW)","KW","OEW","PW","GPW","MPW","KPW"),
                                                  ^
NO COPY: R/BWI3_HR_Landkreis.R:206:56: style: Commas should always have a space after.
    Waldfl_Proz = data.frame(Eigentum=c("StW(BW)","KW","OEW","PW","GPW","MPW","KPW"),
                                                       ^
NO COPY: R/BWI3_HR_Landkreis.R:206:62: style: Commas should always have a space after.
    Waldfl_Proz = data.frame(Eigentum=c("StW(BW)","KW","OEW","PW","GPW","MPW","KPW"),
                                                             ^
NO COPY: R/BWI3_HR_Landkreis.R:206:67: style: Commas should always have a space after.
    Waldfl_Proz = data.frame(Eigentum=c("StW(BW)","KW","OEW","PW","GPW","MPW","KPW"),
                                                                  ^
NO COPY: R/BWI3_HR_Landkreis.R:206:73: style: Commas should always have a space after.
    Waldfl_Proz = data.frame(Eigentum=c("StW(BW)","KW","OEW","PW","GPW","MPW","KPW"),
                                                                        ^
NO COPY: R/BWI3_HR_Landkreis.R:206:79: style: Commas should always have a space after.
    Waldfl_Proz = data.frame(Eigentum=c("StW(BW)","KW","OEW","PW","GPW","MPW","KPW"),
                                                                              ^
NO COPY: R/BWI3_HR_Landkreis.R:207:31: style: Words within variable and function names should be separated by '_' rather than '.'.
        Waldfl_Proz = round(c(fl.ant.stw.3$Fl_Proz, fl.ant.kw.3$Fl_Proz,
                              ^~~~~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:207:53: style: Words within variable and function names should be separated by '_' rather than '.'.
        Waldfl_Proz = round(c(fl.ant.stw.3$Fl_Proz, fl.ant.kw.3$Fl_Proz,
                                                    ^~~~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:208:15: style: Words within variable and function names should be separated by '_' rather than '.'.
              fl.ant.oew.3$Fl_Proz,fl.ant.pw.3$Fl_Proz,fl.ant.gpw.3$Fl_Proz,
              ^~~~~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:208:36: style: Commas should always have a space after.
              fl.ant.oew.3$Fl_Proz,fl.ant.pw.3$Fl_Proz,fl.ant.gpw.3$Fl_Proz,
                                   ^
NO COPY: R/BWI3_HR_Landkreis.R:208:36: style: Words within variable and function names should be separated by '_' rather than '.'.
              fl.ant.oew.3$Fl_Proz,fl.ant.pw.3$Fl_Proz,fl.ant.gpw.3$Fl_Proz,
                                   ^~~~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:208:56: style: Commas should always have a space after.
              fl.ant.oew.3$Fl_Proz,fl.ant.pw.3$Fl_Proz,fl.ant.gpw.3$Fl_Proz,
                                                       ^
NO COPY: R/BWI3_HR_Landkreis.R:208:56: style: Words within variable and function names should be separated by '_' rather than '.'.
              fl.ant.oew.3$Fl_Proz,fl.ant.pw.3$Fl_Proz,fl.ant.gpw.3$Fl_Proz,
                                                       ^~~~~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:209:15: style: Words within variable and function names should be separated by '_' rather than '.'.
              fl.ant.mpw.3$Fl_Proz, fl.ant.kpw.3$Fl_Proz),1),
              ^~~~~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:209:37: style: Words within variable and function names should be separated by '_' rather than '.'.
              fl.ant.mpw.3$Fl_Proz, fl.ant.kpw.3$Fl_Proz),1),
                                    ^~~~~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:209:59: style: Commas should always have a space after.
              fl.ant.mpw.3$Fl_Proz, fl.ant.kpw.3$Fl_Proz),1),
                                                          ^
NO COPY: R/BWI3_HR_Landkreis.R:210:34: style: Words within variable and function names should be separated by '_' rather than '.'.
        SE_Waldfl_Proz = round(c(fl.ant.stw.3$SE_Fl_Proz,fl.ant.kw.3$SE_Fl_Proz,
                                 ^~~~~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:210:58: style: Commas should always have a space after.
        SE_Waldfl_Proz = round(c(fl.ant.stw.3$SE_Fl_Proz,fl.ant.kw.3$SE_Fl_Proz,
                                                         ^
NO COPY: R/BWI3_HR_Landkreis.R:210:58: style: Words within variable and function names should be separated by '_' rather than '.'.
        SE_Waldfl_Proz = round(c(fl.ant.stw.3$SE_Fl_Proz,fl.ant.kw.3$SE_Fl_Proz,
                                                         ^~~~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:211:15: style: Words within variable and function names should be separated by '_' rather than '.'.
              fl.ant.oew.3$SE_Fl_Proz,fl.ant.pw.3$SE_Fl_Proz,
              ^~~~~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:211:39: style: Commas should always have a space after.
              fl.ant.oew.3$SE_Fl_Proz,fl.ant.pw.3$SE_Fl_Proz,
                                      ^
NO COPY: R/BWI3_HR_Landkreis.R:211:39: style: Words within variable and function names should be separated by '_' rather than '.'.
              fl.ant.oew.3$SE_Fl_Proz,fl.ant.pw.3$SE_Fl_Proz,
                                      ^~~~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:212:15: style: Words within variable and function names should be separated by '_' rather than '.'.
              fl.ant.gpw.3$SE_Fl_Proz,
              ^~~~~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:213:15: style: Words within variable and function names should be separated by '_' rather than '.'.
              fl.ant.mpw.3$SE_Fl_Proz,fl.ant.kpw.3$SE_Fl_Proz),1)),
              ^~~~~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:213:39: style: Commas should always have a space after.
              fl.ant.mpw.3$SE_Fl_Proz,fl.ant.kpw.3$SE_Fl_Proz),1)),
                                      ^
NO COPY: R/BWI3_HR_Landkreis.R:213:39: style: Words within variable and function names should be separated by '_' rather than '.'.
              fl.ant.mpw.3$SE_Fl_Proz,fl.ant.kpw.3$SE_Fl_Proz),1)),
                                      ^~~~~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:213:64: style: Commas should always have a space after.
              fl.ant.mpw.3$SE_Fl_Proz,fl.ant.kpw.3$SE_Fl_Proz),1)),
                                                               ^
NO COPY: R/BWI3_HR_Landkreis.R:214:41: style: Put spaces around all infix operators.
    begehb_Holzbfl = data.frame(Eigentum=
                                       ~^~
NO COPY: R/BWI3_HR_Landkreis.R:215:18: style: Commas should always have a space after.
          c("GW","StW(BW)","KW","OEW","PW","GPW","MPW","KPW"),
                 ^
NO COPY: R/BWI3_HR_Landkreis.R:215:28: style: Commas should always have a space after.
          c("GW","StW(BW)","KW","OEW","PW","GPW","MPW","KPW"),
                           ^
NO COPY: R/BWI3_HR_Landkreis.R:215:33: style: Commas should always have a space after.
          c("GW","StW(BW)","KW","OEW","PW","GPW","MPW","KPW"),
                                ^
NO COPY: R/BWI3_HR_Landkreis.R:215:39: style: Commas should always have a space after.
          c("GW","StW(BW)","KW","OEW","PW","GPW","MPW","KPW"),
                                      ^
NO COPY: R/BWI3_HR_Landkreis.R:215:44: style: Commas should always have a space after.
          c("GW","StW(BW)","KW","OEW","PW","GPW","MPW","KPW"),
                                           ^
NO COPY: R/BWI3_HR_Landkreis.R:215:50: style: Commas should always have a space after.
          c("GW","StW(BW)","KW","OEW","PW","GPW","MPW","KPW"),
                                                 ^
NO COPY: R/BWI3_HR_Landkreis.R:215:56: style: Commas should always have a space after.
          c("GW","StW(BW)","KW","OEW","PW","GPW","MPW","KPW"),
                                                       ^
NO COPY: R/BWI3_HR_Landkreis.R:216:40: style: Commas should always have a space after.
        b_HBF = round(c(bhbf.3$Flaeche,bhbf.stw.3$Flaeche,bhbf.kw.3$Flaeche,
                                       ^
NO COPY: R/BWI3_HR_Landkreis.R:216:40: style: Words within variable and function names should be separated by '_' rather than '.'.
        b_HBF = round(c(bhbf.3$Flaeche,bhbf.stw.3$Flaeche,bhbf.kw.3$Flaeche,
                                       ^~~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:216:59: style: Commas should always have a space after.
        b_HBF = round(c(bhbf.3$Flaeche,bhbf.stw.3$Flaeche,bhbf.kw.3$Flaeche,
                                                          ^
NO COPY: R/BWI3_HR_Landkreis.R:216:59: style: Words within variable and function names should be separated by '_' rather than '.'.
        b_HBF = round(c(bhbf.3$Flaeche,bhbf.stw.3$Flaeche,bhbf.kw.3$Flaeche,
                                                          ^~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:217:13: style: Words within variable and function names should be separated by '_' rather than '.'.
            bhbf.oew.3$Flaeche,bhbf.pw.3$Flaeche,bhbf.gpw.3$Flaeche,
            ^~~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:217:32: style: Commas should always have a space after.
            bhbf.oew.3$Flaeche,bhbf.pw.3$Flaeche,bhbf.gpw.3$Flaeche,
                               ^
NO COPY: R/BWI3_HR_Landkreis.R:217:32: style: Words within variable and function names should be separated by '_' rather than '.'.
            bhbf.oew.3$Flaeche,bhbf.pw.3$Flaeche,bhbf.gpw.3$Flaeche,
                               ^~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:217:50: style: Commas should always have a space after.
            bhbf.oew.3$Flaeche,bhbf.pw.3$Flaeche,bhbf.gpw.3$Flaeche,
                                                 ^
NO COPY: R/BWI3_HR_Landkreis.R:217:50: style: Words within variable and function names should be separated by '_' rather than '.'.
            bhbf.oew.3$Flaeche,bhbf.pw.3$Flaeche,bhbf.gpw.3$Flaeche,
                                                 ^~~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:218:13: style: Words within variable and function names should be separated by '_' rather than '.'.
            bhbf.mpw.3$Flaeche,bhbf.kpw.3$Flaeche),0),
            ^~~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:218:32: style: Commas should always have a space after.
            bhbf.mpw.3$Flaeche,bhbf.kpw.3$Flaeche),0),
                               ^
NO COPY: R/BWI3_HR_Landkreis.R:218:32: style: Words within variable and function names should be separated by '_' rather than '.'.
            bhbf.mpw.3$Flaeche,bhbf.kpw.3$Flaeche),0),
                               ^~~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:218:52: style: Commas should always have a space after.
            bhbf.mpw.3$Flaeche,bhbf.kpw.3$Flaeche),0),
                                                   ^
NO COPY: R/BWI3_HR_Landkreis.R:219:55: style: Commas should always have a space after.
        SE_begehb_Holzbfl = round(c(bhbf.3$SE_Flaeche,bhbf.stw.3$SE_Flaeche,
                                                      ^
NO COPY: R/BWI3_HR_Landkreis.R:219:55: style: Words within variable and function names should be separated by '_' rather than '.'.
        SE_begehb_Holzbfl = round(c(bhbf.3$SE_Flaeche,bhbf.stw.3$SE_Flaeche,
                                                      ^~~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:220:17: style: Words within variable and function names should be separated by '_' rather than '.'.
                bhbf.kw.3$SE_Flaeche, bhbf.oew.3$SE_Flaeche,
                ^~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:220:39: style: Words within variable and function names should be separated by '_' rather than '.'.
                bhbf.kw.3$SE_Flaeche, bhbf.oew.3$SE_Flaeche,
                                      ^~~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:221:17: style: Words within variable and function names should be separated by '_' rather than '.'.
                bhbf.pw.3$SE_Flaeche,bhbf.gpw.3$SE_Flaeche,
                ^~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:221:38: style: Commas should always have a space after.
                bhbf.pw.3$SE_Flaeche,bhbf.gpw.3$SE_Flaeche,
                                     ^
NO COPY: R/BWI3_HR_Landkreis.R:221:38: style: Words within variable and function names should be separated by '_' rather than '.'.
                bhbf.pw.3$SE_Flaeche,bhbf.gpw.3$SE_Flaeche,
                                     ^~~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:222:17: style: Words within variable and function names should be separated by '_' rather than '.'.
                bhbf.mpw.3$SE_Flaeche,bhbf.kpw.3$SE_Flaeche),0))))
                ^~~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:222:39: style: Commas should always have a space after.
                bhbf.mpw.3$SE_Flaeche,bhbf.kpw.3$SE_Flaeche),0))))
                                      ^
NO COPY: R/BWI3_HR_Landkreis.R:222:39: style: Words within variable and function names should be separated by '_' rather than '.'.
                bhbf.mpw.3$SE_Flaeche,bhbf.kpw.3$SE_Flaeche),0))))
                                      ^~~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:222:62: style: Commas should always have a space after.
                bhbf.mpw.3$SE_Flaeche,bhbf.kpw.3$SE_Flaeche),0))))
                                                             ^
NO COPY: R/BWI3_HR_Landkreis.R:265:32: style: Commas should always have a space after.
        fl.stratum.fun(auswahl,ecken.3,trakte.3,A))
                               ^
NO COPY: R/BWI3_HR_Landkreis.R:265:40: style: Commas should always have a space after.
        fl.stratum.fun(auswahl,ecken.3,trakte.3,A))
                                       ^
NO COPY: R/BWI3_HR_Landkreis.R:265:49: style: Commas should always have a space after.
        fl.stratum.fun(auswahl,ecken.3,trakte.3,A))
                                                ^
NO COPY: R/BWI3_HR_Landkreis.R:268:32: style: Commas should always have a space after.
        fl.stratum.fun(auswahl,ecken.2,trakte.2,A.12))
                               ^
NO COPY: R/BWI3_HR_Landkreis.R:268:40: style: Commas should always have a space after.
        fl.stratum.fun(auswahl,ecken.2,trakte.2,A.12))
                                       ^
NO COPY: R/BWI3_HR_Landkreis.R:268:49: style: Commas should always have a space after.
        fl.stratum.fun(auswahl,ecken.2,trakte.2,A.12))
                                                ^
NO COPY: R/BWI3_HR_Landkreis.R:270:32: style: Commas should always have a space after.
        fl.stratum.fun(auswahl,ecken.1,trakte.1,A.12))
                               ^
NO COPY: R/BWI3_HR_Landkreis.R:270:40: style: Commas should always have a space after.
        fl.stratum.fun(auswahl,ecken.1,trakte.1,A.12))
                                       ^
NO COPY: R/BWI3_HR_Landkreis.R:270:49: style: Commas should always have a space after.
        fl.stratum.fun(auswahl,ecken.1,trakte.1,A.12))
                                                ^
NO COPY: R/BWI3_HR_Landkreis.R:274:11: style: Variable and function names should be all lowercase.
  auswahl$EigArt=c("BW","StW")
          ^~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:274:17: style: Use <-, not =, for assignment.
  auswahl$EigArt=c("BW","StW")
                ^
NO COPY: R/BWI3_HR_Landkreis.R:274:17: style: Put spaces around all infix operators.
  auswahl$EigArt=c("BW","StW")
               ~^~
NO COPY: R/BWI3_HR_Landkreis.R:274:25: style: Commas should always have a space after.
  auswahl$EigArt=c("BW","StW")
                        ^
NO COPY: R/BWI3_HR_Landkreis.R:276:4: style: Words within variable and function names should be separated by '_' rather than '.'.
  (wfl.stw.3 <-
   ^~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:277:41: style: Commas should always have a space after.
        fl.stratum.fun(auswahl, ecken.3,trakte.3,A))
                                        ^
NO COPY: R/BWI3_HR_Landkreis.R:277:50: style: Commas should always have a space after.
        fl.stratum.fun(auswahl, ecken.3,trakte.3,A))
                                                 ^
NO COPY: R/BWI3_HR_Landkreis.R:279:4: style: Words within variable and function names should be separated by '_' rather than '.'.
  (wfl.stw.2 <-
   ^~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:280:41: style: Commas should always have a space after.
        fl.stratum.fun(auswahl, ecken.2,trakte.2,A.12))
                                        ^
NO COPY: R/BWI3_HR_Landkreis.R:280:50: style: Commas should always have a space after.
        fl.stratum.fun(auswahl, ecken.2,trakte.2,A.12))
                                                 ^
NO COPY: R/BWI3_HR_Landkreis.R:281:4: style: Words within variable and function names should be separated by '_' rather than '.'.
  (wfl.stw.1 <-
   ^~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:282:41: style: Commas should always have a space after.
        fl.stratum.fun(auswahl, ecken.1,trakte.1,A.12))
                                        ^
NO COPY: R/BWI3_HR_Landkreis.R:282:50: style: Commas should always have a space after.
        fl.stratum.fun(auswahl, ecken.1,trakte.1,A.12))
                                                 ^
NO COPY: R/BWI3_HR_Landkreis.R:285:11: style: Variable and function names should be all lowercase.
  auswahl$EigArt="BW"
          ^~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:285:17: style: Use <-, not =, for assignment.
  auswahl$EigArt="BW"
                ^
NO COPY: R/BWI3_HR_Landkreis.R:285:17: style: Put spaces around all infix operators.
  auswahl$EigArt="BW"
               ~^~
NO COPY: R/BWI3_HR_Landkreis.R:286:4: style: Words within variable and function names should be separated by '_' rather than '.'.
  (wfl.bw.3 <-
   ^~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:287:41: style: Commas should always have a space after.
        fl.stratum.fun(auswahl, ecken.3,trakte.3,A))
                                        ^
NO COPY: R/BWI3_HR_Landkreis.R:287:50: style: Commas should always have a space after.
        fl.stratum.fun(auswahl, ecken.3,trakte.3,A))
                                                 ^
NO COPY: R/BWI3_HR_Landkreis.R:289:11: style: Variable and function names should be all lowercase.
  auswahl$EigArt="KW"
          ^~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:289:17: style: Use <-, not =, for assignment.
  auswahl$EigArt="KW"
                ^
NO COPY: R/BWI3_HR_Landkreis.R:289:17: style: Put spaces around all infix operators.
  auswahl$EigArt="KW"
               ~^~
NO COPY: R/BWI3_HR_Landkreis.R:291:4: style: Words within variable and function names should be separated by '_' rather than '.'.
  (wfl.kw.3 <-
   ^~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:292:41: style: Commas should always have a space after.
        fl.stratum.fun(auswahl, ecken.3,trakte.3,A))
                                        ^
NO COPY: R/BWI3_HR_Landkreis.R:292:50: style: Commas should always have a space after.
        fl.stratum.fun(auswahl, ecken.3,trakte.3,A))
                                                 ^
NO COPY: R/BWI3_HR_Landkreis.R:294:4: style: Words within variable and function names should be separated by '_' rather than '.'.
  (wfl.kw.2 <-
   ^~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:295:41: style: Commas should always have a space after.
        fl.stratum.fun(auswahl, ecken.2,trakte.2,A.12))
                                        ^
NO COPY: R/BWI3_HR_Landkreis.R:295:50: style: Commas should always have a space after.
        fl.stratum.fun(auswahl, ecken.2,trakte.2,A.12))
                                                 ^
NO COPY: R/BWI3_HR_Landkreis.R:296:4: style: Words within variable and function names should be separated by '_' rather than '.'.
  (wfl.kw.1 <-
   ^~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:297:41: style: Commas should always have a space after.
        fl.stratum.fun(auswahl, ecken.1,trakte.1,A.12))
                                        ^
NO COPY: R/BWI3_HR_Landkreis.R:297:50: style: Commas should always have a space after.
        fl.stratum.fun(auswahl, ecken.1,trakte.1,A.12))
                                                 ^
NO COPY: R/BWI3_HR_Landkreis.R:299:11: style: Variable and function names should be all lowercase.
  auswahl$EigArt=c("BW","StW","KW")
          ^~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:299:17: style: Use <-, not =, for assignment.
  auswahl$EigArt=c("BW","StW","KW")
                ^
NO COPY: R/BWI3_HR_Landkreis.R:299:17: style: Put spaces around all infix operators.
  auswahl$EigArt=c("BW","StW","KW")
               ~^~
NO COPY: R/BWI3_HR_Landkreis.R:299:25: style: Commas should always have a space after.
  auswahl$EigArt=c("BW","StW","KW")
                        ^
NO COPY: R/BWI3_HR_Landkreis.R:299:31: style: Commas should always have a space after.
  auswahl$EigArt=c("BW","StW","KW")
                              ^
NO COPY: R/BWI3_HR_Landkreis.R:301:4: style: Words within variable and function names should be separated by '_' rather than '.'.
  (wfl.oew.3 <-
   ^~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:302:41: style: Commas should always have a space after.
        fl.stratum.fun(auswahl, ecken.3,trakte.3,A))
                                        ^
NO COPY: R/BWI3_HR_Landkreis.R:302:50: style: Commas should always have a space after.
        fl.stratum.fun(auswahl, ecken.3,trakte.3,A))
                                                 ^
NO COPY: R/BWI3_HR_Landkreis.R:304:4: style: Words within variable and function names should be separated by '_' rather than '.'.
  (wfl.oew.2 <-
   ^~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:305:41: style: Commas should always have a space after.
        fl.stratum.fun(auswahl, ecken.2,trakte.2,A.12))
                                        ^
NO COPY: R/BWI3_HR_Landkreis.R:305:50: style: Commas should always have a space after.
        fl.stratum.fun(auswahl, ecken.2,trakte.2,A.12))
                                                 ^
NO COPY: R/BWI3_HR_Landkreis.R:306:4: style: Words within variable and function names should be separated by '_' rather than '.'.
  (wfl.oew.1 <-
   ^~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:307:41: style: Commas should always have a space after.
        fl.stratum.fun(auswahl, ecken.1,trakte.1,A.12))
                                        ^
NO COPY: R/BWI3_HR_Landkreis.R:307:50: style: Commas should always have a space after.
        fl.stratum.fun(auswahl, ecken.1,trakte.1,A.12))
                                                 ^
NO COPY: R/BWI3_HR_Landkreis.R:310:11: style: Variable and function names should be all lowercase.
  auswahl$EigArt="PW"
          ^~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:310:17: style: Use <-, not =, for assignment.
  auswahl$EigArt="PW"
                ^
NO COPY: R/BWI3_HR_Landkreis.R:310:17: style: Put spaces around all infix operators.
  auswahl$EigArt="PW"
               ~^~
NO COPY: R/BWI3_HR_Landkreis.R:312:4: style: Words within variable and function names should be separated by '_' rather than '.'.
  (wfl.pw.3 <-
   ^~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:313:41: style: Commas should always have a space after.
        fl.stratum.fun(auswahl, ecken.3,trakte.3,A))
                                        ^
NO COPY: R/BWI3_HR_Landkreis.R:313:50: style: Commas should always have a space after.
        fl.stratum.fun(auswahl, ecken.3,trakte.3,A))
                                                 ^
NO COPY: R/BWI3_HR_Landkreis.R:315:4: style: Words within variable and function names should be separated by '_' rather than '.'.
  (wfl.pw.2 <-
   ^~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:316:41: style: Commas should always have a space after.
        fl.stratum.fun(auswahl, ecken.2,trakte.2,A.12))
                                        ^
NO COPY: R/BWI3_HR_Landkreis.R:316:50: style: Commas should always have a space after.
        fl.stratum.fun(auswahl, ecken.2,trakte.2,A.12))
                                                 ^
NO COPY: R/BWI3_HR_Landkreis.R:317:4: style: Words within variable and function names should be separated by '_' rather than '.'.
  (wfl.pw.1 <-
   ^~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:318:41: style: Commas should always have a space after.
        fl.stratum.fun(auswahl, ecken.1,trakte.1,A.12))
                                        ^
NO COPY: R/BWI3_HR_Landkreis.R:318:50: style: Commas should always have a space after.
        fl.stratum.fun(auswahl, ecken.1,trakte.1,A.12))
                                                 ^
NO COPY: R/BWI3_HR_Landkreis.R:322:11: style: Variable and function names should be all lowercase.
  auswahl$EigArt2="GPW"
          ^~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:322:18: style: Use <-, not =, for assignment.
  auswahl$EigArt2="GPW"
                 ^
NO COPY: R/BWI3_HR_Landkreis.R:322:18: style: Put spaces around all infix operators.
  auswahl$EigArt2="GPW"
                ~^~
NO COPY: R/BWI3_HR_Landkreis.R:324:4: style: Words within variable and function names should be separated by '_' rather than '.'.
  (wfl.gpw.3 <-
   ^~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:325:41: style: Commas should always have a space after.
        fl.stratum.fun(auswahl, ecken.3,trakte.3,A))
                                        ^
NO COPY: R/BWI3_HR_Landkreis.R:325:50: style: Commas should always have a space after.
        fl.stratum.fun(auswahl, ecken.3,trakte.3,A))
                                                 ^
NO COPY: R/BWI3_HR_Landkreis.R:327:4: style: Words within variable and function names should be separated by '_' rather than '.'.
  (wfl.gpw.2 <-
   ^~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:328:41: style: Commas should always have a space after.
        fl.stratum.fun(auswahl, ecken.2,trakte.2,A.12))
                                        ^
NO COPY: R/BWI3_HR_Landkreis.R:328:50: style: Commas should always have a space after.
        fl.stratum.fun(auswahl, ecken.2,trakte.2,A.12))
                                                 ^
NO COPY: R/BWI3_HR_Landkreis.R:329:4: style: Words within variable and function names should be separated by '_' rather than '.'.
  (wfl.gpw.1 <-
   ^~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:330:41: style: Commas should always have a space after.
        fl.stratum.fun(auswahl, ecken.1,trakte.1,A.12))
                                        ^
NO COPY: R/BWI3_HR_Landkreis.R:330:50: style: Commas should always have a space after.
        fl.stratum.fun(auswahl, ecken.1,trakte.1,A.12))
                                                 ^
NO COPY: R/BWI3_HR_Landkreis.R:332:11: style: Variable and function names should be all lowercase.
  auswahl$EigArt2="MPW"
          ^~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:332:18: style: Use <-, not =, for assignment.
  auswahl$EigArt2="MPW"
                 ^
NO COPY: R/BWI3_HR_Landkreis.R:332:18: style: Put spaces around all infix operators.
  auswahl$EigArt2="MPW"
                ~^~
NO COPY: R/BWI3_HR_Landkreis.R:334:4: style: Words within variable and function names should be separated by '_' rather than '.'.
  (wfl.mpw.3 <-
   ^~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:335:41: style: Commas should always have a space after.
        fl.stratum.fun(auswahl, ecken.3,trakte.3,A))
                                        ^
NO COPY: R/BWI3_HR_Landkreis.R:335:50: style: Commas should always have a space after.
        fl.stratum.fun(auswahl, ecken.3,trakte.3,A))
                                                 ^
NO COPY: R/BWI3_HR_Landkreis.R:337:4: style: Words within variable and function names should be separated by '_' rather than '.'.
  (wfl.mpw.2 <-
   ^~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:338:41: style: Commas should always have a space after.
        fl.stratum.fun(auswahl, ecken.2,trakte.2,A.12))
                                        ^
NO COPY: R/BWI3_HR_Landkreis.R:338:50: style: Commas should always have a space after.
        fl.stratum.fun(auswahl, ecken.2,trakte.2,A.12))
                                                 ^
NO COPY: R/BWI3_HR_Landkreis.R:339:4: style: Words within variable and function names should be separated by '_' rather than '.'.
  (wfl.mpw.1 <-
   ^~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:340:41: style: Commas should always have a space after.
        fl.stratum.fun(auswahl, ecken.1,trakte.1,A.12))
                                        ^
NO COPY: R/BWI3_HR_Landkreis.R:340:50: style: Commas should always have a space after.
        fl.stratum.fun(auswahl, ecken.1,trakte.1,A.12))
                                                 ^
NO COPY: R/BWI3_HR_Landkreis.R:343:11: style: Variable and function names should be all lowercase.
  auswahl$EigArt2="KPW"
          ^~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:343:18: style: Use <-, not =, for assignment.
  auswahl$EigArt2="KPW"
                 ^
NO COPY: R/BWI3_HR_Landkreis.R:343:18: style: Put spaces around all infix operators.
  auswahl$EigArt2="KPW"
                ~^~
NO COPY: R/BWI3_HR_Landkreis.R:345:4: style: Words within variable and function names should be separated by '_' rather than '.'.
  (wfl.kpw.3 <-
   ^~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:346:41: style: Commas should always have a space after.
        fl.stratum.fun(auswahl, ecken.3,trakte.3,A))
                                        ^
NO COPY: R/BWI3_HR_Landkreis.R:346:50: style: Commas should always have a space after.
        fl.stratum.fun(auswahl, ecken.3,trakte.3,A))
                                                 ^
NO COPY: R/BWI3_HR_Landkreis.R:348:4: style: Words within variable and function names should be separated by '_' rather than '.'.
  (wfl.kpw.2 <-
   ^~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:349:41: style: Commas should always have a space after.
        fl.stratum.fun(auswahl, ecken.2,trakte.2,A.12))
                                        ^
NO COPY: R/BWI3_HR_Landkreis.R:349:50: style: Commas should always have a space after.
        fl.stratum.fun(auswahl, ecken.2,trakte.2,A.12))
                                                 ^
NO COPY: R/BWI3_HR_Landkreis.R:350:4: style: Words within variable and function names should be separated by '_' rather than '.'.
  (wfl.kpw.1 <-
   ^~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:351:41: style: Commas should always have a space after.
        fl.stratum.fun(auswahl, ecken.1,trakte.1,A.12))
                                        ^
NO COPY: R/BWI3_HR_Landkreis.R:351:50: style: Commas should always have a space after.
        fl.stratum.fun(auswahl, ecken.1,trakte.1,A.12))
                                                 ^
NO COPY: R/BWI3_HR_Landkreis.R:358:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  fl.ant.stw.3 <-
  ^~~~~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:359:33: style: Commas should always have a space after.
  fl.proz.stratum.fun(auswahl.o,list(EigArt=c("BW","StW")),
                                ^
NO COPY: R/BWI3_HR_Landkreis.R:359:44: style: Put spaces around all infix operators.
  fl.proz.stratum.fun(auswahl.o,list(EigArt=c("BW","StW")),
                                          ~^~
NO COPY: R/BWI3_HR_Landkreis.R:359:52: style: Commas should always have a space after.
  fl.proz.stratum.fun(auswahl.o,list(EigArt=c("BW","StW")),
                                                   ^
NO COPY: R/BWI3_HR_Landkreis.R:362:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  fl.ant.kw.3 <-
  ^~~~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:363:33: style: Commas should always have a space after.
  fl.proz.stratum.fun(auswahl.o,list(EigArt="KW"),ecken.3)
                                ^
NO COPY: R/BWI3_HR_Landkreis.R:363:44: style: Put spaces around all infix operators.
  fl.proz.stratum.fun(auswahl.o,list(EigArt="KW"),ecken.3)
                                          ~^~
NO COPY: R/BWI3_HR_Landkreis.R:363:51: style: Commas should always have a space after.
  fl.proz.stratum.fun(auswahl.o,list(EigArt="KW"),ecken.3)
                                                  ^
NO COPY: R/BWI3_HR_Landkreis.R:365:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  fl.ant.oew.3 <-
  ^~~~~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:366:33: style: Commas should always have a space after.
  fl.proz.stratum.fun(auswahl.o,list(EigArt=c("BW","StW","KW")),ecken.3)
                                ^
NO COPY: R/BWI3_HR_Landkreis.R:366:44: style: Put spaces around all infix operators.
  fl.proz.stratum.fun(auswahl.o,list(EigArt=c("BW","StW","KW")),ecken.3)
                                          ~^~
NO COPY: R/BWI3_HR_Landkreis.R:366:52: style: Commas should always have a space after.
  fl.proz.stratum.fun(auswahl.o,list(EigArt=c("BW","StW","KW")),ecken.3)
                                                   ^
NO COPY: R/BWI3_HR_Landkreis.R:366:58: style: Commas should always have a space after.
  fl.proz.stratum.fun(auswahl.o,list(EigArt=c("BW","StW","KW")),ecken.3)
                                                         ^
NO COPY: R/BWI3_HR_Landkreis.R:366:65: style: Commas should always have a space after.
  fl.proz.stratum.fun(auswahl.o,list(EigArt=c("BW","StW","KW")),ecken.3)
                                                                ^
NO COPY: R/BWI3_HR_Landkreis.R:368:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  fl.ant.pw.3 <-
  ^~~~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:369:33: style: Commas should always have a space after.
  fl.proz.stratum.fun(auswahl.o,list(EigArt="PW"),ecken.3)
                                ^
NO COPY: R/BWI3_HR_Landkreis.R:369:44: style: Put spaces around all infix operators.
  fl.proz.stratum.fun(auswahl.o,list(EigArt="PW"),ecken.3)
                                          ~^~
NO COPY: R/BWI3_HR_Landkreis.R:369:51: style: Commas should always have a space after.
  fl.proz.stratum.fun(auswahl.o,list(EigArt="PW"),ecken.3)
                                                  ^
NO COPY: R/BWI3_HR_Landkreis.R:371:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  fl.ant.gpw.3 <-
  ^~~~~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:372:33: style: Commas should always have a space after.
  fl.proz.stratum.fun(auswahl.o,list(EigArt2="GPW"),ecken.3)
                                ^
NO COPY: R/BWI3_HR_Landkreis.R:372:45: style: Put spaces around all infix operators.
  fl.proz.stratum.fun(auswahl.o,list(EigArt2="GPW"),ecken.3)
                                           ~^~
NO COPY: R/BWI3_HR_Landkreis.R:372:53: style: Commas should always have a space after.
  fl.proz.stratum.fun(auswahl.o,list(EigArt2="GPW"),ecken.3)
                                                    ^
NO COPY: R/BWI3_HR_Landkreis.R:374:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  fl.ant.mpw.3 <-
  ^~~~~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:375:33: style: Commas should always have a space after.
  fl.proz.stratum.fun(auswahl.o,list(EigArt2="MPW"),ecken.3)
                                ^
NO COPY: R/BWI3_HR_Landkreis.R:375:45: style: Put spaces around all infix operators.
  fl.proz.stratum.fun(auswahl.o,list(EigArt2="MPW"),ecken.3)
                                           ~^~
NO COPY: R/BWI3_HR_Landkreis.R:375:53: style: Commas should always have a space after.
  fl.proz.stratum.fun(auswahl.o,list(EigArt2="MPW"),ecken.3)
                                                    ^
NO COPY: R/BWI3_HR_Landkreis.R:376:4: style: Commented code should be removed.
  #Klein-PW
   ^~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:377:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  fl.ant.kpw.3 <-
  ^~~~~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:378:33: style: Commas should always have a space after.
  fl.proz.stratum.fun(auswahl.o,list(EigArt2="KPW"),ecken.3)
                                ^
NO COPY: R/BWI3_HR_Landkreis.R:378:45: style: Put spaces around all infix operators.
  fl.proz.stratum.fun(auswahl.o,list(EigArt2="KPW"),ecken.3)
                                           ~^~
NO COPY: R/BWI3_HR_Landkreis.R:378:53: style: Commas should always have a space after.
  fl.proz.stratum.fun(auswahl.o,list(EigArt2="KPW"),ecken.3)
                                                    ^
NO COPY: R/BWI3_HR_Landkreis.R:382:15: style: Use <-, not =, for assignment.
  auswahl.o$Wa=c(3,5)
              ^
NO COPY: R/BWI3_HR_Landkreis.R:382:15: style: Put spaces around all infix operators.
  auswahl.o$Wa=c(3,5)
             ~^~
NO COPY: R/BWI3_HR_Landkreis.R:382:20: style: Commas should always have a space after.
  auswahl.o$Wa=c(3,5)
                   ^
NO COPY: R/BWI3_HR_Landkreis.R:383:21: style: Use <-, not =, for assignment.
  auswahl.o$Begehbar=1
                    ^
NO COPY: R/BWI3_HR_Landkreis.R:383:21: style: Put spaces around all infix operators.
  auswahl.o$Begehbar=1
                   ~^~
NO COPY: R/BWI3_HR_Landkreis.R:385:37: style: Commas should always have a space after.
  (bhbf.3 <- fl.stratum.fun(auswahl,ecken.3,trakte.3,A))
                                    ^
NO COPY: R/BWI3_HR_Landkreis.R:385:45: style: Commas should always have a space after.
  (bhbf.3 <- fl.stratum.fun(auswahl,ecken.3,trakte.3,A))
                                            ^
NO COPY: R/BWI3_HR_Landkreis.R:385:54: style: Commas should always have a space after.
  (bhbf.3 <- fl.stratum.fun(auswahl,ecken.3,trakte.3,A))
                                                     ^
NO COPY: R/BWI3_HR_Landkreis.R:386:11: style: Variable and function names should be all lowercase.
  auswahl$EigArt="StW"
          ^~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:386:17: style: Use <-, not =, for assignment.
  auswahl$EigArt="StW"
                ^
NO COPY: R/BWI3_HR_Landkreis.R:386:17: style: Put spaces around all infix operators.
  auswahl$EigArt="StW"
               ~^~
NO COPY: R/BWI3_HR_Landkreis.R:387:4: style: Words within variable and function names should be separated by '_' rather than '.'.
  (bhbf.stw.3 <- fl.stratum.fun(auswahl,ecken.3,trakte.3,A))
   ^~~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:387:41: style: Commas should always have a space after.
  (bhbf.stw.3 <- fl.stratum.fun(auswahl,ecken.3,trakte.3,A))
                                        ^
NO COPY: R/BWI3_HR_Landkreis.R:387:49: style: Commas should always have a space after.
  (bhbf.stw.3 <- fl.stratum.fun(auswahl,ecken.3,trakte.3,A))
                                                ^
NO COPY: R/BWI3_HR_Landkreis.R:387:58: style: Commas should always have a space after.
  (bhbf.stw.3 <- fl.stratum.fun(auswahl,ecken.3,trakte.3,A))
                                                         ^
NO COPY: R/BWI3_HR_Landkreis.R:388:11: style: Variable and function names should be all lowercase.
  auswahl$EigArt="KW"
          ^~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:388:17: style: Use <-, not =, for assignment.
  auswahl$EigArt="KW"
                ^
NO COPY: R/BWI3_HR_Landkreis.R:388:17: style: Put spaces around all infix operators.
  auswahl$EigArt="KW"
               ~^~
NO COPY: R/BWI3_HR_Landkreis.R:389:4: style: Words within variable and function names should be separated by '_' rather than '.'.
  (bhbf.kw.3 <- fl.stratum.fun(auswahl,ecken.3,trakte.3,A))
   ^~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:389:40: style: Commas should always have a space after.
  (bhbf.kw.3 <- fl.stratum.fun(auswahl,ecken.3,trakte.3,A))
                                       ^
NO COPY: R/BWI3_HR_Landkreis.R:389:48: style: Commas should always have a space after.
  (bhbf.kw.3 <- fl.stratum.fun(auswahl,ecken.3,trakte.3,A))
                                               ^
NO COPY: R/BWI3_HR_Landkreis.R:389:57: style: Commas should always have a space after.
  (bhbf.kw.3 <- fl.stratum.fun(auswahl,ecken.3,trakte.3,A))
                                                        ^
NO COPY: R/BWI3_HR_Landkreis.R:390:11: style: Variable and function names should be all lowercase.
  auswahl$EigArt=c("BW","StW","KW")
          ^~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:390:17: style: Use <-, not =, for assignment.
  auswahl$EigArt=c("BW","StW","KW")
                ^
NO COPY: R/BWI3_HR_Landkreis.R:390:17: style: Put spaces around all infix operators.
  auswahl$EigArt=c("BW","StW","KW")
               ~^~
NO COPY: R/BWI3_HR_Landkreis.R:390:25: style: Commas should always have a space after.
  auswahl$EigArt=c("BW","StW","KW")
                        ^
NO COPY: R/BWI3_HR_Landkreis.R:390:31: style: Commas should always have a space after.
  auswahl$EigArt=c("BW","StW","KW")
                              ^
NO COPY: R/BWI3_HR_Landkreis.R:391:4: style: Words within variable and function names should be separated by '_' rather than '.'.
  (bhbf.oew.3 <- fl.stratum.fun(auswahl,ecken.3,trakte.3,A))
   ^~~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:391:41: style: Commas should always have a space after.
  (bhbf.oew.3 <- fl.stratum.fun(auswahl,ecken.3,trakte.3,A))
                                        ^
NO COPY: R/BWI3_HR_Landkreis.R:391:49: style: Commas should always have a space after.
  (bhbf.oew.3 <- fl.stratum.fun(auswahl,ecken.3,trakte.3,A))
                                                ^
NO COPY: R/BWI3_HR_Landkreis.R:391:58: style: Commas should always have a space after.
  (bhbf.oew.3 <- fl.stratum.fun(auswahl,ecken.3,trakte.3,A))
                                                         ^
NO COPY: R/BWI3_HR_Landkreis.R:392:11: style: Variable and function names should be all lowercase.
  auswahl$EigArt="PW"
          ^~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:392:17: style: Use <-, not =, for assignment.
  auswahl$EigArt="PW"
                ^
NO COPY: R/BWI3_HR_Landkreis.R:392:17: style: Put spaces around all infix operators.
  auswahl$EigArt="PW"
               ~^~
NO COPY: R/BWI3_HR_Landkreis.R:393:4: style: Words within variable and function names should be separated by '_' rather than '.'.
  (bhbf.pw.3 <- fl.stratum.fun(auswahl,ecken.3,trakte.3,A))
   ^~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:393:40: style: Commas should always have a space after.
  (bhbf.pw.3 <- fl.stratum.fun(auswahl,ecken.3,trakte.3,A))
                                       ^
NO COPY: R/BWI3_HR_Landkreis.R:393:48: style: Commas should always have a space after.
  (bhbf.pw.3 <- fl.stratum.fun(auswahl,ecken.3,trakte.3,A))
                                               ^
NO COPY: R/BWI3_HR_Landkreis.R:393:57: style: Commas should always have a space after.
  (bhbf.pw.3 <- fl.stratum.fun(auswahl,ecken.3,trakte.3,A))
                                                        ^
NO COPY: R/BWI3_HR_Landkreis.R:395:11: style: Variable and function names should be all lowercase.
  auswahl$EigArt2="GPW"
          ^~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:395:18: style: Use <-, not =, for assignment.
  auswahl$EigArt2="GPW"
                 ^
NO COPY: R/BWI3_HR_Landkreis.R:395:18: style: Put spaces around all infix operators.
  auswahl$EigArt2="GPW"
                ~^~
NO COPY: R/BWI3_HR_Landkreis.R:396:4: style: Words within variable and function names should be separated by '_' rather than '.'.
  (bhbf.gpw.3 <- fl.stratum.fun(auswahl,ecken.3,trakte.3,A))
   ^~~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:396:41: style: Commas should always have a space after.
  (bhbf.gpw.3 <- fl.stratum.fun(auswahl,ecken.3,trakte.3,A))
                                        ^
NO COPY: R/BWI3_HR_Landkreis.R:396:49: style: Commas should always have a space after.
  (bhbf.gpw.3 <- fl.stratum.fun(auswahl,ecken.3,trakte.3,A))
                                                ^
NO COPY: R/BWI3_HR_Landkreis.R:396:58: style: Commas should always have a space after.
  (bhbf.gpw.3 <- fl.stratum.fun(auswahl,ecken.3,trakte.3,A))
                                                         ^
NO COPY: R/BWI3_HR_Landkreis.R:397:11: style: Variable and function names should be all lowercase.
  auswahl$EigArt2="MPW"
          ^~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:397:18: style: Use <-, not =, for assignment.
  auswahl$EigArt2="MPW"
                 ^
NO COPY: R/BWI3_HR_Landkreis.R:397:18: style: Put spaces around all infix operators.
  auswahl$EigArt2="MPW"
                ~^~
NO COPY: R/BWI3_HR_Landkreis.R:398:4: style: Words within variable and function names should be separated by '_' rather than '.'.
  (bhbf.mpw.3 <- fl.stratum.fun(auswahl,ecken.3,trakte.3,A))
   ^~~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:398:41: style: Commas should always have a space after.
  (bhbf.mpw.3 <- fl.stratum.fun(auswahl,ecken.3,trakte.3,A))
                                        ^
NO COPY: R/BWI3_HR_Landkreis.R:398:49: style: Commas should always have a space after.
  (bhbf.mpw.3 <- fl.stratum.fun(auswahl,ecken.3,trakte.3,A))
                                                ^
NO COPY: R/BWI3_HR_Landkreis.R:398:58: style: Commas should always have a space after.
  (bhbf.mpw.3 <- fl.stratum.fun(auswahl,ecken.3,trakte.3,A))
                                                         ^
NO COPY: R/BWI3_HR_Landkreis.R:399:11: style: Variable and function names should be all lowercase.
  auswahl$EigArt2="KPW"
          ^~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:399:18: style: Use <-, not =, for assignment.
  auswahl$EigArt2="KPW"
                 ^
NO COPY: R/BWI3_HR_Landkreis.R:399:18: style: Put spaces around all infix operators.
  auswahl$EigArt2="KPW"
                ~^~
NO COPY: R/BWI3_HR_Landkreis.R:400:4: style: Words within variable and function names should be separated by '_' rather than '.'.
  (bhbf.kpw.3 <- fl.stratum.fun(auswahl,ecken.3,trakte.3,A))
   ^~~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:400:41: style: Commas should always have a space after.
  (bhbf.kpw.3 <- fl.stratum.fun(auswahl,ecken.3,trakte.3,A))
                                        ^
NO COPY: R/BWI3_HR_Landkreis.R:400:49: style: Commas should always have a space after.
  (bhbf.kpw.3 <- fl.stratum.fun(auswahl,ecken.3,trakte.3,A))
                                                ^
NO COPY: R/BWI3_HR_Landkreis.R:400:58: style: Commas should always have a space after.
  (bhbf.kpw.3 <- fl.stratum.fun(auswahl,ecken.3,trakte.3,A))
                                                         ^
NO COPY: R/BWI3_HR_Landkreis.R:403:16: style: Put spaces around all infix operators.
    Waldflaeche=data.frame(BWI=c(1987,2002,2012),
              ~^~
NO COPY: R/BWI3_HR_Landkreis.R:403:31: style: Put spaces around all infix operators.
    Waldflaeche=data.frame(BWI=c(1987,2002,2012),
                             ~^~
NO COPY: R/BWI3_HR_Landkreis.R:403:39: style: Commas should always have a space after.
    Waldflaeche=data.frame(BWI=c(1987,2002,2012),
                                      ^
NO COPY: R/BWI3_HR_Landkreis.R:403:44: style: Commas should always have a space after.
    Waldflaeche=data.frame(BWI=c(1987,2002,2012),
                                           ^
NO COPY: R/BWI3_HR_Landkreis.R:404:41: style: Commas should always have a space after.
    Waldfl_GW   = round(c(wfl.1$Flaeche,wfl.2$Flaeche,wfl.3$Flaeche),0),
                                        ^
NO COPY: R/BWI3_HR_Landkreis.R:404:55: style: Commas should always have a space after.
    Waldfl_GW   = round(c(wfl.1$Flaeche,wfl.2$Flaeche,wfl.3$Flaeche),0),
                                                      ^
NO COPY: R/BWI3_HR_Landkreis.R:404:70: style: Commas should always have a space after.
    Waldfl_GW   = round(c(wfl.1$Flaeche,wfl.2$Flaeche,wfl.3$Flaeche),0),
                                                                     ^
NO COPY: R/BWI3_HR_Landkreis.R:405:1: style: lines should not be more than 80 characters.
    SE_Waldfl_GW= round(c(wfl.1$SE_Flaeche,wfl.2$SE_Flaeche, wfl.3$SE_Flaeche),0),
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:405:17: style: Put spaces around all infix operators.
    SE_Waldfl_GW= round(c(wfl.1$SE_Flaeche,wfl.2$SE_Flaeche, wfl.3$SE_Flaeche),0),
               ~^
NO COPY: R/BWI3_HR_Landkreis.R:405:44: style: Commas should always have a space after.
    SE_Waldfl_GW= round(c(wfl.1$SE_Flaeche,wfl.2$SE_Flaeche, wfl.3$SE_Flaeche),0),
                                           ^
NO COPY: R/BWI3_HR_Landkreis.R:405:80: style: Commas should always have a space after.
    SE_Waldfl_GW= round(c(wfl.1$SE_Flaeche,wfl.2$SE_Flaeche, wfl.3$SE_Flaeche),0),
                                                                               ^
NO COPY: R/BWI3_HR_Landkreis.R:406:1: style: lines should not be more than 80 characters.
    Waldfl_StW  = round(c(wfl.stw.1$Flaeche, wfl.stw.2$Flaeche,wfl.stw.3$Flaeche),0),
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:406:27: style: Words within variable and function names should be separated by '_' rather than '.'.
    Waldfl_StW  = round(c(wfl.stw.1$Flaeche, wfl.stw.2$Flaeche,wfl.stw.3$Flaeche),0),
                          ^~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:406:46: style: Words within variable and function names should be separated by '_' rather than '.'.
    Waldfl_StW  = round(c(wfl.stw.1$Flaeche, wfl.stw.2$Flaeche,wfl.stw.3$Flaeche),0),
                                             ^~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:406:64: style: Commas should always have a space after.
    Waldfl_StW  = round(c(wfl.stw.1$Flaeche, wfl.stw.2$Flaeche,wfl.stw.3$Flaeche),0),
                                                               ^
NO COPY: R/BWI3_HR_Landkreis.R:406:64: style: Words within variable and function names should be separated by '_' rather than '.'.
    Waldfl_StW  = round(c(wfl.stw.1$Flaeche, wfl.stw.2$Flaeche,wfl.stw.3$Flaeche),0),
                                                               ^~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:406:83: style: Commas should always have a space after.
    Waldfl_StW  = round(c(wfl.stw.1$Flaeche, wfl.stw.2$Flaeche,wfl.stw.3$Flaeche),0),
                                                                                  ^
NO COPY: R/BWI3_HR_Landkreis.R:407:18: style: Put spaces around all infix operators.
    SE_Waldfl_StW=round(c(wfl.stw.1$SE_Flaeche,wfl.stw.2$SE_Flaeche,
                ~^~
NO COPY: R/BWI3_HR_Landkreis.R:407:27: style: Words within variable and function names should be separated by '_' rather than '.'.
    SE_Waldfl_StW=round(c(wfl.stw.1$SE_Flaeche,wfl.stw.2$SE_Flaeche,
                          ^~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:407:48: style: Commas should always have a space after.
    SE_Waldfl_StW=round(c(wfl.stw.1$SE_Flaeche,wfl.stw.2$SE_Flaeche,
                                               ^
NO COPY: R/BWI3_HR_Landkreis.R:407:48: style: Words within variable and function names should be separated by '_' rather than '.'.
    SE_Waldfl_StW=round(c(wfl.stw.1$SE_Flaeche,wfl.stw.2$SE_Flaeche,
                                               ^~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:408:25: style: Words within variable and function names should be separated by '_' rather than '.'.
                        wfl.stw.3$SE_Flaeche),0),
                        ^~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:408:47: style: Commas should always have a space after.
                        wfl.stw.3$SE_Flaeche),0),
                                              ^
NO COPY: R/BWI3_HR_Landkreis.R:409:25: style: Words within variable and function names should be separated by '_' rather than '.'.
    Waldfl_KW = round(c(wfl.kw.1$Flaeche,wfl.kw.2$Flaeche,wfl.kw.3$Flaeche),0),
                        ^~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:409:42: style: Commas should always have a space after.
    Waldfl_KW = round(c(wfl.kw.1$Flaeche,wfl.kw.2$Flaeche,wfl.kw.3$Flaeche),0),
                                         ^
NO COPY: R/BWI3_HR_Landkreis.R:409:42: style: Words within variable and function names should be separated by '_' rather than '.'.
    Waldfl_KW = round(c(wfl.kw.1$Flaeche,wfl.kw.2$Flaeche,wfl.kw.3$Flaeche),0),
                                         ^~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:409:59: style: Commas should always have a space after.
    Waldfl_KW = round(c(wfl.kw.1$Flaeche,wfl.kw.2$Flaeche,wfl.kw.3$Flaeche),0),
                                                          ^
NO COPY: R/BWI3_HR_Landkreis.R:409:59: style: Words within variable and function names should be separated by '_' rather than '.'.
    Waldfl_KW = round(c(wfl.kw.1$Flaeche,wfl.kw.2$Flaeche,wfl.kw.3$Flaeche),0),
                                                          ^~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:409:77: style: Commas should always have a space after.
    Waldfl_KW = round(c(wfl.kw.1$Flaeche,wfl.kw.2$Flaeche,wfl.kw.3$Flaeche),0),
                                                                            ^
NO COPY: R/BWI3_HR_Landkreis.R:410:28: style: Words within variable and function names should be separated by '_' rather than '.'.
    SE_Waldfl_KW = round(c(wfl.kw.1$SE_Flaeche,wfl.kw.2$SE_Flaeche,
                           ^~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:410:48: style: Commas should always have a space after.
    SE_Waldfl_KW = round(c(wfl.kw.1$SE_Flaeche,wfl.kw.2$SE_Flaeche,
                                               ^
NO COPY: R/BWI3_HR_Landkreis.R:410:48: style: Words within variable and function names should be separated by '_' rather than '.'.
    SE_Waldfl_KW = round(c(wfl.kw.1$SE_Flaeche,wfl.kw.2$SE_Flaeche,
                                               ^~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:411:25: style: Words within variable and function names should be separated by '_' rather than '.'.
                        wfl.kw.3$SE_Flaeche),0),
                        ^~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:411:46: style: Commas should always have a space after.
                        wfl.kw.3$SE_Flaeche),0),
                                             ^
NO COPY: R/BWI3_HR_Landkreis.R:412:1: style: lines should not be more than 80 characters.
    Waldfl_OEW = round(c(wfl.oew.1$Flaeche,wfl.oew.2$Flaeche,wfl.oew.3$Flaeche),0),
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:412:26: style: Words within variable and function names should be separated by '_' rather than '.'.
    Waldfl_OEW = round(c(wfl.oew.1$Flaeche,wfl.oew.2$Flaeche,wfl.oew.3$Flaeche),0),
                         ^~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:412:44: style: Commas should always have a space after.
    Waldfl_OEW = round(c(wfl.oew.1$Flaeche,wfl.oew.2$Flaeche,wfl.oew.3$Flaeche),0),
                                           ^
NO COPY: R/BWI3_HR_Landkreis.R:412:44: style: Words within variable and function names should be separated by '_' rather than '.'.
    Waldfl_OEW = round(c(wfl.oew.1$Flaeche,wfl.oew.2$Flaeche,wfl.oew.3$Flaeche),0),
                                           ^~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:412:62: style: Commas should always have a space after.
    Waldfl_OEW = round(c(wfl.oew.1$Flaeche,wfl.oew.2$Flaeche,wfl.oew.3$Flaeche),0),
                                                             ^
NO COPY: R/BWI3_HR_Landkreis.R:412:62: style: Words within variable and function names should be separated by '_' rather than '.'.
    Waldfl_OEW = round(c(wfl.oew.1$Flaeche,wfl.oew.2$Flaeche,wfl.oew.3$Flaeche),0),
                                                             ^~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:412:81: style: Commas should always have a space after.
    Waldfl_OEW = round(c(wfl.oew.1$Flaeche,wfl.oew.2$Flaeche,wfl.oew.3$Flaeche),0),
                                                                                ^
NO COPY: R/BWI3_HR_Landkreis.R:413:29: style: Words within variable and function names should be separated by '_' rather than '.'.
    SE_Waldfl_OEW = round(c(wfl.oew.1$SE_Flaeche,wfl.oew.2$SE_Flaeche,
                            ^~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:413:50: style: Commas should always have a space after.
    SE_Waldfl_OEW = round(c(wfl.oew.1$SE_Flaeche,wfl.oew.2$SE_Flaeche,
                                                 ^
NO COPY: R/BWI3_HR_Landkreis.R:413:50: style: Words within variable and function names should be separated by '_' rather than '.'.
    SE_Waldfl_OEW = round(c(wfl.oew.1$SE_Flaeche,wfl.oew.2$SE_Flaeche,
                                                 ^~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:414:25: style: Words within variable and function names should be separated by '_' rather than '.'.
                        wfl.oew.3$SE_Flaeche),0),
                        ^~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:414:47: style: Commas should always have a space after.
                        wfl.oew.3$SE_Flaeche),0),
                                              ^
NO COPY: R/BWI3_HR_Landkreis.R:415:25: style: Words within variable and function names should be separated by '_' rather than '.'.
    Waldfl_PW = round(c(wfl.pw.1$Flaeche,wfl.pw.2$Flaeche,wfl.pw.3$Flaeche),0),
                        ^~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:415:42: style: Commas should always have a space after.
    Waldfl_PW = round(c(wfl.pw.1$Flaeche,wfl.pw.2$Flaeche,wfl.pw.3$Flaeche),0),
                                         ^
NO COPY: R/BWI3_HR_Landkreis.R:415:42: style: Words within variable and function names should be separated by '_' rather than '.'.
    Waldfl_PW = round(c(wfl.pw.1$Flaeche,wfl.pw.2$Flaeche,wfl.pw.3$Flaeche),0),
                                         ^~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:415:59: style: Commas should always have a space after.
    Waldfl_PW = round(c(wfl.pw.1$Flaeche,wfl.pw.2$Flaeche,wfl.pw.3$Flaeche),0),
                                                          ^
NO COPY: R/BWI3_HR_Landkreis.R:415:59: style: Words within variable and function names should be separated by '_' rather than '.'.
    Waldfl_PW = round(c(wfl.pw.1$Flaeche,wfl.pw.2$Flaeche,wfl.pw.3$Flaeche),0),
                                                          ^~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:415:77: style: Commas should always have a space after.
    Waldfl_PW = round(c(wfl.pw.1$Flaeche,wfl.pw.2$Flaeche,wfl.pw.3$Flaeche),0),
                                                                            ^
NO COPY: R/BWI3_HR_Landkreis.R:416:28: style: Words within variable and function names should be separated by '_' rather than '.'.
    SE_Waldfl_PW = round(c(wfl.pw.1$SE_Flaeche,wfl.pw.2$SE_Flaeche,
                           ^~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:416:48: style: Commas should always have a space after.
    SE_Waldfl_PW = round(c(wfl.pw.1$SE_Flaeche,wfl.pw.2$SE_Flaeche,
                                               ^
NO COPY: R/BWI3_HR_Landkreis.R:416:48: style: Words within variable and function names should be separated by '_' rather than '.'.
    SE_Waldfl_PW = round(c(wfl.pw.1$SE_Flaeche,wfl.pw.2$SE_Flaeche,
                                               ^~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:417:25: style: Words within variable and function names should be separated by '_' rather than '.'.
                        wfl.pw.3$SE_Flaeche),0),
                        ^~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:417:46: style: Commas should always have a space after.
                        wfl.pw.3$SE_Flaeche),0),
                                             ^
NO COPY: R/BWI3_HR_Landkreis.R:418:1: style: lines should not be more than 80 characters.
    Waldfl_GPW = round(c(wfl.gpw.1$Flaeche,wfl.gpw.2$Flaeche,wfl.gpw.3$Flaeche),0),
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:418:26: style: Words within variable and function names should be separated by '_' rather than '.'.
    Waldfl_GPW = round(c(wfl.gpw.1$Flaeche,wfl.gpw.2$Flaeche,wfl.gpw.3$Flaeche),0),
                         ^~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:418:44: style: Commas should always have a space after.
    Waldfl_GPW = round(c(wfl.gpw.1$Flaeche,wfl.gpw.2$Flaeche,wfl.gpw.3$Flaeche),0),
                                           ^
NO COPY: R/BWI3_HR_Landkreis.R:418:44: style: Words within variable and function names should be separated by '_' rather than '.'.
    Waldfl_GPW = round(c(wfl.gpw.1$Flaeche,wfl.gpw.2$Flaeche,wfl.gpw.3$Flaeche),0),
                                           ^~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:418:62: style: Commas should always have a space after.
    Waldfl_GPW = round(c(wfl.gpw.1$Flaeche,wfl.gpw.2$Flaeche,wfl.gpw.3$Flaeche),0),
                                                             ^
NO COPY: R/BWI3_HR_Landkreis.R:418:62: style: Words within variable and function names should be separated by '_' rather than '.'.
    Waldfl_GPW = round(c(wfl.gpw.1$Flaeche,wfl.gpw.2$Flaeche,wfl.gpw.3$Flaeche),0),
                                                             ^~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:418:81: style: Commas should always have a space after.
    Waldfl_GPW = round(c(wfl.gpw.1$Flaeche,wfl.gpw.2$Flaeche,wfl.gpw.3$Flaeche),0),
                                                                                ^
NO COPY: R/BWI3_HR_Landkreis.R:419:29: style: Words within variable and function names should be separated by '_' rather than '.'.
    SE_Waldfl_GPW = round(c(wfl.gpw.1$SE_Flaeche,wfl.gpw.2$SE_Flaeche,
                            ^~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:419:50: style: Commas should always have a space after.
    SE_Waldfl_GPW = round(c(wfl.gpw.1$SE_Flaeche,wfl.gpw.2$SE_Flaeche,
                                                 ^
NO COPY: R/BWI3_HR_Landkreis.R:419:50: style: Words within variable and function names should be separated by '_' rather than '.'.
    SE_Waldfl_GPW = round(c(wfl.gpw.1$SE_Flaeche,wfl.gpw.2$SE_Flaeche,
                                                 ^~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:420:25: style: Words within variable and function names should be separated by '_' rather than '.'.
                        wfl.gpw.3$SE_Flaeche),0),
                        ^~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:420:47: style: Commas should always have a space after.
                        wfl.gpw.3$SE_Flaeche),0),
                                              ^
NO COPY: R/BWI3_HR_Landkreis.R:421:1: style: lines should not be more than 80 characters.
    Waldfl_MPW = round(c(wfl.mpw.1$Flaeche,wfl.mpw.2$Flaeche,wfl.mpw.3$Flaeche),0),
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:421:26: style: Words within variable and function names should be separated by '_' rather than '.'.
    Waldfl_MPW = round(c(wfl.mpw.1$Flaeche,wfl.mpw.2$Flaeche,wfl.mpw.3$Flaeche),0),
                         ^~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:421:44: style: Commas should always have a space after.
    Waldfl_MPW = round(c(wfl.mpw.1$Flaeche,wfl.mpw.2$Flaeche,wfl.mpw.3$Flaeche),0),
                                           ^
NO COPY: R/BWI3_HR_Landkreis.R:421:44: style: Words within variable and function names should be separated by '_' rather than '.'.
    Waldfl_MPW = round(c(wfl.mpw.1$Flaeche,wfl.mpw.2$Flaeche,wfl.mpw.3$Flaeche),0),
                                           ^~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:421:62: style: Commas should always have a space after.
    Waldfl_MPW = round(c(wfl.mpw.1$Flaeche,wfl.mpw.2$Flaeche,wfl.mpw.3$Flaeche),0),
                                                             ^
NO COPY: R/BWI3_HR_Landkreis.R:421:62: style: Words within variable and function names should be separated by '_' rather than '.'.
    Waldfl_MPW = round(c(wfl.mpw.1$Flaeche,wfl.mpw.2$Flaeche,wfl.mpw.3$Flaeche),0),
                                                             ^~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:421:81: style: Commas should always have a space after.
    Waldfl_MPW = round(c(wfl.mpw.1$Flaeche,wfl.mpw.2$Flaeche,wfl.mpw.3$Flaeche),0),
                                                                                ^
NO COPY: R/BWI3_HR_Landkreis.R:422:29: style: Words within variable and function names should be separated by '_' rather than '.'.
    SE_Waldfl_MPW = round(c(wfl.mpw.1$SE_Flaeche,wfl.mpw.2$SE_Flaeche,
                            ^~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:422:50: style: Commas should always have a space after.
    SE_Waldfl_MPW = round(c(wfl.mpw.1$SE_Flaeche,wfl.mpw.2$SE_Flaeche,
                                                 ^
NO COPY: R/BWI3_HR_Landkreis.R:422:50: style: Words within variable and function names should be separated by '_' rather than '.'.
    SE_Waldfl_MPW = round(c(wfl.mpw.1$SE_Flaeche,wfl.mpw.2$SE_Flaeche,
                                                 ^~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:423:25: style: Words within variable and function names should be separated by '_' rather than '.'.
                        wfl.mpw.3$SE_Flaeche),0),
                        ^~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:423:47: style: Commas should always have a space after.
                        wfl.mpw.3$SE_Flaeche),0),
                                              ^
NO COPY: R/BWI3_HR_Landkreis.R:424:1: style: lines should not be more than 80 characters.
    Waldfl_KPW = round(c(wfl.kpw.1$Flaeche,wfl.kpw.2$Flaeche,wfl.kpw.3$Flaeche),0),
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:424:26: style: Words within variable and function names should be separated by '_' rather than '.'.
    Waldfl_KPW = round(c(wfl.kpw.1$Flaeche,wfl.kpw.2$Flaeche,wfl.kpw.3$Flaeche),0),
                         ^~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:424:44: style: Commas should always have a space after.
    Waldfl_KPW = round(c(wfl.kpw.1$Flaeche,wfl.kpw.2$Flaeche,wfl.kpw.3$Flaeche),0),
                                           ^
NO COPY: R/BWI3_HR_Landkreis.R:424:44: style: Words within variable and function names should be separated by '_' rather than '.'.
    Waldfl_KPW = round(c(wfl.kpw.1$Flaeche,wfl.kpw.2$Flaeche,wfl.kpw.3$Flaeche),0),
                                           ^~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:424:62: style: Commas should always have a space after.
    Waldfl_KPW = round(c(wfl.kpw.1$Flaeche,wfl.kpw.2$Flaeche,wfl.kpw.3$Flaeche),0),
                                                             ^
NO COPY: R/BWI3_HR_Landkreis.R:424:62: style: Words within variable and function names should be separated by '_' rather than '.'.
    Waldfl_KPW = round(c(wfl.kpw.1$Flaeche,wfl.kpw.2$Flaeche,wfl.kpw.3$Flaeche),0),
                                                             ^~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:424:81: style: Commas should always have a space after.
    Waldfl_KPW = round(c(wfl.kpw.1$Flaeche,wfl.kpw.2$Flaeche,wfl.kpw.3$Flaeche),0),
                                                                                ^
NO COPY: R/BWI3_HR_Landkreis.R:425:29: style: Words within variable and function names should be separated by '_' rather than '.'.
    SE_Waldfl_KPW = round(c(wfl.kpw.1$SE_Flaeche,wfl.kpw.2$SE_Flaeche,
                            ^~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:425:50: style: Commas should always have a space after.
    SE_Waldfl_KPW = round(c(wfl.kpw.1$SE_Flaeche,wfl.kpw.2$SE_Flaeche,
                                                 ^
NO COPY: R/BWI3_HR_Landkreis.R:425:50: style: Words within variable and function names should be separated by '_' rather than '.'.
    SE_Waldfl_KPW = round(c(wfl.kpw.1$SE_Flaeche,wfl.kpw.2$SE_Flaeche,
                                                 ^~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:426:25: style: Words within variable and function names should be separated by '_' rather than '.'.
                        wfl.kpw.3$SE_Flaeche),0)),
                        ^~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:426:47: style: Commas should always have a space after.
                        wfl.kpw.3$SE_Flaeche),0)),
                                              ^
NO COPY: R/BWI3_HR_Landkreis.R:427:1: style: lines should not be more than 80 characters.
    Waldfl_Proz = data.frame(Eigentum=c("StW(BW)","KW","OEW","PW","GPW","MPW","KPW"),
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:427:38: style: Put spaces around all infix operators.
    Waldfl_Proz = data.frame(Eigentum=c("StW(BW)","KW","OEW","PW","GPW","MPW","KPW"),
                                    ~^~
NO COPY: R/BWI3_HR_Landkreis.R:427:51: style: Commas should always have a space after.
    Waldfl_Proz = data.frame(Eigentum=c("StW(BW)","KW","OEW","PW","GPW","MPW","KPW"),
                                                  ^
NO COPY: R/BWI3_HR_Landkreis.R:427:56: style: Commas should always have a space after.
    Waldfl_Proz = data.frame(Eigentum=c("StW(BW)","KW","OEW","PW","GPW","MPW","KPW"),
                                                       ^
NO COPY: R/BWI3_HR_Landkreis.R:427:62: style: Commas should always have a space after.
    Waldfl_Proz = data.frame(Eigentum=c("StW(BW)","KW","OEW","PW","GPW","MPW","KPW"),
                                                             ^
NO COPY: R/BWI3_HR_Landkreis.R:427:67: style: Commas should always have a space after.
    Waldfl_Proz = data.frame(Eigentum=c("StW(BW)","KW","OEW","PW","GPW","MPW","KPW"),
                                                                  ^
NO COPY: R/BWI3_HR_Landkreis.R:427:73: style: Commas should always have a space after.
    Waldfl_Proz = data.frame(Eigentum=c("StW(BW)","KW","OEW","PW","GPW","MPW","KPW"),
                                                                        ^
NO COPY: R/BWI3_HR_Landkreis.R:427:79: style: Commas should always have a space after.
    Waldfl_Proz = data.frame(Eigentum=c("StW(BW)","KW","OEW","PW","GPW","MPW","KPW"),
                                                                              ^
NO COPY: R/BWI3_HR_Landkreis.R:428:31: style: Words within variable and function names should be separated by '_' rather than '.'.
        Waldfl_Proz = round(c(fl.ant.stw.3$Fl_Proz, fl.ant.kw.3$Fl_Proz,
                              ^~~~~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:428:53: style: Words within variable and function names should be separated by '_' rather than '.'.
        Waldfl_Proz = round(c(fl.ant.stw.3$Fl_Proz, fl.ant.kw.3$Fl_Proz,
                                                    ^~~~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:429:15: style: Words within variable and function names should be separated by '_' rather than '.'.
              fl.ant.oew.3$Fl_Proz,fl.ant.pw.3$Fl_Proz,fl.ant.gpw.3$Fl_Proz,
              ^~~~~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:429:36: style: Commas should always have a space after.
              fl.ant.oew.3$Fl_Proz,fl.ant.pw.3$Fl_Proz,fl.ant.gpw.3$Fl_Proz,
                                   ^
NO COPY: R/BWI3_HR_Landkreis.R:429:36: style: Words within variable and function names should be separated by '_' rather than '.'.
              fl.ant.oew.3$Fl_Proz,fl.ant.pw.3$Fl_Proz,fl.ant.gpw.3$Fl_Proz,
                                   ^~~~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:429:56: style: Commas should always have a space after.
              fl.ant.oew.3$Fl_Proz,fl.ant.pw.3$Fl_Proz,fl.ant.gpw.3$Fl_Proz,
                                                       ^
NO COPY: R/BWI3_HR_Landkreis.R:429:56: style: Words within variable and function names should be separated by '_' rather than '.'.
              fl.ant.oew.3$Fl_Proz,fl.ant.pw.3$Fl_Proz,fl.ant.gpw.3$Fl_Proz,
                                                       ^~~~~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:430:15: style: Words within variable and function names should be separated by '_' rather than '.'.
              fl.ant.mpw.3$Fl_Proz, fl.ant.kpw.3$Fl_Proz),1),
              ^~~~~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:430:37: style: Words within variable and function names should be separated by '_' rather than '.'.
              fl.ant.mpw.3$Fl_Proz, fl.ant.kpw.3$Fl_Proz),1),
                                    ^~~~~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:430:59: style: Commas should always have a space after.
              fl.ant.mpw.3$Fl_Proz, fl.ant.kpw.3$Fl_Proz),1),
                                                          ^
NO COPY: R/BWI3_HR_Landkreis.R:431:34: style: Words within variable and function names should be separated by '_' rather than '.'.
        SE_Waldfl_Proz = round(c(fl.ant.stw.3$SE_Fl_Proz,fl.ant.kw.3$SE_Fl_Proz,
                                 ^~~~~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:431:58: style: Commas should always have a space after.
        SE_Waldfl_Proz = round(c(fl.ant.stw.3$SE_Fl_Proz,fl.ant.kw.3$SE_Fl_Proz,
                                                         ^
NO COPY: R/BWI3_HR_Landkreis.R:431:58: style: Words within variable and function names should be separated by '_' rather than '.'.
        SE_Waldfl_Proz = round(c(fl.ant.stw.3$SE_Fl_Proz,fl.ant.kw.3$SE_Fl_Proz,
                                                         ^~~~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:432:15: style: Words within variable and function names should be separated by '_' rather than '.'.
              fl.ant.oew.3$SE_Fl_Proz,fl.ant.pw.3$SE_Fl_Proz,
              ^~~~~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:432:39: style: Commas should always have a space after.
              fl.ant.oew.3$SE_Fl_Proz,fl.ant.pw.3$SE_Fl_Proz,
                                      ^
NO COPY: R/BWI3_HR_Landkreis.R:432:39: style: Words within variable and function names should be separated by '_' rather than '.'.
              fl.ant.oew.3$SE_Fl_Proz,fl.ant.pw.3$SE_Fl_Proz,
                                      ^~~~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:433:15: style: Words within variable and function names should be separated by '_' rather than '.'.
              fl.ant.gpw.3$SE_Fl_Proz,
              ^~~~~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:434:15: style: Words within variable and function names should be separated by '_' rather than '.'.
              fl.ant.mpw.3$SE_Fl_Proz,fl.ant.kpw.3$SE_Fl_Proz),1)),
              ^~~~~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:434:39: style: Commas should always have a space after.
              fl.ant.mpw.3$SE_Fl_Proz,fl.ant.kpw.3$SE_Fl_Proz),1)),
                                      ^
NO COPY: R/BWI3_HR_Landkreis.R:434:39: style: Words within variable and function names should be separated by '_' rather than '.'.
              fl.ant.mpw.3$SE_Fl_Proz,fl.ant.kpw.3$SE_Fl_Proz),1)),
                                      ^~~~~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:434:64: style: Commas should always have a space after.
              fl.ant.mpw.3$SE_Fl_Proz,fl.ant.kpw.3$SE_Fl_Proz),1)),
                                                               ^
NO COPY: R/BWI3_HR_Landkreis.R:435:41: style: Put spaces around all infix operators.
    begehb_Holzbfl = data.frame(Eigentum=
                                       ~^~
NO COPY: R/BWI3_HR_Landkreis.R:436:18: style: Commas should always have a space after.
          c("GW","StW(BW)","KW","OEW","PW","GPW","MPW","KPW"),
                 ^
NO COPY: R/BWI3_HR_Landkreis.R:436:28: style: Commas should always have a space after.
          c("GW","StW(BW)","KW","OEW","PW","GPW","MPW","KPW"),
                           ^
NO COPY: R/BWI3_HR_Landkreis.R:436:33: style: Commas should always have a space after.
          c("GW","StW(BW)","KW","OEW","PW","GPW","MPW","KPW"),
                                ^
NO COPY: R/BWI3_HR_Landkreis.R:436:39: style: Commas should always have a space after.
          c("GW","StW(BW)","KW","OEW","PW","GPW","MPW","KPW"),
                                      ^
NO COPY: R/BWI3_HR_Landkreis.R:436:44: style: Commas should always have a space after.
          c("GW","StW(BW)","KW","OEW","PW","GPW","MPW","KPW"),
                                           ^
NO COPY: R/BWI3_HR_Landkreis.R:436:50: style: Commas should always have a space after.
          c("GW","StW(BW)","KW","OEW","PW","GPW","MPW","KPW"),
                                                 ^
NO COPY: R/BWI3_HR_Landkreis.R:436:56: style: Commas should always have a space after.
          c("GW","StW(BW)","KW","OEW","PW","GPW","MPW","KPW"),
                                                       ^
NO COPY: R/BWI3_HR_Landkreis.R:437:40: style: Commas should always have a space after.
        b_HBF = round(c(bhbf.3$Flaeche,bhbf.stw.3$Flaeche,bhbf.kw.3$Flaeche,
                                       ^
NO COPY: R/BWI3_HR_Landkreis.R:437:40: style: Words within variable and function names should be separated by '_' rather than '.'.
        b_HBF = round(c(bhbf.3$Flaeche,bhbf.stw.3$Flaeche,bhbf.kw.3$Flaeche,
                                       ^~~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:437:59: style: Commas should always have a space after.
        b_HBF = round(c(bhbf.3$Flaeche,bhbf.stw.3$Flaeche,bhbf.kw.3$Flaeche,
                                                          ^
NO COPY: R/BWI3_HR_Landkreis.R:437:59: style: Words within variable and function names should be separated by '_' rather than '.'.
        b_HBF = round(c(bhbf.3$Flaeche,bhbf.stw.3$Flaeche,bhbf.kw.3$Flaeche,
                                                          ^~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:438:13: style: Words within variable and function names should be separated by '_' rather than '.'.
            bhbf.oew.3$Flaeche,bhbf.pw.3$Flaeche,bhbf.gpw.3$Flaeche,
            ^~~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:438:32: style: Commas should always have a space after.
            bhbf.oew.3$Flaeche,bhbf.pw.3$Flaeche,bhbf.gpw.3$Flaeche,
                               ^
NO COPY: R/BWI3_HR_Landkreis.R:438:32: style: Words within variable and function names should be separated by '_' rather than '.'.
            bhbf.oew.3$Flaeche,bhbf.pw.3$Flaeche,bhbf.gpw.3$Flaeche,
                               ^~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:438:50: style: Commas should always have a space after.
            bhbf.oew.3$Flaeche,bhbf.pw.3$Flaeche,bhbf.gpw.3$Flaeche,
                                                 ^
NO COPY: R/BWI3_HR_Landkreis.R:438:50: style: Words within variable and function names should be separated by '_' rather than '.'.
            bhbf.oew.3$Flaeche,bhbf.pw.3$Flaeche,bhbf.gpw.3$Flaeche,
                                                 ^~~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:439:13: style: Words within variable and function names should be separated by '_' rather than '.'.
            bhbf.mpw.3$Flaeche,bhbf.kpw.3$Flaeche),0),
            ^~~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:439:32: style: Commas should always have a space after.
            bhbf.mpw.3$Flaeche,bhbf.kpw.3$Flaeche),0),
                               ^
NO COPY: R/BWI3_HR_Landkreis.R:439:32: style: Words within variable and function names should be separated by '_' rather than '.'.
            bhbf.mpw.3$Flaeche,bhbf.kpw.3$Flaeche),0),
                               ^~~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:439:52: style: Commas should always have a space after.
            bhbf.mpw.3$Flaeche,bhbf.kpw.3$Flaeche),0),
                                                   ^
NO COPY: R/BWI3_HR_Landkreis.R:440:55: style: Commas should always have a space after.
        SE_begehb_Holzbfl = round(c(bhbf.3$SE_Flaeche,bhbf.stw.3$SE_Flaeche,
                                                      ^
NO COPY: R/BWI3_HR_Landkreis.R:440:55: style: Words within variable and function names should be separated by '_' rather than '.'.
        SE_begehb_Holzbfl = round(c(bhbf.3$SE_Flaeche,bhbf.stw.3$SE_Flaeche,
                                                      ^~~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:441:17: style: Words within variable and function names should be separated by '_' rather than '.'.
                bhbf.kw.3$SE_Flaeche, bhbf.oew.3$SE_Flaeche,
                ^~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:441:39: style: Words within variable and function names should be separated by '_' rather than '.'.
                bhbf.kw.3$SE_Flaeche, bhbf.oew.3$SE_Flaeche,
                                      ^~~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:442:17: style: Words within variable and function names should be separated by '_' rather than '.'.
                bhbf.pw.3$SE_Flaeche,bhbf.gpw.3$SE_Flaeche,
                ^~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:442:38: style: Commas should always have a space after.
                bhbf.pw.3$SE_Flaeche,bhbf.gpw.3$SE_Flaeche,
                                     ^
NO COPY: R/BWI3_HR_Landkreis.R:442:38: style: Words within variable and function names should be separated by '_' rather than '.'.
                bhbf.pw.3$SE_Flaeche,bhbf.gpw.3$SE_Flaeche,
                                     ^~~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:443:17: style: Words within variable and function names should be separated by '_' rather than '.'.
                bhbf.mpw.3$SE_Flaeche,bhbf.kpw.3$SE_Flaeche),0))))
                ^~~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:443:39: style: Commas should always have a space after.
                bhbf.mpw.3$SE_Flaeche,bhbf.kpw.3$SE_Flaeche),0))))
                                      ^
NO COPY: R/BWI3_HR_Landkreis.R:443:39: style: Words within variable and function names should be separated by '_' rather than '.'.
                bhbf.mpw.3$SE_Flaeche,bhbf.kpw.3$SE_Flaeche),0))))
                                      ^~~~~~~~~~
NO COPY: R/BWI3_HR_Landkreis.R:443:62: style: Commas should always have a space after.
                bhbf.mpw.3$SE_Flaeche,bhbf.kpw.3$SE_Flaeche),0))))
                                                             ^
NO COPY: R/BWI3_HR_Landkreis.R:445:1: style: Trailing blank lines are superfluous.

^
NO COPY: R/BWI3_HR_Totholz.R:63:28: style: Commas should always have a space after.
          function(totholz,ecken,trakte,bwi,A,D.klass,auswahl) {
                           ^
NO COPY: R/BWI3_HR_Totholz.R:63:34: style: Commas should always have a space after.
          function(totholz,ecken,trakte,bwi,A,D.klass,auswahl) {
                                 ^
NO COPY: R/BWI3_HR_Totholz.R:63:41: style: Commas should always have a space after.
          function(totholz,ecken,trakte,bwi,A,D.klass,auswahl) {
                                        ^
NO COPY: R/BWI3_HR_Totholz.R:63:45: style: Commas should always have a space after.
          function(totholz,ecken,trakte,bwi,A,D.klass,auswahl) {
                                            ^
NO COPY: R/BWI3_HR_Totholz.R:63:47: style: Commas should always have a space after.
          function(totholz,ecken,trakte,bwi,A,D.klass,auswahl) {
                                              ^
NO COPY: R/BWI3_HR_Totholz.R:63:55: style: Commas should always have a space after.
          function(totholz,ecken,trakte,bwi,A,D.klass,auswahl) {
                                                      ^
NO COPY: R/BWI3_HR_Totholz.R:67:76: style: Trailing whitespace is superfluous.
  attributes <- c("tnr", "enr", "nr", "tbagr", "tart", "tzg", "tbd", "tsd", 
                                                                           ^
NO COPY: R/BWI3_HR_Totholz.R:76:34: style: Commas should always have a space after.
  stratum <- stratum.fun(auswahl,ecken)
                                 ^
NO COPY: R/BWI3_HR_Totholz.R:80:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  n.te.s <- length(stratum[,1])
  ^~~~~~
NO COPY: R/BWI3_HR_Totholz.R:80:29: style: Commas should always have a space after.
  n.te.s <- length(stratum[,1])
                            ^
NO COPY: R/BWI3_HR_Totholz.R:81:31: style: Commas should always have a space after.
  y <- stats::aggregate(rep(1,length(stratum[,1])),by=list(stratum$tnr),sum)
                              ^
NO COPY: R/BWI3_HR_Totholz.R:81:47: style: Commas should always have a space after.
  y <- stats::aggregate(rep(1,length(stratum[,1])),by=list(stratum$tnr),sum)
                                              ^
NO COPY: R/BWI3_HR_Totholz.R:81:52: style: Commas should always have a space after.
  y <- stats::aggregate(rep(1,length(stratum[,1])),by=list(stratum$tnr),sum)
                                                   ^
NO COPY: R/BWI3_HR_Totholz.R:81:54: style: Put spaces around all infix operators.
  y <- stats::aggregate(rep(1,length(stratum[,1])),by=list(stratum$tnr),sum)
                                                    ~^~
NO COPY: R/BWI3_HR_Totholz.R:81:73: style: Commas should always have a space after.
  y <- stats::aggregate(rep(1,length(stratum[,1])),by=list(stratum$tnr),sum)
                                                                        ^
NO COPY: R/BWI3_HR_Totholz.R:82:23: style: Commas should always have a space after.
  names(y) <- c("tnr","y")
                      ^
NO COPY: R/BWI3_HR_Totholz.R:83:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  n.t.s <- length(y[,1])
  ^~~~~
NO COPY: R/BWI3_HR_Totholz.R:83:3: warning: local variable 'n.t.s' assigned but may not be used
  n.t.s <- length(y[,1])
  ^~~~~
NO COPY: R/BWI3_HR_Totholz.R:83:22: style: Commas should always have a space after.
  n.t.s <- length(y[,1])
                     ^
NO COPY: R/BWI3_HR_Totholz.R:85:16: style: Commas should always have a space after.
  y <- merge(y,trakte[TRUE, c("tnr", "m")],by=c("tnr"))
               ^
NO COPY: R/BWI3_HR_Totholz.R:85:44: style: Commas should always have a space after.
  y <- merge(y,trakte[TRUE, c("tnr", "m")],by=c("tnr"))
                                           ^
NO COPY: R/BWI3_HR_Totholz.R:85:46: style: Put spaces around all infix operators.
  y <- merge(y,trakte[TRUE, c("tnr", "m")],by=c("tnr"))
                                            ~^~
NO COPY: R/BWI3_HR_Totholz.R:89:24: style: Commas should always have a space after.
  nT <- length(trakte[,1])
                       ^
NO COPY: R/BWI3_HR_Totholz.R:91:4: style: Commented code should be removed.
  #HBFl. [ha]
   ^~~~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:92:20: style: Put spaces around all infix operators.
  T.hbf <- sum(y$y)/sum(x)*A
                  ~^~
NO COPY: R/BWI3_HR_Totholz.R:92:27: style: Put spaces around all infix operators.
  T.hbf <- sum(y$y)/sum(x)*A
                         ~^~
NO COPY: R/BWI3_HR_Totholz.R:93:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  var.T.hbf <-  nT/(nT-1)*T.hbf^2*(sum(y$y^2)/sum(y$y)^2+sum(x^2)/sum(x)^2
  ^~~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:93:19: style: Put spaces around all infix operators.
  var.T.hbf <-  nT/(nT-1)*T.hbf^2*(sum(y$y^2)/sum(y$y)^2+sum(x^2)/sum(x)^2
                 ~^~
NO COPY: R/BWI3_HR_Totholz.R:93:20: style: Place a space before left parenthesis, except in a function call.
  var.T.hbf <-  nT/(nT-1)*T.hbf^2*(sum(y$y^2)/sum(y$y)^2+sum(x^2)/sum(x)^2
                   ^
NO COPY: R/BWI3_HR_Totholz.R:93:23: style: Put spaces around all infix operators.
  var.T.hbf <-  nT/(nT-1)*T.hbf^2*(sum(y$y^2)/sum(y$y)^2+sum(x^2)/sum(x)^2
                     ~^~
NO COPY: R/BWI3_HR_Totholz.R:93:26: style: Put spaces around all infix operators.
  var.T.hbf <-  nT/(nT-1)*T.hbf^2*(sum(y$y^2)/sum(y$y)^2+sum(x^2)/sum(x)^2
                        ~^~
NO COPY: R/BWI3_HR_Totholz.R:93:32: style: Put spaces around all infix operators.
  var.T.hbf <-  nT/(nT-1)*T.hbf^2*(sum(y$y^2)/sum(y$y)^2+sum(x^2)/sum(x)^2
                              ~^~
NO COPY: R/BWI3_HR_Totholz.R:93:34: style: Put spaces around all infix operators.
  var.T.hbf <-  nT/(nT-1)*T.hbf^2*(sum(y$y^2)/sum(y$y)^2+sum(x^2)/sum(x)^2
                                ~^~
NO COPY: R/BWI3_HR_Totholz.R:93:35: style: Place a space before left parenthesis, except in a function call.
  var.T.hbf <-  nT/(nT-1)*T.hbf^2*(sum(y$y^2)/sum(y$y)^2+sum(x^2)/sum(x)^2
                                  ^
NO COPY: R/BWI3_HR_Totholz.R:93:43: style: Put spaces around all infix operators.
  var.T.hbf <-  nT/(nT-1)*T.hbf^2*(sum(y$y^2)/sum(y$y)^2+sum(x^2)/sum(x)^2
                                         ~^~
NO COPY: R/BWI3_HR_Totholz.R:93:46: style: Put spaces around all infix operators.
  var.T.hbf <-  nT/(nT-1)*T.hbf^2*(sum(y$y^2)/sum(y$y)^2+sum(x^2)/sum(x)^2
                                            ~^~
NO COPY: R/BWI3_HR_Totholz.R:93:55: style: Put spaces around all infix operators.
  var.T.hbf <-  nT/(nT-1)*T.hbf^2*(sum(y$y^2)/sum(y$y)^2+sum(x^2)/sum(x)^2
                                                     ~^~
NO COPY: R/BWI3_HR_Totholz.R:93:57: style: Put spaces around all infix operators.
  var.T.hbf <-  nT/(nT-1)*T.hbf^2*(sum(y$y^2)/sum(y$y)^2+sum(x^2)/sum(x)^2
                                                       ~^~
NO COPY: R/BWI3_HR_Totholz.R:93:63: style: Put spaces around all infix operators.
  var.T.hbf <-  nT/(nT-1)*T.hbf^2*(sum(y$y^2)/sum(y$y)^2+sum(x^2)/sum(x)^2
                                                             ~^~
NO COPY: R/BWI3_HR_Totholz.R:93:66: style: Put spaces around all infix operators.
  var.T.hbf <-  nT/(nT-1)*T.hbf^2*(sum(y$y^2)/sum(y$y)^2+sum(x^2)/sum(x)^2
                                                                ~^~
NO COPY: R/BWI3_HR_Totholz.R:93:73: style: Put spaces around all infix operators.
  var.T.hbf <-  nT/(nT-1)*T.hbf^2*(sum(y$y^2)/sum(y$y)^2+sum(x^2)/sum(x)^2
                                                                       ~^~
NO COPY: R/BWI3_HR_Totholz.R:94:23: style: Put spaces around all infix operators.
                      -2*sum(y$y*y$m)/sum(y$y)/sum(x))
                      ^~
NO COPY: R/BWI3_HR_Totholz.R:94:25: style: Put spaces around all infix operators.
                      -2*sum(y$y*y$m)/sum(y$y)/sum(x))
                       ~^~
NO COPY: R/BWI3_HR_Totholz.R:94:33: style: Put spaces around all infix operators.
                      -2*sum(y$y*y$m)/sum(y$y)/sum(x))
                               ~^~
NO COPY: R/BWI3_HR_Totholz.R:94:38: style: Put spaces around all infix operators.
                      -2*sum(y$y*y$m)/sum(y$y)/sum(x))
                                    ~^~
NO COPY: R/BWI3_HR_Totholz.R:94:47: style: Put spaces around all infix operators.
                      -2*sum(y$y*y$m)/sum(y$y)/sum(x))
                                             ~^~
NO COPY: R/BWI3_HR_Totholz.R:95:4: style: Commented code should be removed.
  #var.T.hbf^0.5
   ^~~~~~~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:96:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  se.T.hbf <- var.T.hbf^0.5 #Standardfehler
  ^~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:96:15: style: Words within variable and function names should be separated by '_' rather than '.'.
  se.T.hbf <- var.T.hbf^0.5 #Standardfehler
              ^~~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:96:24: style: Put spaces around all infix operators.
  se.T.hbf <- var.T.hbf^0.5 #Standardfehler
                      ~^~
NO COPY: R/BWI3_HR_Totholz.R:101:5: style: Place a space before left parenthesis, except in a function call.
  if(bwi==3) {
    ^
NO COPY: R/BWI3_HR_Totholz.R:101:9: style: Put spaces around all infix operators.
  if(bwi==3) {
       ~^~~
NO COPY: R/BWI3_HR_Totholz.R:103:32: style: Commas should always have a space after.
    names(totholz) <- sub("tl",names(totholz),replacement="lge")
                               ^
NO COPY: R/BWI3_HR_Totholz.R:103:47: style: Commas should always have a space after.
    names(totholz) <- sub("tl",names(totholz),replacement="lge")
                                              ^
NO COPY: R/BWI3_HR_Totholz.R:103:58: style: Put spaces around all infix operators.
    names(totholz) <- sub("tl",names(totholz),replacement="lge")
                                                        ~^~
NO COPY: R/BWI3_HR_Totholz.R:104:1: style: lines should not be more than 80 characters.
    #Mittendurchmesser wird bei Bruchst\u00fccken (mit 2 Durchmessern als mittlerer
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:106:37: style: Put spaces around all infix operators.
    totholz$dm <- ifelse(totholz$tsd>0&!is.na(totholz$tsd),
                                   ~^~
NO COPY: R/BWI3_HR_Totholz.R:106:39: style: Put spaces around all infix operators.
    totholz$dm <- ifelse(totholz$tsd>0&!is.na(totholz$tsd),
                                     ~^~
NO COPY: R/BWI3_HR_Totholz.R:107:24: style: Put spaces around all infix operators.
              round(200*sqrt(totholz$tvol/totholz$lge/pi),1),totholz$tbd)
                      ~^~
NO COPY: R/BWI3_HR_Totholz.R:107:42: style: Put spaces around all infix operators.
              round(200*sqrt(totholz$tvol/totholz$lge/pi),1),totholz$tbd)
                                        ~^~
NO COPY: R/BWI3_HR_Totholz.R:107:54: style: Put spaces around all infix operators.
              round(200*sqrt(totholz$tvol/totholz$lge/pi),1),totholz$tbd)
                                                    ~^~
NO COPY: R/BWI3_HR_Totholz.R:107:59: style: Commas should always have a space after.
              round(200*sqrt(totholz$tvol/totholz$lge/pi),1),totholz$tbd)
                                                          ^
NO COPY: R/BWI3_HR_Totholz.R:107:62: style: Commas should always have a space after.
              round(200*sqrt(totholz$tvol/totholz$lge/pi),1),totholz$tbd)
                                                             ^
NO COPY: R/BWI3_HR_Totholz.R:109:3: style: Opening curly braces should never go on their own line and should always be followed by a new line.
  {
  ^
NO COPY: R/BWI3_HR_Totholz.R:111:26: style: Commas should always have a space after.
    totholz$anz <- rep(1,length(totholz[,1]))
                         ^
NO COPY: R/BWI3_HR_Totholz.R:111:42: style: Commas should always have a space after.
    totholz$anz <- rep(1,length(totholz[,1]))
                                         ^
NO COPY: R/BWI3_HR_Totholz.R:114:1: style: lines should not be more than 80 characters.
  totholz.s <- merge(totholz[TRUE, c("tnr", "enr", "nr", "tbagr", "tart", "tzg", "tvol", "dm", "lge", "anz", "thf")],
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:116:24: style: Put spaces around all infix operators.
                     by=c("tnr","enr"),all.y=T)
                      ~^~
NO COPY: R/BWI3_HR_Totholz.R:116:33: style: Commas should always have a space after.
                     by=c("tnr","enr"),all.y=T)
                                ^
NO COPY: R/BWI3_HR_Totholz.R:116:40: style: Commas should always have a space after.
                     by=c("tnr","enr"),all.y=T)
                                       ^
NO COPY: R/BWI3_HR_Totholz.R:116:45: style: Put spaces around all infix operators.
                     by=c("tnr","enr"),all.y=T)
                                           ~^~
NO COPY: R/BWI3_HR_Totholz.R:118:4: style: Commented code should be removed.
  #BA-Gruppen-Bezeichner
   ^~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:119:24: style: Commas should always have a space after.
  tbagr.list <- c("NB","LB","EI")
                       ^
NO COPY: R/BWI3_HR_Totholz.R:119:29: style: Commas should always have a space after.
  tbagr.list <- c("NB","LB","EI")
                            ^
NO COPY: R/BWI3_HR_Totholz.R:123:30: style: Commas should always have a space after.
  brks <- c(seq(D.klass[[1]],D.klass[[2]],D.klass[[3]]),D.max)
                             ^
NO COPY: R/BWI3_HR_Totholz.R:123:43: style: Commas should always have a space after.
  brks <- c(seq(D.klass[[1]],D.klass[[2]],D.klass[[3]]),D.max)
                                          ^
NO COPY: R/BWI3_HR_Totholz.R:123:57: style: Commas should always have a space after.
  brks <- c(seq(D.klass[[1]],D.klass[[2]],D.klass[[3]]),D.max)
                                                        ^
NO COPY: R/BWI3_HR_Totholz.R:124:44: style: Put spaces around all infix operators.
  totholz.s$dkl <- cut(totholz.s$dm, breaks=brks, right=F)
                                          ~^~
NO COPY: R/BWI3_HR_Totholz.R:124:56: style: Put spaces around all infix operators.
  totholz.s$dkl <- cut(totholz.s$dm, breaks=brks, right=F)
                                                      ~^~
NO COPY: R/BWI3_HR_Totholz.R:129:5: style: Place a space before left parenthesis, except in a function call.
  if(D.klass[[2]]>D.klass[[3]])
    ^
NO COPY: R/BWI3_HR_Totholz.R:129:18: style: Put spaces around all infix operators.
  if(D.klass[[2]]>D.klass[[3]])
                ~^~
NO COPY: R/BWI3_HR_Totholz.R:130:3: style: Opening curly braces should never go on their own line and should always be followed by a new line.
  {
  ^
NO COPY: R/BWI3_HR_Totholz.R:131:5: style: Words within variable and function names should be separated by '_' rather than '.'.
    max.D.k <- (D.klass[[2]]-D.klass[[1]])/D.klass[[2]] + 2
    ^~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:131:29: style: Put spaces around all infix operators.
    max.D.k <- (D.klass[[2]]-D.klass[[1]])/D.klass[[2]] + 2
                           ~^~
NO COPY: R/BWI3_HR_Totholz.R:131:43: style: Put spaces around all infix operators.
    max.D.k <- (D.klass[[2]]-D.klass[[1]])/D.klass[[2]] + 2
                                         ~^~
NO COPY: R/BWI3_HR_Totholz.R:132:15: style: Words within variable and function names should be separated by '_' rather than '.'.
    if (D.k < max.D.k) {D.k <- max.D.k }
              ^~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:132:24: style: Opening curly braces should never go on their own line and should always be followed by a new line.
    if (D.k < max.D.k) {D.k <- max.D.k }
                       ^
NO COPY: R/BWI3_HR_Totholz.R:132:32: style: Words within variable and function names should be separated by '_' rather than '.'.
    if (D.k < max.D.k) {D.k <- max.D.k }
                               ^~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:132:40: style: Closing curly-braces should always be on their own line, unless it's followed by an else.
    if (D.k < max.D.k) {D.k <- max.D.k }
                                       ^
NO COPY: R/BWI3_HR_Totholz.R:142:1: style: lines should not be more than 80 characters.
  #F\u00fcr diese 2 "Gr\u00f6\u00dfen" werden jeweils der Gesamtwert ("Total") und der Stichproben-
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:143:1: style: lines should not be more than 80 characters.
  #fehler (SE) berechnet, und zwar jeweils f\u00fcr die 3 Baumartengruppen <tbagr>,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:145:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: R/BWI3_HR_Totholz.R:146:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  Y.bagr.dkl    <- array(dim=c(2,2,tbagr.k,tart.k,tzg.k,D.k))
  ^~~~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:146:29: style: Put spaces around all infix operators.
  Y.bagr.dkl    <- array(dim=c(2,2,tbagr.k,tart.k,tzg.k,D.k))
                           ~^~
NO COPY: R/BWI3_HR_Totholz.R:146:34: style: Commas should always have a space after.
  Y.bagr.dkl    <- array(dim=c(2,2,tbagr.k,tart.k,tzg.k,D.k))
                                 ^
NO COPY: R/BWI3_HR_Totholz.R:146:36: style: Commas should always have a space after.
  Y.bagr.dkl    <- array(dim=c(2,2,tbagr.k,tart.k,tzg.k,D.k))
                                   ^
NO COPY: R/BWI3_HR_Totholz.R:146:44: style: Commas should always have a space after.
  Y.bagr.dkl    <- array(dim=c(2,2,tbagr.k,tart.k,tzg.k,D.k))
                                           ^
NO COPY: R/BWI3_HR_Totholz.R:146:51: style: Commas should always have a space after.
  Y.bagr.dkl    <- array(dim=c(2,2,tbagr.k,tart.k,tzg.k,D.k))
                                                  ^
NO COPY: R/BWI3_HR_Totholz.R:146:57: style: Commas should always have a space after.
  Y.bagr.dkl    <- array(dim=c(2,2,tbagr.k,tart.k,tzg.k,D.k))
                                                        ^
NO COPY: R/BWI3_HR_Totholz.R:147:3: style: Variable and function names should be all lowercase.
  nT.bagr.dkl   <- array(dim=c(tbagr.k,tart.k,tzg.k,D.k))
  ^~~~~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:147:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  nT.bagr.dkl   <- array(dim=c(tbagr.k,tart.k,tzg.k,D.k))
  ^~~~~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:147:29: style: Put spaces around all infix operators.
  nT.bagr.dkl   <- array(dim=c(tbagr.k,tart.k,tzg.k,D.k))
                           ~^~
NO COPY: R/BWI3_HR_Totholz.R:147:40: style: Commas should always have a space after.
  nT.bagr.dkl   <- array(dim=c(tbagr.k,tart.k,tzg.k,D.k))
                                       ^
NO COPY: R/BWI3_HR_Totholz.R:147:47: style: Commas should always have a space after.
  nT.bagr.dkl   <- array(dim=c(tbagr.k,tart.k,tzg.k,D.k))
                                              ^
NO COPY: R/BWI3_HR_Totholz.R:147:53: style: Commas should always have a space after.
  nT.bagr.dkl   <- array(dim=c(tbagr.k,tart.k,tzg.k,D.k))
                                                    ^
NO COPY: R/BWI3_HR_Totholz.R:149:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  Yha.bagr.dkl  <- array(dim=c(2,2,tbagr.k,tart.k,tzg.k,D.k))
  ^~~~~~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:149:29: style: Put spaces around all infix operators.
  Yha.bagr.dkl  <- array(dim=c(2,2,tbagr.k,tart.k,tzg.k,D.k))
                           ~^~
NO COPY: R/BWI3_HR_Totholz.R:149:34: style: Commas should always have a space after.
  Yha.bagr.dkl  <- array(dim=c(2,2,tbagr.k,tart.k,tzg.k,D.k))
                                 ^
NO COPY: R/BWI3_HR_Totholz.R:149:36: style: Commas should always have a space after.
  Yha.bagr.dkl  <- array(dim=c(2,2,tbagr.k,tart.k,tzg.k,D.k))
                                   ^
NO COPY: R/BWI3_HR_Totholz.R:149:44: style: Commas should always have a space after.
  Yha.bagr.dkl  <- array(dim=c(2,2,tbagr.k,tart.k,tzg.k,D.k))
                                           ^
NO COPY: R/BWI3_HR_Totholz.R:149:51: style: Commas should always have a space after.
  Yha.bagr.dkl  <- array(dim=c(2,2,tbagr.k,tart.k,tzg.k,D.k))
                                                  ^
NO COPY: R/BWI3_HR_Totholz.R:149:57: style: Commas should always have a space after.
  Yha.bagr.dkl  <- array(dim=c(2,2,tbagr.k,tart.k,tzg.k,D.k))
                                                        ^
NO COPY: R/BWI3_HR_Totholz.R:153:3: style: Opening curly braces should never go on their own line and should always be followed by a new line.
  {
  ^
NO COPY: R/BWI3_HR_Totholz.R:155:5: style: Opening curly braces should never go on their own line and should always be followed by a new line.
    {
    ^
NO COPY: R/BWI3_HR_Totholz.R:157:7: style: Opening curly braces should never go on their own line and should always be followed by a new line.
      {
      ^
NO COPY: R/BWI3_HR_Totholz.R:159:11: style: Opening curly braces should never go on their own line and should always be followed by a new line.
          {
          ^
NO COPY: R/BWI3_HR_Totholz.R:162:1: style: lines should not be more than 80 characters.
              #                         tbagr==i&tart==tart.code[j]&tzg==k&dkl==dkl.lab[l],
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:163:1: style: lines should not be more than 80 characters.
              #                         select=c(tnr,enr,tbagr,tart,tzg,dm,lge,tvol,anz,thf))
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:165:66: style: Trailing whitespace is superfluous.
              totholz.ba <- totholz.s[totholz.s[["tbagr"]] == i & 
                                                                 ^
NO COPY: R/BWI3_HR_Totholz.R:167:64: style: Trailing whitespace is superfluous.
                                      totholz.s[["tzg"]] == k & 
                                                               ^
NO COPY: R/BWI3_HR_Totholz.R:169:1: style: lines should not be more than 80 characters.
                                  c("tnr", "enr", "tbagr", "tart", "tzg", "dm", "lge", "tvol", "anz", "thf")]
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:171:17: style: Place a space before left parenthesis, except in a function call.
              if(all(is.na(totholz.ba))) totholz.ba <- totholz.ba[FALSE, TRUE] 
                ^
NO COPY: R/BWI3_HR_Totholz.R:171:79: style: Trailing whitespace is superfluous.
              if(all(is.na(totholz.ba))) totholz.ba <- totholz.ba[FALSE, TRUE] 
                                                                              ^
NO COPY: R/BWI3_HR_Totholz.R:172:34: style: Commas should always have a space after.
          if (length(totholz.ba[,1])== 0)
                                 ^
NO COPY: R/BWI3_HR_Totholz.R:172:37: style: Put spaces around all infix operators.
          if (length(totholz.ba[,1])== 0)
                                   ~^
NO COPY: R/BWI3_HR_Totholz.R:173:11: style: Opening curly braces should never go on their own line and should always be followed by a new line.
          {
          ^
NO COPY: R/BWI3_HR_Totholz.R:174:14: style: Words within variable and function names should be separated by '_' rather than '.'.
             Y.bagr.dkl[1:2,1,i,j,k,l]   <- rep(0,2)  #Zielgr\u00f6\u00dfe Total
             ^~~~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:174:29: style: Commas should always have a space after.
             Y.bagr.dkl[1:2,1,i,j,k,l]   <- rep(0,2)  #Zielgr\u00f6\u00dfe Total
                            ^
NO COPY: R/BWI3_HR_Totholz.R:174:31: style: Commas should always have a space after.
             Y.bagr.dkl[1:2,1,i,j,k,l]   <- rep(0,2)  #Zielgr\u00f6\u00dfe Total
                              ^
NO COPY: R/BWI3_HR_Totholz.R:174:33: style: Commas should always have a space after.
             Y.bagr.dkl[1:2,1,i,j,k,l]   <- rep(0,2)  #Zielgr\u00f6\u00dfe Total
                                ^
NO COPY: R/BWI3_HR_Totholz.R:174:35: style: Commas should always have a space after.
             Y.bagr.dkl[1:2,1,i,j,k,l]   <- rep(0,2)  #Zielgr\u00f6\u00dfe Total
                                  ^
NO COPY: R/BWI3_HR_Totholz.R:174:37: style: Commas should always have a space after.
             Y.bagr.dkl[1:2,1,i,j,k,l]   <- rep(0,2)  #Zielgr\u00f6\u00dfe Total
                                    ^
NO COPY: R/BWI3_HR_Totholz.R:174:51: style: Commas should always have a space after.
             Y.bagr.dkl[1:2,1,i,j,k,l]   <- rep(0,2)  #Zielgr\u00f6\u00dfe Total
                                                  ^
NO COPY: R/BWI3_HR_Totholz.R:175:14: style: Words within variable and function names should be separated by '_' rather than '.'.
             Y.bagr.dkl[1:2,2,i,j,k,l]   <- rep(0,2)  #Stichprobenfehler (SE)
             ^~~~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:175:29: style: Commas should always have a space after.
             Y.bagr.dkl[1:2,2,i,j,k,l]   <- rep(0,2)  #Stichprobenfehler (SE)
                            ^
NO COPY: R/BWI3_HR_Totholz.R:175:31: style: Commas should always have a space after.
             Y.bagr.dkl[1:2,2,i,j,k,l]   <- rep(0,2)  #Stichprobenfehler (SE)
                              ^
NO COPY: R/BWI3_HR_Totholz.R:175:33: style: Commas should always have a space after.
             Y.bagr.dkl[1:2,2,i,j,k,l]   <- rep(0,2)  #Stichprobenfehler (SE)
                                ^
NO COPY: R/BWI3_HR_Totholz.R:175:35: style: Commas should always have a space after.
             Y.bagr.dkl[1:2,2,i,j,k,l]   <- rep(0,2)  #Stichprobenfehler (SE)
                                  ^
NO COPY: R/BWI3_HR_Totholz.R:175:37: style: Commas should always have a space after.
             Y.bagr.dkl[1:2,2,i,j,k,l]   <- rep(0,2)  #Stichprobenfehler (SE)
                                    ^
NO COPY: R/BWI3_HR_Totholz.R:175:51: style: Commas should always have a space after.
             Y.bagr.dkl[1:2,2,i,j,k,l]   <- rep(0,2)  #Stichprobenfehler (SE)
                                                  ^
NO COPY: R/BWI3_HR_Totholz.R:176:14: style: Words within variable and function names should be separated by '_' rather than '.'.
             Yha.bagr.dkl[1:2,1,i,j,k,l] <- rep(0,2)
             ^~~~~~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:176:31: style: Commas should always have a space after.
             Yha.bagr.dkl[1:2,1,i,j,k,l] <- rep(0,2)
                              ^
NO COPY: R/BWI3_HR_Totholz.R:176:33: style: Commas should always have a space after.
             Yha.bagr.dkl[1:2,1,i,j,k,l] <- rep(0,2)
                                ^
NO COPY: R/BWI3_HR_Totholz.R:176:35: style: Commas should always have a space after.
             Yha.bagr.dkl[1:2,1,i,j,k,l] <- rep(0,2)
                                  ^
NO COPY: R/BWI3_HR_Totholz.R:176:37: style: Commas should always have a space after.
             Yha.bagr.dkl[1:2,1,i,j,k,l] <- rep(0,2)
                                    ^
NO COPY: R/BWI3_HR_Totholz.R:176:39: style: Commas should always have a space after.
             Yha.bagr.dkl[1:2,1,i,j,k,l] <- rep(0,2)
                                      ^
NO COPY: R/BWI3_HR_Totholz.R:176:51: style: Commas should always have a space after.
             Yha.bagr.dkl[1:2,1,i,j,k,l] <- rep(0,2)
                                                  ^
NO COPY: R/BWI3_HR_Totholz.R:177:14: style: Words within variable and function names should be separated by '_' rather than '.'.
             Yha.bagr.dkl[1:2,1,i,j,k,l] <- rep(0,2)
             ^~~~~~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:177:31: style: Commas should always have a space after.
             Yha.bagr.dkl[1:2,1,i,j,k,l] <- rep(0,2)
                              ^
NO COPY: R/BWI3_HR_Totholz.R:177:33: style: Commas should always have a space after.
             Yha.bagr.dkl[1:2,1,i,j,k,l] <- rep(0,2)
                                ^
NO COPY: R/BWI3_HR_Totholz.R:177:35: style: Commas should always have a space after.
             Yha.bagr.dkl[1:2,1,i,j,k,l] <- rep(0,2)
                                  ^
NO COPY: R/BWI3_HR_Totholz.R:177:37: style: Commas should always have a space after.
             Yha.bagr.dkl[1:2,1,i,j,k,l] <- rep(0,2)
                                    ^
NO COPY: R/BWI3_HR_Totholz.R:177:39: style: Commas should always have a space after.
             Yha.bagr.dkl[1:2,1,i,j,k,l] <- rep(0,2)
                                      ^
NO COPY: R/BWI3_HR_Totholz.R:177:51: style: Commas should always have a space after.
             Yha.bagr.dkl[1:2,1,i,j,k,l] <- rep(0,2)
                                                  ^
NO COPY: R/BWI3_HR_Totholz.R:178:14: style: Variable and function names should be all lowercase.
             nT.bagr.dkl[i,j,k,l]    <- 0  #n PSU (Trakte)
             ^~~~~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:178:14: style: Words within variable and function names should be separated by '_' rather than '.'.
             nT.bagr.dkl[i,j,k,l]    <- 0  #n PSU (Trakte)
             ^~~~~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:178:28: style: Commas should always have a space after.
             nT.bagr.dkl[i,j,k,l]    <- 0  #n PSU (Trakte)
                           ^
NO COPY: R/BWI3_HR_Totholz.R:178:30: style: Commas should always have a space after.
             nT.bagr.dkl[i,j,k,l]    <- 0  #n PSU (Trakte)
                             ^
NO COPY: R/BWI3_HR_Totholz.R:178:32: style: Commas should always have a space after.
             nT.bagr.dkl[i,j,k,l]    <- 0  #n PSU (Trakte)
                               ^
NO COPY: R/BWI3_HR_Totholz.R:180:11: style: Opening curly braces should never go on their own line and should always be followed by a new line.
          {
          ^
NO COPY: R/BWI3_HR_Totholz.R:183:1: style: lines should not be more than 80 characters.
            xy <- stats::aggregate(totholz.ba$tvol*totholz.ba$thf*totholz.ba$anz,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:183:51: style: Put spaces around all infix operators.
            xy <- stats::aggregate(totholz.ba$tvol*totholz.ba$thf*totholz.ba$anz,
                                                 ~^~
NO COPY: R/BWI3_HR_Totholz.R:183:66: style: Put spaces around all infix operators.
            xy <- stats::aggregate(totholz.ba$tvol*totholz.ba$thf*totholz.ba$anz,
                                                                ~^~
NO COPY: R/BWI3_HR_Totholz.R:184:29: style: Put spaces around all infix operators.
                          by=list(totholz.ba$tnr),sum)
                           ~^~
NO COPY: R/BWI3_HR_Totholz.R:184:51: style: Commas should always have a space after.
                          by=list(totholz.ba$tnr),sum)
                                                  ^
NO COPY: R/BWI3_HR_Totholz.R:185:34: style: Commas should always have a space after.
            names(xy) <- c("tnr","v")
                                 ^
NO COPY: R/BWI3_HR_Totholz.R:187:28: style: Commas should always have a space after.
            xy <- cbind(xy,stats::aggregate(totholz.ba$thf*totholz.ba$anz,
                           ^
NO COPY: R/BWI3_HR_Totholz.R:187:59: style: Put spaces around all infix operators.
            xy <- cbind(xy,stats::aggregate(totholz.ba$thf*totholz.ba$anz,
                                                         ~^~
NO COPY: R/BWI3_HR_Totholz.R:188:41: style: Put spaces around all infix operators.
                                      by=list(totholz.ba$tnr),sum)$x)
                                       ~^~
NO COPY: R/BWI3_HR_Totholz.R:188:63: style: Commas should always have a space after.
                                      by=list(totholz.ba$tnr),sum)$x)
                                                              ^
NO COPY: R/BWI3_HR_Totholz.R:193:28: style: Commas should always have a space after.
            xy <- merge(xy,y,by=c("tnr"),all.x=T)
                           ^
NO COPY: R/BWI3_HR_Totholz.R:193:30: style: Commas should always have a space after.
            xy <- merge(xy,y,by=c("tnr"),all.x=T)
                             ^
NO COPY: R/BWI3_HR_Totholz.R:193:32: style: Put spaces around all infix operators.
            xy <- merge(xy,y,by=c("tnr"),all.x=T)
                              ~^~
NO COPY: R/BWI3_HR_Totholz.R:193:42: style: Commas should always have a space after.
            xy <- merge(xy,y,by=c("tnr"),all.x=T)
                                         ^
NO COPY: R/BWI3_HR_Totholz.R:193:47: style: Put spaces around all infix operators.
            xy <- merge(xy,y,by=c("tnr"),all.x=T)
                                             ~^~
NO COPY: R/BWI3_HR_Totholz.R:194:1: style: lines should not be more than 80 characters.
            #Umbennen von xy$y in xy$x (Symbol f\u00fcr Bezugsfl\u00e4che Holzboden)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:199:13: style: Variable and function names should be all lowercase.
            nT.bagr.dkl[i,j,k,l] <- length(xy[,1])
            ^~~~~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:199:13: style: Words within variable and function names should be separated by '_' rather than '.'.
            nT.bagr.dkl[i,j,k,l] <- length(xy[,1])
            ^~~~~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:199:27: style: Commas should always have a space after.
            nT.bagr.dkl[i,j,k,l] <- length(xy[,1])
                          ^
NO COPY: R/BWI3_HR_Totholz.R:199:29: style: Commas should always have a space after.
            nT.bagr.dkl[i,j,k,l] <- length(xy[,1])
                            ^
NO COPY: R/BWI3_HR_Totholz.R:199:31: style: Commas should always have a space after.
            nT.bagr.dkl[i,j,k,l] <- length(xy[,1])
                              ^
NO COPY: R/BWI3_HR_Totholz.R:199:48: style: Commas should always have a space after.
            nT.bagr.dkl[i,j,k,l] <- length(xy[,1])
                                               ^
NO COPY: R/BWI3_HR_Totholz.R:202:13: style: Opening curly braces should never go on their own line and should always be followed by a new line.
            {
            ^
NO COPY: R/BWI3_HR_Totholz.R:205:15: style: Words within variable and function names should be separated by '_' rather than '.'.
              Y.bagr.dkl[m,1,i,j,k,l] <-  sum(xy[,(1+m)])/sum(x)*A
              ^~~~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:205:28: style: Commas should always have a space after.
              Y.bagr.dkl[m,1,i,j,k,l] <-  sum(xy[,(1+m)])/sum(x)*A
                           ^
NO COPY: R/BWI3_HR_Totholz.R:205:30: style: Commas should always have a space after.
              Y.bagr.dkl[m,1,i,j,k,l] <-  sum(xy[,(1+m)])/sum(x)*A
                             ^
NO COPY: R/BWI3_HR_Totholz.R:205:32: style: Commas should always have a space after.
              Y.bagr.dkl[m,1,i,j,k,l] <-  sum(xy[,(1+m)])/sum(x)*A
                               ^
NO COPY: R/BWI3_HR_Totholz.R:205:34: style: Commas should always have a space after.
              Y.bagr.dkl[m,1,i,j,k,l] <-  sum(xy[,(1+m)])/sum(x)*A
                                 ^
NO COPY: R/BWI3_HR_Totholz.R:205:36: style: Commas should always have a space after.
              Y.bagr.dkl[m,1,i,j,k,l] <-  sum(xy[,(1+m)])/sum(x)*A
                                   ^
NO COPY: R/BWI3_HR_Totholz.R:205:51: style: Commas should always have a space after.
              Y.bagr.dkl[m,1,i,j,k,l] <-  sum(xy[,(1+m)])/sum(x)*A
                                                  ^
NO COPY: R/BWI3_HR_Totholz.R:205:51: style: Place a space before left parenthesis, except in a function call.
              Y.bagr.dkl[m,1,i,j,k,l] <-  sum(xy[,(1+m)])/sum(x)*A
                                                  ^
NO COPY: R/BWI3_HR_Totholz.R:205:53: style: Put spaces around all infix operators.
              Y.bagr.dkl[m,1,i,j,k,l] <-  sum(xy[,(1+m)])/sum(x)*A
                                                   ~^~
NO COPY: R/BWI3_HR_Totholz.R:205:58: style: Put spaces around all infix operators.
              Y.bagr.dkl[m,1,i,j,k,l] <-  sum(xy[,(1+m)])/sum(x)*A
                                                        ~^~
NO COPY: R/BWI3_HR_Totholz.R:205:65: style: Put spaces around all infix operators.
              Y.bagr.dkl[m,1,i,j,k,l] <-  sum(xy[,(1+m)])/sum(x)*A
                                                               ~^~
NO COPY: R/BWI3_HR_Totholz.R:207:15: style: Words within variable and function names should be separated by '_' rather than '.'.
              Y.bagr.dkl[m,2,i,j,k,l] <- Y.bagr.dkl[m,1,i,j,k,l]*sqrt(
              ^~~~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:207:28: style: Commas should always have a space after.
              Y.bagr.dkl[m,2,i,j,k,l] <- Y.bagr.dkl[m,1,i,j,k,l]*sqrt(
                           ^
NO COPY: R/BWI3_HR_Totholz.R:207:30: style: Commas should always have a space after.
              Y.bagr.dkl[m,2,i,j,k,l] <- Y.bagr.dkl[m,1,i,j,k,l]*sqrt(
                             ^
NO COPY: R/BWI3_HR_Totholz.R:207:32: style: Commas should always have a space after.
              Y.bagr.dkl[m,2,i,j,k,l] <- Y.bagr.dkl[m,1,i,j,k,l]*sqrt(
                               ^
NO COPY: R/BWI3_HR_Totholz.R:207:34: style: Commas should always have a space after.
              Y.bagr.dkl[m,2,i,j,k,l] <- Y.bagr.dkl[m,1,i,j,k,l]*sqrt(
                                 ^
NO COPY: R/BWI3_HR_Totholz.R:207:36: style: Commas should always have a space after.
              Y.bagr.dkl[m,2,i,j,k,l] <- Y.bagr.dkl[m,1,i,j,k,l]*sqrt(
                                   ^
NO COPY: R/BWI3_HR_Totholz.R:207:42: style: Words within variable and function names should be separated by '_' rather than '.'.
              Y.bagr.dkl[m,2,i,j,k,l] <- Y.bagr.dkl[m,1,i,j,k,l]*sqrt(
                                         ^~~~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:207:55: style: Commas should always have a space after.
              Y.bagr.dkl[m,2,i,j,k,l] <- Y.bagr.dkl[m,1,i,j,k,l]*sqrt(
                                                      ^
NO COPY: R/BWI3_HR_Totholz.R:207:57: style: Commas should always have a space after.
              Y.bagr.dkl[m,2,i,j,k,l] <- Y.bagr.dkl[m,1,i,j,k,l]*sqrt(
                                                        ^
NO COPY: R/BWI3_HR_Totholz.R:207:59: style: Commas should always have a space after.
              Y.bagr.dkl[m,2,i,j,k,l] <- Y.bagr.dkl[m,1,i,j,k,l]*sqrt(
                                                          ^
NO COPY: R/BWI3_HR_Totholz.R:207:61: style: Commas should always have a space after.
              Y.bagr.dkl[m,2,i,j,k,l] <- Y.bagr.dkl[m,1,i,j,k,l]*sqrt(
                                                            ^
NO COPY: R/BWI3_HR_Totholz.R:207:63: style: Commas should always have a space after.
              Y.bagr.dkl[m,2,i,j,k,l] <- Y.bagr.dkl[m,1,i,j,k,l]*sqrt(
                                                              ^
NO COPY: R/BWI3_HR_Totholz.R:207:65: style: Put spaces around all infix operators.
              Y.bagr.dkl[m,2,i,j,k,l] <- Y.bagr.dkl[m,1,i,j,k,l]*sqrt(
                                                               ~^~
NO COPY: R/BWI3_HR_Totholz.R:208:17: style: Put spaces around all infix operators.
              nT/(nT-1)*(sum(xy[,(1+m)]^2)/sum(xy[,(1+m)])^2+sum(x^2)/sum(x)^2
               ~^~
NO COPY: R/BWI3_HR_Totholz.R:208:18: style: Place a space before left parenthesis, except in a function call.
              nT/(nT-1)*(sum(xy[,(1+m)]^2)/sum(xy[,(1+m)])^2+sum(x^2)/sum(x)^2
                 ^
NO COPY: R/BWI3_HR_Totholz.R:208:21: style: Put spaces around all infix operators.
              nT/(nT-1)*(sum(xy[,(1+m)]^2)/sum(xy[,(1+m)])^2+sum(x^2)/sum(x)^2
                   ~^~
NO COPY: R/BWI3_HR_Totholz.R:208:24: style: Put spaces around all infix operators.
              nT/(nT-1)*(sum(xy[,(1+m)]^2)/sum(xy[,(1+m)])^2+sum(x^2)/sum(x)^2
                      ~^~
NO COPY: R/BWI3_HR_Totholz.R:208:25: style: Place a space before left parenthesis, except in a function call.
              nT/(nT-1)*(sum(xy[,(1+m)]^2)/sum(xy[,(1+m)])^2+sum(x^2)/sum(x)^2
                        ^
NO COPY: R/BWI3_HR_Totholz.R:208:34: style: Commas should always have a space after.
              nT/(nT-1)*(sum(xy[,(1+m)]^2)/sum(xy[,(1+m)])^2+sum(x^2)/sum(x)^2
                                 ^
NO COPY: R/BWI3_HR_Totholz.R:208:34: style: Place a space before left parenthesis, except in a function call.
              nT/(nT-1)*(sum(xy[,(1+m)]^2)/sum(xy[,(1+m)])^2+sum(x^2)/sum(x)^2
                                 ^
NO COPY: R/BWI3_HR_Totholz.R:208:36: style: Put spaces around all infix operators.
              nT/(nT-1)*(sum(xy[,(1+m)]^2)/sum(xy[,(1+m)])^2+sum(x^2)/sum(x)^2
                                  ~^~
NO COPY: R/BWI3_HR_Totholz.R:208:40: style: Put spaces around all infix operators.
              nT/(nT-1)*(sum(xy[,(1+m)]^2)/sum(xy[,(1+m)])^2+sum(x^2)/sum(x)^2
                                      ~^~
NO COPY: R/BWI3_HR_Totholz.R:208:43: style: Put spaces around all infix operators.
              nT/(nT-1)*(sum(xy[,(1+m)]^2)/sum(xy[,(1+m)])^2+sum(x^2)/sum(x)^2
                                         ~^~
NO COPY: R/BWI3_HR_Totholz.R:208:52: style: Commas should always have a space after.
              nT/(nT-1)*(sum(xy[,(1+m)]^2)/sum(xy[,(1+m)])^2+sum(x^2)/sum(x)^2
                                                   ^
NO COPY: R/BWI3_HR_Totholz.R:208:52: style: Place a space before left parenthesis, except in a function call.
              nT/(nT-1)*(sum(xy[,(1+m)]^2)/sum(xy[,(1+m)])^2+sum(x^2)/sum(x)^2
                                                   ^
NO COPY: R/BWI3_HR_Totholz.R:208:54: style: Put spaces around all infix operators.
              nT/(nT-1)*(sum(xy[,(1+m)]^2)/sum(xy[,(1+m)])^2+sum(x^2)/sum(x)^2
                                                    ~^~
NO COPY: R/BWI3_HR_Totholz.R:208:59: style: Put spaces around all infix operators.
              nT/(nT-1)*(sum(xy[,(1+m)]^2)/sum(xy[,(1+m)])^2+sum(x^2)/sum(x)^2
                                                         ~^~
NO COPY: R/BWI3_HR_Totholz.R:208:61: style: Put spaces around all infix operators.
              nT/(nT-1)*(sum(xy[,(1+m)]^2)/sum(xy[,(1+m)])^2+sum(x^2)/sum(x)^2
                                                           ~^~
NO COPY: R/BWI3_HR_Totholz.R:208:67: style: Put spaces around all infix operators.
              nT/(nT-1)*(sum(xy[,(1+m)]^2)/sum(xy[,(1+m)])^2+sum(x^2)/sum(x)^2
                                                                 ~^~
NO COPY: R/BWI3_HR_Totholz.R:208:70: style: Put spaces around all infix operators.
              nT/(nT-1)*(sum(xy[,(1+m)]^2)/sum(xy[,(1+m)])^2+sum(x^2)/sum(x)^2
                                                                    ~^~
NO COPY: R/BWI3_HR_Totholz.R:208:77: style: Put spaces around all infix operators.
              nT/(nT-1)*(sum(xy[,(1+m)]^2)/sum(xy[,(1+m)])^2+sum(x^2)/sum(x)^2
                                                                           ~^~
NO COPY: R/BWI3_HR_Totholz.R:209:33: style: Put spaces around all infix operators.
                                -2*sum(xy[,(1+m)]*xy$m)/sum(xy[,(1+m)])/sum(x)))
                                ^~
NO COPY: R/BWI3_HR_Totholz.R:209:35: style: Put spaces around all infix operators.
                                -2*sum(xy[,(1+m)]*xy$m)/sum(xy[,(1+m)])/sum(x)))
                                 ~^~
NO COPY: R/BWI3_HR_Totholz.R:209:44: style: Commas should always have a space after.
                                -2*sum(xy[,(1+m)]*xy$m)/sum(xy[,(1+m)])/sum(x)))
                                           ^
NO COPY: R/BWI3_HR_Totholz.R:209:44: style: Place a space before left parenthesis, except in a function call.
                                -2*sum(xy[,(1+m)]*xy$m)/sum(xy[,(1+m)])/sum(x)))
                                           ^
NO COPY: R/BWI3_HR_Totholz.R:209:46: style: Put spaces around all infix operators.
                                -2*sum(xy[,(1+m)]*xy$m)/sum(xy[,(1+m)])/sum(x)))
                                            ~^~
NO COPY: R/BWI3_HR_Totholz.R:209:50: style: Put spaces around all infix operators.
                                -2*sum(xy[,(1+m)]*xy$m)/sum(xy[,(1+m)])/sum(x)))
                                                ~^~
NO COPY: R/BWI3_HR_Totholz.R:209:56: style: Put spaces around all infix operators.
                                -2*sum(xy[,(1+m)]*xy$m)/sum(xy[,(1+m)])/sum(x)))
                                                      ~^~
NO COPY: R/BWI3_HR_Totholz.R:209:65: style: Commas should always have a space after.
                                -2*sum(xy[,(1+m)]*xy$m)/sum(xy[,(1+m)])/sum(x)))
                                                                ^
NO COPY: R/BWI3_HR_Totholz.R:209:65: style: Place a space before left parenthesis, except in a function call.
                                -2*sum(xy[,(1+m)]*xy$m)/sum(xy[,(1+m)])/sum(x)))
                                                                ^
NO COPY: R/BWI3_HR_Totholz.R:209:67: style: Put spaces around all infix operators.
                                -2*sum(xy[,(1+m)]*xy$m)/sum(xy[,(1+m)])/sum(x)))
                                                                 ~^~
NO COPY: R/BWI3_HR_Totholz.R:209:72: style: Put spaces around all infix operators.
                                -2*sum(xy[,(1+m)]*xy$m)/sum(xy[,(1+m)])/sum(x)))
                                                                      ~^~
NO COPY: R/BWI3_HR_Totholz.R:212:1: style: lines should not be more than 80 characters.
              #Bezugsfl\u00e4che ist die HBF des Stratums (also keine BA-Fl\u00e4che!)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:213:15: style: Words within variable and function names should be separated by '_' rather than '.'.
              Yha.bagr.dkl[m,1,i,j,k,l] <- Y.bagr.dkl[m,1,i,j,k,l]/T.hbf
              ^~~~~~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:213:30: style: Commas should always have a space after.
              Yha.bagr.dkl[m,1,i,j,k,l] <- Y.bagr.dkl[m,1,i,j,k,l]/T.hbf
                             ^
NO COPY: R/BWI3_HR_Totholz.R:213:32: style: Commas should always have a space after.
              Yha.bagr.dkl[m,1,i,j,k,l] <- Y.bagr.dkl[m,1,i,j,k,l]/T.hbf
                               ^
NO COPY: R/BWI3_HR_Totholz.R:213:34: style: Commas should always have a space after.
              Yha.bagr.dkl[m,1,i,j,k,l] <- Y.bagr.dkl[m,1,i,j,k,l]/T.hbf
                                 ^
NO COPY: R/BWI3_HR_Totholz.R:213:36: style: Commas should always have a space after.
              Yha.bagr.dkl[m,1,i,j,k,l] <- Y.bagr.dkl[m,1,i,j,k,l]/T.hbf
                                   ^
NO COPY: R/BWI3_HR_Totholz.R:213:38: style: Commas should always have a space after.
              Yha.bagr.dkl[m,1,i,j,k,l] <- Y.bagr.dkl[m,1,i,j,k,l]/T.hbf
                                     ^
NO COPY: R/BWI3_HR_Totholz.R:213:44: style: Words within variable and function names should be separated by '_' rather than '.'.
              Yha.bagr.dkl[m,1,i,j,k,l] <- Y.bagr.dkl[m,1,i,j,k,l]/T.hbf
                                           ^~~~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:213:57: style: Commas should always have a space after.
              Yha.bagr.dkl[m,1,i,j,k,l] <- Y.bagr.dkl[m,1,i,j,k,l]/T.hbf
                                                        ^
NO COPY: R/BWI3_HR_Totholz.R:213:59: style: Commas should always have a space after.
              Yha.bagr.dkl[m,1,i,j,k,l] <- Y.bagr.dkl[m,1,i,j,k,l]/T.hbf
                                                          ^
NO COPY: R/BWI3_HR_Totholz.R:213:61: style: Commas should always have a space after.
              Yha.bagr.dkl[m,1,i,j,k,l] <- Y.bagr.dkl[m,1,i,j,k,l]/T.hbf
                                                            ^
NO COPY: R/BWI3_HR_Totholz.R:213:63: style: Commas should always have a space after.
              Yha.bagr.dkl[m,1,i,j,k,l] <- Y.bagr.dkl[m,1,i,j,k,l]/T.hbf
                                                              ^
NO COPY: R/BWI3_HR_Totholz.R:213:65: style: Commas should always have a space after.
              Yha.bagr.dkl[m,1,i,j,k,l] <- Y.bagr.dkl[m,1,i,j,k,l]/T.hbf
                                                                ^
NO COPY: R/BWI3_HR_Totholz.R:213:67: style: Put spaces around all infix operators.
              Yha.bagr.dkl[m,1,i,j,k,l] <- Y.bagr.dkl[m,1,i,j,k,l]/T.hbf
                                                                 ~^~
NO COPY: R/BWI3_HR_Totholz.R:214:1: style: lines should not be more than 80 characters.
              tmp <- (sum(xy[,(1+m)]^2)/sum(xy[,(1+m)])^2+sum(xy$x^2)/sum(xy$x)^2
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:214:31: style: Commas should always have a space after.
              tmp <- (sum(xy[,(1+m)]^2)/sum(xy[,(1+m)])^2+sum(xy$x^2)/sum(xy$x)^2
                              ^
NO COPY: R/BWI3_HR_Totholz.R:214:31: style: Place a space before left parenthesis, except in a function call.
              tmp <- (sum(xy[,(1+m)]^2)/sum(xy[,(1+m)])^2+sum(xy$x^2)/sum(xy$x)^2
                              ^
NO COPY: R/BWI3_HR_Totholz.R:214:33: style: Put spaces around all infix operators.
              tmp <- (sum(xy[,(1+m)]^2)/sum(xy[,(1+m)])^2+sum(xy$x^2)/sum(xy$x)^2
                               ~^~
NO COPY: R/BWI3_HR_Totholz.R:214:37: style: Put spaces around all infix operators.
              tmp <- (sum(xy[,(1+m)]^2)/sum(xy[,(1+m)])^2+sum(xy$x^2)/sum(xy$x)^2
                                   ~^~
NO COPY: R/BWI3_HR_Totholz.R:214:40: style: Put spaces around all infix operators.
              tmp <- (sum(xy[,(1+m)]^2)/sum(xy[,(1+m)])^2+sum(xy$x^2)/sum(xy$x)^2
                                      ~^~
NO COPY: R/BWI3_HR_Totholz.R:214:49: style: Commas should always have a space after.
              tmp <- (sum(xy[,(1+m)]^2)/sum(xy[,(1+m)])^2+sum(xy$x^2)/sum(xy$x)^2
                                                ^
NO COPY: R/BWI3_HR_Totholz.R:214:49: style: Place a space before left parenthesis, except in a function call.
              tmp <- (sum(xy[,(1+m)]^2)/sum(xy[,(1+m)])^2+sum(xy$x^2)/sum(xy$x)^2
                                                ^
NO COPY: R/BWI3_HR_Totholz.R:214:51: style: Put spaces around all infix operators.
              tmp <- (sum(xy[,(1+m)]^2)/sum(xy[,(1+m)])^2+sum(xy$x^2)/sum(xy$x)^2
                                                 ~^~
NO COPY: R/BWI3_HR_Totholz.R:214:56: style: Put spaces around all infix operators.
              tmp <- (sum(xy[,(1+m)]^2)/sum(xy[,(1+m)])^2+sum(xy$x^2)/sum(xy$x)^2
                                                      ~^~
NO COPY: R/BWI3_HR_Totholz.R:214:58: style: Put spaces around all infix operators.
              tmp <- (sum(xy[,(1+m)]^2)/sum(xy[,(1+m)])^2+sum(xy$x^2)/sum(xy$x)^2
                                                        ~^~
NO COPY: R/BWI3_HR_Totholz.R:214:67: style: Put spaces around all infix operators.
              tmp <- (sum(xy[,(1+m)]^2)/sum(xy[,(1+m)])^2+sum(xy$x^2)/sum(xy$x)^2
                                                                 ~^~
NO COPY: R/BWI3_HR_Totholz.R:214:70: style: Put spaces around all infix operators.
              tmp <- (sum(xy[,(1+m)]^2)/sum(xy[,(1+m)])^2+sum(xy$x^2)/sum(xy$x)^2
                                                                    ~^~
NO COPY: R/BWI3_HR_Totholz.R:214:80: style: Put spaces around all infix operators.
              tmp <- (sum(xy[,(1+m)]^2)/sum(xy[,(1+m)])^2+sum(xy$x^2)/sum(xy$x)^2
                                                                              ~^~
NO COPY: R/BWI3_HR_Totholz.R:215:23: style: Put spaces around all infix operators.
                      -2*sum(xy[,(1+m)]*xy$x)/sum(xy[,(1+m)])/sum(xy$x))
                      ^~
NO COPY: R/BWI3_HR_Totholz.R:215:25: style: Put spaces around all infix operators.
                      -2*sum(xy[,(1+m)]*xy$x)/sum(xy[,(1+m)])/sum(xy$x))
                       ~^~
NO COPY: R/BWI3_HR_Totholz.R:215:34: style: Commas should always have a space after.
                      -2*sum(xy[,(1+m)]*xy$x)/sum(xy[,(1+m)])/sum(xy$x))
                                 ^
NO COPY: R/BWI3_HR_Totholz.R:215:34: style: Place a space before left parenthesis, except in a function call.
                      -2*sum(xy[,(1+m)]*xy$x)/sum(xy[,(1+m)])/sum(xy$x))
                                 ^
NO COPY: R/BWI3_HR_Totholz.R:215:36: style: Put spaces around all infix operators.
                      -2*sum(xy[,(1+m)]*xy$x)/sum(xy[,(1+m)])/sum(xy$x))
                                  ~^~
NO COPY: R/BWI3_HR_Totholz.R:215:40: style: Put spaces around all infix operators.
                      -2*sum(xy[,(1+m)]*xy$x)/sum(xy[,(1+m)])/sum(xy$x))
                                      ~^~
NO COPY: R/BWI3_HR_Totholz.R:215:46: style: Put spaces around all infix operators.
                      -2*sum(xy[,(1+m)]*xy$x)/sum(xy[,(1+m)])/sum(xy$x))
                                            ~^~
NO COPY: R/BWI3_HR_Totholz.R:215:55: style: Commas should always have a space after.
                      -2*sum(xy[,(1+m)]*xy$x)/sum(xy[,(1+m)])/sum(xy$x))
                                                      ^
NO COPY: R/BWI3_HR_Totholz.R:215:55: style: Place a space before left parenthesis, except in a function call.
                      -2*sum(xy[,(1+m)]*xy$x)/sum(xy[,(1+m)])/sum(xy$x))
                                                      ^
NO COPY: R/BWI3_HR_Totholz.R:215:57: style: Put spaces around all infix operators.
                      -2*sum(xy[,(1+m)]*xy$x)/sum(xy[,(1+m)])/sum(xy$x))
                                                       ~^~
NO COPY: R/BWI3_HR_Totholz.R:215:62: style: Put spaces around all infix operators.
                      -2*sum(xy[,(1+m)]*xy$x)/sum(xy[,(1+m)])/sum(xy$x))
                                                            ~^~
NO COPY: R/BWI3_HR_Totholz.R:217:15: style: Words within variable and function names should be separated by '_' rather than '.'.
              Yha.bagr.dkl[m,2,i,j,k,l] <- Yha.bagr.dkl[m,1,i,j,k,l] * 
              ^~~~~~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:217:30: style: Commas should always have a space after.
              Yha.bagr.dkl[m,2,i,j,k,l] <- Yha.bagr.dkl[m,1,i,j,k,l] * 
                             ^
NO COPY: R/BWI3_HR_Totholz.R:217:32: style: Commas should always have a space after.
              Yha.bagr.dkl[m,2,i,j,k,l] <- Yha.bagr.dkl[m,1,i,j,k,l] * 
                               ^
NO COPY: R/BWI3_HR_Totholz.R:217:34: style: Commas should always have a space after.
              Yha.bagr.dkl[m,2,i,j,k,l] <- Yha.bagr.dkl[m,1,i,j,k,l] * 
                                 ^
NO COPY: R/BWI3_HR_Totholz.R:217:36: style: Commas should always have a space after.
              Yha.bagr.dkl[m,2,i,j,k,l] <- Yha.bagr.dkl[m,1,i,j,k,l] * 
                                   ^
NO COPY: R/BWI3_HR_Totholz.R:217:38: style: Commas should always have a space after.
              Yha.bagr.dkl[m,2,i,j,k,l] <- Yha.bagr.dkl[m,1,i,j,k,l] * 
                                     ^
NO COPY: R/BWI3_HR_Totholz.R:217:44: style: Words within variable and function names should be separated by '_' rather than '.'.
              Yha.bagr.dkl[m,2,i,j,k,l] <- Yha.bagr.dkl[m,1,i,j,k,l] * 
                                           ^~~~~~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:217:59: style: Commas should always have a space after.
              Yha.bagr.dkl[m,2,i,j,k,l] <- Yha.bagr.dkl[m,1,i,j,k,l] * 
                                                          ^
NO COPY: R/BWI3_HR_Totholz.R:217:61: style: Commas should always have a space after.
              Yha.bagr.dkl[m,2,i,j,k,l] <- Yha.bagr.dkl[m,1,i,j,k,l] * 
                                                            ^
NO COPY: R/BWI3_HR_Totholz.R:217:63: style: Commas should always have a space after.
              Yha.bagr.dkl[m,2,i,j,k,l] <- Yha.bagr.dkl[m,1,i,j,k,l] * 
                                                              ^
NO COPY: R/BWI3_HR_Totholz.R:217:65: style: Commas should always have a space after.
              Yha.bagr.dkl[m,2,i,j,k,l] <- Yha.bagr.dkl[m,1,i,j,k,l] * 
                                                                ^
NO COPY: R/BWI3_HR_Totholz.R:217:67: style: Commas should always have a space after.
              Yha.bagr.dkl[m,2,i,j,k,l] <- Yha.bagr.dkl[m,1,i,j,k,l] * 
                                                                  ^
NO COPY: R/BWI3_HR_Totholz.R:217:71: style: Trailing whitespace is superfluous.
              Yha.bagr.dkl[m,2,i,j,k,l] <- Yha.bagr.dkl[m,1,i,j,k,l] * 
                                                                      ^
NO COPY: R/BWI3_HR_Totholz.R:218:27: style: Put spaces around all infix operators.
                  sqrt( nT/(nT-1)* tmp)
                         ~^~
NO COPY: R/BWI3_HR_Totholz.R:218:28: style: Place a space before left parenthesis, except in a function call.
                  sqrt( nT/(nT-1)* tmp)
                           ^
NO COPY: R/BWI3_HR_Totholz.R:218:31: style: Put spaces around all infix operators.
                  sqrt( nT/(nT-1)* tmp)
                             ~^~
NO COPY: R/BWI3_HR_Totholz.R:218:34: style: Put spaces around all infix operators.
                  sqrt( nT/(nT-1)* tmp)
                                ~^
NO COPY: R/BWI3_HR_Totholz.R:230:20: style: Commas should always have a space after.
  a <- regexpr("/",totholz$bemerk[1],fixed=T)
                   ^
NO COPY: R/BWI3_HR_Totholz.R:230:38: style: Commas should always have a space after.
  a <- regexpr("/",totholz$bemerk[1],fixed=T)
                                     ^
NO COPY: R/BWI3_HR_Totholz.R:230:43: style: Put spaces around all infix operators.
  a <- regexpr("/",totholz$bemerk[1],fixed=T)
                                         ~^~
NO COPY: R/BWI3_HR_Totholz.R:232:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  version.totholz.b  <- substr(as.character(totholz$bemerk[1]),a,b)
  ^~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:232:3: warning: local variable 'version.totholz.b' assigned but may not be used
  version.totholz.b  <- substr(as.character(totholz$bemerk[1]),a,b)
  ^~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:232:64: style: Commas should always have a space after.
  version.totholz.b  <- substr(as.character(totholz$bemerk[1]),a,b)
                                                               ^
NO COPY: R/BWI3_HR_Totholz.R:232:66: style: Commas should always have a space after.
  version.totholz.b  <- substr(as.character(totholz$bemerk[1]),a,b)
                                                                 ^
NO COPY: R/BWI3_HR_Totholz.R:233:20: style: Put spaces around all infix operators.
  Log <- list(Datum=Sys.time(),
                  ~^~
NO COPY: R/BWI3_HR_Totholz.R:234:24: style: Put spaces around all infix operators.
      Version.totholz.b=substr(as.character(totholz$bemerk[1]),a,b))
                      ~^~
NO COPY: R/BWI3_HR_Totholz.R:234:64: style: Commas should always have a space after.
      Version.totholz.b=substr(as.character(totholz$bemerk[1]),a,b))
                                                               ^
NO COPY: R/BWI3_HR_Totholz.R:234:66: style: Commas should always have a space after.
      Version.totholz.b=substr(as.character(totholz$bemerk[1]),a,b))
                                                                 ^
NO COPY: R/BWI3_HR_Totholz.R:236:18: style: Put spaces around all infix operators.
  return(list(Log=Log, Stratum=auswahl, nTE=n.te.s, HBF=T.hbf, se.HBF=se.T.hbf,
                ~^~
NO COPY: R/BWI3_HR_Totholz.R:236:31: style: Put spaces around all infix operators.
  return(list(Log=Log, Stratum=auswahl, nTE=n.te.s, HBF=T.hbf, se.HBF=se.T.hbf,
                             ~^~
NO COPY: R/BWI3_HR_Totholz.R:236:44: style: Put spaces around all infix operators.
  return(list(Log=Log, Stratum=auswahl, nTE=n.te.s, HBF=T.hbf, se.HBF=se.T.hbf,
                                          ~^~
NO COPY: R/BWI3_HR_Totholz.R:236:45: style: Words within variable and function names should be separated by '_' rather than '.'.
  return(list(Log=Log, Stratum=auswahl, nTE=n.te.s, HBF=T.hbf, se.HBF=se.T.hbf,
                                            ^~~~~~
NO COPY: R/BWI3_HR_Totholz.R:236:56: style: Put spaces around all infix operators.
  return(list(Log=Log, Stratum=auswahl, nTE=n.te.s, HBF=T.hbf, se.HBF=se.T.hbf,
                                                      ~^~
NO COPY: R/BWI3_HR_Totholz.R:236:70: style: Put spaces around all infix operators.
  return(list(Log=Log, Stratum=auswahl, nTE=n.te.s, HBF=T.hbf, se.HBF=se.T.hbf,
                                                                    ~^~
NO COPY: R/BWI3_HR_Totholz.R:236:71: style: Words within variable and function names should be separated by '_' rather than '.'.
  return(list(Log=Log, Stratum=auswahl, nTE=n.te.s, HBF=T.hbf, se.HBF=se.T.hbf,
                                                                      ^~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:237:25: style: Put spaces around all infix operators.
              BAGR.Liste=tbagr.list,
                       ~^~
NO COPY: R/BWI3_HR_Totholz.R:239:39: style: Put spaces around all infix operators.
              T.ThVN.Bagr.Tart.Tzg.Dkl=Y.bagr.dkl,
                                     ~^~
NO COPY: R/BWI3_HR_Totholz.R:239:40: style: Words within variable and function names should be separated by '_' rather than '.'.
              T.ThVN.Bagr.Tart.Tzg.Dkl=Y.bagr.dkl,
                                       ^~~~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:240:40: style: Put spaces around all infix operators.
              ThVN.ha.Bagr.Tart.Tzg.Dkl=Yha.bagr.dkl,
                                      ~^~
NO COPY: R/BWI3_HR_Totholz.R:240:41: style: Words within variable and function names should be separated by '_' rather than '.'.
              ThVN.ha.Bagr.Tart.Tzg.Dkl=Yha.bagr.dkl,
                                        ^~~~~~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:241:35: style: Put spaces around all infix operators.
              nT.Bagr.Tart.Tzg.Dkl=nT.bagr.dkl))
                                 ~^~
NO COPY: R/BWI3_HR_Totholz.R:241:36: style: Variable and function names should be all lowercase.
              nT.Bagr.Tart.Tzg.Dkl=nT.bagr.dkl))
                                   ^~~~~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:241:36: style: Words within variable and function names should be separated by '_' rather than '.'.
              nT.Bagr.Tart.Tzg.Dkl=nT.bagr.dkl))
                                   ^~~~~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:310:28: style: Commas should always have a space after.
          function(totholz,ecken,trakte,bwi,krit,tart.grupp,A,auswahl){
                           ^
NO COPY: R/BWI3_HR_Totholz.R:310:34: style: Commas should always have a space after.
          function(totholz,ecken,trakte,bwi,krit,tart.grupp,A,auswahl){
                                 ^
NO COPY: R/BWI3_HR_Totholz.R:310:41: style: Commas should always have a space after.
          function(totholz,ecken,trakte,bwi,krit,tart.grupp,A,auswahl){
                                        ^
NO COPY: R/BWI3_HR_Totholz.R:310:45: style: Commas should always have a space after.
          function(totholz,ecken,trakte,bwi,krit,tart.grupp,A,auswahl){
                                            ^
NO COPY: R/BWI3_HR_Totholz.R:310:50: style: Commas should always have a space after.
          function(totholz,ecken,trakte,bwi,krit,tart.grupp,A,auswahl){
                                                 ^
NO COPY: R/BWI3_HR_Totholz.R:310:61: style: Commas should always have a space after.
          function(totholz,ecken,trakte,bwi,krit,tart.grupp,A,auswahl){
                                                            ^
NO COPY: R/BWI3_HR_Totholz.R:310:63: style: Commas should always have a space after.
          function(totholz,ecken,trakte,bwi,krit,tart.grupp,A,auswahl){
                                                              ^
NO COPY: R/BWI3_HR_Totholz.R:314:76: style: Trailing whitespace is superfluous.
  attributes <- c("tnr", "enr", "nr", "tbagr", "tart", "tzg", "tbd", "tsd", 
                                                                           ^
NO COPY: R/BWI3_HR_Totholz.R:324:34: style: Commas should always have a space after.
  stratum <- stratum.fun(auswahl,ecken)
                                 ^
NO COPY: R/BWI3_HR_Totholz.R:328:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  n.te.s <- length(stratum[,1])
  ^~~~~~
NO COPY: R/BWI3_HR_Totholz.R:328:29: style: Commas should always have a space after.
  n.te.s <- length(stratum[,1])
                            ^
NO COPY: R/BWI3_HR_Totholz.R:329:31: style: Commas should always have a space after.
  y <- stats::aggregate(rep(1,length(stratum[,1])),by=list(stratum$tnr),sum)
                              ^
NO COPY: R/BWI3_HR_Totholz.R:329:47: style: Commas should always have a space after.
  y <- stats::aggregate(rep(1,length(stratum[,1])),by=list(stratum$tnr),sum)
                                              ^
NO COPY: R/BWI3_HR_Totholz.R:329:52: style: Commas should always have a space after.
  y <- stats::aggregate(rep(1,length(stratum[,1])),by=list(stratum$tnr),sum)
                                                   ^
NO COPY: R/BWI3_HR_Totholz.R:329:54: style: Put spaces around all infix operators.
  y <- stats::aggregate(rep(1,length(stratum[,1])),by=list(stratum$tnr),sum)
                                                    ~^~
NO COPY: R/BWI3_HR_Totholz.R:329:73: style: Commas should always have a space after.
  y <- stats::aggregate(rep(1,length(stratum[,1])),by=list(stratum$tnr),sum)
                                                                        ^
NO COPY: R/BWI3_HR_Totholz.R:330:23: style: Commas should always have a space after.
  names(y) <- c("tnr","y")
                      ^
NO COPY: R/BWI3_HR_Totholz.R:331:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  n.t.s <- length(y[,1])
  ^~~~~
NO COPY: R/BWI3_HR_Totholz.R:331:3: warning: local variable 'n.t.s' assigned but may not be used
  n.t.s <- length(y[,1])
  ^~~~~
NO COPY: R/BWI3_HR_Totholz.R:331:22: style: Commas should always have a space after.
  n.t.s <- length(y[,1])
                     ^
NO COPY: R/BWI3_HR_Totholz.R:333:16: style: Commas should always have a space after.
  y <- merge(y,trakte[TRUE, c("tnr", "m")],by=c("tnr"))
               ^
NO COPY: R/BWI3_HR_Totholz.R:333:44: style: Commas should always have a space after.
  y <- merge(y,trakte[TRUE, c("tnr", "m")],by=c("tnr"))
                                           ^
NO COPY: R/BWI3_HR_Totholz.R:333:46: style: Put spaces around all infix operators.
  y <- merge(y,trakte[TRUE, c("tnr", "m")],by=c("tnr"))
                                            ~^~
NO COPY: R/BWI3_HR_Totholz.R:337:24: style: Commas should always have a space after.
  nT <- length(trakte[,1])
                       ^
NO COPY: R/BWI3_HR_Totholz.R:339:4: style: Commented code should be removed.
  #HBFl. [ha]
   ^~~~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:340:20: style: Put spaces around all infix operators.
  T.hbf <- sum(y$y)/sum(x)*A
                  ~^~
NO COPY: R/BWI3_HR_Totholz.R:340:27: style: Put spaces around all infix operators.
  T.hbf <- sum(y$y)/sum(x)*A
                         ~^~
NO COPY: R/BWI3_HR_Totholz.R:341:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  var.T.hbf <-  nT/(nT-1)*T.hbf^2*(sum(y$y^2)/sum(y$y)^2+sum(x^2)/sum(x)^2
  ^~~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:341:19: style: Put spaces around all infix operators.
  var.T.hbf <-  nT/(nT-1)*T.hbf^2*(sum(y$y^2)/sum(y$y)^2+sum(x^2)/sum(x)^2
                 ~^~
NO COPY: R/BWI3_HR_Totholz.R:341:20: style: Place a space before left parenthesis, except in a function call.
  var.T.hbf <-  nT/(nT-1)*T.hbf^2*(sum(y$y^2)/sum(y$y)^2+sum(x^2)/sum(x)^2
                   ^
NO COPY: R/BWI3_HR_Totholz.R:341:23: style: Put spaces around all infix operators.
  var.T.hbf <-  nT/(nT-1)*T.hbf^2*(sum(y$y^2)/sum(y$y)^2+sum(x^2)/sum(x)^2
                     ~^~
NO COPY: R/BWI3_HR_Totholz.R:341:26: style: Put spaces around all infix operators.
  var.T.hbf <-  nT/(nT-1)*T.hbf^2*(sum(y$y^2)/sum(y$y)^2+sum(x^2)/sum(x)^2
                        ~^~
NO COPY: R/BWI3_HR_Totholz.R:341:32: style: Put spaces around all infix operators.
  var.T.hbf <-  nT/(nT-1)*T.hbf^2*(sum(y$y^2)/sum(y$y)^2+sum(x^2)/sum(x)^2
                              ~^~
NO COPY: R/BWI3_HR_Totholz.R:341:34: style: Put spaces around all infix operators.
  var.T.hbf <-  nT/(nT-1)*T.hbf^2*(sum(y$y^2)/sum(y$y)^2+sum(x^2)/sum(x)^2
                                ~^~
NO COPY: R/BWI3_HR_Totholz.R:341:35: style: Place a space before left parenthesis, except in a function call.
  var.T.hbf <-  nT/(nT-1)*T.hbf^2*(sum(y$y^2)/sum(y$y)^2+sum(x^2)/sum(x)^2
                                  ^
NO COPY: R/BWI3_HR_Totholz.R:341:43: style: Put spaces around all infix operators.
  var.T.hbf <-  nT/(nT-1)*T.hbf^2*(sum(y$y^2)/sum(y$y)^2+sum(x^2)/sum(x)^2
                                         ~^~
NO COPY: R/BWI3_HR_Totholz.R:341:46: style: Put spaces around all infix operators.
  var.T.hbf <-  nT/(nT-1)*T.hbf^2*(sum(y$y^2)/sum(y$y)^2+sum(x^2)/sum(x)^2
                                            ~^~
NO COPY: R/BWI3_HR_Totholz.R:341:55: style: Put spaces around all infix operators.
  var.T.hbf <-  nT/(nT-1)*T.hbf^2*(sum(y$y^2)/sum(y$y)^2+sum(x^2)/sum(x)^2
                                                     ~^~
NO COPY: R/BWI3_HR_Totholz.R:341:57: style: Put spaces around all infix operators.
  var.T.hbf <-  nT/(nT-1)*T.hbf^2*(sum(y$y^2)/sum(y$y)^2+sum(x^2)/sum(x)^2
                                                       ~^~
NO COPY: R/BWI3_HR_Totholz.R:341:63: style: Put spaces around all infix operators.
  var.T.hbf <-  nT/(nT-1)*T.hbf^2*(sum(y$y^2)/sum(y$y)^2+sum(x^2)/sum(x)^2
                                                             ~^~
NO COPY: R/BWI3_HR_Totholz.R:341:66: style: Put spaces around all infix operators.
  var.T.hbf <-  nT/(nT-1)*T.hbf^2*(sum(y$y^2)/sum(y$y)^2+sum(x^2)/sum(x)^2
                                                                ~^~
NO COPY: R/BWI3_HR_Totholz.R:341:73: style: Put spaces around all infix operators.
  var.T.hbf <-  nT/(nT-1)*T.hbf^2*(sum(y$y^2)/sum(y$y)^2+sum(x^2)/sum(x)^2
                                                                       ~^~
NO COPY: R/BWI3_HR_Totholz.R:342:23: style: Put spaces around all infix operators.
                      -2*sum(y$y*y$m)/sum(y$y)/sum(x))
                      ^~
NO COPY: R/BWI3_HR_Totholz.R:342:25: style: Put spaces around all infix operators.
                      -2*sum(y$y*y$m)/sum(y$y)/sum(x))
                       ~^~
NO COPY: R/BWI3_HR_Totholz.R:342:33: style: Put spaces around all infix operators.
                      -2*sum(y$y*y$m)/sum(y$y)/sum(x))
                               ~^~
NO COPY: R/BWI3_HR_Totholz.R:342:38: style: Put spaces around all infix operators.
                      -2*sum(y$y*y$m)/sum(y$y)/sum(x))
                                    ~^~
NO COPY: R/BWI3_HR_Totholz.R:342:47: style: Put spaces around all infix operators.
                      -2*sum(y$y*y$m)/sum(y$y)/sum(x))
                                             ~^~
NO COPY: R/BWI3_HR_Totholz.R:343:4: style: Commented code should be removed.
  #var.T.hbf^0.5
   ^~~~~~~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:344:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  se.T.hbf <- var.T.hbf^0.5 #Standardfehler
  ^~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:344:15: style: Words within variable and function names should be separated by '_' rather than '.'.
  se.T.hbf <- var.T.hbf^0.5 #Standardfehler
              ^~~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:344:24: style: Put spaces around all infix operators.
  se.T.hbf <- var.T.hbf^0.5 #Standardfehler
                      ~^~
NO COPY: R/BWI3_HR_Totholz.R:349:5: style: Place a space before left parenthesis, except in a function call.
  if(bwi==3) {
    ^
NO COPY: R/BWI3_HR_Totholz.R:349:9: style: Put spaces around all infix operators.
  if(bwi==3) {
       ~^~~
NO COPY: R/BWI3_HR_Totholz.R:351:32: style: Commas should always have a space after.
    names(totholz) <- sub("tl",names(totholz),replacement="lge")
                               ^
NO COPY: R/BWI3_HR_Totholz.R:351:47: style: Commas should always have a space after.
    names(totholz) <- sub("tl",names(totholz),replacement="lge")
                                              ^
NO COPY: R/BWI3_HR_Totholz.R:351:58: style: Put spaces around all infix operators.
    names(totholz) <- sub("tl",names(totholz),replacement="lge")
                                                        ~^~
NO COPY: R/BWI3_HR_Totholz.R:352:1: style: lines should not be more than 80 characters.
    #Mittendurchmesser wird bei Bruchst\u00fccken (mit 2 Durchmessern als mittlerer
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:354:37: style: Put spaces around all infix operators.
    totholz$dm <- ifelse(totholz$tsd>0&!is.na(totholz$tsd),
                                   ~^~
NO COPY: R/BWI3_HR_Totholz.R:354:39: style: Put spaces around all infix operators.
    totholz$dm <- ifelse(totholz$tsd>0&!is.na(totholz$tsd),
                                     ~^~
NO COPY: R/BWI3_HR_Totholz.R:355:24: style: Put spaces around all infix operators.
              round(200*sqrt(totholz$tvol/totholz$lge/pi),1),totholz$tbd)
                      ~^~
NO COPY: R/BWI3_HR_Totholz.R:355:42: style: Put spaces around all infix operators.
              round(200*sqrt(totholz$tvol/totholz$lge/pi),1),totholz$tbd)
                                        ~^~
NO COPY: R/BWI3_HR_Totholz.R:355:54: style: Put spaces around all infix operators.
              round(200*sqrt(totholz$tvol/totholz$lge/pi),1),totholz$tbd)
                                                    ~^~
NO COPY: R/BWI3_HR_Totholz.R:355:59: style: Commas should always have a space after.
              round(200*sqrt(totholz$tvol/totholz$lge/pi),1),totholz$tbd)
                                                          ^
NO COPY: R/BWI3_HR_Totholz.R:355:62: style: Commas should always have a space after.
              round(200*sqrt(totholz$tvol/totholz$lge/pi),1),totholz$tbd)
                                                             ^
NO COPY: R/BWI3_HR_Totholz.R:357:3: style: Opening curly braces should never go on their own line and should always be followed by a new line.
  {
  ^
NO COPY: R/BWI3_HR_Totholz.R:359:26: style: Commas should always have a space after.
    totholz$anz <- rep(1,length(totholz[,1]))
                         ^
NO COPY: R/BWI3_HR_Totholz.R:359:42: style: Commas should always have a space after.
    totholz$anz <- rep(1,length(totholz[,1]))
                                         ^
NO COPY: R/BWI3_HR_Totholz.R:364:26: style: Put spaces around all infix operators.
  krit.bwi2 <- ifelse(bwi==3 & krit==2,T,F)
                        ~^~~
NO COPY: R/BWI3_HR_Totholz.R:364:36: style: Put spaces around all infix operators.
  krit.bwi2 <- ifelse(bwi==3 & krit==2,T,F)
                                  ~^~~
NO COPY: R/BWI3_HR_Totholz.R:364:40: style: Commas should always have a space after.
  krit.bwi2 <- ifelse(bwi==3 & krit==2,T,F)
                                       ^
NO COPY: R/BWI3_HR_Totholz.R:364:42: style: Commas should always have a space after.
  krit.bwi2 <- ifelse(bwi==3 & krit==2,T,F)
                                         ^
NO COPY: R/BWI3_HR_Totholz.R:366:5: style: Place a space before left parenthesis, except in a function call.
  if(krit.bwi2)
    ^
NO COPY: R/BWI3_HR_Totholz.R:368:3: style: Opening curly braces should never go on their own line and should always be followed by a new line.
  {
  ^
NO COPY: R/BWI3_HR_Totholz.R:369:1: style: lines should not be more than 80 characters.
     totholz <- totholz[(totholz$tart!=4&totholz$tbd>=20)|(totholz$tart==4&(totholz$tbd>=60|totholz$lge>=0.5)), TRUE]
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:369:38: style: Put spaces around all infix operators.
     totholz <- totholz[(totholz$tart!=4&totholz$tbd>=20)|(totholz$tart==4&(totholz$tbd>=60|totholz$lge>=0.5)), TRUE]
                                    ~^~~
NO COPY: R/BWI3_HR_Totholz.R:369:41: style: Put spaces around all infix operators.
     totholz <- totholz[(totholz$tart!=4&totholz$tbd>=20)|(totholz$tart==4&(totholz$tbd>=60|totholz$lge>=0.5)), TRUE]
                                       ~^~
NO COPY: R/BWI3_HR_Totholz.R:369:53: style: Put spaces around all infix operators.
     totholz <- totholz[(totholz$tart!=4&totholz$tbd>=20)|(totholz$tart==4&(totholz$tbd>=60|totholz$lge>=0.5)), TRUE]
                                                   ~^~~
NO COPY: R/BWI3_HR_Totholz.R:369:58: style: Put spaces around all infix operators.
     totholz <- totholz[(totholz$tart!=4&totholz$tbd>=20)|(totholz$tart==4&(totholz$tbd>=60|totholz$lge>=0.5)), TRUE]
                                                        ~^~
NO COPY: R/BWI3_HR_Totholz.R:369:59: style: Place a space before left parenthesis, except in a function call.
     totholz <- totholz[(totholz$tart!=4&totholz$tbd>=20)|(totholz$tart==4&(totholz$tbd>=60|totholz$lge>=0.5)), TRUE]
                                                          ^
NO COPY: R/BWI3_HR_Totholz.R:369:72: style: Put spaces around all infix operators.
     totholz <- totholz[(totholz$tart!=4&totholz$tbd>=20)|(totholz$tart==4&(totholz$tbd>=60|totholz$lge>=0.5)), TRUE]
                                                                      ~^~~
NO COPY: R/BWI3_HR_Totholz.R:369:75: style: Put spaces around all infix operators.
     totholz <- totholz[(totholz$tart!=4&totholz$tbd>=20)|(totholz$tart==4&(totholz$tbd>=60|totholz$lge>=0.5)), TRUE]
                                                                         ~^~
NO COPY: R/BWI3_HR_Totholz.R:369:76: style: Place a space before left parenthesis, except in a function call.
     totholz <- totholz[(totholz$tart!=4&totholz$tbd>=20)|(totholz$tart==4&(totholz$tbd>=60|totholz$lge>=0.5)), TRUE]
                                                                           ^
NO COPY: R/BWI3_HR_Totholz.R:369:88: style: Put spaces around all infix operators.
     totholz <- totholz[(totholz$tart!=4&totholz$tbd>=20)|(totholz$tart==4&(totholz$tbd>=60|totholz$lge>=0.5)), TRUE]
                                                                                      ~^~~
NO COPY: R/BWI3_HR_Totholz.R:369:92: style: Put spaces around all infix operators.
     totholz <- totholz[(totholz$tart!=4&totholz$tbd>=20)|(totholz$tart==4&(totholz$tbd>=60|totholz$lge>=0.5)), TRUE]
                                                                                          ~^~
NO COPY: R/BWI3_HR_Totholz.R:369:104: style: Put spaces around all infix operators.
     totholz <- totholz[(totholz$tart!=4&totholz$tbd>=20)|(totholz$tart==4&(totholz$tbd>=60|totholz$lge>=0.5)), TRUE]
                                                                                                      ~^~~
NO COPY: R/BWI3_HR_Totholz.R:373:1: style: lines should not be more than 80 characters.
  totholz.s <- merge(totholz[TRUE, c("tnr", "enr", "nr", "tart", "tvol", "dm", "lge", "anz", "thf")],
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:374:52: style: Commas should always have a space after.
                    stratum[TRUE, c("tnr", "enr")],by=c("tnr","enr"),all.y=T)
                                                   ^
NO COPY: R/BWI3_HR_Totholz.R:374:54: style: Put spaces around all infix operators.
                    stratum[TRUE, c("tnr", "enr")],by=c("tnr","enr"),all.y=T)
                                                    ~^~
NO COPY: R/BWI3_HR_Totholz.R:374:63: style: Commas should always have a space after.
                    stratum[TRUE, c("tnr", "enr")],by=c("tnr","enr"),all.y=T)
                                                              ^
NO COPY: R/BWI3_HR_Totholz.R:374:70: style: Commas should always have a space after.
                    stratum[TRUE, c("tnr", "enr")],by=c("tnr","enr"),all.y=T)
                                                                     ^
NO COPY: R/BWI3_HR_Totholz.R:374:75: style: Put spaces around all infix operators.
                    stratum[TRUE, c("tnr", "enr")],by=c("tnr","enr"),all.y=T)
                                                                         ~^~
NO COPY: R/BWI3_HR_Totholz.R:375:5: style: Place a space before left parenthesis, except in a function call.
  if(is.na(tart.grupp[[1]][1]))
    ^
NO COPY: R/BWI3_HR_Totholz.R:376:3: style: Opening curly braces should never go on their own line and should always be followed by a new line.
  {
  ^
NO COPY: R/BWI3_HR_Totholz.R:379:15: style: Use <-, not =, for assignment.
    tart.grupp=list()
              ^
NO COPY: R/BWI3_HR_Totholz.R:379:15: style: Put spaces around all infix operators.
    tart.grupp=list()
             ~^~
NO COPY: R/BWI3_HR_Totholz.R:381:24: style: Opening curly braces should never go on their own line and should always be followed by a new line.
    for (i in 1:tart.k){tart.grupp[[i]]=tart.lab[i]}
                       ^
NO COPY: R/BWI3_HR_Totholz.R:381:40: style: Use <-, not =, for assignment.
    for (i in 1:tart.k){tart.grupp[[i]]=tart.lab[i]}
                                       ^
NO COPY: R/BWI3_HR_Totholz.R:381:40: style: Put spaces around all infix operators.
    for (i in 1:tart.k){tart.grupp[[i]]=tart.lab[i]}
                                      ~^~
NO COPY: R/BWI3_HR_Totholz.R:381:52: style: Closing curly-braces should always be on their own line, unless it's followed by an else.
    for (i in 1:tart.k){tart.grupp[[i]]=tart.lab[i]}
                                                   ^
NO COPY: R/BWI3_HR_Totholz.R:383:3: style: Opening curly braces should never go on their own line and should always be followed by a new line.
  {
  ^
NO COPY: R/BWI3_HR_Totholz.R:387:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: R/BWI3_HR_Totholz.R:390:1: style: lines should not be more than 80 characters.
  #F\u00fcr diese 2 "Gr\u00f6\u00dfen" werden jeweils der Gesamtwert ("Total") und der Stichproben-
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:391:1: style: lines should not be more than 80 characters.
  #fehler (SE) berechnet, und zwar jeweils f\u00fcr die 3 Baumartengruppen <tbagr>,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:394:25: style: Put spaces around all infix operators.
  Y.tart    <- array(dim=c(2,2,tart.k))
                       ~^~
NO COPY: R/BWI3_HR_Totholz.R:394:30: style: Commas should always have a space after.
  Y.tart    <- array(dim=c(2,2,tart.k))
                             ^
NO COPY: R/BWI3_HR_Totholz.R:394:32: style: Commas should always have a space after.
  Y.tart    <- array(dim=c(2,2,tart.k))
                               ^
NO COPY: R/BWI3_HR_Totholz.R:395:3: style: Variable and function names should be all lowercase.
  nT.tart   <- array(dim=c(tart.k,1))
  ^~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:395:25: style: Put spaces around all infix operators.
  nT.tart   <- array(dim=c(tart.k,1))
                       ~^~
NO COPY: R/BWI3_HR_Totholz.R:395:35: style: Commas should always have a space after.
  nT.tart   <- array(dim=c(tart.k,1))
                                  ^
NO COPY: R/BWI3_HR_Totholz.R:397:25: style: Put spaces around all infix operators.
  Yha.tart  <- array(dim=c(2,2,tart.k))
                       ~^~
NO COPY: R/BWI3_HR_Totholz.R:397:30: style: Commas should always have a space after.
  Yha.tart  <- array(dim=c(2,2,tart.k))
                             ^
NO COPY: R/BWI3_HR_Totholz.R:397:32: style: Commas should always have a space after.
  Yha.tart  <- array(dim=c(2,2,tart.k))
                               ^
NO COPY: R/BWI3_HR_Totholz.R:401:3: style: Opening curly braces should never go on their own line and should always be followed by a new line.
  {
  ^
NO COPY: R/BWI3_HR_Totholz.R:402:45: style: Put spaces around all infix operators.
    totholz.tart <- totholz.s[totholz.s$tart%in%tart.grupp[[i]],
                                           ~^~~~~
NO COPY: R/BWI3_HR_Totholz.R:403:1: style: lines should not be more than 80 characters.
                        c("tnr", "enr", "tart", "dm", "lge", "tvol", "anz", "thf")]
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:404:30: style: Commas should always have a space after.
    if (length(totholz.tart[,1])== 0)
                             ^
NO COPY: R/BWI3_HR_Totholz.R:404:33: style: Put spaces around all infix operators.
    if (length(totholz.tart[,1])== 0)
                               ~^
NO COPY: R/BWI3_HR_Totholz.R:405:5: style: Opening curly braces should never go on their own line and should always be followed by a new line.
    {
    ^
NO COPY: R/BWI3_HR_Totholz.R:406:18: style: Commas should always have a space after.
      Y.tart[1:2,1,i]   <- rep(0,2)  #Zielgr\u00f6\u00dfe Total
                 ^
NO COPY: R/BWI3_HR_Totholz.R:406:20: style: Commas should always have a space after.
      Y.tart[1:2,1,i]   <- rep(0,2)  #Zielgr\u00f6\u00dfe Total
                   ^
NO COPY: R/BWI3_HR_Totholz.R:406:34: style: Commas should always have a space after.
      Y.tart[1:2,1,i]   <- rep(0,2)  #Zielgr\u00f6\u00dfe Total
                                 ^
NO COPY: R/BWI3_HR_Totholz.R:407:18: style: Commas should always have a space after.
      Y.tart[1:2,2,i]   <- rep(0,2)  #Stichprobenfehler (SE)
                 ^
NO COPY: R/BWI3_HR_Totholz.R:407:20: style: Commas should always have a space after.
      Y.tart[1:2,2,i]   <- rep(0,2)  #Stichprobenfehler (SE)
                   ^
NO COPY: R/BWI3_HR_Totholz.R:407:34: style: Commas should always have a space after.
      Y.tart[1:2,2,i]   <- rep(0,2)  #Stichprobenfehler (SE)
                                 ^
NO COPY: R/BWI3_HR_Totholz.R:408:20: style: Commas should always have a space after.
      Yha.tart[1:2,1,i] <- rep(0,2)
                   ^
NO COPY: R/BWI3_HR_Totholz.R:408:22: style: Commas should always have a space after.
      Yha.tart[1:2,1,i] <- rep(0,2)
                     ^
NO COPY: R/BWI3_HR_Totholz.R:408:34: style: Commas should always have a space after.
      Yha.tart[1:2,1,i] <- rep(0,2)
                                 ^
NO COPY: R/BWI3_HR_Totholz.R:409:20: style: Commas should always have a space after.
      Yha.tart[1:2,1,i] <- rep(0,2)
                   ^
NO COPY: R/BWI3_HR_Totholz.R:409:22: style: Commas should always have a space after.
      Yha.tart[1:2,1,i] <- rep(0,2)
                     ^
NO COPY: R/BWI3_HR_Totholz.R:409:34: style: Commas should always have a space after.
      Yha.tart[1:2,1,i] <- rep(0,2)
                                 ^
NO COPY: R/BWI3_HR_Totholz.R:410:7: style: Variable and function names should be all lowercase.
      nT.tart[i,]    <- 0  #n PSU (Trakte)
      ^~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:410:17: style: Commas should always have a space after.
      nT.tart[i,]    <- 0  #n PSU (Trakte)
                ^
NO COPY: R/BWI3_HR_Totholz.R:412:5: style: Opening curly braces should never go on their own line and should always be followed by a new line.
    {
    ^
NO COPY: R/BWI3_HR_Totholz.R:415:1: style: lines should not be more than 80 characters.
      xy <- stats::aggregate(totholz.tart$tvol*totholz.tart$thf*totholz.tart$anz,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:415:47: style: Put spaces around all infix operators.
      xy <- stats::aggregate(totholz.tart$tvol*totholz.tart$thf*totholz.tart$anz,
                                             ~^~
NO COPY: R/BWI3_HR_Totholz.R:415:64: style: Put spaces around all infix operators.
      xy <- stats::aggregate(totholz.tart$tvol*totholz.tart$thf*totholz.tart$anz,
                                                              ~^~
NO COPY: R/BWI3_HR_Totholz.R:416:17: style: Put spaces around all infix operators.
              by=list(totholz.tart$tnr),sum)
               ~^~
NO COPY: R/BWI3_HR_Totholz.R:416:41: style: Commas should always have a space after.
              by=list(totholz.tart$tnr),sum)
                                        ^
NO COPY: R/BWI3_HR_Totholz.R:417:28: style: Commas should always have a space after.
      names(xy) <- c("tnr","v")
                           ^
NO COPY: R/BWI3_HR_Totholz.R:419:22: style: Commas should always have a space after.
      xy <- cbind(xy,stats::aggregate(totholz.tart$thf*totholz.tart$anz,
                     ^
NO COPY: R/BWI3_HR_Totholz.R:419:55: style: Put spaces around all infix operators.
      xy <- cbind(xy,stats::aggregate(totholz.tart$thf*totholz.tart$anz,
                                                     ~^~
NO COPY: R/BWI3_HR_Totholz.R:420:41: style: Put spaces around all infix operators.
                                      by=list(totholz.tart$tnr),sum)$x)
                                       ~^~
NO COPY: R/BWI3_HR_Totholz.R:420:65: style: Commas should always have a space after.
                                      by=list(totholz.tart$tnr),sum)$x)
                                                                ^
NO COPY: R/BWI3_HR_Totholz.R:424:22: style: Commas should always have a space after.
      xy <- merge(xy,y,by=c("tnr"),all.x=T)
                     ^
NO COPY: R/BWI3_HR_Totholz.R:424:24: style: Commas should always have a space after.
      xy <- merge(xy,y,by=c("tnr"),all.x=T)
                       ^
NO COPY: R/BWI3_HR_Totholz.R:424:26: style: Put spaces around all infix operators.
      xy <- merge(xy,y,by=c("tnr"),all.x=T)
                        ~^~
NO COPY: R/BWI3_HR_Totholz.R:424:36: style: Commas should always have a space after.
      xy <- merge(xy,y,by=c("tnr"),all.x=T)
                                   ^
NO COPY: R/BWI3_HR_Totholz.R:424:41: style: Put spaces around all infix operators.
      xy <- merge(xy,y,by=c("tnr"),all.x=T)
                                       ~^~
NO COPY: R/BWI3_HR_Totholz.R:428:7: style: Variable and function names should be all lowercase.
      nT.tart[i,] <- length(xy[,1])
      ^~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:428:17: style: Commas should always have a space after.
      nT.tart[i,] <- length(xy[,1])
                ^
NO COPY: R/BWI3_HR_Totholz.R:428:33: style: Commas should always have a space after.
      nT.tart[i,] <- length(xy[,1])
                                ^
NO COPY: R/BWI3_HR_Totholz.R:430:7: style: Opening curly braces should never go on their own line and should always be followed by a new line.
      {
      ^
NO COPY: R/BWI3_HR_Totholz.R:433:18: style: Commas should always have a space after.
        Y.tart[j,1,i] <-  sum(xy[,(1+j)])/sum(x)*A
                 ^
NO COPY: R/BWI3_HR_Totholz.R:433:20: style: Commas should always have a space after.
        Y.tart[j,1,i] <-  sum(xy[,(1+j)])/sum(x)*A
                   ^
NO COPY: R/BWI3_HR_Totholz.R:433:35: style: Commas should always have a space after.
        Y.tart[j,1,i] <-  sum(xy[,(1+j)])/sum(x)*A
                                  ^
NO COPY: R/BWI3_HR_Totholz.R:433:35: style: Place a space before left parenthesis, except in a function call.
        Y.tart[j,1,i] <-  sum(xy[,(1+j)])/sum(x)*A
                                  ^
NO COPY: R/BWI3_HR_Totholz.R:433:37: style: Put spaces around all infix operators.
        Y.tart[j,1,i] <-  sum(xy[,(1+j)])/sum(x)*A
                                   ~^~
NO COPY: R/BWI3_HR_Totholz.R:433:42: style: Put spaces around all infix operators.
        Y.tart[j,1,i] <-  sum(xy[,(1+j)])/sum(x)*A
                                        ~^~
NO COPY: R/BWI3_HR_Totholz.R:433:49: style: Put spaces around all infix operators.
        Y.tart[j,1,i] <-  sum(xy[,(1+j)])/sum(x)*A
                                               ~^~
NO COPY: R/BWI3_HR_Totholz.R:435:18: style: Commas should always have a space after.
        Y.tart[j,2,i] <- Y.tart[j,1,i]*sqrt(
                 ^
NO COPY: R/BWI3_HR_Totholz.R:435:20: style: Commas should always have a space after.
        Y.tart[j,2,i] <- Y.tart[j,1,i]*sqrt(
                   ^
NO COPY: R/BWI3_HR_Totholz.R:435:35: style: Commas should always have a space after.
        Y.tart[j,2,i] <- Y.tart[j,1,i]*sqrt(
                                  ^
NO COPY: R/BWI3_HR_Totholz.R:435:37: style: Commas should always have a space after.
        Y.tart[j,2,i] <- Y.tart[j,1,i]*sqrt(
                                    ^
NO COPY: R/BWI3_HR_Totholz.R:435:39: style: Put spaces around all infix operators.
        Y.tart[j,2,i] <- Y.tart[j,1,i]*sqrt(
                                     ~^~
NO COPY: R/BWI3_HR_Totholz.R:436:13: style: Put spaces around all infix operators.
          nT/(nT-1)*(sum(xy[,(1+j)]^2)/sum(xy[,(1+j)])^2+sum(x^2)/sum(x)^2
           ~^~
NO COPY: R/BWI3_HR_Totholz.R:436:14: style: Place a space before left parenthesis, except in a function call.
          nT/(nT-1)*(sum(xy[,(1+j)]^2)/sum(xy[,(1+j)])^2+sum(x^2)/sum(x)^2
             ^
NO COPY: R/BWI3_HR_Totholz.R:436:17: style: Put spaces around all infix operators.
          nT/(nT-1)*(sum(xy[,(1+j)]^2)/sum(xy[,(1+j)])^2+sum(x^2)/sum(x)^2
               ~^~
NO COPY: R/BWI3_HR_Totholz.R:436:20: style: Put spaces around all infix operators.
          nT/(nT-1)*(sum(xy[,(1+j)]^2)/sum(xy[,(1+j)])^2+sum(x^2)/sum(x)^2
                  ~^~
NO COPY: R/BWI3_HR_Totholz.R:436:21: style: Place a space before left parenthesis, except in a function call.
          nT/(nT-1)*(sum(xy[,(1+j)]^2)/sum(xy[,(1+j)])^2+sum(x^2)/sum(x)^2
                    ^
NO COPY: R/BWI3_HR_Totholz.R:436:30: style: Commas should always have a space after.
          nT/(nT-1)*(sum(xy[,(1+j)]^2)/sum(xy[,(1+j)])^2+sum(x^2)/sum(x)^2
                             ^
NO COPY: R/BWI3_HR_Totholz.R:436:30: style: Place a space before left parenthesis, except in a function call.
          nT/(nT-1)*(sum(xy[,(1+j)]^2)/sum(xy[,(1+j)])^2+sum(x^2)/sum(x)^2
                             ^
NO COPY: R/BWI3_HR_Totholz.R:436:32: style: Put spaces around all infix operators.
          nT/(nT-1)*(sum(xy[,(1+j)]^2)/sum(xy[,(1+j)])^2+sum(x^2)/sum(x)^2
                              ~^~
NO COPY: R/BWI3_HR_Totholz.R:436:36: style: Put spaces around all infix operators.
          nT/(nT-1)*(sum(xy[,(1+j)]^2)/sum(xy[,(1+j)])^2+sum(x^2)/sum(x)^2
                                  ~^~
NO COPY: R/BWI3_HR_Totholz.R:436:39: style: Put spaces around all infix operators.
          nT/(nT-1)*(sum(xy[,(1+j)]^2)/sum(xy[,(1+j)])^2+sum(x^2)/sum(x)^2
                                     ~^~
NO COPY: R/BWI3_HR_Totholz.R:436:48: style: Commas should always have a space after.
          nT/(nT-1)*(sum(xy[,(1+j)]^2)/sum(xy[,(1+j)])^2+sum(x^2)/sum(x)^2
                                               ^
NO COPY: R/BWI3_HR_Totholz.R:436:48: style: Place a space before left parenthesis, except in a function call.
          nT/(nT-1)*(sum(xy[,(1+j)]^2)/sum(xy[,(1+j)])^2+sum(x^2)/sum(x)^2
                                               ^
NO COPY: R/BWI3_HR_Totholz.R:436:50: style: Put spaces around all infix operators.
          nT/(nT-1)*(sum(xy[,(1+j)]^2)/sum(xy[,(1+j)])^2+sum(x^2)/sum(x)^2
                                                ~^~
NO COPY: R/BWI3_HR_Totholz.R:436:55: style: Put spaces around all infix operators.
          nT/(nT-1)*(sum(xy[,(1+j)]^2)/sum(xy[,(1+j)])^2+sum(x^2)/sum(x)^2
                                                     ~^~
NO COPY: R/BWI3_HR_Totholz.R:436:57: style: Put spaces around all infix operators.
          nT/(nT-1)*(sum(xy[,(1+j)]^2)/sum(xy[,(1+j)])^2+sum(x^2)/sum(x)^2
                                                       ~^~
NO COPY: R/BWI3_HR_Totholz.R:436:63: style: Put spaces around all infix operators.
          nT/(nT-1)*(sum(xy[,(1+j)]^2)/sum(xy[,(1+j)])^2+sum(x^2)/sum(x)^2
                                                             ~^~
NO COPY: R/BWI3_HR_Totholz.R:436:66: style: Put spaces around all infix operators.
          nT/(nT-1)*(sum(xy[,(1+j)]^2)/sum(xy[,(1+j)])^2+sum(x^2)/sum(x)^2
                                                                ~^~
NO COPY: R/BWI3_HR_Totholz.R:436:73: style: Put spaces around all infix operators.
          nT/(nT-1)*(sum(xy[,(1+j)]^2)/sum(xy[,(1+j)])^2+sum(x^2)/sum(x)^2
                                                                       ~^~
NO COPY: R/BWI3_HR_Totholz.R:437:33: style: Put spaces around all infix operators.
                                -2*sum(xy[,(1+j)]*xy$m)/sum(xy[,(1+j)])/sum(x)))
                                ^~
NO COPY: R/BWI3_HR_Totholz.R:437:35: style: Put spaces around all infix operators.
                                -2*sum(xy[,(1+j)]*xy$m)/sum(xy[,(1+j)])/sum(x)))
                                 ~^~
NO COPY: R/BWI3_HR_Totholz.R:437:44: style: Commas should always have a space after.
                                -2*sum(xy[,(1+j)]*xy$m)/sum(xy[,(1+j)])/sum(x)))
                                           ^
NO COPY: R/BWI3_HR_Totholz.R:437:44: style: Place a space before left parenthesis, except in a function call.
                                -2*sum(xy[,(1+j)]*xy$m)/sum(xy[,(1+j)])/sum(x)))
                                           ^
NO COPY: R/BWI3_HR_Totholz.R:437:46: style: Put spaces around all infix operators.
                                -2*sum(xy[,(1+j)]*xy$m)/sum(xy[,(1+j)])/sum(x)))
                                            ~^~
NO COPY: R/BWI3_HR_Totholz.R:437:50: style: Put spaces around all infix operators.
                                -2*sum(xy[,(1+j)]*xy$m)/sum(xy[,(1+j)])/sum(x)))
                                                ~^~
NO COPY: R/BWI3_HR_Totholz.R:437:56: style: Put spaces around all infix operators.
                                -2*sum(xy[,(1+j)]*xy$m)/sum(xy[,(1+j)])/sum(x)))
                                                      ~^~
NO COPY: R/BWI3_HR_Totholz.R:437:65: style: Commas should always have a space after.
                                -2*sum(xy[,(1+j)]*xy$m)/sum(xy[,(1+j)])/sum(x)))
                                                                ^
NO COPY: R/BWI3_HR_Totholz.R:437:65: style: Place a space before left parenthesis, except in a function call.
                                -2*sum(xy[,(1+j)]*xy$m)/sum(xy[,(1+j)])/sum(x)))
                                                                ^
NO COPY: R/BWI3_HR_Totholz.R:437:67: style: Put spaces around all infix operators.
                                -2*sum(xy[,(1+j)]*xy$m)/sum(xy[,(1+j)])/sum(x)))
                                                                 ~^~
NO COPY: R/BWI3_HR_Totholz.R:437:72: style: Put spaces around all infix operators.
                                -2*sum(xy[,(1+j)]*xy$m)/sum(xy[,(1+j)])/sum(x)))
                                                                      ~^~
NO COPY: R/BWI3_HR_Totholz.R:441:20: style: Commas should always have a space after.
        Yha.tart[j,1,i] <- Y.tart[j,1,i]/T.hbf
                   ^
NO COPY: R/BWI3_HR_Totholz.R:441:22: style: Commas should always have a space after.
        Yha.tart[j,1,i] <- Y.tart[j,1,i]/T.hbf
                     ^
NO COPY: R/BWI3_HR_Totholz.R:441:37: style: Commas should always have a space after.
        Yha.tart[j,1,i] <- Y.tart[j,1,i]/T.hbf
                                    ^
NO COPY: R/BWI3_HR_Totholz.R:441:39: style: Commas should always have a space after.
        Yha.tart[j,1,i] <- Y.tart[j,1,i]/T.hbf
                                      ^
NO COPY: R/BWI3_HR_Totholz.R:441:41: style: Put spaces around all infix operators.
        Yha.tart[j,1,i] <- Y.tart[j,1,i]/T.hbf
                                       ~^~
NO COPY: R/BWI3_HR_Totholz.R:442:20: style: Commas should always have a space after.
        Yha.tart[j,2,i] <- Yha.tart[j,1,i]*sqrt(
                   ^
NO COPY: R/BWI3_HR_Totholz.R:442:22: style: Commas should always have a space after.
        Yha.tart[j,2,i] <- Yha.tart[j,1,i]*sqrt(
                     ^
NO COPY: R/BWI3_HR_Totholz.R:442:39: style: Commas should always have a space after.
        Yha.tart[j,2,i] <- Yha.tart[j,1,i]*sqrt(
                                      ^
NO COPY: R/BWI3_HR_Totholz.R:442:41: style: Commas should always have a space after.
        Yha.tart[j,2,i] <- Yha.tart[j,1,i]*sqrt(
                                        ^
NO COPY: R/BWI3_HR_Totholz.R:442:43: style: Put spaces around all infix operators.
        Yha.tart[j,2,i] <- Yha.tart[j,1,i]*sqrt(
                                         ~^~
NO COPY: R/BWI3_HR_Totholz.R:443:13: style: Put spaces around all infix operators.
          nT/(nT-1)*(sum(xy[,(1+j)]^2)/sum(xy[,(1+j)])^2+sum(xy$x^2)/sum(xy$x)^2
           ~^~
NO COPY: R/BWI3_HR_Totholz.R:443:14: style: Place a space before left parenthesis, except in a function call.
          nT/(nT-1)*(sum(xy[,(1+j)]^2)/sum(xy[,(1+j)])^2+sum(xy$x^2)/sum(xy$x)^2
             ^
NO COPY: R/BWI3_HR_Totholz.R:443:17: style: Put spaces around all infix operators.
          nT/(nT-1)*(sum(xy[,(1+j)]^2)/sum(xy[,(1+j)])^2+sum(xy$x^2)/sum(xy$x)^2
               ~^~
NO COPY: R/BWI3_HR_Totholz.R:443:20: style: Put spaces around all infix operators.
          nT/(nT-1)*(sum(xy[,(1+j)]^2)/sum(xy[,(1+j)])^2+sum(xy$x^2)/sum(xy$x)^2
                  ~^~
NO COPY: R/BWI3_HR_Totholz.R:443:21: style: Place a space before left parenthesis, except in a function call.
          nT/(nT-1)*(sum(xy[,(1+j)]^2)/sum(xy[,(1+j)])^2+sum(xy$x^2)/sum(xy$x)^2
                    ^
NO COPY: R/BWI3_HR_Totholz.R:443:30: style: Commas should always have a space after.
          nT/(nT-1)*(sum(xy[,(1+j)]^2)/sum(xy[,(1+j)])^2+sum(xy$x^2)/sum(xy$x)^2
                             ^
NO COPY: R/BWI3_HR_Totholz.R:443:30: style: Place a space before left parenthesis, except in a function call.
          nT/(nT-1)*(sum(xy[,(1+j)]^2)/sum(xy[,(1+j)])^2+sum(xy$x^2)/sum(xy$x)^2
                             ^
NO COPY: R/BWI3_HR_Totholz.R:443:32: style: Put spaces around all infix operators.
          nT/(nT-1)*(sum(xy[,(1+j)]^2)/sum(xy[,(1+j)])^2+sum(xy$x^2)/sum(xy$x)^2
                              ~^~
NO COPY: R/BWI3_HR_Totholz.R:443:36: style: Put spaces around all infix operators.
          nT/(nT-1)*(sum(xy[,(1+j)]^2)/sum(xy[,(1+j)])^2+sum(xy$x^2)/sum(xy$x)^2
                                  ~^~
NO COPY: R/BWI3_HR_Totholz.R:443:39: style: Put spaces around all infix operators.
          nT/(nT-1)*(sum(xy[,(1+j)]^2)/sum(xy[,(1+j)])^2+sum(xy$x^2)/sum(xy$x)^2
                                     ~^~
NO COPY: R/BWI3_HR_Totholz.R:443:48: style: Commas should always have a space after.
          nT/(nT-1)*(sum(xy[,(1+j)]^2)/sum(xy[,(1+j)])^2+sum(xy$x^2)/sum(xy$x)^2
                                               ^
NO COPY: R/BWI3_HR_Totholz.R:443:48: style: Place a space before left parenthesis, except in a function call.
          nT/(nT-1)*(sum(xy[,(1+j)]^2)/sum(xy[,(1+j)])^2+sum(xy$x^2)/sum(xy$x)^2
                                               ^
NO COPY: R/BWI3_HR_Totholz.R:443:50: style: Put spaces around all infix operators.
          nT/(nT-1)*(sum(xy[,(1+j)]^2)/sum(xy[,(1+j)])^2+sum(xy$x^2)/sum(xy$x)^2
                                                ~^~
NO COPY: R/BWI3_HR_Totholz.R:443:55: style: Put spaces around all infix operators.
          nT/(nT-1)*(sum(xy[,(1+j)]^2)/sum(xy[,(1+j)])^2+sum(xy$x^2)/sum(xy$x)^2
                                                     ~^~
NO COPY: R/BWI3_HR_Totholz.R:443:57: style: Put spaces around all infix operators.
          nT/(nT-1)*(sum(xy[,(1+j)]^2)/sum(xy[,(1+j)])^2+sum(xy$x^2)/sum(xy$x)^2
                                                       ~^~
NO COPY: R/BWI3_HR_Totholz.R:443:66: style: Put spaces around all infix operators.
          nT/(nT-1)*(sum(xy[,(1+j)]^2)/sum(xy[,(1+j)])^2+sum(xy$x^2)/sum(xy$x)^2
                                                                ~^~
NO COPY: R/BWI3_HR_Totholz.R:443:69: style: Put spaces around all infix operators.
          nT/(nT-1)*(sum(xy[,(1+j)]^2)/sum(xy[,(1+j)])^2+sum(xy$x^2)/sum(xy$x)^2
                                                                   ~^~
NO COPY: R/BWI3_HR_Totholz.R:443:79: style: Put spaces around all infix operators.
          nT/(nT-1)*(sum(xy[,(1+j)]^2)/sum(xy[,(1+j)])^2+sum(xy$x^2)/sum(xy$x)^2
                                                                             ~^~
NO COPY: R/BWI3_HR_Totholz.R:444:30: style: Put spaces around all infix operators.
                             -2*sum(xy[,(1+j)]*xy$x)/sum(xy[,(1+j)])/sum(xy$x)))
                             ^~
NO COPY: R/BWI3_HR_Totholz.R:444:32: style: Put spaces around all infix operators.
                             -2*sum(xy[,(1+j)]*xy$x)/sum(xy[,(1+j)])/sum(xy$x)))
                              ~^~
NO COPY: R/BWI3_HR_Totholz.R:444:41: style: Commas should always have a space after.
                             -2*sum(xy[,(1+j)]*xy$x)/sum(xy[,(1+j)])/sum(xy$x)))
                                        ^
NO COPY: R/BWI3_HR_Totholz.R:444:41: style: Place a space before left parenthesis, except in a function call.
                             -2*sum(xy[,(1+j)]*xy$x)/sum(xy[,(1+j)])/sum(xy$x)))
                                        ^
NO COPY: R/BWI3_HR_Totholz.R:444:43: style: Put spaces around all infix operators.
                             -2*sum(xy[,(1+j)]*xy$x)/sum(xy[,(1+j)])/sum(xy$x)))
                                         ~^~
NO COPY: R/BWI3_HR_Totholz.R:444:47: style: Put spaces around all infix operators.
                             -2*sum(xy[,(1+j)]*xy$x)/sum(xy[,(1+j)])/sum(xy$x)))
                                             ~^~
NO COPY: R/BWI3_HR_Totholz.R:444:53: style: Put spaces around all infix operators.
                             -2*sum(xy[,(1+j)]*xy$x)/sum(xy[,(1+j)])/sum(xy$x)))
                                                   ~^~
NO COPY: R/BWI3_HR_Totholz.R:444:62: style: Commas should always have a space after.
                             -2*sum(xy[,(1+j)]*xy$x)/sum(xy[,(1+j)])/sum(xy$x)))
                                                             ^
NO COPY: R/BWI3_HR_Totholz.R:444:62: style: Place a space before left parenthesis, except in a function call.
                             -2*sum(xy[,(1+j)]*xy$x)/sum(xy[,(1+j)])/sum(xy$x)))
                                                             ^
NO COPY: R/BWI3_HR_Totholz.R:444:64: style: Put spaces around all infix operators.
                             -2*sum(xy[,(1+j)]*xy$x)/sum(xy[,(1+j)])/sum(xy$x)))
                                                              ~^~
NO COPY: R/BWI3_HR_Totholz.R:444:69: style: Put spaces around all infix operators.
                             -2*sum(xy[,(1+j)]*xy$x)/sum(xy[,(1+j)])/sum(xy$x)))
                                                                   ~^~
NO COPY: R/BWI3_HR_Totholz.R:453:20: style: Commas should always have a space after.
  a <- regexpr("/",totholz$bemerk[1],fixed=T)
                   ^
NO COPY: R/BWI3_HR_Totholz.R:453:38: style: Commas should always have a space after.
  a <- regexpr("/",totholz$bemerk[1],fixed=T)
                                     ^
NO COPY: R/BWI3_HR_Totholz.R:453:43: style: Put spaces around all infix operators.
  a <- regexpr("/",totholz$bemerk[1],fixed=T)
                                         ~^~
NO COPY: R/BWI3_HR_Totholz.R:455:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  version.totholz.b  <- substr(as.character(totholz$bemerk[1]),a,b)
  ^~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:455:3: warning: local variable 'version.totholz.b' assigned but may not be used
  version.totholz.b  <- substr(as.character(totholz$bemerk[1]),a,b)
  ^~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:455:64: style: Commas should always have a space after.
  version.totholz.b  <- substr(as.character(totholz$bemerk[1]),a,b)
                                                               ^
NO COPY: R/BWI3_HR_Totholz.R:455:66: style: Commas should always have a space after.
  version.totholz.b  <- substr(as.character(totholz$bemerk[1]),a,b)
                                                                 ^
NO COPY: R/BWI3_HR_Totholz.R:456:20: style: Put spaces around all infix operators.
  Log <- list(Datum=Sys.time(),
                  ~^~
NO COPY: R/BWI3_HR_Totholz.R:457:24: style: Put spaces around all infix operators.
      Version.totholz.b=substr(as.character(totholz$bemerk[1]),a,b))
                      ~^~
NO COPY: R/BWI3_HR_Totholz.R:457:64: style: Commas should always have a space after.
      Version.totholz.b=substr(as.character(totholz$bemerk[1]),a,b))
                                                               ^
NO COPY: R/BWI3_HR_Totholz.R:457:66: style: Commas should always have a space after.
      Version.totholz.b=substr(as.character(totholz$bemerk[1]),a,b))
                                                                 ^
NO COPY: R/BWI3_HR_Totholz.R:459:18: style: Put spaces around all infix operators.
  return(list(Log=Log, Stratum=auswahl, nTE=n.te.s, HBF=T.hbf, se.HBF=se.T.hbf,
                ~^~
NO COPY: R/BWI3_HR_Totholz.R:459:31: style: Put spaces around all infix operators.
  return(list(Log=Log, Stratum=auswahl, nTE=n.te.s, HBF=T.hbf, se.HBF=se.T.hbf,
                             ~^~
NO COPY: R/BWI3_HR_Totholz.R:459:44: style: Put spaces around all infix operators.
  return(list(Log=Log, Stratum=auswahl, nTE=n.te.s, HBF=T.hbf, se.HBF=se.T.hbf,
                                          ~^~
NO COPY: R/BWI3_HR_Totholz.R:459:45: style: Words within variable and function names should be separated by '_' rather than '.'.
  return(list(Log=Log, Stratum=auswahl, nTE=n.te.s, HBF=T.hbf, se.HBF=se.T.hbf,
                                            ^~~~~~
NO COPY: R/BWI3_HR_Totholz.R:459:56: style: Put spaces around all infix operators.
  return(list(Log=Log, Stratum=auswahl, nTE=n.te.s, HBF=T.hbf, se.HBF=se.T.hbf,
                                                      ~^~
NO COPY: R/BWI3_HR_Totholz.R:459:70: style: Put spaces around all infix operators.
  return(list(Log=Log, Stratum=auswahl, nTE=n.te.s, HBF=T.hbf, se.HBF=se.T.hbf,
                                                                    ~^~
NO COPY: R/BWI3_HR_Totholz.R:459:71: style: Words within variable and function names should be separated by '_' rather than '.'.
  return(list(Log=Log, Stratum=auswahl, nTE=n.te.s, HBF=T.hbf, se.HBF=se.T.hbf,
                                                                      ^~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:460:25: style: Put spaces around all infix operators.
              TArt.Liste=tart.lab,
                       ~^~
NO COPY: R/BWI3_HR_Totholz.R:461:26: style: Put spaces around all infix operators.
              T.ThVN.Tart=Y.tart,
                        ~^~
NO COPY: R/BWI3_HR_Totholz.R:462:27: style: Put spaces around all infix operators.
              ThVN.ha.Tart=Yha.tart,
                         ~^~
NO COPY: R/BWI3_HR_Totholz.R:463:22: style: Put spaces around all infix operators.
              nT.Tart=nT.tart))
                    ~^~
NO COPY: R/BWI3_HR_Totholz.R:463:23: style: Variable and function names should be all lowercase.
              nT.Tart=nT.tart))
                      ^~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:536:1: style: lines should not be more than 80 characters.
          function(totholz,ecken,trakte,bwi,krit,klass,A,auswahl, strict = FALSE){
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:536:28: style: Commas should always have a space after.
          function(totholz,ecken,trakte,bwi,krit,klass,A,auswahl, strict = FALSE){
                           ^
NO COPY: R/BWI3_HR_Totholz.R:536:34: style: Commas should always have a space after.
          function(totholz,ecken,trakte,bwi,krit,klass,A,auswahl, strict = FALSE){
                                 ^
NO COPY: R/BWI3_HR_Totholz.R:536:41: style: Commas should always have a space after.
          function(totholz,ecken,trakte,bwi,krit,klass,A,auswahl, strict = FALSE){
                                        ^
NO COPY: R/BWI3_HR_Totholz.R:536:45: style: Commas should always have a space after.
          function(totholz,ecken,trakte,bwi,krit,klass,A,auswahl, strict = FALSE){
                                            ^
NO COPY: R/BWI3_HR_Totholz.R:536:50: style: Commas should always have a space after.
          function(totholz,ecken,trakte,bwi,krit,klass,A,auswahl, strict = FALSE){
                                                 ^
NO COPY: R/BWI3_HR_Totholz.R:536:56: style: Commas should always have a space after.
          function(totholz,ecken,trakte,bwi,krit,klass,A,auswahl, strict = FALSE){
                                                       ^
NO COPY: R/BWI3_HR_Totholz.R:536:58: style: Commas should always have a space after.
          function(totholz,ecken,trakte,bwi,krit,klass,A,auswahl, strict = FALSE){
                                                         ^
NO COPY: R/BWI3_HR_Totholz.R:542:78: style: Trailing whitespace is superfluous.
    attributes <- c("tnr", "enr", "nr", "tbagr", "tart", "tzg", "tbd", "tsd", 
                                                                             ^
NO COPY: R/BWI3_HR_Totholz.R:555:12: style: Place a space before left parenthesis, except in a function call.
  } else if(checkmate::testScalarNA(klass) == FALSE){
           ^
NO COPY: R/BWI3_HR_Totholz.R:560:34: style: Commas should always have a space after.
  stratum <- stratum.fun(auswahl,ecken)
                                 ^
NO COPY: R/BWI3_HR_Totholz.R:564:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  n.te.s <- length(stratum[,1])
  ^~~~~~
NO COPY: R/BWI3_HR_Totholz.R:564:29: style: Commas should always have a space after.
  n.te.s <- length(stratum[,1])
                            ^
NO COPY: R/BWI3_HR_Totholz.R:565:31: style: Commas should always have a space after.
  y <- stats::aggregate(rep(1,length(stratum[,1])),by=list(stratum$tnr),sum)
                              ^
NO COPY: R/BWI3_HR_Totholz.R:565:47: style: Commas should always have a space after.
  y <- stats::aggregate(rep(1,length(stratum[,1])),by=list(stratum$tnr),sum)
                                              ^
NO COPY: R/BWI3_HR_Totholz.R:565:52: style: Commas should always have a space after.
  y <- stats::aggregate(rep(1,length(stratum[,1])),by=list(stratum$tnr),sum)
                                                   ^
NO COPY: R/BWI3_HR_Totholz.R:565:54: style: Put spaces around all infix operators.
  y <- stats::aggregate(rep(1,length(stratum[,1])),by=list(stratum$tnr),sum)
                                                    ~^~
NO COPY: R/BWI3_HR_Totholz.R:565:73: style: Commas should always have a space after.
  y <- stats::aggregate(rep(1,length(stratum[,1])),by=list(stratum$tnr),sum)
                                                                        ^
NO COPY: R/BWI3_HR_Totholz.R:566:23: style: Commas should always have a space after.
  names(y) <- c("tnr","y")
                      ^
NO COPY: R/BWI3_HR_Totholz.R:567:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  n.t.s <- length(y[,1])
  ^~~~~
NO COPY: R/BWI3_HR_Totholz.R:567:3: warning: local variable 'n.t.s' assigned but may not be used
  n.t.s <- length(y[,1])
  ^~~~~
NO COPY: R/BWI3_HR_Totholz.R:567:22: style: Commas should always have a space after.
  n.t.s <- length(y[,1])
                     ^
NO COPY: R/BWI3_HR_Totholz.R:569:16: style: Commas should always have a space after.
  y <- merge(y,trakte[TRUE, c("tnr", "m")],by=c("tnr"))
               ^
NO COPY: R/BWI3_HR_Totholz.R:569:44: style: Commas should always have a space after.
  y <- merge(y,trakte[TRUE, c("tnr", "m")],by=c("tnr"))
                                           ^
NO COPY: R/BWI3_HR_Totholz.R:569:46: style: Put spaces around all infix operators.
  y <- merge(y,trakte[TRUE, c("tnr", "m")],by=c("tnr"))
                                            ~^~
NO COPY: R/BWI3_HR_Totholz.R:573:24: style: Commas should always have a space after.
  nT <- length(trakte[,1])
                       ^
NO COPY: R/BWI3_HR_Totholz.R:575:4: style: Commented code should be removed.
  #HBFl. [ha]
   ^~~~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:576:20: style: Put spaces around all infix operators.
  T.hbf <- sum(y$y)/sum(x)*A
                  ~^~
NO COPY: R/BWI3_HR_Totholz.R:576:27: style: Put spaces around all infix operators.
  T.hbf <- sum(y$y)/sum(x)*A
                         ~^~
NO COPY: R/BWI3_HR_Totholz.R:577:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  var.T.hbf <-  nT/(nT-1)*T.hbf^2*(sum(y$y^2)/sum(y$y)^2+sum(x^2)/sum(x)^2
  ^~~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:577:19: style: Put spaces around all infix operators.
  var.T.hbf <-  nT/(nT-1)*T.hbf^2*(sum(y$y^2)/sum(y$y)^2+sum(x^2)/sum(x)^2
                 ~^~
NO COPY: R/BWI3_HR_Totholz.R:577:20: style: Place a space before left parenthesis, except in a function call.
  var.T.hbf <-  nT/(nT-1)*T.hbf^2*(sum(y$y^2)/sum(y$y)^2+sum(x^2)/sum(x)^2
                   ^
NO COPY: R/BWI3_HR_Totholz.R:577:23: style: Put spaces around all infix operators.
  var.T.hbf <-  nT/(nT-1)*T.hbf^2*(sum(y$y^2)/sum(y$y)^2+sum(x^2)/sum(x)^2
                     ~^~
NO COPY: R/BWI3_HR_Totholz.R:577:26: style: Put spaces around all infix operators.
  var.T.hbf <-  nT/(nT-1)*T.hbf^2*(sum(y$y^2)/sum(y$y)^2+sum(x^2)/sum(x)^2
                        ~^~
NO COPY: R/BWI3_HR_Totholz.R:577:32: style: Put spaces around all infix operators.
  var.T.hbf <-  nT/(nT-1)*T.hbf^2*(sum(y$y^2)/sum(y$y)^2+sum(x^2)/sum(x)^2
                              ~^~
NO COPY: R/BWI3_HR_Totholz.R:577:34: style: Put spaces around all infix operators.
  var.T.hbf <-  nT/(nT-1)*T.hbf^2*(sum(y$y^2)/sum(y$y)^2+sum(x^2)/sum(x)^2
                                ~^~
NO COPY: R/BWI3_HR_Totholz.R:577:35: style: Place a space before left parenthesis, except in a function call.
  var.T.hbf <-  nT/(nT-1)*T.hbf^2*(sum(y$y^2)/sum(y$y)^2+sum(x^2)/sum(x)^2
                                  ^
NO COPY: R/BWI3_HR_Totholz.R:577:43: style: Put spaces around all infix operators.
  var.T.hbf <-  nT/(nT-1)*T.hbf^2*(sum(y$y^2)/sum(y$y)^2+sum(x^2)/sum(x)^2
                                         ~^~
NO COPY: R/BWI3_HR_Totholz.R:577:46: style: Put spaces around all infix operators.
  var.T.hbf <-  nT/(nT-1)*T.hbf^2*(sum(y$y^2)/sum(y$y)^2+sum(x^2)/sum(x)^2
                                            ~^~
NO COPY: R/BWI3_HR_Totholz.R:577:55: style: Put spaces around all infix operators.
  var.T.hbf <-  nT/(nT-1)*T.hbf^2*(sum(y$y^2)/sum(y$y)^2+sum(x^2)/sum(x)^2
                                                     ~^~
NO COPY: R/BWI3_HR_Totholz.R:577:57: style: Put spaces around all infix operators.
  var.T.hbf <-  nT/(nT-1)*T.hbf^2*(sum(y$y^2)/sum(y$y)^2+sum(x^2)/sum(x)^2
                                                       ~^~
NO COPY: R/BWI3_HR_Totholz.R:577:63: style: Put spaces around all infix operators.
  var.T.hbf <-  nT/(nT-1)*T.hbf^2*(sum(y$y^2)/sum(y$y)^2+sum(x^2)/sum(x)^2
                                                             ~^~
NO COPY: R/BWI3_HR_Totholz.R:577:66: style: Put spaces around all infix operators.
  var.T.hbf <-  nT/(nT-1)*T.hbf^2*(sum(y$y^2)/sum(y$y)^2+sum(x^2)/sum(x)^2
                                                                ~^~
NO COPY: R/BWI3_HR_Totholz.R:577:73: style: Put spaces around all infix operators.
  var.T.hbf <-  nT/(nT-1)*T.hbf^2*(sum(y$y^2)/sum(y$y)^2+sum(x^2)/sum(x)^2
                                                                       ~^~
NO COPY: R/BWI3_HR_Totholz.R:578:23: style: Put spaces around all infix operators.
                      -2*sum(y$y*y$m)/sum(y$y)/sum(x))
                      ^~
NO COPY: R/BWI3_HR_Totholz.R:578:25: style: Put spaces around all infix operators.
                      -2*sum(y$y*y$m)/sum(y$y)/sum(x))
                       ~^~
NO COPY: R/BWI3_HR_Totholz.R:578:33: style: Put spaces around all infix operators.
                      -2*sum(y$y*y$m)/sum(y$y)/sum(x))
                               ~^~
NO COPY: R/BWI3_HR_Totholz.R:578:38: style: Put spaces around all infix operators.
                      -2*sum(y$y*y$m)/sum(y$y)/sum(x))
                                    ~^~
NO COPY: R/BWI3_HR_Totholz.R:578:47: style: Put spaces around all infix operators.
                      -2*sum(y$y*y$m)/sum(y$y)/sum(x))
                                             ~^~
NO COPY: R/BWI3_HR_Totholz.R:579:4: style: Commented code should be removed.
  #var.T.hbf^0.5
   ^~~~~~~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:580:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  se.T.hbf <- var.T.hbf^0.5 #Standardfehler
  ^~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:580:15: style: Words within variable and function names should be separated by '_' rather than '.'.
  se.T.hbf <- var.T.hbf^0.5 #Standardfehler
              ^~~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:580:24: style: Put spaces around all infix operators.
  se.T.hbf <- var.T.hbf^0.5 #Standardfehler
                      ~^~
NO COPY: R/BWI3_HR_Totholz.R:585:5: style: Place a space before left parenthesis, except in a function call.
  if(bwi==3) {
    ^
NO COPY: R/BWI3_HR_Totholz.R:585:9: style: Put spaces around all infix operators.
  if(bwi==3) {
       ~^~~
NO COPY: R/BWI3_HR_Totholz.R:587:32: style: Commas should always have a space after.
    names(totholz) <- sub("tl",names(totholz),replacement="lge")
                               ^
NO COPY: R/BWI3_HR_Totholz.R:587:47: style: Commas should always have a space after.
    names(totholz) <- sub("tl",names(totholz),replacement="lge")
                                              ^
NO COPY: R/BWI3_HR_Totholz.R:587:58: style: Put spaces around all infix operators.
    names(totholz) <- sub("tl",names(totholz),replacement="lge")
                                                        ~^~
NO COPY: R/BWI3_HR_Totholz.R:588:1: style: lines should not be more than 80 characters.
    #Mittendurchmesser wird bei Bruchst\u00fccken (mit 2 Durchmessern als mittlerer
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:590:37: style: Put spaces around all infix operators.
    totholz$dm <- ifelse(totholz$tsd>0&!is.na(totholz$tsd),
                                   ~^~
NO COPY: R/BWI3_HR_Totholz.R:590:39: style: Put spaces around all infix operators.
    totholz$dm <- ifelse(totholz$tsd>0&!is.na(totholz$tsd),
                                     ~^~
NO COPY: R/BWI3_HR_Totholz.R:591:24: style: Put spaces around all infix operators.
              round(200*sqrt(totholz$tvol/totholz$lge/pi),1),totholz$tbd)
                      ~^~
NO COPY: R/BWI3_HR_Totholz.R:591:42: style: Put spaces around all infix operators.
              round(200*sqrt(totholz$tvol/totholz$lge/pi),1),totholz$tbd)
                                        ~^~
NO COPY: R/BWI3_HR_Totholz.R:591:54: style: Put spaces around all infix operators.
              round(200*sqrt(totholz$tvol/totholz$lge/pi),1),totholz$tbd)
                                                    ~^~
NO COPY: R/BWI3_HR_Totholz.R:591:59: style: Commas should always have a space after.
              round(200*sqrt(totholz$tvol/totholz$lge/pi),1),totholz$tbd)
                                                          ^
NO COPY: R/BWI3_HR_Totholz.R:591:62: style: Commas should always have a space after.
              round(200*sqrt(totholz$tvol/totholz$lge/pi),1),totholz$tbd)
                                                             ^
NO COPY: R/BWI3_HR_Totholz.R:593:3: style: Opening curly braces should never go on their own line and should always be followed by a new line.
  {
  ^
NO COPY: R/BWI3_HR_Totholz.R:595:26: style: Commas should always have a space after.
    totholz$anz <- rep(1,length(totholz[,1]))
                         ^
NO COPY: R/BWI3_HR_Totholz.R:595:42: style: Commas should always have a space after.
    totholz$anz <- rep(1,length(totholz[,1]))
                                         ^
NO COPY: R/BWI3_HR_Totholz.R:600:26: style: Put spaces around all infix operators.
  krit.bwi2 <- ifelse(bwi==3 & krit==2,T,F)
                        ~^~~
NO COPY: R/BWI3_HR_Totholz.R:600:36: style: Put spaces around all infix operators.
  krit.bwi2 <- ifelse(bwi==3 & krit==2,T,F)
                                  ~^~~
NO COPY: R/BWI3_HR_Totholz.R:600:40: style: Commas should always have a space after.
  krit.bwi2 <- ifelse(bwi==3 & krit==2,T,F)
                                       ^
NO COPY: R/BWI3_HR_Totholz.R:600:42: style: Commas should always have a space after.
  krit.bwi2 <- ifelse(bwi==3 & krit==2,T,F)
                                         ^
NO COPY: R/BWI3_HR_Totholz.R:602:5: style: Place a space before left parenthesis, except in a function call.
  if(krit.bwi2)
    ^
NO COPY: R/BWI3_HR_Totholz.R:604:3: style: Opening curly braces should never go on their own line and should always be followed by a new line.
  {
  ^
NO COPY: R/BWI3_HR_Totholz.R:605:1: style: lines should not be more than 80 characters.
     totholz <- totholz[(totholz$tart!=4&totholz$tbd>=20)|(totholz$tart==4&(totholz$tbd>=60|totholz$lge>=0.5)), TRUE]
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:605:38: style: Put spaces around all infix operators.
     totholz <- totholz[(totholz$tart!=4&totholz$tbd>=20)|(totholz$tart==4&(totholz$tbd>=60|totholz$lge>=0.5)), TRUE]
                                    ~^~~
NO COPY: R/BWI3_HR_Totholz.R:605:41: style: Put spaces around all infix operators.
     totholz <- totholz[(totholz$tart!=4&totholz$tbd>=20)|(totholz$tart==4&(totholz$tbd>=60|totholz$lge>=0.5)), TRUE]
                                       ~^~
NO COPY: R/BWI3_HR_Totholz.R:605:53: style: Put spaces around all infix operators.
     totholz <- totholz[(totholz$tart!=4&totholz$tbd>=20)|(totholz$tart==4&(totholz$tbd>=60|totholz$lge>=0.5)), TRUE]
                                                   ~^~~
NO COPY: R/BWI3_HR_Totholz.R:605:58: style: Put spaces around all infix operators.
     totholz <- totholz[(totholz$tart!=4&totholz$tbd>=20)|(totholz$tart==4&(totholz$tbd>=60|totholz$lge>=0.5)), TRUE]
                                                        ~^~
NO COPY: R/BWI3_HR_Totholz.R:605:59: style: Place a space before left parenthesis, except in a function call.
     totholz <- totholz[(totholz$tart!=4&totholz$tbd>=20)|(totholz$tart==4&(totholz$tbd>=60|totholz$lge>=0.5)), TRUE]
                                                          ^
NO COPY: R/BWI3_HR_Totholz.R:605:72: style: Put spaces around all infix operators.
     totholz <- totholz[(totholz$tart!=4&totholz$tbd>=20)|(totholz$tart==4&(totholz$tbd>=60|totholz$lge>=0.5)), TRUE]
                                                                      ~^~~
NO COPY: R/BWI3_HR_Totholz.R:605:75: style: Put spaces around all infix operators.
     totholz <- totholz[(totholz$tart!=4&totholz$tbd>=20)|(totholz$tart==4&(totholz$tbd>=60|totholz$lge>=0.5)), TRUE]
                                                                         ~^~
NO COPY: R/BWI3_HR_Totholz.R:605:76: style: Place a space before left parenthesis, except in a function call.
     totholz <- totholz[(totholz$tart!=4&totholz$tbd>=20)|(totholz$tart==4&(totholz$tbd>=60|totholz$lge>=0.5)), TRUE]
                                                                           ^
NO COPY: R/BWI3_HR_Totholz.R:605:88: style: Put spaces around all infix operators.
     totholz <- totholz[(totholz$tart!=4&totholz$tbd>=20)|(totholz$tart==4&(totholz$tbd>=60|totholz$lge>=0.5)), TRUE]
                                                                                      ~^~~
NO COPY: R/BWI3_HR_Totholz.R:605:92: style: Put spaces around all infix operators.
     totholz <- totholz[(totholz$tart!=4&totholz$tbd>=20)|(totholz$tart==4&(totholz$tbd>=60|totholz$lge>=0.5)), TRUE]
                                                                                          ~^~
NO COPY: R/BWI3_HR_Totholz.R:605:104: style: Put spaces around all infix operators.
     totholz <- totholz[(totholz$tart!=4&totholz$tbd>=20)|(totholz$tart==4&(totholz$tbd>=60|totholz$lge>=0.5)), TRUE]
                                                                                                      ~^~~
NO COPY: R/BWI3_HR_Totholz.R:609:1: style: lines should not be more than 80 characters.
  totholz.s <- merge(totholz[TRUE, c("tnr", "enr", "nr", "tbagr", "tart", "tzg", "dm", "lge", "tvol", "anz", "thf")],
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:610:53: style: Commas should always have a space after.
                     stratum[TRUE, c("tnr", "enr")],by=c("tnr","enr"),all.y=T)
                                                    ^
NO COPY: R/BWI3_HR_Totholz.R:610:55: style: Put spaces around all infix operators.
                     stratum[TRUE, c("tnr", "enr")],by=c("tnr","enr"),all.y=T)
                                                     ~^~
NO COPY: R/BWI3_HR_Totholz.R:610:64: style: Commas should always have a space after.
                     stratum[TRUE, c("tnr", "enr")],by=c("tnr","enr"),all.y=T)
                                                               ^
NO COPY: R/BWI3_HR_Totholz.R:610:71: style: Commas should always have a space after.
                     stratum[TRUE, c("tnr", "enr")],by=c("tnr","enr"),all.y=T)
                                                                      ^
NO COPY: R/BWI3_HR_Totholz.R:610:76: style: Put spaces around all infix operators.
                     stratum[TRUE, c("tnr", "enr")],by=c("tnr","enr"),all.y=T)
                                                                          ~^~
NO COPY: R/BWI3_HR_Totholz.R:612:5: style: Place a space before left parenthesis, except in a function call.
  if(is.na(klass[[1]][1]))
    ^
NO COPY: R/BWI3_HR_Totholz.R:613:3: style: Opening curly braces should never go on their own line and should always be followed by a new line.
  {
  ^
NO COPY: R/BWI3_HR_Totholz.R:616:3: style: Opening curly braces should never go on their own line and should always be followed by a new line.
  {
  ^
NO COPY: R/BWI3_HR_Totholz.R:617:1: style: lines should not be more than 80 characters.
    #Position der m\u00f6glichen Klassifizierungsattribute im Datensatz <totholz.s>
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:619:5: style: Words within variable and function names should be separated by '_' rather than '.'.
    klass.attr.list <- c("tbagr","tart","tzg","dm","lge")
    ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:619:34: style: Commas should always have a space after.
    klass.attr.list <- c("tbagr","tart","tzg","dm","lge")
                                 ^
NO COPY: R/BWI3_HR_Totholz.R:619:41: style: Commas should always have a space after.
    klass.attr.list <- c("tbagr","tart","tzg","dm","lge")
                                        ^
NO COPY: R/BWI3_HR_Totholz.R:619:47: style: Commas should always have a space after.
    klass.attr.list <- c("tbagr","tart","tzg","dm","lge")
                                              ^
NO COPY: R/BWI3_HR_Totholz.R:619:52: style: Commas should always have a space after.
    klass.attr.list <- c("tbagr","tart","tzg","dm","lge")
                                                   ^
NO COPY: R/BWI3_HR_Totholz.R:620:32: style: Commas should always have a space after.
    pos <- 3 + grep(klass$attr,klass.attr.list)
                               ^
NO COPY: R/BWI3_HR_Totholz.R:620:32: style: Words within variable and function names should be separated by '_' rather than '.'.
    pos <- 3 + grep(klass$attr,klass.attr.list)
                               ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:625:12: style: Put spaces around all infix operators.
    if (pos%in%c(4:6))
          ~^~~~~
NO COPY: R/BWI3_HR_Totholz.R:626:5: style: Opening curly braces should never go on their own line and should always be followed by a new line.
    {
    ^
NO COPY: R/BWI3_HR_Totholz.R:629:5: style: Opening curly braces should never go on their own line and should always be followed by a new line.
    {
    ^
NO COPY: R/BWI3_HR_Totholz.R:630:31: style: Put spaces around all infix operators.
      klass.k <- (klass$kat[2]-klass$kat[1])/klass$kat[3]+1
                             ~^~
NO COPY: R/BWI3_HR_Totholz.R:630:45: style: Put spaces around all infix operators.
      klass.k <- (klass$kat[2]-klass$kat[1])/klass$kat[3]+1
                                           ~^~
NO COPY: R/BWI3_HR_Totholz.R:630:58: style: Put spaces around all infix operators.
      klass.k <- (klass$kat[2]-klass$kat[1])/klass$kat[3]+1
                                                        ~^~
NO COPY: R/BWI3_HR_Totholz.R:634:1: style: lines should not be more than 80 characters.
      #Hinweis: die Klassifizierungskategorien k\u00f6nnten auch dem Attribut <pos>
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:636:18: style: Commas should always have a space after.
      totholz.s[,pos] <- cut(totholz.s[,pos],
                 ^
NO COPY: R/BWI3_HR_Totholz.R:636:41: style: Commas should always have a space after.
      totholz.s[,pos] <- cut(totholz.s[,pos],
                                        ^
NO COPY: R/BWI3_HR_Totholz.R:637:19: style: Put spaces around all infix operators.
            breaks=c(seq(klass$kat[1],klass$kat[2],klass$kat[3]),
                 ~^~
NO COPY: R/BWI3_HR_Totholz.R:637:39: style: Commas should always have a space after.
            breaks=c(seq(klass$kat[1],klass$kat[2],klass$kat[3]),
                                      ^
NO COPY: R/BWI3_HR_Totholz.R:637:52: style: Commas should always have a space after.
            breaks=c(seq(klass$kat[1],klass$kat[2],klass$kat[3]),
                                                   ^
NO COPY: R/BWI3_HR_Totholz.R:638:41: style: Commas should always have a space after.
                        (max(totholz.s[,pos],na.rm=T)+1)),right=F)
                                        ^
NO COPY: R/BWI3_HR_Totholz.R:638:46: style: Commas should always have a space after.
                        (max(totholz.s[,pos],na.rm=T)+1)),right=F)
                                             ^
NO COPY: R/BWI3_HR_Totholz.R:638:51: style: Put spaces around all infix operators.
                        (max(totholz.s[,pos],na.rm=T)+1)),right=F)
                                                 ~^~
NO COPY: R/BWI3_HR_Totholz.R:638:54: style: Put spaces around all infix operators.
                        (max(totholz.s[,pos],na.rm=T)+1)),right=F)
                                                    ~^~
NO COPY: R/BWI3_HR_Totholz.R:638:59: style: Commas should always have a space after.
                        (max(totholz.s[,pos],na.rm=T)+1)),right=F)
                                                          ^
NO COPY: R/BWI3_HR_Totholz.R:638:64: style: Put spaces around all infix operators.
                        (max(totholz.s[,pos],na.rm=T)+1)),right=F)
                                                              ~^~
NO COPY: R/BWI3_HR_Totholz.R:639:8: style: Commented code should be removed.
      #kat <- unique(totholz.s$kl)
       ^~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:640:32: style: Commas should always have a space after.
      kat <- unique(totholz.s[,pos])
                               ^
NO COPY: R/BWI3_HR_Totholz.R:649:1: style: lines should not be more than 80 characters.
  #F\u00fcr diese 2 "Gr\u00f6\u00dfen" werden jeweils der Gesamtwert ("Total") und der Stichproben-
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:650:1: style: lines should not be more than 80 characters.
  #fehler (SE) berechnet, und zwar jeweils f\u00fcr die 3 Baumartengruppen <tbagr>,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:653:26: style: Put spaces around all infix operators.
  Y.klass    <- array(dim=c(2,2,klass.k))
                        ~^~
NO COPY: R/BWI3_HR_Totholz.R:653:31: style: Commas should always have a space after.
  Y.klass    <- array(dim=c(2,2,klass.k))
                              ^
NO COPY: R/BWI3_HR_Totholz.R:653:33: style: Commas should always have a space after.
  Y.klass    <- array(dim=c(2,2,klass.k))
                                ^
NO COPY: R/BWI3_HR_Totholz.R:654:3: style: Variable and function names should be all lowercase.
  nT.klass   <- array(dim=c(klass.k,1))
  ^~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:654:26: style: Put spaces around all infix operators.
  nT.klass   <- array(dim=c(klass.k,1))
                        ~^~
NO COPY: R/BWI3_HR_Totholz.R:654:37: style: Commas should always have a space after.
  nT.klass   <- array(dim=c(klass.k,1))
                                    ^
NO COPY: R/BWI3_HR_Totholz.R:656:26: style: Put spaces around all infix operators.
  Yha.klass  <- array(dim=c(2,2,klass.k))
                        ~^~
NO COPY: R/BWI3_HR_Totholz.R:656:31: style: Commas should always have a space after.
  Yha.klass  <- array(dim=c(2,2,klass.k))
                              ^
NO COPY: R/BWI3_HR_Totholz.R:656:33: style: Commas should always have a space after.
  Yha.klass  <- array(dim=c(2,2,klass.k))
                                ^
NO COPY: R/BWI3_HR_Totholz.R:659:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: R/BWI3_HR_Totholz.R:661:3: style: Opening curly braces should never go on their own line and should always be followed by a new line.
  {
  ^
NO COPY: R/BWI3_HR_Totholz.R:662:16: style: Put spaces around all infix operators.
    if (klass.k>1)
              ~^~
NO COPY: R/BWI3_HR_Totholz.R:663:5: style: Opening curly braces should never go on their own line and should always be followed by a new line.
    {
    ^
NO COPY: R/BWI3_HR_Totholz.R:665:38: style: Commas should always have a space after.
                                 c(1,2,9,10,11)] #TODO: Use named index.
                                     ^
NO COPY: R/BWI3_HR_Totholz.R:665:40: style: Commas should always have a space after.
                                 c(1,2,9,10,11)] #TODO: Use named index.
                                       ^
NO COPY: R/BWI3_HR_Totholz.R:665:42: style: Commas should always have a space after.
                                 c(1,2,9,10,11)] #TODO: Use named index.
                                         ^
NO COPY: R/BWI3_HR_Totholz.R:665:45: style: Commas should always have a space after.
                                 c(1,2,9,10,11)] #TODO: Use named index.
                                            ^
NO COPY: R/BWI3_HR_Totholz.R:667:5: style: Opening curly braces should never go on their own line and should always be followed by a new line.
    {
    ^
NO COPY: R/BWI3_HR_Totholz.R:668:44: style: Commas should always have a space after.
      totholz.klass <- totholz.s[TRUE, c(1,2,9,10,11)] #TODO: Use named index.
                                           ^
NO COPY: R/BWI3_HR_Totholz.R:668:46: style: Commas should always have a space after.
      totholz.klass <- totholz.s[TRUE, c(1,2,9,10,11)] #TODO: Use named index.
                                             ^
NO COPY: R/BWI3_HR_Totholz.R:668:48: style: Commas should always have a space after.
      totholz.klass <- totholz.s[TRUE, c(1,2,9,10,11)] #TODO: Use named index.
                                               ^
NO COPY: R/BWI3_HR_Totholz.R:668:51: style: Commas should always have a space after.
      totholz.klass <- totholz.s[TRUE, c(1,2,9,10,11)] #TODO: Use named index.
                                                  ^
NO COPY: R/BWI3_HR_Totholz.R:670:31: style: Commas should always have a space after.
    if (length(totholz.klass[,1])== 0)
                              ^
NO COPY: R/BWI3_HR_Totholz.R:670:34: style: Put spaces around all infix operators.
    if (length(totholz.klass[,1])== 0)
                                ~^
NO COPY: R/BWI3_HR_Totholz.R:671:5: style: Opening curly braces should never go on their own line and should always be followed by a new line.
    {
    ^
NO COPY: R/BWI3_HR_Totholz.R:672:19: style: Commas should always have a space after.
      Y.klass[1:2,1,i]   <- rep(0,2)  #Zielgr\u00f6\u00dfe Total
                  ^
NO COPY: R/BWI3_HR_Totholz.R:672:21: style: Commas should always have a space after.
      Y.klass[1:2,1,i]   <- rep(0,2)  #Zielgr\u00f6\u00dfe Total
                    ^
NO COPY: R/BWI3_HR_Totholz.R:672:35: style: Commas should always have a space after.
      Y.klass[1:2,1,i]   <- rep(0,2)  #Zielgr\u00f6\u00dfe Total
                                  ^
NO COPY: R/BWI3_HR_Totholz.R:673:19: style: Commas should always have a space after.
      Y.klass[1:2,2,i]   <- rep(0,2)  #Stichprobenfehler (SE)
                  ^
NO COPY: R/BWI3_HR_Totholz.R:673:21: style: Commas should always have a space after.
      Y.klass[1:2,2,i]   <- rep(0,2)  #Stichprobenfehler (SE)
                    ^
NO COPY: R/BWI3_HR_Totholz.R:673:35: style: Commas should always have a space after.
      Y.klass[1:2,2,i]   <- rep(0,2)  #Stichprobenfehler (SE)
                                  ^
NO COPY: R/BWI3_HR_Totholz.R:674:21: style: Commas should always have a space after.
      Yha.klass[1:2,1,i] <- rep(0,2)
                    ^
NO COPY: R/BWI3_HR_Totholz.R:674:23: style: Commas should always have a space after.
      Yha.klass[1:2,1,i] <- rep(0,2)
                      ^
NO COPY: R/BWI3_HR_Totholz.R:674:35: style: Commas should always have a space after.
      Yha.klass[1:2,1,i] <- rep(0,2)
                                  ^
NO COPY: R/BWI3_HR_Totholz.R:675:21: style: Commas should always have a space after.
      Yha.klass[1:2,1,i] <- rep(0,2)
                    ^
NO COPY: R/BWI3_HR_Totholz.R:675:23: style: Commas should always have a space after.
      Yha.klass[1:2,1,i] <- rep(0,2)
                      ^
NO COPY: R/BWI3_HR_Totholz.R:675:35: style: Commas should always have a space after.
      Yha.klass[1:2,1,i] <- rep(0,2)
                                  ^
NO COPY: R/BWI3_HR_Totholz.R:676:7: style: Variable and function names should be all lowercase.
      nT.klass[i,]    <- 0  #n PSU (Trakte)
      ^~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:676:18: style: Commas should always have a space after.
      nT.klass[i,]    <- 0  #n PSU (Trakte)
                 ^
NO COPY: R/BWI3_HR_Totholz.R:678:5: style: Opening curly braces should never go on their own line and should always be followed by a new line.
    {
    ^
NO COPY: R/BWI3_HR_Totholz.R:681:1: style: lines should not be more than 80 characters.
      xy <- stats::aggregate(totholz.klass$tvol*totholz.klass$thf*totholz.klass$anz,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:681:48: style: Put spaces around all infix operators.
      xy <- stats::aggregate(totholz.klass$tvol*totholz.klass$thf*totholz.klass$anz,
                                              ~^~
NO COPY: R/BWI3_HR_Totholz.R:681:66: style: Put spaces around all infix operators.
      xy <- stats::aggregate(totholz.klass$tvol*totholz.klass$thf*totholz.klass$anz,
                                                                ~^~
NO COPY: R/BWI3_HR_Totholz.R:682:17: style: Put spaces around all infix operators.
              by=list(totholz.klass$tnr),sum,na.rm=T)
               ~^~
NO COPY: R/BWI3_HR_Totholz.R:682:42: style: Commas should always have a space after.
              by=list(totholz.klass$tnr),sum,na.rm=T)
                                         ^
NO COPY: R/BWI3_HR_Totholz.R:682:46: style: Commas should always have a space after.
              by=list(totholz.klass$tnr),sum,na.rm=T)
                                             ^
NO COPY: R/BWI3_HR_Totholz.R:682:51: style: Put spaces around all infix operators.
              by=list(totholz.klass$tnr),sum,na.rm=T)
                                                 ~^~
NO COPY: R/BWI3_HR_Totholz.R:683:28: style: Commas should always have a space after.
      names(xy) <- c("tnr","v")
                           ^
NO COPY: R/BWI3_HR_Totholz.R:685:22: style: Commas should always have a space after.
      xy <- cbind(xy,stats::aggregate(totholz.klass$thf*totholz.klass$anz,
                     ^
NO COPY: R/BWI3_HR_Totholz.R:685:56: style: Put spaces around all infix operators.
      xy <- cbind(xy,stats::aggregate(totholz.klass$thf*totholz.klass$anz,
                                                      ~^~
NO COPY: R/BWI3_HR_Totholz.R:686:41: style: Put spaces around all infix operators.
                                      by=list(totholz.klass$tnr),sum,na.rm=T)$x)
                                       ~^~
NO COPY: R/BWI3_HR_Totholz.R:686:66: style: Commas should always have a space after.
                                      by=list(totholz.klass$tnr),sum,na.rm=T)$x)
                                                                 ^
NO COPY: R/BWI3_HR_Totholz.R:686:70: style: Commas should always have a space after.
                                      by=list(totholz.klass$tnr),sum,na.rm=T)$x)
                                                                     ^
NO COPY: R/BWI3_HR_Totholz.R:686:75: style: Put spaces around all infix operators.
                                      by=list(totholz.klass$tnr),sum,na.rm=T)$x)
                                                                         ~^~
NO COPY: R/BWI3_HR_Totholz.R:690:22: style: Commas should always have a space after.
      xy <- merge(xy,y,by=c("tnr"),all.x=T)
                     ^
NO COPY: R/BWI3_HR_Totholz.R:690:24: style: Commas should always have a space after.
      xy <- merge(xy,y,by=c("tnr"),all.x=T)
                       ^
NO COPY: R/BWI3_HR_Totholz.R:690:26: style: Put spaces around all infix operators.
      xy <- merge(xy,y,by=c("tnr"),all.x=T)
                        ~^~
NO COPY: R/BWI3_HR_Totholz.R:690:36: style: Commas should always have a space after.
      xy <- merge(xy,y,by=c("tnr"),all.x=T)
                                   ^
NO COPY: R/BWI3_HR_Totholz.R:690:41: style: Put spaces around all infix operators.
      xy <- merge(xy,y,by=c("tnr"),all.x=T)
                                       ~^~
NO COPY: R/BWI3_HR_Totholz.R:695:7: style: Variable and function names should be all lowercase.
      nT.klass[i,] <- length(xy[,1])
      ^~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:695:18: style: Commas should always have a space after.
      nT.klass[i,] <- length(xy[,1])
                 ^
NO COPY: R/BWI3_HR_Totholz.R:695:34: style: Commas should always have a space after.
      nT.klass[i,] <- length(xy[,1])
                                 ^
NO COPY: R/BWI3_HR_Totholz.R:697:7: style: Opening curly braces should never go on their own line and should always be followed by a new line.
      {
      ^
NO COPY: R/BWI3_HR_Totholz.R:700:19: style: Commas should always have a space after.
        Y.klass[j,1,i] <-  sum(xy[,(1+j)])/sum(x)*A
                  ^
NO COPY: R/BWI3_HR_Totholz.R:700:21: style: Commas should always have a space after.
        Y.klass[j,1,i] <-  sum(xy[,(1+j)])/sum(x)*A
                    ^
NO COPY: R/BWI3_HR_Totholz.R:700:36: style: Commas should always have a space after.
        Y.klass[j,1,i] <-  sum(xy[,(1+j)])/sum(x)*A
                                   ^
NO COPY: R/BWI3_HR_Totholz.R:700:36: style: Place a space before left parenthesis, except in a function call.
        Y.klass[j,1,i] <-  sum(xy[,(1+j)])/sum(x)*A
                                   ^
NO COPY: R/BWI3_HR_Totholz.R:700:38: style: Put spaces around all infix operators.
        Y.klass[j,1,i] <-  sum(xy[,(1+j)])/sum(x)*A
                                    ~^~
NO COPY: R/BWI3_HR_Totholz.R:700:43: style: Put spaces around all infix operators.
        Y.klass[j,1,i] <-  sum(xy[,(1+j)])/sum(x)*A
                                         ~^~
NO COPY: R/BWI3_HR_Totholz.R:700:50: style: Put spaces around all infix operators.
        Y.klass[j,1,i] <-  sum(xy[,(1+j)])/sum(x)*A
                                                ~^~
NO COPY: R/BWI3_HR_Totholz.R:702:19: style: Commas should always have a space after.
        Y.klass[j,2,i] <- Y.klass[j,1,i]*sqrt(
                  ^
NO COPY: R/BWI3_HR_Totholz.R:702:21: style: Commas should always have a space after.
        Y.klass[j,2,i] <- Y.klass[j,1,i]*sqrt(
                    ^
NO COPY: R/BWI3_HR_Totholz.R:702:37: style: Commas should always have a space after.
        Y.klass[j,2,i] <- Y.klass[j,1,i]*sqrt(
                                    ^
NO COPY: R/BWI3_HR_Totholz.R:702:39: style: Commas should always have a space after.
        Y.klass[j,2,i] <- Y.klass[j,1,i]*sqrt(
                                      ^
NO COPY: R/BWI3_HR_Totholz.R:702:41: style: Put spaces around all infix operators.
        Y.klass[j,2,i] <- Y.klass[j,1,i]*sqrt(
                                       ~^~
NO COPY: R/BWI3_HR_Totholz.R:703:13: style: Put spaces around all infix operators.
          nT/(nT-1)*(sum(xy[,(1+j)]^2)/sum(xy[,(1+j)])^2+sum(x^2)/sum(x)^2
           ~^~
NO COPY: R/BWI3_HR_Totholz.R:703:14: style: Place a space before left parenthesis, except in a function call.
          nT/(nT-1)*(sum(xy[,(1+j)]^2)/sum(xy[,(1+j)])^2+sum(x^2)/sum(x)^2
             ^
NO COPY: R/BWI3_HR_Totholz.R:703:17: style: Put spaces around all infix operators.
          nT/(nT-1)*(sum(xy[,(1+j)]^2)/sum(xy[,(1+j)])^2+sum(x^2)/sum(x)^2
               ~^~
NO COPY: R/BWI3_HR_Totholz.R:703:20: style: Put spaces around all infix operators.
          nT/(nT-1)*(sum(xy[,(1+j)]^2)/sum(xy[,(1+j)])^2+sum(x^2)/sum(x)^2
                  ~^~
NO COPY: R/BWI3_HR_Totholz.R:703:21: style: Place a space before left parenthesis, except in a function call.
          nT/(nT-1)*(sum(xy[,(1+j)]^2)/sum(xy[,(1+j)])^2+sum(x^2)/sum(x)^2
                    ^
NO COPY: R/BWI3_HR_Totholz.R:703:30: style: Commas should always have a space after.
          nT/(nT-1)*(sum(xy[,(1+j)]^2)/sum(xy[,(1+j)])^2+sum(x^2)/sum(x)^2
                             ^
NO COPY: R/BWI3_HR_Totholz.R:703:30: style: Place a space before left parenthesis, except in a function call.
          nT/(nT-1)*(sum(xy[,(1+j)]^2)/sum(xy[,(1+j)])^2+sum(x^2)/sum(x)^2
                             ^
NO COPY: R/BWI3_HR_Totholz.R:703:32: style: Put spaces around all infix operators.
          nT/(nT-1)*(sum(xy[,(1+j)]^2)/sum(xy[,(1+j)])^2+sum(x^2)/sum(x)^2
                              ~^~
NO COPY: R/BWI3_HR_Totholz.R:703:36: style: Put spaces around all infix operators.
          nT/(nT-1)*(sum(xy[,(1+j)]^2)/sum(xy[,(1+j)])^2+sum(x^2)/sum(x)^2
                                  ~^~
NO COPY: R/BWI3_HR_Totholz.R:703:39: style: Put spaces around all infix operators.
          nT/(nT-1)*(sum(xy[,(1+j)]^2)/sum(xy[,(1+j)])^2+sum(x^2)/sum(x)^2
                                     ~^~
NO COPY: R/BWI3_HR_Totholz.R:703:48: style: Commas should always have a space after.
          nT/(nT-1)*(sum(xy[,(1+j)]^2)/sum(xy[,(1+j)])^2+sum(x^2)/sum(x)^2
                                               ^
NO COPY: R/BWI3_HR_Totholz.R:703:48: style: Place a space before left parenthesis, except in a function call.
          nT/(nT-1)*(sum(xy[,(1+j)]^2)/sum(xy[,(1+j)])^2+sum(x^2)/sum(x)^2
                                               ^
NO COPY: R/BWI3_HR_Totholz.R:703:50: style: Put spaces around all infix operators.
          nT/(nT-1)*(sum(xy[,(1+j)]^2)/sum(xy[,(1+j)])^2+sum(x^2)/sum(x)^2
                                                ~^~
NO COPY: R/BWI3_HR_Totholz.R:703:55: style: Put spaces around all infix operators.
          nT/(nT-1)*(sum(xy[,(1+j)]^2)/sum(xy[,(1+j)])^2+sum(x^2)/sum(x)^2
                                                     ~^~
NO COPY: R/BWI3_HR_Totholz.R:703:57: style: Put spaces around all infix operators.
          nT/(nT-1)*(sum(xy[,(1+j)]^2)/sum(xy[,(1+j)])^2+sum(x^2)/sum(x)^2
                                                       ~^~
NO COPY: R/BWI3_HR_Totholz.R:703:63: style: Put spaces around all infix operators.
          nT/(nT-1)*(sum(xy[,(1+j)]^2)/sum(xy[,(1+j)])^2+sum(x^2)/sum(x)^2
                                                             ~^~
NO COPY: R/BWI3_HR_Totholz.R:703:66: style: Put spaces around all infix operators.
          nT/(nT-1)*(sum(xy[,(1+j)]^2)/sum(xy[,(1+j)])^2+sum(x^2)/sum(x)^2
                                                                ~^~
NO COPY: R/BWI3_HR_Totholz.R:703:73: style: Put spaces around all infix operators.
          nT/(nT-1)*(sum(xy[,(1+j)]^2)/sum(xy[,(1+j)])^2+sum(x^2)/sum(x)^2
                                                                       ~^~
NO COPY: R/BWI3_HR_Totholz.R:704:33: style: Put spaces around all infix operators.
                                -2*sum(xy[,(1+j)]*xy$m)/sum(xy[,(1+j)])/sum(x)))
                                ^~
NO COPY: R/BWI3_HR_Totholz.R:704:35: style: Put spaces around all infix operators.
                                -2*sum(xy[,(1+j)]*xy$m)/sum(xy[,(1+j)])/sum(x)))
                                 ~^~
NO COPY: R/BWI3_HR_Totholz.R:704:44: style: Commas should always have a space after.
                                -2*sum(xy[,(1+j)]*xy$m)/sum(xy[,(1+j)])/sum(x)))
                                           ^
NO COPY: R/BWI3_HR_Totholz.R:704:44: style: Place a space before left parenthesis, except in a function call.
                                -2*sum(xy[,(1+j)]*xy$m)/sum(xy[,(1+j)])/sum(x)))
                                           ^
NO COPY: R/BWI3_HR_Totholz.R:704:46: style: Put spaces around all infix operators.
                                -2*sum(xy[,(1+j)]*xy$m)/sum(xy[,(1+j)])/sum(x)))
                                            ~^~
NO COPY: R/BWI3_HR_Totholz.R:704:50: style: Put spaces around all infix operators.
                                -2*sum(xy[,(1+j)]*xy$m)/sum(xy[,(1+j)])/sum(x)))
                                                ~^~
NO COPY: R/BWI3_HR_Totholz.R:704:56: style: Put spaces around all infix operators.
                                -2*sum(xy[,(1+j)]*xy$m)/sum(xy[,(1+j)])/sum(x)))
                                                      ~^~
NO COPY: R/BWI3_HR_Totholz.R:704:65: style: Commas should always have a space after.
                                -2*sum(xy[,(1+j)]*xy$m)/sum(xy[,(1+j)])/sum(x)))
                                                                ^
NO COPY: R/BWI3_HR_Totholz.R:704:65: style: Place a space before left parenthesis, except in a function call.
                                -2*sum(xy[,(1+j)]*xy$m)/sum(xy[,(1+j)])/sum(x)))
                                                                ^
NO COPY: R/BWI3_HR_Totholz.R:704:67: style: Put spaces around all infix operators.
                                -2*sum(xy[,(1+j)]*xy$m)/sum(xy[,(1+j)])/sum(x)))
                                                                 ~^~
NO COPY: R/BWI3_HR_Totholz.R:704:72: style: Put spaces around all infix operators.
                                -2*sum(xy[,(1+j)]*xy$m)/sum(xy[,(1+j)])/sum(x)))
                                                                      ~^~
NO COPY: R/BWI3_HR_Totholz.R:708:21: style: Commas should always have a space after.
        Yha.klass[j,1,i] <- Y.klass[j,1,i]/T.hbf
                    ^
NO COPY: R/BWI3_HR_Totholz.R:708:23: style: Commas should always have a space after.
        Yha.klass[j,1,i] <- Y.klass[j,1,i]/T.hbf
                      ^
NO COPY: R/BWI3_HR_Totholz.R:708:39: style: Commas should always have a space after.
        Yha.klass[j,1,i] <- Y.klass[j,1,i]/T.hbf
                                      ^
NO COPY: R/BWI3_HR_Totholz.R:708:41: style: Commas should always have a space after.
        Yha.klass[j,1,i] <- Y.klass[j,1,i]/T.hbf
                                        ^
NO COPY: R/BWI3_HR_Totholz.R:708:43: style: Put spaces around all infix operators.
        Yha.klass[j,1,i] <- Y.klass[j,1,i]/T.hbf
                                         ~^~
NO COPY: R/BWI3_HR_Totholz.R:709:21: style: Commas should always have a space after.
        Yha.klass[j,2,i] <- Yha.klass[j,1,i]*sqrt(
                    ^
NO COPY: R/BWI3_HR_Totholz.R:709:23: style: Commas should always have a space after.
        Yha.klass[j,2,i] <- Yha.klass[j,1,i]*sqrt(
                      ^
NO COPY: R/BWI3_HR_Totholz.R:709:41: style: Commas should always have a space after.
        Yha.klass[j,2,i] <- Yha.klass[j,1,i]*sqrt(
                                        ^
NO COPY: R/BWI3_HR_Totholz.R:709:43: style: Commas should always have a space after.
        Yha.klass[j,2,i] <- Yha.klass[j,1,i]*sqrt(
                                          ^
NO COPY: R/BWI3_HR_Totholz.R:709:45: style: Put spaces around all infix operators.
        Yha.klass[j,2,i] <- Yha.klass[j,1,i]*sqrt(
                                           ~^~
NO COPY: R/BWI3_HR_Totholz.R:710:13: style: Put spaces around all infix operators.
          nT/(nT-1)*(sum(xy[,(1+j)]^2)/sum(xy[,(1+j)])^2+sum(xy$x^2)/sum(xy$x)^2
           ~^~
NO COPY: R/BWI3_HR_Totholz.R:710:14: style: Place a space before left parenthesis, except in a function call.
          nT/(nT-1)*(sum(xy[,(1+j)]^2)/sum(xy[,(1+j)])^2+sum(xy$x^2)/sum(xy$x)^2
             ^
NO COPY: R/BWI3_HR_Totholz.R:710:17: style: Put spaces around all infix operators.
          nT/(nT-1)*(sum(xy[,(1+j)]^2)/sum(xy[,(1+j)])^2+sum(xy$x^2)/sum(xy$x)^2
               ~^~
NO COPY: R/BWI3_HR_Totholz.R:710:20: style: Put spaces around all infix operators.
          nT/(nT-1)*(sum(xy[,(1+j)]^2)/sum(xy[,(1+j)])^2+sum(xy$x^2)/sum(xy$x)^2
                  ~^~
NO COPY: R/BWI3_HR_Totholz.R:710:21: style: Place a space before left parenthesis, except in a function call.
          nT/(nT-1)*(sum(xy[,(1+j)]^2)/sum(xy[,(1+j)])^2+sum(xy$x^2)/sum(xy$x)^2
                    ^
NO COPY: R/BWI3_HR_Totholz.R:710:30: style: Commas should always have a space after.
          nT/(nT-1)*(sum(xy[,(1+j)]^2)/sum(xy[,(1+j)])^2+sum(xy$x^2)/sum(xy$x)^2
                             ^
NO COPY: R/BWI3_HR_Totholz.R:710:30: style: Place a space before left parenthesis, except in a function call.
          nT/(nT-1)*(sum(xy[,(1+j)]^2)/sum(xy[,(1+j)])^2+sum(xy$x^2)/sum(xy$x)^2
                             ^
NO COPY: R/BWI3_HR_Totholz.R:710:32: style: Put spaces around all infix operators.
          nT/(nT-1)*(sum(xy[,(1+j)]^2)/sum(xy[,(1+j)])^2+sum(xy$x^2)/sum(xy$x)^2
                              ~^~
NO COPY: R/BWI3_HR_Totholz.R:710:36: style: Put spaces around all infix operators.
          nT/(nT-1)*(sum(xy[,(1+j)]^2)/sum(xy[,(1+j)])^2+sum(xy$x^2)/sum(xy$x)^2
                                  ~^~
NO COPY: R/BWI3_HR_Totholz.R:710:39: style: Put spaces around all infix operators.
          nT/(nT-1)*(sum(xy[,(1+j)]^2)/sum(xy[,(1+j)])^2+sum(xy$x^2)/sum(xy$x)^2
                                     ~^~
NO COPY: R/BWI3_HR_Totholz.R:710:48: style: Commas should always have a space after.
          nT/(nT-1)*(sum(xy[,(1+j)]^2)/sum(xy[,(1+j)])^2+sum(xy$x^2)/sum(xy$x)^2
                                               ^
NO COPY: R/BWI3_HR_Totholz.R:710:48: style: Place a space before left parenthesis, except in a function call.
          nT/(nT-1)*(sum(xy[,(1+j)]^2)/sum(xy[,(1+j)])^2+sum(xy$x^2)/sum(xy$x)^2
                                               ^
NO COPY: R/BWI3_HR_Totholz.R:710:50: style: Put spaces around all infix operators.
          nT/(nT-1)*(sum(xy[,(1+j)]^2)/sum(xy[,(1+j)])^2+sum(xy$x^2)/sum(xy$x)^2
                                                ~^~
NO COPY: R/BWI3_HR_Totholz.R:710:55: style: Put spaces around all infix operators.
          nT/(nT-1)*(sum(xy[,(1+j)]^2)/sum(xy[,(1+j)])^2+sum(xy$x^2)/sum(xy$x)^2
                                                     ~^~
NO COPY: R/BWI3_HR_Totholz.R:710:57: style: Put spaces around all infix operators.
          nT/(nT-1)*(sum(xy[,(1+j)]^2)/sum(xy[,(1+j)])^2+sum(xy$x^2)/sum(xy$x)^2
                                                       ~^~
NO COPY: R/BWI3_HR_Totholz.R:710:66: style: Put spaces around all infix operators.
          nT/(nT-1)*(sum(xy[,(1+j)]^2)/sum(xy[,(1+j)])^2+sum(xy$x^2)/sum(xy$x)^2
                                                                ~^~
NO COPY: R/BWI3_HR_Totholz.R:710:69: style: Put spaces around all infix operators.
          nT/(nT-1)*(sum(xy[,(1+j)]^2)/sum(xy[,(1+j)])^2+sum(xy$x^2)/sum(xy$x)^2
                                                                   ~^~
NO COPY: R/BWI3_HR_Totholz.R:710:79: style: Put spaces around all infix operators.
          nT/(nT-1)*(sum(xy[,(1+j)]^2)/sum(xy[,(1+j)])^2+sum(xy$x^2)/sum(xy$x)^2
                                                                             ~^~
NO COPY: R/BWI3_HR_Totholz.R:711:30: style: Put spaces around all infix operators.
                             -2*sum(xy[,(1+j)]*xy$x)/sum(xy[,(1+j)])/sum(xy$x)))
                             ^~
NO COPY: R/BWI3_HR_Totholz.R:711:32: style: Put spaces around all infix operators.
                             -2*sum(xy[,(1+j)]*xy$x)/sum(xy[,(1+j)])/sum(xy$x)))
                              ~^~
NO COPY: R/BWI3_HR_Totholz.R:711:41: style: Commas should always have a space after.
                             -2*sum(xy[,(1+j)]*xy$x)/sum(xy[,(1+j)])/sum(xy$x)))
                                        ^
NO COPY: R/BWI3_HR_Totholz.R:711:41: style: Place a space before left parenthesis, except in a function call.
                             -2*sum(xy[,(1+j)]*xy$x)/sum(xy[,(1+j)])/sum(xy$x)))
                                        ^
NO COPY: R/BWI3_HR_Totholz.R:711:43: style: Put spaces around all infix operators.
                             -2*sum(xy[,(1+j)]*xy$x)/sum(xy[,(1+j)])/sum(xy$x)))
                                         ~^~
NO COPY: R/BWI3_HR_Totholz.R:711:47: style: Put spaces around all infix operators.
                             -2*sum(xy[,(1+j)]*xy$x)/sum(xy[,(1+j)])/sum(xy$x)))
                                             ~^~
NO COPY: R/BWI3_HR_Totholz.R:711:53: style: Put spaces around all infix operators.
                             -2*sum(xy[,(1+j)]*xy$x)/sum(xy[,(1+j)])/sum(xy$x)))
                                                   ~^~
NO COPY: R/BWI3_HR_Totholz.R:711:62: style: Commas should always have a space after.
                             -2*sum(xy[,(1+j)]*xy$x)/sum(xy[,(1+j)])/sum(xy$x)))
                                                             ^
NO COPY: R/BWI3_HR_Totholz.R:711:62: style: Place a space before left parenthesis, except in a function call.
                             -2*sum(xy[,(1+j)]*xy$x)/sum(xy[,(1+j)])/sum(xy$x)))
                                                             ^
NO COPY: R/BWI3_HR_Totholz.R:711:64: style: Put spaces around all infix operators.
                             -2*sum(xy[,(1+j)]*xy$x)/sum(xy[,(1+j)])/sum(xy$x)))
                                                              ~^~
NO COPY: R/BWI3_HR_Totholz.R:711:69: style: Put spaces around all infix operators.
                             -2*sum(xy[,(1+j)]*xy$x)/sum(xy[,(1+j)])/sum(xy$x)))
                                                                   ~^~
NO COPY: R/BWI3_HR_Totholz.R:715:14: style: Trailing whitespace is superfluous.
  }#End for i 
             ^
NO COPY: R/BWI3_HR_Totholz.R:720:20: style: Commas should always have a space after.
  a <- regexpr("/",totholz$bemerk[1],fixed=T)
                   ^
NO COPY: R/BWI3_HR_Totholz.R:720:38: style: Commas should always have a space after.
  a <- regexpr("/",totholz$bemerk[1],fixed=T)
                                     ^
NO COPY: R/BWI3_HR_Totholz.R:720:43: style: Put spaces around all infix operators.
  a <- regexpr("/",totholz$bemerk[1],fixed=T)
                                         ~^~
NO COPY: R/BWI3_HR_Totholz.R:722:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  version.totholz.b  <- substr(as.character(totholz$bemerk[1]),a,b)
  ^~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:722:3: warning: local variable 'version.totholz.b' assigned but may not be used
  version.totholz.b  <- substr(as.character(totholz$bemerk[1]),a,b)
  ^~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:722:64: style: Commas should always have a space after.
  version.totholz.b  <- substr(as.character(totholz$bemerk[1]),a,b)
                                                               ^
NO COPY: R/BWI3_HR_Totholz.R:722:66: style: Commas should always have a space after.
  version.totholz.b  <- substr(as.character(totholz$bemerk[1]),a,b)
                                                                 ^
NO COPY: R/BWI3_HR_Totholz.R:723:20: style: Put spaces around all infix operators.
  Log <- list(Datum=Sys.time(),
                  ~^~
NO COPY: R/BWI3_HR_Totholz.R:724:24: style: Put spaces around all infix operators.
      Version.totholz.b=substr(as.character(totholz$bemerk[1]),a,b))
                      ~^~
NO COPY: R/BWI3_HR_Totholz.R:724:64: style: Commas should always have a space after.
      Version.totholz.b=substr(as.character(totholz$bemerk[1]),a,b))
                                                               ^
NO COPY: R/BWI3_HR_Totholz.R:724:66: style: Commas should always have a space after.
      Version.totholz.b=substr(as.character(totholz$bemerk[1]),a,b))
                                                                 ^
NO COPY: R/BWI3_HR_Totholz.R:725:14: style: Put spaces around all infix operators.
  if (klass.k==1)
            ~^~~
NO COPY: R/BWI3_HR_Totholz.R:726:3: style: Opening curly braces should never go on their own line and should always be followed by a new line.
  {
  ^
NO COPY: R/BWI3_HR_Totholz.R:729:3: style: Opening curly braces should never go on their own line and should always be followed by a new line.
  {
  ^
NO COPY: R/BWI3_HR_Totholz.R:730:24: style: Commas should always have a space after.
    Klass.Kat <- rep(0,klass.k)
                       ^
NO COPY: R/BWI3_HR_Totholz.R:732:5: style: Opening curly braces should never go on their own line and should always be followed by a new line.
    {
    ^
NO COPY: R/BWI3_HR_Totholz.R:733:51: style: Commas should always have a space after.
      Klass.Kat[i] <- paste(unlist(klass[[2]][i]),collapse=",")
                                                  ^
NO COPY: R/BWI3_HR_Totholz.R:733:59: style: Put spaces around all infix operators.
      Klass.Kat[i] <- paste(unlist(klass[[2]][i]),collapse=",")
                                                         ~^~
NO COPY: R/BWI3_HR_Totholz.R:736:18: style: Put spaces around all infix operators.
  return(list(Log=Log, Stratum=auswahl, nTE=n.te.s, HBF=T.hbf, se.HBF=se.T.hbf,
                ~^~
NO COPY: R/BWI3_HR_Totholz.R:736:31: style: Put spaces around all infix operators.
  return(list(Log=Log, Stratum=auswahl, nTE=n.te.s, HBF=T.hbf, se.HBF=se.T.hbf,
                             ~^~
NO COPY: R/BWI3_HR_Totholz.R:736:44: style: Put spaces around all infix operators.
  return(list(Log=Log, Stratum=auswahl, nTE=n.te.s, HBF=T.hbf, se.HBF=se.T.hbf,
                                          ~^~
NO COPY: R/BWI3_HR_Totholz.R:736:45: style: Words within variable and function names should be separated by '_' rather than '.'.
  return(list(Log=Log, Stratum=auswahl, nTE=n.te.s, HBF=T.hbf, se.HBF=se.T.hbf,
                                            ^~~~~~
NO COPY: R/BWI3_HR_Totholz.R:736:56: style: Put spaces around all infix operators.
  return(list(Log=Log, Stratum=auswahl, nTE=n.te.s, HBF=T.hbf, se.HBF=se.T.hbf,
                                                      ~^~
NO COPY: R/BWI3_HR_Totholz.R:736:70: style: Put spaces around all infix operators.
  return(list(Log=Log, Stratum=auswahl, nTE=n.te.s, HBF=T.hbf, se.HBF=se.T.hbf,
                                                                    ~^~
NO COPY: R/BWI3_HR_Totholz.R:736:71: style: Words within variable and function names should be separated by '_' rather than '.'.
  return(list(Log=Log, Stratum=auswahl, nTE=n.te.s, HBF=T.hbf, se.HBF=se.T.hbf,
                                                                      ^~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:737:56: style: Commas should always have a space after.
              Klass.Attr = ifelse(is.na(klass[[1]][1]),"Gesamt",klass$attr),
                                                       ^
NO COPY: R/BWI3_HR_Totholz.R:737:65: style: Commas should always have a space after.
              Klass.Attr = ifelse(is.na(klass[[1]][1]),"Gesamt",klass$attr),
                                                                ^
NO COPY: R/BWI3_HR_Totholz.R:738:24: style: Put spaces around all infix operators.
              Klass.Kat=Klass.Kat,
                      ~^~
NO COPY: R/BWI3_HR_Totholz.R:739:27: style: Put spaces around all infix operators.
              T.ThVN.klass=Y.klass,
                         ~^~
NO COPY: R/BWI3_HR_Totholz.R:740:28: style: Put spaces around all infix operators.
              ThVN.ha.klass=Yha.klass,
                          ~^~
NO COPY: R/BWI3_HR_Totholz.R:741:23: style: Put spaces around all infix operators.
              nT.klass=nT.klass))
                     ~^~
NO COPY: R/BWI3_HR_Totholz.R:741:24: style: Variable and function names should be all lowercase.
              nT.klass=nT.klass))
                       ^~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:748:3: style: Place a space before left parenthesis, except in a function call.
if(F)
  ^
NO COPY: R/BWI3_HR_Totholz.R:749:1: style: Opening curly braces should never go on their own line and should always be followed by a new line.
{
^
NO COPY: R/BWI3_HR_Totholz.R:751:21: style: Put spaces around all infix operators.
  auswahl <- list(Wa=c(3,5),Begehbar=1)
                   ~^~
NO COPY: R/BWI3_HR_Totholz.R:751:26: style: Commas should always have a space after.
  auswahl <- list(Wa=c(3,5),Begehbar=1)
                         ^
NO COPY: R/BWI3_HR_Totholz.R:751:29: style: Commas should always have a space after.
  auswahl <- list(Wa=c(3,5),Begehbar=1)
                            ^
NO COPY: R/BWI3_HR_Totholz.R:751:37: style: Put spaces around all infix operators.
  auswahl <- list(Wa=c(3,5),Begehbar=1)
                                   ~^~
NO COPY: R/BWI3_HR_Totholz.R:752:24: style: Put spaces around all infix operators.
  D.klass <- list(D.unt=0,D.ob=500,D.b=500)
                      ~^~
NO COPY: R/BWI3_HR_Totholz.R:752:27: style: Commas should always have a space after.
  D.klass <- list(D.unt=0,D.ob=500,D.b=500)
                          ^
NO COPY: R/BWI3_HR_Totholz.R:752:31: style: Put spaces around all infix operators.
  D.klass <- list(D.unt=0,D.ob=500,D.b=500)
                             ~^~
NO COPY: R/BWI3_HR_Totholz.R:752:36: style: Commas should always have a space after.
  D.klass <- list(D.unt=0,D.ob=500,D.b=500)
                                   ^
NO COPY: R/BWI3_HR_Totholz.R:752:39: style: Put spaces around all infix operators.
  D.klass <- list(D.unt=0,D.ob=500,D.b=500)
                                     ~^~
NO COPY: R/BWI3_HR_Totholz.R:753:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  th.gw.3 <-
  ^~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:754:1: style: lines should not be more than 80 characters.
    Totholz.bagr.art.zg.stratum.fun(totholz.3,ecken.3,trakte.3,3,A,D.klass,auswahl)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:754:47: style: Commas should always have a space after.
    Totholz.bagr.art.zg.stratum.fun(totholz.3,ecken.3,trakte.3,3,A,D.klass,auswahl)
                                              ^
NO COPY: R/BWI3_HR_Totholz.R:754:55: style: Commas should always have a space after.
    Totholz.bagr.art.zg.stratum.fun(totholz.3,ecken.3,trakte.3,3,A,D.klass,auswahl)
                                                      ^
NO COPY: R/BWI3_HR_Totholz.R:754:64: style: Commas should always have a space after.
    Totholz.bagr.art.zg.stratum.fun(totholz.3,ecken.3,trakte.3,3,A,D.klass,auswahl)
                                                               ^
NO COPY: R/BWI3_HR_Totholz.R:754:66: style: Commas should always have a space after.
    Totholz.bagr.art.zg.stratum.fun(totholz.3,ecken.3,trakte.3,3,A,D.klass,auswahl)
                                                                 ^
NO COPY: R/BWI3_HR_Totholz.R:754:68: style: Commas should always have a space after.
    Totholz.bagr.art.zg.stratum.fun(totholz.3,ecken.3,trakte.3,3,A,D.klass,auswahl)
                                                                   ^
NO COPY: R/BWI3_HR_Totholz.R:754:76: style: Commas should always have a space after.
    Totholz.bagr.art.zg.stratum.fun(totholz.3,ecken.3,trakte.3,3,A,D.klass,auswahl)
                                                                           ^
NO COPY: R/BWI3_HR_Totholz.R:755:1: style: Trailing whitespace is superfluous.
    
^~~~
NO COPY: R/BWI3_HR_Totholz.R:756:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  th.gw.2 <-
  ^~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:757:47: style: Commas should always have a space after.
    Totholz.bagr.art.zg.stratum.fun(totholz.2,ecken.2,trakte.2,2,A.12,D.klass,
                                              ^
NO COPY: R/BWI3_HR_Totholz.R:757:55: style: Commas should always have a space after.
    Totholz.bagr.art.zg.stratum.fun(totholz.2,ecken.2,trakte.2,2,A.12,D.klass,
                                                      ^
NO COPY: R/BWI3_HR_Totholz.R:757:64: style: Commas should always have a space after.
    Totholz.bagr.art.zg.stratum.fun(totholz.2,ecken.2,trakte.2,2,A.12,D.klass,
                                                               ^
NO COPY: R/BWI3_HR_Totholz.R:757:66: style: Commas should always have a space after.
    Totholz.bagr.art.zg.stratum.fun(totholz.2,ecken.2,trakte.2,2,A.12,D.klass,
                                                                 ^
NO COPY: R/BWI3_HR_Totholz.R:757:71: style: Commas should always have a space after.
    Totholz.bagr.art.zg.stratum.fun(totholz.2,ecken.2,trakte.2,2,A.12,D.klass,
                                                                      ^
NO COPY: R/BWI3_HR_Totholz.R:758:18: style: Put spaces around all infix operators.
          list(Wa=c(1:3),Begehbar=1))
                ~^~
NO COPY: R/BWI3_HR_Totholz.R:758:26: style: Commas should always have a space after.
          list(Wa=c(1:3),Begehbar=1))
                         ^
NO COPY: R/BWI3_HR_Totholz.R:758:34: style: Put spaces around all infix operators.
          list(Wa=c(1:3),Begehbar=1))
                                ~^~
NO COPY: R/BWI3_HR_Totholz.R:759:1: style: Trailing whitespace is superfluous.
      
^~~~~~
NO COPY: R/BWI3_HR_Totholz.R:761:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  th.gw.ges.3 <- Totholz.Tart.stratum.fun(totholz.3,ecken.3,trakte.3,3,3,
  ^~~~~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:761:53: style: Commas should always have a space after.
  th.gw.ges.3 <- Totholz.Tart.stratum.fun(totholz.3,ecken.3,trakte.3,3,3,
                                                    ^
NO COPY: R/BWI3_HR_Totholz.R:761:61: style: Commas should always have a space after.
  th.gw.ges.3 <- Totholz.Tart.stratum.fun(totholz.3,ecken.3,trakte.3,3,3,
                                                            ^
NO COPY: R/BWI3_HR_Totholz.R:761:70: style: Commas should always have a space after.
  th.gw.ges.3 <- Totholz.Tart.stratum.fun(totholz.3,ecken.3,trakte.3,3,3,
                                                                     ^
NO COPY: R/BWI3_HR_Totholz.R:761:72: style: Commas should always have a space after.
  th.gw.ges.3 <- Totholz.Tart.stratum.fun(totholz.3,ecken.3,trakte.3,3,3,
                                                                       ^
NO COPY: R/BWI3_HR_Totholz.R:762:22: style: Commas should always have a space after.
        list(c(11:13,2:5)),A, auswahl)
                     ^
NO COPY: R/BWI3_HR_Totholz.R:762:28: style: Commas should always have a space after.
        list(c(11:13,2:5)),A, auswahl)
                           ^
NO COPY: R/BWI3_HR_Totholz.R:764:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  th.gw.lg.st.so.3 <- Totholz.Tart.stratum.fun(totholz.3,ecken.3,trakte.3,3,3,
  ^~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:764:58: style: Commas should always have a space after.
  th.gw.lg.st.so.3 <- Totholz.Tart.stratum.fun(totholz.3,ecken.3,trakte.3,3,3,
                                                         ^
NO COPY: R/BWI3_HR_Totholz.R:764:66: style: Commas should always have a space after.
  th.gw.lg.st.so.3 <- Totholz.Tart.stratum.fun(totholz.3,ecken.3,trakte.3,3,3,
                                                                 ^
NO COPY: R/BWI3_HR_Totholz.R:764:75: style: Commas should always have a space after.
  th.gw.lg.st.so.3 <- Totholz.Tart.stratum.fun(totholz.3,ecken.3,trakte.3,3,3,
                                                                          ^
NO COPY: R/BWI3_HR_Totholz.R:764:77: style: Commas should always have a space after.
  th.gw.lg.st.so.3 <- Totholz.Tart.stratum.fun(totholz.3,ecken.3,trakte.3,3,3,
                                                                            ^
NO COPY: R/BWI3_HR_Totholz.R:765:23: style: Commas should always have a space after.
        list(c(11:13),c(2,3),c(4,5)),A, auswahl)
                      ^
NO COPY: R/BWI3_HR_Totholz.R:765:27: style: Commas should always have a space after.
        list(c(11:13),c(2,3),c(4,5)),A, auswahl)
                          ^
NO COPY: R/BWI3_HR_Totholz.R:765:30: style: Commas should always have a space after.
        list(c(11:13),c(2,3),c(4,5)),A, auswahl)
                             ^
NO COPY: R/BWI3_HR_Totholz.R:765:34: style: Commas should always have a space after.
        list(c(11:13),c(2,3),c(4,5)),A, auswahl)
                                 ^
NO COPY: R/BWI3_HR_Totholz.R:765:38: style: Commas should always have a space after.
        list(c(11:13),c(2,3),c(4,5)),A, auswahl)
                                     ^
NO COPY: R/BWI3_HR_Totholz.R:767:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  th.gw.tart.3 <- Totholz.Tart.stratum.fun(totholz.3,ecken.3,trakte.3,3,3,
  ^~~~~~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:767:54: style: Commas should always have a space after.
  th.gw.tart.3 <- Totholz.Tart.stratum.fun(totholz.3,ecken.3,trakte.3,3,3,
                                                     ^
NO COPY: R/BWI3_HR_Totholz.R:767:62: style: Commas should always have a space after.
  th.gw.tart.3 <- Totholz.Tart.stratum.fun(totholz.3,ecken.3,trakte.3,3,3,
                                                             ^
NO COPY: R/BWI3_HR_Totholz.R:767:71: style: Commas should always have a space after.
  th.gw.tart.3 <- Totholz.Tart.stratum.fun(totholz.3,ecken.3,trakte.3,3,3,
                                                                      ^
NO COPY: R/BWI3_HR_Totholz.R:767:73: style: Commas should always have a space after.
  th.gw.tart.3 <- Totholz.Tart.stratum.fun(totholz.3,ecken.3,trakte.3,3,3,
                                                                        ^
NO COPY: R/BWI3_HR_Totholz.R:768:20: style: Commas should always have a space after.
        list(c(11),c(12),c(13),c(2),c(3),c(4),c(5)),A, auswahl)
                   ^
NO COPY: R/BWI3_HR_Totholz.R:768:26: style: Commas should always have a space after.
        list(c(11),c(12),c(13),c(2),c(3),c(4),c(5)),A, auswahl)
                         ^
NO COPY: R/BWI3_HR_Totholz.R:768:32: style: Commas should always have a space after.
        list(c(11),c(12),c(13),c(2),c(3),c(4),c(5)),A, auswahl)
                               ^
NO COPY: R/BWI3_HR_Totholz.R:768:37: style: Commas should always have a space after.
        list(c(11),c(12),c(13),c(2),c(3),c(4),c(5)),A, auswahl)
                                    ^
NO COPY: R/BWI3_HR_Totholz.R:768:42: style: Commas should always have a space after.
        list(c(11),c(12),c(13),c(2),c(3),c(4),c(5)),A, auswahl)
                                         ^
NO COPY: R/BWI3_HR_Totholz.R:768:47: style: Commas should always have a space after.
        list(c(11),c(12),c(13),c(2),c(3),c(4),c(5)),A, auswahl)
                                              ^
NO COPY: R/BWI3_HR_Totholz.R:768:53: style: Commas should always have a space after.
        list(c(11),c(12),c(13),c(2),c(3),c(4),c(5)),A, auswahl)
                                                    ^
NO COPY: R/BWI3_HR_Totholz.R:769:1: style: Trailing whitespace is superfluous.
        
^~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:770:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  th.gw.tzg.3 <-  Totholz.klass.stratum.fun(totholz.3,ecken.3,trakte.3,3,3,
  ^~~~~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:770:55: style: Commas should always have a space after.
  th.gw.tzg.3 <-  Totholz.klass.stratum.fun(totholz.3,ecken.3,trakte.3,3,3,
                                                      ^
NO COPY: R/BWI3_HR_Totholz.R:770:63: style: Commas should always have a space after.
  th.gw.tzg.3 <-  Totholz.klass.stratum.fun(totholz.3,ecken.3,trakte.3,3,3,
                                                              ^
NO COPY: R/BWI3_HR_Totholz.R:770:72: style: Commas should always have a space after.
  th.gw.tzg.3 <-  Totholz.klass.stratum.fun(totholz.3,ecken.3,trakte.3,3,3,
                                                                       ^
NO COPY: R/BWI3_HR_Totholz.R:770:74: style: Commas should always have a space after.
  th.gw.tzg.3 <-  Totholz.klass.stratum.fun(totholz.3,ecken.3,trakte.3,3,3,
                                                                         ^
NO COPY: R/BWI3_HR_Totholz.R:771:18: style: Put spaces around all infix operators.
        list(attr="tzg",kat=list(c(1),c(2),c(3),c(4))),A, auswahl)
                ~^~
NO COPY: R/BWI3_HR_Totholz.R:771:25: style: Commas should always have a space after.
        list(attr="tzg",kat=list(c(1),c(2),c(3),c(4))),A, auswahl)
                        ^
NO COPY: R/BWI3_HR_Totholz.R:771:28: style: Put spaces around all infix operators.
        list(attr="tzg",kat=list(c(1),c(2),c(3),c(4))),A, auswahl)
                          ~^~
NO COPY: R/BWI3_HR_Totholz.R:771:39: style: Commas should always have a space after.
        list(attr="tzg",kat=list(c(1),c(2),c(3),c(4))),A, auswahl)
                                      ^
NO COPY: R/BWI3_HR_Totholz.R:771:44: style: Commas should always have a space after.
        list(attr="tzg",kat=list(c(1),c(2),c(3),c(4))),A, auswahl)
                                           ^
NO COPY: R/BWI3_HR_Totholz.R:771:49: style: Commas should always have a space after.
        list(attr="tzg",kat=list(c(1),c(2),c(3),c(4))),A, auswahl)
                                                ^
NO COPY: R/BWI3_HR_Totholz.R:771:56: style: Commas should always have a space after.
        list(attr="tzg",kat=list(c(1),c(2),c(3),c(4))),A, auswahl)
                                                       ^
NO COPY: R/BWI3_HR_Totholz.R:772:1: style: Trailing whitespace is superfluous.
        
^~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:773:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  th.gw.tbagr.3 <-  Totholz.klass.stratum.fun(totholz.3,ecken.3,trakte.3,3,3,
  ^~~~~~~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:773:57: style: Commas should always have a space after.
  th.gw.tbagr.3 <-  Totholz.klass.stratum.fun(totholz.3,ecken.3,trakte.3,3,3,
                                                        ^
NO COPY: R/BWI3_HR_Totholz.R:773:65: style: Commas should always have a space after.
  th.gw.tbagr.3 <-  Totholz.klass.stratum.fun(totholz.3,ecken.3,trakte.3,3,3,
                                                                ^
NO COPY: R/BWI3_HR_Totholz.R:773:74: style: Commas should always have a space after.
  th.gw.tbagr.3 <-  Totholz.klass.stratum.fun(totholz.3,ecken.3,trakte.3,3,3,
                                                                         ^
NO COPY: R/BWI3_HR_Totholz.R:773:76: style: Commas should always have a space after.
  th.gw.tbagr.3 <-  Totholz.klass.stratum.fun(totholz.3,ecken.3,trakte.3,3,3,
                                                                           ^
NO COPY: R/BWI3_HR_Totholz.R:774:18: style: Put spaces around all infix operators.
        list(attr="tbagr",kat=list(c(1),c(2),c(3))),A, auswahl)
                ~^~
NO COPY: R/BWI3_HR_Totholz.R:774:27: style: Commas should always have a space after.
        list(attr="tbagr",kat=list(c(1),c(2),c(3))),A, auswahl)
                          ^
NO COPY: R/BWI3_HR_Totholz.R:774:30: style: Put spaces around all infix operators.
        list(attr="tbagr",kat=list(c(1),c(2),c(3))),A, auswahl)
                            ~^~
NO COPY: R/BWI3_HR_Totholz.R:774:41: style: Commas should always have a space after.
        list(attr="tbagr",kat=list(c(1),c(2),c(3))),A, auswahl)
                                        ^
NO COPY: R/BWI3_HR_Totholz.R:774:46: style: Commas should always have a space after.
        list(attr="tbagr",kat=list(c(1),c(2),c(3))),A, auswahl)
                                             ^
NO COPY: R/BWI3_HR_Totholz.R:774:53: style: Commas should always have a space after.
        list(attr="tbagr",kat=list(c(1),c(2),c(3))),A, auswahl)
                                                    ^
NO COPY: R/BWI3_HR_Totholz.R:775:1: style: Trailing whitespace is superfluous.
        
^~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:776:1: style: lines should not be more than 80 characters.
  th.gw.tartgrp.ges.3 <-  Totholz.klass.stratum.fun(totholz.3,ecken.3,trakte.3,3,3,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:776:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  th.gw.tartgrp.ges.3 <-  Totholz.klass.stratum.fun(totholz.3,ecken.3,trakte.3,3,3,
  ^~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:776:63: style: Commas should always have a space after.
  th.gw.tartgrp.ges.3 <-  Totholz.klass.stratum.fun(totholz.3,ecken.3,trakte.3,3,3,
                                                              ^
NO COPY: R/BWI3_HR_Totholz.R:776:71: style: Commas should always have a space after.
  th.gw.tartgrp.ges.3 <-  Totholz.klass.stratum.fun(totholz.3,ecken.3,trakte.3,3,3,
                                                                      ^
NO COPY: R/BWI3_HR_Totholz.R:776:80: style: Commas should always have a space after.
  th.gw.tartgrp.ges.3 <-  Totholz.klass.stratum.fun(totholz.3,ecken.3,trakte.3,3,3,
                                                                               ^
NO COPY: R/BWI3_HR_Totholz.R:776:82: style: Commas should always have a space after.
  th.gw.tartgrp.ges.3 <-  Totholz.klass.stratum.fun(totholz.3,ecken.3,trakte.3,3,3,
                                                                                 ^
NO COPY: R/BWI3_HR_Totholz.R:777:18: style: Put spaces around all infix operators.
        list(attr="tart", kat=list(c(11,12,13),c(2,3),c(4,5))),A, auswahl)
                ~^~
NO COPY: R/BWI3_HR_Totholz.R:777:30: style: Put spaces around all infix operators.
        list(attr="tart", kat=list(c(11,12,13),c(2,3),c(4,5))),A, auswahl)
                            ~^~
NO COPY: R/BWI3_HR_Totholz.R:777:41: style: Commas should always have a space after.
        list(attr="tart", kat=list(c(11,12,13),c(2,3),c(4,5))),A, auswahl)
                                        ^
NO COPY: R/BWI3_HR_Totholz.R:777:44: style: Commas should always have a space after.
        list(attr="tart", kat=list(c(11,12,13),c(2,3),c(4,5))),A, auswahl)
                                           ^
NO COPY: R/BWI3_HR_Totholz.R:777:48: style: Commas should always have a space after.
        list(attr="tart", kat=list(c(11,12,13),c(2,3),c(4,5))),A, auswahl)
                                               ^
NO COPY: R/BWI3_HR_Totholz.R:777:52: style: Commas should always have a space after.
        list(attr="tart", kat=list(c(11,12,13),c(2,3),c(4,5))),A, auswahl)
                                                   ^
NO COPY: R/BWI3_HR_Totholz.R:777:55: style: Commas should always have a space after.
        list(attr="tart", kat=list(c(11,12,13),c(2,3),c(4,5))),A, auswahl)
                                                      ^
NO COPY: R/BWI3_HR_Totholz.R:777:59: style: Commas should always have a space after.
        list(attr="tart", kat=list(c(11,12,13),c(2,3),c(4,5))),A, auswahl)
                                                          ^
NO COPY: R/BWI3_HR_Totholz.R:777:64: style: Commas should always have a space after.
        list(attr="tart", kat=list(c(11,12,13),c(2,3),c(4,5))),A, auswahl)
                                                               ^
NO COPY: R/BWI3_HR_Totholz.R:778:1: style: Trailing whitespace is superfluous.
        
^~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:779:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  th.gw.ges.3.n <-  Totholz.klass.stratum.fun(totholz.3,ecken.3,trakte.3,3,3,
  ^~~~~~~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:779:57: style: Commas should always have a space after.
  th.gw.ges.3.n <-  Totholz.klass.stratum.fun(totholz.3,ecken.3,trakte.3,3,3,
                                                        ^
NO COPY: R/BWI3_HR_Totholz.R:779:65: style: Commas should always have a space after.
  th.gw.ges.3.n <-  Totholz.klass.stratum.fun(totholz.3,ecken.3,trakte.3,3,3,
                                                                ^
NO COPY: R/BWI3_HR_Totholz.R:779:74: style: Commas should always have a space after.
  th.gw.ges.3.n <-  Totholz.klass.stratum.fun(totholz.3,ecken.3,trakte.3,3,3,
                                                                         ^
NO COPY: R/BWI3_HR_Totholz.R:779:76: style: Commas should always have a space after.
  th.gw.ges.3.n <-  Totholz.klass.stratum.fun(totholz.3,ecken.3,trakte.3,3,3,
                                                                           ^
NO COPY: R/BWI3_HR_Totholz.R:780:12: style: Commas should always have a space after.
        NA,A, auswahl)
           ^
NO COPY: R/BWI3_HR_Totholz.R:781:1: style: Trailing whitespace is superfluous.
        
^~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:782:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  th.gw.ges.3.n.bwi2krit <-  Totholz.klass.stratum.fun(totholz.3,ecken.3,
  ^~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:782:66: style: Commas should always have a space after.
  th.gw.ges.3.n.bwi2krit <-  Totholz.klass.stratum.fun(totholz.3,ecken.3,
                                                                 ^
NO COPY: R/BWI3_HR_Totholz.R:783:22: style: Commas should always have a space after.
            trakte.3,3,2, NA,A, auswahl)
                     ^
NO COPY: R/BWI3_HR_Totholz.R:783:24: style: Commas should always have a space after.
            trakte.3,3,2, NA,A, auswahl)
                       ^
NO COPY: R/BWI3_HR_Totholz.R:783:30: style: Commas should always have a space after.
            trakte.3,3,2, NA,A, auswahl)
                             ^
NO COPY: R/BWI3_HR_Totholz.R:784:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: R/BWI3_HR_Totholz.R:785:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  th.stw.ges.3.n.bwi2krit <-  Totholz.klass.stratum.fun(totholz.3,ecken.3,
  ^~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:785:67: style: Commas should always have a space after.
  th.stw.ges.3.n.bwi2krit <-  Totholz.klass.stratum.fun(totholz.3,ecken.3,
                                                                  ^
NO COPY: R/BWI3_HR_Totholz.R:786:22: style: Commas should always have a space after.
            trakte.3,3,2, NA,A, list(Wa=c(3,5),Begehbar=1, EigArt="StW"))
                     ^
NO COPY: R/BWI3_HR_Totholz.R:786:24: style: Commas should always have a space after.
            trakte.3,3,2, NA,A, list(Wa=c(3,5),Begehbar=1, EigArt="StW"))
                       ^
NO COPY: R/BWI3_HR_Totholz.R:786:30: style: Commas should always have a space after.
            trakte.3,3,2, NA,A, list(Wa=c(3,5),Begehbar=1, EigArt="StW"))
                             ^
NO COPY: R/BWI3_HR_Totholz.R:786:40: style: Put spaces around all infix operators.
            trakte.3,3,2, NA,A, list(Wa=c(3,5),Begehbar=1, EigArt="StW"))
                                      ~^~
NO COPY: R/BWI3_HR_Totholz.R:786:45: style: Commas should always have a space after.
            trakte.3,3,2, NA,A, list(Wa=c(3,5),Begehbar=1, EigArt="StW"))
                                            ^
NO COPY: R/BWI3_HR_Totholz.R:786:48: style: Commas should always have a space after.
            trakte.3,3,2, NA,A, list(Wa=c(3,5),Begehbar=1, EigArt="StW"))
                                               ^
NO COPY: R/BWI3_HR_Totholz.R:786:56: style: Put spaces around all infix operators.
            trakte.3,3,2, NA,A, list(Wa=c(3,5),Begehbar=1, EigArt="StW"))
                                                      ~^~
NO COPY: R/BWI3_HR_Totholz.R:786:66: style: Put spaces around all infix operators.
            trakte.3,3,2, NA,A, list(Wa=c(3,5),Begehbar=1, EigArt="StW"))
                                                                ~^~
NO COPY: R/BWI3_HR_Totholz.R:787:1: style: Trailing whitespace is superfluous.
            
^~~~~~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:788:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  th.stw.ges.3.n <-  Totholz.klass.stratum.fun(totholz.3,ecken.3,trakte.3,3,3,
  ^~~~~~~~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:788:58: style: Commas should always have a space after.
  th.stw.ges.3.n <-  Totholz.klass.stratum.fun(totholz.3,ecken.3,trakte.3,3,3,
                                                         ^
NO COPY: R/BWI3_HR_Totholz.R:788:66: style: Commas should always have a space after.
  th.stw.ges.3.n <-  Totholz.klass.stratum.fun(totholz.3,ecken.3,trakte.3,3,3,
                                                                 ^
NO COPY: R/BWI3_HR_Totholz.R:788:75: style: Commas should always have a space after.
  th.stw.ges.3.n <-  Totholz.klass.stratum.fun(totholz.3,ecken.3,trakte.3,3,3,
                                                                          ^
NO COPY: R/BWI3_HR_Totholz.R:788:77: style: Commas should always have a space after.
  th.stw.ges.3.n <-  Totholz.klass.stratum.fun(totholz.3,ecken.3,trakte.3,3,3,
                                                                            ^
NO COPY: R/BWI3_HR_Totholz.R:789:12: style: Commas should always have a space after.
        NA,A, list(Wa=c(3,5),Begehbar=1, EigArt="StW"))
           ^
NO COPY: R/BWI3_HR_Totholz.R:789:22: style: Put spaces around all infix operators.
        NA,A, list(Wa=c(3,5),Begehbar=1, EigArt="StW"))
                    ~^~
NO COPY: R/BWI3_HR_Totholz.R:789:27: style: Commas should always have a space after.
        NA,A, list(Wa=c(3,5),Begehbar=1, EigArt="StW"))
                          ^
NO COPY: R/BWI3_HR_Totholz.R:789:30: style: Commas should always have a space after.
        NA,A, list(Wa=c(3,5),Begehbar=1, EigArt="StW"))
                             ^
NO COPY: R/BWI3_HR_Totholz.R:789:38: style: Put spaces around all infix operators.
        NA,A, list(Wa=c(3,5),Begehbar=1, EigArt="StW"))
                                    ~^~
NO COPY: R/BWI3_HR_Totholz.R:789:48: style: Put spaces around all infix operators.
        NA,A, list(Wa=c(3,5),Begehbar=1, EigArt="StW"))
                                              ~^~
NO COPY: R/BWI3_HR_Totholz.R:790:1: style: Trailing whitespace is superfluous.
        
^~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:791:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  th.kw.ges.3.n <-  Totholz.klass.stratum.fun(totholz.3,ecken.3,trakte.3,3,3,
  ^~~~~~~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:791:57: style: Commas should always have a space after.
  th.kw.ges.3.n <-  Totholz.klass.stratum.fun(totholz.3,ecken.3,trakte.3,3,3,
                                                        ^
NO COPY: R/BWI3_HR_Totholz.R:791:65: style: Commas should always have a space after.
  th.kw.ges.3.n <-  Totholz.klass.stratum.fun(totholz.3,ecken.3,trakte.3,3,3,
                                                                ^
NO COPY: R/BWI3_HR_Totholz.R:791:74: style: Commas should always have a space after.
  th.kw.ges.3.n <-  Totholz.klass.stratum.fun(totholz.3,ecken.3,trakte.3,3,3,
                                                                         ^
NO COPY: R/BWI3_HR_Totholz.R:791:76: style: Commas should always have a space after.
  th.kw.ges.3.n <-  Totholz.klass.stratum.fun(totholz.3,ecken.3,trakte.3,3,3,
                                                                           ^
NO COPY: R/BWI3_HR_Totholz.R:792:12: style: Commas should always have a space after.
        NA,A, list(Wa=c(3,5),Begehbar=1, EigArt="KW"))
           ^
NO COPY: R/BWI3_HR_Totholz.R:792:22: style: Put spaces around all infix operators.
        NA,A, list(Wa=c(3,5),Begehbar=1, EigArt="KW"))
                    ~^~
NO COPY: R/BWI3_HR_Totholz.R:792:27: style: Commas should always have a space after.
        NA,A, list(Wa=c(3,5),Begehbar=1, EigArt="KW"))
                          ^
NO COPY: R/BWI3_HR_Totholz.R:792:30: style: Commas should always have a space after.
        NA,A, list(Wa=c(3,5),Begehbar=1, EigArt="KW"))
                             ^
NO COPY: R/BWI3_HR_Totholz.R:792:38: style: Put spaces around all infix operators.
        NA,A, list(Wa=c(3,5),Begehbar=1, EigArt="KW"))
                                    ~^~
NO COPY: R/BWI3_HR_Totholz.R:792:48: style: Put spaces around all infix operators.
        NA,A, list(Wa=c(3,5),Begehbar=1, EigArt="KW"))
                                              ~^~
NO COPY: R/BWI3_HR_Totholz.R:793:1: style: Trailing whitespace is superfluous.
        
^~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:794:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  th.kw.ges.3.n.bwi2krit <-  Totholz.klass.stratum.fun(totholz.3,ecken.3,
  ^~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:794:66: style: Commas should always have a space after.
  th.kw.ges.3.n.bwi2krit <-  Totholz.klass.stratum.fun(totholz.3,ecken.3,
                                                                 ^
NO COPY: R/BWI3_HR_Totholz.R:795:18: style: Commas should always have a space after.
        trakte.3,3,2, NA,A, list(Wa=c(3,5),Begehbar=1, EigArt="KW"))
                 ^
NO COPY: R/BWI3_HR_Totholz.R:795:20: style: Commas should always have a space after.
        trakte.3,3,2, NA,A, list(Wa=c(3,5),Begehbar=1, EigArt="KW"))
                   ^
NO COPY: R/BWI3_HR_Totholz.R:795:26: style: Commas should always have a space after.
        trakte.3,3,2, NA,A, list(Wa=c(3,5),Begehbar=1, EigArt="KW"))
                         ^
NO COPY: R/BWI3_HR_Totholz.R:795:36: style: Put spaces around all infix operators.
        trakte.3,3,2, NA,A, list(Wa=c(3,5),Begehbar=1, EigArt="KW"))
                                  ~^~
NO COPY: R/BWI3_HR_Totholz.R:795:41: style: Commas should always have a space after.
        trakte.3,3,2, NA,A, list(Wa=c(3,5),Begehbar=1, EigArt="KW"))
                                        ^
NO COPY: R/BWI3_HR_Totholz.R:795:44: style: Commas should always have a space after.
        trakte.3,3,2, NA,A, list(Wa=c(3,5),Begehbar=1, EigArt="KW"))
                                           ^
NO COPY: R/BWI3_HR_Totholz.R:795:52: style: Put spaces around all infix operators.
        trakte.3,3,2, NA,A, list(Wa=c(3,5),Begehbar=1, EigArt="KW"))
                                                  ~^~
NO COPY: R/BWI3_HR_Totholz.R:795:62: style: Put spaces around all infix operators.
        trakte.3,3,2, NA,A, list(Wa=c(3,5),Begehbar=1, EigArt="KW"))
                                                            ~^~
NO COPY: R/BWI3_HR_Totholz.R:796:1: style: Trailing whitespace is superfluous.
        
^~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:797:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  th.pw.ges.3.n <-  Totholz.klass.stratum.fun(totholz.3,ecken.3,trakte.3,3,3,
  ^~~~~~~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:797:57: style: Commas should always have a space after.
  th.pw.ges.3.n <-  Totholz.klass.stratum.fun(totholz.3,ecken.3,trakte.3,3,3,
                                                        ^
NO COPY: R/BWI3_HR_Totholz.R:797:65: style: Commas should always have a space after.
  th.pw.ges.3.n <-  Totholz.klass.stratum.fun(totholz.3,ecken.3,trakte.3,3,3,
                                                                ^
NO COPY: R/BWI3_HR_Totholz.R:797:74: style: Commas should always have a space after.
  th.pw.ges.3.n <-  Totholz.klass.stratum.fun(totholz.3,ecken.3,trakte.3,3,3,
                                                                         ^
NO COPY: R/BWI3_HR_Totholz.R:797:76: style: Commas should always have a space after.
  th.pw.ges.3.n <-  Totholz.klass.stratum.fun(totholz.3,ecken.3,trakte.3,3,3,
                                                                           ^
NO COPY: R/BWI3_HR_Totholz.R:798:12: style: Commas should always have a space after.
        NA,A, list(Wa=c(3,5),Begehbar=1, EigArt="PW"))
           ^
NO COPY: R/BWI3_HR_Totholz.R:798:22: style: Put spaces around all infix operators.
        NA,A, list(Wa=c(3,5),Begehbar=1, EigArt="PW"))
                    ~^~
NO COPY: R/BWI3_HR_Totholz.R:798:27: style: Commas should always have a space after.
        NA,A, list(Wa=c(3,5),Begehbar=1, EigArt="PW"))
                          ^
NO COPY: R/BWI3_HR_Totholz.R:798:30: style: Commas should always have a space after.
        NA,A, list(Wa=c(3,5),Begehbar=1, EigArt="PW"))
                             ^
NO COPY: R/BWI3_HR_Totholz.R:798:38: style: Put spaces around all infix operators.
        NA,A, list(Wa=c(3,5),Begehbar=1, EigArt="PW"))
                                    ~^~
NO COPY: R/BWI3_HR_Totholz.R:798:48: style: Put spaces around all infix operators.
        NA,A, list(Wa=c(3,5),Begehbar=1, EigArt="PW"))
                                              ~^~
NO COPY: R/BWI3_HR_Totholz.R:799:1: style: Trailing whitespace is superfluous.
        
^~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:800:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  th.pw.ges.3.n.bwi2krit <-  Totholz.klass.stratum.fun(totholz.3,ecken.3,
  ^~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:800:66: style: Commas should always have a space after.
  th.pw.ges.3.n.bwi2krit <-  Totholz.klass.stratum.fun(totholz.3,ecken.3,
                                                                 ^
NO COPY: R/BWI3_HR_Totholz.R:801:18: style: Commas should always have a space after.
        trakte.3,3,2, NA,A, list(Wa=c(3,5),Begehbar=1, EigArt="PW"))
                 ^
NO COPY: R/BWI3_HR_Totholz.R:801:20: style: Commas should always have a space after.
        trakte.3,3,2, NA,A, list(Wa=c(3,5),Begehbar=1, EigArt="PW"))
                   ^
NO COPY: R/BWI3_HR_Totholz.R:801:26: style: Commas should always have a space after.
        trakte.3,3,2, NA,A, list(Wa=c(3,5),Begehbar=1, EigArt="PW"))
                         ^
NO COPY: R/BWI3_HR_Totholz.R:801:36: style: Put spaces around all infix operators.
        trakte.3,3,2, NA,A, list(Wa=c(3,5),Begehbar=1, EigArt="PW"))
                                  ~^~
NO COPY: R/BWI3_HR_Totholz.R:801:41: style: Commas should always have a space after.
        trakte.3,3,2, NA,A, list(Wa=c(3,5),Begehbar=1, EigArt="PW"))
                                        ^
NO COPY: R/BWI3_HR_Totholz.R:801:44: style: Commas should always have a space after.
        trakte.3,3,2, NA,A, list(Wa=c(3,5),Begehbar=1, EigArt="PW"))
                                           ^
NO COPY: R/BWI3_HR_Totholz.R:801:52: style: Put spaces around all infix operators.
        trakte.3,3,2, NA,A, list(Wa=c(3,5),Begehbar=1, EigArt="PW"))
                                                  ~^~
NO COPY: R/BWI3_HR_Totholz.R:801:62: style: Put spaces around all infix operators.
        trakte.3,3,2, NA,A, list(Wa=c(3,5),Begehbar=1, EigArt="PW"))
                                                            ~^~
NO COPY: R/BWI3_HR_Totholz.R:802:1: style: Trailing whitespace is superfluous.
        
^~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:803:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  th.gw.ges.2 <-  Totholz.klass.stratum.fun(totholz.2,ecken.2,trakte.2,2,2,
  ^~~~~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:803:55: style: Commas should always have a space after.
  th.gw.ges.2 <-  Totholz.klass.stratum.fun(totholz.2,ecken.2,trakte.2,2,2,
                                                      ^
NO COPY: R/BWI3_HR_Totholz.R:803:63: style: Commas should always have a space after.
  th.gw.ges.2 <-  Totholz.klass.stratum.fun(totholz.2,ecken.2,trakte.2,2,2,
                                                              ^
NO COPY: R/BWI3_HR_Totholz.R:803:72: style: Commas should always have a space after.
  th.gw.ges.2 <-  Totholz.klass.stratum.fun(totholz.2,ecken.2,trakte.2,2,2,
                                                                       ^
NO COPY: R/BWI3_HR_Totholz.R:803:74: style: Commas should always have a space after.
  th.gw.ges.2 <-  Totholz.klass.stratum.fun(totholz.2,ecken.2,trakte.2,2,2,
                                                                         ^
NO COPY: R/BWI3_HR_Totholz.R:804:12: style: Commas should always have a space after.
        NA,A.12, list(Wa=c(1:3),Begehbar=1))
           ^
NO COPY: R/BWI3_HR_Totholz.R:804:25: style: Put spaces around all infix operators.
        NA,A.12, list(Wa=c(1:3),Begehbar=1))
                       ~^~
NO COPY: R/BWI3_HR_Totholz.R:804:33: style: Commas should always have a space after.
        NA,A.12, list(Wa=c(1:3),Begehbar=1))
                                ^
NO COPY: R/BWI3_HR_Totholz.R:804:41: style: Put spaces around all infix operators.
        NA,A.12, list(Wa=c(1:3),Begehbar=1))
                                       ~^~
NO COPY: R/BWI3_HR_Totholz.R:805:1: style: Trailing whitespace is superfluous.
        
^~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:806:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  th.stw.ges.2 <-  Totholz.klass.stratum.fun(totholz.2,ecken.2,trakte.2,2,2,
  ^~~~~~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:806:56: style: Commas should always have a space after.
  th.stw.ges.2 <-  Totholz.klass.stratum.fun(totholz.2,ecken.2,trakte.2,2,2,
                                                       ^
NO COPY: R/BWI3_HR_Totholz.R:806:64: style: Commas should always have a space after.
  th.stw.ges.2 <-  Totholz.klass.stratum.fun(totholz.2,ecken.2,trakte.2,2,2,
                                                               ^
NO COPY: R/BWI3_HR_Totholz.R:806:73: style: Commas should always have a space after.
  th.stw.ges.2 <-  Totholz.klass.stratum.fun(totholz.2,ecken.2,trakte.2,2,2,
                                                                        ^
NO COPY: R/BWI3_HR_Totholz.R:806:75: style: Commas should always have a space after.
  th.stw.ges.2 <-  Totholz.klass.stratum.fun(totholz.2,ecken.2,trakte.2,2,2,
                                                                          ^
NO COPY: R/BWI3_HR_Totholz.R:807:12: style: Commas should always have a space after.
        NA,A.12, list(Wa=c(1:3),Begehbar=1,EigArt="StW"))
           ^
NO COPY: R/BWI3_HR_Totholz.R:807:25: style: Put spaces around all infix operators.
        NA,A.12, list(Wa=c(1:3),Begehbar=1,EigArt="StW"))
                       ~^~
NO COPY: R/BWI3_HR_Totholz.R:807:33: style: Commas should always have a space after.
        NA,A.12, list(Wa=c(1:3),Begehbar=1,EigArt="StW"))
                                ^
NO COPY: R/BWI3_HR_Totholz.R:807:41: style: Put spaces around all infix operators.
        NA,A.12, list(Wa=c(1:3),Begehbar=1,EigArt="StW"))
                                       ~^~
NO COPY: R/BWI3_HR_Totholz.R:807:44: style: Commas should always have a space after.
        NA,A.12, list(Wa=c(1:3),Begehbar=1,EigArt="StW"))
                                           ^
NO COPY: R/BWI3_HR_Totholz.R:807:50: style: Put spaces around all infix operators.
        NA,A.12, list(Wa=c(1:3),Begehbar=1,EigArt="StW"))
                                                ~^~
NO COPY: R/BWI3_HR_Totholz.R:808:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: R/BWI3_HR_Totholz.R:809:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  th.kw.ges.2 <-  Totholz.klass.stratum.fun(totholz.2,ecken.2,trakte.2,2,2,
  ^~~~~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:809:55: style: Commas should always have a space after.
  th.kw.ges.2 <-  Totholz.klass.stratum.fun(totholz.2,ecken.2,trakte.2,2,2,
                                                      ^
NO COPY: R/BWI3_HR_Totholz.R:809:63: style: Commas should always have a space after.
  th.kw.ges.2 <-  Totholz.klass.stratum.fun(totholz.2,ecken.2,trakte.2,2,2,
                                                              ^
NO COPY: R/BWI3_HR_Totholz.R:809:72: style: Commas should always have a space after.
  th.kw.ges.2 <-  Totholz.klass.stratum.fun(totholz.2,ecken.2,trakte.2,2,2,
                                                                       ^
NO COPY: R/BWI3_HR_Totholz.R:809:74: style: Commas should always have a space after.
  th.kw.ges.2 <-  Totholz.klass.stratum.fun(totholz.2,ecken.2,trakte.2,2,2,
                                                                         ^
NO COPY: R/BWI3_HR_Totholz.R:810:12: style: Commas should always have a space after.
        NA,A.12, list(Wa=c(1:3),Begehbar=1,EigArt="KW"))
           ^
NO COPY: R/BWI3_HR_Totholz.R:810:25: style: Put spaces around all infix operators.
        NA,A.12, list(Wa=c(1:3),Begehbar=1,EigArt="KW"))
                       ~^~
NO COPY: R/BWI3_HR_Totholz.R:810:33: style: Commas should always have a space after.
        NA,A.12, list(Wa=c(1:3),Begehbar=1,EigArt="KW"))
                                ^
NO COPY: R/BWI3_HR_Totholz.R:810:41: style: Put spaces around all infix operators.
        NA,A.12, list(Wa=c(1:3),Begehbar=1,EigArt="KW"))
                                       ~^~
NO COPY: R/BWI3_HR_Totholz.R:810:44: style: Commas should always have a space after.
        NA,A.12, list(Wa=c(1:3),Begehbar=1,EigArt="KW"))
                                           ^
NO COPY: R/BWI3_HR_Totholz.R:810:50: style: Put spaces around all infix operators.
        NA,A.12, list(Wa=c(1:3),Begehbar=1,EigArt="KW"))
                                                ~^~
NO COPY: R/BWI3_HR_Totholz.R:811:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: R/BWI3_HR_Totholz.R:812:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  th.pw.ges.2 <-  Totholz.klass.stratum.fun(totholz.2,ecken.2,trakte.2,2,2,
  ^~~~~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:812:55: style: Commas should always have a space after.
  th.pw.ges.2 <-  Totholz.klass.stratum.fun(totholz.2,ecken.2,trakte.2,2,2,
                                                      ^
NO COPY: R/BWI3_HR_Totholz.R:812:63: style: Commas should always have a space after.
  th.pw.ges.2 <-  Totholz.klass.stratum.fun(totholz.2,ecken.2,trakte.2,2,2,
                                                              ^
NO COPY: R/BWI3_HR_Totholz.R:812:72: style: Commas should always have a space after.
  th.pw.ges.2 <-  Totholz.klass.stratum.fun(totholz.2,ecken.2,trakte.2,2,2,
                                                                       ^
NO COPY: R/BWI3_HR_Totholz.R:812:74: style: Commas should always have a space after.
  th.pw.ges.2 <-  Totholz.klass.stratum.fun(totholz.2,ecken.2,trakte.2,2,2,
                                                                         ^
NO COPY: R/BWI3_HR_Totholz.R:813:12: style: Commas should always have a space after.
        NA,A.12, list(Wa=c(1:3),Begehbar=1,EigArt="PW"))
           ^
NO COPY: R/BWI3_HR_Totholz.R:813:25: style: Put spaces around all infix operators.
        NA,A.12, list(Wa=c(1:3),Begehbar=1,EigArt="PW"))
                       ~^~
NO COPY: R/BWI3_HR_Totholz.R:813:33: style: Commas should always have a space after.
        NA,A.12, list(Wa=c(1:3),Begehbar=1,EigArt="PW"))
                                ^
NO COPY: R/BWI3_HR_Totholz.R:813:41: style: Put spaces around all infix operators.
        NA,A.12, list(Wa=c(1:3),Begehbar=1,EigArt="PW"))
                                       ~^~
NO COPY: R/BWI3_HR_Totholz.R:813:44: style: Commas should always have a space after.
        NA,A.12, list(Wa=c(1:3),Begehbar=1,EigArt="PW"))
                                           ^
NO COPY: R/BWI3_HR_Totholz.R:813:50: style: Put spaces around all infix operators.
        NA,A.12, list(Wa=c(1:3),Begehbar=1,EigArt="PW"))
                                                ~^~
NO COPY: R/BWI3_HR_Totholz.R:814:1: style: Trailing whitespace is superfluous.
        
^~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:815:1: style: lines should not be more than 80 characters.
  th.gw.tbagr.3.bwi2krit <-  Totholz.klass.stratum.fun(totholz.3,ecken.3,trakte.3,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:815:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  th.gw.tbagr.3.bwi2krit <-  Totholz.klass.stratum.fun(totholz.3,ecken.3,trakte.3,
  ^~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:815:66: style: Commas should always have a space after.
  th.gw.tbagr.3.bwi2krit <-  Totholz.klass.stratum.fun(totholz.3,ecken.3,trakte.3,
                                                                 ^
NO COPY: R/BWI3_HR_Totholz.R:815:74: style: Commas should always have a space after.
  th.gw.tbagr.3.bwi2krit <-  Totholz.klass.stratum.fun(totholz.3,ecken.3,trakte.3,
                                                                         ^
NO COPY: R/BWI3_HR_Totholz.R:816:11: style: Commas should always have a space after.
        3,2,list(attr="tbagr",kat=list(c(1),c(2),c(3))),A, auswahl)
          ^
NO COPY: R/BWI3_HR_Totholz.R:816:13: style: Commas should always have a space after.
        3,2,list(attr="tbagr",kat=list(c(1),c(2),c(3))),A, auswahl)
            ^
NO COPY: R/BWI3_HR_Totholz.R:816:22: style: Put spaces around all infix operators.
        3,2,list(attr="tbagr",kat=list(c(1),c(2),c(3))),A, auswahl)
                    ~^~
NO COPY: R/BWI3_HR_Totholz.R:816:31: style: Commas should always have a space after.
        3,2,list(attr="tbagr",kat=list(c(1),c(2),c(3))),A, auswahl)
                              ^
NO COPY: R/BWI3_HR_Totholz.R:816:34: style: Put spaces around all infix operators.
        3,2,list(attr="tbagr",kat=list(c(1),c(2),c(3))),A, auswahl)
                                ~^~
NO COPY: R/BWI3_HR_Totholz.R:816:45: style: Commas should always have a space after.
        3,2,list(attr="tbagr",kat=list(c(1),c(2),c(3))),A, auswahl)
                                            ^
NO COPY: R/BWI3_HR_Totholz.R:816:50: style: Commas should always have a space after.
        3,2,list(attr="tbagr",kat=list(c(1),c(2),c(3))),A, auswahl)
                                                 ^
NO COPY: R/BWI3_HR_Totholz.R:816:57: style: Commas should always have a space after.
        3,2,list(attr="tbagr",kat=list(c(1),c(2),c(3))),A, auswahl)
                                                        ^
NO COPY: R/BWI3_HR_Totholz.R:817:1: style: Trailing whitespace is superfluous.
        
^~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:818:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  th.gw.dkl.3 <-  Totholz.klass.stratum.fun(totholz.3,ecken.3,trakte.3,3,3,
  ^~~~~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:818:55: style: Commas should always have a space after.
  th.gw.dkl.3 <-  Totholz.klass.stratum.fun(totholz.3,ecken.3,trakte.3,3,3,
                                                      ^
NO COPY: R/BWI3_HR_Totholz.R:818:63: style: Commas should always have a space after.
  th.gw.dkl.3 <-  Totholz.klass.stratum.fun(totholz.3,ecken.3,trakte.3,3,3,
                                                              ^
NO COPY: R/BWI3_HR_Totholz.R:818:72: style: Commas should always have a space after.
  th.gw.dkl.3 <-  Totholz.klass.stratum.fun(totholz.3,ecken.3,trakte.3,3,3,
                                                                       ^
NO COPY: R/BWI3_HR_Totholz.R:818:74: style: Commas should always have a space after.
  th.gw.dkl.3 <-  Totholz.klass.stratum.fun(totholz.3,ecken.3,trakte.3,3,3,
                                                                         ^
NO COPY: R/BWI3_HR_Totholz.R:819:18: style: Put spaces around all infix operators.
        list(attr="dm",kat=c(0,50,10)),A, auswahl)
                ~^~
NO COPY: R/BWI3_HR_Totholz.R:819:24: style: Commas should always have a space after.
        list(attr="dm",kat=c(0,50,10)),A, auswahl)
                       ^
NO COPY: R/BWI3_HR_Totholz.R:819:27: style: Put spaces around all infix operators.
        list(attr="dm",kat=c(0,50,10)),A, auswahl)
                         ~^~
NO COPY: R/BWI3_HR_Totholz.R:819:32: style: Commas should always have a space after.
        list(attr="dm",kat=c(0,50,10)),A, auswahl)
                               ^
NO COPY: R/BWI3_HR_Totholz.R:819:35: style: Commas should always have a space after.
        list(attr="dm",kat=c(0,50,10)),A, auswahl)
                                  ^
NO COPY: R/BWI3_HR_Totholz.R:819:40: style: Commas should always have a space after.
        list(attr="dm",kat=c(0,50,10)),A, auswahl)
                                       ^
NO COPY: R/BWI3_HR_Totholz.R:820:1: style: Trailing whitespace is superfluous.
        
^~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:822:1: style: lines should not be more than 80 characters.
  th.gw.dkl.stth.3 <-  Totholz.klass.stratum.fun(totholz.3[totholz.3$Tart%in%c(2,3), TRUE],
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:822:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  th.gw.dkl.stth.3 <-  Totholz.klass.stratum.fun(totholz.3[totholz.3$Tart%in%c(2,3), TRUE],
  ^~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:822:74: style: Put spaces around all infix operators.
  th.gw.dkl.stth.3 <-  Totholz.klass.stratum.fun(totholz.3[totholz.3$Tart%in%c(2,3), TRUE],
                                                                        ~^~~~~
NO COPY: R/BWI3_HR_Totholz.R:822:82: style: Commas should always have a space after.
  th.gw.dkl.stth.3 <-  Totholz.klass.stratum.fun(totholz.3[totholz.3$Tart%in%c(2,3), TRUE],
                                                                                 ^
NO COPY: R/BWI3_HR_Totholz.R:823:17: style: Commas should always have a space after.
        ecken.3,trakte.3,3,3, list(attr="dm",kat=c(10,50,10)),A, auswahl)
                ^
NO COPY: R/BWI3_HR_Totholz.R:823:26: style: Commas should always have a space after.
        ecken.3,trakte.3,3,3, list(attr="dm",kat=c(10,50,10)),A, auswahl)
                         ^
NO COPY: R/BWI3_HR_Totholz.R:823:28: style: Commas should always have a space after.
        ecken.3,trakte.3,3,3, list(attr="dm",kat=c(10,50,10)),A, auswahl)
                           ^
NO COPY: R/BWI3_HR_Totholz.R:823:40: style: Put spaces around all infix operators.
        ecken.3,trakte.3,3,3, list(attr="dm",kat=c(10,50,10)),A, auswahl)
                                      ~^~
NO COPY: R/BWI3_HR_Totholz.R:823:46: style: Commas should always have a space after.
        ecken.3,trakte.3,3,3, list(attr="dm",kat=c(10,50,10)),A, auswahl)
                                             ^
NO COPY: R/BWI3_HR_Totholz.R:823:49: style: Put spaces around all infix operators.
        ecken.3,trakte.3,3,3, list(attr="dm",kat=c(10,50,10)),A, auswahl)
                                               ~^~
NO COPY: R/BWI3_HR_Totholz.R:823:55: style: Commas should always have a space after.
        ecken.3,trakte.3,3,3, list(attr="dm",kat=c(10,50,10)),A, auswahl)
                                                      ^
NO COPY: R/BWI3_HR_Totholz.R:823:58: style: Commas should always have a space after.
        ecken.3,trakte.3,3,3, list(attr="dm",kat=c(10,50,10)),A, auswahl)
                                                         ^
NO COPY: R/BWI3_HR_Totholz.R:823:63: style: Commas should always have a space after.
        ecken.3,trakte.3,3,3, list(attr="dm",kat=c(10,50,10)),A, auswahl)
                                                              ^
NO COPY: R/BWI3_HR_Totholz.R:825:1: style: lines should not be more than 80 characters.
  th.gw.dkl.lgth.3 <-  Totholz.klass.stratum.fun(totholz.3[totholz.3$Tart%in%c(11:13), TRUE],
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:825:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  th.gw.dkl.lgth.3 <-  Totholz.klass.stratum.fun(totholz.3[totholz.3$Tart%in%c(11:13), TRUE],
  ^~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:825:74: style: Put spaces around all infix operators.
  th.gw.dkl.lgth.3 <-  Totholz.klass.stratum.fun(totholz.3[totholz.3$Tart%in%c(11:13), TRUE],
                                                                        ~^~~~~
NO COPY: R/BWI3_HR_Totholz.R:826:17: style: Commas should always have a space after.
        ecken.3,trakte.3,3,3, list(attr="dm",kat=c(0,50,10)),A, auswahl)
                ^
NO COPY: R/BWI3_HR_Totholz.R:826:26: style: Commas should always have a space after.
        ecken.3,trakte.3,3,3, list(attr="dm",kat=c(0,50,10)),A, auswahl)
                         ^
NO COPY: R/BWI3_HR_Totholz.R:826:28: style: Commas should always have a space after.
        ecken.3,trakte.3,3,3, list(attr="dm",kat=c(0,50,10)),A, auswahl)
                           ^
NO COPY: R/BWI3_HR_Totholz.R:826:40: style: Put spaces around all infix operators.
        ecken.3,trakte.3,3,3, list(attr="dm",kat=c(0,50,10)),A, auswahl)
                                      ~^~
NO COPY: R/BWI3_HR_Totholz.R:826:46: style: Commas should always have a space after.
        ecken.3,trakte.3,3,3, list(attr="dm",kat=c(0,50,10)),A, auswahl)
                                             ^
NO COPY: R/BWI3_HR_Totholz.R:826:49: style: Put spaces around all infix operators.
        ecken.3,trakte.3,3,3, list(attr="dm",kat=c(0,50,10)),A, auswahl)
                                               ~^~
NO COPY: R/BWI3_HR_Totholz.R:826:54: style: Commas should always have a space after.
        ecken.3,trakte.3,3,3, list(attr="dm",kat=c(0,50,10)),A, auswahl)
                                                     ^
NO COPY: R/BWI3_HR_Totholz.R:826:57: style: Commas should always have a space after.
        ecken.3,trakte.3,3,3, list(attr="dm",kat=c(0,50,10)),A, auswahl)
                                                        ^
NO COPY: R/BWI3_HR_Totholz.R:826:62: style: Commas should always have a space after.
        ecken.3,trakte.3,3,3, list(attr="dm",kat=c(0,50,10)),A, auswahl)
                                                             ^
NO COPY: R/BWI3_HR_Totholz.R:827:1: style: Trailing whitespace is superfluous.
        
^~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:830:45: style: Put spaces around all infix operators.
  totholz.3$Tvol.ti <- ifelse(totholz.3$Tart==13,
                                           ~^~~
NO COPY: R/BWI3_HR_Totholz.R:831:7: style: Put spaces around all infix operators.
    pi*((totholz.3$Tbd+totholz.3$Tsd)/400)^2*totholz.3$Tl,totholz.3$Tvol)
     ~^~
NO COPY: R/BWI3_HR_Totholz.R:831:8: style: Place a space before left parenthesis, except in a function call.
    pi*((totholz.3$Tbd+totholz.3$Tsd)/400)^2*totholz.3$Tl,totholz.3$Tvol)
       ^
NO COPY: R/BWI3_HR_Totholz.R:831:9: style: Place a space before left parenthesis, except in a function call.
    pi*((totholz.3$Tbd+totholz.3$Tsd)/400)^2*totholz.3$Tl,totholz.3$Tvol)
        ^
NO COPY: R/BWI3_HR_Totholz.R:831:23: style: Put spaces around all infix operators.
    pi*((totholz.3$Tbd+totholz.3$Tsd)/400)^2*totholz.3$Tl,totholz.3$Tvol)
                     ~^~
NO COPY: R/BWI3_HR_Totholz.R:831:38: style: Put spaces around all infix operators.
    pi*((totholz.3$Tbd+totholz.3$Tsd)/400)^2*totholz.3$Tl,totholz.3$Tvol)
                                    ~^~
NO COPY: R/BWI3_HR_Totholz.R:831:43: style: Put spaces around all infix operators.
    pi*((totholz.3$Tbd+totholz.3$Tsd)/400)^2*totholz.3$Tl,totholz.3$Tvol)
                                         ~^~
NO COPY: R/BWI3_HR_Totholz.R:831:45: style: Put spaces around all infix operators.
    pi*((totholz.3$Tbd+totholz.3$Tsd)/400)^2*totholz.3$Tl,totholz.3$Tvol)
                                           ~^~
NO COPY: R/BWI3_HR_Totholz.R:831:59: style: Commas should always have a space after.
    pi*((totholz.3$Tbd+totholz.3$Tsd)/400)^2*totholz.3$Tl,totholz.3$Tvol)
                                                          ^
NO COPY: R/BWI3_HR_Totholz.R:835:38: style: Trailing whitespace is superfluous.
  totholz.3$Tvol <- totholz.3$Tvol.ti 
                                     ^
NO COPY: R/BWI3_HR_Totholz.R:836:1: style: lines should not be more than 80 characters.
  th.gw.ges.3.tvol.ti <-  Totholz.klass.stratum.fun(totholz.3,ecken.3,trakte.3,3,3,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:836:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  th.gw.ges.3.tvol.ti <-  Totholz.klass.stratum.fun(totholz.3,ecken.3,trakte.3,3,3,
  ^~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:836:63: style: Commas should always have a space after.
  th.gw.ges.3.tvol.ti <-  Totholz.klass.stratum.fun(totholz.3,ecken.3,trakte.3,3,3,
                                                              ^
NO COPY: R/BWI3_HR_Totholz.R:836:71: style: Commas should always have a space after.
  th.gw.ges.3.tvol.ti <-  Totholz.klass.stratum.fun(totholz.3,ecken.3,trakte.3,3,3,
                                                                      ^
NO COPY: R/BWI3_HR_Totholz.R:836:80: style: Commas should always have a space after.
  th.gw.ges.3.tvol.ti <-  Totholz.klass.stratum.fun(totholz.3,ecken.3,trakte.3,3,3,
                                                                               ^
NO COPY: R/BWI3_HR_Totholz.R:836:82: style: Commas should always have a space after.
  th.gw.ges.3.tvol.ti <-  Totholz.klass.stratum.fun(totholz.3,ecken.3,trakte.3,3,3,
                                                                                 ^
NO COPY: R/BWI3_HR_Totholz.R:837:12: style: Commas should always have a space after.
        NA,A, auswahl)
           ^
NO COPY: R/BWI3_HR_Totholz.R:838:1: style: lines should not be more than 80 characters.
  th.gw.ges.3.tvol.ti.n <-  Totholz.klass.stratum.fun(totholz.3,ecken.3,trakte.3,3,3,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:838:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  th.gw.ges.3.tvol.ti.n <-  Totholz.klass.stratum.fun(totholz.3,ecken.3,trakte.3,3,3,
  ^~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR_Totholz.R:838:65: style: Commas should always have a space after.
  th.gw.ges.3.tvol.ti.n <-  Totholz.klass.stratum.fun(totholz.3,ecken.3,trakte.3,3,3,
                                                                ^
NO COPY: R/BWI3_HR_Totholz.R:838:73: style: Commas should always have a space after.
  th.gw.ges.3.tvol.ti.n <-  Totholz.klass.stratum.fun(totholz.3,ecken.3,trakte.3,3,3,
                                                                        ^
NO COPY: R/BWI3_HR_Totholz.R:838:82: style: Commas should always have a space after.
  th.gw.ges.3.tvol.ti.n <-  Totholz.klass.stratum.fun(totholz.3,ecken.3,trakte.3,3,3,
                                                                                 ^
NO COPY: R/BWI3_HR_Totholz.R:838:84: style: Commas should always have a space after.
  th.gw.ges.3.tvol.ti.n <-  Totholz.klass.stratum.fun(totholz.3,ecken.3,trakte.3,3,3,
                                                                                   ^
NO COPY: R/BWI3_HR_Totholz.R:839:12: style: Commas should always have a space after.
        NA,A, auswahl)
           ^
NO COPY: R/BWI3_HR_Totholz.R:840:1: style: Trailing whitespace is superfluous.
        
^~~~~~~~
NO COPY: R/BWI3_HR.R:14:4: style: Commented code should be removed.
#		"BWI3/Programme/HR/BWI3_HR_Funktionen_v3_xxx.r"
   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:117:40: style: Commas should always have a space after.
fvbn.kreis.fun.1 <- function(kreiscode,eig.list,bwi.list,bagr,
                                       ^
NO COPY: R/BWI3_HR.R:117:49: style: Commas should always have a space after.
fvbn.kreis.fun.1 <- function(kreiscode,eig.list,bwi.list,bagr,
                                                ^
NO COPY: R/BWI3_HR.R:117:58: style: Commas should always have a space after.
fvbn.kreis.fun.1 <- function(kreiscode,eig.list,bwi.list,bagr,
                                                         ^
NO COPY: R/BWI3_HR.R:131:21: style: Put spaces around all infix operators.
  auswahl <- list(Wa=c(3,5),Begehbar=1,Kreis=kreiscode)
                   ~^~
NO COPY: R/BWI3_HR.R:131:26: style: Commas should always have a space after.
  auswahl <- list(Wa=c(3,5),Begehbar=1,Kreis=kreiscode)
                         ^
NO COPY: R/BWI3_HR.R:131:29: style: Commas should always have a space after.
  auswahl <- list(Wa=c(3,5),Begehbar=1,Kreis=kreiscode)
                            ^
NO COPY: R/BWI3_HR.R:131:37: style: Put spaces around all infix operators.
  auswahl <- list(Wa=c(3,5),Begehbar=1,Kreis=kreiscode)
                                   ~^~
NO COPY: R/BWI3_HR.R:131:40: style: Commas should always have a space after.
  auswahl <- list(Wa=c(3,5),Begehbar=1,Kreis=kreiscode)
                                       ^
NO COPY: R/BWI3_HR.R:131:45: style: Put spaces around all infix operators.
  auswahl <- list(Wa=c(3,5),Begehbar=1,Kreis=kreiscode)
                                           ~^~
NO COPY: R/BWI3_HR.R:134:25: style: Commas should always have a space after.
  eig.list <- sub("STW","StW",eig.list)
                        ^
NO COPY: R/BWI3_HR.R:134:31: style: Commas should always have a space after.
  eig.list <- sub("STW","StW",eig.list)
                              ^
NO COPY: R/BWI3_HR.R:136:5: style: Put spaces around all infix operators.
  l <-length(bwi.list)
    ^~~
NO COPY: R/BWI3_HR.R:137:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  fvbn.bagr.krs   <- list()
  ^~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:138:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: R/BWI3_HR.R:140:3: style: Opening curly braces should never go on their own line and should always be followed by a new line.
  {
  ^
NO COPY: R/BWI3_HR.R:141:20: style: Put spaces around all infix operators.
    if (eig.list[i]=="OEW")
                  ~^~~
NO COPY: R/BWI3_HR.R:142:7: style: Opening curly braces should never go on their own line and should always be followed by a new line.
      {auswahl.i$EigArt=c("BW","StW","KW")} else
      ^
NO COPY: R/BWI3_HR.R:142:18: style: Variable and function names should be all lowercase.
      {auswahl.i$EigArt=c("BW","StW","KW")} else
                 ^~~~~~
NO COPY: R/BWI3_HR.R:142:24: style: Use <-, not =, for assignment.
      {auswahl.i$EigArt=c("BW","StW","KW")} else
                       ^
NO COPY: R/BWI3_HR.R:142:24: style: Put spaces around all infix operators.
      {auswahl.i$EigArt=c("BW","StW","KW")} else
                      ~^~
NO COPY: R/BWI3_HR.R:142:32: style: Commas should always have a space after.
      {auswahl.i$EigArt=c("BW","StW","KW")} else
                               ^
NO COPY: R/BWI3_HR.R:142:38: style: Commas should always have a space after.
      {auswahl.i$EigArt=c("BW","StW","KW")} else
                                     ^
NO COPY: R/BWI3_HR.R:142:43: style: Closing curly-braces should always be on their own line, unless it's followed by an else.
      {auswahl.i$EigArt=c("BW","StW","KW")} else
                                          ^
NO COPY: R/BWI3_HR.R:143:22: style: Put spaces around all infix operators.
      if (eig.list[i]%in%c("GPW","MPW","KPW"))
                    ~^~~~~
NO COPY: R/BWI3_HR.R:143:34: style: Commas should always have a space after.
      if (eig.list[i]%in%c("GPW","MPW","KPW"))
                                 ^
NO COPY: R/BWI3_HR.R:143:40: style: Commas should always have a space after.
      if (eig.list[i]%in%c("GPW","MPW","KPW"))
                                       ^
NO COPY: R/BWI3_HR.R:144:9: style: Opening curly braces should never go on their own line and should always be followed by a new line.
        {auswahl.i$EigArt2=eig.list[i]}else
        ^
NO COPY: R/BWI3_HR.R:144:20: style: Variable and function names should be all lowercase.
        {auswahl.i$EigArt2=eig.list[i]}else
                   ^~~~~~~
NO COPY: R/BWI3_HR.R:144:27: style: Use <-, not =, for assignment.
        {auswahl.i$EigArt2=eig.list[i]}else
                          ^
NO COPY: R/BWI3_HR.R:144:27: style: Put spaces around all infix operators.
        {auswahl.i$EigArt2=eig.list[i]}else
                         ~^~
NO COPY: R/BWI3_HR.R:144:39: style: Closing curly-braces should always be on their own line, unless it's followed by an else.
        {auswahl.i$EigArt2=eig.list[i]}else
                                      ^
NO COPY: R/BWI3_HR.R:145:24: style: Put spaces around all infix operators.
        if (eig.list[i]%in%c("BW","StW","KW","PW"))
                      ~^~~~~
NO COPY: R/BWI3_HR.R:145:35: style: Commas should always have a space after.
        if (eig.list[i]%in%c("BW","StW","KW","PW"))
                                  ^
NO COPY: R/BWI3_HR.R:145:41: style: Commas should always have a space after.
        if (eig.list[i]%in%c("BW","StW","KW","PW"))
                                        ^
NO COPY: R/BWI3_HR.R:145:46: style: Commas should always have a space after.
        if (eig.list[i]%in%c("BW","StW","KW","PW"))
                                             ^
NO COPY: R/BWI3_HR.R:146:9: style: Opening curly braces should never go on their own line and should always be followed by a new line.
        {auswahl.i$EigArt=eig.list[i]}
        ^
NO COPY: R/BWI3_HR.R:146:20: style: Variable and function names should be all lowercase.
        {auswahl.i$EigArt=eig.list[i]}
                   ^~~~~~
NO COPY: R/BWI3_HR.R:146:26: style: Use <-, not =, for assignment.
        {auswahl.i$EigArt=eig.list[i]}
                         ^
NO COPY: R/BWI3_HR.R:146:26: style: Put spaces around all infix operators.
        {auswahl.i$EigArt=eig.list[i]}
                        ~^~
NO COPY: R/BWI3_HR.R:146:38: style: Closing curly-braces should always be on their own line, unless it's followed by an else.
        {auswahl.i$EigArt=eig.list[i]}
                                     ^
NO COPY: R/BWI3_HR.R:149:5: style: Opening curly braces should never go on their own line and should always be followed by a new line.
    {
    ^
NO COPY: R/BWI3_HR.R:150:22: style: Put spaces around all infix operators.
      if (bwi.list[j]==1)
                    ~^~~
NO COPY: R/BWI3_HR.R:151:7: style: Opening curly braces should never go on their own line and should always be followed by a new line.
      {auswahl.i$Wa=c(1:3);
      ^
NO COPY: R/BWI3_HR.R:151:20: style: Use <-, not =, for assignment.
      {auswahl.i$Wa=c(1:3);
                   ^
NO COPY: R/BWI3_HR.R:151:20: style: Put spaces around all infix operators.
      {auswahl.i$Wa=c(1:3);
                  ~^~
NO COPY: R/BWI3_HR.R:153:29: style: Closing curly-braces should always be on their own line, unless it's followed by an else.
        A.i <- A.12;inv <- 1} else
                            ^
NO COPY: R/BWI3_HR.R:154:24: style: Put spaces around all infix operators.
        if (bwi.list[j]==2)
                      ~^~~
NO COPY: R/BWI3_HR.R:155:9: style: Opening curly braces should never go on their own line and should always be followed by a new line.
        {auswahl.i$Wa=c(1:3);
        ^
NO COPY: R/BWI3_HR.R:155:22: style: Use <-, not =, for assignment.
        {auswahl.i$Wa=c(1:3);
                     ^
NO COPY: R/BWI3_HR.R:155:22: style: Put spaces around all infix operators.
        {auswahl.i$Wa=c(1:3);
                    ~^~
NO COPY: R/BWI3_HR.R:157:32: style: Closing curly-braces should always be on their own line, unless it's followed by an else.
          A.i <- A.12; inv <- 2} else
                               ^
NO COPY: R/BWI3_HR.R:158:11: style: Opening curly braces should never go on their own line and should always be followed by a new line.
          {auswahl.i$Wa=c(3,5);
          ^
NO COPY: R/BWI3_HR.R:158:24: style: Use <-, not =, for assignment.
          {auswahl.i$Wa=c(3,5);
                       ^
NO COPY: R/BWI3_HR.R:158:24: style: Put spaces around all infix operators.
          {auswahl.i$Wa=c(3,5);
                      ~^~
NO COPY: R/BWI3_HR.R:158:29: style: Commas should always have a space after.
          {auswahl.i$Wa=c(3,5);
                            ^
NO COPY: R/BWI3_HR.R:160:31: style: Closing curly-braces should always be on their own line, unless it's followed by an else.
            A.i <- A; inv <- 2}
                              ^
NO COPY: R/BWI3_HR.R:161:18: style: Put spaces around all infix operators.
      index <- (j-1)*k + i
                ~^~
NO COPY: R/BWI3_HR.R:161:21: style: Put spaces around all infix operators.
      index <- (j-1)*k + i
                   ~^~
NO COPY: R/BWI3_HR.R:163:7: style: Words within variable and function names should be separated by '_' rather than '.'.
      fvbn.bagr.krs[[index]] <- FVBN.bagrupp.akl.dkl.stratum.fun.2d(
      ^~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:164:16: style: Commas should always have a space after.
        baeume,ecken,trakte,A.i,inv,bagr,
               ^
NO COPY: R/BWI3_HR.R:164:22: style: Commas should always have a space after.
        baeume,ecken,trakte,A.i,inv,bagr,
                     ^
NO COPY: R/BWI3_HR.R:164:29: style: Commas should always have a space after.
        baeume,ecken,trakte,A.i,inv,bagr,
                            ^
NO COPY: R/BWI3_HR.R:164:33: style: Commas should always have a space after.
        baeume,ecken,trakte,A.i,inv,bagr,
                                ^
NO COPY: R/BWI3_HR.R:164:37: style: Commas should always have a space after.
        baeume,ecken,trakte,A.i,inv,bagr,
                                    ^
NO COPY: R/BWI3_HR.R:165:18: style: Put spaces around all infix operators.
        list(A.ob=500,A.b=500),list(D.unt=0,D.ob=500,D.b=500,Ndh=F),
                ~^~
NO COPY: R/BWI3_HR.R:165:23: style: Commas should always have a space after.
        list(A.ob=500,A.b=500),list(D.unt=0,D.ob=500,D.b=500,Ndh=F),
                      ^
NO COPY: R/BWI3_HR.R:165:26: style: Put spaces around all infix operators.
        list(A.ob=500,A.b=500),list(D.unt=0,D.ob=500,D.b=500,Ndh=F),
                        ~^~
NO COPY: R/BWI3_HR.R:165:32: style: Commas should always have a space after.
        list(A.ob=500,A.b=500),list(D.unt=0,D.ob=500,D.b=500,Ndh=F),
                               ^
NO COPY: R/BWI3_HR.R:165:42: style: Put spaces around all infix operators.
        list(A.ob=500,A.b=500),list(D.unt=0,D.ob=500,D.b=500,Ndh=F),
                                        ~^~
NO COPY: R/BWI3_HR.R:165:45: style: Commas should always have a space after.
        list(A.ob=500,A.b=500),list(D.unt=0,D.ob=500,D.b=500,Ndh=F),
                                            ^
NO COPY: R/BWI3_HR.R:165:49: style: Put spaces around all infix operators.
        list(A.ob=500,A.b=500),list(D.unt=0,D.ob=500,D.b=500,Ndh=F),
                                               ~^~
NO COPY: R/BWI3_HR.R:165:54: style: Commas should always have a space after.
        list(A.ob=500,A.b=500),list(D.unt=0,D.ob=500,D.b=500,Ndh=F),
                                                     ^
NO COPY: R/BWI3_HR.R:165:57: style: Put spaces around all infix operators.
        list(A.ob=500,A.b=500),list(D.unt=0,D.ob=500,D.b=500,Ndh=F),
                                                       ~^~
NO COPY: R/BWI3_HR.R:165:62: style: Commas should always have a space after.
        list(A.ob=500,A.b=500),list(D.unt=0,D.ob=500,D.b=500,Ndh=F),
                                                             ^
NO COPY: R/BWI3_HR.R:165:65: style: Put spaces around all infix operators.
        list(A.ob=500,A.b=500),list(D.unt=0,D.ob=500,D.b=500,Ndh=F),
                                                               ~^~
NO COPY: R/BWI3_HR.R:167:7: style: Words within variable and function names should be separated by '_' rather than '.'.
      fvbn.bagr.krs[[index]]$Kreis <-
      ^~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:168:38: style: Variable and function names should be all lowercase.
          as.character(kreise[kreise$codeKreis==kreiscode,3])
                                     ^~~~~~~~~
NO COPY: R/BWI3_HR.R:168:47: style: Put spaces around all infix operators.
          as.character(kreise[kreise$codeKreis==kreiscode,3])
                                             ~^~~
NO COPY: R/BWI3_HR.R:168:59: style: Commas should always have a space after.
          as.character(kreise[kreise$codeKreis==kreiscode,3])
                                                          ^
NO COPY: R/BWI3_HR.R:169:7: style: Words within variable and function names should be separated by '_' rather than '.'.
      fvbn.bagr.krs[[index]]$Eigentumsart <- eig.list[i]
      ^~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:170:7: style: Words within variable and function names should be separated by '_' rather than '.'.
      fvbn.bagr.krs[[index]]$BWI <- bwi.list[j]
      ^~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:174:10: style: Words within variable and function names should be separated by '_' rather than '.'.
  return(fvbn.bagr.krs)
         ^~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:213:40: style: Commas should always have a space after.
fvbn.stratum.fun.1 <- function(auswahl,eig.list,bwi.list,bagr,
                                       ^
NO COPY: R/BWI3_HR.R:213:49: style: Commas should always have a space after.
fvbn.stratum.fun.1 <- function(auswahl,eig.list,bwi.list,bagr,
                                                ^
NO COPY: R/BWI3_HR.R:213:58: style: Commas should always have a space after.
fvbn.stratum.fun.1 <- function(auswahl,eig.list,bwi.list,bagr,
                                                         ^
NO COPY: R/BWI3_HR.R:226:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: R/BWI3_HR.R:229:25: style: Commas should always have a space after.
  eig.list <- sub("STW","StW",eig.list)
                        ^
NO COPY: R/BWI3_HR.R:229:31: style: Commas should always have a space after.
  eig.list <- sub("STW","StW",eig.list)
                              ^
NO COPY: R/BWI3_HR.R:230:20: style: Trailing whitespace is superfluous.
  #k\u00e4/11.12.14 
                   ^
NO COPY: R/BWI3_HR.R:231:5: style: Put spaces around all infix operators.
  l <-length(bwi.list)
    ^~~
NO COPY: R/BWI3_HR.R:232:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  fvbn.bagr.stratum   <- list()
  ^~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:233:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: R/BWI3_HR.R:235:3: style: Opening curly braces should never go on their own line and should always be followed by a new line.
  {
  ^
NO COPY: R/BWI3_HR.R:237:20: style: Put spaces around all infix operators.
    if (eig.list[i]=="OEW")
                  ~^~~
NO COPY: R/BWI3_HR.R:238:7: style: Opening curly braces should never go on their own line and should always be followed by a new line.
      {auswahl.i$EigArt=c("BW","StW","KW")} else
      ^
NO COPY: R/BWI3_HR.R:238:18: style: Variable and function names should be all lowercase.
      {auswahl.i$EigArt=c("BW","StW","KW")} else
                 ^~~~~~
NO COPY: R/BWI3_HR.R:238:24: style: Use <-, not =, for assignment.
      {auswahl.i$EigArt=c("BW","StW","KW")} else
                       ^
NO COPY: R/BWI3_HR.R:238:24: style: Put spaces around all infix operators.
      {auswahl.i$EigArt=c("BW","StW","KW")} else
                      ~^~
NO COPY: R/BWI3_HR.R:238:32: style: Commas should always have a space after.
      {auswahl.i$EigArt=c("BW","StW","KW")} else
                               ^
NO COPY: R/BWI3_HR.R:238:38: style: Commas should always have a space after.
      {auswahl.i$EigArt=c("BW","StW","KW")} else
                                     ^
NO COPY: R/BWI3_HR.R:238:43: style: Closing curly-braces should always be on their own line, unless it's followed by an else.
      {auswahl.i$EigArt=c("BW","StW","KW")} else
                                          ^
NO COPY: R/BWI3_HR.R:239:22: style: Put spaces around all infix operators.
      if (eig.list[i]%in%c("GPW","MPW","KPW"))
                    ~^~~~~
NO COPY: R/BWI3_HR.R:239:34: style: Commas should always have a space after.
      if (eig.list[i]%in%c("GPW","MPW","KPW"))
                                 ^
NO COPY: R/BWI3_HR.R:239:40: style: Commas should always have a space after.
      if (eig.list[i]%in%c("GPW","MPW","KPW"))
                                       ^
NO COPY: R/BWI3_HR.R:240:9: style: Opening curly braces should never go on their own line and should always be followed by a new line.
        {auswahl.i$EigArt2=eig.list[i]}else
        ^
NO COPY: R/BWI3_HR.R:240:20: style: Variable and function names should be all lowercase.
        {auswahl.i$EigArt2=eig.list[i]}else
                   ^~~~~~~
NO COPY: R/BWI3_HR.R:240:27: style: Use <-, not =, for assignment.
        {auswahl.i$EigArt2=eig.list[i]}else
                          ^
NO COPY: R/BWI3_HR.R:240:27: style: Put spaces around all infix operators.
        {auswahl.i$EigArt2=eig.list[i]}else
                         ~^~
NO COPY: R/BWI3_HR.R:240:39: style: Closing curly-braces should always be on their own line, unless it's followed by an else.
        {auswahl.i$EigArt2=eig.list[i]}else
                                      ^
NO COPY: R/BWI3_HR.R:241:24: style: Put spaces around all infix operators.
        if (eig.list[i]%in%c("BW","StW","KW","PW"))
                      ~^~~~~
NO COPY: R/BWI3_HR.R:241:35: style: Commas should always have a space after.
        if (eig.list[i]%in%c("BW","StW","KW","PW"))
                                  ^
NO COPY: R/BWI3_HR.R:241:41: style: Commas should always have a space after.
        if (eig.list[i]%in%c("BW","StW","KW","PW"))
                                        ^
NO COPY: R/BWI3_HR.R:241:46: style: Commas should always have a space after.
        if (eig.list[i]%in%c("BW","StW","KW","PW"))
                                             ^
NO COPY: R/BWI3_HR.R:242:11: style: Opening curly braces should never go on their own line and should always be followed by a new line.
          {auswahl.i$EigArt=eig.list[i]}
          ^
NO COPY: R/BWI3_HR.R:242:22: style: Variable and function names should be all lowercase.
          {auswahl.i$EigArt=eig.list[i]}
                     ^~~~~~
NO COPY: R/BWI3_HR.R:242:28: style: Use <-, not =, for assignment.
          {auswahl.i$EigArt=eig.list[i]}
                           ^
NO COPY: R/BWI3_HR.R:242:28: style: Put spaces around all infix operators.
          {auswahl.i$EigArt=eig.list[i]}
                          ~^~
NO COPY: R/BWI3_HR.R:242:40: style: Closing curly-braces should always be on their own line, unless it's followed by an else.
          {auswahl.i$EigArt=eig.list[i]}
                                       ^
NO COPY: R/BWI3_HR.R:245:5: style: Opening curly braces should never go on their own line and should always be followed by a new line.
    {
    ^
NO COPY: R/BWI3_HR.R:246:22: style: Put spaces around all infix operators.
      if (bwi.list[j]==1)
                    ~^~~
NO COPY: R/BWI3_HR.R:247:7: style: Opening curly braces should never go on their own line and should always be followed by a new line.
      {auswahl.i$Wa=c(1:3);
      ^
NO COPY: R/BWI3_HR.R:247:20: style: Use <-, not =, for assignment.
      {auswahl.i$Wa=c(1:3);
                   ^
NO COPY: R/BWI3_HR.R:247:20: style: Put spaces around all infix operators.
      {auswahl.i$Wa=c(1:3);
                  ~^~
NO COPY: R/BWI3_HR.R:249:29: style: Closing curly-braces should always be on their own line, unless it's followed by an else.
        A.i <- A.12;inv <- 1} else
                            ^
NO COPY: R/BWI3_HR.R:250:24: style: Put spaces around all infix operators.
        if (bwi.list[j]==2)
                      ~^~~
NO COPY: R/BWI3_HR.R:251:9: style: Opening curly braces should never go on their own line and should always be followed by a new line.
        {auswahl.i$Wa=c(1:3);
        ^
NO COPY: R/BWI3_HR.R:251:22: style: Use <-, not =, for assignment.
        {auswahl.i$Wa=c(1:3);
                     ^
NO COPY: R/BWI3_HR.R:251:22: style: Put spaces around all infix operators.
        {auswahl.i$Wa=c(1:3);
                    ~^~
NO COPY: R/BWI3_HR.R:253:32: style: Closing curly-braces should always be on their own line, unless it's followed by an else.
          A.i <- A.12; inv <- 2} else
                               ^
NO COPY: R/BWI3_HR.R:254:11: style: Opening curly braces should never go on their own line and should always be followed by a new line.
          {auswahl.i$Wa=c(3,5);
          ^
NO COPY: R/BWI3_HR.R:254:24: style: Use <-, not =, for assignment.
          {auswahl.i$Wa=c(3,5);
                       ^
NO COPY: R/BWI3_HR.R:254:24: style: Put spaces around all infix operators.
          {auswahl.i$Wa=c(3,5);
                      ~^~
NO COPY: R/BWI3_HR.R:254:29: style: Commas should always have a space after.
          {auswahl.i$Wa=c(3,5);
                            ^
NO COPY: R/BWI3_HR.R:256:31: style: Closing curly-braces should always be on their own line, unless it's followed by an else.
            A.i <- A; inv <- 2}
                              ^
NO COPY: R/BWI3_HR.R:257:18: style: Put spaces around all infix operators.
      index <- (j-1)*k + i
                ~^~
NO COPY: R/BWI3_HR.R:257:21: style: Put spaces around all infix operators.
      index <- (j-1)*k + i
                   ~^~
NO COPY: R/BWI3_HR.R:259:7: style: Words within variable and function names should be separated by '_' rather than '.'.
      fvbn.bagr.stratum[[index]] <- FVBN.bagrupp.akl.dkl.stratum.fun.2d(
      ^~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:260:16: style: Commas should always have a space after.
        baeume,ecken,trakte,A.i,inv,bagr,
               ^
NO COPY: R/BWI3_HR.R:260:22: style: Commas should always have a space after.
        baeume,ecken,trakte,A.i,inv,bagr,
                     ^
NO COPY: R/BWI3_HR.R:260:29: style: Commas should always have a space after.
        baeume,ecken,trakte,A.i,inv,bagr,
                            ^
NO COPY: R/BWI3_HR.R:260:33: style: Commas should always have a space after.
        baeume,ecken,trakte,A.i,inv,bagr,
                                ^
NO COPY: R/BWI3_HR.R:260:37: style: Commas should always have a space after.
        baeume,ecken,trakte,A.i,inv,bagr,
                                    ^
NO COPY: R/BWI3_HR.R:261:18: style: Put spaces around all infix operators.
        list(A.ob=500,A.b=500),list(D.unt=0,D.ob=500,D.b=500,Ndh=F),
                ~^~
NO COPY: R/BWI3_HR.R:261:23: style: Commas should always have a space after.
        list(A.ob=500,A.b=500),list(D.unt=0,D.ob=500,D.b=500,Ndh=F),
                      ^
NO COPY: R/BWI3_HR.R:261:26: style: Put spaces around all infix operators.
        list(A.ob=500,A.b=500),list(D.unt=0,D.ob=500,D.b=500,Ndh=F),
                        ~^~
NO COPY: R/BWI3_HR.R:261:32: style: Commas should always have a space after.
        list(A.ob=500,A.b=500),list(D.unt=0,D.ob=500,D.b=500,Ndh=F),
                               ^
NO COPY: R/BWI3_HR.R:261:42: style: Put spaces around all infix operators.
        list(A.ob=500,A.b=500),list(D.unt=0,D.ob=500,D.b=500,Ndh=F),
                                        ~^~
NO COPY: R/BWI3_HR.R:261:45: style: Commas should always have a space after.
        list(A.ob=500,A.b=500),list(D.unt=0,D.ob=500,D.b=500,Ndh=F),
                                            ^
NO COPY: R/BWI3_HR.R:261:49: style: Put spaces around all infix operators.
        list(A.ob=500,A.b=500),list(D.unt=0,D.ob=500,D.b=500,Ndh=F),
                                               ~^~
NO COPY: R/BWI3_HR.R:261:54: style: Commas should always have a space after.
        list(A.ob=500,A.b=500),list(D.unt=0,D.ob=500,D.b=500,Ndh=F),
                                                     ^
NO COPY: R/BWI3_HR.R:261:57: style: Put spaces around all infix operators.
        list(A.ob=500,A.b=500),list(D.unt=0,D.ob=500,D.b=500,Ndh=F),
                                                       ~^~
NO COPY: R/BWI3_HR.R:261:62: style: Commas should always have a space after.
        list(A.ob=500,A.b=500),list(D.unt=0,D.ob=500,D.b=500,Ndh=F),
                                                             ^
NO COPY: R/BWI3_HR.R:261:65: style: Put spaces around all infix operators.
        list(A.ob=500,A.b=500),list(D.unt=0,D.ob=500,D.b=500,Ndh=F),
                                                               ~^~
NO COPY: R/BWI3_HR.R:264:7: style: Words within variable and function names should be separated by '_' rather than '.'.
      fvbn.bagr.stratum[[index]]$Eigentumsart <- eig.list[i]
      ^~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:265:7: style: Words within variable and function names should be separated by '_' rather than '.'.
      fvbn.bagr.stratum[[index]]$BWI <- bwi.list[j]
      ^~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:269:10: style: Words within variable and function names should be separated by '_' rather than '.'.
  return(fvbn.bagr.stratum)
         ^~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:314:40: style: Commas should always have a space after.
fvbn.stratum.fun.2 <- function(auswahl,eig.list,bwi.list,bagr,a.klass,d.klass,
                                       ^
NO COPY: R/BWI3_HR.R:314:49: style: Commas should always have a space after.
fvbn.stratum.fun.2 <- function(auswahl,eig.list,bwi.list,bagr,a.klass,d.klass,
                                                ^
NO COPY: R/BWI3_HR.R:314:58: style: Commas should always have a space after.
fvbn.stratum.fun.2 <- function(auswahl,eig.list,bwi.list,bagr,a.klass,d.klass,
                                                         ^
NO COPY: R/BWI3_HR.R:314:63: style: Commas should always have a space after.
fvbn.stratum.fun.2 <- function(auswahl,eig.list,bwi.list,bagr,a.klass,d.klass,
                                                              ^
NO COPY: R/BWI3_HR.R:314:71: style: Commas should always have a space after.
fvbn.stratum.fun.2 <- function(auswahl,eig.list,bwi.list,bagr,a.klass,d.klass,
                                                                      ^
NO COPY: R/BWI3_HR.R:327:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: R/BWI3_HR.R:330:25: style: Commas should always have a space after.
  eig.list <- sub("STW","StW",eig.list)
                        ^
NO COPY: R/BWI3_HR.R:330:31: style: Commas should always have a space after.
  eig.list <- sub("STW","StW",eig.list)
                              ^
NO COPY: R/BWI3_HR.R:332:5: style: Put spaces around all infix operators.
  l <-length(bwi.list)
    ^~~
NO COPY: R/BWI3_HR.R:333:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  fvbn.bagr.stratum   <- list()
  ^~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:334:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: R/BWI3_HR.R:336:3: style: Opening curly braces should never go on their own line and should always be followed by a new line.
  {
  ^
NO COPY: R/BWI3_HR.R:338:20: style: Put spaces around all infix operators.
    if (eig.list[i]=="OEW")
                  ~^~~
NO COPY: R/BWI3_HR.R:339:7: style: Opening curly braces should never go on their own line and should always be followed by a new line.
      {auswahl.i$EigArt=c("BW","StW","KW")} else
      ^
NO COPY: R/BWI3_HR.R:339:18: style: Variable and function names should be all lowercase.
      {auswahl.i$EigArt=c("BW","StW","KW")} else
                 ^~~~~~
NO COPY: R/BWI3_HR.R:339:24: style: Use <-, not =, for assignment.
      {auswahl.i$EigArt=c("BW","StW","KW")} else
                       ^
NO COPY: R/BWI3_HR.R:339:24: style: Put spaces around all infix operators.
      {auswahl.i$EigArt=c("BW","StW","KW")} else
                      ~^~
NO COPY: R/BWI3_HR.R:339:32: style: Commas should always have a space after.
      {auswahl.i$EigArt=c("BW","StW","KW")} else
                               ^
NO COPY: R/BWI3_HR.R:339:38: style: Commas should always have a space after.
      {auswahl.i$EigArt=c("BW","StW","KW")} else
                                     ^
NO COPY: R/BWI3_HR.R:339:43: style: Closing curly-braces should always be on their own line, unless it's followed by an else.
      {auswahl.i$EigArt=c("BW","StW","KW")} else
                                          ^
NO COPY: R/BWI3_HR.R:340:22: style: Put spaces around all infix operators.
      if (eig.list[i]%in%c("GPW","MPW","KPW"))
                    ~^~~~~
NO COPY: R/BWI3_HR.R:340:34: style: Commas should always have a space after.
      if (eig.list[i]%in%c("GPW","MPW","KPW"))
                                 ^
NO COPY: R/BWI3_HR.R:340:40: style: Commas should always have a space after.
      if (eig.list[i]%in%c("GPW","MPW","KPW"))
                                       ^
NO COPY: R/BWI3_HR.R:341:9: style: Opening curly braces should never go on their own line and should always be followed by a new line.
        {auswahl.i$EigArt2=eig.list[i]}else
        ^
NO COPY: R/BWI3_HR.R:341:20: style: Variable and function names should be all lowercase.
        {auswahl.i$EigArt2=eig.list[i]}else
                   ^~~~~~~
NO COPY: R/BWI3_HR.R:341:27: style: Use <-, not =, for assignment.
        {auswahl.i$EigArt2=eig.list[i]}else
                          ^
NO COPY: R/BWI3_HR.R:341:27: style: Put spaces around all infix operators.
        {auswahl.i$EigArt2=eig.list[i]}else
                         ~^~
NO COPY: R/BWI3_HR.R:341:39: style: Closing curly-braces should always be on their own line, unless it's followed by an else.
        {auswahl.i$EigArt2=eig.list[i]}else
                                      ^
NO COPY: R/BWI3_HR.R:342:24: style: Put spaces around all infix operators.
        if (eig.list[i]%in%c("BW","StW","KW","PW"))
                      ~^~~~~
NO COPY: R/BWI3_HR.R:342:35: style: Commas should always have a space after.
        if (eig.list[i]%in%c("BW","StW","KW","PW"))
                                  ^
NO COPY: R/BWI3_HR.R:342:41: style: Commas should always have a space after.
        if (eig.list[i]%in%c("BW","StW","KW","PW"))
                                        ^
NO COPY: R/BWI3_HR.R:342:46: style: Commas should always have a space after.
        if (eig.list[i]%in%c("BW","StW","KW","PW"))
                                             ^
NO COPY: R/BWI3_HR.R:343:9: style: Opening curly braces should never go on their own line and should always be followed by a new line.
        {auswahl.i$EigArt=eig.list[i]}
        ^
NO COPY: R/BWI3_HR.R:343:20: style: Variable and function names should be all lowercase.
        {auswahl.i$EigArt=eig.list[i]}
                   ^~~~~~
NO COPY: R/BWI3_HR.R:343:26: style: Use <-, not =, for assignment.
        {auswahl.i$EigArt=eig.list[i]}
                         ^
NO COPY: R/BWI3_HR.R:343:26: style: Put spaces around all infix operators.
        {auswahl.i$EigArt=eig.list[i]}
                        ~^~
NO COPY: R/BWI3_HR.R:343:38: style: Closing curly-braces should always be on their own line, unless it's followed by an else.
        {auswahl.i$EigArt=eig.list[i]}
                                     ^
NO COPY: R/BWI3_HR.R:346:5: style: Opening curly braces should never go on their own line and should always be followed by a new line.
    {
    ^
NO COPY: R/BWI3_HR.R:347:22: style: Put spaces around all infix operators.
      if (bwi.list[j]==1)
                    ~^~~
NO COPY: R/BWI3_HR.R:348:7: style: Opening curly braces should never go on their own line and should always be followed by a new line.
      {auswahl.i$Wa=c(1:3);
      ^
NO COPY: R/BWI3_HR.R:348:20: style: Use <-, not =, for assignment.
      {auswahl.i$Wa=c(1:3);
                   ^
NO COPY: R/BWI3_HR.R:348:20: style: Put spaces around all infix operators.
      {auswahl.i$Wa=c(1:3);
                  ~^~
NO COPY: R/BWI3_HR.R:350:29: style: Closing curly-braces should always be on their own line, unless it's followed by an else.
        A.i <- A.12;inv <- 1} else
                            ^
NO COPY: R/BWI3_HR.R:351:24: style: Put spaces around all infix operators.
        if (bwi.list[j]==2)
                      ~^~~
NO COPY: R/BWI3_HR.R:352:9: style: Opening curly braces should never go on their own line and should always be followed by a new line.
        {auswahl.i$Wa=c(1:3);
        ^
NO COPY: R/BWI3_HR.R:352:22: style: Use <-, not =, for assignment.
        {auswahl.i$Wa=c(1:3);
                     ^
NO COPY: R/BWI3_HR.R:352:22: style: Put spaces around all infix operators.
        {auswahl.i$Wa=c(1:3);
                    ~^~
NO COPY: R/BWI3_HR.R:354:32: style: Closing curly-braces should always be on their own line, unless it's followed by an else.
          A.i <- A.12; inv <- 2} else
                               ^
NO COPY: R/BWI3_HR.R:355:11: style: Opening curly braces should never go on their own line and should always be followed by a new line.
          {auswahl.i$Wa=c(3,5);
          ^
NO COPY: R/BWI3_HR.R:355:24: style: Use <-, not =, for assignment.
          {auswahl.i$Wa=c(3,5);
                       ^
NO COPY: R/BWI3_HR.R:355:24: style: Put spaces around all infix operators.
          {auswahl.i$Wa=c(3,5);
                      ~^~
NO COPY: R/BWI3_HR.R:355:29: style: Commas should always have a space after.
          {auswahl.i$Wa=c(3,5);
                            ^
NO COPY: R/BWI3_HR.R:357:31: style: Closing curly-braces should always be on their own line, unless it's followed by an else.
            A.i <- A; inv <- 2}
                              ^
NO COPY: R/BWI3_HR.R:358:18: style: Put spaces around all infix operators.
      index <- (j-1)*k + i
                ~^~
NO COPY: R/BWI3_HR.R:358:21: style: Put spaces around all infix operators.
      index <- (j-1)*k + i
                   ~^~
NO COPY: R/BWI3_HR.R:360:7: style: Words within variable and function names should be separated by '_' rather than '.'.
      fvbn.bagr.stratum[[index]] <- FVBN.bagrupp.akl.dkl.stratum.fun.2d(
      ^~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:361:16: style: Commas should always have a space after.
        baeume,ecken,trakte,A.i,inv,bagr,a.klass,d.klass,auswahl.i)
               ^
NO COPY: R/BWI3_HR.R:361:22: style: Commas should always have a space after.
        baeume,ecken,trakte,A.i,inv,bagr,a.klass,d.klass,auswahl.i)
                     ^
NO COPY: R/BWI3_HR.R:361:29: style: Commas should always have a space after.
        baeume,ecken,trakte,A.i,inv,bagr,a.klass,d.klass,auswahl.i)
                            ^
NO COPY: R/BWI3_HR.R:361:33: style: Commas should always have a space after.
        baeume,ecken,trakte,A.i,inv,bagr,a.klass,d.klass,auswahl.i)
                                ^
NO COPY: R/BWI3_HR.R:361:37: style: Commas should always have a space after.
        baeume,ecken,trakte,A.i,inv,bagr,a.klass,d.klass,auswahl.i)
                                    ^
NO COPY: R/BWI3_HR.R:361:42: style: Commas should always have a space after.
        baeume,ecken,trakte,A.i,inv,bagr,a.klass,d.klass,auswahl.i)
                                         ^
NO COPY: R/BWI3_HR.R:361:50: style: Commas should always have a space after.
        baeume,ecken,trakte,A.i,inv,bagr,a.klass,d.klass,auswahl.i)
                                                 ^
NO COPY: R/BWI3_HR.R:361:58: style: Commas should always have a space after.
        baeume,ecken,trakte,A.i,inv,bagr,a.klass,d.klass,auswahl.i)
                                                         ^
NO COPY: R/BWI3_HR.R:363:7: style: Words within variable and function names should be separated by '_' rather than '.'.
      fvbn.bagr.stratum[[index]]$Eigentumsart <- eig.list[i]
      ^~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:364:7: style: Words within variable and function names should be separated by '_' rather than '.'.
      fvbn.bagr.stratum[[index]]$BWI <- bwi.list[j]
      ^~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:368:10: style: Words within variable and function names should be separated by '_' rather than '.'.
  return(fvbn.bagr.stratum)
         ^~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:463:29: style: Commas should always have a space after.
          function(BA.grupp,A.klass,D.klass,auswahl,N.art,A,
                            ^
NO COPY: R/BWI3_HR.R:463:37: style: Commas should always have a space after.
          function(BA.grupp,A.klass,D.klass,auswahl,N.art,A,
                                    ^
NO COPY: R/BWI3_HR.R:463:45: style: Commas should always have a space after.
          function(BA.grupp,A.klass,D.klass,auswahl,N.art,A,
                                            ^
NO COPY: R/BWI3_HR.R:463:53: style: Commas should always have a space after.
          function(BA.grupp,A.klass,D.klass,auswahl,N.art,A,
                                                    ^
NO COPY: R/BWI3_HR.R:463:59: style: Commas should always have a space after.
          function(BA.grupp,A.klass,D.klass,auswahl,N.art,A,
                                                          ^
NO COPY: R/BWI3_HR.R:477:4: style: Commented code should be removed.
  #auswahl$Begehbar=1; auswahl$Wa=c(1:3)
   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:478:4: style: Commented code should be removed.
  #ecken.2.s <- stratum.fun(auswahl,ecken.2)
   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:480:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  ecken.2.s <- stratum.fun(list(Wa=c(1:3),Begehbar=1),ecken.2)
  ^~~~~~~~~
NO COPY: R/BWI3_HR.R:480:35: style: Put spaces around all infix operators.
  ecken.2.s <- stratum.fun(list(Wa=c(1:3),Begehbar=1),ecken.2)
                                 ~^~
NO COPY: R/BWI3_HR.R:480:43: style: Commas should always have a space after.
  ecken.2.s <- stratum.fun(list(Wa=c(1:3),Begehbar=1),ecken.2)
                                          ^
NO COPY: R/BWI3_HR.R:480:51: style: Put spaces around all infix operators.
  ecken.2.s <- stratum.fun(list(Wa=c(1:3),Begehbar=1),ecken.2)
                                                 ~^~
NO COPY: R/BWI3_HR.R:480:55: style: Commas should always have a space after.
  ecken.2.s <- stratum.fun(list(Wa=c(1:3),Begehbar=1),ecken.2)
                                                      ^
NO COPY: R/BWI3_HR.R:482:13: style: Use <-, not =, for assignment.
  auswahl$Wa=c(3,5)
            ^
NO COPY: R/BWI3_HR.R:482:13: style: Put spaces around all infix operators.
  auswahl$Wa=c(3,5)
           ~^~
NO COPY: R/BWI3_HR.R:482:18: style: Commas should always have a space after.
  auswahl$Wa=c(3,5)
                 ^
NO COPY: R/BWI3_HR.R:483:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  ecken.3.s <- stratum.fun(auswahl,ecken.3)
  ^~~~~~~~~
NO COPY: R/BWI3_HR.R:483:36: style: Commas should always have a space after.
  ecken.3.s <- stratum.fun(auswahl,ecken.3)
                                   ^
NO COPY: R/BWI3_HR.R:485:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  ecken.23.hb <- merge(ecken.3.s[TRUE,  c("TNr", "ENr")],
  ^~~~~~~~~~~
NO COPY: R/BWI3_HR.R:485:24: style: Words within variable and function names should be separated by '_' rather than '.'.
  ecken.23.hb <- merge(ecken.3.s[TRUE,  c("TNr", "ENr")],
                       ^~~~~~~~~
NO COPY: R/BWI3_HR.R:486:7: style: Words within variable and function names should be separated by '_' rather than '.'.
      ecken.2.s[TRUE, c("TNr", "ENr")],by=c("TNr","ENr"))
      ^~~~~~~~~
NO COPY: R/BWI3_HR.R:486:40: style: Commas should always have a space after.
      ecken.2.s[TRUE, c("TNr", "ENr")],by=c("TNr","ENr"))
                                       ^
NO COPY: R/BWI3_HR.R:486:42: style: Put spaces around all infix operators.
      ecken.2.s[TRUE, c("TNr", "ENr")],by=c("TNr","ENr"))
                                        ~^~
NO COPY: R/BWI3_HR.R:486:51: style: Commas should always have a space after.
      ecken.2.s[TRUE, c("TNr", "ENr")],by=c("TNr","ENr"))
                                                  ^
NO COPY: R/BWI3_HR.R:487:1: style: lines should not be more than 80 characters.
  ecken.23.hb <- merge(ecken.23.hb,ecken.3[TRUE, c("TNr", "ENr", "PL", "PLkal")],
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:487:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  ecken.23.hb <- merge(ecken.23.hb,ecken.3[TRUE, c("TNr", "ENr", "PL", "PLkal")],
  ^~~~~~~~~~~
NO COPY: R/BWI3_HR.R:487:24: style: Words within variable and function names should be separated by '_' rather than '.'.
  ecken.23.hb <- merge(ecken.23.hb,ecken.3[TRUE, c("TNr", "ENr", "PL", "PLkal")],
                       ^~~~~~~~~~~
NO COPY: R/BWI3_HR.R:487:36: style: Commas should always have a space after.
  ecken.23.hb <- merge(ecken.23.hb,ecken.3[TRUE, c("TNr", "ENr", "PL", "PLkal")],
                                   ^
NO COPY: R/BWI3_HR.R:488:9: style: Put spaces around all infix operators.
      by=c("TNr","ENr"))
       ~^~
NO COPY: R/BWI3_HR.R:488:18: style: Commas should always have a space after.
      by=c("TNr","ENr"))
                 ^
NO COPY: R/BWI3_HR.R:489:14: style: Words within variable and function names should be separated by '_' rather than '.'.
  stratum <- ecken.23.hb
             ^~~~~~~~~~~
NO COPY: R/BWI3_HR.R:494:4: style: Commented code should be removed.
  #inv <- 1
   ^~~~~~~~
NO COPY: R/BWI3_HR.R:495:4: style: Commented code should be removed.
  #stratum <- stratum.fun(auswahl,ecken)
   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:499:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  n.te.s <- length(stratum[,1])
  ^~~~~~
NO COPY: R/BWI3_HR.R:499:29: style: Commas should always have a space after.
  n.te.s <- length(stratum[,1])
                            ^
NO COPY: R/BWI3_HR.R:500:1: style: lines should not be more than 80 characters.
  #<y> steht hier f\u00fcr die Anzahl der Traktecken auf begehbarem HB im Stratum
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:501:31: style: Commas should always have a space after.
  y <- stats::aggregate(rep(1,length(stratum[,1])),by=list(stratum$tnr),sum)
                              ^
NO COPY: R/BWI3_HR.R:501:47: style: Commas should always have a space after.
  y <- stats::aggregate(rep(1,length(stratum[,1])),by=list(stratum$tnr),sum)
                                              ^
NO COPY: R/BWI3_HR.R:501:52: style: Commas should always have a space after.
  y <- stats::aggregate(rep(1,length(stratum[,1])),by=list(stratum$tnr),sum)
                                                   ^
NO COPY: R/BWI3_HR.R:501:54: style: Put spaces around all infix operators.
  y <- stats::aggregate(rep(1,length(stratum[,1])),by=list(stratum$tnr),sum)
                                                    ~^~
NO COPY: R/BWI3_HR.R:501:73: style: Commas should always have a space after.
  y <- stats::aggregate(rep(1,length(stratum[,1])),by=list(stratum$tnr),sum)
                                                                        ^
NO COPY: R/BWI3_HR.R:502:23: style: Commas should always have a space after.
  names(y) <- c("tnr","y")
                      ^
NO COPY: R/BWI3_HR.R:504:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  n.t.s <- length(y[,1])
  ^~~~~
NO COPY: R/BWI3_HR.R:504:3: warning: local variable 'n.t.s' assigned but may not be used
  n.t.s <- length(y[,1])
  ^~~~~
NO COPY: R/BWI3_HR.R:504:22: style: Commas should always have a space after.
  n.t.s <- length(y[,1])
                     ^
NO COPY: R/BWI3_HR.R:506:16: style: Commas should always have a space after.
  y <- merge(y,trakte[TRUE, c("tnr", "m")],by=c("tnr")) 
               ^
NO COPY: R/BWI3_HR.R:506:44: style: Commas should always have a space after.
  y <- merge(y,trakte[TRUE, c("tnr", "m")],by=c("tnr")) 
                                           ^
NO COPY: R/BWI3_HR.R:506:46: style: Put spaces around all infix operators.
  y <- merge(y,trakte[TRUE, c("tnr", "m")],by=c("tnr")) 
                                            ~^~
NO COPY: R/BWI3_HR.R:506:56: style: Trailing whitespace is superfluous.
  y <- merge(y,trakte[TRUE, c("tnr", "m")],by=c("tnr")) 
                                                       ^
NO COPY: R/BWI3_HR.R:507:14: style: Trailing whitespace is superfluous.
  # this was:  
             ^~
NO COPY: R/BWI3_HR.R:508:6: style: Commented code should be removed.
  #  y <- merge(y,subset(trakte,select=c(tnr,m),by=c(tnr)))
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:509:80: style: Trailing whitespace is superfluous.
  # where the ellipsis of subset() swallows up the misplaces by argument (meant 
                                                                               ^
NO COPY: R/BWI3_HR.R:510:18: style: Trailing whitespace is superfluous.
  # for merge())! 
                 ^
NO COPY: R/BWI3_HR.R:515:24: style: Commas should always have a space after.
  nT <- length(trakte[,1])
                       ^
NO COPY: R/BWI3_HR.R:517:4: style: Commented code should be removed.
  #HBFl. [ha]
   ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:518:20: style: Put spaces around all infix operators.
  T.hbf <- sum(y$y)/sum(x)*A
                  ~^~
NO COPY: R/BWI3_HR.R:518:27: style: Put spaces around all infix operators.
  T.hbf <- sum(y$y)/sum(x)*A
                         ~^~
NO COPY: R/BWI3_HR.R:519:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  var.T.hbf <-  nT/(nT-1)*T.hbf^2*(sum(y$y^2)/sum(y$y)^2+sum(x^2)/sum(x)^2
  ^~~~~~~~~
NO COPY: R/BWI3_HR.R:519:19: style: Put spaces around all infix operators.
  var.T.hbf <-  nT/(nT-1)*T.hbf^2*(sum(y$y^2)/sum(y$y)^2+sum(x^2)/sum(x)^2
                 ~^~
NO COPY: R/BWI3_HR.R:519:20: style: Place a space before left parenthesis, except in a function call.
  var.T.hbf <-  nT/(nT-1)*T.hbf^2*(sum(y$y^2)/sum(y$y)^2+sum(x^2)/sum(x)^2
                   ^
NO COPY: R/BWI3_HR.R:519:23: style: Put spaces around all infix operators.
  var.T.hbf <-  nT/(nT-1)*T.hbf^2*(sum(y$y^2)/sum(y$y)^2+sum(x^2)/sum(x)^2
                     ~^~
NO COPY: R/BWI3_HR.R:519:26: style: Put spaces around all infix operators.
  var.T.hbf <-  nT/(nT-1)*T.hbf^2*(sum(y$y^2)/sum(y$y)^2+sum(x^2)/sum(x)^2
                        ~^~
NO COPY: R/BWI3_HR.R:519:32: style: Put spaces around all infix operators.
  var.T.hbf <-  nT/(nT-1)*T.hbf^2*(sum(y$y^2)/sum(y$y)^2+sum(x^2)/sum(x)^2
                              ~^~
NO COPY: R/BWI3_HR.R:519:34: style: Put spaces around all infix operators.
  var.T.hbf <-  nT/(nT-1)*T.hbf^2*(sum(y$y^2)/sum(y$y)^2+sum(x^2)/sum(x)^2
                                ~^~
NO COPY: R/BWI3_HR.R:519:35: style: Place a space before left parenthesis, except in a function call.
  var.T.hbf <-  nT/(nT-1)*T.hbf^2*(sum(y$y^2)/sum(y$y)^2+sum(x^2)/sum(x)^2
                                  ^
NO COPY: R/BWI3_HR.R:519:43: style: Put spaces around all infix operators.
  var.T.hbf <-  nT/(nT-1)*T.hbf^2*(sum(y$y^2)/sum(y$y)^2+sum(x^2)/sum(x)^2
                                         ~^~
NO COPY: R/BWI3_HR.R:519:46: style: Put spaces around all infix operators.
  var.T.hbf <-  nT/(nT-1)*T.hbf^2*(sum(y$y^2)/sum(y$y)^2+sum(x^2)/sum(x)^2
                                            ~^~
NO COPY: R/BWI3_HR.R:519:55: style: Put spaces around all infix operators.
  var.T.hbf <-  nT/(nT-1)*T.hbf^2*(sum(y$y^2)/sum(y$y)^2+sum(x^2)/sum(x)^2
                                                     ~^~
NO COPY: R/BWI3_HR.R:519:57: style: Put spaces around all infix operators.
  var.T.hbf <-  nT/(nT-1)*T.hbf^2*(sum(y$y^2)/sum(y$y)^2+sum(x^2)/sum(x)^2
                                                       ~^~
NO COPY: R/BWI3_HR.R:519:63: style: Put spaces around all infix operators.
  var.T.hbf <-  nT/(nT-1)*T.hbf^2*(sum(y$y^2)/sum(y$y)^2+sum(x^2)/sum(x)^2
                                                             ~^~
NO COPY: R/BWI3_HR.R:519:66: style: Put spaces around all infix operators.
  var.T.hbf <-  nT/(nT-1)*T.hbf^2*(sum(y$y^2)/sum(y$y)^2+sum(x^2)/sum(x)^2
                                                                ~^~
NO COPY: R/BWI3_HR.R:519:73: style: Put spaces around all infix operators.
  var.T.hbf <-  nT/(nT-1)*T.hbf^2*(sum(y$y^2)/sum(y$y)^2+sum(x^2)/sum(x)^2
                                                                       ~^~
NO COPY: R/BWI3_HR.R:520:23: style: Put spaces around all infix operators.
                      -2*sum(y$y*y$m)/sum(y$y)/sum(x))
                      ^~
NO COPY: R/BWI3_HR.R:520:25: style: Put spaces around all infix operators.
                      -2*sum(y$y*y$m)/sum(y$y)/sum(x))
                       ~^~
NO COPY: R/BWI3_HR.R:520:33: style: Put spaces around all infix operators.
                      -2*sum(y$y*y$m)/sum(y$y)/sum(x))
                               ~^~
NO COPY: R/BWI3_HR.R:520:38: style: Put spaces around all infix operators.
                      -2*sum(y$y*y$m)/sum(y$y)/sum(x))
                                    ~^~
NO COPY: R/BWI3_HR.R:520:47: style: Put spaces around all infix operators.
                      -2*sum(y$y*y$m)/sum(y$y)/sum(x))
                                             ~^~
NO COPY: R/BWI3_HR.R:521:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  se.T.hbf <- var.T.hbf^0.5 #Standardfehler
  ^~~~~~~~
NO COPY: R/BWI3_HR.R:521:15: style: Words within variable and function names should be separated by '_' rather than '.'.
  se.T.hbf <- var.T.hbf^0.5 #Standardfehler
              ^~~~~~~~~
NO COPY: R/BWI3_HR.R:521:24: style: Put spaces around all infix operators.
  se.T.hbf <- var.T.hbf^0.5 #Standardfehler
                      ~^~
NO COPY: R/BWI3_HR.R:534:1: style: lines should not be more than 80 characters.
          baeume[TRUE, c("tnr", "enr", "stp", "bnr", "ba", "pk", "alt1", "alt2", "bhd1", "bhd2", "volv2", "vole2", "oib2", "nha1", "stfl1")],
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:535:57: style: Commas should always have a space after.
          stratum[TRUE, c("tnr", "enr", "pl", "plkal")],by=c("tnr","enr"))
                                                        ^
NO COPY: R/BWI3_HR.R:535:59: style: Put spaces around all infix operators.
          stratum[TRUE, c("tnr", "enr", "pl", "plkal")],by=c("tnr","enr"))
                                                         ~^~
NO COPY: R/BWI3_HR.R:535:68: style: Commas should always have a space after.
          stratum[TRUE, c("tnr", "enr", "pl", "plkal")],by=c("tnr","enr"))
                                                                   ^
NO COPY: R/BWI3_HR.R:542:4: style: Commented code should be removed.
  #BAGR-Liste
   ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:547:25: style: Put spaces around all infix operators.
                    by.x="ba",by.y="ICode",all.x=T)
                       ~^~
NO COPY: R/BWI3_HR.R:547:31: style: Commas should always have a space after.
                    by.x="ba",by.y="ICode",all.x=T)
                              ^
NO COPY: R/BWI3_HR.R:547:35: style: Put spaces around all infix operators.
                    by.x="ba",by.y="ICode",all.x=T)
                                 ~^~
NO COPY: R/BWI3_HR.R:547:44: style: Commas should always have a space after.
                    by.x="ba",by.y="ICode",all.x=T)
                                           ^
NO COPY: R/BWI3_HR.R:547:49: style: Put spaces around all infix operators.
                    by.x="ba",by.y="ICode",all.x=T)
                                               ~^~
NO COPY: R/BWI3_HR.R:551:1: style: lines should not be more than 80 characters.
  baeume.3.s <- merge(baeume.3[TRUE, c("TNr", "ENr", "STP", "BNr", "Pk", "BA", "Alt1", "Alt2", "BHD1", "BHD2", "StFl2")],
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:551:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  baeume.3.s <- merge(baeume.3[TRUE, c("TNr", "ENr", "STP", "BNr", "Pk", "BA", "Alt1", "Alt2", "BHD1", "BHD2", "StFl2")],
  ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:553:25: style: Put spaces around all infix operators.
                    by.x="BA",by.y="ICode",all.x=T)
                       ~^~
NO COPY: R/BWI3_HR.R:553:31: style: Commas should always have a space after.
                    by.x="BA",by.y="ICode",all.x=T)
                              ^
NO COPY: R/BWI3_HR.R:553:35: style: Put spaces around all infix operators.
                    by.x="BA",by.y="ICode",all.x=T)
                                 ~^~
NO COPY: R/BWI3_HR.R:553:44: style: Commas should always have a space after.
                    by.x="BA",by.y="ICode",all.x=T)
                                           ^
NO COPY: R/BWI3_HR.R:553:49: style: Put spaces around all infix operators.
                    by.x="BA",by.y="ICode",all.x=T)
                                               ~^~
NO COPY: R/BWI3_HR.R:554:9: style: Words within variable and function names should be separated by '_' rather than '.'.
  names(baeume.3.s) <- tolower(names(baeume.3.s))
        ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:554:38: style: Words within variable and function names should be separated by '_' rather than '.'.
  names(baeume.3.s) <- tolower(names(baeume.3.s))
                                     ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:555:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  baeume.3.s <- merge(baeume.3.s,stratum[TRUE, c("tnr", "enr", "pl", "plkal")],
  ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:555:23: style: Words within variable and function names should be separated by '_' rather than '.'.
  baeume.3.s <- merge(baeume.3.s,stratum[TRUE, c("tnr", "enr", "pl", "plkal")],
                      ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:555:34: style: Commas should always have a space after.
  baeume.3.s <- merge(baeume.3.s,stratum[TRUE, c("tnr", "enr", "pl", "plkal")],
                                 ^
NO COPY: R/BWI3_HR.R:556:13: style: Put spaces around all infix operators.
          by=c("tnr","enr"))
           ~^~
NO COPY: R/BWI3_HR.R:556:22: style: Commas should always have a space after.
          by=c("tnr","enr"))
                     ^
NO COPY: R/BWI3_HR.R:559:1: style: lines should not be more than 80 characters.
  #Mittlere Baumartenfl\u00e4chen nach BAGr, AKl und DKl zur Periodenmitte nach Trakt
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:560:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  mbaf.bagr.akl.dkl.tnr <- mbaf.bagr.alt.bhd.pm.fun(
  ^~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:561:46: style: Commas should always have a space after.
                                    baeume.s,baeume.3.s,A.klass,D.klass)
                                             ^
NO COPY: R/BWI3_HR.R:561:46: style: Words within variable and function names should be separated by '_' rather than '.'.
                                    baeume.s,baeume.3.s,A.klass,D.klass)
                                             ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:561:57: style: Commas should always have a space after.
                                    baeume.s,baeume.3.s,A.klass,D.klass)
                                                        ^
NO COPY: R/BWI3_HR.R:561:65: style: Commas should always have a space after.
                                    baeume.s,baeume.3.s,A.klass,D.klass)
                                                                ^
NO COPY: R/BWI3_HR.R:569:29: style: Put spaces around all infix operators.
                      breaks=c(seq(0,A.klass[[1]],A.klass[[2]]),A.max),right=T)
                           ~^~
NO COPY: R/BWI3_HR.R:569:38: style: Commas should always have a space after.
                      breaks=c(seq(0,A.klass[[1]],A.klass[[2]]),A.max),right=T)
                                     ^
NO COPY: R/BWI3_HR.R:569:51: style: Commas should always have a space after.
                      breaks=c(seq(0,A.klass[[1]],A.klass[[2]]),A.max),right=T)
                                                  ^
NO COPY: R/BWI3_HR.R:569:65: style: Commas should always have a space after.
                      breaks=c(seq(0,A.klass[[1]],A.klass[[2]]),A.max),right=T)
                                                                ^
NO COPY: R/BWI3_HR.R:569:72: style: Commas should always have a space after.
                      breaks=c(seq(0,A.klass[[1]],A.klass[[2]]),A.max),right=T)
                                                                       ^
NO COPY: R/BWI3_HR.R:569:77: style: Put spaces around all infix operators.
                      breaks=c(seq(0,A.klass[[1]],A.klass[[2]]),A.max),right=T)
                                                                           ~^~
NO COPY: R/BWI3_HR.R:577:3: style: Opening curly braces should never go on their own line and should always be followed by a new line.
  {
  ^
NO COPY: R/BWI3_HR.R:578:1: style: lines should not be more than 80 characters.
    brks <- c(0,7,seq(D.klass[[1]]+D.klass[[3]],D.klass[[2]],D.klass[[3]]),D.max)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:578:17: style: Commas should always have a space after.
    brks <- c(0,7,seq(D.klass[[1]]+D.klass[[3]],D.klass[[2]],D.klass[[3]]),D.max)
                ^
NO COPY: R/BWI3_HR.R:578:19: style: Commas should always have a space after.
    brks <- c(0,7,seq(D.klass[[1]]+D.klass[[3]],D.klass[[2]],D.klass[[3]]),D.max)
                  ^
NO COPY: R/BWI3_HR.R:578:35: style: Put spaces around all infix operators.
    brks <- c(0,7,seq(D.klass[[1]]+D.klass[[3]],D.klass[[2]],D.klass[[3]]),D.max)
                                 ~^~
NO COPY: R/BWI3_HR.R:578:49: style: Commas should always have a space after.
    brks <- c(0,7,seq(D.klass[[1]]+D.klass[[3]],D.klass[[2]],D.klass[[3]]),D.max)
                                                ^
NO COPY: R/BWI3_HR.R:578:62: style: Commas should always have a space after.
    brks <- c(0,7,seq(D.klass[[1]]+D.klass[[3]],D.klass[[2]],D.klass[[3]]),D.max)
                                                             ^
NO COPY: R/BWI3_HR.R:578:76: style: Commas should always have a space after.
    brks <- c(0,7,seq(D.klass[[1]]+D.klass[[3]],D.klass[[2]],D.klass[[3]]),D.max)
                                                                           ^
NO COPY: R/BWI3_HR.R:580:3: style: Opening curly braces should never go on their own line and should always be followed by a new line.
  {
  ^
NO COPY: R/BWI3_HR.R:581:32: style: Commas should always have a space after.
    brks <- c(seq(D.klass[[1]],D.klass[[2]],D.klass[[3]]),D.max)
                               ^
NO COPY: R/BWI3_HR.R:581:45: style: Commas should always have a space after.
    brks <- c(seq(D.klass[[1]],D.klass[[2]],D.klass[[3]]),D.max)
                                            ^
NO COPY: R/BWI3_HR.R:581:59: style: Commas should always have a space after.
    brks <- c(seq(D.klass[[1]],D.klass[[2]],D.klass[[3]]),D.max)
                                                          ^
NO COPY: R/BWI3_HR.R:584:44: style: Put spaces around all infix operators.
  baeume.s$dkl <- cut(baeume.s$bhd2, breaks=brks, right=F)
                                          ~^~
NO COPY: R/BWI3_HR.R:584:56: style: Put spaces around all infix operators.
  baeume.s$dkl <- cut(baeume.s$bhd2, breaks=brks, right=F)
                                                      ~^~
NO COPY: R/BWI3_HR.R:590:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  BAF.bagr.akl.dkl  <- array(dim=c(2,n.bagr,A.k,D.k))
  ^~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:590:33: style: Put spaces around all infix operators.
  BAF.bagr.akl.dkl  <- array(dim=c(2,n.bagr,A.k,D.k))
                               ~^~
NO COPY: R/BWI3_HR.R:590:38: style: Commas should always have a space after.
  BAF.bagr.akl.dkl  <- array(dim=c(2,n.bagr,A.k,D.k))
                                     ^
NO COPY: R/BWI3_HR.R:590:45: style: Commas should always have a space after.
  BAF.bagr.akl.dkl  <- array(dim=c(2,n.bagr,A.k,D.k))
                                            ^
NO COPY: R/BWI3_HR.R:590:49: style: Commas should always have a space after.
  BAF.bagr.akl.dkl  <- array(dim=c(2,n.bagr,A.k,D.k))
                                                ^
NO COPY: R/BWI3_HR.R:592:5: style: Place a space before left parenthesis, except in a function call.
  if(N.art)
    ^
NO COPY: R/BWI3_HR.R:593:5: style: Opening curly braces should never go on their own line and should always be followed by a new line.
    {pk.list <- list(c(2,3,9),c(4,5));n.nart <- 2}else
    ^
NO COPY: R/BWI3_HR.R:593:26: style: Commas should always have a space after.
    {pk.list <- list(c(2,3,9),c(4,5));n.nart <- 2}else
                         ^
NO COPY: R/BWI3_HR.R:593:28: style: Commas should always have a space after.
    {pk.list <- list(c(2,3,9),c(4,5));n.nart <- 2}else
                           ^
NO COPY: R/BWI3_HR.R:593:31: style: Commas should always have a space after.
    {pk.list <- list(c(2,3,9),c(4,5));n.nart <- 2}else
                              ^
NO COPY: R/BWI3_HR.R:593:35: style: Commas should always have a space after.
    {pk.list <- list(c(2,3,9),c(4,5));n.nart <- 2}else
                                  ^
NO COPY: R/BWI3_HR.R:593:50: style: Closing curly-braces should always be on their own line, unless it's followed by an else.
    {pk.list <- list(c(2,3,9),c(4,5));n.nart <- 2}else
                                                 ^
NO COPY: R/BWI3_HR.R:594:5: style: Opening curly braces should never go on their own line and should always be followed by a new line.
    {pk.list <- list(c(2:5,9)); n.nart <- 1}
    ^
NO COPY: R/BWI3_HR.R:594:28: style: Commas should always have a space after.
    {pk.list <- list(c(2:5,9)); n.nart <- 1}
                           ^
NO COPY: R/BWI3_HR.R:594:44: style: Closing curly-braces should always be on their own line, unless it's followed by an else.
    {pk.list <- list(c(2:5,9)); n.nart <- 1}
                                           ^
NO COPY: R/BWI3_HR.R:595:1: style: lines should not be more than 80 characters.
  #Array f\u00fcr Ergebnisse (Totals und SE jeweils nach Nutzungsart, BAGr, AKl, DKl)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:601:1: style: lines should not be more than 80 characters.
  #                       4, 5 definieren den ungenutzten (tw. aus nat\u00fcrl. Mort.
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:605:1: style: lines should not be more than 80 characters.
  #Es gibt 4 Zielgr\u00f6\u00dfen <Y>:  V [m^3Dh mR], V Eor (Erntevolumen o. R.) [m^3E oR],
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:606:1: style: lines should not be more than 80 characters.
  #B (oberird. Biomasse) [t], N (Anzahl), f\u00fcr die jeweils der Gesamtwert der
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:608:1: style: lines should not be more than 80 characters.
  #Stichprobenfehler (SE), und zwar jeweils f\u00fcr die 2 Kategorien "geerntet" /
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:616:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  Y.na.bagr.akl.dkl    <- array(dim=c(12,2,n.nart,n.bagr,A.k,D.k))
  ^~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:616:36: style: Put spaces around all infix operators.
  Y.na.bagr.akl.dkl    <- array(dim=c(12,2,n.nart,n.bagr,A.k,D.k))
                                  ~^~
NO COPY: R/BWI3_HR.R:616:42: style: Commas should always have a space after.
  Y.na.bagr.akl.dkl    <- array(dim=c(12,2,n.nart,n.bagr,A.k,D.k))
                                         ^
NO COPY: R/BWI3_HR.R:616:44: style: Commas should always have a space after.
  Y.na.bagr.akl.dkl    <- array(dim=c(12,2,n.nart,n.bagr,A.k,D.k))
                                           ^
NO COPY: R/BWI3_HR.R:616:51: style: Commas should always have a space after.
  Y.na.bagr.akl.dkl    <- array(dim=c(12,2,n.nart,n.bagr,A.k,D.k))
                                                  ^
NO COPY: R/BWI3_HR.R:616:58: style: Commas should always have a space after.
  Y.na.bagr.akl.dkl    <- array(dim=c(12,2,n.nart,n.bagr,A.k,D.k))
                                                         ^
NO COPY: R/BWI3_HR.R:616:62: style: Commas should always have a space after.
  Y.na.bagr.akl.dkl    <- array(dim=c(12,2,n.nart,n.bagr,A.k,D.k))
                                                             ^
NO COPY: R/BWI3_HR.R:618:3: style: Variable and function names should be all lowercase.
  mPL.na.bagr.akl.dkl   <- array(dim=c(2,2,n.bagr,A.k,D.k))
  ^~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:618:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  mPL.na.bagr.akl.dkl   <- array(dim=c(2,2,n.bagr,A.k,D.k))
  ^~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:618:37: style: Put spaces around all infix operators.
  mPL.na.bagr.akl.dkl   <- array(dim=c(2,2,n.bagr,A.k,D.k))
                                   ~^~
NO COPY: R/BWI3_HR.R:618:42: style: Commas should always have a space after.
  mPL.na.bagr.akl.dkl   <- array(dim=c(2,2,n.bagr,A.k,D.k))
                                         ^
NO COPY: R/BWI3_HR.R:618:44: style: Commas should always have a space after.
  mPL.na.bagr.akl.dkl   <- array(dim=c(2,2,n.bagr,A.k,D.k))
                                           ^
NO COPY: R/BWI3_HR.R:618:51: style: Commas should always have a space after.
  mPL.na.bagr.akl.dkl   <- array(dim=c(2,2,n.bagr,A.k,D.k))
                                                  ^
NO COPY: R/BWI3_HR.R:618:55: style: Commas should always have a space after.
  mPL.na.bagr.akl.dkl   <- array(dim=c(2,2,n.bagr,A.k,D.k))
                                                      ^
NO COPY: R/BWI3_HR.R:620:3: style: Variable and function names should be all lowercase.
  nT.na.bagr.akl.dkl   <- array(dim=c(n.nart,n.bagr,A.k,D.k))
  ^~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:620:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  nT.na.bagr.akl.dkl   <- array(dim=c(n.nart,n.bagr,A.k,D.k))
  ^~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:620:36: style: Put spaces around all infix operators.
  nT.na.bagr.akl.dkl   <- array(dim=c(n.nart,n.bagr,A.k,D.k))
                                  ~^~
NO COPY: R/BWI3_HR.R:620:46: style: Commas should always have a space after.
  nT.na.bagr.akl.dkl   <- array(dim=c(n.nart,n.bagr,A.k,D.k))
                                             ^
NO COPY: R/BWI3_HR.R:620:53: style: Commas should always have a space after.
  nT.na.bagr.akl.dkl   <- array(dim=c(n.nart,n.bagr,A.k,D.k))
                                                    ^
NO COPY: R/BWI3_HR.R:620:57: style: Commas should always have a space after.
  nT.na.bagr.akl.dkl   <- array(dim=c(n.nart,n.bagr,A.k,D.k))
                                                        ^
NO COPY: R/BWI3_HR.R:622:34: style: Commas should always have a space after.
  ne.T <- stats::aggregate(rep(1,length(stratum[,1])),by=list(stratum$tnr),sum)
                                 ^
NO COPY: R/BWI3_HR.R:622:50: style: Commas should always have a space after.
  ne.T <- stats::aggregate(rep(1,length(stratum[,1])),by=list(stratum$tnr),sum)
                                                 ^
NO COPY: R/BWI3_HR.R:622:55: style: Commas should always have a space after.
  ne.T <- stats::aggregate(rep(1,length(stratum[,1])),by=list(stratum$tnr),sum)
                                                      ^
NO COPY: R/BWI3_HR.R:622:57: style: Put spaces around all infix operators.
  ne.T <- stats::aggregate(rep(1,length(stratum[,1])),by=list(stratum$tnr),sum)
                                                       ~^~
NO COPY: R/BWI3_HR.R:622:76: style: Commas should always have a space after.
  ne.T <- stats::aggregate(rep(1,length(stratum[,1])),by=list(stratum$tnr),sum)
                                                                           ^
NO COPY: R/BWI3_HR.R:623:36: style: Commas should always have a space after.
            names(ne.T) <- c("tnr","n.te")
                                   ^
NO COPY: R/BWI3_HR.R:626:1: style: lines should not be more than 80 characters.
  y.pl <- stats::aggregate(stratum$plkal,by=list(stratum$tnr),mean,na.rm=T)$x*ne.T$n.te
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:626:42: style: Commas should always have a space after.
  y.pl <- stats::aggregate(stratum$plkal,by=list(stratum$tnr),mean,na.rm=T)$x*ne.T$n.te
                                         ^
NO COPY: R/BWI3_HR.R:626:44: style: Put spaces around all infix operators.
  y.pl <- stats::aggregate(stratum$plkal,by=list(stratum$tnr),mean,na.rm=T)$x*ne.T$n.te
                                          ~^~
NO COPY: R/BWI3_HR.R:626:63: style: Commas should always have a space after.
  y.pl <- stats::aggregate(stratum$plkal,by=list(stratum$tnr),mean,na.rm=T)$x*ne.T$n.te
                                                              ^
NO COPY: R/BWI3_HR.R:626:68: style: Commas should always have a space after.
  y.pl <- stats::aggregate(stratum$plkal,by=list(stratum$tnr),mean,na.rm=T)$x*ne.T$n.te
                                                                   ^
NO COPY: R/BWI3_HR.R:626:73: style: Put spaces around all infix operators.
  y.pl <- stats::aggregate(stratum$plkal,by=list(stratum$tnr),mean,na.rm=T)$x*ne.T$n.te
                                                                       ~^~
NO COPY: R/BWI3_HR.R:626:78: style: Put spaces around all infix operators.
  y.pl <- stats::aggregate(stratum$plkal,by=list(stratum$tnr),mean,na.rm=T)$x*ne.T$n.te
                                                                            ~^~
NO COPY: R/BWI3_HR.R:628:27: style: Put spaces around all infix operators.
  mpl.stratum <- sum(y.pl)/sum(ne.T$n.te)
                         ~^~
NO COPY: R/BWI3_HR.R:630:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  se.mpl.stratum <- mpl.stratum*
  ^~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:630:32: style: Put spaces around all infix operators.
  se.mpl.stratum <- mpl.stratum*
                              ~^~
NO COPY: R/BWI3_HR.R:631:12: style: Put spaces around all infix operators.
    sqrt(nT/(nT-1)*(sum(y.pl^2)/sum(y.pl)^2+sum(ne.T$n.te^2)/sum(ne.T$n.te)^2
          ~^~
NO COPY: R/BWI3_HR.R:631:13: style: Place a space before left parenthesis, except in a function call.
    sqrt(nT/(nT-1)*(sum(y.pl^2)/sum(y.pl)^2+sum(ne.T$n.te^2)/sum(ne.T$n.te)^2
            ^
NO COPY: R/BWI3_HR.R:631:16: style: Put spaces around all infix operators.
    sqrt(nT/(nT-1)*(sum(y.pl^2)/sum(y.pl)^2+sum(ne.T$n.te^2)/sum(ne.T$n.te)^2
              ~^~
NO COPY: R/BWI3_HR.R:631:19: style: Put spaces around all infix operators.
    sqrt(nT/(nT-1)*(sum(y.pl^2)/sum(y.pl)^2+sum(ne.T$n.te^2)/sum(ne.T$n.te)^2
                 ~^~
NO COPY: R/BWI3_HR.R:631:20: style: Place a space before left parenthesis, except in a function call.
    sqrt(nT/(nT-1)*(sum(y.pl^2)/sum(y.pl)^2+sum(ne.T$n.te^2)/sum(ne.T$n.te)^2
                   ^
NO COPY: R/BWI3_HR.R:631:29: style: Put spaces around all infix operators.
    sqrt(nT/(nT-1)*(sum(y.pl^2)/sum(y.pl)^2+sum(ne.T$n.te^2)/sum(ne.T$n.te)^2
                           ~^~
NO COPY: R/BWI3_HR.R:631:32: style: Put spaces around all infix operators.
    sqrt(nT/(nT-1)*(sum(y.pl^2)/sum(y.pl)^2+sum(ne.T$n.te^2)/sum(ne.T$n.te)^2
                              ~^~
NO COPY: R/BWI3_HR.R:631:42: style: Put spaces around all infix operators.
    sqrt(nT/(nT-1)*(sum(y.pl^2)/sum(y.pl)^2+sum(ne.T$n.te^2)/sum(ne.T$n.te)^2
                                        ~^~
NO COPY: R/BWI3_HR.R:631:44: style: Put spaces around all infix operators.
    sqrt(nT/(nT-1)*(sum(y.pl^2)/sum(y.pl)^2+sum(ne.T$n.te^2)/sum(ne.T$n.te)^2
                                          ~^~
NO COPY: R/BWI3_HR.R:631:58: style: Put spaces around all infix operators.
    sqrt(nT/(nT-1)*(sum(y.pl^2)/sum(y.pl)^2+sum(ne.T$n.te^2)/sum(ne.T$n.te)^2
                                                        ~^~
NO COPY: R/BWI3_HR.R:631:61: style: Put spaces around all infix operators.
    sqrt(nT/(nT-1)*(sum(y.pl^2)/sum(y.pl)^2+sum(ne.T$n.te^2)/sum(ne.T$n.te)^2
                                                           ~^~
NO COPY: R/BWI3_HR.R:631:76: style: Put spaces around all infix operators.
    sqrt(nT/(nT-1)*(sum(y.pl^2)/sum(y.pl)^2+sum(ne.T$n.te^2)/sum(ne.T$n.te)^2
                                                                          ~^~
NO COPY: R/BWI3_HR.R:632:31: style: Put spaces around all infix operators.
                              -2*sum(y.pl*ne.T$n.te)/sum(y.pl)/sum(ne.T$n.te)))
                              ^~
NO COPY: R/BWI3_HR.R:632:33: style: Put spaces around all infix operators.
                              -2*sum(y.pl*ne.T$n.te)/sum(y.pl)/sum(ne.T$n.te)))
                               ~^~
NO COPY: R/BWI3_HR.R:632:42: style: Put spaces around all infix operators.
                              -2*sum(y.pl*ne.T$n.te)/sum(y.pl)/sum(ne.T$n.te)))
                                        ~^~
NO COPY: R/BWI3_HR.R:632:53: style: Put spaces around all infix operators.
                              -2*sum(y.pl*ne.T$n.te)/sum(y.pl)/sum(ne.T$n.te)))
                                                   ~^~
NO COPY: R/BWI3_HR.R:632:63: style: Put spaces around all infix operators.
                              -2*sum(y.pl*ne.T$n.te)/sum(y.pl)/sum(ne.T$n.te)))
                                                             ~^~
NO COPY: R/BWI3_HR.R:638:3: style: Opening curly braces should never go on their own line and should always be followed by a new line.
  {
  ^
NO COPY: R/BWI3_HR.R:640:5: style: Opening curly braces should never go on their own line and should always be followed by a new line.
    {
    ^
NO COPY: R/BWI3_HR.R:642:7: style: Opening curly braces should never go on their own line and should always be followed by a new line.
      {
      ^
NO COPY: R/BWI3_HR.R:644:19: style: Words within variable and function names should be separated by '_' rather than '.'.
        baf.ba <- mbaf.bagr.akl.dkl.tnr[
                  ^~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:645:1: style: lines should not be more than 80 characters.
                      mbaf.bagr.akl.dkl.tnr[["bagr"]]==bagr.list[i]&mbaf.bagr.akl.dkl.tnr[["akl.pm"]]==akl.lab[j]&mbaf.bagr.akl.dkl.tnr[["dkl.pm"]]==dkl.lab[k],
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:645:23: style: Words within variable and function names should be separated by '_' rather than '.'.
                      mbaf.bagr.akl.dkl.tnr[["bagr"]]==bagr.list[i]&mbaf.bagr.akl.dkl.tnr[["akl.pm"]]==akl.lab[j]&mbaf.bagr.akl.dkl.tnr[["dkl.pm"]]==dkl.lab[k],
                      ^~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:645:54: style: Put spaces around all infix operators.
                      mbaf.bagr.akl.dkl.tnr[["bagr"]]==bagr.list[i]&mbaf.bagr.akl.dkl.tnr[["akl.pm"]]==akl.lab[j]&mbaf.bagr.akl.dkl.tnr[["dkl.pm"]]==dkl.lab[k],
                                                    ~^~~
NO COPY: R/BWI3_HR.R:645:68: style: Put spaces around all infix operators.
                      mbaf.bagr.akl.dkl.tnr[["bagr"]]==bagr.list[i]&mbaf.bagr.akl.dkl.tnr[["akl.pm"]]==akl.lab[j]&mbaf.bagr.akl.dkl.tnr[["dkl.pm"]]==dkl.lab[k],
                                                                  ~^~
NO COPY: R/BWI3_HR.R:645:69: style: Words within variable and function names should be separated by '_' rather than '.'.
                      mbaf.bagr.akl.dkl.tnr[["bagr"]]==bagr.list[i]&mbaf.bagr.akl.dkl.tnr[["akl.pm"]]==akl.lab[j]&mbaf.bagr.akl.dkl.tnr[["dkl.pm"]]==dkl.lab[k],
                                                                    ^~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:645:102: style: Put spaces around all infix operators.
                      mbaf.bagr.akl.dkl.tnr[["bagr"]]==bagr.list[i]&mbaf.bagr.akl.dkl.tnr[["akl.pm"]]==akl.lab[j]&mbaf.bagr.akl.dkl.tnr[["dkl.pm"]]==dkl.lab[k],
                                                                                                    ~^~~
NO COPY: R/BWI3_HR.R:645:114: style: Put spaces around all infix operators.
                      mbaf.bagr.akl.dkl.tnr[["bagr"]]==bagr.list[i]&mbaf.bagr.akl.dkl.tnr[["akl.pm"]]==akl.lab[j]&mbaf.bagr.akl.dkl.tnr[["dkl.pm"]]==dkl.lab[k],
                                                                                                                ~^~
NO COPY: R/BWI3_HR.R:645:115: style: Words within variable and function names should be separated by '_' rather than '.'.
                      mbaf.bagr.akl.dkl.tnr[["bagr"]]==bagr.list[i]&mbaf.bagr.akl.dkl.tnr[["akl.pm"]]==akl.lab[j]&mbaf.bagr.akl.dkl.tnr[["dkl.pm"]]==dkl.lab[k],
                                                                                                                  ^~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:645:148: style: Put spaces around all infix operators.
                      mbaf.bagr.akl.dkl.tnr[["bagr"]]==bagr.list[i]&mbaf.bagr.akl.dkl.tnr[["akl.pm"]]==akl.lab[j]&mbaf.bagr.akl.dkl.tnr[["dkl.pm"]]==dkl.lab[k],
                                                                                                                                                  ~^~~
NO COPY: R/BWI3_HR.R:648:32: style: Commas should always have a space after.
        xy.baf <- merge(trakte,baf.ba,by=c("tnr"),all.x=T)
                               ^
NO COPY: R/BWI3_HR.R:648:39: style: Commas should always have a space after.
        xy.baf <- merge(trakte,baf.ba,by=c("tnr"),all.x=T)
                                      ^
NO COPY: R/BWI3_HR.R:648:41: style: Put spaces around all infix operators.
        xy.baf <- merge(trakte,baf.ba,by=c("tnr"),all.x=T)
                                       ~^~
NO COPY: R/BWI3_HR.R:648:51: style: Commas should always have a space after.
        xy.baf <- merge(trakte,baf.ba,by=c("tnr"),all.x=T)
                                                  ^
NO COPY: R/BWI3_HR.R:648:56: style: Put spaces around all infix operators.
        xy.baf <- merge(trakte,baf.ba,by=c("tnr"),all.x=T)
                                                      ~^~
NO COPY: R/BWI3_HR.R:651:10: style: Commented code should be removed.
        #xy.baf$mbaf <- xy.baf$mbaf
         ^~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:652:10: style: Commented code should be removed.
        #xy. <- cbind(xy$m,xy$mbaf/10000)
         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:654:49: style: Commas should always have a space after.
        R.list <- r.variance.fun(cbind(xy.baf$m,xy.baf$mbaf),nT)
                                                ^
NO COPY: R/BWI3_HR.R:654:62: style: Commas should always have a space after.
        R.list <- r.variance.fun(cbind(xy.baf$m,xy.baf$mbaf),nT)
                                                             ^
NO COPY: R/BWI3_HR.R:655:9: style: Words within variable and function names should be separated by '_' rather than '.'.
        BAF.bagr.akl.dkl[1,i,j,k] <-  R.list$R.xy*A
        ^~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:655:28: style: Commas should always have a space after.
        BAF.bagr.akl.dkl[1,i,j,k] <-  R.list$R.xy*A
                           ^
NO COPY: R/BWI3_HR.R:655:30: style: Commas should always have a space after.
        BAF.bagr.akl.dkl[1,i,j,k] <-  R.list$R.xy*A
                             ^
NO COPY: R/BWI3_HR.R:655:32: style: Commas should always have a space after.
        BAF.bagr.akl.dkl[1,i,j,k] <-  R.list$R.xy*A
                               ^
NO COPY: R/BWI3_HR.R:655:50: style: Put spaces around all infix operators.
        BAF.bagr.akl.dkl[1,i,j,k] <-  R.list$R.xy*A
                                                ~^~
NO COPY: R/BWI3_HR.R:656:9: style: Words within variable and function names should be separated by '_' rather than '.'.
        BAF.bagr.akl.dkl[2,i,j,k] <-  sqrt(R.list$V.R.xy)*A
        ^~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:656:28: style: Commas should always have a space after.
        BAF.bagr.akl.dkl[2,i,j,k] <-  sqrt(R.list$V.R.xy)*A
                           ^
NO COPY: R/BWI3_HR.R:656:30: style: Commas should always have a space after.
        BAF.bagr.akl.dkl[2,i,j,k] <-  sqrt(R.list$V.R.xy)*A
                             ^
NO COPY: R/BWI3_HR.R:656:32: style: Commas should always have a space after.
        BAF.bagr.akl.dkl[2,i,j,k] <-  sqrt(R.list$V.R.xy)*A
                               ^
NO COPY: R/BWI3_HR.R:656:51: style: Words within variable and function names should be separated by '_' rather than '.'.
        BAF.bagr.akl.dkl[2,i,j,k] <-  sqrt(R.list$V.R.xy)*A
                                                  ^~~~~~
NO COPY: R/BWI3_HR.R:656:58: style: Put spaces around all infix operators.
        BAF.bagr.akl.dkl[2,i,j,k] <-  sqrt(R.list$V.R.xy)*A
                                                        ~^~
NO COPY: R/BWI3_HR.R:659:9: style: Opening curly braces should never go on their own line and should always be followed by a new line.
        {
        ^
NO COPY: R/BWI3_HR.R:662:1: style: lines should not be more than 80 characters.
              baeume.s[["pk"]]%in%pk.list[[i.n]]&baeume.s[["bagr"]]==bagr.list[i]&baeume.s[["akl"]]==akl.lab[j]&baeume.s[["dkl"]]==dkl.lab[k],
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:662:31: style: Put spaces around all infix operators.
              baeume.s[["pk"]]%in%pk.list[[i.n]]&baeume.s[["bagr"]]==bagr.list[i]&baeume.s[["akl"]]==akl.lab[j]&baeume.s[["dkl"]]==dkl.lab[k],
                             ~^~~~~
NO COPY: R/BWI3_HR.R:662:49: style: Put spaces around all infix operators.
              baeume.s[["pk"]]%in%pk.list[[i.n]]&baeume.s[["bagr"]]==bagr.list[i]&baeume.s[["akl"]]==akl.lab[j]&baeume.s[["dkl"]]==dkl.lab[k],
                                               ~^~
NO COPY: R/BWI3_HR.R:662:68: style: Put spaces around all infix operators.
              baeume.s[["pk"]]%in%pk.list[[i.n]]&baeume.s[["bagr"]]==bagr.list[i]&baeume.s[["akl"]]==akl.lab[j]&baeume.s[["dkl"]]==dkl.lab[k],
                                                                  ~^~~
NO COPY: R/BWI3_HR.R:662:82: style: Put spaces around all infix operators.
              baeume.s[["pk"]]%in%pk.list[[i.n]]&baeume.s[["bagr"]]==bagr.list[i]&baeume.s[["akl"]]==akl.lab[j]&baeume.s[["dkl"]]==dkl.lab[k],
                                                                                ~^~
NO COPY: R/BWI3_HR.R:662:100: style: Put spaces around all infix operators.
              baeume.s[["pk"]]%in%pk.list[[i.n]]&baeume.s[["bagr"]]==bagr.list[i]&baeume.s[["akl"]]==akl.lab[j]&baeume.s[["dkl"]]==dkl.lab[k],
                                                                                                  ~^~~
NO COPY: R/BWI3_HR.R:662:112: style: Put spaces around all infix operators.
              baeume.s[["pk"]]%in%pk.list[[i.n]]&baeume.s[["bagr"]]==bagr.list[i]&baeume.s[["akl"]]==akl.lab[j]&baeume.s[["dkl"]]==dkl.lab[k],
                                                                                                              ~^~
NO COPY: R/BWI3_HR.R:662:130: style: Put spaces around all infix operators.
              baeume.s[["pk"]]%in%pk.list[[i.n]]&baeume.s[["bagr"]]==bagr.list[i]&baeume.s[["akl"]]==akl.lab[j]&baeume.s[["dkl"]]==dkl.lab[k],
                                                                                                                                ~^~~
NO COPY: R/BWI3_HR.R:664:33: style: Commas should always have a space after.
          if (length(baeume.ba[,1])== 0)
                                ^
NO COPY: R/BWI3_HR.R:664:36: style: Put spaces around all infix operators.
          if (length(baeume.ba[,1])== 0)
                                  ~^
NO COPY: R/BWI3_HR.R:665:11: style: Opening curly braces should never go on their own line and should always be followed by a new line.
          {
          ^
NO COPY: R/BWI3_HR.R:666:14: style: Words within variable and function names should be separated by '_' rather than '.'.
             Y.na.bagr.akl.dkl[,1,i.n,i,j,k] <- rep(0,12) #Zielgr\u00f6\u00dfe
             ^~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:666:33: style: Commas should always have a space after.
             Y.na.bagr.akl.dkl[,1,i.n,i,j,k] <- rep(0,12) #Zielgr\u00f6\u00dfe
                                ^
NO COPY: R/BWI3_HR.R:666:35: style: Commas should always have a space after.
             Y.na.bagr.akl.dkl[,1,i.n,i,j,k] <- rep(0,12) #Zielgr\u00f6\u00dfe
                                  ^
NO COPY: R/BWI3_HR.R:666:39: style: Commas should always have a space after.
             Y.na.bagr.akl.dkl[,1,i.n,i,j,k] <- rep(0,12) #Zielgr\u00f6\u00dfe
                                      ^
NO COPY: R/BWI3_HR.R:666:41: style: Commas should always have a space after.
             Y.na.bagr.akl.dkl[,1,i.n,i,j,k] <- rep(0,12) #Zielgr\u00f6\u00dfe
                                        ^
NO COPY: R/BWI3_HR.R:666:43: style: Commas should always have a space after.
             Y.na.bagr.akl.dkl[,1,i.n,i,j,k] <- rep(0,12) #Zielgr\u00f6\u00dfe
                                          ^
NO COPY: R/BWI3_HR.R:666:55: style: Commas should always have a space after.
             Y.na.bagr.akl.dkl[,1,i.n,i,j,k] <- rep(0,12) #Zielgr\u00f6\u00dfe
                                                      ^
NO COPY: R/BWI3_HR.R:667:1: style: lines should not be more than 80 characters.
             Y.na.bagr.akl.dkl[,2,i.n,i,j,k] <- rep(0,12) #Stichprobenfehler (SE)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:667:14: style: Words within variable and function names should be separated by '_' rather than '.'.
             Y.na.bagr.akl.dkl[,2,i.n,i,j,k] <- rep(0,12) #Stichprobenfehler (SE)
             ^~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:667:33: style: Commas should always have a space after.
             Y.na.bagr.akl.dkl[,2,i.n,i,j,k] <- rep(0,12) #Stichprobenfehler (SE)
                                ^
NO COPY: R/BWI3_HR.R:667:35: style: Commas should always have a space after.
             Y.na.bagr.akl.dkl[,2,i.n,i,j,k] <- rep(0,12) #Stichprobenfehler (SE)
                                  ^
NO COPY: R/BWI3_HR.R:667:39: style: Commas should always have a space after.
             Y.na.bagr.akl.dkl[,2,i.n,i,j,k] <- rep(0,12) #Stichprobenfehler (SE)
                                      ^
NO COPY: R/BWI3_HR.R:667:41: style: Commas should always have a space after.
             Y.na.bagr.akl.dkl[,2,i.n,i,j,k] <- rep(0,12) #Stichprobenfehler (SE)
                                        ^
NO COPY: R/BWI3_HR.R:667:43: style: Commas should always have a space after.
             Y.na.bagr.akl.dkl[,2,i.n,i,j,k] <- rep(0,12) #Stichprobenfehler (SE)
                                          ^
NO COPY: R/BWI3_HR.R:667:55: style: Commas should always have a space after.
             Y.na.bagr.akl.dkl[,2,i.n,i,j,k] <- rep(0,12) #Stichprobenfehler (SE)
                                                      ^
NO COPY: R/BWI3_HR.R:669:14: style: Variable and function names should be all lowercase.
             mPL.na.bagr.akl.dkl[1:2,i.n,i,j,k]   <- rep(0,2)
             ^~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:669:14: style: Words within variable and function names should be separated by '_' rather than '.'.
             mPL.na.bagr.akl.dkl[1:2,i.n,i,j,k]   <- rep(0,2)
             ^~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:669:38: style: Commas should always have a space after.
             mPL.na.bagr.akl.dkl[1:2,i.n,i,j,k]   <- rep(0,2)
                                     ^
NO COPY: R/BWI3_HR.R:669:42: style: Commas should always have a space after.
             mPL.na.bagr.akl.dkl[1:2,i.n,i,j,k]   <- rep(0,2)
                                         ^
NO COPY: R/BWI3_HR.R:669:44: style: Commas should always have a space after.
             mPL.na.bagr.akl.dkl[1:2,i.n,i,j,k]   <- rep(0,2)
                                           ^
NO COPY: R/BWI3_HR.R:669:46: style: Commas should always have a space after.
             mPL.na.bagr.akl.dkl[1:2,i.n,i,j,k]   <- rep(0,2)
                                             ^
NO COPY: R/BWI3_HR.R:669:60: style: Commas should always have a space after.
             mPL.na.bagr.akl.dkl[1:2,i.n,i,j,k]   <- rep(0,2)
                                                           ^
NO COPY: R/BWI3_HR.R:670:14: style: Variable and function names should be all lowercase.
             nT.na.bagr.akl.dkl[i.n,i,j,k]        <- 0        #n PSU (Trakte)
             ^~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:670:14: style: Words within variable and function names should be separated by '_' rather than '.'.
             nT.na.bagr.akl.dkl[i.n,i,j,k]        <- 0        #n PSU (Trakte)
             ^~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:670:37: style: Commas should always have a space after.
             nT.na.bagr.akl.dkl[i.n,i,j,k]        <- 0        #n PSU (Trakte)
                                    ^
NO COPY: R/BWI3_HR.R:670:39: style: Commas should always have a space after.
             nT.na.bagr.akl.dkl[i.n,i,j,k]        <- 0        #n PSU (Trakte)
                                      ^
NO COPY: R/BWI3_HR.R:670:41: style: Commas should always have a space after.
             nT.na.bagr.akl.dkl[i.n,i,j,k]        <- 0        #n PSU (Trakte)
                                        ^
NO COPY: R/BWI3_HR.R:672:11: style: Opening curly braces should never go on their own line and should always be followed by a new line.
          {
          ^
NO COPY: R/BWI3_HR.R:676:1: style: lines should not be more than 80 characters.
            xy <- stats::aggregate(baeume.ba$volv2*baeume.ba$nha1,by=list(baeume.ba$tnr),
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:676:51: style: Put spaces around all infix operators.
            xy <- stats::aggregate(baeume.ba$volv2*baeume.ba$nha1,by=list(baeume.ba$tnr),
                                                 ~^~
NO COPY: R/BWI3_HR.R:676:67: style: Commas should always have a space after.
            xy <- stats::aggregate(baeume.ba$volv2*baeume.ba$nha1,by=list(baeume.ba$tnr),
                                                                  ^
NO COPY: R/BWI3_HR.R:676:69: style: Put spaces around all infix operators.
            xy <- stats::aggregate(baeume.ba$volv2*baeume.ba$nha1,by=list(baeume.ba$tnr),
                                                                   ~^~
NO COPY: R/BWI3_HR.R:678:34: style: Commas should always have a space after.
            names(xy) <- c("tnr","v")
                                 ^
NO COPY: R/BWI3_HR.R:681:47: style: Put spaces around all infix operators.
              stats::aggregate(baeume.ba$vole2*baeume.ba$nha1,
                                             ~^~
NO COPY: R/BWI3_HR.R:682:49: style: Put spaces around all infix operators.
                                              by=list(baeume.ba$tnr),sum)$x )
                                               ~^~
NO COPY: R/BWI3_HR.R:682:70: style: Commas should always have a space after.
                                              by=list(baeume.ba$tnr),sum)$x )
                                                                     ^
NO COPY: R/BWI3_HR.R:685:28: style: Commas should always have a space after.
            xy <- cbind(xy,stats::aggregate(baeume.ba$oib2*baeume.ba$nha1,
                           ^
NO COPY: R/BWI3_HR.R:685:59: style: Put spaces around all infix operators.
            xy <- cbind(xy,stats::aggregate(baeume.ba$oib2*baeume.ba$nha1,
                                                         ~^~
NO COPY: R/BWI3_HR.R:686:47: style: Put spaces around all infix operators.
                                            by=list(baeume.ba$tnr),sum)$x/1000)
                                             ~^~
NO COPY: R/BWI3_HR.R:686:68: style: Commas should always have a space after.
                                            by=list(baeume.ba$tnr),sum)$x/1000)
                                                                   ^
NO COPY: R/BWI3_HR.R:686:74: style: Put spaces around all infix operators.
                                            by=list(baeume.ba$tnr),sum)$x/1000)
                                                                        ~^~
NO COPY: R/BWI3_HR.R:689:1: style: lines should not be more than 80 characters.
            xy <- cbind(xy,stats::aggregate(baeume.ba$nha1,by=list(baeume.ba$tnr),
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:689:28: style: Commas should always have a space after.
            xy <- cbind(xy,stats::aggregate(baeume.ba$nha1,by=list(baeume.ba$tnr),
                           ^
NO COPY: R/BWI3_HR.R:689:60: style: Commas should always have a space after.
            xy <- cbind(xy,stats::aggregate(baeume.ba$nha1,by=list(baeume.ba$tnr),
                                                           ^
NO COPY: R/BWI3_HR.R:689:62: style: Put spaces around all infix operators.
            xy <- cbind(xy,stats::aggregate(baeume.ba$nha1,by=list(baeume.ba$tnr),
                                                            ~^~
NO COPY: R/BWI3_HR.R:693:1: style: lines should not be more than 80 characters.
            mpl <- stats::aggregate(baeume.ba$plkal,by=list(baeume.ba$tnr),mean)$x
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:693:53: style: Commas should always have a space after.
            mpl <- stats::aggregate(baeume.ba$plkal,by=list(baeume.ba$tnr),mean)$x
                                                    ^
NO COPY: R/BWI3_HR.R:693:55: style: Put spaces around all infix operators.
            mpl <- stats::aggregate(baeume.ba$plkal,by=list(baeume.ba$tnr),mean)$x
                                                     ~^~
NO COPY: R/BWI3_HR.R:693:76: style: Commas should always have a space after.
            mpl <- stats::aggregate(baeume.ba$plkal,by=list(baeume.ba$tnr),mean)$x
                                                                           ^
NO COPY: R/BWI3_HR.R:696:27: style: Put spaces around all infix operators.
            xy$j.v <- xy$v/mpl
                         ~^~
NO COPY: R/BWI3_HR.R:698:16: style: Words within variable and function names should be separated by '_' rather than '.'.
            xy$j.v.eor <- xy$v.eor/mpl
               ^~~~~~~
NO COPY: R/BWI3_HR.R:698:35: style: Put spaces around all infix operators.
            xy$j.v.eor <- xy$v.eor/mpl
                                 ~^~
NO COPY: R/BWI3_HR.R:700:27: style: Put spaces around all infix operators.
            xy$j.b <- xy$b/mpl
                         ~^~
NO COPY: R/BWI3_HR.R:702:27: style: Put spaces around all infix operators.
            xy$j.n <- xy$n/mpl
                         ~^~
NO COPY: R/BWI3_HR.R:705:1: style: lines should not be more than 80 characters.
            #hinzuf\u00fcgen   Hinweis: <xy.baf> enth\u00e4lt jetzt auch <m_bhb>!
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:706:14: style: Commented code should be removed.
            #xy <- merge(xy,xy.baf,by=c("tnr"))
             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:707:32: style: Commas should always have a space after.
            xy <- merge(xy.baf,xy,by=c("tnr"),all.x=T)
                               ^
NO COPY: R/BWI3_HR.R:707:35: style: Commas should always have a space after.
            xy <- merge(xy.baf,xy,by=c("tnr"),all.x=T)
                                  ^
NO COPY: R/BWI3_HR.R:707:37: style: Put spaces around all infix operators.
            xy <- merge(xy.baf,xy,by=c("tnr"),all.x=T)
                                   ~^~
NO COPY: R/BWI3_HR.R:707:47: style: Commas should always have a space after.
            xy <- merge(xy.baf,xy,by=c("tnr"),all.x=T)
                                              ^
NO COPY: R/BWI3_HR.R:707:52: style: Put spaces around all infix operators.
            xy <- merge(xy.baf,xy,by=c("tnr"),all.x=T)
                                                  ~^~
NO COPY: R/BWI3_HR.R:708:14: style: Commented code should be removed.
            #for (ii in 7:14) {xy[is.na(xy[,ii]),ii] <- 0}
             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:712:13: style: Variable and function names should be all lowercase.
            nT.na.bagr.akl.dkl[i.n,i,j,k] <- length(xy[,1])
            ^~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:712:13: style: Words within variable and function names should be separated by '_' rather than '.'.
            nT.na.bagr.akl.dkl[i.n,i,j,k] <- length(xy[,1])
            ^~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:712:36: style: Commas should always have a space after.
            nT.na.bagr.akl.dkl[i.n,i,j,k] <- length(xy[,1])
                                   ^
NO COPY: R/BWI3_HR.R:712:38: style: Commas should always have a space after.
            nT.na.bagr.akl.dkl[i.n,i,j,k] <- length(xy[,1])
                                     ^
NO COPY: R/BWI3_HR.R:712:40: style: Commas should always have a space after.
            nT.na.bagr.akl.dkl[i.n,i,j,k] <- length(xy[,1])
                                       ^
NO COPY: R/BWI3_HR.R:712:57: style: Commas should always have a space after.
            nT.na.bagr.akl.dkl[i.n,i,j,k] <- length(xy[,1])
                                                        ^
NO COPY: R/BWI3_HR.R:716:45: style: Commas should always have a space after.
            nb.TE <- stats::aggregate(rep(1,length(baeume.ba[,1])),
                                            ^
NO COPY: R/BWI3_HR.R:716:63: style: Commas should always have a space after.
            nb.TE <- stats::aggregate(rep(1,length(baeume.ba[,1])),
                                                              ^
NO COPY: R/BWI3_HR.R:717:39: style: Put spaces around all infix operators.
                                    by=list(baeume.ba$tnr,baeume.ba$enr),sum)
                                     ~^~
NO COPY: R/BWI3_HR.R:717:59: style: Commas should always have a space after.
                                    by=list(baeume.ba$tnr,baeume.ba$enr),sum)
                                                          ^
NO COPY: R/BWI3_HR.R:717:74: style: Commas should always have a space after.
                                    by=list(baeume.ba$tnr,baeume.ba$enr),sum)
                                                                         ^
NO COPY: R/BWI3_HR.R:718:1: style: lines should not be more than 80 characters.
            ne.T <- stats::aggregate(rep(1,length(nb.TE[,1])),by=list(nb.TE$Group.1),
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:718:44: style: Commas should always have a space after.
            ne.T <- stats::aggregate(rep(1,length(nb.TE[,1])),by=list(nb.TE$Group.1),
                                           ^
NO COPY: R/BWI3_HR.R:718:58: style: Commas should always have a space after.
            ne.T <- stats::aggregate(rep(1,length(nb.TE[,1])),by=list(nb.TE$Group.1),
                                                         ^
NO COPY: R/BWI3_HR.R:718:63: style: Commas should always have a space after.
            ne.T <- stats::aggregate(rep(1,length(nb.TE[,1])),by=list(nb.TE$Group.1),
                                                              ^
NO COPY: R/BWI3_HR.R:718:65: style: Put spaces around all infix operators.
            ne.T <- stats::aggregate(rep(1,length(nb.TE[,1])),by=list(nb.TE$Group.1),
                                                               ~^~
NO COPY: R/BWI3_HR.R:720:36: style: Commas should always have a space after.
            names(ne.T) <- c("tnr","n.te")
                                   ^
NO COPY: R/BWI3_HR.R:722:24: style: Put spaces around all infix operators.
            y.pl <- mpl*ne.T$n.te
                      ~^~
NO COPY: R/BWI3_HR.R:723:54: style: Commas should always have a space after.
            R.list <- r.variance.fun(cbind(ne.T$n.te,y.pl),nT)
                                                     ^
NO COPY: R/BWI3_HR.R:723:60: style: Commas should always have a space after.
            R.list <- r.variance.fun(cbind(ne.T$n.te,y.pl),nT)
                                                           ^
NO COPY: R/BWI3_HR.R:725:13: style: Variable and function names should be all lowercase.
            mPL.na.bagr.akl.dkl[1,i.n,i,j,k] <- R.list$R.xy
            ^~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:725:13: style: Words within variable and function names should be separated by '_' rather than '.'.
            mPL.na.bagr.akl.dkl[1,i.n,i,j,k] <- R.list$R.xy
            ^~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:725:35: style: Commas should always have a space after.
            mPL.na.bagr.akl.dkl[1,i.n,i,j,k] <- R.list$R.xy
                                  ^
NO COPY: R/BWI3_HR.R:725:39: style: Commas should always have a space after.
            mPL.na.bagr.akl.dkl[1,i.n,i,j,k] <- R.list$R.xy
                                      ^
NO COPY: R/BWI3_HR.R:725:41: style: Commas should always have a space after.
            mPL.na.bagr.akl.dkl[1,i.n,i,j,k] <- R.list$R.xy
                                        ^
NO COPY: R/BWI3_HR.R:725:43: style: Commas should always have a space after.
            mPL.na.bagr.akl.dkl[1,i.n,i,j,k] <- R.list$R.xy
                                          ^
NO COPY: R/BWI3_HR.R:727:14: style: Commented code should be removed.
            #mPL.na.bagr.akl.dkl[1,i.n,i,j,k] <- sum(y.pl)/sum(ne.T$n.te)
             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:729:13: style: Variable and function names should be all lowercase.
            mPL.na.bagr.akl.dkl[2,i.n,i,j,k] <- sqrt(R.list$V.R.xy)
            ^~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:729:13: style: Words within variable and function names should be separated by '_' rather than '.'.
            mPL.na.bagr.akl.dkl[2,i.n,i,j,k] <- sqrt(R.list$V.R.xy)
            ^~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:729:35: style: Commas should always have a space after.
            mPL.na.bagr.akl.dkl[2,i.n,i,j,k] <- sqrt(R.list$V.R.xy)
                                  ^
NO COPY: R/BWI3_HR.R:729:39: style: Commas should always have a space after.
            mPL.na.bagr.akl.dkl[2,i.n,i,j,k] <- sqrt(R.list$V.R.xy)
                                      ^
NO COPY: R/BWI3_HR.R:729:41: style: Commas should always have a space after.
            mPL.na.bagr.akl.dkl[2,i.n,i,j,k] <- sqrt(R.list$V.R.xy)
                                        ^
NO COPY: R/BWI3_HR.R:729:43: style: Commas should always have a space after.
            mPL.na.bagr.akl.dkl[2,i.n,i,j,k] <- sqrt(R.list$V.R.xy)
                                          ^
NO COPY: R/BWI3_HR.R:729:61: style: Words within variable and function names should be separated by '_' rather than '.'.
            mPL.na.bagr.akl.dkl[2,i.n,i,j,k] <- sqrt(R.list$V.R.xy)
                                                            ^~~~~~
NO COPY: R/BWI3_HR.R:732:13: style: Opening curly braces should never go on their own line and should always be followed by a new line.
            {
            ^
NO COPY: R/BWI3_HR.R:734:1: style: lines should not be more than 80 characters.
              #Perioden-Total, j\u00e4hrl. Total, j\u00e4hrl. Ha-Wert (k\u00e4/01-03-2014)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:735:51: style: Commas should always have a space after.
              R.list <- r.variance.fun(cbind(xy$m,xy[,(l+t.pos+1)]),nT)
                                                  ^
NO COPY: R/BWI3_HR.R:735:55: style: Commas should always have a space after.
              R.list <- r.variance.fun(cbind(xy$m,xy[,(l+t.pos+1)]),nT)
                                                      ^
NO COPY: R/BWI3_HR.R:735:55: style: Place a space before left parenthesis, except in a function call.
              R.list <- r.variance.fun(cbind(xy$m,xy[,(l+t.pos+1)]),nT)
                                                      ^
NO COPY: R/BWI3_HR.R:735:57: style: Put spaces around all infix operators.
              R.list <- r.variance.fun(cbind(xy$m,xy[,(l+t.pos+1)]),nT)
                                                       ~^~
NO COPY: R/BWI3_HR.R:735:63: style: Put spaces around all infix operators.
              R.list <- r.variance.fun(cbind(xy$m,xy[,(l+t.pos+1)]),nT)
                                                             ~^~
NO COPY: R/BWI3_HR.R:735:69: style: Commas should always have a space after.
              R.list <- r.variance.fun(cbind(xy$m,xy[,(l+t.pos+1)]),nT)
                                                                    ^
NO COPY: R/BWI3_HR.R:736:15: style: Words within variable and function names should be separated by '_' rather than '.'.
              Y.na.bagr.akl.dkl[l,1,i.n,i,j,k] <- R.list$R.xy*A
              ^~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:736:35: style: Commas should always have a space after.
              Y.na.bagr.akl.dkl[l,1,i.n,i,j,k] <- R.list$R.xy*A
                                  ^
NO COPY: R/BWI3_HR.R:736:37: style: Commas should always have a space after.
              Y.na.bagr.akl.dkl[l,1,i.n,i,j,k] <- R.list$R.xy*A
                                    ^
NO COPY: R/BWI3_HR.R:736:41: style: Commas should always have a space after.
              Y.na.bagr.akl.dkl[l,1,i.n,i,j,k] <- R.list$R.xy*A
                                        ^
NO COPY: R/BWI3_HR.R:736:43: style: Commas should always have a space after.
              Y.na.bagr.akl.dkl[l,1,i.n,i,j,k] <- R.list$R.xy*A
                                          ^
NO COPY: R/BWI3_HR.R:736:45: style: Commas should always have a space after.
              Y.na.bagr.akl.dkl[l,1,i.n,i,j,k] <- R.list$R.xy*A
                                            ^
NO COPY: R/BWI3_HR.R:736:62: style: Put spaces around all infix operators.
              Y.na.bagr.akl.dkl[l,1,i.n,i,j,k] <- R.list$R.xy*A
                                                            ~^~
NO COPY: R/BWI3_HR.R:737:16: style: Commented code should be removed.
              #Y.na.bagr.akl.dkl[l,1,i.n,i,j,k] <- sum(xy[,(1+l)])/sum(x)*A
               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:739:15: style: Words within variable and function names should be separated by '_' rather than '.'.
              Y.na.bagr.akl.dkl[l,2,i.n,i,j,k] <- sqrt(R.list$V.R.xy)*A
              ^~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:739:35: style: Commas should always have a space after.
              Y.na.bagr.akl.dkl[l,2,i.n,i,j,k] <- sqrt(R.list$V.R.xy)*A
                                  ^
NO COPY: R/BWI3_HR.R:739:37: style: Commas should always have a space after.
              Y.na.bagr.akl.dkl[l,2,i.n,i,j,k] <- sqrt(R.list$V.R.xy)*A
                                    ^
NO COPY: R/BWI3_HR.R:739:41: style: Commas should always have a space after.
              Y.na.bagr.akl.dkl[l,2,i.n,i,j,k] <- sqrt(R.list$V.R.xy)*A
                                        ^
NO COPY: R/BWI3_HR.R:739:43: style: Commas should always have a space after.
              Y.na.bagr.akl.dkl[l,2,i.n,i,j,k] <- sqrt(R.list$V.R.xy)*A
                                          ^
NO COPY: R/BWI3_HR.R:739:45: style: Commas should always have a space after.
              Y.na.bagr.akl.dkl[l,2,i.n,i,j,k] <- sqrt(R.list$V.R.xy)*A
                                            ^
NO COPY: R/BWI3_HR.R:739:63: style: Words within variable and function names should be separated by '_' rather than '.'.
              Y.na.bagr.akl.dkl[l,2,i.n,i,j,k] <- sqrt(R.list$V.R.xy)*A
                                                              ^~~~~~
NO COPY: R/BWI3_HR.R:739:70: style: Put spaces around all infix operators.
              Y.na.bagr.akl.dkl[l,2,i.n,i,j,k] <- sqrt(R.list$V.R.xy)*A
                                                                    ~^~
NO COPY: R/BWI3_HR.R:742:30: style: Put spaces around all infix operators.
            off <- length(xy)-4
                            ~^~
NO COPY: R/BWI3_HR.R:745:13: style: Opening curly braces should never go on their own line and should always be followed by a new line.
            {
            ^
NO COPY: R/BWI3_HR.R:747:1: style: lines should not be more than 80 characters.
              #Perioden-Total, j\u00e4hrl. Total, j\u00e4hrl. Ha-Wert (k\u00e4/01-03-2014)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:748:54: style: Commas should always have a space after.
              R.list <- r.variance.fun(cbind(xy$mbaf,xy[,(l+off)]),nT)
                                                     ^
NO COPY: R/BWI3_HR.R:748:58: style: Commas should always have a space after.
              R.list <- r.variance.fun(cbind(xy$mbaf,xy[,(l+off)]),nT)
                                                         ^
NO COPY: R/BWI3_HR.R:748:58: style: Place a space before left parenthesis, except in a function call.
              R.list <- r.variance.fun(cbind(xy$mbaf,xy[,(l+off)]),nT)
                                                         ^
NO COPY: R/BWI3_HR.R:748:60: style: Put spaces around all infix operators.
              R.list <- r.variance.fun(cbind(xy$mbaf,xy[,(l+off)]),nT)
                                                          ~^~
NO COPY: R/BWI3_HR.R:748:68: style: Commas should always have a space after.
              R.list <- r.variance.fun(cbind(xy$mbaf,xy[,(l+off)]),nT)
                                                                   ^
NO COPY: R/BWI3_HR.R:749:15: style: Words within variable and function names should be separated by '_' rather than '.'.
              Y.na.bagr.akl.dkl[(l+8),1,i.n,i,j,k] <- R.list$R.xy
              ^~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:749:35: style: Put spaces around all infix operators.
              Y.na.bagr.akl.dkl[(l+8),1,i.n,i,j,k] <- R.list$R.xy
                                 ~^~
NO COPY: R/BWI3_HR.R:749:39: style: Commas should always have a space after.
              Y.na.bagr.akl.dkl[(l+8),1,i.n,i,j,k] <- R.list$R.xy
                                      ^
NO COPY: R/BWI3_HR.R:749:41: style: Commas should always have a space after.
              Y.na.bagr.akl.dkl[(l+8),1,i.n,i,j,k] <- R.list$R.xy
                                        ^
NO COPY: R/BWI3_HR.R:749:45: style: Commas should always have a space after.
              Y.na.bagr.akl.dkl[(l+8),1,i.n,i,j,k] <- R.list$R.xy
                                            ^
NO COPY: R/BWI3_HR.R:749:47: style: Commas should always have a space after.
              Y.na.bagr.akl.dkl[(l+8),1,i.n,i,j,k] <- R.list$R.xy
                                              ^
NO COPY: R/BWI3_HR.R:749:49: style: Commas should always have a space after.
              Y.na.bagr.akl.dkl[(l+8),1,i.n,i,j,k] <- R.list$R.xy
                                                ^
NO COPY: R/BWI3_HR.R:751:15: style: Words within variable and function names should be separated by '_' rather than '.'.
              Y.na.bagr.akl.dkl[(l+8),2,i.n,i,j,k] <- sqrt(R.list$V.R.xy)
              ^~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:751:35: style: Put spaces around all infix operators.
              Y.na.bagr.akl.dkl[(l+8),2,i.n,i,j,k] <- sqrt(R.list$V.R.xy)
                                 ~^~
NO COPY: R/BWI3_HR.R:751:39: style: Commas should always have a space after.
              Y.na.bagr.akl.dkl[(l+8),2,i.n,i,j,k] <- sqrt(R.list$V.R.xy)
                                      ^
NO COPY: R/BWI3_HR.R:751:41: style: Commas should always have a space after.
              Y.na.bagr.akl.dkl[(l+8),2,i.n,i,j,k] <- sqrt(R.list$V.R.xy)
                                        ^
NO COPY: R/BWI3_HR.R:751:45: style: Commas should always have a space after.
              Y.na.bagr.akl.dkl[(l+8),2,i.n,i,j,k] <- sqrt(R.list$V.R.xy)
                                            ^
NO COPY: R/BWI3_HR.R:751:47: style: Commas should always have a space after.
              Y.na.bagr.akl.dkl[(l+8),2,i.n,i,j,k] <- sqrt(R.list$V.R.xy)
                                              ^
NO COPY: R/BWI3_HR.R:751:49: style: Commas should always have a space after.
              Y.na.bagr.akl.dkl[(l+8),2,i.n,i,j,k] <- sqrt(R.list$V.R.xy)
                                                ^
NO COPY: R/BWI3_HR.R:751:67: style: Words within variable and function names should be separated by '_' rather than '.'.
              Y.na.bagr.akl.dkl[(l+8),2,i.n,i,j,k] <- sqrt(R.list$V.R.xy)
                                                                  ^~~~~~
NO COPY: R/BWI3_HR.R:761:4: style: Commented code should be removed.
  #AKL-Labels
   ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:762:34: style: Commas should always have a space after.
  akl.lab <- akl.lab.fun(A.klass,A.k)
                                 ^
NO COPY: R/BWI3_HR.R:763:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: R/BWI3_HR.R:764:4: style: Commented code should be removed.
  #DKL-Labels
   ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:765:34: style: Commas should always have a space after.
  dkl.lab <- dkl.lab.fun(D.klass,D.k) #k\u00e4/16.07.14
                                 ^
NO COPY: R/BWI3_HR.R:766:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: R/BWI3_HR.R:769:20: style: Commas should always have a space after.
  a <- regexpr("/",baeume$bemerk[baeume$stp==0][1],fixed=T)
                   ^
NO COPY: R/BWI3_HR.R:769:44: style: Put spaces around all infix operators.
  a <- regexpr("/",baeume$bemerk[baeume$stp==0][1],fixed=T)
                                          ~^~~
NO COPY: R/BWI3_HR.R:769:52: style: Commas should always have a space after.
  a <- regexpr("/",baeume$bemerk[baeume$stp==0][1],fixed=T)
                                                   ^
NO COPY: R/BWI3_HR.R:769:57: style: Put spaces around all infix operators.
  a <- regexpr("/",baeume$bemerk[baeume$stp==0][1],fixed=T)
                                                       ~^~
NO COPY: R/BWI3_HR.R:770:51: style: Put spaces around all infix operators.
  b <- nchar(as.character(baeume$bemerk[baeume$stp==0][1]))
                                                 ~^~~
NO COPY: R/BWI3_HR.R:771:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  version.baeume.b  <- substr(as.character(baeume$bemerk[baeume$stp==0][1]),a,b)
  ^~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:771:3: warning: local variable 'version.baeume.b' assigned but may not be used
  version.baeume.b  <- substr(as.character(baeume$bemerk[baeume$stp==0][1]),a,b)
  ^~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:771:68: style: Put spaces around all infix operators.
  version.baeume.b  <- substr(as.character(baeume$bemerk[baeume$stp==0][1]),a,b)
                                                                  ~^~~
NO COPY: R/BWI3_HR.R:771:77: style: Commas should always have a space after.
  version.baeume.b  <- substr(as.character(baeume$bemerk[baeume$stp==0][1]),a,b)
                                                                            ^
NO COPY: R/BWI3_HR.R:771:79: style: Commas should always have a space after.
  version.baeume.b  <- substr(as.character(baeume$bemerk[baeume$stp==0][1]),a,b)
                                                                              ^
NO COPY: R/BWI3_HR.R:772:20: style: Put spaces around all infix operators.
  Log <- list(Datum=Sys.time(),
                  ~^~
NO COPY: R/BWI3_HR.R:773:21: style: Put spaces around all infix operators.
    Version.baeume.b=substr(as.character(baeume$bemerk[baeume$stp==0][1]),a,b))
                   ~^~
NO COPY: R/BWI3_HR.R:773:66: style: Put spaces around all infix operators.
    Version.baeume.b=substr(as.character(baeume$bemerk[baeume$stp==0][1]),a,b))
                                                                ~^~~
NO COPY: R/BWI3_HR.R:773:75: style: Commas should always have a space after.
    Version.baeume.b=substr(as.character(baeume$bemerk[baeume$stp==0][1]),a,b))
                                                                          ^
NO COPY: R/BWI3_HR.R:773:77: style: Commas should always have a space after.
    Version.baeume.b=substr(as.character(baeume$bemerk[baeume$stp==0][1]),a,b))
                                                                            ^
NO COPY: R/BWI3_HR.R:775:18: style: Put spaces around all infix operators.
  return(list(Log=Log, Stratum=auswahl, nTE=n.te.s, HBF=T.hbf, se.HBF=se.T.hbf,
                ~^~
NO COPY: R/BWI3_HR.R:775:31: style: Put spaces around all infix operators.
  return(list(Log=Log, Stratum=auswahl, nTE=n.te.s, HBF=T.hbf, se.HBF=se.T.hbf,
                             ~^~
NO COPY: R/BWI3_HR.R:775:44: style: Put spaces around all infix operators.
  return(list(Log=Log, Stratum=auswahl, nTE=n.te.s, HBF=T.hbf, se.HBF=se.T.hbf,
                                          ~^~
NO COPY: R/BWI3_HR.R:775:45: style: Words within variable and function names should be separated by '_' rather than '.'.
  return(list(Log=Log, Stratum=auswahl, nTE=n.te.s, HBF=T.hbf, se.HBF=se.T.hbf,
                                            ^~~~~~
NO COPY: R/BWI3_HR.R:775:56: style: Put spaces around all infix operators.
  return(list(Log=Log, Stratum=auswahl, nTE=n.te.s, HBF=T.hbf, se.HBF=se.T.hbf,
                                                      ~^~
NO COPY: R/BWI3_HR.R:775:70: style: Put spaces around all infix operators.
  return(list(Log=Log, Stratum=auswahl, nTE=n.te.s, HBF=T.hbf, se.HBF=se.T.hbf,
                                                                    ~^~
NO COPY: R/BWI3_HR.R:775:71: style: Words within variable and function names should be separated by '_' rather than '.'.
  return(list(Log=Log, Stratum=auswahl, nTE=n.te.s, HBF=T.hbf, se.HBF=se.T.hbf,
                                                                      ^~~~~~~~
NO COPY: R/BWI3_HR.R:776:24: style: Put spaces around all infix operators.
              Attribute=c("V_DhmR", "V_EoR", "oiB", "N_Dh",
                      ~^~
NO COPY: R/BWI3_HR.R:779:45: style: Commas should always have a space after.
              "Gr\u00f6\u00dfen" = c("Wert","Standardfehler"),
                                            ^
NO COPY: R/BWI3_HR.R:781:19: style: Put spaces around all infix operators.
              BAGR=bagr.list, AKL = akl.lab[1:A.k], DKL = dkl.lab,
                 ~^~
NO COPY: R/BWI3_HR.R:782:40: style: Put spaces around all infix operators.
              T.VBN.A.NArt.Bagr.Akl.Dkl=Y.na.bagr.akl.dkl,
                                      ~^~
NO COPY: R/BWI3_HR.R:782:41: style: Words within variable and function names should be separated by '_' rather than '.'.
              T.VBN.A.NArt.Bagr.Akl.Dkl=Y.na.bagr.akl.dkl,
                                        ^~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:783:31: style: Put spaces around all infix operators.
              BAF.bagr.akl.dkl=BAF.bagr.akl.dkl,
                             ~^~
NO COPY: R/BWI3_HR.R:783:32: style: Words within variable and function names should be separated by '_' rather than '.'.
              BAF.bagr.akl.dkl=BAF.bagr.akl.dkl,
                               ^~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:784:36: style: Put spaces around all infix operators.
              mPL.NArt.Bagr.Akl.Dkl=mPL.na.bagr.akl.dkl,
                                  ~^~
NO COPY: R/BWI3_HR.R:784:37: style: Variable and function names should be all lowercase.
              mPL.NArt.Bagr.Akl.Dkl=mPL.na.bagr.akl.dkl,
                                    ^~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:784:37: style: Words within variable and function names should be separated by '_' rather than '.'.
              mPL.NArt.Bagr.Akl.Dkl=mPL.na.bagr.akl.dkl,
                                    ^~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:785:59: style: Words within variable and function names should be separated by '_' rather than '.'.
              mPL.Stratum = mpl.stratum, SE.mPL.Stratum = se.mpl.stratum,
                                                          ^~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:786:35: style: Put spaces around all infix operators.
              nT.NArt.Bagr.Akl.Dkl=nT.na.bagr.akl.dkl))
                                 ~^~
NO COPY: R/BWI3_HR.R:786:36: style: Variable and function names should be all lowercase.
              nT.NArt.Bagr.Akl.Dkl=nT.na.bagr.akl.dkl))
                                   ^~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:786:36: style: Words within variable and function names should be separated by '_' rather than '.'.
              nT.NArt.Bagr.Akl.Dkl=nT.na.bagr.akl.dkl))
                                   ^~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:875:29: style: Commas should always have a space after.
          function(BA.grupp,A.klass,D.klass,auswahl,N.art,A,
                            ^
NO COPY: R/BWI3_HR.R:875:37: style: Commas should always have a space after.
          function(BA.grupp,A.klass,D.klass,auswahl,N.art,A,
                                    ^
NO COPY: R/BWI3_HR.R:875:45: style: Commas should always have a space after.
          function(BA.grupp,A.klass,D.klass,auswahl,N.art,A,
                                            ^
NO COPY: R/BWI3_HR.R:875:53: style: Commas should always have a space after.
          function(BA.grupp,A.klass,D.klass,auswahl,N.art,A,
                                                    ^
NO COPY: R/BWI3_HR.R:875:59: style: Commas should always have a space after.
          function(BA.grupp,A.klass,D.klass,auswahl,N.art,A,
                                                          ^
NO COPY: R/BWI3_HR.R:885:4: style: Commented code should be removed.
  #auswahl$Begehbar=1; auswahl$Wa=c(1:3)
   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:886:4: style: Commented code should be removed.
  #ecken.2.s <- stratum.fun(auswahl,ecken.2)
   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:888:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  ecken.2.s <- stratum.fun(list(Wa=c(1:3),Begehbar=1),ecken.2)
  ^~~~~~~~~
NO COPY: R/BWI3_HR.R:888:35: style: Put spaces around all infix operators.
  ecken.2.s <- stratum.fun(list(Wa=c(1:3),Begehbar=1),ecken.2)
                                 ~^~
NO COPY: R/BWI3_HR.R:888:43: style: Commas should always have a space after.
  ecken.2.s <- stratum.fun(list(Wa=c(1:3),Begehbar=1),ecken.2)
                                          ^
NO COPY: R/BWI3_HR.R:888:51: style: Put spaces around all infix operators.
  ecken.2.s <- stratum.fun(list(Wa=c(1:3),Begehbar=1),ecken.2)
                                                 ~^~
NO COPY: R/BWI3_HR.R:888:55: style: Commas should always have a space after.
  ecken.2.s <- stratum.fun(list(Wa=c(1:3),Begehbar=1),ecken.2)
                                                      ^
NO COPY: R/BWI3_HR.R:890:13: style: Use <-, not =, for assignment.
  auswahl$Wa=c(3,5)
            ^
NO COPY: R/BWI3_HR.R:890:13: style: Put spaces around all infix operators.
  auswahl$Wa=c(3,5)
           ~^~
NO COPY: R/BWI3_HR.R:890:18: style: Commas should always have a space after.
  auswahl$Wa=c(3,5)
                 ^
NO COPY: R/BWI3_HR.R:891:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  ecken.3.s <- stratum.fun(auswahl,ecken.3)
  ^~~~~~~~~
NO COPY: R/BWI3_HR.R:891:36: style: Commas should always have a space after.
  ecken.3.s <- stratum.fun(auswahl,ecken.3)
                                   ^
NO COPY: R/BWI3_HR.R:893:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  ecken.23.hb <- merge(ecken.3.s[TRUE,  c("TNr", "ENr")],
  ^~~~~~~~~~~
NO COPY: R/BWI3_HR.R:893:24: style: Words within variable and function names should be separated by '_' rather than '.'.
  ecken.23.hb <- merge(ecken.3.s[TRUE,  c("TNr", "ENr")],
                       ^~~~~~~~~
NO COPY: R/BWI3_HR.R:894:7: style: Words within variable and function names should be separated by '_' rather than '.'.
      ecken.2.s[TRUE, c("TNr", "ENr")],by=c("TNr","ENr"))
      ^~~~~~~~~
NO COPY: R/BWI3_HR.R:894:40: style: Commas should always have a space after.
      ecken.2.s[TRUE, c("TNr", "ENr")],by=c("TNr","ENr"))
                                       ^
NO COPY: R/BWI3_HR.R:894:42: style: Put spaces around all infix operators.
      ecken.2.s[TRUE, c("TNr", "ENr")],by=c("TNr","ENr"))
                                        ~^~
NO COPY: R/BWI3_HR.R:894:51: style: Commas should always have a space after.
      ecken.2.s[TRUE, c("TNr", "ENr")],by=c("TNr","ENr"))
                                                  ^
NO COPY: R/BWI3_HR.R:895:1: style: lines should not be more than 80 characters.
  ecken.23.hb <- merge(ecken.23.hb,ecken.3[TRUE, c("TNr", "ENr", "PL", "PLkal")],
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:895:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  ecken.23.hb <- merge(ecken.23.hb,ecken.3[TRUE, c("TNr", "ENr", "PL", "PLkal")],
  ^~~~~~~~~~~
NO COPY: R/BWI3_HR.R:895:24: style: Words within variable and function names should be separated by '_' rather than '.'.
  ecken.23.hb <- merge(ecken.23.hb,ecken.3[TRUE, c("TNr", "ENr", "PL", "PLkal")],
                       ^~~~~~~~~~~
NO COPY: R/BWI3_HR.R:895:36: style: Commas should always have a space after.
  ecken.23.hb <- merge(ecken.23.hb,ecken.3[TRUE, c("TNr", "ENr", "PL", "PLkal")],
                                   ^
NO COPY: R/BWI3_HR.R:896:9: style: Put spaces around all infix operators.
      by=c("TNr","ENr"))
       ~^~
NO COPY: R/BWI3_HR.R:896:18: style: Commas should always have a space after.
      by=c("TNr","ENr"))
                 ^
NO COPY: R/BWI3_HR.R:897:14: style: Words within variable and function names should be separated by '_' rather than '.'.
  stratum <- ecken.23.hb
             ^~~~~~~~~~~
NO COPY: R/BWI3_HR.R:902:4: style: Commented code should be removed.
  #inv <- 1
   ^~~~~~~~
NO COPY: R/BWI3_HR.R:903:4: style: Commented code should be removed.
  #stratum <- stratum.fun(auswahl,ecken)
   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:907:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  n.te.s <- length(stratum[,1])
  ^~~~~~
NO COPY: R/BWI3_HR.R:907:29: style: Commas should always have a space after.
  n.te.s <- length(stratum[,1])
                            ^
NO COPY: R/BWI3_HR.R:908:1: style: lines should not be more than 80 characters.
  #<y> steht hier f\u00fcr die Anzahl der Traktecken auf begehbarem HB im Stratum
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:909:31: style: Commas should always have a space after.
  y <- stats::aggregate(rep(1,length(stratum[,1])),by=list(stratum$tnr),sum)
                              ^
NO COPY: R/BWI3_HR.R:909:47: style: Commas should always have a space after.
  y <- stats::aggregate(rep(1,length(stratum[,1])),by=list(stratum$tnr),sum)
                                              ^
NO COPY: R/BWI3_HR.R:909:52: style: Commas should always have a space after.
  y <- stats::aggregate(rep(1,length(stratum[,1])),by=list(stratum$tnr),sum)
                                                   ^
NO COPY: R/BWI3_HR.R:909:54: style: Put spaces around all infix operators.
  y <- stats::aggregate(rep(1,length(stratum[,1])),by=list(stratum$tnr),sum)
                                                    ~^~
NO COPY: R/BWI3_HR.R:909:73: style: Commas should always have a space after.
  y <- stats::aggregate(rep(1,length(stratum[,1])),by=list(stratum$tnr),sum)
                                                                        ^
NO COPY: R/BWI3_HR.R:910:23: style: Commas should always have a space after.
  names(y) <- c("tnr","y")
                      ^
NO COPY: R/BWI3_HR.R:912:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  n.t.s <- length(y[,1])
  ^~~~~
NO COPY: R/BWI3_HR.R:912:3: warning: local variable 'n.t.s' assigned but may not be used
  n.t.s <- length(y[,1])
  ^~~~~
NO COPY: R/BWI3_HR.R:912:22: style: Commas should always have a space after.
  n.t.s <- length(y[,1])
                     ^
NO COPY: R/BWI3_HR.R:914:16: style: Commas should always have a space after.
  y <- merge(y,trakte[TRUE, c("tnr", "m")],by=c("tnr"))
               ^
NO COPY: R/BWI3_HR.R:914:44: style: Commas should always have a space after.
  y <- merge(y,trakte[TRUE, c("tnr", "m")],by=c("tnr"))
                                           ^
NO COPY: R/BWI3_HR.R:914:46: style: Put spaces around all infix operators.
  y <- merge(y,trakte[TRUE, c("tnr", "m")],by=c("tnr"))
                                            ~^~
NO COPY: R/BWI3_HR.R:915:14: style: Trailing whitespace is superfluous.
  # this was:  
             ^~
NO COPY: R/BWI3_HR.R:916:6: style: Commented code should be removed.
  #  y <- merge(y,subset(trakte,select=c(tnr,m),by=c(tnr)))
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:917:80: style: Trailing whitespace is superfluous.
  # where the ellipsis of subset() swallows up the misplaces by argument (meant 
                                                                               ^
NO COPY: R/BWI3_HR.R:918:18: style: Trailing whitespace is superfluous.
  # for merge())! 
                 ^
NO COPY: R/BWI3_HR.R:923:24: style: Commas should always have a space after.
  nT <- length(trakte[,1])
                       ^
NO COPY: R/BWI3_HR.R:925:4: style: Commented code should be removed.
  #HBFl. [ha]
   ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:926:20: style: Put spaces around all infix operators.
  T.hbf <- sum(y$y)/sum(x)*A
                  ~^~
NO COPY: R/BWI3_HR.R:926:27: style: Put spaces around all infix operators.
  T.hbf <- sum(y$y)/sum(x)*A
                         ~^~
NO COPY: R/BWI3_HR.R:927:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  var.T.hbf <-  nT/(nT-1)*T.hbf^2*(sum(y$y^2)/sum(y$y)^2+sum(x^2)/sum(x)^2
  ^~~~~~~~~
NO COPY: R/BWI3_HR.R:927:19: style: Put spaces around all infix operators.
  var.T.hbf <-  nT/(nT-1)*T.hbf^2*(sum(y$y^2)/sum(y$y)^2+sum(x^2)/sum(x)^2
                 ~^~
NO COPY: R/BWI3_HR.R:927:20: style: Place a space before left parenthesis, except in a function call.
  var.T.hbf <-  nT/(nT-1)*T.hbf^2*(sum(y$y^2)/sum(y$y)^2+sum(x^2)/sum(x)^2
                   ^
NO COPY: R/BWI3_HR.R:927:23: style: Put spaces around all infix operators.
  var.T.hbf <-  nT/(nT-1)*T.hbf^2*(sum(y$y^2)/sum(y$y)^2+sum(x^2)/sum(x)^2
                     ~^~
NO COPY: R/BWI3_HR.R:927:26: style: Put spaces around all infix operators.
  var.T.hbf <-  nT/(nT-1)*T.hbf^2*(sum(y$y^2)/sum(y$y)^2+sum(x^2)/sum(x)^2
                        ~^~
NO COPY: R/BWI3_HR.R:927:32: style: Put spaces around all infix operators.
  var.T.hbf <-  nT/(nT-1)*T.hbf^2*(sum(y$y^2)/sum(y$y)^2+sum(x^2)/sum(x)^2
                              ~^~
NO COPY: R/BWI3_HR.R:927:34: style: Put spaces around all infix operators.
  var.T.hbf <-  nT/(nT-1)*T.hbf^2*(sum(y$y^2)/sum(y$y)^2+sum(x^2)/sum(x)^2
                                ~^~
NO COPY: R/BWI3_HR.R:927:35: style: Place a space before left parenthesis, except in a function call.
  var.T.hbf <-  nT/(nT-1)*T.hbf^2*(sum(y$y^2)/sum(y$y)^2+sum(x^2)/sum(x)^2
                                  ^
NO COPY: R/BWI3_HR.R:927:43: style: Put spaces around all infix operators.
  var.T.hbf <-  nT/(nT-1)*T.hbf^2*(sum(y$y^2)/sum(y$y)^2+sum(x^2)/sum(x)^2
                                         ~^~
NO COPY: R/BWI3_HR.R:927:46: style: Put spaces around all infix operators.
  var.T.hbf <-  nT/(nT-1)*T.hbf^2*(sum(y$y^2)/sum(y$y)^2+sum(x^2)/sum(x)^2
                                            ~^~
NO COPY: R/BWI3_HR.R:927:55: style: Put spaces around all infix operators.
  var.T.hbf <-  nT/(nT-1)*T.hbf^2*(sum(y$y^2)/sum(y$y)^2+sum(x^2)/sum(x)^2
                                                     ~^~
NO COPY: R/BWI3_HR.R:927:57: style: Put spaces around all infix operators.
  var.T.hbf <-  nT/(nT-1)*T.hbf^2*(sum(y$y^2)/sum(y$y)^2+sum(x^2)/sum(x)^2
                                                       ~^~
NO COPY: R/BWI3_HR.R:927:63: style: Put spaces around all infix operators.
  var.T.hbf <-  nT/(nT-1)*T.hbf^2*(sum(y$y^2)/sum(y$y)^2+sum(x^2)/sum(x)^2
                                                             ~^~
NO COPY: R/BWI3_HR.R:927:66: style: Put spaces around all infix operators.
  var.T.hbf <-  nT/(nT-1)*T.hbf^2*(sum(y$y^2)/sum(y$y)^2+sum(x^2)/sum(x)^2
                                                                ~^~
NO COPY: R/BWI3_HR.R:927:73: style: Put spaces around all infix operators.
  var.T.hbf <-  nT/(nT-1)*T.hbf^2*(sum(y$y^2)/sum(y$y)^2+sum(x^2)/sum(x)^2
                                                                       ~^~
NO COPY: R/BWI3_HR.R:928:23: style: Put spaces around all infix operators.
                      -2*sum(y$y*y$m)/sum(y$y)/sum(x))
                      ^~
NO COPY: R/BWI3_HR.R:928:25: style: Put spaces around all infix operators.
                      -2*sum(y$y*y$m)/sum(y$y)/sum(x))
                       ~^~
NO COPY: R/BWI3_HR.R:928:33: style: Put spaces around all infix operators.
                      -2*sum(y$y*y$m)/sum(y$y)/sum(x))
                               ~^~
NO COPY: R/BWI3_HR.R:928:38: style: Put spaces around all infix operators.
                      -2*sum(y$y*y$m)/sum(y$y)/sum(x))
                                    ~^~
NO COPY: R/BWI3_HR.R:928:47: style: Put spaces around all infix operators.
                      -2*sum(y$y*y$m)/sum(y$y)/sum(x))
                                             ~^~
NO COPY: R/BWI3_HR.R:929:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  se.T.hbf <- var.T.hbf^0.5 #Standardfehler
  ^~~~~~~~
NO COPY: R/BWI3_HR.R:929:15: style: Words within variable and function names should be separated by '_' rather than '.'.
  se.T.hbf <- var.T.hbf^0.5 #Standardfehler
              ^~~~~~~~~
NO COPY: R/BWI3_HR.R:929:24: style: Put spaces around all infix operators.
  se.T.hbf <- var.T.hbf^0.5 #Standardfehler
                      ~^~
NO COPY: R/BWI3_HR.R:942:1: style: lines should not be more than 80 characters.
          baeume[TRUE, c("tnr", "enr", "stp", "bnr", "ba", "pk", "alt1", "alt2", "bhd1", "bhd2", "volv2", "vole2", "oib2", "nha1", "stfl1")],
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:943:57: style: Commas should always have a space after.
          stratum[TRUE, c("tnr", "enr", "pl", "plkal")],by=c("tnr","enr"))
                                                        ^
NO COPY: R/BWI3_HR.R:943:59: style: Put spaces around all infix operators.
          stratum[TRUE, c("tnr", "enr", "pl", "plkal")],by=c("tnr","enr"))
                                                         ~^~
NO COPY: R/BWI3_HR.R:943:68: style: Commas should always have a space after.
          stratum[TRUE, c("tnr", "enr", "pl", "plkal")],by=c("tnr","enr"))
                                                                   ^
NO COPY: R/BWI3_HR.R:950:4: style: Commented code should be removed.
  #BAGR-Liste
   ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:951:32: style: Commas should always have a space after.
  bagr.list <- c(BA.grupp[[1]],"Alle BA")
                               ^
NO COPY: R/BWI3_HR.R:952:4: style: Commented code should be removed.
  #n.bagr <- length(bagr.list)
   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:955:25: style: Put spaces around all infix operators.
                    by.x="ba",by.y="ICode",all.x=T)
                       ~^~
NO COPY: R/BWI3_HR.R:955:31: style: Commas should always have a space after.
                    by.x="ba",by.y="ICode",all.x=T)
                              ^
NO COPY: R/BWI3_HR.R:955:35: style: Put spaces around all infix operators.
                    by.x="ba",by.y="ICode",all.x=T)
                                 ~^~
NO COPY: R/BWI3_HR.R:955:44: style: Commas should always have a space after.
                    by.x="ba",by.y="ICode",all.x=T)
                                           ^
NO COPY: R/BWI3_HR.R:955:49: style: Put spaces around all infix operators.
                    by.x="ba",by.y="ICode",all.x=T)
                                               ~^~
NO COPY: R/BWI3_HR.R:959:1: style: lines should not be more than 80 characters.
  baeume.3.s <- merge(baeume.3[TRUE, c("TNr", "ENr", "STP", "BNr", "Pk", "BA", "Alt1", "Alt2", "BHD1", "BHD2", "StFl2")],
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:959:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  baeume.3.s <- merge(baeume.3[TRUE, c("TNr", "ENr", "STP", "BNr", "Pk", "BA", "Alt1", "Alt2", "BHD1", "BHD2", "StFl2")],
  ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:961:25: style: Put spaces around all infix operators.
                    by.x="BA",by.y="ICode",all.x=T)
                       ~^~
NO COPY: R/BWI3_HR.R:961:31: style: Commas should always have a space after.
                    by.x="BA",by.y="ICode",all.x=T)
                              ^
NO COPY: R/BWI3_HR.R:961:35: style: Put spaces around all infix operators.
                    by.x="BA",by.y="ICode",all.x=T)
                                 ~^~
NO COPY: R/BWI3_HR.R:961:44: style: Commas should always have a space after.
                    by.x="BA",by.y="ICode",all.x=T)
                                           ^
NO COPY: R/BWI3_HR.R:961:49: style: Put spaces around all infix operators.
                    by.x="BA",by.y="ICode",all.x=T)
                                               ~^~
NO COPY: R/BWI3_HR.R:962:9: style: Words within variable and function names should be separated by '_' rather than '.'.
  names(baeume.3.s) <- tolower(names(baeume.3.s))
        ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:962:38: style: Words within variable and function names should be separated by '_' rather than '.'.
  names(baeume.3.s) <- tolower(names(baeume.3.s))
                                     ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:963:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  baeume.3.s <- merge(baeume.3.s,stratum[TRUE, c("tnr", "enr", "pl", "plkal")],
  ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:963:23: style: Words within variable and function names should be separated by '_' rather than '.'.
  baeume.3.s <- merge(baeume.3.s,stratum[TRUE, c("tnr", "enr", "pl", "plkal")],
                      ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:963:34: style: Commas should always have a space after.
  baeume.3.s <- merge(baeume.3.s,stratum[TRUE, c("tnr", "enr", "pl", "plkal")],
                                 ^
NO COPY: R/BWI3_HR.R:964:13: style: Put spaces around all infix operators.
          by=c("tnr","enr"))
           ~^~
NO COPY: R/BWI3_HR.R:964:22: style: Commas should always have a space after.
          by=c("tnr","enr"))
                     ^
NO COPY: R/BWI3_HR.R:967:1: style: lines should not be more than 80 characters.
  #Mittlere Baumartenfl\u00e4chen nach BAGr, AKl und DKl zur Periodenmitte nach Trakt
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:968:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  mbaf.bagr.akl.dkl.tnr <- mbaf.bagr.alt.bhd.pm.fun(
  ^~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:969:46: style: Commas should always have a space after.
                                    baeume.s,baeume.3.s,A.klass,D.klass)
                                             ^
NO COPY: R/BWI3_HR.R:969:46: style: Words within variable and function names should be separated by '_' rather than '.'.
                                    baeume.s,baeume.3.s,A.klass,D.klass)
                                             ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:969:57: style: Commas should always have a space after.
                                    baeume.s,baeume.3.s,A.klass,D.klass)
                                                        ^
NO COPY: R/BWI3_HR.R:969:65: style: Commas should always have a space after.
                                    baeume.s,baeume.3.s,A.klass,D.klass)
                                                                ^
NO COPY: R/BWI3_HR.R:977:29: style: Put spaces around all infix operators.
                      breaks=c(seq(0,A.klass[[1]],A.klass[[2]]),A.max),right=T)
                           ~^~
NO COPY: R/BWI3_HR.R:977:38: style: Commas should always have a space after.
                      breaks=c(seq(0,A.klass[[1]],A.klass[[2]]),A.max),right=T)
                                     ^
NO COPY: R/BWI3_HR.R:977:51: style: Commas should always have a space after.
                      breaks=c(seq(0,A.klass[[1]],A.klass[[2]]),A.max),right=T)
                                                  ^
NO COPY: R/BWI3_HR.R:977:65: style: Commas should always have a space after.
                      breaks=c(seq(0,A.klass[[1]],A.klass[[2]]),A.max),right=T)
                                                                ^
NO COPY: R/BWI3_HR.R:977:72: style: Commas should always have a space after.
                      breaks=c(seq(0,A.klass[[1]],A.klass[[2]]),A.max),right=T)
                                                                       ^
NO COPY: R/BWI3_HR.R:977:77: style: Put spaces around all infix operators.
                      breaks=c(seq(0,A.klass[[1]],A.klass[[2]]),A.max),right=T)
                                                                           ~^~
NO COPY: R/BWI3_HR.R:985:3: style: Opening curly braces should never go on their own line and should always be followed by a new line.
  {
  ^
NO COPY: R/BWI3_HR.R:986:1: style: lines should not be more than 80 characters.
    brks <- c(0,7,seq(D.klass[[1]]+D.klass[[3]],D.klass[[2]],D.klass[[3]]),D.max)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:986:17: style: Commas should always have a space after.
    brks <- c(0,7,seq(D.klass[[1]]+D.klass[[3]],D.klass[[2]],D.klass[[3]]),D.max)
                ^
NO COPY: R/BWI3_HR.R:986:19: style: Commas should always have a space after.
    brks <- c(0,7,seq(D.klass[[1]]+D.klass[[3]],D.klass[[2]],D.klass[[3]]),D.max)
                  ^
NO COPY: R/BWI3_HR.R:986:35: style: Put spaces around all infix operators.
    brks <- c(0,7,seq(D.klass[[1]]+D.klass[[3]],D.klass[[2]],D.klass[[3]]),D.max)
                                 ~^~
NO COPY: R/BWI3_HR.R:986:49: style: Commas should always have a space after.
    brks <- c(0,7,seq(D.klass[[1]]+D.klass[[3]],D.klass[[2]],D.klass[[3]]),D.max)
                                                ^
NO COPY: R/BWI3_HR.R:986:62: style: Commas should always have a space after.
    brks <- c(0,7,seq(D.klass[[1]]+D.klass[[3]],D.klass[[2]],D.klass[[3]]),D.max)
                                                             ^
NO COPY: R/BWI3_HR.R:986:76: style: Commas should always have a space after.
    brks <- c(0,7,seq(D.klass[[1]]+D.klass[[3]],D.klass[[2]],D.klass[[3]]),D.max)
                                                                           ^
NO COPY: R/BWI3_HR.R:988:3: style: Opening curly braces should never go on their own line and should always be followed by a new line.
  {
  ^
NO COPY: R/BWI3_HR.R:989:32: style: Commas should always have a space after.
    brks <- c(seq(D.klass[[1]],D.klass[[2]],D.klass[[3]]),D.max)
                               ^
NO COPY: R/BWI3_HR.R:989:45: style: Commas should always have a space after.
    brks <- c(seq(D.klass[[1]],D.klass[[2]],D.klass[[3]]),D.max)
                                            ^
NO COPY: R/BWI3_HR.R:989:59: style: Commas should always have a space after.
    brks <- c(seq(D.klass[[1]],D.klass[[2]],D.klass[[3]]),D.max)
                                                          ^
NO COPY: R/BWI3_HR.R:992:44: style: Put spaces around all infix operators.
  baeume.s$dkl <- cut(baeume.s$bhd2, breaks=brks, right=F)
                                          ~^~
NO COPY: R/BWI3_HR.R:992:56: style: Put spaces around all infix operators.
  baeume.s$dkl <- cut(baeume.s$bhd2, breaks=brks, right=F)
                                                      ~^~
NO COPY: R/BWI3_HR.R:998:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  BAF.bagr.akl.dkl  <- array(dim=c(2,n.bagr,A.k,D.k))
  ^~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:998:33: style: Put spaces around all infix operators.
  BAF.bagr.akl.dkl  <- array(dim=c(2,n.bagr,A.k,D.k))
                               ~^~
NO COPY: R/BWI3_HR.R:998:38: style: Commas should always have a space after.
  BAF.bagr.akl.dkl  <- array(dim=c(2,n.bagr,A.k,D.k))
                                     ^
NO COPY: R/BWI3_HR.R:998:45: style: Commas should always have a space after.
  BAF.bagr.akl.dkl  <- array(dim=c(2,n.bagr,A.k,D.k))
                                            ^
NO COPY: R/BWI3_HR.R:998:49: style: Commas should always have a space after.
  BAF.bagr.akl.dkl  <- array(dim=c(2,n.bagr,A.k,D.k))
                                                ^
NO COPY: R/BWI3_HR.R:1000:5: style: Place a space before left parenthesis, except in a function call.
  if(N.art)
    ^
NO COPY: R/BWI3_HR.R:1001:5: style: Opening curly braces should never go on their own line and should always be followed by a new line.
    {pk.list <- list(c(2,3,9),c(4,5));n.nart <- 2}
    ^
NO COPY: R/BWI3_HR.R:1001:26: style: Commas should always have a space after.
    {pk.list <- list(c(2,3,9),c(4,5));n.nart <- 2}
                         ^
NO COPY: R/BWI3_HR.R:1001:28: style: Commas should always have a space after.
    {pk.list <- list(c(2,3,9),c(4,5));n.nart <- 2}
                           ^
NO COPY: R/BWI3_HR.R:1001:31: style: Commas should always have a space after.
    {pk.list <- list(c(2,3,9),c(4,5));n.nart <- 2}
                              ^
NO COPY: R/BWI3_HR.R:1001:35: style: Commas should always have a space after.
    {pk.list <- list(c(2,3,9),c(4,5));n.nart <- 2}
                                  ^
NO COPY: R/BWI3_HR.R:1001:50: style: Closing curly-braces should always be on their own line, unless it's followed by an else.
    {pk.list <- list(c(2,3,9),c(4,5));n.nart <- 2}
                                                 ^
NO COPY: R/BWI3_HR.R:1003:5: style: Opening curly braces should never go on their own line and should always be followed by a new line.
    {pk.list <- list(c(2:5,9)); n.nart <- 1}
    ^
NO COPY: R/BWI3_HR.R:1003:28: style: Commas should always have a space after.
    {pk.list <- list(c(2:5,9)); n.nart <- 1}
                           ^
NO COPY: R/BWI3_HR.R:1003:44: style: Closing curly-braces should always be on their own line, unless it's followed by an else.
    {pk.list <- list(c(2:5,9)); n.nart <- 1}
                                           ^
NO COPY: R/BWI3_HR.R:1004:1: style: lines should not be more than 80 characters.
  #Array f\u00fcr Ergebnisse (Totals und SE jeweils nach Nutzungsart, BAGr, AKl, DKl)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1010:1: style: lines should not be more than 80 characters.
  #                       4, 5 definieren den ungenutzten (tw. aus nat\u00fcrl. Mort.
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1014:1: style: lines should not be more than 80 characters.
  #Es gibt 4 Zielgr\u00f6\u00dfen <Y>:  V [m^3Dh mR], V Eor (Erntevolumen o. R.) [m^3E oR],
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1015:1: style: lines should not be more than 80 characters.
  #B (oberird. Biomasse) [t], V.EoR im HB, f\u00fcr die jeweils der Gesamtwert der
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1016:1: style: lines should not be more than 80 characters.
  #Periode ("Total") und der j\u00e4hrliche Wert berec (neu!)hnet wird, sowie der
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1017:1: style: lines should not be more than 80 characters.
  #Stichprobenfehler (SE), und zwar jeweils f\u00fcr die 2 Kategorien "geerntet" /
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1026:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  Y.na.bagr.akl.dkl    <- array(dim=c(12,2,n.nart,n.bagr,A.k,D.k))
  ^~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1026:36: style: Put spaces around all infix operators.
  Y.na.bagr.akl.dkl    <- array(dim=c(12,2,n.nart,n.bagr,A.k,D.k))
                                  ~^~
NO COPY: R/BWI3_HR.R:1026:42: style: Commas should always have a space after.
  Y.na.bagr.akl.dkl    <- array(dim=c(12,2,n.nart,n.bagr,A.k,D.k))
                                         ^
NO COPY: R/BWI3_HR.R:1026:44: style: Commas should always have a space after.
  Y.na.bagr.akl.dkl    <- array(dim=c(12,2,n.nart,n.bagr,A.k,D.k))
                                           ^
NO COPY: R/BWI3_HR.R:1026:51: style: Commas should always have a space after.
  Y.na.bagr.akl.dkl    <- array(dim=c(12,2,n.nart,n.bagr,A.k,D.k))
                                                  ^
NO COPY: R/BWI3_HR.R:1026:58: style: Commas should always have a space after.
  Y.na.bagr.akl.dkl    <- array(dim=c(12,2,n.nart,n.bagr,A.k,D.k))
                                                         ^
NO COPY: R/BWI3_HR.R:1026:62: style: Commas should always have a space after.
  Y.na.bagr.akl.dkl    <- array(dim=c(12,2,n.nart,n.bagr,A.k,D.k))
                                                             ^
NO COPY: R/BWI3_HR.R:1028:3: style: Variable and function names should be all lowercase.
  mPL.na.bagr.akl.dkl   <- array(dim=c(2,2,n.bagr,A.k,D.k))
  ^~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1028:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  mPL.na.bagr.akl.dkl   <- array(dim=c(2,2,n.bagr,A.k,D.k))
  ^~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1028:37: style: Put spaces around all infix operators.
  mPL.na.bagr.akl.dkl   <- array(dim=c(2,2,n.bagr,A.k,D.k))
                                   ~^~
NO COPY: R/BWI3_HR.R:1028:42: style: Commas should always have a space after.
  mPL.na.bagr.akl.dkl   <- array(dim=c(2,2,n.bagr,A.k,D.k))
                                         ^
NO COPY: R/BWI3_HR.R:1028:44: style: Commas should always have a space after.
  mPL.na.bagr.akl.dkl   <- array(dim=c(2,2,n.bagr,A.k,D.k))
                                           ^
NO COPY: R/BWI3_HR.R:1028:51: style: Commas should always have a space after.
  mPL.na.bagr.akl.dkl   <- array(dim=c(2,2,n.bagr,A.k,D.k))
                                                  ^
NO COPY: R/BWI3_HR.R:1028:55: style: Commas should always have a space after.
  mPL.na.bagr.akl.dkl   <- array(dim=c(2,2,n.bagr,A.k,D.k))
                                                      ^
NO COPY: R/BWI3_HR.R:1030:3: style: Variable and function names should be all lowercase.
  nT.na.bagr.akl.dkl   <- array(dim=c(n.nart,n.bagr,A.k,D.k))
  ^~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1030:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  nT.na.bagr.akl.dkl   <- array(dim=c(n.nart,n.bagr,A.k,D.k))
  ^~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1030:36: style: Put spaces around all infix operators.
  nT.na.bagr.akl.dkl   <- array(dim=c(n.nart,n.bagr,A.k,D.k))
                                  ~^~
NO COPY: R/BWI3_HR.R:1030:46: style: Commas should always have a space after.
  nT.na.bagr.akl.dkl   <- array(dim=c(n.nart,n.bagr,A.k,D.k))
                                             ^
NO COPY: R/BWI3_HR.R:1030:53: style: Commas should always have a space after.
  nT.na.bagr.akl.dkl   <- array(dim=c(n.nart,n.bagr,A.k,D.k))
                                                    ^
NO COPY: R/BWI3_HR.R:1030:57: style: Commas should always have a space after.
  nT.na.bagr.akl.dkl   <- array(dim=c(n.nart,n.bagr,A.k,D.k))
                                                        ^
NO COPY: R/BWI3_HR.R:1032:34: style: Commas should always have a space after.
  ne.T <- stats::aggregate(rep(1,length(stratum[,1])),by=list(stratum$tnr),sum)
                                 ^
NO COPY: R/BWI3_HR.R:1032:50: style: Commas should always have a space after.
  ne.T <- stats::aggregate(rep(1,length(stratum[,1])),by=list(stratum$tnr),sum)
                                                 ^
NO COPY: R/BWI3_HR.R:1032:55: style: Commas should always have a space after.
  ne.T <- stats::aggregate(rep(1,length(stratum[,1])),by=list(stratum$tnr),sum)
                                                      ^
NO COPY: R/BWI3_HR.R:1032:57: style: Put spaces around all infix operators.
  ne.T <- stats::aggregate(rep(1,length(stratum[,1])),by=list(stratum$tnr),sum)
                                                       ~^~
NO COPY: R/BWI3_HR.R:1032:76: style: Commas should always have a space after.
  ne.T <- stats::aggregate(rep(1,length(stratum[,1])),by=list(stratum$tnr),sum)
                                                                           ^
NO COPY: R/BWI3_HR.R:1033:36: style: Commas should always have a space after.
            names(ne.T) <- c("tnr","n.te")
                                   ^
NO COPY: R/BWI3_HR.R:1036:1: style: lines should not be more than 80 characters.
  y.pl <- stats::aggregate(stratum$plkal,by=list(stratum$tnr),mean,na.rm=T)$x*ne.T$n.te
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1036:42: style: Commas should always have a space after.
  y.pl <- stats::aggregate(stratum$plkal,by=list(stratum$tnr),mean,na.rm=T)$x*ne.T$n.te
                                         ^
NO COPY: R/BWI3_HR.R:1036:44: style: Put spaces around all infix operators.
  y.pl <- stats::aggregate(stratum$plkal,by=list(stratum$tnr),mean,na.rm=T)$x*ne.T$n.te
                                          ~^~
NO COPY: R/BWI3_HR.R:1036:63: style: Commas should always have a space after.
  y.pl <- stats::aggregate(stratum$plkal,by=list(stratum$tnr),mean,na.rm=T)$x*ne.T$n.te
                                                              ^
NO COPY: R/BWI3_HR.R:1036:68: style: Commas should always have a space after.
  y.pl <- stats::aggregate(stratum$plkal,by=list(stratum$tnr),mean,na.rm=T)$x*ne.T$n.te
                                                                   ^
NO COPY: R/BWI3_HR.R:1036:73: style: Put spaces around all infix operators.
  y.pl <- stats::aggregate(stratum$plkal,by=list(stratum$tnr),mean,na.rm=T)$x*ne.T$n.te
                                                                       ~^~
NO COPY: R/BWI3_HR.R:1036:78: style: Put spaces around all infix operators.
  y.pl <- stats::aggregate(stratum$plkal,by=list(stratum$tnr),mean,na.rm=T)$x*ne.T$n.te
                                                                            ~^~
NO COPY: R/BWI3_HR.R:1038:27: style: Put spaces around all infix operators.
  mpl.stratum <- sum(y.pl)/sum(ne.T$n.te)
                         ~^~
NO COPY: R/BWI3_HR.R:1040:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  se.mpl.stratum <- mpl.stratum*
  ^~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1040:32: style: Put spaces around all infix operators.
  se.mpl.stratum <- mpl.stratum*
                              ~^~
NO COPY: R/BWI3_HR.R:1041:12: style: Put spaces around all infix operators.
    sqrt(nT/(nT-1)*(sum(y.pl^2)/sum(y.pl)^2+sum(ne.T$n.te^2)/sum(ne.T$n.te)^2
          ~^~
NO COPY: R/BWI3_HR.R:1041:13: style: Place a space before left parenthesis, except in a function call.
    sqrt(nT/(nT-1)*(sum(y.pl^2)/sum(y.pl)^2+sum(ne.T$n.te^2)/sum(ne.T$n.te)^2
            ^
NO COPY: R/BWI3_HR.R:1041:16: style: Put spaces around all infix operators.
    sqrt(nT/(nT-1)*(sum(y.pl^2)/sum(y.pl)^2+sum(ne.T$n.te^2)/sum(ne.T$n.te)^2
              ~^~
NO COPY: R/BWI3_HR.R:1041:19: style: Put spaces around all infix operators.
    sqrt(nT/(nT-1)*(sum(y.pl^2)/sum(y.pl)^2+sum(ne.T$n.te^2)/sum(ne.T$n.te)^2
                 ~^~
NO COPY: R/BWI3_HR.R:1041:20: style: Place a space before left parenthesis, except in a function call.
    sqrt(nT/(nT-1)*(sum(y.pl^2)/sum(y.pl)^2+sum(ne.T$n.te^2)/sum(ne.T$n.te)^2
                   ^
NO COPY: R/BWI3_HR.R:1041:29: style: Put spaces around all infix operators.
    sqrt(nT/(nT-1)*(sum(y.pl^2)/sum(y.pl)^2+sum(ne.T$n.te^2)/sum(ne.T$n.te)^2
                           ~^~
NO COPY: R/BWI3_HR.R:1041:32: style: Put spaces around all infix operators.
    sqrt(nT/(nT-1)*(sum(y.pl^2)/sum(y.pl)^2+sum(ne.T$n.te^2)/sum(ne.T$n.te)^2
                              ~^~
NO COPY: R/BWI3_HR.R:1041:42: style: Put spaces around all infix operators.
    sqrt(nT/(nT-1)*(sum(y.pl^2)/sum(y.pl)^2+sum(ne.T$n.te^2)/sum(ne.T$n.te)^2
                                        ~^~
NO COPY: R/BWI3_HR.R:1041:44: style: Put spaces around all infix operators.
    sqrt(nT/(nT-1)*(sum(y.pl^2)/sum(y.pl)^2+sum(ne.T$n.te^2)/sum(ne.T$n.te)^2
                                          ~^~
NO COPY: R/BWI3_HR.R:1041:58: style: Put spaces around all infix operators.
    sqrt(nT/(nT-1)*(sum(y.pl^2)/sum(y.pl)^2+sum(ne.T$n.te^2)/sum(ne.T$n.te)^2
                                                        ~^~
NO COPY: R/BWI3_HR.R:1041:61: style: Put spaces around all infix operators.
    sqrt(nT/(nT-1)*(sum(y.pl^2)/sum(y.pl)^2+sum(ne.T$n.te^2)/sum(ne.T$n.te)^2
                                                           ~^~
NO COPY: R/BWI3_HR.R:1041:76: style: Put spaces around all infix operators.
    sqrt(nT/(nT-1)*(sum(y.pl^2)/sum(y.pl)^2+sum(ne.T$n.te^2)/sum(ne.T$n.te)^2
                                                                          ~^~
NO COPY: R/BWI3_HR.R:1042:31: style: Put spaces around all infix operators.
                              -2*sum(y.pl*ne.T$n.te)/sum(y.pl)/sum(ne.T$n.te)))
                              ^~
NO COPY: R/BWI3_HR.R:1042:33: style: Put spaces around all infix operators.
                              -2*sum(y.pl*ne.T$n.te)/sum(y.pl)/sum(ne.T$n.te)))
                               ~^~
NO COPY: R/BWI3_HR.R:1042:42: style: Put spaces around all infix operators.
                              -2*sum(y.pl*ne.T$n.te)/sum(y.pl)/sum(ne.T$n.te)))
                                        ~^~
NO COPY: R/BWI3_HR.R:1042:53: style: Put spaces around all infix operators.
                              -2*sum(y.pl*ne.T$n.te)/sum(y.pl)/sum(ne.T$n.te)))
                                                   ~^~
NO COPY: R/BWI3_HR.R:1042:63: style: Put spaces around all infix operators.
                              -2*sum(y.pl*ne.T$n.te)/sum(y.pl)/sum(ne.T$n.te)))
                                                             ~^~
NO COPY: R/BWI3_HR.R:1048:3: style: Opening curly braces should never go on their own line and should always be followed by a new line.
  {
  ^
NO COPY: R/BWI3_HR.R:1050:5: style: Opening curly braces should never go on their own line and should always be followed by a new line.
    {
    ^
NO COPY: R/BWI3_HR.R:1052:7: style: Opening curly braces should never go on their own line and should always be followed by a new line.
      {
      ^
NO COPY: R/BWI3_HR.R:1056:9: style: Opening curly braces should never go on their own line and should always be followed by a new line.
        {
        ^
NO COPY: R/BWI3_HR.R:1057:21: style: Words within variable and function names should be separated by '_' rather than '.'.
          baf.ba <- mbaf.bagr.akl.dkl.tnr[
                    ^~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1058:25: style: Words within variable and function names should be separated by '_' rather than '.'.
                        mbaf.bagr.akl.dkl.tnr[["bagr"]]==bagr.list[i]&
                        ^~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1058:56: style: Put spaces around all infix operators.
                        mbaf.bagr.akl.dkl.tnr[["bagr"]]==bagr.list[i]&
                                                      ~^~~
NO COPY: R/BWI3_HR.R:1058:70: style: Put spaces around all infix operators.
                        mbaf.bagr.akl.dkl.tnr[["bagr"]]==bagr.list[i]&
                                                                    ~^~
NO COPY: R/BWI3_HR.R:1059:25: style: Words within variable and function names should be separated by '_' rather than '.'.
                        mbaf.bagr.akl.dkl.tnr[["akl.pm"]]==akl.lab[j]&
                        ^~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1059:58: style: Put spaces around all infix operators.
                        mbaf.bagr.akl.dkl.tnr[["akl.pm"]]==akl.lab[j]&
                                                        ~^~~
NO COPY: R/BWI3_HR.R:1059:70: style: Put spaces around all infix operators.
                        mbaf.bagr.akl.dkl.tnr[["akl.pm"]]==akl.lab[j]&
                                                                    ~^~
NO COPY: R/BWI3_HR.R:1060:25: style: Words within variable and function names should be separated by '_' rather than '.'.
                        mbaf.bagr.akl.dkl.tnr[["dkl.pm"]]==dkl.lab[k],
                        ^~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1060:58: style: Put spaces around all infix operators.
                        mbaf.bagr.akl.dkl.tnr[["dkl.pm"]]==dkl.lab[k],
                                                        ~^~~
NO COPY: R/BWI3_HR.R:1062:1: style: Trailing whitespace is superfluous.
                
^~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1064:9: style: Opening curly braces should never go on their own line and should always be followed by a new line.
        {
        ^
NO COPY: R/BWI3_HR.R:1065:21: style: Words within variable and function names should be separated by '_' rather than '.'.
          baf.ba <- mbaf.bagr.akl.dkl.tnr[
                    ^~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1066:25: style: Words within variable and function names should be separated by '_' rather than '.'.
                        mbaf.bagr.akl.dkl.tnr[["akl.pm"]]==akl.lab[j]&
                        ^~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1066:58: style: Put spaces around all infix operators.
                        mbaf.bagr.akl.dkl.tnr[["akl.pm"]]==akl.lab[j]&
                                                        ~^~~
NO COPY: R/BWI3_HR.R:1066:70: style: Put spaces around all infix operators.
                        mbaf.bagr.akl.dkl.tnr[["akl.pm"]]==akl.lab[j]&
                                                                    ~^~
NO COPY: R/BWI3_HR.R:1067:25: style: Words within variable and function names should be separated by '_' rather than '.'.
                        mbaf.bagr.akl.dkl.tnr[["dkl.pm"]]==dkl.lab[k],
                        ^~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1067:58: style: Put spaces around all infix operators.
                        mbaf.bagr.akl.dkl.tnr[["dkl.pm"]]==dkl.lab[k],
                                                        ~^~~
NO COPY: R/BWI3_HR.R:1069:49: style: Commas should always have a space after.
          baf.t <- stats::aggregate(baf.ba$mbaf,by=list(baf.ba$tnr),sum)
                                                ^
NO COPY: R/BWI3_HR.R:1069:51: style: Put spaces around all infix operators.
          baf.t <- stats::aggregate(baf.ba$mbaf,by=list(baf.ba$tnr),sum)
                                                 ~^~
NO COPY: R/BWI3_HR.R:1069:69: style: Commas should always have a space after.
          baf.t <- stats::aggregate(baf.ba$mbaf,by=list(baf.ba$tnr),sum)
                                                                    ^
NO COPY: R/BWI3_HR.R:1070:1: style: lines should not be more than 80 characters.
          baf.t <- cbind(baf.t,stats::aggregate(baf.ba$mbaf.hb,by=list(baf.ba$tnr),sum)$x)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1070:32: style: Commas should always have a space after.
          baf.t <- cbind(baf.t,stats::aggregate(baf.ba$mbaf.hb,by=list(baf.ba$tnr),sum)$x)
                               ^
NO COPY: R/BWI3_HR.R:1070:64: style: Commas should always have a space after.
          baf.t <- cbind(baf.t,stats::aggregate(baf.ba$mbaf.hb,by=list(baf.ba$tnr),sum)$x)
                                                               ^
NO COPY: R/BWI3_HR.R:1070:66: style: Put spaces around all infix operators.
          baf.t <- cbind(baf.t,stats::aggregate(baf.ba$mbaf.hb,by=list(baf.ba$tnr),sum)$x)
                                                                ~^~
NO COPY: R/BWI3_HR.R:1070:84: style: Commas should always have a space after.
          baf.t <- cbind(baf.t,stats::aggregate(baf.ba$mbaf.hb,by=list(baf.ba$tnr),sum)$x)
                                                                                   ^
NO COPY: R/BWI3_HR.R:1075:32: style: Commas should always have a space after.
        xy.baf <- merge(trakte,baf.ba,by=c("tnr"),all.x=T)
                               ^
NO COPY: R/BWI3_HR.R:1075:39: style: Commas should always have a space after.
        xy.baf <- merge(trakte,baf.ba,by=c("tnr"),all.x=T)
                                      ^
NO COPY: R/BWI3_HR.R:1075:41: style: Put spaces around all infix operators.
        xy.baf <- merge(trakte,baf.ba,by=c("tnr"),all.x=T)
                                       ~^~
NO COPY: R/BWI3_HR.R:1075:51: style: Commas should always have a space after.
        xy.baf <- merge(trakte,baf.ba,by=c("tnr"),all.x=T)
                                                  ^
NO COPY: R/BWI3_HR.R:1075:56: style: Put spaces around all infix operators.
        xy.baf <- merge(trakte,baf.ba,by=c("tnr"),all.x=T)
                                                      ~^~
NO COPY: R/BWI3_HR.R:1078:10: style: Commented code should be removed.
        #xy.baf$mbaf <- xy.baf$mbaf
         ^~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1079:10: style: Commented code should be removed.
        #xy. <- cbind(xy$m,xy$mbaf/10000)
         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1081:49: style: Commas should always have a space after.
        R.list <- r.variance.fun(cbind(xy.baf$m,xy.baf$mbaf),nT)
                                                ^
NO COPY: R/BWI3_HR.R:1081:62: style: Commas should always have a space after.
        R.list <- r.variance.fun(cbind(xy.baf$m,xy.baf$mbaf),nT)
                                                             ^
NO COPY: R/BWI3_HR.R:1082:9: style: Words within variable and function names should be separated by '_' rather than '.'.
        BAF.bagr.akl.dkl[1,i,j,k] <-  R.list$R.xy*A
        ^~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1082:28: style: Commas should always have a space after.
        BAF.bagr.akl.dkl[1,i,j,k] <-  R.list$R.xy*A
                           ^
NO COPY: R/BWI3_HR.R:1082:30: style: Commas should always have a space after.
        BAF.bagr.akl.dkl[1,i,j,k] <-  R.list$R.xy*A
                             ^
NO COPY: R/BWI3_HR.R:1082:32: style: Commas should always have a space after.
        BAF.bagr.akl.dkl[1,i,j,k] <-  R.list$R.xy*A
                               ^
NO COPY: R/BWI3_HR.R:1082:50: style: Put spaces around all infix operators.
        BAF.bagr.akl.dkl[1,i,j,k] <-  R.list$R.xy*A
                                                ~^~
NO COPY: R/BWI3_HR.R:1083:9: style: Words within variable and function names should be separated by '_' rather than '.'.
        BAF.bagr.akl.dkl[2,i,j,k] <-  sqrt(R.list$V.R.xy)*A
        ^~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1083:28: style: Commas should always have a space after.
        BAF.bagr.akl.dkl[2,i,j,k] <-  sqrt(R.list$V.R.xy)*A
                           ^
NO COPY: R/BWI3_HR.R:1083:30: style: Commas should always have a space after.
        BAF.bagr.akl.dkl[2,i,j,k] <-  sqrt(R.list$V.R.xy)*A
                             ^
NO COPY: R/BWI3_HR.R:1083:32: style: Commas should always have a space after.
        BAF.bagr.akl.dkl[2,i,j,k] <-  sqrt(R.list$V.R.xy)*A
                               ^
NO COPY: R/BWI3_HR.R:1083:51: style: Words within variable and function names should be separated by '_' rather than '.'.
        BAF.bagr.akl.dkl[2,i,j,k] <-  sqrt(R.list$V.R.xy)*A
                                                  ^~~~~~
NO COPY: R/BWI3_HR.R:1083:58: style: Put spaces around all infix operators.
        BAF.bagr.akl.dkl[2,i,j,k] <-  sqrt(R.list$V.R.xy)*A
                                                        ~^~
NO COPY: R/BWI3_HR.R:1085:1: style: lines should not be more than 80 characters.
        for (i.n in 1:n.nart)   #Nutzungsart (geerntet, ungenutzt), wenn gesetzt!
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1086:9: style: Opening curly braces should never go on their own line and should always be followed by a new line.
        {
        ^
NO COPY: R/BWI3_HR.R:1090:11: style: Opening curly braces should never go on their own line and should always be followed by a new line.
          {
          ^
NO COPY: R/BWI3_HR.R:1092:33: style: Put spaces around all infix operators.
                baeume.s[["pk"]]%in%pk.list[[i.n]] &
                               ~^~~~~
NO COPY: R/BWI3_HR.R:1093:35: style: Put spaces around all infix operators.
                baeume.s[["bagr"]]==bagr.list[i] &
                                 ~^~~
NO COPY: R/BWI3_HR.R:1094:34: style: Put spaces around all infix operators.
                baeume.s[["akl"]]==akl.lab[j] &
                                ~^~~
NO COPY: R/BWI3_HR.R:1095:34: style: Put spaces around all infix operators.
                baeume.s[["dkl"]]==dkl.lab[k],
                                ~^~~
NO COPY: R/BWI3_HR.R:1099:11: style: Opening curly braces should never go on their own line and should always be followed by a new line.
          {
          ^
NO COPY: R/BWI3_HR.R:1101:33: style: Put spaces around all infix operators.
                baeume.s[["pk"]]%in%pk.list[[i.n]] & 
                               ~^~~~~
NO COPY: R/BWI3_HR.R:1101:53: style: Trailing whitespace is superfluous.
                baeume.s[["pk"]]%in%pk.list[[i.n]] & 
                                                    ^
NO COPY: R/BWI3_HR.R:1102:34: style: Put spaces around all infix operators.
                baeume.s[["akl"]]==akl.lab[j] & 
                                ~^~~
NO COPY: R/BWI3_HR.R:1102:48: style: Trailing whitespace is superfluous.
                baeume.s[["akl"]]==akl.lab[j] & 
                                               ^
NO COPY: R/BWI3_HR.R:1103:34: style: Put spaces around all infix operators.
                baeume.s[["dkl"]]==dkl.lab[k],
                                ~^~~
NO COPY: R/BWI3_HR.R:1107:33: style: Commas should always have a space after.
          if (length(baeume.ba[,1])== 0)
                                ^
NO COPY: R/BWI3_HR.R:1107:36: style: Put spaces around all infix operators.
          if (length(baeume.ba[,1])== 0)
                                  ~^
NO COPY: R/BWI3_HR.R:1108:11: style: Opening curly braces should never go on their own line and should always be followed by a new line.
          {
          ^
NO COPY: R/BWI3_HR.R:1109:14: style: Words within variable and function names should be separated by '_' rather than '.'.
             Y.na.bagr.akl.dkl[,1,i.n,i,j,k] <- rep(0,12) #Zielgr\u00f6\u00dfe
             ^~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1109:33: style: Commas should always have a space after.
             Y.na.bagr.akl.dkl[,1,i.n,i,j,k] <- rep(0,12) #Zielgr\u00f6\u00dfe
                                ^
NO COPY: R/BWI3_HR.R:1109:35: style: Commas should always have a space after.
             Y.na.bagr.akl.dkl[,1,i.n,i,j,k] <- rep(0,12) #Zielgr\u00f6\u00dfe
                                  ^
NO COPY: R/BWI3_HR.R:1109:39: style: Commas should always have a space after.
             Y.na.bagr.akl.dkl[,1,i.n,i,j,k] <- rep(0,12) #Zielgr\u00f6\u00dfe
                                      ^
NO COPY: R/BWI3_HR.R:1109:41: style: Commas should always have a space after.
             Y.na.bagr.akl.dkl[,1,i.n,i,j,k] <- rep(0,12) #Zielgr\u00f6\u00dfe
                                        ^
NO COPY: R/BWI3_HR.R:1109:43: style: Commas should always have a space after.
             Y.na.bagr.akl.dkl[,1,i.n,i,j,k] <- rep(0,12) #Zielgr\u00f6\u00dfe
                                          ^
NO COPY: R/BWI3_HR.R:1109:55: style: Commas should always have a space after.
             Y.na.bagr.akl.dkl[,1,i.n,i,j,k] <- rep(0,12) #Zielgr\u00f6\u00dfe
                                                      ^
NO COPY: R/BWI3_HR.R:1110:14: style: Words within variable and function names should be separated by '_' rather than '.'.
             Y.na.bagr.akl.dkl[,2,i.n,i,j,k] <- rep(0,12) #Stichprobenfehler SE)
             ^~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1110:33: style: Commas should always have a space after.
             Y.na.bagr.akl.dkl[,2,i.n,i,j,k] <- rep(0,12) #Stichprobenfehler SE)
                                ^
NO COPY: R/BWI3_HR.R:1110:35: style: Commas should always have a space after.
             Y.na.bagr.akl.dkl[,2,i.n,i,j,k] <- rep(0,12) #Stichprobenfehler SE)
                                  ^
NO COPY: R/BWI3_HR.R:1110:39: style: Commas should always have a space after.
             Y.na.bagr.akl.dkl[,2,i.n,i,j,k] <- rep(0,12) #Stichprobenfehler SE)
                                      ^
NO COPY: R/BWI3_HR.R:1110:41: style: Commas should always have a space after.
             Y.na.bagr.akl.dkl[,2,i.n,i,j,k] <- rep(0,12) #Stichprobenfehler SE)
                                        ^
NO COPY: R/BWI3_HR.R:1110:43: style: Commas should always have a space after.
             Y.na.bagr.akl.dkl[,2,i.n,i,j,k] <- rep(0,12) #Stichprobenfehler SE)
                                          ^
NO COPY: R/BWI3_HR.R:1110:55: style: Commas should always have a space after.
             Y.na.bagr.akl.dkl[,2,i.n,i,j,k] <- rep(0,12) #Stichprobenfehler SE)
                                                      ^
NO COPY: R/BWI3_HR.R:1112:14: style: Variable and function names should be all lowercase.
             mPL.na.bagr.akl.dkl[1:2,i.n,i,j,k]   <- rep(0,2)
             ^~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1112:14: style: Words within variable and function names should be separated by '_' rather than '.'.
             mPL.na.bagr.akl.dkl[1:2,i.n,i,j,k]   <- rep(0,2)
             ^~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1112:38: style: Commas should always have a space after.
             mPL.na.bagr.akl.dkl[1:2,i.n,i,j,k]   <- rep(0,2)
                                     ^
NO COPY: R/BWI3_HR.R:1112:42: style: Commas should always have a space after.
             mPL.na.bagr.akl.dkl[1:2,i.n,i,j,k]   <- rep(0,2)
                                         ^
NO COPY: R/BWI3_HR.R:1112:44: style: Commas should always have a space after.
             mPL.na.bagr.akl.dkl[1:2,i.n,i,j,k]   <- rep(0,2)
                                           ^
NO COPY: R/BWI3_HR.R:1112:46: style: Commas should always have a space after.
             mPL.na.bagr.akl.dkl[1:2,i.n,i,j,k]   <- rep(0,2)
                                             ^
NO COPY: R/BWI3_HR.R:1112:60: style: Commas should always have a space after.
             mPL.na.bagr.akl.dkl[1:2,i.n,i,j,k]   <- rep(0,2)
                                                           ^
NO COPY: R/BWI3_HR.R:1113:14: style: Variable and function names should be all lowercase.
             nT.na.bagr.akl.dkl[i.n,i,j,k]        <- 0        #n PSU (Trakte)
             ^~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1113:14: style: Words within variable and function names should be separated by '_' rather than '.'.
             nT.na.bagr.akl.dkl[i.n,i,j,k]        <- 0        #n PSU (Trakte)
             ^~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1113:37: style: Commas should always have a space after.
             nT.na.bagr.akl.dkl[i.n,i,j,k]        <- 0        #n PSU (Trakte)
                                    ^
NO COPY: R/BWI3_HR.R:1113:39: style: Commas should always have a space after.
             nT.na.bagr.akl.dkl[i.n,i,j,k]        <- 0        #n PSU (Trakte)
                                      ^
NO COPY: R/BWI3_HR.R:1113:41: style: Commas should always have a space after.
             nT.na.bagr.akl.dkl[i.n,i,j,k]        <- 0        #n PSU (Trakte)
                                        ^
NO COPY: R/BWI3_HR.R:1115:11: style: Opening curly braces should never go on their own line and should always be followed by a new line.
          {
          ^
NO COPY: R/BWI3_HR.R:1119:51: style: Put spaces around all infix operators.
            xy <- stats::aggregate(baeume.ba$volv2*baeume.ba$nha1,
                                                 ~^~
NO COPY: R/BWI3_HR.R:1120:31: style: Put spaces around all infix operators.
                            by=list(baeume.ba$tnr),sum)
                             ~^~
NO COPY: R/BWI3_HR.R:1120:52: style: Commas should always have a space after.
                            by=list(baeume.ba$tnr),sum)
                                                   ^
NO COPY: R/BWI3_HR.R:1121:34: style: Commas should always have a space after.
            names(xy) <- c("tnr","v")
                                 ^
NO COPY: R/BWI3_HR.R:1124:47: style: Put spaces around all infix operators.
              stats::aggregate(baeume.ba$vole2*baeume.ba$nha1,
                                             ~^~
NO COPY: R/BWI3_HR.R:1125:49: style: Put spaces around all infix operators.
                                              by=list(baeume.ba$tnr),sum)$x )
                                               ~^~
NO COPY: R/BWI3_HR.R:1125:70: style: Commas should always have a space after.
                                              by=list(baeume.ba$tnr),sum)$x )
                                                                     ^
NO COPY: R/BWI3_HR.R:1128:28: style: Commas should always have a space after.
            xy <- cbind(xy,stats::aggregate(baeume.ba$oib2*baeume.ba$nha1,
                           ^
NO COPY: R/BWI3_HR.R:1128:59: style: Put spaces around all infix operators.
            xy <- cbind(xy,stats::aggregate(baeume.ba$oib2*baeume.ba$nha1,
                                                         ~^~
NO COPY: R/BWI3_HR.R:1129:47: style: Put spaces around all infix operators.
                                            by=list(baeume.ba$tnr),sum)$x/1000)
                                             ~^~
NO COPY: R/BWI3_HR.R:1129:68: style: Commas should always have a space after.
                                            by=list(baeume.ba$tnr),sum)$x/1000)
                                                                   ^
NO COPY: R/BWI3_HR.R:1129:74: style: Put spaces around all infix operators.
                                            by=list(baeume.ba$tnr),sum)$x/1000)
                                                                        ~^~
NO COPY: R/BWI3_HR.R:1132:28: style: Commas should always have a space after.
            xy <- cbind(xy,stats::aggregate(baeume.ba$vole2*baeume.ba$nha1*
                           ^
NO COPY: R/BWI3_HR.R:1132:60: style: Put spaces around all infix operators.
            xy <- cbind(xy,stats::aggregate(baeume.ba$vole2*baeume.ba$nha1*
                                                          ~^~
NO COPY: R/BWI3_HR.R:1132:75: style: Put spaces around all infix operators.
            xy <- cbind(xy,stats::aggregate(baeume.ba$vole2*baeume.ba$nha1*
                                                                         ~^~
NO COPY: R/BWI3_HR.R:1133:61: style: Put spaces around all infix operators.
                                      ifelse(baeume.ba$stfl1>0,1,0),
                                                           ~^~
NO COPY: R/BWI3_HR.R:1133:64: style: Commas should always have a space after.
                                      ifelse(baeume.ba$stfl1>0,1,0),
                                                               ^
NO COPY: R/BWI3_HR.R:1133:66: style: Commas should always have a space after.
                                      ifelse(baeume.ba$stfl1>0,1,0),
                                                                 ^
NO COPY: R/BWI3_HR.R:1134:27: style: Put spaces around all infix operators.
                        by=list(baeume.ba$tnr),sum)$x)
                         ~^~
NO COPY: R/BWI3_HR.R:1134:48: style: Commas should always have a space after.
                        by=list(baeume.ba$tnr),sum)$x)
                                               ^
NO COPY: R/BWI3_HR.R:1137:1: style: lines should not be more than 80 characters.
            mpl <- stats::aggregate(baeume.ba$plkal,by=list(baeume.ba$tnr),mean)$x
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1137:53: style: Commas should always have a space after.
            mpl <- stats::aggregate(baeume.ba$plkal,by=list(baeume.ba$tnr),mean)$x
                                                    ^
NO COPY: R/BWI3_HR.R:1137:55: style: Put spaces around all infix operators.
            mpl <- stats::aggregate(baeume.ba$plkal,by=list(baeume.ba$tnr),mean)$x
                                                     ~^~
NO COPY: R/BWI3_HR.R:1137:76: style: Commas should always have a space after.
            mpl <- stats::aggregate(baeume.ba$plkal,by=list(baeume.ba$tnr),mean)$x
                                                                           ^
NO COPY: R/BWI3_HR.R:1140:27: style: Put spaces around all infix operators.
            xy$j.v <- xy$v/mpl
                         ~^~
NO COPY: R/BWI3_HR.R:1142:16: style: Words within variable and function names should be separated by '_' rather than '.'.
            xy$j.v.eor <- xy$v.eor/mpl
               ^~~~~~~
NO COPY: R/BWI3_HR.R:1142:35: style: Put spaces around all infix operators.
            xy$j.v.eor <- xy$v.eor/mpl
                                 ~^~
NO COPY: R/BWI3_HR.R:1144:27: style: Put spaces around all infix operators.
            xy$j.b <- xy$b/mpl
                         ~^~
NO COPY: R/BWI3_HR.R:1146:16: style: Words within variable and function names should be separated by '_' rather than '.'.
            xy$j.v.eor.hb <- xy$v.eor.hb/mpl
               ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:1146:33: style: Words within variable and function names should be separated by '_' rather than '.'.
            xy$j.v.eor.hb <- xy$v.eor.hb/mpl
                                ^~~~~~~~
NO COPY: R/BWI3_HR.R:1146:41: style: Put spaces around all infix operators.
            xy$j.v.eor.hb <- xy$v.eor.hb/mpl
                                       ~^~
NO COPY: R/BWI3_HR.R:1149:1: style: lines should not be more than 80 characters.
            #hinzuf\u00fcgen   Hinweis: <xy.baf> enth\u00e4lt jetzt auch <m_bhb>!
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1150:14: style: Commented code should be removed.
            #xy <- merge(xy,xy.baf,by=c("tnr"))
             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1151:32: style: Commas should always have a space after.
            xy <- merge(xy.baf,xy,by=c("tnr"),all.x=T)
                               ^
NO COPY: R/BWI3_HR.R:1151:35: style: Commas should always have a space after.
            xy <- merge(xy.baf,xy,by=c("tnr"),all.x=T)
                                  ^
NO COPY: R/BWI3_HR.R:1151:37: style: Put spaces around all infix operators.
            xy <- merge(xy.baf,xy,by=c("tnr"),all.x=T)
                                   ~^~
NO COPY: R/BWI3_HR.R:1151:47: style: Commas should always have a space after.
            xy <- merge(xy.baf,xy,by=c("tnr"),all.x=T)
                                              ^
NO COPY: R/BWI3_HR.R:1151:52: style: Put spaces around all infix operators.
            xy <- merge(xy.baf,xy,by=c("tnr"),all.x=T)
                                                  ~^~
NO COPY: R/BWI3_HR.R:1155:13: style: Variable and function names should be all lowercase.
            nT.na.bagr.akl.dkl[i.n,i,j,k] <- length(xy[,1])
            ^~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1155:13: style: Words within variable and function names should be separated by '_' rather than '.'.
            nT.na.bagr.akl.dkl[i.n,i,j,k] <- length(xy[,1])
            ^~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1155:36: style: Commas should always have a space after.
            nT.na.bagr.akl.dkl[i.n,i,j,k] <- length(xy[,1])
                                   ^
NO COPY: R/BWI3_HR.R:1155:38: style: Commas should always have a space after.
            nT.na.bagr.akl.dkl[i.n,i,j,k] <- length(xy[,1])
                                     ^
NO COPY: R/BWI3_HR.R:1155:40: style: Commas should always have a space after.
            nT.na.bagr.akl.dkl[i.n,i,j,k] <- length(xy[,1])
                                       ^
NO COPY: R/BWI3_HR.R:1155:57: style: Commas should always have a space after.
            nT.na.bagr.akl.dkl[i.n,i,j,k] <- length(xy[,1])
                                                        ^
NO COPY: R/BWI3_HR.R:1159:45: style: Commas should always have a space after.
            nb.TE <- stats::aggregate(rep(1,length(baeume.ba[,1])),
                                            ^
NO COPY: R/BWI3_HR.R:1159:63: style: Commas should always have a space after.
            nb.TE <- stats::aggregate(rep(1,length(baeume.ba[,1])),
                                                              ^
NO COPY: R/BWI3_HR.R:1160:39: style: Put spaces around all infix operators.
                                    by=list(baeume.ba$tnr,baeume.ba$enr),sum)
                                     ~^~
NO COPY: R/BWI3_HR.R:1160:59: style: Commas should always have a space after.
                                    by=list(baeume.ba$tnr,baeume.ba$enr),sum)
                                                          ^
NO COPY: R/BWI3_HR.R:1160:74: style: Commas should always have a space after.
                                    by=list(baeume.ba$tnr,baeume.ba$enr),sum)
                                                                         ^
NO COPY: R/BWI3_HR.R:1161:1: style: lines should not be more than 80 characters.
            ne.T <- stats::aggregate(rep(1,length(nb.TE[,1])),by=list(nb.TE$Group.1),
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1161:44: style: Commas should always have a space after.
            ne.T <- stats::aggregate(rep(1,length(nb.TE[,1])),by=list(nb.TE$Group.1),
                                           ^
NO COPY: R/BWI3_HR.R:1161:58: style: Commas should always have a space after.
            ne.T <- stats::aggregate(rep(1,length(nb.TE[,1])),by=list(nb.TE$Group.1),
                                                         ^
NO COPY: R/BWI3_HR.R:1161:63: style: Commas should always have a space after.
            ne.T <- stats::aggregate(rep(1,length(nb.TE[,1])),by=list(nb.TE$Group.1),
                                                              ^
NO COPY: R/BWI3_HR.R:1161:65: style: Put spaces around all infix operators.
            ne.T <- stats::aggregate(rep(1,length(nb.TE[,1])),by=list(nb.TE$Group.1),
                                                               ~^~
NO COPY: R/BWI3_HR.R:1163:36: style: Commas should always have a space after.
            names(ne.T) <- c("tnr","n.te")
                                   ^
NO COPY: R/BWI3_HR.R:1165:24: style: Put spaces around all infix operators.
            y.pl <- mpl*ne.T$n.te
                      ~^~
NO COPY: R/BWI3_HR.R:1166:54: style: Commas should always have a space after.
            R.list <- r.variance.fun(cbind(ne.T$n.te,y.pl),nT)
                                                     ^
NO COPY: R/BWI3_HR.R:1166:60: style: Commas should always have a space after.
            R.list <- r.variance.fun(cbind(ne.T$n.te,y.pl),nT)
                                                           ^
NO COPY: R/BWI3_HR.R:1168:13: style: Variable and function names should be all lowercase.
            mPL.na.bagr.akl.dkl[1,i.n,i,j,k] <- R.list$R.xy
            ^~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1168:13: style: Words within variable and function names should be separated by '_' rather than '.'.
            mPL.na.bagr.akl.dkl[1,i.n,i,j,k] <- R.list$R.xy
            ^~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1168:35: style: Commas should always have a space after.
            mPL.na.bagr.akl.dkl[1,i.n,i,j,k] <- R.list$R.xy
                                  ^
NO COPY: R/BWI3_HR.R:1168:39: style: Commas should always have a space after.
            mPL.na.bagr.akl.dkl[1,i.n,i,j,k] <- R.list$R.xy
                                      ^
NO COPY: R/BWI3_HR.R:1168:41: style: Commas should always have a space after.
            mPL.na.bagr.akl.dkl[1,i.n,i,j,k] <- R.list$R.xy
                                        ^
NO COPY: R/BWI3_HR.R:1168:43: style: Commas should always have a space after.
            mPL.na.bagr.akl.dkl[1,i.n,i,j,k] <- R.list$R.xy
                                          ^
NO COPY: R/BWI3_HR.R:1170:14: style: Commented code should be removed.
            #mPL.na.bagr.akl.dkl[1,i.n,i,j,k] <- sum(y.pl)/sum(ne.T$n.te)
             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1172:13: style: Variable and function names should be all lowercase.
            mPL.na.bagr.akl.dkl[2,i.n,i,j,k] <- sqrt(R.list$V.R.xy)
            ^~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1172:13: style: Words within variable and function names should be separated by '_' rather than '.'.
            mPL.na.bagr.akl.dkl[2,i.n,i,j,k] <- sqrt(R.list$V.R.xy)
            ^~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1172:35: style: Commas should always have a space after.
            mPL.na.bagr.akl.dkl[2,i.n,i,j,k] <- sqrt(R.list$V.R.xy)
                                  ^
NO COPY: R/BWI3_HR.R:1172:39: style: Commas should always have a space after.
            mPL.na.bagr.akl.dkl[2,i.n,i,j,k] <- sqrt(R.list$V.R.xy)
                                      ^
NO COPY: R/BWI3_HR.R:1172:41: style: Commas should always have a space after.
            mPL.na.bagr.akl.dkl[2,i.n,i,j,k] <- sqrt(R.list$V.R.xy)
                                        ^
NO COPY: R/BWI3_HR.R:1172:43: style: Commas should always have a space after.
            mPL.na.bagr.akl.dkl[2,i.n,i,j,k] <- sqrt(R.list$V.R.xy)
                                          ^
NO COPY: R/BWI3_HR.R:1172:61: style: Words within variable and function names should be separated by '_' rather than '.'.
            mPL.na.bagr.akl.dkl[2,i.n,i,j,k] <- sqrt(R.list$V.R.xy)
                                                            ^~~~~~
NO COPY: R/BWI3_HR.R:1175:13: style: Opening curly braces should never go on their own line and should always be followed by a new line.
            {
            ^
NO COPY: R/BWI3_HR.R:1176:1: style: lines should not be more than 80 characters.
              #Zielgr\u00f6\u00dfen Y ausgeschiedenes Kollektiv{V,V.EoR,B,V.Eor.HB)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1177:1: style: lines should not be more than 80 characters.
              #Perioden-Total, j\u00e4hrl. Total, j\u00e4hrl. Ha-Wert (k\u00e4/01-03-2014)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1179:51: style: Commas should always have a space after.
              R.list <- r.variance.fun(cbind(xy$m,xy[,(l+t.pos+2)]),nT)
                                                  ^
NO COPY: R/BWI3_HR.R:1179:55: style: Commas should always have a space after.
              R.list <- r.variance.fun(cbind(xy$m,xy[,(l+t.pos+2)]),nT)
                                                      ^
NO COPY: R/BWI3_HR.R:1179:55: style: Place a space before left parenthesis, except in a function call.
              R.list <- r.variance.fun(cbind(xy$m,xy[,(l+t.pos+2)]),nT)
                                                      ^
NO COPY: R/BWI3_HR.R:1179:57: style: Put spaces around all infix operators.
              R.list <- r.variance.fun(cbind(xy$m,xy[,(l+t.pos+2)]),nT)
                                                       ~^~
NO COPY: R/BWI3_HR.R:1179:63: style: Put spaces around all infix operators.
              R.list <- r.variance.fun(cbind(xy$m,xy[,(l+t.pos+2)]),nT)
                                                             ~^~
NO COPY: R/BWI3_HR.R:1179:69: style: Commas should always have a space after.
              R.list <- r.variance.fun(cbind(xy$m,xy[,(l+t.pos+2)]),nT)
                                                                    ^
NO COPY: R/BWI3_HR.R:1180:15: style: Words within variable and function names should be separated by '_' rather than '.'.
              Y.na.bagr.akl.dkl[l,1,i.n,i,j,k] <- R.list$R.xy*A
              ^~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1180:35: style: Commas should always have a space after.
              Y.na.bagr.akl.dkl[l,1,i.n,i,j,k] <- R.list$R.xy*A
                                  ^
NO COPY: R/BWI3_HR.R:1180:37: style: Commas should always have a space after.
              Y.na.bagr.akl.dkl[l,1,i.n,i,j,k] <- R.list$R.xy*A
                                    ^
NO COPY: R/BWI3_HR.R:1180:41: style: Commas should always have a space after.
              Y.na.bagr.akl.dkl[l,1,i.n,i,j,k] <- R.list$R.xy*A
                                        ^
NO COPY: R/BWI3_HR.R:1180:43: style: Commas should always have a space after.
              Y.na.bagr.akl.dkl[l,1,i.n,i,j,k] <- R.list$R.xy*A
                                          ^
NO COPY: R/BWI3_HR.R:1180:45: style: Commas should always have a space after.
              Y.na.bagr.akl.dkl[l,1,i.n,i,j,k] <- R.list$R.xy*A
                                            ^
NO COPY: R/BWI3_HR.R:1180:62: style: Put spaces around all infix operators.
              Y.na.bagr.akl.dkl[l,1,i.n,i,j,k] <- R.list$R.xy*A
                                                            ~^~
NO COPY: R/BWI3_HR.R:1181:16: style: Commented code should be removed.
              #Y.na.bagr.akl.dkl[l,1,i.n,i,j,k] <- sum(xy[,(1+l)])/sum(x)*A
               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1183:15: style: Words within variable and function names should be separated by '_' rather than '.'.
              Y.na.bagr.akl.dkl[l,2,i.n,i,j,k] <- sqrt(R.list$V.R.xy)*A
              ^~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1183:35: style: Commas should always have a space after.
              Y.na.bagr.akl.dkl[l,2,i.n,i,j,k] <- sqrt(R.list$V.R.xy)*A
                                  ^
NO COPY: R/BWI3_HR.R:1183:37: style: Commas should always have a space after.
              Y.na.bagr.akl.dkl[l,2,i.n,i,j,k] <- sqrt(R.list$V.R.xy)*A
                                    ^
NO COPY: R/BWI3_HR.R:1183:41: style: Commas should always have a space after.
              Y.na.bagr.akl.dkl[l,2,i.n,i,j,k] <- sqrt(R.list$V.R.xy)*A
                                        ^
NO COPY: R/BWI3_HR.R:1183:43: style: Commas should always have a space after.
              Y.na.bagr.akl.dkl[l,2,i.n,i,j,k] <- sqrt(R.list$V.R.xy)*A
                                          ^
NO COPY: R/BWI3_HR.R:1183:45: style: Commas should always have a space after.
              Y.na.bagr.akl.dkl[l,2,i.n,i,j,k] <- sqrt(R.list$V.R.xy)*A
                                            ^
NO COPY: R/BWI3_HR.R:1183:63: style: Words within variable and function names should be separated by '_' rather than '.'.
              Y.na.bagr.akl.dkl[l,2,i.n,i,j,k] <- sqrt(R.list$V.R.xy)*A
                                                              ^~~~~~
NO COPY: R/BWI3_HR.R:1183:70: style: Put spaces around all infix operators.
              Y.na.bagr.akl.dkl[l,2,i.n,i,j,k] <- sqrt(R.list$V.R.xy)*A
                                                                    ~^~
NO COPY: R/BWI3_HR.R:1186:30: style: Put spaces around all infix operators.
            off <- length(xy)-4
                            ~^~
NO COPY: R/BWI3_HR.R:1189:13: style: Opening curly braces should never go on their own line and should always be followed by a new line.
            {
            ^
NO COPY: R/BWI3_HR.R:1190:1: style: lines should not be more than 80 characters.
              #Zielgr\u00f6\u00dfen Y ausgeschiedenes Kollektiv{V,V.EoR,B,V.EoR.HB)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1191:1: style: lines should not be more than 80 characters.
              #Perioden-Total, j\u00e4hrl. Total, j\u00e4hrl. Ha-Wert (k\u00e4/01-03-2014)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1193:20: style: Put spaces around all infix operators.
              if (l<4)
                  ~^~
NO COPY: R/BWI3_HR.R:1194:15: style: Opening curly braces should never go on their own line and should always be followed by a new line.
              {
              ^
NO COPY: R/BWI3_HR.R:1195:56: style: Commas should always have a space after.
                R.list <- r.variance.fun(cbind(xy$mbaf,xy[,(l+off)]),nT)
                                                       ^
NO COPY: R/BWI3_HR.R:1195:60: style: Commas should always have a space after.
                R.list <- r.variance.fun(cbind(xy$mbaf,xy[,(l+off)]),nT)
                                                           ^
NO COPY: R/BWI3_HR.R:1195:60: style: Place a space before left parenthesis, except in a function call.
                R.list <- r.variance.fun(cbind(xy$mbaf,xy[,(l+off)]),nT)
                                                           ^
NO COPY: R/BWI3_HR.R:1195:62: style: Put spaces around all infix operators.
                R.list <- r.variance.fun(cbind(xy$mbaf,xy[,(l+off)]),nT)
                                                            ~^~
NO COPY: R/BWI3_HR.R:1195:70: style: Commas should always have a space after.
                R.list <- r.variance.fun(cbind(xy$mbaf,xy[,(l+off)]),nT)
                                                                     ^
NO COPY: R/BWI3_HR.R:1197:15: style: Opening curly braces should never go on their own line and should always be followed by a new line.
              {
              ^
NO COPY: R/BWI3_HR.R:1198:59: style: Commas should always have a space after.
                R.list <- r.variance.fun(cbind(xy$mbaf.hb,xy[,(l+off)]),nT)
                                                          ^
NO COPY: R/BWI3_HR.R:1198:63: style: Commas should always have a space after.
                R.list <- r.variance.fun(cbind(xy$mbaf.hb,xy[,(l+off)]),nT)
                                                              ^
NO COPY: R/BWI3_HR.R:1198:63: style: Place a space before left parenthesis, except in a function call.
                R.list <- r.variance.fun(cbind(xy$mbaf.hb,xy[,(l+off)]),nT)
                                                              ^
NO COPY: R/BWI3_HR.R:1198:65: style: Put spaces around all infix operators.
                R.list <- r.variance.fun(cbind(xy$mbaf.hb,xy[,(l+off)]),nT)
                                                               ~^~
NO COPY: R/BWI3_HR.R:1198:73: style: Commas should always have a space after.
                R.list <- r.variance.fun(cbind(xy$mbaf.hb,xy[,(l+off)]),nT)
                                                                        ^
NO COPY: R/BWI3_HR.R:1200:15: style: Words within variable and function names should be separated by '_' rather than '.'.
              Y.na.bagr.akl.dkl[(l+8),1,i.n,i,j,k] <- R.list$R.xy
              ^~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1200:35: style: Put spaces around all infix operators.
              Y.na.bagr.akl.dkl[(l+8),1,i.n,i,j,k] <- R.list$R.xy
                                 ~^~
NO COPY: R/BWI3_HR.R:1200:39: style: Commas should always have a space after.
              Y.na.bagr.akl.dkl[(l+8),1,i.n,i,j,k] <- R.list$R.xy
                                      ^
NO COPY: R/BWI3_HR.R:1200:41: style: Commas should always have a space after.
              Y.na.bagr.akl.dkl[(l+8),1,i.n,i,j,k] <- R.list$R.xy
                                        ^
NO COPY: R/BWI3_HR.R:1200:45: style: Commas should always have a space after.
              Y.na.bagr.akl.dkl[(l+8),1,i.n,i,j,k] <- R.list$R.xy
                                            ^
NO COPY: R/BWI3_HR.R:1200:47: style: Commas should always have a space after.
              Y.na.bagr.akl.dkl[(l+8),1,i.n,i,j,k] <- R.list$R.xy
                                              ^
NO COPY: R/BWI3_HR.R:1200:49: style: Commas should always have a space after.
              Y.na.bagr.akl.dkl[(l+8),1,i.n,i,j,k] <- R.list$R.xy
                                                ^
NO COPY: R/BWI3_HR.R:1202:15: style: Words within variable and function names should be separated by '_' rather than '.'.
              Y.na.bagr.akl.dkl[(l+8),2,i.n,i,j,k] <- sqrt(R.list$V.R.xy)
              ^~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1202:35: style: Put spaces around all infix operators.
              Y.na.bagr.akl.dkl[(l+8),2,i.n,i,j,k] <- sqrt(R.list$V.R.xy)
                                 ~^~
NO COPY: R/BWI3_HR.R:1202:39: style: Commas should always have a space after.
              Y.na.bagr.akl.dkl[(l+8),2,i.n,i,j,k] <- sqrt(R.list$V.R.xy)
                                      ^
NO COPY: R/BWI3_HR.R:1202:41: style: Commas should always have a space after.
              Y.na.bagr.akl.dkl[(l+8),2,i.n,i,j,k] <- sqrt(R.list$V.R.xy)
                                        ^
NO COPY: R/BWI3_HR.R:1202:45: style: Commas should always have a space after.
              Y.na.bagr.akl.dkl[(l+8),2,i.n,i,j,k] <- sqrt(R.list$V.R.xy)
                                            ^
NO COPY: R/BWI3_HR.R:1202:47: style: Commas should always have a space after.
              Y.na.bagr.akl.dkl[(l+8),2,i.n,i,j,k] <- sqrt(R.list$V.R.xy)
                                              ^
NO COPY: R/BWI3_HR.R:1202:49: style: Commas should always have a space after.
              Y.na.bagr.akl.dkl[(l+8),2,i.n,i,j,k] <- sqrt(R.list$V.R.xy)
                                                ^
NO COPY: R/BWI3_HR.R:1202:67: style: Words within variable and function names should be separated by '_' rather than '.'.
              Y.na.bagr.akl.dkl[(l+8),2,i.n,i,j,k] <- sqrt(R.list$V.R.xy)
                                                                  ^~~~~~
NO COPY: R/BWI3_HR.R:1213:4: style: Commented code should be removed.
  #AKL-Labels
   ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:1214:34: style: Commas should always have a space after.
  akl.lab <- akl.lab.fun(A.klass,A.k)
                                 ^
NO COPY: R/BWI3_HR.R:1216:4: style: Commented code should be removed.
  #DKL-Labels
   ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:1217:34: style: Commas should always have a space after.
  dkl.lab <- dkl.lab.fun(D.klass,D.k) #k\u00e4/16.07.14
                                 ^
NO COPY: R/BWI3_HR.R:1221:20: style: Commas should always have a space after.
  a <- regexpr("/",baeume$bemerk[baeume$stp==0][1],fixed=T)
                   ^
NO COPY: R/BWI3_HR.R:1221:44: style: Put spaces around all infix operators.
  a <- regexpr("/",baeume$bemerk[baeume$stp==0][1],fixed=T)
                                          ~^~~
NO COPY: R/BWI3_HR.R:1221:52: style: Commas should always have a space after.
  a <- regexpr("/",baeume$bemerk[baeume$stp==0][1],fixed=T)
                                                   ^
NO COPY: R/BWI3_HR.R:1221:57: style: Put spaces around all infix operators.
  a <- regexpr("/",baeume$bemerk[baeume$stp==0][1],fixed=T)
                                                       ~^~
NO COPY: R/BWI3_HR.R:1222:51: style: Put spaces around all infix operators.
  b <- nchar(as.character(baeume$bemerk[baeume$stp==0][1]))
                                                 ~^~~
NO COPY: R/BWI3_HR.R:1223:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  version.baeume.b  <- substr(as.character(baeume$bemerk[baeume$stp==0][1]),a,b)
  ^~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1223:3: warning: local variable 'version.baeume.b' assigned but may not be used
  version.baeume.b  <- substr(as.character(baeume$bemerk[baeume$stp==0][1]),a,b)
  ^~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1223:68: style: Put spaces around all infix operators.
  version.baeume.b  <- substr(as.character(baeume$bemerk[baeume$stp==0][1]),a,b)
                                                                  ~^~~
NO COPY: R/BWI3_HR.R:1223:77: style: Commas should always have a space after.
  version.baeume.b  <- substr(as.character(baeume$bemerk[baeume$stp==0][1]),a,b)
                                                                            ^
NO COPY: R/BWI3_HR.R:1223:79: style: Commas should always have a space after.
  version.baeume.b  <- substr(as.character(baeume$bemerk[baeume$stp==0][1]),a,b)
                                                                              ^
NO COPY: R/BWI3_HR.R:1224:20: style: Put spaces around all infix operators.
  Log <- list(Datum=Sys.time(),
                  ~^~
NO COPY: R/BWI3_HR.R:1225:1: style: lines should not be more than 80 characters.
      Version.baeume.b=substr(as.character(baeume$bemerk[baeume$stp==0][1]),a,b))
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1225:23: style: Put spaces around all infix operators.
      Version.baeume.b=substr(as.character(baeume$bemerk[baeume$stp==0][1]),a,b))
                     ~^~
NO COPY: R/BWI3_HR.R:1225:68: style: Put spaces around all infix operators.
      Version.baeume.b=substr(as.character(baeume$bemerk[baeume$stp==0][1]),a,b))
                                                                  ~^~~
NO COPY: R/BWI3_HR.R:1225:77: style: Commas should always have a space after.
      Version.baeume.b=substr(as.character(baeume$bemerk[baeume$stp==0][1]),a,b))
                                                                            ^
NO COPY: R/BWI3_HR.R:1225:79: style: Commas should always have a space after.
      Version.baeume.b=substr(as.character(baeume$bemerk[baeume$stp==0][1]),a,b))
                                                                              ^
NO COPY: R/BWI3_HR.R:1226:5: style: Place a space before left parenthesis, except in a function call.
  if(N.art){nart <- c("geerntet","ungenutzt")}else {nart <- "insgesamt"}
    ^
NO COPY: R/BWI3_HR.R:1226:12: style: Opening curly braces should never go on their own line and should always be followed by a new line.
  if(N.art){nart <- c("geerntet","ungenutzt")}else {nart <- "insgesamt"}
           ^
NO COPY: R/BWI3_HR.R:1226:34: style: Commas should always have a space after.
  if(N.art){nart <- c("geerntet","ungenutzt")}else {nart <- "insgesamt"}
                                 ^
NO COPY: R/BWI3_HR.R:1226:46: style: Closing curly-braces should always be on their own line, unless it's followed by an else.
  if(N.art){nart <- c("geerntet","ungenutzt")}else {nart <- "insgesamt"}
                                             ^
NO COPY: R/BWI3_HR.R:1226:52: style: Opening curly braces should never go on their own line and should always be followed by a new line.
  if(N.art){nart <- c("geerntet","ungenutzt")}else {nart <- "insgesamt"}
                                                   ^
NO COPY: R/BWI3_HR.R:1226:72: style: Closing curly-braces should always be on their own line, unless it's followed by an else.
  if(N.art){nart <- c("geerntet","ungenutzt")}else {nart <- "insgesamt"}
                                                                       ^
NO COPY: R/BWI3_HR.R:1227:18: style: Put spaces around all infix operators.
  return(list(Log=Log, Stratum=auswahl, nTE=n.te.s, HBF=T.hbf, se.HBF=se.T.hbf,
                ~^~
NO COPY: R/BWI3_HR.R:1227:31: style: Put spaces around all infix operators.
  return(list(Log=Log, Stratum=auswahl, nTE=n.te.s, HBF=T.hbf, se.HBF=se.T.hbf,
                             ~^~
NO COPY: R/BWI3_HR.R:1227:44: style: Put spaces around all infix operators.
  return(list(Log=Log, Stratum=auswahl, nTE=n.te.s, HBF=T.hbf, se.HBF=se.T.hbf,
                                          ~^~
NO COPY: R/BWI3_HR.R:1227:45: style: Words within variable and function names should be separated by '_' rather than '.'.
  return(list(Log=Log, Stratum=auswahl, nTE=n.te.s, HBF=T.hbf, se.HBF=se.T.hbf,
                                            ^~~~~~
NO COPY: R/BWI3_HR.R:1227:56: style: Put spaces around all infix operators.
  return(list(Log=Log, Stratum=auswahl, nTE=n.te.s, HBF=T.hbf, se.HBF=se.T.hbf,
                                                      ~^~
NO COPY: R/BWI3_HR.R:1227:70: style: Put spaces around all infix operators.
  return(list(Log=Log, Stratum=auswahl, nTE=n.te.s, HBF=T.hbf, se.HBF=se.T.hbf,
                                                                    ~^~
NO COPY: R/BWI3_HR.R:1227:71: style: Words within variable and function names should be separated by '_' rather than '.'.
  return(list(Log=Log, Stratum=auswahl, nTE=n.te.s, HBF=T.hbf, se.HBF=se.T.hbf,
                                                                      ^~~~~~~~
NO COPY: R/BWI3_HR.R:1228:24: style: Put spaces around all infix operators.
              Attribute=c("V_DhmR", "V_EoR", "oiB", "V_EoR_HB",
                      ~^~
NO COPY: R/BWI3_HR.R:1231:45: style: Commas should always have a space after.
              "Gr\u00f6\u00dfen" = c("Wert","Standardfehler"),
                                            ^
NO COPY: R/BWI3_HR.R:1233:19: style: Put spaces around all infix operators.
              BAGR=bagr.list, AKL = akl.lab[1:A.k], DKL = dkl.lab,
                 ~^~
NO COPY: R/BWI3_HR.R:1234:40: style: Put spaces around all infix operators.
              T.VBN.A.NArt.Bagr.Akl.Dkl=Y.na.bagr.akl.dkl,
                                      ~^~
NO COPY: R/BWI3_HR.R:1234:41: style: Words within variable and function names should be separated by '_' rather than '.'.
              T.VBN.A.NArt.Bagr.Akl.Dkl=Y.na.bagr.akl.dkl,
                                        ^~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1235:31: style: Put spaces around all infix operators.
              BAF.bagr.akl.dkl=BAF.bagr.akl.dkl,
                             ~^~
NO COPY: R/BWI3_HR.R:1235:32: style: Words within variable and function names should be separated by '_' rather than '.'.
              BAF.bagr.akl.dkl=BAF.bagr.akl.dkl,
                               ^~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1236:36: style: Put spaces around all infix operators.
              mPL.NArt.Bagr.Akl.Dkl=mPL.na.bagr.akl.dkl,
                                  ~^~
NO COPY: R/BWI3_HR.R:1236:37: style: Variable and function names should be all lowercase.
              mPL.NArt.Bagr.Akl.Dkl=mPL.na.bagr.akl.dkl,
                                    ^~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1236:37: style: Words within variable and function names should be separated by '_' rather than '.'.
              mPL.NArt.Bagr.Akl.Dkl=mPL.na.bagr.akl.dkl,
                                    ^~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1237:59: style: Words within variable and function names should be separated by '_' rather than '.'.
              mPL.Stratum = mpl.stratum, SE.mPL.Stratum = se.mpl.stratum,
                                                          ^~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1238:35: style: Put spaces around all infix operators.
              nT.NArt.Bagr.Akl.Dkl=nT.na.bagr.akl.dkl))
                                 ~^~
NO COPY: R/BWI3_HR.R:1238:36: style: Variable and function names should be all lowercase.
              nT.NArt.Bagr.Akl.Dkl=nT.na.bagr.akl.dkl))
                                   ^~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1238:36: style: Words within variable and function names should be separated by '_' rather than '.'.
              nT.NArt.Bagr.Akl.Dkl=nT.na.bagr.akl.dkl))
                                   ^~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1299:60: style: Commas should always have a space after.
iVB.ew.bagrupp.akl.dkl.stratum.fun.2 <- function(baeume.23,baeume.3,
                                                           ^
NO COPY: R/BWI3_HR.R:1300:20: style: Commas should always have a space after.
          BA.grupp,A.klass,D.klass,auswahl,A,
                   ^
NO COPY: R/BWI3_HR.R:1300:28: style: Commas should always have a space after.
          BA.grupp,A.klass,D.klass,auswahl,A,
                           ^
NO COPY: R/BWI3_HR.R:1300:36: style: Commas should always have a space after.
          BA.grupp,A.klass,D.klass,auswahl,A,
                                   ^
NO COPY: R/BWI3_HR.R:1300:44: style: Commas should always have a space after.
          BA.grupp,A.klass,D.klass,auswahl,A,
                                           ^
NO COPY: R/BWI3_HR.R:1309:4: style: Commented code should be removed.
  #auswahl$Begehbar=1; auswahl$Wa=c(1:3)
   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1310:4: style: Commented code should be removed.
  #ecken.2.s <- stratum.fun(auswahl,ecken.2)
   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1312:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  ecken.2.s <- stratum.fun(list(Wa=c(1:3),Begehbar=1),ecken.2)
  ^~~~~~~~~
NO COPY: R/BWI3_HR.R:1312:35: style: Put spaces around all infix operators.
  ecken.2.s <- stratum.fun(list(Wa=c(1:3),Begehbar=1),ecken.2)
                                 ~^~
NO COPY: R/BWI3_HR.R:1312:43: style: Commas should always have a space after.
  ecken.2.s <- stratum.fun(list(Wa=c(1:3),Begehbar=1),ecken.2)
                                          ^
NO COPY: R/BWI3_HR.R:1312:51: style: Put spaces around all infix operators.
  ecken.2.s <- stratum.fun(list(Wa=c(1:3),Begehbar=1),ecken.2)
                                                 ~^~
NO COPY: R/BWI3_HR.R:1312:55: style: Commas should always have a space after.
  ecken.2.s <- stratum.fun(list(Wa=c(1:3),Begehbar=1),ecken.2)
                                                      ^
NO COPY: R/BWI3_HR.R:1314:13: style: Use <-, not =, for assignment.
  auswahl$Wa=c(3,5)
            ^
NO COPY: R/BWI3_HR.R:1314:13: style: Put spaces around all infix operators.
  auswahl$Wa=c(3,5)
           ~^~
NO COPY: R/BWI3_HR.R:1314:18: style: Commas should always have a space after.
  auswahl$Wa=c(3,5)
                 ^
NO COPY: R/BWI3_HR.R:1315:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  ecken.3.s <- stratum.fun(auswahl,ecken.3)
  ^~~~~~~~~
NO COPY: R/BWI3_HR.R:1315:36: style: Commas should always have a space after.
  ecken.3.s <- stratum.fun(auswahl,ecken.3)
                                   ^
NO COPY: R/BWI3_HR.R:1317:4: style: Commented code should be removed.
  #A <- 3575148 #ha
   ^~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1319:24: style: Commas should always have a space after.
  nT <- length(trakte[,1])
                       ^
NO COPY: R/BWI3_HR.R:1322:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  ecken.23.hb <- merge(
  ^~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1323:7: style: Words within variable and function names should be separated by '_' rather than '.'.
      ecken.3.s[TRUE,  c("TNr", "ENr")],
      ^~~~~~~~~
NO COPY: R/BWI3_HR.R:1324:7: style: Words within variable and function names should be separated by '_' rather than '.'.
      ecken.2.s[TRUE, c("TNr", "ENr")],
      ^~~~~~~~~
NO COPY: R/BWI3_HR.R:1325:9: style: Put spaces around all infix operators.
      by=c("TNr","ENr"))
       ~^~
NO COPY: R/BWI3_HR.R:1325:18: style: Commas should always have a space after.
      by=c("TNr","ENr"))
                 ^
NO COPY: R/BWI3_HR.R:1326:1: style: lines should not be more than 80 characters.
  ecken.23.hb <- merge(ecken.23.hb,ecken.3[TRUE, c("TNr", "ENr", "PL", "PLkal")],
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1326:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  ecken.23.hb <- merge(ecken.23.hb,ecken.3[TRUE, c("TNr", "ENr", "PL", "PLkal")],
  ^~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1326:24: style: Words within variable and function names should be separated by '_' rather than '.'.
  ecken.23.hb <- merge(ecken.23.hb,ecken.3[TRUE, c("TNr", "ENr", "PL", "PLkal")],
                       ^~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1326:36: style: Commas should always have a space after.
  ecken.23.hb <- merge(ecken.23.hb,ecken.3[TRUE, c("TNr", "ENr", "PL", "PLkal")],
                                   ^
NO COPY: R/BWI3_HR.R:1327:9: style: Put spaces around all infix operators.
      by=c("TNr","ENr"))
       ~^~
NO COPY: R/BWI3_HR.R:1327:18: style: Commas should always have a space after.
      by=c("TNr","ENr"))
                 ^
NO COPY: R/BWI3_HR.R:1333:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: R/BWI3_HR.R:1337:51: style: Trailing whitespace is superfluous.
  BA.grupp$bagr.lab[[n.bagr]] <- "Alle BA"    #*** 
                                                  ^
NO COPY: R/BWI3_HR.R:1339:51: style: Trailing whitespace is superfluous.
  bagr.tab <- ba.klass.lab.tab.fun(BA.grupp)  #*** 
                                                  ^
NO COPY: R/BWI3_HR.R:1340:1: style: lines should not be more than 80 characters.
  #Aus Komaptibilit\u00e4tsgr\u00fcnden wird Attribut-Name "bagr" auf "BaGr" ge\u00e4ndert
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1345:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  baeume.3.s <- merge(baeume.3[TRUE, c("TNr", "ENr", "STP", "BNr", "Entf", "Pk",
  ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:1346:77: style: Trailing whitespace is superfluous.
                                       "BA", "Alt1", "Alt2", "BHD1", "BHD2", 
                                                                            ^
NO COPY: R/BWI3_HR.R:1347:76: style: Trailing whitespace is superfluous.
                                       "D031", "D032", "H1", "H2", "VolV1", 
                                                                           ^
NO COPY: R/BWI3_HR.R:1348:74: style: Trailing whitespace is superfluous.
                                       "VolV2", "VolE1", "VolE2", "oiB1", 
                                                                         ^
NO COPY: R/BWI3_HR.R:1353:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  baeume.2.s <- merge(baeume.23[TRUE, c("TNr", "ENr", "STP", "BNr", "Entf", 
  ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:1353:76: style: Trailing whitespace is superfluous.
  baeume.2.s <- merge(baeume.23[TRUE, c("TNr", "ENr", "STP", "BNr", "Entf", 
                                                                           ^
NO COPY: R/BWI3_HR.R:1354:76: style: Trailing whitespace is superfluous.
                                        "Pk", "BA", "Alt1", "Alt2", "BHD1", 
                                                                           ^
NO COPY: R/BWI3_HR.R:1355:76: style: Trailing whitespace is superfluous.
                                        "BHD2", "D031", "D032", "H1", "H2", 
                                                                           ^
NO COPY: R/BWI3_HR.R:1356:76: style: Trailing whitespace is superfluous.
                                        "VolV1", "VolV2", "VolE1", "VolE2", 
                                                                           ^
NO COPY: R/BWI3_HR.R:1362:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  baeume.3.s <- merge(baeume.3.s,ecken.23.hb,by=c("TNr","ENr"))
  ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:1362:23: style: Words within variable and function names should be separated by '_' rather than '.'.
  baeume.3.s <- merge(baeume.3.s,ecken.23.hb,by=c("TNr","ENr"))
                      ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:1362:34: style: Commas should always have a space after.
  baeume.3.s <- merge(baeume.3.s,ecken.23.hb,by=c("TNr","ENr"))
                                 ^
NO COPY: R/BWI3_HR.R:1362:34: style: Words within variable and function names should be separated by '_' rather than '.'.
  baeume.3.s <- merge(baeume.3.s,ecken.23.hb,by=c("TNr","ENr"))
                                 ^~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1362:46: style: Commas should always have a space after.
  baeume.3.s <- merge(baeume.3.s,ecken.23.hb,by=c("TNr","ENr"))
                                             ^
NO COPY: R/BWI3_HR.R:1362:48: style: Put spaces around all infix operators.
  baeume.3.s <- merge(baeume.3.s,ecken.23.hb,by=c("TNr","ENr"))
                                              ~^~
NO COPY: R/BWI3_HR.R:1362:57: style: Commas should always have a space after.
  baeume.3.s <- merge(baeume.3.s,ecken.23.hb,by=c("TNr","ENr"))
                                                        ^
NO COPY: R/BWI3_HR.R:1363:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  baeume.2.s <- merge(baeume.2.s,ecken.23.hb,by=c("TNr","ENr"))
  ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:1363:23: style: Words within variable and function names should be separated by '_' rather than '.'.
  baeume.2.s <- merge(baeume.2.s,ecken.23.hb,by=c("TNr","ENr"))
                      ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:1363:34: style: Commas should always have a space after.
  baeume.2.s <- merge(baeume.2.s,ecken.23.hb,by=c("TNr","ENr"))
                                 ^
NO COPY: R/BWI3_HR.R:1363:34: style: Words within variable and function names should be separated by '_' rather than '.'.
  baeume.2.s <- merge(baeume.2.s,ecken.23.hb,by=c("TNr","ENr"))
                                 ^~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1363:46: style: Commas should always have a space after.
  baeume.2.s <- merge(baeume.2.s,ecken.23.hb,by=c("TNr","ENr"))
                                             ^
NO COPY: R/BWI3_HR.R:1363:48: style: Put spaces around all infix operators.
  baeume.2.s <- merge(baeume.2.s,ecken.23.hb,by=c("TNr","ENr"))
                                              ~^~
NO COPY: R/BWI3_HR.R:1363:57: style: Commas should always have a space after.
  baeume.2.s <- merge(baeume.2.s,ecken.23.hb,by=c("TNr","ENr"))
                                                        ^
NO COPY: R/BWI3_HR.R:1366:7: style: Words within variable and function names should be separated by '_' rather than '.'.
  sum(baeume.3.s$StFl2)/10000; sum(baeume.2.s$StFl1)/10000
      ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:1366:18: style: Variable and function names should be all lowercase.
  sum(baeume.3.s$StFl2)/10000; sum(baeume.2.s$StFl1)/10000
                 ^~~~~
NO COPY: R/BWI3_HR.R:1366:24: style: Put spaces around all infix operators.
  sum(baeume.3.s$StFl2)/10000; sum(baeume.2.s$StFl1)/10000
                      ~^~
NO COPY: R/BWI3_HR.R:1366:36: style: Words within variable and function names should be separated by '_' rather than '.'.
  sum(baeume.3.s$StFl2)/10000; sum(baeume.2.s$StFl1)/10000
                                   ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:1366:47: style: Variable and function names should be all lowercase.
  sum(baeume.3.s$StFl2)/10000; sum(baeume.2.s$StFl1)/10000
                                              ^~~~~
NO COPY: R/BWI3_HR.R:1366:53: style: Put spaces around all infix operators.
  sum(baeume.3.s$StFl2)/10000; sum(baeume.2.s$StFl1)/10000
                                                   ~^~
NO COPY: R/BWI3_HR.R:1370:29: style: Words within variable and function names should be separated by '_' rather than '.'.
  hb.te <- stats::aggregate(baeume.3.s$StFl2/10000,
                            ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:1370:40: style: Variable and function names should be all lowercase.
  hb.te <- stats::aggregate(baeume.3.s$StFl2/10000,
                                       ^~~~~
NO COPY: R/BWI3_HR.R:1370:45: style: Put spaces around all infix operators.
  hb.te <- stats::aggregate(baeume.3.s$StFl2/10000,
                                           ~^~
NO COPY: R/BWI3_HR.R:1371:27: style: Put spaces around all infix operators.
                        by=list(baeume.3.s$TNr,baeume.3.s$ENr),sum)
                         ~^~
NO COPY: R/BWI3_HR.R:1371:33: style: Words within variable and function names should be separated by '_' rather than '.'.
                        by=list(baeume.3.s$TNr,baeume.3.s$ENr),sum)
                                ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:1371:48: style: Commas should always have a space after.
                        by=list(baeume.3.s$TNr,baeume.3.s$ENr),sum)
                                               ^
NO COPY: R/BWI3_HR.R:1371:48: style: Words within variable and function names should be separated by '_' rather than '.'.
                        by=list(baeume.3.s$TNr,baeume.3.s$ENr),sum)
                                               ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:1371:64: style: Commas should always have a space after.
                        by=list(baeume.3.s$TNr,baeume.3.s$ENr),sum)
                                                               ^
NO COPY: R/BWI3_HR.R:1372:27: style: Commas should always have a space after.
  names(hb.te) <- c("TNr","ENr","m_HB_s")
                          ^
NO COPY: R/BWI3_HR.R:1372:33: style: Commas should always have a space after.
  names(hb.te) <- c("TNr","ENr","m_HB_s")
                                ^
NO COPY: R/BWI3_HR.R:1373:24: style: Commas should always have a space after.
  ecken <- merge(hb.te,ecken.23.hb[TRUE, c("TNr", "ENr", "PL", "PLkal")],
                       ^
NO COPY: R/BWI3_HR.R:1373:24: style: Words within variable and function names should be separated by '_' rather than '.'.
  ecken <- merge(hb.te,ecken.23.hb[TRUE, c("TNr", "ENr", "PL", "PLkal")],
                       ^~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1374:23: style: Put spaces around all infix operators.
                    by=c("TNr","ENr") )
                     ~^~
NO COPY: R/BWI3_HR.R:1374:32: style: Commas should always have a space after.
                    by=c("TNr","ENr") )
                               ^
NO COPY: R/BWI3_HR.R:1376:28: style: Words within variable and function names should be separated by '_' rather than '.'.
  hb.t <- stats::aggregate(baeume.3.s$StFl2/10000,by=list(baeume.3.s$TNr),sum)
                           ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:1376:39: style: Variable and function names should be all lowercase.
  hb.t <- stats::aggregate(baeume.3.s$StFl2/10000,by=list(baeume.3.s$TNr),sum)
                                      ^~~~~
NO COPY: R/BWI3_HR.R:1376:44: style: Put spaces around all infix operators.
  hb.t <- stats::aggregate(baeume.3.s$StFl2/10000,by=list(baeume.3.s$TNr),sum)
                                          ~^~
NO COPY: R/BWI3_HR.R:1376:51: style: Commas should always have a space after.
  hb.t <- stats::aggregate(baeume.3.s$StFl2/10000,by=list(baeume.3.s$TNr),sum)
                                                  ^
NO COPY: R/BWI3_HR.R:1376:53: style: Put spaces around all infix operators.
  hb.t <- stats::aggregate(baeume.3.s$StFl2/10000,by=list(baeume.3.s$TNr),sum)
                                                   ~^~
NO COPY: R/BWI3_HR.R:1376:59: style: Words within variable and function names should be separated by '_' rather than '.'.
  hb.t <- stats::aggregate(baeume.3.s$StFl2/10000,by=list(baeume.3.s$TNr),sum)
                                                          ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:1376:75: style: Commas should always have a space after.
  hb.t <- stats::aggregate(baeume.3.s$StFl2/10000,by=list(baeume.3.s$TNr),sum)
                                                                          ^
NO COPY: R/BWI3_HR.R:1377:26: style: Commas should always have a space after.
  names(hb.t) <- c("TNr","m_HB_s")
                         ^
NO COPY: R/BWI3_HR.R:1378:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  hb.t.s <- merge(trakte,hb.t,by=c("TNr"),all.x=T)
  ^~~~~~
NO COPY: R/BWI3_HR.R:1378:26: style: Commas should always have a space after.
  hb.t.s <- merge(trakte,hb.t,by=c("TNr"),all.x=T)
                         ^
NO COPY: R/BWI3_HR.R:1378:31: style: Commas should always have a space after.
  hb.t.s <- merge(trakte,hb.t,by=c("TNr"),all.x=T)
                              ^
NO COPY: R/BWI3_HR.R:1378:33: style: Put spaces around all infix operators.
  hb.t.s <- merge(trakte,hb.t,by=c("TNr"),all.x=T)
                               ~^~
NO COPY: R/BWI3_HR.R:1378:43: style: Commas should always have a space after.
  hb.t.s <- merge(trakte,hb.t,by=c("TNr"),all.x=T)
                                          ^
NO COPY: R/BWI3_HR.R:1378:48: style: Put spaces around all infix operators.
  hb.t.s <- merge(trakte,hb.t,by=c("TNr"),all.x=T)
                                              ~^~
NO COPY: R/BWI3_HR.R:1379:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  hb.t.s[is.na(hb.t.s)] <- 0
  ^~~~~~
NO COPY: R/BWI3_HR.R:1379:16: style: Words within variable and function names should be separated by '_' rather than '.'.
  hb.t.s[is.na(hb.t.s)] <- 0
               ^~~~~~
NO COPY: R/BWI3_HR.R:1380:34: style: Words within variable and function names should be separated by '_' rather than '.'.
  r.list <- r.variance.fun(cbind(hb.t.s$m,hb.t.s$m_HB_s),nT)
                                 ^~~~~~
NO COPY: R/BWI3_HR.R:1380:43: style: Commas should always have a space after.
  r.list <- r.variance.fun(cbind(hb.t.s$m,hb.t.s$m_HB_s),nT)
                                          ^
NO COPY: R/BWI3_HR.R:1380:43: style: Words within variable and function names should be separated by '_' rather than '.'.
  r.list <- r.variance.fun(cbind(hb.t.s$m,hb.t.s$m_HB_s),nT)
                                          ^~~~~~
NO COPY: R/BWI3_HR.R:1380:58: style: Commas should always have a space after.
  r.list <- r.variance.fun(cbind(hb.t.s$m,hb.t.s$m_HB_s),nT)
                                                         ^
NO COPY: R/BWI3_HR.R:1381:21: style: Put spaces around all infix operators.
  HBF <- r.list$R.xy*A
                   ~^~
NO COPY: R/BWI3_HR.R:1382:25: style: Words within variable and function names should be separated by '_' rather than '.'.
  se.HBF <- sqrt(r.list$V.R.xy)*A
                        ^~~~~~
NO COPY: R/BWI3_HR.R:1382:32: style: Put spaces around all infix operators.
  se.HBF <- sqrt(r.list$V.R.xy)*A
                              ~^~
NO COPY: R/BWI3_HR.R:1389:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  baeume.2.s$bhd.pm <- ifelse(baeume.2.s$Pk%in%c(2:5,9),baeume.2.s$BHD2,
  ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:1389:31: style: Words within variable and function names should be separated by '_' rather than '.'.
  baeume.2.s$bhd.pm <- ifelse(baeume.2.s$Pk%in%c(2:5,9),baeume.2.s$BHD2,
                              ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:1389:44: style: Put spaces around all infix operators.
  baeume.2.s$bhd.pm <- ifelse(baeume.2.s$Pk%in%c(2:5,9),baeume.2.s$BHD2,
                                          ~^~~~~
NO COPY: R/BWI3_HR.R:1389:54: style: Commas should always have a space after.
  baeume.2.s$bhd.pm <- ifelse(baeume.2.s$Pk%in%c(2:5,9),baeume.2.s$BHD2,
                                                     ^
NO COPY: R/BWI3_HR.R:1389:57: style: Commas should always have a space after.
  baeume.2.s$bhd.pm <- ifelse(baeume.2.s$Pk%in%c(2:5,9),baeume.2.s$BHD2,
                                                        ^
NO COPY: R/BWI3_HR.R:1389:57: style: Words within variable and function names should be separated by '_' rather than '.'.
  baeume.2.s$bhd.pm <- ifelse(baeume.2.s$Pk%in%c(2:5,9),baeume.2.s$BHD2,
                                                        ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:1390:8: style: Words within variable and function names should be separated by '_' rather than '.'.
      (baeume.2.s$BHD1+baeume.2.s$BHD2)/2)
       ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:1390:23: style: Put spaces around all infix operators.
      (baeume.2.s$BHD1+baeume.2.s$BHD2)/2)
                     ~^~
NO COPY: R/BWI3_HR.R:1390:24: style: Words within variable and function names should be separated by '_' rather than '.'.
      (baeume.2.s$BHD1+baeume.2.s$BHD2)/2)
                       ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:1390:40: style: Put spaces around all infix operators.
      (baeume.2.s$BHD1+baeume.2.s$BHD2)/2)
                                      ~^~
NO COPY: R/BWI3_HR.R:1391:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  baeume.2.s$alt.pm <- ifelse(baeume.2.s$Pk%in%c(2:5,9),baeume.2.s$Alt2,
  ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:1391:31: style: Words within variable and function names should be separated by '_' rather than '.'.
  baeume.2.s$alt.pm <- ifelse(baeume.2.s$Pk%in%c(2:5,9),baeume.2.s$Alt2,
                              ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:1391:44: style: Put spaces around all infix operators.
  baeume.2.s$alt.pm <- ifelse(baeume.2.s$Pk%in%c(2:5,9),baeume.2.s$Alt2,
                                          ~^~~~~
NO COPY: R/BWI3_HR.R:1391:54: style: Commas should always have a space after.
  baeume.2.s$alt.pm <- ifelse(baeume.2.s$Pk%in%c(2:5,9),baeume.2.s$Alt2,
                                                     ^
NO COPY: R/BWI3_HR.R:1391:57: style: Commas should always have a space after.
  baeume.2.s$alt.pm <- ifelse(baeume.2.s$Pk%in%c(2:5,9),baeume.2.s$Alt2,
                                                        ^
NO COPY: R/BWI3_HR.R:1391:57: style: Words within variable and function names should be separated by '_' rather than '.'.
  baeume.2.s$alt.pm <- ifelse(baeume.2.s$Pk%in%c(2:5,9),baeume.2.s$Alt2,
                                                        ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:1392:14: style: Words within variable and function names should be separated by '_' rather than '.'.
      ifelse(baeume.2.s$BA<998,baeume.2.s$Alt1+baeume.2.s$PL/2,0))
             ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:1392:27: style: Put spaces around all infix operators.
      ifelse(baeume.2.s$BA<998,baeume.2.s$Alt1+baeume.2.s$PL/2,0))
                         ~^~
NO COPY: R/BWI3_HR.R:1392:32: style: Commas should always have a space after.
      ifelse(baeume.2.s$BA<998,baeume.2.s$Alt1+baeume.2.s$PL/2,0))
                               ^
NO COPY: R/BWI3_HR.R:1392:32: style: Words within variable and function names should be separated by '_' rather than '.'.
      ifelse(baeume.2.s$BA<998,baeume.2.s$Alt1+baeume.2.s$PL/2,0))
                               ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:1392:47: style: Put spaces around all infix operators.
      ifelse(baeume.2.s$BA<998,baeume.2.s$Alt1+baeume.2.s$PL/2,0))
                                             ~^~
NO COPY: R/BWI3_HR.R:1392:48: style: Words within variable and function names should be separated by '_' rather than '.'.
      ifelse(baeume.2.s$BA<998,baeume.2.s$Alt1+baeume.2.s$PL/2,0))
                                               ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:1392:61: style: Put spaces around all infix operators.
      ifelse(baeume.2.s$BA<998,baeume.2.s$Alt1+baeume.2.s$PL/2,0))
                                                           ~^~
NO COPY: R/BWI3_HR.R:1392:64: style: Commas should always have a space after.
      ifelse(baeume.2.s$BA<998,baeume.2.s$Alt1+baeume.2.s$PL/2,0))
                                                               ^
NO COPY: R/BWI3_HR.R:1396:1: style: lines should not be more than 80 characters.
  #die bei der Zuwachsbilanzierung ben\u00f6tigten PB-Kategorien S- und E-B\u00e4ume)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1397:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  baeume.3.s$bhd.pm <- (baeume.3.s$BHD1+baeume.3.s$BHD2)/2
  ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:1397:25: style: Words within variable and function names should be separated by '_' rather than '.'.
  baeume.3.s$bhd.pm <- (baeume.3.s$BHD1+baeume.3.s$BHD2)/2
                        ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:1397:40: style: Put spaces around all infix operators.
  baeume.3.s$bhd.pm <- (baeume.3.s$BHD1+baeume.3.s$BHD2)/2
                                      ~^~
NO COPY: R/BWI3_HR.R:1397:41: style: Words within variable and function names should be separated by '_' rather than '.'.
  baeume.3.s$bhd.pm <- (baeume.3.s$BHD1+baeume.3.s$BHD2)/2
                                        ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:1397:57: style: Put spaces around all infix operators.
  baeume.3.s$bhd.pm <- (baeume.3.s$BHD1+baeume.3.s$BHD2)/2
                                                       ~^~
NO COPY: R/BWI3_HR.R:1398:1: style: lines should not be more than 80 characters.
  baeume.3.s$alt.pm<- ifelse(baeume.3.s$BA<998,baeume.3.s$Alt2-baeume.3.s$PL/2,0)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1398:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  baeume.3.s$alt.pm<- ifelse(baeume.3.s$BA<998,baeume.3.s$Alt2-baeume.3.s$PL/2,0)
  ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:1398:20: style: Put spaces around all infix operators.
  baeume.3.s$alt.pm<- ifelse(baeume.3.s$BA<998,baeume.3.s$Alt2-baeume.3.s$PL/2,0)
                  ~^
NO COPY: R/BWI3_HR.R:1398:30: style: Words within variable and function names should be separated by '_' rather than '.'.
  baeume.3.s$alt.pm<- ifelse(baeume.3.s$BA<998,baeume.3.s$Alt2-baeume.3.s$PL/2,0)
                             ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:1398:43: style: Put spaces around all infix operators.
  baeume.3.s$alt.pm<- ifelse(baeume.3.s$BA<998,baeume.3.s$Alt2-baeume.3.s$PL/2,0)
                                         ~^~
NO COPY: R/BWI3_HR.R:1398:48: style: Commas should always have a space after.
  baeume.3.s$alt.pm<- ifelse(baeume.3.s$BA<998,baeume.3.s$Alt2-baeume.3.s$PL/2,0)
                                               ^
NO COPY: R/BWI3_HR.R:1398:48: style: Words within variable and function names should be separated by '_' rather than '.'.
  baeume.3.s$alt.pm<- ifelse(baeume.3.s$BA<998,baeume.3.s$Alt2-baeume.3.s$PL/2,0)
                                               ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:1398:63: style: Put spaces around all infix operators.
  baeume.3.s$alt.pm<- ifelse(baeume.3.s$BA<998,baeume.3.s$Alt2-baeume.3.s$PL/2,0)
                                                             ~^~
NO COPY: R/BWI3_HR.R:1398:64: style: Words within variable and function names should be separated by '_' rather than '.'.
  baeume.3.s$alt.pm<- ifelse(baeume.3.s$BA<998,baeume.3.s$Alt2-baeume.3.s$PL/2,0)
                                                               ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:1398:77: style: Put spaces around all infix operators.
  baeume.3.s$alt.pm<- ifelse(baeume.3.s$BA<998,baeume.3.s$Alt2-baeume.3.s$PL/2,0)
                                                                           ~^~
NO COPY: R/BWI3_HR.R:1398:80: style: Commas should always have a space after.
  baeume.3.s$alt.pm<- ifelse(baeume.3.s$BA<998,baeume.3.s$Alt2-baeume.3.s$PL/2,0)
                                                                               ^
NO COPY: R/BWI3_HR.R:1403:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  baeume.2.s$akl <- cut(baeume.2.s$alt.pm,
  ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:1403:25: style: Words within variable and function names should be separated by '_' rather than '.'.
  baeume.2.s$akl <- cut(baeume.2.s$alt.pm,
                        ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:1404:29: style: Put spaces around all infix operators.
                      breaks=c(seq(0,A.klass[[1]],A.klass[[2]]),A.max),right=T)
                           ~^~
NO COPY: R/BWI3_HR.R:1404:38: style: Commas should always have a space after.
                      breaks=c(seq(0,A.klass[[1]],A.klass[[2]]),A.max),right=T)
                                     ^
NO COPY: R/BWI3_HR.R:1404:51: style: Commas should always have a space after.
                      breaks=c(seq(0,A.klass[[1]],A.klass[[2]]),A.max),right=T)
                                                  ^
NO COPY: R/BWI3_HR.R:1404:65: style: Commas should always have a space after.
                      breaks=c(seq(0,A.klass[[1]],A.klass[[2]]),A.max),right=T)
                                                                ^
NO COPY: R/BWI3_HR.R:1404:72: style: Commas should always have a space after.
                      breaks=c(seq(0,A.klass[[1]],A.klass[[2]]),A.max),right=T)
                                                                       ^
NO COPY: R/BWI3_HR.R:1404:77: style: Put spaces around all infix operators.
                      breaks=c(seq(0,A.klass[[1]],A.klass[[2]]),A.max),right=T)
                                                                           ~^~
NO COPY: R/BWI3_HR.R:1406:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  baeume.3.s$akl <- cut(baeume.3.s$alt.pm,
  ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:1406:25: style: Words within variable and function names should be separated by '_' rather than '.'.
  baeume.3.s$akl <- cut(baeume.3.s$alt.pm,
                        ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:1407:29: style: Put spaces around all infix operators.
                      breaks=c(seq(0,A.klass[[1]],A.klass[[2]]),A.max),right=T)
                           ~^~
NO COPY: R/BWI3_HR.R:1407:38: style: Commas should always have a space after.
                      breaks=c(seq(0,A.klass[[1]],A.klass[[2]]),A.max),right=T)
                                     ^
NO COPY: R/BWI3_HR.R:1407:51: style: Commas should always have a space after.
                      breaks=c(seq(0,A.klass[[1]],A.klass[[2]]),A.max),right=T)
                                                  ^
NO COPY: R/BWI3_HR.R:1407:65: style: Commas should always have a space after.
                      breaks=c(seq(0,A.klass[[1]],A.klass[[2]]),A.max),right=T)
                                                                ^
NO COPY: R/BWI3_HR.R:1407:72: style: Commas should always have a space after.
                      breaks=c(seq(0,A.klass[[1]],A.klass[[2]]),A.max),right=T)
                                                                       ^
NO COPY: R/BWI3_HR.R:1407:77: style: Put spaces around all infix operators.
                      breaks=c(seq(0,A.klass[[1]],A.klass[[2]]),A.max),right=T)
                                                                           ~^~
NO COPY: R/BWI3_HR.R:1408:21: style: Words within variable and function names should be separated by '_' rather than '.'.
  akl.lab <- unique(baeume.3.s$akl)
                    ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:1415:3: style: Opening curly braces should never go on their own line and should always be followed by a new line.
  {
  ^
NO COPY: R/BWI3_HR.R:1416:1: style: lines should not be more than 80 characters.
    brks <- c(0,7,seq(D.klass[[1]]+D.klass[[3]],D.klass[[2]],D.klass[[3]]),D.max)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1416:17: style: Commas should always have a space after.
    brks <- c(0,7,seq(D.klass[[1]]+D.klass[[3]],D.klass[[2]],D.klass[[3]]),D.max)
                ^
NO COPY: R/BWI3_HR.R:1416:19: style: Commas should always have a space after.
    brks <- c(0,7,seq(D.klass[[1]]+D.klass[[3]],D.klass[[2]],D.klass[[3]]),D.max)
                  ^
NO COPY: R/BWI3_HR.R:1416:35: style: Put spaces around all infix operators.
    brks <- c(0,7,seq(D.klass[[1]]+D.klass[[3]],D.klass[[2]],D.klass[[3]]),D.max)
                                 ~^~
NO COPY: R/BWI3_HR.R:1416:49: style: Commas should always have a space after.
    brks <- c(0,7,seq(D.klass[[1]]+D.klass[[3]],D.klass[[2]],D.klass[[3]]),D.max)
                                                ^
NO COPY: R/BWI3_HR.R:1416:62: style: Commas should always have a space after.
    brks <- c(0,7,seq(D.klass[[1]]+D.klass[[3]],D.klass[[2]],D.klass[[3]]),D.max)
                                                             ^
NO COPY: R/BWI3_HR.R:1416:76: style: Commas should always have a space after.
    brks <- c(0,7,seq(D.klass[[1]]+D.klass[[3]],D.klass[[2]],D.klass[[3]]),D.max)
                                                                           ^
NO COPY: R/BWI3_HR.R:1418:3: style: Opening curly braces should never go on their own line and should always be followed by a new line.
  {
  ^
NO COPY: R/BWI3_HR.R:1419:32: style: Commas should always have a space after.
    brks <- c(seq(D.klass[[1]],D.klass[[2]],D.klass[[3]]),D.max)
                               ^
NO COPY: R/BWI3_HR.R:1419:45: style: Commas should always have a space after.
    brks <- c(seq(D.klass[[1]],D.klass[[2]],D.klass[[3]]),D.max)
                                            ^
NO COPY: R/BWI3_HR.R:1419:59: style: Commas should always have a space after.
    brks <- c(seq(D.klass[[1]],D.klass[[2]],D.klass[[3]]),D.max)
                                                          ^
NO COPY: R/BWI3_HR.R:1422:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  baeume.2.s$dkl <- cut(baeume.2.s$bhd.pm, breaks=brks, right=F)
  ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:1422:25: style: Words within variable and function names should be separated by '_' rather than '.'.
  baeume.2.s$dkl <- cut(baeume.2.s$bhd.pm, breaks=brks, right=F)
                        ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:1422:50: style: Put spaces around all infix operators.
  baeume.2.s$dkl <- cut(baeume.2.s$bhd.pm, breaks=brks, right=F)
                                                ~^~
NO COPY: R/BWI3_HR.R:1422:62: style: Put spaces around all infix operators.
  baeume.2.s$dkl <- cut(baeume.2.s$bhd.pm, breaks=brks, right=F)
                                                            ~^~
NO COPY: R/BWI3_HR.R:1424:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  baeume.3.s$dkl <- cut(baeume.3.s$bhd.pm, breaks=brks, right=F)
  ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:1424:25: style: Words within variable and function names should be separated by '_' rather than '.'.
  baeume.3.s$dkl <- cut(baeume.3.s$bhd.pm, breaks=brks, right=F)
                        ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:1424:50: style: Put spaces around all infix operators.
  baeume.3.s$dkl <- cut(baeume.3.s$bhd.pm, breaks=brks, right=F)
                                                ~^~
NO COPY: R/BWI3_HR.R:1424:62: style: Put spaces around all infix operators.
  baeume.3.s$dkl <- cut(baeume.3.s$bhd.pm, breaks=brks, right=F)
                                                            ~^~
NO COPY: R/BWI3_HR.R:1425:21: style: Words within variable and function names should be separated by '_' rather than '.'.
  dkl.lab <- unique(baeume.3.s$dkl)
                    ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:1431:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.a.t.bagr.akl.dkl <- iVB.bilanz.bagr.akl.dkl.fun(baeume.2.s,baeume.3.s,
  ^~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1431:57: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.a.t.bagr.akl.dkl <- iVB.bilanz.bagr.akl.dkl.fun(baeume.2.s,baeume.3.s,
                                                        ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:1431:68: style: Commas should always have a space after.
  iv.es.a.t.bagr.akl.dkl <- iVB.bilanz.bagr.akl.dkl.fun(baeume.2.s,baeume.3.s,
                                                                   ^
NO COPY: R/BWI3_HR.R:1431:68: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.a.t.bagr.akl.dkl <- iVB.bilanz.bagr.akl.dkl.fun(baeume.2.s,baeume.3.s,
                                                                   ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:1433:1: style: Trailing whitespace is superfluous.
                                                  
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1437:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  baeume.2.s$BaGr <- "AlleBA"
  ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:1437:14: style: Variable and function names should be all lowercase.
  baeume.2.s$BaGr <- "AlleBA"
             ^~~~
NO COPY: R/BWI3_HR.R:1438:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  baeume.3.s$BaGr <- "AlleBA"
  ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:1438:14: style: Variable and function names should be all lowercase.
  baeume.3.s$BaGr <- "AlleBA"
             ^~~~
NO COPY: R/BWI3_HR.R:1439:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.a.t.alle.akl.dkl <- iVB.bilanz.bagr.akl.dkl.fun(baeume.2.s,baeume.3.s,
  ^~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1439:57: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.a.t.alle.akl.dkl <- iVB.bilanz.bagr.akl.dkl.fun(baeume.2.s,baeume.3.s,
                                                        ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:1439:68: style: Commas should always have a space after.
  iv.es.a.t.alle.akl.dkl <- iVB.bilanz.bagr.akl.dkl.fun(baeume.2.s,baeume.3.s,
                                                                   ^
NO COPY: R/BWI3_HR.R:1439:68: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.a.t.alle.akl.dkl <- iVB.bilanz.bagr.akl.dkl.fun(baeume.2.s,baeume.3.s,
                                                                   ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:1446:1: style: lines should not be more than 80 characters.
  #1. 1-12: 4 Zielgr\u00f6\u00dfen: V_DhmR, V_DhmR_HB, V_EoR, oiB in je 3 Varianten
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1459:3: style: Variable and function names should be all lowercase.
  iVB.bagr.akl.dkl <- array(dim=c(16,2,n.bagr,A.k,D.k))
  ^~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1459:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  iVB.bagr.akl.dkl <- array(dim=c(16,2,n.bagr,A.k,D.k))
  ^~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1459:32: style: Put spaces around all infix operators.
  iVB.bagr.akl.dkl <- array(dim=c(16,2,n.bagr,A.k,D.k))
                              ~^~
NO COPY: R/BWI3_HR.R:1459:38: style: Commas should always have a space after.
  iVB.bagr.akl.dkl <- array(dim=c(16,2,n.bagr,A.k,D.k))
                                     ^
NO COPY: R/BWI3_HR.R:1459:40: style: Commas should always have a space after.
  iVB.bagr.akl.dkl <- array(dim=c(16,2,n.bagr,A.k,D.k))
                                       ^
NO COPY: R/BWI3_HR.R:1459:47: style: Commas should always have a space after.
  iVB.bagr.akl.dkl <- array(dim=c(16,2,n.bagr,A.k,D.k))
                                              ^
NO COPY: R/BWI3_HR.R:1459:51: style: Commas should always have a space after.
  iVB.bagr.akl.dkl <- array(dim=c(16,2,n.bagr,A.k,D.k))
                                                  ^
NO COPY: R/BWI3_HR.R:1475:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  VB.A.bagr.akl.dkl <- array(dim=c(13,2,n.bagr,A.k,D.k))
  ^~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1475:33: style: Put spaces around all infix operators.
  VB.A.bagr.akl.dkl <- array(dim=c(13,2,n.bagr,A.k,D.k))
                               ~^~
NO COPY: R/BWI3_HR.R:1475:39: style: Commas should always have a space after.
  VB.A.bagr.akl.dkl <- array(dim=c(13,2,n.bagr,A.k,D.k))
                                      ^
NO COPY: R/BWI3_HR.R:1475:41: style: Commas should always have a space after.
  VB.A.bagr.akl.dkl <- array(dim=c(13,2,n.bagr,A.k,D.k))
                                        ^
NO COPY: R/BWI3_HR.R:1475:48: style: Commas should always have a space after.
  VB.A.bagr.akl.dkl <- array(dim=c(13,2,n.bagr,A.k,D.k))
                                               ^
NO COPY: R/BWI3_HR.R:1475:52: style: Commas should always have a space after.
  VB.A.bagr.akl.dkl <- array(dim=c(13,2,n.bagr,A.k,D.k))
                                                   ^
NO COPY: R/BWI3_HR.R:1479:3: style: Opening curly braces should never go on their own line and should always be followed by a new line.
  {
  ^
NO COPY: R/BWI3_HR.R:1481:5: style: Opening curly braces should never go on their own line and should always be followed by a new line.
    {
    ^
NO COPY: R/BWI3_HR.R:1483:7: style: Opening curly braces should never go on their own line and should always be followed by a new line.
      {
      ^
NO COPY: R/BWI3_HR.R:1487:9: style: Opening curly braces should never go on their own line and should always be followed by a new line.
        {
        ^
NO COPY: R/BWI3_HR.R:1488:11: style: Words within variable and function names should be separated by '_' rather than '.'.
          iv.es.a.t <- iv.es.a.t.bagr.akl.dkl[
          ^~~~~~~~~
NO COPY: R/BWI3_HR.R:1488:24: style: Words within variable and function names should be separated by '_' rather than '.'.
          iv.es.a.t <- iv.es.a.t.bagr.akl.dkl[
                       ^~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1489:23: style: Words within variable and function names should be separated by '_' rather than '.'.
                      iv.es.a.t.bagr.akl.dkl[["BaGr"]] == bagr.list[i] &
                      ^~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1490:23: style: Words within variable and function names should be separated by '_' rather than '.'.
                      iv.es.a.t.bagr.akl.dkl[["Akl"]] == akl.lab[j] &
                      ^~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1491:23: style: Words within variable and function names should be separated by '_' rather than '.'.
                      iv.es.a.t.bagr.akl.dkl[["Dkl"]] == dkl.lab[k], TRUE]
                      ^~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1493:9: style: Opening curly braces should never go on their own line and should always be followed by a new line.
        { #Alle BA  09.02.2015: ...alle... f\u00fcr BaGr AlleBA
        ^
NO COPY: R/BWI3_HR.R:1494:11: style: Words within variable and function names should be separated by '_' rather than '.'.
          iv.es.a.t <- iv.es.a.t.alle.akl.dkl[
          ^~~~~~~~~
NO COPY: R/BWI3_HR.R:1494:24: style: Words within variable and function names should be separated by '_' rather than '.'.
          iv.es.a.t <- iv.es.a.t.alle.akl.dkl[
                       ^~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1495:1: style: lines should not be more than 80 characters.
                                              iv.es.a.t.alle.akl.dkl[["Akl"]] == akl.lab[j] &
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1495:47: style: Words within variable and function names should be separated by '_' rather than '.'.
                                              iv.es.a.t.alle.akl.dkl[["Akl"]] == akl.lab[j] &
                                              ^~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1496:1: style: lines should not be more than 80 characters.
                                              iv.es.a.t.alle.akl.dkl[["Dkl"]] == dkl.lab[k], TRUE]
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1496:47: style: Words within variable and function names should be separated by '_' rather than '.'.
                                              iv.es.a.t.alle.akl.dkl[["Dkl"]] == dkl.lab[k], TRUE]
                                              ^~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1500:9: style: Variable and function names should be all lowercase.
        iVB.bagr.akl.dkl[16,1,i,j,k] <- length(iv.es.a.t[,1])
        ^~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1500:9: style: Words within variable and function names should be separated by '_' rather than '.'.
        iVB.bagr.akl.dkl[16,1,i,j,k] <- length(iv.es.a.t[,1])
        ^~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1500:29: style: Commas should always have a space after.
        iVB.bagr.akl.dkl[16,1,i,j,k] <- length(iv.es.a.t[,1])
                            ^
NO COPY: R/BWI3_HR.R:1500:31: style: Commas should always have a space after.
        iVB.bagr.akl.dkl[16,1,i,j,k] <- length(iv.es.a.t[,1])
                              ^
NO COPY: R/BWI3_HR.R:1500:33: style: Commas should always have a space after.
        iVB.bagr.akl.dkl[16,1,i,j,k] <- length(iv.es.a.t[,1])
                                ^
NO COPY: R/BWI3_HR.R:1500:35: style: Commas should always have a space after.
        iVB.bagr.akl.dkl[16,1,i,j,k] <- length(iv.es.a.t[,1])
                                  ^
NO COPY: R/BWI3_HR.R:1500:48: style: Words within variable and function names should be separated by '_' rather than '.'.
        iVB.bagr.akl.dkl[16,1,i,j,k] <- length(iv.es.a.t[,1])
                                               ^~~~~~~~~
NO COPY: R/BWI3_HR.R:1500:59: style: Commas should always have a space after.
        iVB.bagr.akl.dkl[16,1,i,j,k] <- length(iv.es.a.t[,1])
                                                          ^
NO COPY: R/BWI3_HR.R:1502:1: style: lines should not be more than 80 characters.
        iv.bil.t <- iv.es.a.t[TRUE, c("TNr", "mBAF", "mBAF.oLK", "mPL", "mPLkal",
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1502:9: style: Words within variable and function names should be separated by '_' rather than '.'.
        iv.bil.t <- iv.es.a.t[TRUE, c("TNr", "mBAF", "mBAF.oLK", "mPL", "mPLkal",
        ^~~~~~~~
NO COPY: R/BWI3_HR.R:1502:21: style: Words within variable and function names should be separated by '_' rather than '.'.
        iv.bil.t <- iv.es.a.t[TRUE, c("TNr", "mBAF", "mBAF.oLK", "mPL", "mPLkal",
                    ^~~~~~~~~
NO COPY: R/BWI3_HR.R:1503:78: style: Trailing whitespace is superfluous.
                                     "iV.DhmR", "iV.DhmR.HB", "iV.EoR", "iB", 
                                                                             ^
NO COPY: R/BWI3_HR.R:1504:75: style: Trailing whitespace is superfluous.
                                     "V.DhmR.A", "V.DhmR.HB.A", "V.EoR.A", 
                                                                          ^
NO COPY: R/BWI3_HR.R:1507:9: style: Words within variable and function names should be separated by '_' rather than '.'.
        iv.bil.t <- merge(trakte[TRUE, c("TNr", "m", "m_HB")],iv.bil.t,
        ^~~~~~~~
NO COPY: R/BWI3_HR.R:1507:63: style: Commas should always have a space after.
        iv.bil.t <- merge(trakte[TRUE, c("TNr", "m", "m_HB")],iv.bil.t,
                                                              ^
NO COPY: R/BWI3_HR.R:1507:63: style: Words within variable and function names should be separated by '_' rather than '.'.
        iv.bil.t <- merge(trakte[TRUE, c("TNr", "m", "m_HB")],iv.bil.t,
                                                              ^~~~~~~~
NO COPY: R/BWI3_HR.R:1508:29: style: Put spaces around all infix operators.
                          by=c("TNr"),all.x=T)
                           ~^~
NO COPY: R/BWI3_HR.R:1508:39: style: Commas should always have a space after.
                          by=c("TNr"),all.x=T)
                                      ^
NO COPY: R/BWI3_HR.R:1508:44: style: Put spaces around all infix operators.
                          by=c("TNr"),all.x=T)
                                          ~^~
NO COPY: R/BWI3_HR.R:1510:9: style: Words within variable and function names should be separated by '_' rather than '.'.
        iv.bil.t[is.na(iv.bil.t)] <- 0
        ^~~~~~~~
NO COPY: R/BWI3_HR.R:1510:24: style: Words within variable and function names should be separated by '_' rather than '.'.
        iv.bil.t[is.na(iv.bil.t)] <- 0
                       ^~~~~~~~
NO COPY: R/BWI3_HR.R:1512:10: style: Commented code should be removed.
        #utils::head(iv.bil.t)
         ^~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1517:1: style: Trailing whitespace is superfluous.
        
^~~~~~~~
NO COPY: R/BWI3_HR.R:1523:1: style: lines should not be more than 80 characters.
                          #j\u00e4hrlicher Gesamtwert, Ha-bezogener j\u00e4hrl. Wert
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1524:9: style: Opening curly braces should never go on their own line and should always be followed by a new line.
        {
        ^
NO COPY: R/BWI3_HR.R:1525:1: style: lines should not be more than 80 characters.
          for (jj in 8:11) #Spaltenpositionen der 4 Zielgr\u00f6\u00dfen iV.DhmR,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1528:11: style: Opening curly braces should never go on their own line and should always be followed by a new line.
          {
          ^
NO COPY: R/BWI3_HR.R:1530:1: style: lines should not be more than 80 characters.
            #Bezugsgr\u00f6\u00dfe x: bei ii = 1 oder 2 (Gesamtwerte): Anzahl Ecken je
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1531:1: style: lines should not be more than 80 characters.
            #Takt (m); bei ii = 3 (Hektar.Bezug) Fallunterscheidung: "Gr\u00f6\u00dfen"
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1534:15: style: Place a space before left parenthesis, except in a function call.
            if(ii < 3) {x <- iv.bil.t[,2]}  else
              ^
NO COPY: R/BWI3_HR.R:1534:24: style: Opening curly braces should never go on their own line and should always be followed by a new line.
            if(ii < 3) {x <- iv.bil.t[,2]}  else
                       ^
NO COPY: R/BWI3_HR.R:1534:30: style: Words within variable and function names should be separated by '_' rather than '.'.
            if(ii < 3) {x <- iv.bil.t[,2]}  else
                             ^~~~~~~~
NO COPY: R/BWI3_HR.R:1534:40: style: Commas should always have a space after.
            if(ii < 3) {x <- iv.bil.t[,2]}  else
                                       ^
NO COPY: R/BWI3_HR.R:1534:42: style: Closing curly-braces should always be on their own line, unless it's followed by an else.
            if(ii < 3) {x <- iv.bil.t[,2]}  else
                                         ^
NO COPY: R/BWI3_HR.R:1535:13: style: Opening curly braces should never go on their own line and should always be followed by a new line.
            {if(jj==9) {x <- iv.bil.t[,5]} else {x <- iv.bil.t[,4]}}
            ^
NO COPY: R/BWI3_HR.R:1535:16: style: Place a space before left parenthesis, except in a function call.
            {if(jj==9) {x <- iv.bil.t[,5]} else {x <- iv.bil.t[,4]}}
               ^
NO COPY: R/BWI3_HR.R:1535:19: style: Put spaces around all infix operators.
            {if(jj==9) {x <- iv.bil.t[,5]} else {x <- iv.bil.t[,4]}}
                 ~^~~
NO COPY: R/BWI3_HR.R:1535:24: style: Opening curly braces should never go on their own line and should always be followed by a new line.
            {if(jj==9) {x <- iv.bil.t[,5]} else {x <- iv.bil.t[,4]}}
                       ^
NO COPY: R/BWI3_HR.R:1535:30: style: Words within variable and function names should be separated by '_' rather than '.'.
            {if(jj==9) {x <- iv.bil.t[,5]} else {x <- iv.bil.t[,4]}}
                             ^~~~~~~~
NO COPY: R/BWI3_HR.R:1535:40: style: Commas should always have a space after.
            {if(jj==9) {x <- iv.bil.t[,5]} else {x <- iv.bil.t[,4]}}
                                       ^
NO COPY: R/BWI3_HR.R:1535:42: style: Closing curly-braces should always be on their own line, unless it's followed by an else.
            {if(jj==9) {x <- iv.bil.t[,5]} else {x <- iv.bil.t[,4]}}
                                         ^
NO COPY: R/BWI3_HR.R:1535:49: style: Opening curly braces should never go on their own line and should always be followed by a new line.
            {if(jj==9) {x <- iv.bil.t[,5]} else {x <- iv.bil.t[,4]}}
                                                ^
NO COPY: R/BWI3_HR.R:1535:55: style: Words within variable and function names should be separated by '_' rather than '.'.
            {if(jj==9) {x <- iv.bil.t[,5]} else {x <- iv.bil.t[,4]}}
                                                      ^~~~~~~~
NO COPY: R/BWI3_HR.R:1535:65: style: Commas should always have a space after.
            {if(jj==9) {x <- iv.bil.t[,5]} else {x <- iv.bil.t[,4]}}
                                                                ^
NO COPY: R/BWI3_HR.R:1535:67: style: Closing curly-braces should always be on their own line, unless it's followed by an else.
            {if(jj==9) {x <- iv.bil.t[,5]} else {x <- iv.bil.t[,4]}}
                                                                  ^
NO COPY: R/BWI3_HR.R:1535:68: style: Closing curly-braces should always be on their own line, unless it's followed by an else.
            {if(jj==9) {x <- iv.bil.t[,5]} else {x <- iv.bil.t[,4]}}
                                                                   ^
NO COPY: R/BWI3_HR.R:1537:15: style: Place a space before left parenthesis, except in a function call.
            if(ii < 2) {y <- iv.bil.t[,jj]} else
              ^
NO COPY: R/BWI3_HR.R:1537:24: style: Opening curly braces should never go on their own line and should always be followed by a new line.
            if(ii < 2) {y <- iv.bil.t[,jj]} else
                       ^
NO COPY: R/BWI3_HR.R:1537:30: style: Words within variable and function names should be separated by '_' rather than '.'.
            if(ii < 2) {y <- iv.bil.t[,jj]} else
                             ^~~~~~~~
NO COPY: R/BWI3_HR.R:1537:40: style: Commas should always have a space after.
            if(ii < 2) {y <- iv.bil.t[,jj]} else
                                       ^
NO COPY: R/BWI3_HR.R:1537:43: style: Closing curly-braces should always be on their own line, unless it's followed by an else.
            if(ii < 2) {y <- iv.bil.t[,jj]} else
                                          ^
NO COPY: R/BWI3_HR.R:1538:15: style: Opening curly braces should never go on their own line and should always be followed by a new line.
              {y <- ifelse(iv.bil.t[,6]>0,iv.bil.t[,jj]/iv.bil.t[,6],0)}
              ^
NO COPY: R/BWI3_HR.R:1538:28: style: Words within variable and function names should be separated by '_' rather than '.'.
              {y <- ifelse(iv.bil.t[,6]>0,iv.bil.t[,jj]/iv.bil.t[,6],0)}
                           ^~~~~~~~
NO COPY: R/BWI3_HR.R:1538:38: style: Commas should always have a space after.
              {y <- ifelse(iv.bil.t[,6]>0,iv.bil.t[,jj]/iv.bil.t[,6],0)}
                                     ^
NO COPY: R/BWI3_HR.R:1538:40: style: Put spaces around all infix operators.
              {y <- ifelse(iv.bil.t[,6]>0,iv.bil.t[,jj]/iv.bil.t[,6],0)}
                                      ~^~
NO COPY: R/BWI3_HR.R:1538:43: style: Commas should always have a space after.
              {y <- ifelse(iv.bil.t[,6]>0,iv.bil.t[,jj]/iv.bil.t[,6],0)}
                                          ^
NO COPY: R/BWI3_HR.R:1538:43: style: Words within variable and function names should be separated by '_' rather than '.'.
              {y <- ifelse(iv.bil.t[,6]>0,iv.bil.t[,jj]/iv.bil.t[,6],0)}
                                          ^~~~~~~~
NO COPY: R/BWI3_HR.R:1538:53: style: Commas should always have a space after.
              {y <- ifelse(iv.bil.t[,6]>0,iv.bil.t[,jj]/iv.bil.t[,6],0)}
                                                    ^
NO COPY: R/BWI3_HR.R:1538:56: style: Put spaces around all infix operators.
              {y <- ifelse(iv.bil.t[,6]>0,iv.bil.t[,jj]/iv.bil.t[,6],0)}
                                                      ~^~
NO COPY: R/BWI3_HR.R:1538:57: style: Words within variable and function names should be separated by '_' rather than '.'.
              {y <- ifelse(iv.bil.t[,6]>0,iv.bil.t[,jj]/iv.bil.t[,6],0)}
                                                        ^~~~~~~~
NO COPY: R/BWI3_HR.R:1538:67: style: Commas should always have a space after.
              {y <- ifelse(iv.bil.t[,6]>0,iv.bil.t[,jj]/iv.bil.t[,6],0)}
                                                                  ^
NO COPY: R/BWI3_HR.R:1538:70: style: Commas should always have a space after.
              {y <- ifelse(iv.bil.t[,6]>0,iv.bil.t[,jj]/iv.bil.t[,6],0)}
                                                                     ^
NO COPY: R/BWI3_HR.R:1538:72: style: Closing curly-braces should always be on their own line, unless it's followed by an else.
              {y <- ifelse(iv.bil.t[,6]>0,iv.bil.t[,jj]/iv.bil.t[,6],0)}
                                                                       ^
NO COPY: R/BWI3_HR.R:1539:46: style: Commas should always have a space after.
            R.list <- r.variance.fun(cbind(x,y),nT)
                                             ^
NO COPY: R/BWI3_HR.R:1539:49: style: Commas should always have a space after.
            R.list <- r.variance.fun(cbind(x,y),nT)
                                                ^
NO COPY: R/BWI3_HR.R:1540:13: style: Variable and function names should be all lowercase.
            iVB.bagr.akl.dkl[iii,1,i,j,k] <- R.list$R.xy*ifelse(ii<3,A,1)
            ^~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1540:13: style: Words within variable and function names should be separated by '_' rather than '.'.
            iVB.bagr.akl.dkl[iii,1,i,j,k] <- R.list$R.xy*ifelse(ii<3,A,1)
            ^~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1540:34: style: Commas should always have a space after.
            iVB.bagr.akl.dkl[iii,1,i,j,k] <- R.list$R.xy*ifelse(ii<3,A,1)
                                 ^
NO COPY: R/BWI3_HR.R:1540:36: style: Commas should always have a space after.
            iVB.bagr.akl.dkl[iii,1,i,j,k] <- R.list$R.xy*ifelse(ii<3,A,1)
                                   ^
NO COPY: R/BWI3_HR.R:1540:38: style: Commas should always have a space after.
            iVB.bagr.akl.dkl[iii,1,i,j,k] <- R.list$R.xy*ifelse(ii<3,A,1)
                                     ^
NO COPY: R/BWI3_HR.R:1540:40: style: Commas should always have a space after.
            iVB.bagr.akl.dkl[iii,1,i,j,k] <- R.list$R.xy*ifelse(ii<3,A,1)
                                       ^
NO COPY: R/BWI3_HR.R:1540:57: style: Put spaces around all infix operators.
            iVB.bagr.akl.dkl[iii,1,i,j,k] <- R.list$R.xy*ifelse(ii<3,A,1)
                                                       ~^~
NO COPY: R/BWI3_HR.R:1540:67: style: Put spaces around all infix operators.
            iVB.bagr.akl.dkl[iii,1,i,j,k] <- R.list$R.xy*ifelse(ii<3,A,1)
                                                                 ~^~
NO COPY: R/BWI3_HR.R:1540:70: style: Commas should always have a space after.
            iVB.bagr.akl.dkl[iii,1,i,j,k] <- R.list$R.xy*ifelse(ii<3,A,1)
                                                                     ^
NO COPY: R/BWI3_HR.R:1540:72: style: Commas should always have a space after.
            iVB.bagr.akl.dkl[iii,1,i,j,k] <- R.list$R.xy*ifelse(ii<3,A,1)
                                                                       ^
NO COPY: R/BWI3_HR.R:1541:13: style: Variable and function names should be all lowercase.
            iVB.bagr.akl.dkl[iii,2,i,j,k]<- sqrt(R.list$V.R.xy)*ifelse(ii<3,A,1)
            ^~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1541:13: style: Words within variable and function names should be separated by '_' rather than '.'.
            iVB.bagr.akl.dkl[iii,2,i,j,k]<- sqrt(R.list$V.R.xy)*ifelse(ii<3,A,1)
            ^~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1541:34: style: Commas should always have a space after.
            iVB.bagr.akl.dkl[iii,2,i,j,k]<- sqrt(R.list$V.R.xy)*ifelse(ii<3,A,1)
                                 ^
NO COPY: R/BWI3_HR.R:1541:36: style: Commas should always have a space after.
            iVB.bagr.akl.dkl[iii,2,i,j,k]<- sqrt(R.list$V.R.xy)*ifelse(ii<3,A,1)
                                   ^
NO COPY: R/BWI3_HR.R:1541:38: style: Commas should always have a space after.
            iVB.bagr.akl.dkl[iii,2,i,j,k]<- sqrt(R.list$V.R.xy)*ifelse(ii<3,A,1)
                                     ^
NO COPY: R/BWI3_HR.R:1541:40: style: Commas should always have a space after.
            iVB.bagr.akl.dkl[iii,2,i,j,k]<- sqrt(R.list$V.R.xy)*ifelse(ii<3,A,1)
                                       ^
NO COPY: R/BWI3_HR.R:1541:42: style: Put spaces around all infix operators.
            iVB.bagr.akl.dkl[iii,2,i,j,k]<- sqrt(R.list$V.R.xy)*ifelse(ii<3,A,1)
                                        ~^
NO COPY: R/BWI3_HR.R:1541:57: style: Words within variable and function names should be separated by '_' rather than '.'.
            iVB.bagr.akl.dkl[iii,2,i,j,k]<- sqrt(R.list$V.R.xy)*ifelse(ii<3,A,1)
                                                        ^~~~~~
NO COPY: R/BWI3_HR.R:1541:64: style: Put spaces around all infix operators.
            iVB.bagr.akl.dkl[iii,2,i,j,k]<- sqrt(R.list$V.R.xy)*ifelse(ii<3,A,1)
                                                              ~^~
NO COPY: R/BWI3_HR.R:1541:74: style: Put spaces around all infix operators.
            iVB.bagr.akl.dkl[iii,2,i,j,k]<- sqrt(R.list$V.R.xy)*ifelse(ii<3,A,1)
                                                                        ~^~
NO COPY: R/BWI3_HR.R:1541:77: style: Commas should always have a space after.
            iVB.bagr.akl.dkl[iii,2,i,j,k]<- sqrt(R.list$V.R.xy)*ifelse(ii<3,A,1)
                                                                            ^
NO COPY: R/BWI3_HR.R:1541:79: style: Commas should always have a space after.
            iVB.bagr.akl.dkl[iii,2,i,j,k]<- sqrt(R.list$V.R.xy)*ifelse(ii<3,A,1)
                                                                              ^
NO COPY: R/BWI3_HR.R:1545:1: style: lines should not be more than 80 characters.
          for (jj in 12:15) #Spaltenpositionen der 4 Zielgr\u00f6\u00dfen V.DhmR.A,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1547:11: style: Opening curly braces should never go on their own line and should always be followed by a new line.
          {
          ^
NO COPY: R/BWI3_HR.R:1549:1: style: lines should not be more than 80 characters.
            #Bezugsgr\u00f6\u00dfe x: bei ii = 1 oder 2 (Gesamtwerte): Anzahl Ecken je
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1550:1: style: lines should not be more than 80 characters.
            #Takt (m); bei ii = 3 (Hektar.Bezug) Fallunterscheidung: "Gr\u00f6\u00dfen"
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1553:15: style: Place a space before left parenthesis, except in a function call.
            if(ii < 3) {x <- iv.bil.t[,2]}  else
              ^
NO COPY: R/BWI3_HR.R:1553:24: style: Opening curly braces should never go on their own line and should always be followed by a new line.
            if(ii < 3) {x <- iv.bil.t[,2]}  else
                       ^
NO COPY: R/BWI3_HR.R:1553:30: style: Words within variable and function names should be separated by '_' rather than '.'.
            if(ii < 3) {x <- iv.bil.t[,2]}  else
                             ^~~~~~~~
NO COPY: R/BWI3_HR.R:1553:40: style: Commas should always have a space after.
            if(ii < 3) {x <- iv.bil.t[,2]}  else
                                       ^
NO COPY: R/BWI3_HR.R:1553:42: style: Closing curly-braces should always be on their own line, unless it's followed by an else.
            if(ii < 3) {x <- iv.bil.t[,2]}  else
                                         ^
NO COPY: R/BWI3_HR.R:1554:13: style: Opening curly braces should never go on their own line and should always be followed by a new line.
            {if(jj==13) {x <- iv.bil.t[,5]} else {x <- iv.bil.t[,4]}}
            ^
NO COPY: R/BWI3_HR.R:1554:16: style: Place a space before left parenthesis, except in a function call.
            {if(jj==13) {x <- iv.bil.t[,5]} else {x <- iv.bil.t[,4]}}
               ^
NO COPY: R/BWI3_HR.R:1554:19: style: Put spaces around all infix operators.
            {if(jj==13) {x <- iv.bil.t[,5]} else {x <- iv.bil.t[,4]}}
                 ~^~~
NO COPY: R/BWI3_HR.R:1554:25: style: Opening curly braces should never go on their own line and should always be followed by a new line.
            {if(jj==13) {x <- iv.bil.t[,5]} else {x <- iv.bil.t[,4]}}
                        ^
NO COPY: R/BWI3_HR.R:1554:31: style: Words within variable and function names should be separated by '_' rather than '.'.
            {if(jj==13) {x <- iv.bil.t[,5]} else {x <- iv.bil.t[,4]}}
                              ^~~~~~~~
NO COPY: R/BWI3_HR.R:1554:41: style: Commas should always have a space after.
            {if(jj==13) {x <- iv.bil.t[,5]} else {x <- iv.bil.t[,4]}}
                                        ^
NO COPY: R/BWI3_HR.R:1554:43: style: Closing curly-braces should always be on their own line, unless it's followed by an else.
            {if(jj==13) {x <- iv.bil.t[,5]} else {x <- iv.bil.t[,4]}}
                                          ^
NO COPY: R/BWI3_HR.R:1554:50: style: Opening curly braces should never go on their own line and should always be followed by a new line.
            {if(jj==13) {x <- iv.bil.t[,5]} else {x <- iv.bil.t[,4]}}
                                                 ^
NO COPY: R/BWI3_HR.R:1554:56: style: Words within variable and function names should be separated by '_' rather than '.'.
            {if(jj==13) {x <- iv.bil.t[,5]} else {x <- iv.bil.t[,4]}}
                                                       ^~~~~~~~
NO COPY: R/BWI3_HR.R:1554:66: style: Commas should always have a space after.
            {if(jj==13) {x <- iv.bil.t[,5]} else {x <- iv.bil.t[,4]}}
                                                                 ^
NO COPY: R/BWI3_HR.R:1554:68: style: Closing curly-braces should always be on their own line, unless it's followed by an else.
            {if(jj==13) {x <- iv.bil.t[,5]} else {x <- iv.bil.t[,4]}}
                                                                   ^
NO COPY: R/BWI3_HR.R:1554:69: style: Closing curly-braces should always be on their own line, unless it's followed by an else.
            {if(jj==13) {x <- iv.bil.t[,5]} else {x <- iv.bil.t[,4]}}
                                                                    ^
NO COPY: R/BWI3_HR.R:1555:1: style: lines should not be more than 80 characters.
            #Zielg\u00f6\u00dfe y: ii = 1: Total; ii = 2 oder 3: Zeitbezug mPLkal
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1556:15: style: Place a space before left parenthesis, except in a function call.
            if(ii < 2) {y <- iv.bil.t[,jj]} else
              ^
NO COPY: R/BWI3_HR.R:1556:24: style: Opening curly braces should never go on their own line and should always be followed by a new line.
            if(ii < 2) {y <- iv.bil.t[,jj]} else
                       ^
NO COPY: R/BWI3_HR.R:1556:30: style: Words within variable and function names should be separated by '_' rather than '.'.
            if(ii < 2) {y <- iv.bil.t[,jj]} else
                             ^~~~~~~~
NO COPY: R/BWI3_HR.R:1556:40: style: Commas should always have a space after.
            if(ii < 2) {y <- iv.bil.t[,jj]} else
                                       ^
NO COPY: R/BWI3_HR.R:1556:43: style: Closing curly-braces should always be on their own line, unless it's followed by an else.
            if(ii < 2) {y <- iv.bil.t[,jj]} else
                                          ^
NO COPY: R/BWI3_HR.R:1557:15: style: Opening curly braces should never go on their own line and should always be followed by a new line.
              {y <- ifelse(iv.bil.t[,7]>0,iv.bil.t[,jj]/iv.bil.t[,7],0)}
              ^
NO COPY: R/BWI3_HR.R:1557:28: style: Words within variable and function names should be separated by '_' rather than '.'.
              {y <- ifelse(iv.bil.t[,7]>0,iv.bil.t[,jj]/iv.bil.t[,7],0)}
                           ^~~~~~~~
NO COPY: R/BWI3_HR.R:1557:38: style: Commas should always have a space after.
              {y <- ifelse(iv.bil.t[,7]>0,iv.bil.t[,jj]/iv.bil.t[,7],0)}
                                     ^
NO COPY: R/BWI3_HR.R:1557:40: style: Put spaces around all infix operators.
              {y <- ifelse(iv.bil.t[,7]>0,iv.bil.t[,jj]/iv.bil.t[,7],0)}
                                      ~^~
NO COPY: R/BWI3_HR.R:1557:43: style: Commas should always have a space after.
              {y <- ifelse(iv.bil.t[,7]>0,iv.bil.t[,jj]/iv.bil.t[,7],0)}
                                          ^
NO COPY: R/BWI3_HR.R:1557:43: style: Words within variable and function names should be separated by '_' rather than '.'.
              {y <- ifelse(iv.bil.t[,7]>0,iv.bil.t[,jj]/iv.bil.t[,7],0)}
                                          ^~~~~~~~
NO COPY: R/BWI3_HR.R:1557:53: style: Commas should always have a space after.
              {y <- ifelse(iv.bil.t[,7]>0,iv.bil.t[,jj]/iv.bil.t[,7],0)}
                                                    ^
NO COPY: R/BWI3_HR.R:1557:56: style: Put spaces around all infix operators.
              {y <- ifelse(iv.bil.t[,7]>0,iv.bil.t[,jj]/iv.bil.t[,7],0)}
                                                      ~^~
NO COPY: R/BWI3_HR.R:1557:57: style: Words within variable and function names should be separated by '_' rather than '.'.
              {y <- ifelse(iv.bil.t[,7]>0,iv.bil.t[,jj]/iv.bil.t[,7],0)}
                                                        ^~~~~~~~
NO COPY: R/BWI3_HR.R:1557:67: style: Commas should always have a space after.
              {y <- ifelse(iv.bil.t[,7]>0,iv.bil.t[,jj]/iv.bil.t[,7],0)}
                                                                  ^
NO COPY: R/BWI3_HR.R:1557:70: style: Commas should always have a space after.
              {y <- ifelse(iv.bil.t[,7]>0,iv.bil.t[,jj]/iv.bil.t[,7],0)}
                                                                     ^
NO COPY: R/BWI3_HR.R:1557:72: style: Closing curly-braces should always be on their own line, unless it's followed by an else.
              {y <- ifelse(iv.bil.t[,7]>0,iv.bil.t[,jj]/iv.bil.t[,7],0)}
                                                                       ^
NO COPY: R/BWI3_HR.R:1558:46: style: Commas should always have a space after.
            R.list <- r.variance.fun(cbind(x,y),nT)
                                             ^
NO COPY: R/BWI3_HR.R:1558:49: style: Commas should always have a space after.
            R.list <- r.variance.fun(cbind(x,y),nT)
                                                ^
NO COPY: R/BWI3_HR.R:1559:13: style: Words within variable and function names should be separated by '_' rather than '.'.
            VB.A.bagr.akl.dkl[iiii,1,i,j,k] <- R.list$R.xy*ifelse(ii<3,A,1)
            ^~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1559:36: style: Commas should always have a space after.
            VB.A.bagr.akl.dkl[iiii,1,i,j,k] <- R.list$R.xy*ifelse(ii<3,A,1)
                                   ^
NO COPY: R/BWI3_HR.R:1559:38: style: Commas should always have a space after.
            VB.A.bagr.akl.dkl[iiii,1,i,j,k] <- R.list$R.xy*ifelse(ii<3,A,1)
                                     ^
NO COPY: R/BWI3_HR.R:1559:40: style: Commas should always have a space after.
            VB.A.bagr.akl.dkl[iiii,1,i,j,k] <- R.list$R.xy*ifelse(ii<3,A,1)
                                       ^
NO COPY: R/BWI3_HR.R:1559:42: style: Commas should always have a space after.
            VB.A.bagr.akl.dkl[iiii,1,i,j,k] <- R.list$R.xy*ifelse(ii<3,A,1)
                                         ^
NO COPY: R/BWI3_HR.R:1559:59: style: Put spaces around all infix operators.
            VB.A.bagr.akl.dkl[iiii,1,i,j,k] <- R.list$R.xy*ifelse(ii<3,A,1)
                                                         ~^~
NO COPY: R/BWI3_HR.R:1559:69: style: Put spaces around all infix operators.
            VB.A.bagr.akl.dkl[iiii,1,i,j,k] <- R.list$R.xy*ifelse(ii<3,A,1)
                                                                   ~^~
NO COPY: R/BWI3_HR.R:1559:72: style: Commas should always have a space after.
            VB.A.bagr.akl.dkl[iiii,1,i,j,k] <- R.list$R.xy*ifelse(ii<3,A,1)
                                                                       ^
NO COPY: R/BWI3_HR.R:1559:74: style: Commas should always have a space after.
            VB.A.bagr.akl.dkl[iiii,1,i,j,k] <- R.list$R.xy*ifelse(ii<3,A,1)
                                                                         ^
NO COPY: R/BWI3_HR.R:1560:1: style: lines should not be more than 80 characters.
            VB.A.bagr.akl.dkl[iiii,2,i,j,k] <- sqrt(R.list$V.R.xy)*ifelse(ii<3,A,1)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1560:13: style: Words within variable and function names should be separated by '_' rather than '.'.
            VB.A.bagr.akl.dkl[iiii,2,i,j,k] <- sqrt(R.list$V.R.xy)*ifelse(ii<3,A,1)
            ^~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1560:36: style: Commas should always have a space after.
            VB.A.bagr.akl.dkl[iiii,2,i,j,k] <- sqrt(R.list$V.R.xy)*ifelse(ii<3,A,1)
                                   ^
NO COPY: R/BWI3_HR.R:1560:38: style: Commas should always have a space after.
            VB.A.bagr.akl.dkl[iiii,2,i,j,k] <- sqrt(R.list$V.R.xy)*ifelse(ii<3,A,1)
                                     ^
NO COPY: R/BWI3_HR.R:1560:40: style: Commas should always have a space after.
            VB.A.bagr.akl.dkl[iiii,2,i,j,k] <- sqrt(R.list$V.R.xy)*ifelse(ii<3,A,1)
                                       ^
NO COPY: R/BWI3_HR.R:1560:42: style: Commas should always have a space after.
            VB.A.bagr.akl.dkl[iiii,2,i,j,k] <- sqrt(R.list$V.R.xy)*ifelse(ii<3,A,1)
                                         ^
NO COPY: R/BWI3_HR.R:1560:60: style: Words within variable and function names should be separated by '_' rather than '.'.
            VB.A.bagr.akl.dkl[iiii,2,i,j,k] <- sqrt(R.list$V.R.xy)*ifelse(ii<3,A,1)
                                                           ^~~~~~
NO COPY: R/BWI3_HR.R:1560:67: style: Put spaces around all infix operators.
            VB.A.bagr.akl.dkl[iiii,2,i,j,k] <- sqrt(R.list$V.R.xy)*ifelse(ii<3,A,1)
                                                                 ~^~
NO COPY: R/BWI3_HR.R:1560:77: style: Put spaces around all infix operators.
            VB.A.bagr.akl.dkl[iiii,2,i,j,k] <- sqrt(R.list$V.R.xy)*ifelse(ii<3,A,1)
                                                                           ~^~
NO COPY: R/BWI3_HR.R:1560:80: style: Commas should always have a space after.
            VB.A.bagr.akl.dkl[iiii,2,i,j,k] <- sqrt(R.list$V.R.xy)*ifelse(ii<3,A,1)
                                                                               ^
NO COPY: R/BWI3_HR.R:1560:82: style: Commas should always have a space after.
            VB.A.bagr.akl.dkl[iiii,2,i,j,k] <- sqrt(R.list$V.R.xy)*ifelse(ii<3,A,1)
                                                                                 ^
NO COPY: R/BWI3_HR.R:1564:40: style: Words within variable and function names should be separated by '_' rather than '.'.
        R.list <- r.variance.fun(cbind(iv.bil.t[,2],iv.bil.t[,4]),nT)
                                       ^~~~~~~~
NO COPY: R/BWI3_HR.R:1564:50: style: Commas should always have a space after.
        R.list <- r.variance.fun(cbind(iv.bil.t[,2],iv.bil.t[,4]),nT)
                                                 ^
NO COPY: R/BWI3_HR.R:1564:53: style: Commas should always have a space after.
        R.list <- r.variance.fun(cbind(iv.bil.t[,2],iv.bil.t[,4]),nT)
                                                    ^
NO COPY: R/BWI3_HR.R:1564:53: style: Words within variable and function names should be separated by '_' rather than '.'.
        R.list <- r.variance.fun(cbind(iv.bil.t[,2],iv.bil.t[,4]),nT)
                                                    ^~~~~~~~
NO COPY: R/BWI3_HR.R:1564:63: style: Commas should always have a space after.
        R.list <- r.variance.fun(cbind(iv.bil.t[,2],iv.bil.t[,4]),nT)
                                                              ^
NO COPY: R/BWI3_HR.R:1564:67: style: Commas should always have a space after.
        R.list <- r.variance.fun(cbind(iv.bil.t[,2],iv.bil.t[,4]),nT)
                                                                  ^
NO COPY: R/BWI3_HR.R:1565:9: style: Variable and function names should be all lowercase.
        iVB.bagr.akl.dkl[13,1,i,j,k] <- R.list$R.xy*A
        ^~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1565:9: style: Words within variable and function names should be separated by '_' rather than '.'.
        iVB.bagr.akl.dkl[13,1,i,j,k] <- R.list$R.xy*A
        ^~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1565:29: style: Commas should always have a space after.
        iVB.bagr.akl.dkl[13,1,i,j,k] <- R.list$R.xy*A
                            ^
NO COPY: R/BWI3_HR.R:1565:31: style: Commas should always have a space after.
        iVB.bagr.akl.dkl[13,1,i,j,k] <- R.list$R.xy*A
                              ^
NO COPY: R/BWI3_HR.R:1565:33: style: Commas should always have a space after.
        iVB.bagr.akl.dkl[13,1,i,j,k] <- R.list$R.xy*A
                                ^
NO COPY: R/BWI3_HR.R:1565:35: style: Commas should always have a space after.
        iVB.bagr.akl.dkl[13,1,i,j,k] <- R.list$R.xy*A
                                  ^
NO COPY: R/BWI3_HR.R:1565:52: style: Put spaces around all infix operators.
        iVB.bagr.akl.dkl[13,1,i,j,k] <- R.list$R.xy*A
                                                  ~^~
NO COPY: R/BWI3_HR.R:1566:9: style: Variable and function names should be all lowercase.
        iVB.bagr.akl.dkl[13,2,i,j,k] <- sqrt(R.list$V.R.xy)*A
        ^~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1566:9: style: Words within variable and function names should be separated by '_' rather than '.'.
        iVB.bagr.akl.dkl[13,2,i,j,k] <- sqrt(R.list$V.R.xy)*A
        ^~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1566:29: style: Commas should always have a space after.
        iVB.bagr.akl.dkl[13,2,i,j,k] <- sqrt(R.list$V.R.xy)*A
                            ^
NO COPY: R/BWI3_HR.R:1566:31: style: Commas should always have a space after.
        iVB.bagr.akl.dkl[13,2,i,j,k] <- sqrt(R.list$V.R.xy)*A
                              ^
NO COPY: R/BWI3_HR.R:1566:33: style: Commas should always have a space after.
        iVB.bagr.akl.dkl[13,2,i,j,k] <- sqrt(R.list$V.R.xy)*A
                                ^
NO COPY: R/BWI3_HR.R:1566:35: style: Commas should always have a space after.
        iVB.bagr.akl.dkl[13,2,i,j,k] <- sqrt(R.list$V.R.xy)*A
                                  ^
NO COPY: R/BWI3_HR.R:1566:53: style: Words within variable and function names should be separated by '_' rather than '.'.
        iVB.bagr.akl.dkl[13,2,i,j,k] <- sqrt(R.list$V.R.xy)*A
                                                    ^~~~~~
NO COPY: R/BWI3_HR.R:1566:60: style: Put spaces around all infix operators.
        iVB.bagr.akl.dkl[13,2,i,j,k] <- sqrt(R.list$V.R.xy)*A
                                                          ~^~
NO COPY: R/BWI3_HR.R:1568:40: style: Words within variable and function names should be separated by '_' rather than '.'.
        R.list <- r.variance.fun(cbind(iv.bil.t[,2],iv.bil.t[,5]),nT)
                                       ^~~~~~~~
NO COPY: R/BWI3_HR.R:1568:50: style: Commas should always have a space after.
        R.list <- r.variance.fun(cbind(iv.bil.t[,2],iv.bil.t[,5]),nT)
                                                 ^
NO COPY: R/BWI3_HR.R:1568:53: style: Commas should always have a space after.
        R.list <- r.variance.fun(cbind(iv.bil.t[,2],iv.bil.t[,5]),nT)
                                                    ^
NO COPY: R/BWI3_HR.R:1568:53: style: Words within variable and function names should be separated by '_' rather than '.'.
        R.list <- r.variance.fun(cbind(iv.bil.t[,2],iv.bil.t[,5]),nT)
                                                    ^~~~~~~~
NO COPY: R/BWI3_HR.R:1568:63: style: Commas should always have a space after.
        R.list <- r.variance.fun(cbind(iv.bil.t[,2],iv.bil.t[,5]),nT)
                                                              ^
NO COPY: R/BWI3_HR.R:1568:67: style: Commas should always have a space after.
        R.list <- r.variance.fun(cbind(iv.bil.t[,2],iv.bil.t[,5]),nT)
                                                                  ^
NO COPY: R/BWI3_HR.R:1569:9: style: Variable and function names should be all lowercase.
        iVB.bagr.akl.dkl[14,1,i,j,k] <- R.list$R.xy*A
        ^~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1569:9: style: Words within variable and function names should be separated by '_' rather than '.'.
        iVB.bagr.akl.dkl[14,1,i,j,k] <- R.list$R.xy*A
        ^~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1569:29: style: Commas should always have a space after.
        iVB.bagr.akl.dkl[14,1,i,j,k] <- R.list$R.xy*A
                            ^
NO COPY: R/BWI3_HR.R:1569:31: style: Commas should always have a space after.
        iVB.bagr.akl.dkl[14,1,i,j,k] <- R.list$R.xy*A
                              ^
NO COPY: R/BWI3_HR.R:1569:33: style: Commas should always have a space after.
        iVB.bagr.akl.dkl[14,1,i,j,k] <- R.list$R.xy*A
                                ^
NO COPY: R/BWI3_HR.R:1569:35: style: Commas should always have a space after.
        iVB.bagr.akl.dkl[14,1,i,j,k] <- R.list$R.xy*A
                                  ^
NO COPY: R/BWI3_HR.R:1569:52: style: Put spaces around all infix operators.
        iVB.bagr.akl.dkl[14,1,i,j,k] <- R.list$R.xy*A
                                                  ~^~
NO COPY: R/BWI3_HR.R:1570:9: style: Variable and function names should be all lowercase.
        iVB.bagr.akl.dkl[14,2,i,j,k] <- sqrt(R.list$V.R.xy)*A
        ^~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1570:9: style: Words within variable and function names should be separated by '_' rather than '.'.
        iVB.bagr.akl.dkl[14,2,i,j,k] <- sqrt(R.list$V.R.xy)*A
        ^~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1570:29: style: Commas should always have a space after.
        iVB.bagr.akl.dkl[14,2,i,j,k] <- sqrt(R.list$V.R.xy)*A
                            ^
NO COPY: R/BWI3_HR.R:1570:31: style: Commas should always have a space after.
        iVB.bagr.akl.dkl[14,2,i,j,k] <- sqrt(R.list$V.R.xy)*A
                              ^
NO COPY: R/BWI3_HR.R:1570:33: style: Commas should always have a space after.
        iVB.bagr.akl.dkl[14,2,i,j,k] <- sqrt(R.list$V.R.xy)*A
                                ^
NO COPY: R/BWI3_HR.R:1570:35: style: Commas should always have a space after.
        iVB.bagr.akl.dkl[14,2,i,j,k] <- sqrt(R.list$V.R.xy)*A
                                  ^
NO COPY: R/BWI3_HR.R:1570:53: style: Words within variable and function names should be separated by '_' rather than '.'.
        iVB.bagr.akl.dkl[14,2,i,j,k] <- sqrt(R.list$V.R.xy)*A
                                                    ^~~~~~
NO COPY: R/BWI3_HR.R:1570:60: style: Put spaces around all infix operators.
        iVB.bagr.akl.dkl[14,2,i,j,k] <- sqrt(R.list$V.R.xy)*A
                                                          ~^~
NO COPY: R/BWI3_HR.R:1575:21: style: Words within variable and function names should be separated by '_' rather than '.'.
        x <- ifelse(iv.bil.t[,6]>0,iv.bil.t[,3],0)
                    ^~~~~~~~
NO COPY: R/BWI3_HR.R:1575:31: style: Commas should always have a space after.
        x <- ifelse(iv.bil.t[,6]>0,iv.bil.t[,3],0)
                              ^
NO COPY: R/BWI3_HR.R:1575:33: style: Put spaces around all infix operators.
        x <- ifelse(iv.bil.t[,6]>0,iv.bil.t[,3],0)
                               ~^~
NO COPY: R/BWI3_HR.R:1575:36: style: Commas should always have a space after.
        x <- ifelse(iv.bil.t[,6]>0,iv.bil.t[,3],0)
                                   ^
NO COPY: R/BWI3_HR.R:1575:36: style: Words within variable and function names should be separated by '_' rather than '.'.
        x <- ifelse(iv.bil.t[,6]>0,iv.bil.t[,3],0)
                                   ^~~~~~~~
NO COPY: R/BWI3_HR.R:1575:46: style: Commas should always have a space after.
        x <- ifelse(iv.bil.t[,6]>0,iv.bil.t[,3],0)
                                             ^
NO COPY: R/BWI3_HR.R:1575:49: style: Commas should always have a space after.
        x <- ifelse(iv.bil.t[,6]>0,iv.bil.t[,3],0)
                                                ^
NO COPY: R/BWI3_HR.R:1576:42: style: Commas should always have a space after.
        R.list <- r.variance.fun(cbind(x,iv.bil.t[,3]*iv.bil.t[,6]),nT)
                                         ^
NO COPY: R/BWI3_HR.R:1576:42: style: Words within variable and function names should be separated by '_' rather than '.'.
        R.list <- r.variance.fun(cbind(x,iv.bil.t[,3]*iv.bil.t[,6]),nT)
                                         ^~~~~~~~
NO COPY: R/BWI3_HR.R:1576:52: style: Commas should always have a space after.
        R.list <- r.variance.fun(cbind(x,iv.bil.t[,3]*iv.bil.t[,6]),nT)
                                                   ^
NO COPY: R/BWI3_HR.R:1576:54: style: Put spaces around all infix operators.
        R.list <- r.variance.fun(cbind(x,iv.bil.t[,3]*iv.bil.t[,6]),nT)
                                                    ~^~
NO COPY: R/BWI3_HR.R:1576:55: style: Words within variable and function names should be separated by '_' rather than '.'.
        R.list <- r.variance.fun(cbind(x,iv.bil.t[,3]*iv.bil.t[,6]),nT)
                                                      ^~~~~~~~
NO COPY: R/BWI3_HR.R:1576:65: style: Commas should always have a space after.
        R.list <- r.variance.fun(cbind(x,iv.bil.t[,3]*iv.bil.t[,6]),nT)
                                                                ^
NO COPY: R/BWI3_HR.R:1576:69: style: Commas should always have a space after.
        R.list <- r.variance.fun(cbind(x,iv.bil.t[,3]*iv.bil.t[,6]),nT)
                                                                    ^
NO COPY: R/BWI3_HR.R:1577:9: style: Variable and function names should be all lowercase.
        iVB.bagr.akl.dkl[15,1,i,j,k] <- R.list$R.xy
        ^~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1577:9: style: Words within variable and function names should be separated by '_' rather than '.'.
        iVB.bagr.akl.dkl[15,1,i,j,k] <- R.list$R.xy
        ^~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1577:29: style: Commas should always have a space after.
        iVB.bagr.akl.dkl[15,1,i,j,k] <- R.list$R.xy
                            ^
NO COPY: R/BWI3_HR.R:1577:31: style: Commas should always have a space after.
        iVB.bagr.akl.dkl[15,1,i,j,k] <- R.list$R.xy
                              ^
NO COPY: R/BWI3_HR.R:1577:33: style: Commas should always have a space after.
        iVB.bagr.akl.dkl[15,1,i,j,k] <- R.list$R.xy
                                ^
NO COPY: R/BWI3_HR.R:1577:35: style: Commas should always have a space after.
        iVB.bagr.akl.dkl[15,1,i,j,k] <- R.list$R.xy
                                  ^
NO COPY: R/BWI3_HR.R:1578:9: style: Variable and function names should be all lowercase.
        iVB.bagr.akl.dkl[15,2,i,j,k] <- sqrt(R.list$V.R.xy)
        ^~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1578:9: style: Words within variable and function names should be separated by '_' rather than '.'.
        iVB.bagr.akl.dkl[15,2,i,j,k] <- sqrt(R.list$V.R.xy)
        ^~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1578:29: style: Commas should always have a space after.
        iVB.bagr.akl.dkl[15,2,i,j,k] <- sqrt(R.list$V.R.xy)
                            ^
NO COPY: R/BWI3_HR.R:1578:31: style: Commas should always have a space after.
        iVB.bagr.akl.dkl[15,2,i,j,k] <- sqrt(R.list$V.R.xy)
                              ^
NO COPY: R/BWI3_HR.R:1578:33: style: Commas should always have a space after.
        iVB.bagr.akl.dkl[15,2,i,j,k] <- sqrt(R.list$V.R.xy)
                                ^
NO COPY: R/BWI3_HR.R:1578:35: style: Commas should always have a space after.
        iVB.bagr.akl.dkl[15,2,i,j,k] <- sqrt(R.list$V.R.xy)
                                  ^
NO COPY: R/BWI3_HR.R:1578:53: style: Words within variable and function names should be separated by '_' rather than '.'.
        iVB.bagr.akl.dkl[15,2,i,j,k] <- sqrt(R.list$V.R.xy)
                                                    ^~~~~~
NO COPY: R/BWI3_HR.R:1581:21: style: Words within variable and function names should be separated by '_' rather than '.'.
        x <- ifelse(iv.bil.t[,7]>0,iv.bil.t[,3],0)
                    ^~~~~~~~
NO COPY: R/BWI3_HR.R:1581:31: style: Commas should always have a space after.
        x <- ifelse(iv.bil.t[,7]>0,iv.bil.t[,3],0)
                              ^
NO COPY: R/BWI3_HR.R:1581:33: style: Put spaces around all infix operators.
        x <- ifelse(iv.bil.t[,7]>0,iv.bil.t[,3],0)
                               ~^~
NO COPY: R/BWI3_HR.R:1581:36: style: Commas should always have a space after.
        x <- ifelse(iv.bil.t[,7]>0,iv.bil.t[,3],0)
                                   ^
NO COPY: R/BWI3_HR.R:1581:36: style: Words within variable and function names should be separated by '_' rather than '.'.
        x <- ifelse(iv.bil.t[,7]>0,iv.bil.t[,3],0)
                                   ^~~~~~~~
NO COPY: R/BWI3_HR.R:1581:46: style: Commas should always have a space after.
        x <- ifelse(iv.bil.t[,7]>0,iv.bil.t[,3],0)
                                             ^
NO COPY: R/BWI3_HR.R:1581:49: style: Commas should always have a space after.
        x <- ifelse(iv.bil.t[,7]>0,iv.bil.t[,3],0)
                                                ^
NO COPY: R/BWI3_HR.R:1582:42: style: Commas should always have a space after.
        R.list <- r.variance.fun(cbind(x,iv.bil.t[,3]*iv.bil.t[,7]),nT)
                                         ^
NO COPY: R/BWI3_HR.R:1582:42: style: Words within variable and function names should be separated by '_' rather than '.'.
        R.list <- r.variance.fun(cbind(x,iv.bil.t[,3]*iv.bil.t[,7]),nT)
                                         ^~~~~~~~
NO COPY: R/BWI3_HR.R:1582:52: style: Commas should always have a space after.
        R.list <- r.variance.fun(cbind(x,iv.bil.t[,3]*iv.bil.t[,7]),nT)
                                                   ^
NO COPY: R/BWI3_HR.R:1582:54: style: Put spaces around all infix operators.
        R.list <- r.variance.fun(cbind(x,iv.bil.t[,3]*iv.bil.t[,7]),nT)
                                                    ~^~
NO COPY: R/BWI3_HR.R:1582:55: style: Words within variable and function names should be separated by '_' rather than '.'.
        R.list <- r.variance.fun(cbind(x,iv.bil.t[,3]*iv.bil.t[,7]),nT)
                                                      ^~~~~~~~
NO COPY: R/BWI3_HR.R:1582:65: style: Commas should always have a space after.
        R.list <- r.variance.fun(cbind(x,iv.bil.t[,3]*iv.bil.t[,7]),nT)
                                                                ^
NO COPY: R/BWI3_HR.R:1582:69: style: Commas should always have a space after.
        R.list <- r.variance.fun(cbind(x,iv.bil.t[,3]*iv.bil.t[,7]),nT)
                                                                    ^
NO COPY: R/BWI3_HR.R:1583:9: style: Words within variable and function names should be separated by '_' rather than '.'.
        VB.A.bagr.akl.dkl[13,1,i,j,k] <- R.list$R.xy
        ^~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1583:30: style: Commas should always have a space after.
        VB.A.bagr.akl.dkl[13,1,i,j,k] <- R.list$R.xy
                             ^
NO COPY: R/BWI3_HR.R:1583:32: style: Commas should always have a space after.
        VB.A.bagr.akl.dkl[13,1,i,j,k] <- R.list$R.xy
                               ^
NO COPY: R/BWI3_HR.R:1583:34: style: Commas should always have a space after.
        VB.A.bagr.akl.dkl[13,1,i,j,k] <- R.list$R.xy
                                 ^
NO COPY: R/BWI3_HR.R:1583:36: style: Commas should always have a space after.
        VB.A.bagr.akl.dkl[13,1,i,j,k] <- R.list$R.xy
                                   ^
NO COPY: R/BWI3_HR.R:1584:9: style: Words within variable and function names should be separated by '_' rather than '.'.
        VB.A.bagr.akl.dkl[13,2,i,j,k] <- sqrt(R.list$V.R.xy)
        ^~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1584:30: style: Commas should always have a space after.
        VB.A.bagr.akl.dkl[13,2,i,j,k] <- sqrt(R.list$V.R.xy)
                             ^
NO COPY: R/BWI3_HR.R:1584:32: style: Commas should always have a space after.
        VB.A.bagr.akl.dkl[13,2,i,j,k] <- sqrt(R.list$V.R.xy)
                               ^
NO COPY: R/BWI3_HR.R:1584:34: style: Commas should always have a space after.
        VB.A.bagr.akl.dkl[13,2,i,j,k] <- sqrt(R.list$V.R.xy)
                                 ^
NO COPY: R/BWI3_HR.R:1584:36: style: Commas should always have a space after.
        VB.A.bagr.akl.dkl[13,2,i,j,k] <- sqrt(R.list$V.R.xy)
                                   ^
NO COPY: R/BWI3_HR.R:1584:54: style: Words within variable and function names should be separated by '_' rather than '.'.
        VB.A.bagr.akl.dkl[13,2,i,j,k] <- sqrt(R.list$V.R.xy)
                                                     ^~~~~~
NO COPY: R/BWI3_HR.R:1590:4: style: Commented code should be removed.
  #AKL-Labels
   ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:1591:34: style: Commas should always have a space after.
  akl.lab <- akl.lab.fun(A.klass,A.k)
                                 ^
NO COPY: R/BWI3_HR.R:1593:4: style: Commented code should be removed.
  #DKL-Labels
   ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:1594:34: style: Commas should always have a space after.
  dkl.lab <- dkl.lab.fun(D.klass,D.k) #k\u00e4/16.07.14
                                 ^
NO COPY: R/BWI3_HR.R:1595:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: R/BWI3_HR.R:1597:20: style: Commas should always have a space after.
  a <- regexpr("/",baeume.3$Bemerk[baeume.3$STP==0][1],fixed=T)
                   ^
NO COPY: R/BWI3_HR.R:1597:48: style: Put spaces around all infix operators.
  a <- regexpr("/",baeume.3$Bemerk[baeume.3$STP==0][1],fixed=T)
                                              ~^~~
NO COPY: R/BWI3_HR.R:1597:56: style: Commas should always have a space after.
  a <- regexpr("/",baeume.3$Bemerk[baeume.3$STP==0][1],fixed=T)
                                                       ^
NO COPY: R/BWI3_HR.R:1597:61: style: Put spaces around all infix operators.
  a <- regexpr("/",baeume.3$Bemerk[baeume.3$STP==0][1],fixed=T)
                                                           ~^~
NO COPY: R/BWI3_HR.R:1598:55: style: Put spaces around all infix operators.
  b <- nchar(as.character(baeume.3$Bemerk[baeume.3$STP==0][1]))
                                                     ~^~~
NO COPY: R/BWI3_HR.R:1599:1: style: lines should not be more than 80 characters.
  version.baeume.b  <- substr(as.character(baeume.3$Bemerk[baeume.3$STP==0][1]),a,b)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1599:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  version.baeume.b  <- substr(as.character(baeume.3$Bemerk[baeume.3$STP==0][1]),a,b)
  ^~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1599:3: warning: local variable 'version.baeume.b' assigned but may not be used
  version.baeume.b  <- substr(as.character(baeume.3$Bemerk[baeume.3$STP==0][1]),a,b)
  ^~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1599:72: style: Put spaces around all infix operators.
  version.baeume.b  <- substr(as.character(baeume.3$Bemerk[baeume.3$STP==0][1]),a,b)
                                                                      ~^~~
NO COPY: R/BWI3_HR.R:1599:81: style: Commas should always have a space after.
  version.baeume.b  <- substr(as.character(baeume.3$Bemerk[baeume.3$STP==0][1]),a,b)
                                                                                ^
NO COPY: R/BWI3_HR.R:1599:83: style: Commas should always have a space after.
  version.baeume.b  <- substr(as.character(baeume.3$Bemerk[baeume.3$STP==0][1]),a,b)
                                                                                  ^
NO COPY: R/BWI3_HR.R:1600:20: style: Put spaces around all infix operators.
  Log <- list(Datum=Sys.time(),
                  ~^~
NO COPY: R/BWI3_HR.R:1601:1: style: lines should not be more than 80 characters.
      Version.baeume.b=substr(as.character(baeume.3$Bemerk[baeume.3$STP==0][1]),a,b))
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1601:23: style: Put spaces around all infix operators.
      Version.baeume.b=substr(as.character(baeume.3$Bemerk[baeume.3$STP==0][1]),a,b))
                     ~^~
NO COPY: R/BWI3_HR.R:1601:72: style: Put spaces around all infix operators.
      Version.baeume.b=substr(as.character(baeume.3$Bemerk[baeume.3$STP==0][1]),a,b))
                                                                      ~^~~
NO COPY: R/BWI3_HR.R:1601:81: style: Commas should always have a space after.
      Version.baeume.b=substr(as.character(baeume.3$Bemerk[baeume.3$STP==0][1]),a,b))
                                                                                ^
NO COPY: R/BWI3_HR.R:1601:83: style: Commas should always have a space after.
      Version.baeume.b=substr(as.character(baeume.3$Bemerk[baeume.3$STP==0][1]),a,b))
                                                                                  ^
NO COPY: R/BWI3_HR.R:1603:18: style: Put spaces around all infix operators.
  return(list(Log=Log, Stratum=auswahl,
                ~^~
NO COPY: R/BWI3_HR.R:1603:31: style: Put spaces around all infix operators.
  return(list(Log=Log, Stratum=auswahl,
                             ~^~
NO COPY: R/BWI3_HR.R:1604:18: style: Put spaces around all infix operators.
              HBF=HBF, se_HBF=se.HBF,
                ~^~
NO COPY: R/BWI3_HR.R:1604:30: style: Put spaces around all infix operators.
              HBF=HBF, se_HBF=se.HBF,
                            ~^~
NO COPY: R/BWI3_HR.R:1605:24: style: Put spaces around all infix operators.
              Attribute=c("V_DhmR", "V_DhmR_HB", "V_EoR", "oiB",
                      ~^~
NO COPY: R/BWI3_HR.R:1607:1: style: lines should not be more than 80 characters.
                        "V_DhmR/ha/J", "V_DhmR_HB/ha/J", "V_EoR/ha/J", "oiB/ha/J",
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1608:36: style: Commas should always have a space after.
                        "mBAF_mLK","mBAFoLK","mPL","nT"),
                                   ^
NO COPY: R/BWI3_HR.R:1608:46: style: Commas should always have a space after.
                        "mBAF_mLK","mBAFoLK","mPL","nT"),
                                             ^
NO COPY: R/BWI3_HR.R:1608:52: style: Commas should always have a space after.
                        "mBAF_mLK","mBAFoLK","mPL","nT"),
                                                   ^
NO COPY: R/BWI3_HR.R:1609:33: style: Put spaces around all infix operators.
              "Gr\u00f6\u00dfen"=c("Wert","Standardfehler"),
                               ~^~
NO COPY: R/BWI3_HR.R:1609:43: style: Commas should always have a space after.
              "Gr\u00f6\u00dfen"=c("Wert","Standardfehler"),
                                          ^
NO COPY: R/BWI3_HR.R:1612:34: style: Variable and function names should be all lowercase.
              iVB.bagr.akl.dkl = iVB.bagr.akl.dkl,
                                 ^~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1612:34: style: Words within variable and function names should be separated by '_' rather than '.'.
              iVB.bagr.akl.dkl = iVB.bagr.akl.dkl,
                                 ^~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1613:35: style: Words within variable and function names should be separated by '_' rather than '.'.
              VB.A.bagr.akl.dkl = VB.A.bagr.akl.dkl))
                                  ^~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1675:64: style: Commas should always have a space after.
iVB.ew.bagrupp.akl.dkl.stratum.fun.bwi12 <- function(baeume.23,baeume.3,
                                                               ^
NO COPY: R/BWI3_HR.R:1676:20: style: Commas should always have a space after.
          BA.grupp,A.klass,D.klass,auswahl,A,
                   ^
NO COPY: R/BWI3_HR.R:1676:28: style: Commas should always have a space after.
          BA.grupp,A.klass,D.klass,auswahl,A,
                           ^
NO COPY: R/BWI3_HR.R:1676:36: style: Commas should always have a space after.
          BA.grupp,A.klass,D.klass,auswahl,A,
                                   ^
NO COPY: R/BWI3_HR.R:1676:44: style: Commas should always have a space after.
          BA.grupp,A.klass,D.klass,auswahl,A,
                                           ^
NO COPY: R/BWI3_HR.R:1681:19: style: Use <-, not =, for assignment.
  auswahl$Begehbar=1; auswahl$Wa=c(1:3)
                  ^
NO COPY: R/BWI3_HR.R:1681:19: style: Put spaces around all infix operators.
  auswahl$Begehbar=1; auswahl$Wa=c(1:3)
                 ~^~
NO COPY: R/BWI3_HR.R:1681:33: style: Use <-, not =, for assignment.
  auswahl$Begehbar=1; auswahl$Wa=c(1:3)
                                ^
NO COPY: R/BWI3_HR.R:1681:33: style: Put spaces around all infix operators.
  auswahl$Begehbar=1; auswahl$Wa=c(1:3)
                               ~^~
NO COPY: R/BWI3_HR.R:1683:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  ecken.2.s <- stratum.fun(auswahl,ecken.1)
  ^~~~~~~~~
NO COPY: R/BWI3_HR.R:1683:36: style: Commas should always have a space after.
  ecken.2.s <- stratum.fun(auswahl,ecken.1)
                                   ^
NO COPY: R/BWI3_HR.R:1685:13: style: Use <-, not =, for assignment.
  auswahl$Wa=c(1:3)
            ^
NO COPY: R/BWI3_HR.R:1685:13: style: Put spaces around all infix operators.
  auswahl$Wa=c(1:3)
           ~^~
NO COPY: R/BWI3_HR.R:1686:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  ecken.3.s <- stratum.fun(auswahl,ecken.2)
  ^~~~~~~~~
NO COPY: R/BWI3_HR.R:1686:36: style: Commas should always have a space after.
  ecken.3.s <- stratum.fun(auswahl,ecken.2)
                                   ^
NO COPY: R/BWI3_HR.R:1688:4: style: Commented code should be removed.
  #A <- 3575148 #ha
   ^~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1691:24: style: Commas should always have a space after.
  nT <- length(trakte[,1])
                       ^
NO COPY: R/BWI3_HR.R:1695:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  ecken.23.hb <- merge(
  ^~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1696:7: style: Words within variable and function names should be separated by '_' rather than '.'.
      ecken.3.s[TRUE,  c("TNr", "ENr")],
      ^~~~~~~~~
NO COPY: R/BWI3_HR.R:1697:7: style: Words within variable and function names should be separated by '_' rather than '.'.
      ecken.2.s[TRUE, c("TNr", "ENr")],
      ^~~~~~~~~
NO COPY: R/BWI3_HR.R:1698:9: style: Put spaces around all infix operators.
      by=c("TNr","ENr"))
       ~^~
NO COPY: R/BWI3_HR.R:1698:18: style: Commas should always have a space after.
      by=c("TNr","ENr"))
                 ^
NO COPY: R/BWI3_HR.R:1700:1: style: lines should not be more than 80 characters.
  ecken.23.hb <- merge(ecken.23.hb,ecken.2[TRUE, c("TNr", "ENr", "PL", "PLkal")],
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1700:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  ecken.23.hb <- merge(ecken.23.hb,ecken.2[TRUE, c("TNr", "ENr", "PL", "PLkal")],
  ^~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1700:24: style: Words within variable and function names should be separated by '_' rather than '.'.
  ecken.23.hb <- merge(ecken.23.hb,ecken.2[TRUE, c("TNr", "ENr", "PL", "PLkal")],
                       ^~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1700:36: style: Commas should always have a space after.
  ecken.23.hb <- merge(ecken.23.hb,ecken.2[TRUE, c("TNr", "ENr", "PL", "PLkal")],
                                   ^
NO COPY: R/BWI3_HR.R:1701:9: style: Put spaces around all infix operators.
      by=c("TNr","ENr"))
       ~^~
NO COPY: R/BWI3_HR.R:1701:18: style: Commas should always have a space after.
      by=c("TNr","ENr"))
                 ^
NO COPY: R/BWI3_HR.R:1710:1: style: lines should not be more than 80 characters.
  #Aus Komaptibilit\u00e4tsgr\u00fcnden wird Attribut-Name "bagr" auf "BaGr" ge\u00e4ndert
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1715:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  baeume.3.s <- merge(baeume.3[TRUE, c("TNr", "ENr", "STP", "BNr", "Entf", "Pk",
  ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:1716:77: style: Trailing whitespace is superfluous.
                                       "BA", "Alt1", "Alt2", "BHD1", "BHD2", 
                                                                            ^
NO COPY: R/BWI3_HR.R:1717:76: style: Trailing whitespace is superfluous.
                                       "D031", "D032", "H1", "H2", "VolV1", 
                                                                           ^
NO COPY: R/BWI3_HR.R:1718:1: style: lines should not be more than 80 characters.
                                       "VolV2", "VolE1", "VolE2", "oiB1", "oiB2", 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1718:82: style: Trailing whitespace is superfluous.
                                       "VolV2", "VolE1", "VolE2", "oiB1", "oiB2", 
                                                                                 ^
NO COPY: R/BWI3_HR.R:1721:51: style: Commas should always have a space after.
                      by.x = "BA", by.y = "ICode",all.x = TRUE)
                                                  ^
NO COPY: R/BWI3_HR.R:1723:1: style: lines should not be more than 80 characters.
  baeume.2.s <- merge(baeume.23[TRUE, c("TNr", "ENr", "STP", "BNr", "Entf", "Pk",
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1723:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  baeume.2.s <- merge(baeume.23[TRUE, c("TNr", "ENr", "STP", "BNr", "Entf", "Pk",
  ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:1724:78: style: Trailing whitespace is superfluous.
                                        "BA", "Alt1", "Alt2", "BHD1", "BHD2", 
                                                                             ^
NO COPY: R/BWI3_HR.R:1725:77: style: Trailing whitespace is superfluous.
                                        "D031", "D032", "H1", "H2", "VolV1", 
                                                                            ^
NO COPY: R/BWI3_HR.R:1726:75: style: Trailing whitespace is superfluous.
                                        "VolV2", "VolE1", "VolE2", "oiB1", 
                                                                          ^
NO COPY: R/BWI3_HR.R:1732:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  baeume.3.s <- merge(baeume.3.s,ecken.23.hb,by=c("TNr","ENr"))
  ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:1732:23: style: Words within variable and function names should be separated by '_' rather than '.'.
  baeume.3.s <- merge(baeume.3.s,ecken.23.hb,by=c("TNr","ENr"))
                      ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:1732:34: style: Commas should always have a space after.
  baeume.3.s <- merge(baeume.3.s,ecken.23.hb,by=c("TNr","ENr"))
                                 ^
NO COPY: R/BWI3_HR.R:1732:34: style: Words within variable and function names should be separated by '_' rather than '.'.
  baeume.3.s <- merge(baeume.3.s,ecken.23.hb,by=c("TNr","ENr"))
                                 ^~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1732:46: style: Commas should always have a space after.
  baeume.3.s <- merge(baeume.3.s,ecken.23.hb,by=c("TNr","ENr"))
                                             ^
NO COPY: R/BWI3_HR.R:1732:48: style: Put spaces around all infix operators.
  baeume.3.s <- merge(baeume.3.s,ecken.23.hb,by=c("TNr","ENr"))
                                              ~^~
NO COPY: R/BWI3_HR.R:1732:57: style: Commas should always have a space after.
  baeume.3.s <- merge(baeume.3.s,ecken.23.hb,by=c("TNr","ENr"))
                                                        ^
NO COPY: R/BWI3_HR.R:1733:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  baeume.2.s <- merge(baeume.2.s,ecken.23.hb,by=c("TNr","ENr"))
  ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:1733:23: style: Words within variable and function names should be separated by '_' rather than '.'.
  baeume.2.s <- merge(baeume.2.s,ecken.23.hb,by=c("TNr","ENr"))
                      ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:1733:34: style: Commas should always have a space after.
  baeume.2.s <- merge(baeume.2.s,ecken.23.hb,by=c("TNr","ENr"))
                                 ^
NO COPY: R/BWI3_HR.R:1733:34: style: Words within variable and function names should be separated by '_' rather than '.'.
  baeume.2.s <- merge(baeume.2.s,ecken.23.hb,by=c("TNr","ENr"))
                                 ^~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1733:46: style: Commas should always have a space after.
  baeume.2.s <- merge(baeume.2.s,ecken.23.hb,by=c("TNr","ENr"))
                                             ^
NO COPY: R/BWI3_HR.R:1733:48: style: Put spaces around all infix operators.
  baeume.2.s <- merge(baeume.2.s,ecken.23.hb,by=c("TNr","ENr"))
                                              ~^~
NO COPY: R/BWI3_HR.R:1733:57: style: Commas should always have a space after.
  baeume.2.s <- merge(baeume.2.s,ecken.23.hb,by=c("TNr","ENr"))
                                                        ^
NO COPY: R/BWI3_HR.R:1736:7: style: Words within variable and function names should be separated by '_' rather than '.'.
  sum(baeume.3.s$StFl2)/10000; sum(baeume.2.s$StFl1)/10000
      ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:1736:18: style: Variable and function names should be all lowercase.
  sum(baeume.3.s$StFl2)/10000; sum(baeume.2.s$StFl1)/10000
                 ^~~~~
NO COPY: R/BWI3_HR.R:1736:24: style: Put spaces around all infix operators.
  sum(baeume.3.s$StFl2)/10000; sum(baeume.2.s$StFl1)/10000
                      ~^~
NO COPY: R/BWI3_HR.R:1736:36: style: Words within variable and function names should be separated by '_' rather than '.'.
  sum(baeume.3.s$StFl2)/10000; sum(baeume.2.s$StFl1)/10000
                                   ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:1736:47: style: Variable and function names should be all lowercase.
  sum(baeume.3.s$StFl2)/10000; sum(baeume.2.s$StFl1)/10000
                                              ^~~~~
NO COPY: R/BWI3_HR.R:1736:53: style: Put spaces around all infix operators.
  sum(baeume.3.s$StFl2)/10000; sum(baeume.2.s$StFl1)/10000
                                                   ~^~
NO COPY: R/BWI3_HR.R:1740:29: style: Words within variable and function names should be separated by '_' rather than '.'.
  hb.te <- stats::aggregate(baeume.3.s$StFl2/10000,
                            ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:1740:40: style: Variable and function names should be all lowercase.
  hb.te <- stats::aggregate(baeume.3.s$StFl2/10000,
                                       ^~~~~
NO COPY: R/BWI3_HR.R:1740:45: style: Put spaces around all infix operators.
  hb.te <- stats::aggregate(baeume.3.s$StFl2/10000,
                                           ~^~
NO COPY: R/BWI3_HR.R:1741:27: style: Put spaces around all infix operators.
                        by=list(baeume.3.s$TNr,baeume.3.s$ENr),sum)
                         ~^~
NO COPY: R/BWI3_HR.R:1741:33: style: Words within variable and function names should be separated by '_' rather than '.'.
                        by=list(baeume.3.s$TNr,baeume.3.s$ENr),sum)
                                ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:1741:48: style: Commas should always have a space after.
                        by=list(baeume.3.s$TNr,baeume.3.s$ENr),sum)
                                               ^
NO COPY: R/BWI3_HR.R:1741:48: style: Words within variable and function names should be separated by '_' rather than '.'.
                        by=list(baeume.3.s$TNr,baeume.3.s$ENr),sum)
                                               ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:1741:64: style: Commas should always have a space after.
                        by=list(baeume.3.s$TNr,baeume.3.s$ENr),sum)
                                                               ^
NO COPY: R/BWI3_HR.R:1742:27: style: Commas should always have a space after.
  names(hb.te) <- c("TNr","ENr","m_HB_s")
                          ^
NO COPY: R/BWI3_HR.R:1742:33: style: Commas should always have a space after.
  names(hb.te) <- c("TNr","ENr","m_HB_s")
                                ^
NO COPY: R/BWI3_HR.R:1743:24: style: Commas should always have a space after.
  ecken <- merge(hb.te,ecken.23.hb[TRUE, c("TNr", "ENr", "PL", "PLkal")],
                       ^
NO COPY: R/BWI3_HR.R:1743:24: style: Words within variable and function names should be separated by '_' rather than '.'.
  ecken <- merge(hb.te,ecken.23.hb[TRUE, c("TNr", "ENr", "PL", "PLkal")],
                       ^~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1744:23: style: Put spaces around all infix operators.
                    by=c("TNr","ENr") )
                     ~^~
NO COPY: R/BWI3_HR.R:1744:32: style: Commas should always have a space after.
                    by=c("TNr","ENr") )
                               ^
NO COPY: R/BWI3_HR.R:1746:28: style: Words within variable and function names should be separated by '_' rather than '.'.
  hb.t <- stats::aggregate(baeume.3.s$StFl2/10000,by=list(baeume.3.s$TNr),sum)
                           ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:1746:39: style: Variable and function names should be all lowercase.
  hb.t <- stats::aggregate(baeume.3.s$StFl2/10000,by=list(baeume.3.s$TNr),sum)
                                      ^~~~~
NO COPY: R/BWI3_HR.R:1746:44: style: Put spaces around all infix operators.
  hb.t <- stats::aggregate(baeume.3.s$StFl2/10000,by=list(baeume.3.s$TNr),sum)
                                          ~^~
NO COPY: R/BWI3_HR.R:1746:51: style: Commas should always have a space after.
  hb.t <- stats::aggregate(baeume.3.s$StFl2/10000,by=list(baeume.3.s$TNr),sum)
                                                  ^
NO COPY: R/BWI3_HR.R:1746:53: style: Put spaces around all infix operators.
  hb.t <- stats::aggregate(baeume.3.s$StFl2/10000,by=list(baeume.3.s$TNr),sum)
                                                   ~^~
NO COPY: R/BWI3_HR.R:1746:59: style: Words within variable and function names should be separated by '_' rather than '.'.
  hb.t <- stats::aggregate(baeume.3.s$StFl2/10000,by=list(baeume.3.s$TNr),sum)
                                                          ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:1746:75: style: Commas should always have a space after.
  hb.t <- stats::aggregate(baeume.3.s$StFl2/10000,by=list(baeume.3.s$TNr),sum)
                                                                          ^
NO COPY: R/BWI3_HR.R:1747:26: style: Commas should always have a space after.
  names(hb.t) <- c("TNr","m_HB_s")
                         ^
NO COPY: R/BWI3_HR.R:1748:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  hb.t.s <- merge(trakte,hb.t,by=c("TNr"),all.x=T)
  ^~~~~~
NO COPY: R/BWI3_HR.R:1748:26: style: Commas should always have a space after.
  hb.t.s <- merge(trakte,hb.t,by=c("TNr"),all.x=T)
                         ^
NO COPY: R/BWI3_HR.R:1748:31: style: Commas should always have a space after.
  hb.t.s <- merge(trakte,hb.t,by=c("TNr"),all.x=T)
                              ^
NO COPY: R/BWI3_HR.R:1748:33: style: Put spaces around all infix operators.
  hb.t.s <- merge(trakte,hb.t,by=c("TNr"),all.x=T)
                               ~^~
NO COPY: R/BWI3_HR.R:1748:43: style: Commas should always have a space after.
  hb.t.s <- merge(trakte,hb.t,by=c("TNr"),all.x=T)
                                          ^
NO COPY: R/BWI3_HR.R:1748:48: style: Put spaces around all infix operators.
  hb.t.s <- merge(trakte,hb.t,by=c("TNr"),all.x=T)
                                              ~^~
NO COPY: R/BWI3_HR.R:1749:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  hb.t.s[is.na(hb.t.s)] <- 0
  ^~~~~~
NO COPY: R/BWI3_HR.R:1749:16: style: Words within variable and function names should be separated by '_' rather than '.'.
  hb.t.s[is.na(hb.t.s)] <- 0
               ^~~~~~
NO COPY: R/BWI3_HR.R:1750:34: style: Words within variable and function names should be separated by '_' rather than '.'.
  r.list <- r.variance.fun(cbind(hb.t.s$m,hb.t.s$m_HB_s),nT)
                                 ^~~~~~
NO COPY: R/BWI3_HR.R:1750:43: style: Commas should always have a space after.
  r.list <- r.variance.fun(cbind(hb.t.s$m,hb.t.s$m_HB_s),nT)
                                          ^
NO COPY: R/BWI3_HR.R:1750:43: style: Words within variable and function names should be separated by '_' rather than '.'.
  r.list <- r.variance.fun(cbind(hb.t.s$m,hb.t.s$m_HB_s),nT)
                                          ^~~~~~
NO COPY: R/BWI3_HR.R:1750:58: style: Commas should always have a space after.
  r.list <- r.variance.fun(cbind(hb.t.s$m,hb.t.s$m_HB_s),nT)
                                                         ^
NO COPY: R/BWI3_HR.R:1751:21: style: Put spaces around all infix operators.
  HBF <- r.list$R.xy*A
                   ~^~
NO COPY: R/BWI3_HR.R:1752:25: style: Words within variable and function names should be separated by '_' rather than '.'.
  se.HBF <- sqrt(r.list$V.R.xy)*A
                        ^~~~~~
NO COPY: R/BWI3_HR.R:1752:32: style: Put spaces around all infix operators.
  se.HBF <- sqrt(r.list$V.R.xy)*A
                              ~^~
NO COPY: R/BWI3_HR.R:1759:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  baeume.2.s$bhd.pm <- ifelse(baeume.2.s$Pk%in%c(2:5,9),baeume.2.s$BHD2,
  ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:1759:31: style: Words within variable and function names should be separated by '_' rather than '.'.
  baeume.2.s$bhd.pm <- ifelse(baeume.2.s$Pk%in%c(2:5,9),baeume.2.s$BHD2,
                              ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:1759:44: style: Put spaces around all infix operators.
  baeume.2.s$bhd.pm <- ifelse(baeume.2.s$Pk%in%c(2:5,9),baeume.2.s$BHD2,
                                          ~^~~~~
NO COPY: R/BWI3_HR.R:1759:54: style: Commas should always have a space after.
  baeume.2.s$bhd.pm <- ifelse(baeume.2.s$Pk%in%c(2:5,9),baeume.2.s$BHD2,
                                                     ^
NO COPY: R/BWI3_HR.R:1759:57: style: Commas should always have a space after.
  baeume.2.s$bhd.pm <- ifelse(baeume.2.s$Pk%in%c(2:5,9),baeume.2.s$BHD2,
                                                        ^
NO COPY: R/BWI3_HR.R:1759:57: style: Words within variable and function names should be separated by '_' rather than '.'.
  baeume.2.s$bhd.pm <- ifelse(baeume.2.s$Pk%in%c(2:5,9),baeume.2.s$BHD2,
                                                        ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:1760:8: style: Words within variable and function names should be separated by '_' rather than '.'.
      (baeume.2.s$BHD1+baeume.2.s$BHD2)/2)
       ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:1760:23: style: Put spaces around all infix operators.
      (baeume.2.s$BHD1+baeume.2.s$BHD2)/2)
                     ~^~
NO COPY: R/BWI3_HR.R:1760:24: style: Words within variable and function names should be separated by '_' rather than '.'.
      (baeume.2.s$BHD1+baeume.2.s$BHD2)/2)
                       ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:1760:40: style: Put spaces around all infix operators.
      (baeume.2.s$BHD1+baeume.2.s$BHD2)/2)
                                      ~^~
NO COPY: R/BWI3_HR.R:1761:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  baeume.2.s$alt.pm <- ifelse(baeume.2.s$Pk%in%c(2:5,9),baeume.2.s$Alt2,
  ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:1761:31: style: Words within variable and function names should be separated by '_' rather than '.'.
  baeume.2.s$alt.pm <- ifelse(baeume.2.s$Pk%in%c(2:5,9),baeume.2.s$Alt2,
                              ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:1761:44: style: Put spaces around all infix operators.
  baeume.2.s$alt.pm <- ifelse(baeume.2.s$Pk%in%c(2:5,9),baeume.2.s$Alt2,
                                          ~^~~~~
NO COPY: R/BWI3_HR.R:1761:54: style: Commas should always have a space after.
  baeume.2.s$alt.pm <- ifelse(baeume.2.s$Pk%in%c(2:5,9),baeume.2.s$Alt2,
                                                     ^
NO COPY: R/BWI3_HR.R:1761:57: style: Commas should always have a space after.
  baeume.2.s$alt.pm <- ifelse(baeume.2.s$Pk%in%c(2:5,9),baeume.2.s$Alt2,
                                                        ^
NO COPY: R/BWI3_HR.R:1761:57: style: Words within variable and function names should be separated by '_' rather than '.'.
  baeume.2.s$alt.pm <- ifelse(baeume.2.s$Pk%in%c(2:5,9),baeume.2.s$Alt2,
                                                        ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:1762:14: style: Words within variable and function names should be separated by '_' rather than '.'.
      ifelse(baeume.2.s$BA<998,baeume.2.s$Alt1+baeume.2.s$PL/2,0))
             ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:1762:27: style: Put spaces around all infix operators.
      ifelse(baeume.2.s$BA<998,baeume.2.s$Alt1+baeume.2.s$PL/2,0))
                         ~^~
NO COPY: R/BWI3_HR.R:1762:32: style: Commas should always have a space after.
      ifelse(baeume.2.s$BA<998,baeume.2.s$Alt1+baeume.2.s$PL/2,0))
                               ^
NO COPY: R/BWI3_HR.R:1762:32: style: Words within variable and function names should be separated by '_' rather than '.'.
      ifelse(baeume.2.s$BA<998,baeume.2.s$Alt1+baeume.2.s$PL/2,0))
                               ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:1762:47: style: Put spaces around all infix operators.
      ifelse(baeume.2.s$BA<998,baeume.2.s$Alt1+baeume.2.s$PL/2,0))
                                             ~^~
NO COPY: R/BWI3_HR.R:1762:48: style: Words within variable and function names should be separated by '_' rather than '.'.
      ifelse(baeume.2.s$BA<998,baeume.2.s$Alt1+baeume.2.s$PL/2,0))
                                               ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:1762:61: style: Put spaces around all infix operators.
      ifelse(baeume.2.s$BA<998,baeume.2.s$Alt1+baeume.2.s$PL/2,0))
                                                           ~^~
NO COPY: R/BWI3_HR.R:1762:64: style: Commas should always have a space after.
      ifelse(baeume.2.s$BA<998,baeume.2.s$Alt1+baeume.2.s$PL/2,0))
                                                               ^
NO COPY: R/BWI3_HR.R:1766:1: style: lines should not be more than 80 characters.
  #die bei der Zuwachsbilanzierung ben\u00f6tigten PB-Kategorien S- und E-B\u00e4ume)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1767:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  baeume.3.s$bhd.pm <- (baeume.3.s$BHD1+baeume.3.s$BHD2)/2
  ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:1767:25: style: Words within variable and function names should be separated by '_' rather than '.'.
  baeume.3.s$bhd.pm <- (baeume.3.s$BHD1+baeume.3.s$BHD2)/2
                        ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:1767:40: style: Put spaces around all infix operators.
  baeume.3.s$bhd.pm <- (baeume.3.s$BHD1+baeume.3.s$BHD2)/2
                                      ~^~
NO COPY: R/BWI3_HR.R:1767:41: style: Words within variable and function names should be separated by '_' rather than '.'.
  baeume.3.s$bhd.pm <- (baeume.3.s$BHD1+baeume.3.s$BHD2)/2
                                        ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:1767:57: style: Put spaces around all infix operators.
  baeume.3.s$bhd.pm <- (baeume.3.s$BHD1+baeume.3.s$BHD2)/2
                                                       ~^~
NO COPY: R/BWI3_HR.R:1768:1: style: lines should not be more than 80 characters.
  baeume.3.s$alt.pm<- ifelse(baeume.3.s$BA<998,baeume.3.s$Alt2-baeume.3.s$PL/2,0)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1768:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  baeume.3.s$alt.pm<- ifelse(baeume.3.s$BA<998,baeume.3.s$Alt2-baeume.3.s$PL/2,0)
  ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:1768:20: style: Put spaces around all infix operators.
  baeume.3.s$alt.pm<- ifelse(baeume.3.s$BA<998,baeume.3.s$Alt2-baeume.3.s$PL/2,0)
                  ~^
NO COPY: R/BWI3_HR.R:1768:30: style: Words within variable and function names should be separated by '_' rather than '.'.
  baeume.3.s$alt.pm<- ifelse(baeume.3.s$BA<998,baeume.3.s$Alt2-baeume.3.s$PL/2,0)
                             ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:1768:43: style: Put spaces around all infix operators.
  baeume.3.s$alt.pm<- ifelse(baeume.3.s$BA<998,baeume.3.s$Alt2-baeume.3.s$PL/2,0)
                                         ~^~
NO COPY: R/BWI3_HR.R:1768:48: style: Commas should always have a space after.
  baeume.3.s$alt.pm<- ifelse(baeume.3.s$BA<998,baeume.3.s$Alt2-baeume.3.s$PL/2,0)
                                               ^
NO COPY: R/BWI3_HR.R:1768:48: style: Words within variable and function names should be separated by '_' rather than '.'.
  baeume.3.s$alt.pm<- ifelse(baeume.3.s$BA<998,baeume.3.s$Alt2-baeume.3.s$PL/2,0)
                                               ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:1768:63: style: Put spaces around all infix operators.
  baeume.3.s$alt.pm<- ifelse(baeume.3.s$BA<998,baeume.3.s$Alt2-baeume.3.s$PL/2,0)
                                                             ~^~
NO COPY: R/BWI3_HR.R:1768:64: style: Words within variable and function names should be separated by '_' rather than '.'.
  baeume.3.s$alt.pm<- ifelse(baeume.3.s$BA<998,baeume.3.s$Alt2-baeume.3.s$PL/2,0)
                                                               ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:1768:77: style: Put spaces around all infix operators.
  baeume.3.s$alt.pm<- ifelse(baeume.3.s$BA<998,baeume.3.s$Alt2-baeume.3.s$PL/2,0)
                                                                           ~^~
NO COPY: R/BWI3_HR.R:1768:80: style: Commas should always have a space after.
  baeume.3.s$alt.pm<- ifelse(baeume.3.s$BA<998,baeume.3.s$Alt2-baeume.3.s$PL/2,0)
                                                                               ^
NO COPY: R/BWI3_HR.R:1773:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  baeume.2.s$akl <- cut(baeume.2.s$alt.pm,
  ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:1773:25: style: Words within variable and function names should be separated by '_' rather than '.'.
  baeume.2.s$akl <- cut(baeume.2.s$alt.pm,
                        ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:1774:29: style: Put spaces around all infix operators.
                      breaks=c(seq(0,A.klass[[1]],A.klass[[2]]),A.max),right=T)
                           ~^~
NO COPY: R/BWI3_HR.R:1774:38: style: Commas should always have a space after.
                      breaks=c(seq(0,A.klass[[1]],A.klass[[2]]),A.max),right=T)
                                     ^
NO COPY: R/BWI3_HR.R:1774:51: style: Commas should always have a space after.
                      breaks=c(seq(0,A.klass[[1]],A.klass[[2]]),A.max),right=T)
                                                  ^
NO COPY: R/BWI3_HR.R:1774:65: style: Commas should always have a space after.
                      breaks=c(seq(0,A.klass[[1]],A.klass[[2]]),A.max),right=T)
                                                                ^
NO COPY: R/BWI3_HR.R:1774:72: style: Commas should always have a space after.
                      breaks=c(seq(0,A.klass[[1]],A.klass[[2]]),A.max),right=T)
                                                                       ^
NO COPY: R/BWI3_HR.R:1774:77: style: Put spaces around all infix operators.
                      breaks=c(seq(0,A.klass[[1]],A.klass[[2]]),A.max),right=T)
                                                                           ~^~
NO COPY: R/BWI3_HR.R:1776:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  baeume.3.s$akl <- cut(baeume.3.s$alt.pm,
  ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:1776:25: style: Words within variable and function names should be separated by '_' rather than '.'.
  baeume.3.s$akl <- cut(baeume.3.s$alt.pm,
                        ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:1777:29: style: Put spaces around all infix operators.
                      breaks=c(seq(0,A.klass[[1]],A.klass[[2]]),A.max),right=T)
                           ~^~
NO COPY: R/BWI3_HR.R:1777:38: style: Commas should always have a space after.
                      breaks=c(seq(0,A.klass[[1]],A.klass[[2]]),A.max),right=T)
                                     ^
NO COPY: R/BWI3_HR.R:1777:51: style: Commas should always have a space after.
                      breaks=c(seq(0,A.klass[[1]],A.klass[[2]]),A.max),right=T)
                                                  ^
NO COPY: R/BWI3_HR.R:1777:65: style: Commas should always have a space after.
                      breaks=c(seq(0,A.klass[[1]],A.klass[[2]]),A.max),right=T)
                                                                ^
NO COPY: R/BWI3_HR.R:1777:72: style: Commas should always have a space after.
                      breaks=c(seq(0,A.klass[[1]],A.klass[[2]]),A.max),right=T)
                                                                       ^
NO COPY: R/BWI3_HR.R:1777:77: style: Put spaces around all infix operators.
                      breaks=c(seq(0,A.klass[[1]],A.klass[[2]]),A.max),right=T)
                                                                           ~^~
NO COPY: R/BWI3_HR.R:1778:21: style: Words within variable and function names should be separated by '_' rather than '.'.
  akl.lab <- unique(baeume.3.s$akl)
                    ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:1785:3: style: Opening curly braces should never go on their own line and should always be followed by a new line.
  {
  ^
NO COPY: R/BWI3_HR.R:1786:1: style: lines should not be more than 80 characters.
    brks <- c(0,7,seq(D.klass[[1]]+D.klass[[3]],D.klass[[2]],D.klass[[3]]),D.max)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1786:17: style: Commas should always have a space after.
    brks <- c(0,7,seq(D.klass[[1]]+D.klass[[3]],D.klass[[2]],D.klass[[3]]),D.max)
                ^
NO COPY: R/BWI3_HR.R:1786:19: style: Commas should always have a space after.
    brks <- c(0,7,seq(D.klass[[1]]+D.klass[[3]],D.klass[[2]],D.klass[[3]]),D.max)
                  ^
NO COPY: R/BWI3_HR.R:1786:35: style: Put spaces around all infix operators.
    brks <- c(0,7,seq(D.klass[[1]]+D.klass[[3]],D.klass[[2]],D.klass[[3]]),D.max)
                                 ~^~
NO COPY: R/BWI3_HR.R:1786:49: style: Commas should always have a space after.
    brks <- c(0,7,seq(D.klass[[1]]+D.klass[[3]],D.klass[[2]],D.klass[[3]]),D.max)
                                                ^
NO COPY: R/BWI3_HR.R:1786:62: style: Commas should always have a space after.
    brks <- c(0,7,seq(D.klass[[1]]+D.klass[[3]],D.klass[[2]],D.klass[[3]]),D.max)
                                                             ^
NO COPY: R/BWI3_HR.R:1786:76: style: Commas should always have a space after.
    brks <- c(0,7,seq(D.klass[[1]]+D.klass[[3]],D.klass[[2]],D.klass[[3]]),D.max)
                                                                           ^
NO COPY: R/BWI3_HR.R:1788:3: style: Opening curly braces should never go on their own line and should always be followed by a new line.
  {
  ^
NO COPY: R/BWI3_HR.R:1789:32: style: Commas should always have a space after.
    brks <- c(seq(D.klass[[1]],D.klass[[2]],D.klass[[3]]),D.max)
                               ^
NO COPY: R/BWI3_HR.R:1789:45: style: Commas should always have a space after.
    brks <- c(seq(D.klass[[1]],D.klass[[2]],D.klass[[3]]),D.max)
                                            ^
NO COPY: R/BWI3_HR.R:1789:59: style: Commas should always have a space after.
    brks <- c(seq(D.klass[[1]],D.klass[[2]],D.klass[[3]]),D.max)
                                                          ^
NO COPY: R/BWI3_HR.R:1792:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  baeume.2.s$dkl <- cut(baeume.2.s$bhd.pm, breaks=brks, right=F)
  ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:1792:25: style: Words within variable and function names should be separated by '_' rather than '.'.
  baeume.2.s$dkl <- cut(baeume.2.s$bhd.pm, breaks=brks, right=F)
                        ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:1792:50: style: Put spaces around all infix operators.
  baeume.2.s$dkl <- cut(baeume.2.s$bhd.pm, breaks=brks, right=F)
                                                ~^~
NO COPY: R/BWI3_HR.R:1792:62: style: Put spaces around all infix operators.
  baeume.2.s$dkl <- cut(baeume.2.s$bhd.pm, breaks=brks, right=F)
                                                            ~^~
NO COPY: R/BWI3_HR.R:1794:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  baeume.3.s$dkl <- cut(baeume.3.s$bhd.pm, breaks=brks, right=F)
  ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:1794:25: style: Words within variable and function names should be separated by '_' rather than '.'.
  baeume.3.s$dkl <- cut(baeume.3.s$bhd.pm, breaks=brks, right=F)
                        ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:1794:50: style: Put spaces around all infix operators.
  baeume.3.s$dkl <- cut(baeume.3.s$bhd.pm, breaks=brks, right=F)
                                                ~^~
NO COPY: R/BWI3_HR.R:1794:62: style: Put spaces around all infix operators.
  baeume.3.s$dkl <- cut(baeume.3.s$bhd.pm, breaks=brks, right=F)
                                                            ~^~
NO COPY: R/BWI3_HR.R:1795:21: style: Words within variable and function names should be separated by '_' rather than '.'.
  dkl.lab <- unique(baeume.3.s$dkl)
                    ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:1801:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.a.t.bagr.akl.dkl <- iVB.bilanz.bagr.akl.dkl.fun(baeume.2.s,baeume.3.s,
  ^~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1801:57: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.a.t.bagr.akl.dkl <- iVB.bilanz.bagr.akl.dkl.fun(baeume.2.s,baeume.3.s,
                                                        ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:1801:68: style: Commas should always have a space after.
  iv.es.a.t.bagr.akl.dkl <- iVB.bilanz.bagr.akl.dkl.fun(baeume.2.s,baeume.3.s,
                                                                   ^
NO COPY: R/BWI3_HR.R:1801:68: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.a.t.bagr.akl.dkl <- iVB.bilanz.bagr.akl.dkl.fun(baeume.2.s,baeume.3.s,
                                                                   ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:1807:1: style: lines should not be more than 80 characters.
  #1. 1-12: 4 Zielgr\u00f6\u00dfen: V_DhmR, V_DhmR_HB, V_EoR, oiB in je 3 Varianten
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1820:3: style: Variable and function names should be all lowercase.
  iVB.bagr.akl.dkl <- array(dim=c(16,2,n.bagr,A.k,D.k))
  ^~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1820:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  iVB.bagr.akl.dkl <- array(dim=c(16,2,n.bagr,A.k,D.k))
  ^~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1820:32: style: Put spaces around all infix operators.
  iVB.bagr.akl.dkl <- array(dim=c(16,2,n.bagr,A.k,D.k))
                              ~^~
NO COPY: R/BWI3_HR.R:1820:38: style: Commas should always have a space after.
  iVB.bagr.akl.dkl <- array(dim=c(16,2,n.bagr,A.k,D.k))
                                     ^
NO COPY: R/BWI3_HR.R:1820:40: style: Commas should always have a space after.
  iVB.bagr.akl.dkl <- array(dim=c(16,2,n.bagr,A.k,D.k))
                                       ^
NO COPY: R/BWI3_HR.R:1820:47: style: Commas should always have a space after.
  iVB.bagr.akl.dkl <- array(dim=c(16,2,n.bagr,A.k,D.k))
                                              ^
NO COPY: R/BWI3_HR.R:1820:51: style: Commas should always have a space after.
  iVB.bagr.akl.dkl <- array(dim=c(16,2,n.bagr,A.k,D.k))
                                                  ^
NO COPY: R/BWI3_HR.R:1836:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  VB.A.bagr.akl.dkl <- array(dim=c(13,2,n.bagr,A.k,D.k))
  ^~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1836:33: style: Put spaces around all infix operators.
  VB.A.bagr.akl.dkl <- array(dim=c(13,2,n.bagr,A.k,D.k))
                               ~^~
NO COPY: R/BWI3_HR.R:1836:39: style: Commas should always have a space after.
  VB.A.bagr.akl.dkl <- array(dim=c(13,2,n.bagr,A.k,D.k))
                                      ^
NO COPY: R/BWI3_HR.R:1836:41: style: Commas should always have a space after.
  VB.A.bagr.akl.dkl <- array(dim=c(13,2,n.bagr,A.k,D.k))
                                        ^
NO COPY: R/BWI3_HR.R:1836:48: style: Commas should always have a space after.
  VB.A.bagr.akl.dkl <- array(dim=c(13,2,n.bagr,A.k,D.k))
                                               ^
NO COPY: R/BWI3_HR.R:1836:52: style: Commas should always have a space after.
  VB.A.bagr.akl.dkl <- array(dim=c(13,2,n.bagr,A.k,D.k))
                                                   ^
NO COPY: R/BWI3_HR.R:1840:3: style: Opening curly braces should never go on their own line and should always be followed by a new line.
  {
  ^
NO COPY: R/BWI3_HR.R:1842:5: style: Opening curly braces should never go on their own line and should always be followed by a new line.
    {
    ^
NO COPY: R/BWI3_HR.R:1844:7: style: Opening curly braces should never go on their own line and should always be followed by a new line.
      {
      ^
NO COPY: R/BWI3_HR.R:1846:9: style: Words within variable and function names should be separated by '_' rather than '.'.
        iv.es.a.t <- iv.es.a.t.bagr.akl.dkl[
        ^~~~~~~~~
NO COPY: R/BWI3_HR.R:1846:22: style: Words within variable and function names should be separated by '_' rather than '.'.
        iv.es.a.t <- iv.es.a.t.bagr.akl.dkl[
                     ^~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1847:23: style: Words within variable and function names should be separated by '_' rather than '.'.
                      iv.es.a.t.bagr.akl.dkl[["BaGr"]] == bagr.list[i] &
                      ^~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1848:23: style: Words within variable and function names should be separated by '_' rather than '.'.
                      iv.es.a.t.bagr.akl.dkl[["Akl"]] == akl.lab[j] &
                      ^~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1849:23: style: Words within variable and function names should be separated by '_' rather than '.'.
                      iv.es.a.t.bagr.akl.dkl[["Dkl"]] == dkl.lab[k], TRUE]
                      ^~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1852:9: style: Variable and function names should be all lowercase.
        iVB.bagr.akl.dkl[16,1,i,j,k] <- length(iv.es.a.t[,1])
        ^~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1852:9: style: Words within variable and function names should be separated by '_' rather than '.'.
        iVB.bagr.akl.dkl[16,1,i,j,k] <- length(iv.es.a.t[,1])
        ^~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1852:29: style: Commas should always have a space after.
        iVB.bagr.akl.dkl[16,1,i,j,k] <- length(iv.es.a.t[,1])
                            ^
NO COPY: R/BWI3_HR.R:1852:31: style: Commas should always have a space after.
        iVB.bagr.akl.dkl[16,1,i,j,k] <- length(iv.es.a.t[,1])
                              ^
NO COPY: R/BWI3_HR.R:1852:33: style: Commas should always have a space after.
        iVB.bagr.akl.dkl[16,1,i,j,k] <- length(iv.es.a.t[,1])
                                ^
NO COPY: R/BWI3_HR.R:1852:35: style: Commas should always have a space after.
        iVB.bagr.akl.dkl[16,1,i,j,k] <- length(iv.es.a.t[,1])
                                  ^
NO COPY: R/BWI3_HR.R:1852:48: style: Words within variable and function names should be separated by '_' rather than '.'.
        iVB.bagr.akl.dkl[16,1,i,j,k] <- length(iv.es.a.t[,1])
                                               ^~~~~~~~~
NO COPY: R/BWI3_HR.R:1852:59: style: Commas should always have a space after.
        iVB.bagr.akl.dkl[16,1,i,j,k] <- length(iv.es.a.t[,1])
                                                          ^
NO COPY: R/BWI3_HR.R:1854:1: style: lines should not be more than 80 characters.
        iv.bil.t <- iv.es.a.t[TRUE, c("TNr", "mBAF", "mBAF.oLK", "mPL", "mPLkal", 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1854:9: style: Words within variable and function names should be separated by '_' rather than '.'.
        iv.bil.t <- iv.es.a.t[TRUE, c("TNr", "mBAF", "mBAF.oLK", "mPL", "mPLkal", 
        ^~~~~~~~
NO COPY: R/BWI3_HR.R:1854:21: style: Words within variable and function names should be separated by '_' rather than '.'.
        iv.bil.t <- iv.es.a.t[TRUE, c("TNr", "mBAF", "mBAF.oLK", "mPL", "mPLkal", 
                    ^~~~~~~~~
NO COPY: R/BWI3_HR.R:1854:82: style: Trailing whitespace is superfluous.
        iv.bil.t <- iv.es.a.t[TRUE, c("TNr", "mBAF", "mBAF.oLK", "mPL", "mPLkal", 
                                                                                 ^
NO COPY: R/BWI3_HR.R:1855:78: style: Trailing whitespace is superfluous.
                                     "iV.DhmR", "iV.DhmR.HB", "iV.EoR", "iB", 
                                                                             ^
NO COPY: R/BWI3_HR.R:1859:9: style: Words within variable and function names should be separated by '_' rather than '.'.
        iv.bil.t <- merge(trakte[TRUE, c("TNr", "m", "m_HB")],iv.bil.t,
        ^~~~~~~~
NO COPY: R/BWI3_HR.R:1859:63: style: Commas should always have a space after.
        iv.bil.t <- merge(trakte[TRUE, c("TNr", "m", "m_HB")],iv.bil.t,
                                                              ^
NO COPY: R/BWI3_HR.R:1859:63: style: Words within variable and function names should be separated by '_' rather than '.'.
        iv.bil.t <- merge(trakte[TRUE, c("TNr", "m", "m_HB")],iv.bil.t,
                                                              ^~~~~~~~
NO COPY: R/BWI3_HR.R:1860:29: style: Put spaces around all infix operators.
                          by=c("TNr"),all.x=T)
                           ~^~
NO COPY: R/BWI3_HR.R:1860:39: style: Commas should always have a space after.
                          by=c("TNr"),all.x=T)
                                      ^
NO COPY: R/BWI3_HR.R:1860:44: style: Put spaces around all infix operators.
                          by=c("TNr"),all.x=T)
                                          ~^~
NO COPY: R/BWI3_HR.R:1862:9: style: Words within variable and function names should be separated by '_' rather than '.'.
        iv.bil.t[is.na(iv.bil.t)] <- 0
        ^~~~~~~~
NO COPY: R/BWI3_HR.R:1862:24: style: Words within variable and function names should be separated by '_' rather than '.'.
        iv.bil.t[is.na(iv.bil.t)] <- 0
                       ^~~~~~~~
NO COPY: R/BWI3_HR.R:1864:10: style: Commented code should be removed.
        #utils::head(iv.bil.t)
         ^~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1869:1: style: Trailing whitespace is superfluous.
        
^~~~~~~~
NO COPY: R/BWI3_HR.R:1875:1: style: lines should not be more than 80 characters.
                          #j\u00e4hrlicher Gesamtwert, Ha-bezogener j\u00e4hrl. Wert
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1876:9: style: Opening curly braces should never go on their own line and should always be followed by a new line.
        {
        ^
NO COPY: R/BWI3_HR.R:1877:1: style: lines should not be more than 80 characters.
          for (jj in 8:11) #Spaltenpositionen der 4 Zielgr\u00f6\u00dfen iV.DhmR,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1880:11: style: Opening curly braces should never go on their own line and should always be followed by a new line.
          {
          ^
NO COPY: R/BWI3_HR.R:1882:1: style: lines should not be more than 80 characters.
            #Bezugsgr\u00f6\u00dfe x: bei ii = 1 oder 2 (Gesamtwerte): Anzahl Ecken je
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1883:1: style: lines should not be more than 80 characters.
            #Takt (m); bei ii = 3 (Hektar.Bezug) Fallunterscheidung: "Gr\u00f6\u00dfen"
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1886:15: style: Place a space before left parenthesis, except in a function call.
            if(ii < 3) {x <- iv.bil.t[,2]}  else
              ^
NO COPY: R/BWI3_HR.R:1886:24: style: Opening curly braces should never go on their own line and should always be followed by a new line.
            if(ii < 3) {x <- iv.bil.t[,2]}  else
                       ^
NO COPY: R/BWI3_HR.R:1886:30: style: Words within variable and function names should be separated by '_' rather than '.'.
            if(ii < 3) {x <- iv.bil.t[,2]}  else
                             ^~~~~~~~
NO COPY: R/BWI3_HR.R:1886:40: style: Commas should always have a space after.
            if(ii < 3) {x <- iv.bil.t[,2]}  else
                                       ^
NO COPY: R/BWI3_HR.R:1886:42: style: Closing curly-braces should always be on their own line, unless it's followed by an else.
            if(ii < 3) {x <- iv.bil.t[,2]}  else
                                         ^
NO COPY: R/BWI3_HR.R:1887:13: style: Opening curly braces should never go on their own line and should always be followed by a new line.
            {if(jj==9) {x <- iv.bil.t[,5]} else {x <- iv.bil.t[,4]}}
            ^
NO COPY: R/BWI3_HR.R:1887:16: style: Place a space before left parenthesis, except in a function call.
            {if(jj==9) {x <- iv.bil.t[,5]} else {x <- iv.bil.t[,4]}}
               ^
NO COPY: R/BWI3_HR.R:1887:19: style: Put spaces around all infix operators.
            {if(jj==9) {x <- iv.bil.t[,5]} else {x <- iv.bil.t[,4]}}
                 ~^~~
NO COPY: R/BWI3_HR.R:1887:24: style: Opening curly braces should never go on their own line and should always be followed by a new line.
            {if(jj==9) {x <- iv.bil.t[,5]} else {x <- iv.bil.t[,4]}}
                       ^
NO COPY: R/BWI3_HR.R:1887:30: style: Words within variable and function names should be separated by '_' rather than '.'.
            {if(jj==9) {x <- iv.bil.t[,5]} else {x <- iv.bil.t[,4]}}
                             ^~~~~~~~
NO COPY: R/BWI3_HR.R:1887:40: style: Commas should always have a space after.
            {if(jj==9) {x <- iv.bil.t[,5]} else {x <- iv.bil.t[,4]}}
                                       ^
NO COPY: R/BWI3_HR.R:1887:42: style: Closing curly-braces should always be on their own line, unless it's followed by an else.
            {if(jj==9) {x <- iv.bil.t[,5]} else {x <- iv.bil.t[,4]}}
                                         ^
NO COPY: R/BWI3_HR.R:1887:49: style: Opening curly braces should never go on their own line and should always be followed by a new line.
            {if(jj==9) {x <- iv.bil.t[,5]} else {x <- iv.bil.t[,4]}}
                                                ^
NO COPY: R/BWI3_HR.R:1887:55: style: Words within variable and function names should be separated by '_' rather than '.'.
            {if(jj==9) {x <- iv.bil.t[,5]} else {x <- iv.bil.t[,4]}}
                                                      ^~~~~~~~
NO COPY: R/BWI3_HR.R:1887:65: style: Commas should always have a space after.
            {if(jj==9) {x <- iv.bil.t[,5]} else {x <- iv.bil.t[,4]}}
                                                                ^
NO COPY: R/BWI3_HR.R:1887:67: style: Closing curly-braces should always be on their own line, unless it's followed by an else.
            {if(jj==9) {x <- iv.bil.t[,5]} else {x <- iv.bil.t[,4]}}
                                                                  ^
NO COPY: R/BWI3_HR.R:1887:68: style: Closing curly-braces should always be on their own line, unless it's followed by an else.
            {if(jj==9) {x <- iv.bil.t[,5]} else {x <- iv.bil.t[,4]}}
                                                                   ^
NO COPY: R/BWI3_HR.R:1889:15: style: Place a space before left parenthesis, except in a function call.
            if(ii < 2) {y <- iv.bil.t[,jj]} else
              ^
NO COPY: R/BWI3_HR.R:1889:24: style: Opening curly braces should never go on their own line and should always be followed by a new line.
            if(ii < 2) {y <- iv.bil.t[,jj]} else
                       ^
NO COPY: R/BWI3_HR.R:1889:30: style: Words within variable and function names should be separated by '_' rather than '.'.
            if(ii < 2) {y <- iv.bil.t[,jj]} else
                             ^~~~~~~~
NO COPY: R/BWI3_HR.R:1889:40: style: Commas should always have a space after.
            if(ii < 2) {y <- iv.bil.t[,jj]} else
                                       ^
NO COPY: R/BWI3_HR.R:1889:43: style: Closing curly-braces should always be on their own line, unless it's followed by an else.
            if(ii < 2) {y <- iv.bil.t[,jj]} else
                                          ^
NO COPY: R/BWI3_HR.R:1890:15: style: Opening curly braces should never go on their own line and should always be followed by a new line.
              {y <- ifelse(iv.bil.t[,6]>0,iv.bil.t[,jj]/iv.bil.t[,6],0)}
              ^
NO COPY: R/BWI3_HR.R:1890:28: style: Words within variable and function names should be separated by '_' rather than '.'.
              {y <- ifelse(iv.bil.t[,6]>0,iv.bil.t[,jj]/iv.bil.t[,6],0)}
                           ^~~~~~~~
NO COPY: R/BWI3_HR.R:1890:38: style: Commas should always have a space after.
              {y <- ifelse(iv.bil.t[,6]>0,iv.bil.t[,jj]/iv.bil.t[,6],0)}
                                     ^
NO COPY: R/BWI3_HR.R:1890:40: style: Put spaces around all infix operators.
              {y <- ifelse(iv.bil.t[,6]>0,iv.bil.t[,jj]/iv.bil.t[,6],0)}
                                      ~^~
NO COPY: R/BWI3_HR.R:1890:43: style: Commas should always have a space after.
              {y <- ifelse(iv.bil.t[,6]>0,iv.bil.t[,jj]/iv.bil.t[,6],0)}
                                          ^
NO COPY: R/BWI3_HR.R:1890:43: style: Words within variable and function names should be separated by '_' rather than '.'.
              {y <- ifelse(iv.bil.t[,6]>0,iv.bil.t[,jj]/iv.bil.t[,6],0)}
                                          ^~~~~~~~
NO COPY: R/BWI3_HR.R:1890:53: style: Commas should always have a space after.
              {y <- ifelse(iv.bil.t[,6]>0,iv.bil.t[,jj]/iv.bil.t[,6],0)}
                                                    ^
NO COPY: R/BWI3_HR.R:1890:56: style: Put spaces around all infix operators.
              {y <- ifelse(iv.bil.t[,6]>0,iv.bil.t[,jj]/iv.bil.t[,6],0)}
                                                      ~^~
NO COPY: R/BWI3_HR.R:1890:57: style: Words within variable and function names should be separated by '_' rather than '.'.
              {y <- ifelse(iv.bil.t[,6]>0,iv.bil.t[,jj]/iv.bil.t[,6],0)}
                                                        ^~~~~~~~
NO COPY: R/BWI3_HR.R:1890:67: style: Commas should always have a space after.
              {y <- ifelse(iv.bil.t[,6]>0,iv.bil.t[,jj]/iv.bil.t[,6],0)}
                                                                  ^
NO COPY: R/BWI3_HR.R:1890:70: style: Commas should always have a space after.
              {y <- ifelse(iv.bil.t[,6]>0,iv.bil.t[,jj]/iv.bil.t[,6],0)}
                                                                     ^
NO COPY: R/BWI3_HR.R:1890:72: style: Closing curly-braces should always be on their own line, unless it's followed by an else.
              {y <- ifelse(iv.bil.t[,6]>0,iv.bil.t[,jj]/iv.bil.t[,6],0)}
                                                                       ^
NO COPY: R/BWI3_HR.R:1891:46: style: Commas should always have a space after.
            R.list <- r.variance.fun(cbind(x,y),nT)
                                             ^
NO COPY: R/BWI3_HR.R:1891:49: style: Commas should always have a space after.
            R.list <- r.variance.fun(cbind(x,y),nT)
                                                ^
NO COPY: R/BWI3_HR.R:1892:13: style: Variable and function names should be all lowercase.
            iVB.bagr.akl.dkl[iii,1,i,j,k] <- R.list$R.xy*ifelse(ii<3,A,1)
            ^~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1892:13: style: Words within variable and function names should be separated by '_' rather than '.'.
            iVB.bagr.akl.dkl[iii,1,i,j,k] <- R.list$R.xy*ifelse(ii<3,A,1)
            ^~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1892:34: style: Commas should always have a space after.
            iVB.bagr.akl.dkl[iii,1,i,j,k] <- R.list$R.xy*ifelse(ii<3,A,1)
                                 ^
NO COPY: R/BWI3_HR.R:1892:36: style: Commas should always have a space after.
            iVB.bagr.akl.dkl[iii,1,i,j,k] <- R.list$R.xy*ifelse(ii<3,A,1)
                                   ^
NO COPY: R/BWI3_HR.R:1892:38: style: Commas should always have a space after.
            iVB.bagr.akl.dkl[iii,1,i,j,k] <- R.list$R.xy*ifelse(ii<3,A,1)
                                     ^
NO COPY: R/BWI3_HR.R:1892:40: style: Commas should always have a space after.
            iVB.bagr.akl.dkl[iii,1,i,j,k] <- R.list$R.xy*ifelse(ii<3,A,1)
                                       ^
NO COPY: R/BWI3_HR.R:1892:57: style: Put spaces around all infix operators.
            iVB.bagr.akl.dkl[iii,1,i,j,k] <- R.list$R.xy*ifelse(ii<3,A,1)
                                                       ~^~
NO COPY: R/BWI3_HR.R:1892:67: style: Put spaces around all infix operators.
            iVB.bagr.akl.dkl[iii,1,i,j,k] <- R.list$R.xy*ifelse(ii<3,A,1)
                                                                 ~^~
NO COPY: R/BWI3_HR.R:1892:70: style: Commas should always have a space after.
            iVB.bagr.akl.dkl[iii,1,i,j,k] <- R.list$R.xy*ifelse(ii<3,A,1)
                                                                     ^
NO COPY: R/BWI3_HR.R:1892:72: style: Commas should always have a space after.
            iVB.bagr.akl.dkl[iii,1,i,j,k] <- R.list$R.xy*ifelse(ii<3,A,1)
                                                                       ^
NO COPY: R/BWI3_HR.R:1893:13: style: Variable and function names should be all lowercase.
            iVB.bagr.akl.dkl[iii,2,i,j,k]<- sqrt(R.list$V.R.xy)*ifelse(ii<3,A,1)
            ^~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1893:13: style: Words within variable and function names should be separated by '_' rather than '.'.
            iVB.bagr.akl.dkl[iii,2,i,j,k]<- sqrt(R.list$V.R.xy)*ifelse(ii<3,A,1)
            ^~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1893:34: style: Commas should always have a space after.
            iVB.bagr.akl.dkl[iii,2,i,j,k]<- sqrt(R.list$V.R.xy)*ifelse(ii<3,A,1)
                                 ^
NO COPY: R/BWI3_HR.R:1893:36: style: Commas should always have a space after.
            iVB.bagr.akl.dkl[iii,2,i,j,k]<- sqrt(R.list$V.R.xy)*ifelse(ii<3,A,1)
                                   ^
NO COPY: R/BWI3_HR.R:1893:38: style: Commas should always have a space after.
            iVB.bagr.akl.dkl[iii,2,i,j,k]<- sqrt(R.list$V.R.xy)*ifelse(ii<3,A,1)
                                     ^
NO COPY: R/BWI3_HR.R:1893:40: style: Commas should always have a space after.
            iVB.bagr.akl.dkl[iii,2,i,j,k]<- sqrt(R.list$V.R.xy)*ifelse(ii<3,A,1)
                                       ^
NO COPY: R/BWI3_HR.R:1893:42: style: Put spaces around all infix operators.
            iVB.bagr.akl.dkl[iii,2,i,j,k]<- sqrt(R.list$V.R.xy)*ifelse(ii<3,A,1)
                                        ~^
NO COPY: R/BWI3_HR.R:1893:57: style: Words within variable and function names should be separated by '_' rather than '.'.
            iVB.bagr.akl.dkl[iii,2,i,j,k]<- sqrt(R.list$V.R.xy)*ifelse(ii<3,A,1)
                                                        ^~~~~~
NO COPY: R/BWI3_HR.R:1893:64: style: Put spaces around all infix operators.
            iVB.bagr.akl.dkl[iii,2,i,j,k]<- sqrt(R.list$V.R.xy)*ifelse(ii<3,A,1)
                                                              ~^~
NO COPY: R/BWI3_HR.R:1893:74: style: Put spaces around all infix operators.
            iVB.bagr.akl.dkl[iii,2,i,j,k]<- sqrt(R.list$V.R.xy)*ifelse(ii<3,A,1)
                                                                        ~^~
NO COPY: R/BWI3_HR.R:1893:77: style: Commas should always have a space after.
            iVB.bagr.akl.dkl[iii,2,i,j,k]<- sqrt(R.list$V.R.xy)*ifelse(ii<3,A,1)
                                                                            ^
NO COPY: R/BWI3_HR.R:1893:79: style: Commas should always have a space after.
            iVB.bagr.akl.dkl[iii,2,i,j,k]<- sqrt(R.list$V.R.xy)*ifelse(ii<3,A,1)
                                                                              ^
NO COPY: R/BWI3_HR.R:1897:1: style: lines should not be more than 80 characters.
          for (jj in 12:15) #Spaltenpositionen der 4 Zielgr\u00f6\u00dfen V.DhmR.A,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1899:11: style: Opening curly braces should never go on their own line and should always be followed by a new line.
          {
          ^
NO COPY: R/BWI3_HR.R:1901:1: style: lines should not be more than 80 characters.
            #Bezugsgr\u00f6\u00dfe x: bei ii = 1 oder 2 (Gesamtwerte): Anzahl Ecken je
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1902:1: style: lines should not be more than 80 characters.
            #Takt (m); bei ii = 3 (Hektar.Bezug) Fallunterscheidung: "Gr\u00f6\u00dfen"
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1905:15: style: Place a space before left parenthesis, except in a function call.
            if(ii < 3) {x <- iv.bil.t[,2]}  else
              ^
NO COPY: R/BWI3_HR.R:1905:24: style: Opening curly braces should never go on their own line and should always be followed by a new line.
            if(ii < 3) {x <- iv.bil.t[,2]}  else
                       ^
NO COPY: R/BWI3_HR.R:1905:30: style: Words within variable and function names should be separated by '_' rather than '.'.
            if(ii < 3) {x <- iv.bil.t[,2]}  else
                             ^~~~~~~~
NO COPY: R/BWI3_HR.R:1905:40: style: Commas should always have a space after.
            if(ii < 3) {x <- iv.bil.t[,2]}  else
                                       ^
NO COPY: R/BWI3_HR.R:1905:42: style: Closing curly-braces should always be on their own line, unless it's followed by an else.
            if(ii < 3) {x <- iv.bil.t[,2]}  else
                                         ^
NO COPY: R/BWI3_HR.R:1906:13: style: Opening curly braces should never go on their own line and should always be followed by a new line.
            {if(jj==13) {x <- iv.bil.t[,5]} else {x <- iv.bil.t[,4]}}
            ^
NO COPY: R/BWI3_HR.R:1906:16: style: Place a space before left parenthesis, except in a function call.
            {if(jj==13) {x <- iv.bil.t[,5]} else {x <- iv.bil.t[,4]}}
               ^
NO COPY: R/BWI3_HR.R:1906:19: style: Put spaces around all infix operators.
            {if(jj==13) {x <- iv.bil.t[,5]} else {x <- iv.bil.t[,4]}}
                 ~^~~
NO COPY: R/BWI3_HR.R:1906:25: style: Opening curly braces should never go on their own line and should always be followed by a new line.
            {if(jj==13) {x <- iv.bil.t[,5]} else {x <- iv.bil.t[,4]}}
                        ^
NO COPY: R/BWI3_HR.R:1906:31: style: Words within variable and function names should be separated by '_' rather than '.'.
            {if(jj==13) {x <- iv.bil.t[,5]} else {x <- iv.bil.t[,4]}}
                              ^~~~~~~~
NO COPY: R/BWI3_HR.R:1906:41: style: Commas should always have a space after.
            {if(jj==13) {x <- iv.bil.t[,5]} else {x <- iv.bil.t[,4]}}
                                        ^
NO COPY: R/BWI3_HR.R:1906:43: style: Closing curly-braces should always be on their own line, unless it's followed by an else.
            {if(jj==13) {x <- iv.bil.t[,5]} else {x <- iv.bil.t[,4]}}
                                          ^
NO COPY: R/BWI3_HR.R:1906:50: style: Opening curly braces should never go on their own line and should always be followed by a new line.
            {if(jj==13) {x <- iv.bil.t[,5]} else {x <- iv.bil.t[,4]}}
                                                 ^
NO COPY: R/BWI3_HR.R:1906:56: style: Words within variable and function names should be separated by '_' rather than '.'.
            {if(jj==13) {x <- iv.bil.t[,5]} else {x <- iv.bil.t[,4]}}
                                                       ^~~~~~~~
NO COPY: R/BWI3_HR.R:1906:66: style: Commas should always have a space after.
            {if(jj==13) {x <- iv.bil.t[,5]} else {x <- iv.bil.t[,4]}}
                                                                 ^
NO COPY: R/BWI3_HR.R:1906:68: style: Closing curly-braces should always be on their own line, unless it's followed by an else.
            {if(jj==13) {x <- iv.bil.t[,5]} else {x <- iv.bil.t[,4]}}
                                                                   ^
NO COPY: R/BWI3_HR.R:1906:69: style: Closing curly-braces should always be on their own line, unless it's followed by an else.
            {if(jj==13) {x <- iv.bil.t[,5]} else {x <- iv.bil.t[,4]}}
                                                                    ^
NO COPY: R/BWI3_HR.R:1907:1: style: lines should not be more than 80 characters.
            #Zielg\u00f6\u00dfe y: ii = 1: Total; ii = 2 oder 3: Zeitbezug mPLkal
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1908:15: style: Place a space before left parenthesis, except in a function call.
            if(ii < 2) {y <- iv.bil.t[,jj]} else
              ^
NO COPY: R/BWI3_HR.R:1908:24: style: Opening curly braces should never go on their own line and should always be followed by a new line.
            if(ii < 2) {y <- iv.bil.t[,jj]} else
                       ^
NO COPY: R/BWI3_HR.R:1908:30: style: Words within variable and function names should be separated by '_' rather than '.'.
            if(ii < 2) {y <- iv.bil.t[,jj]} else
                             ^~~~~~~~
NO COPY: R/BWI3_HR.R:1908:40: style: Commas should always have a space after.
            if(ii < 2) {y <- iv.bil.t[,jj]} else
                                       ^
NO COPY: R/BWI3_HR.R:1908:43: style: Closing curly-braces should always be on their own line, unless it's followed by an else.
            if(ii < 2) {y <- iv.bil.t[,jj]} else
                                          ^
NO COPY: R/BWI3_HR.R:1909:15: style: Opening curly braces should never go on their own line and should always be followed by a new line.
              {y <- ifelse(iv.bil.t[,7]>0,iv.bil.t[,jj]/iv.bil.t[,7],0)}
              ^
NO COPY: R/BWI3_HR.R:1909:28: style: Words within variable and function names should be separated by '_' rather than '.'.
              {y <- ifelse(iv.bil.t[,7]>0,iv.bil.t[,jj]/iv.bil.t[,7],0)}
                           ^~~~~~~~
NO COPY: R/BWI3_HR.R:1909:38: style: Commas should always have a space after.
              {y <- ifelse(iv.bil.t[,7]>0,iv.bil.t[,jj]/iv.bil.t[,7],0)}
                                     ^
NO COPY: R/BWI3_HR.R:1909:40: style: Put spaces around all infix operators.
              {y <- ifelse(iv.bil.t[,7]>0,iv.bil.t[,jj]/iv.bil.t[,7],0)}
                                      ~^~
NO COPY: R/BWI3_HR.R:1909:43: style: Commas should always have a space after.
              {y <- ifelse(iv.bil.t[,7]>0,iv.bil.t[,jj]/iv.bil.t[,7],0)}
                                          ^
NO COPY: R/BWI3_HR.R:1909:43: style: Words within variable and function names should be separated by '_' rather than '.'.
              {y <- ifelse(iv.bil.t[,7]>0,iv.bil.t[,jj]/iv.bil.t[,7],0)}
                                          ^~~~~~~~
NO COPY: R/BWI3_HR.R:1909:53: style: Commas should always have a space after.
              {y <- ifelse(iv.bil.t[,7]>0,iv.bil.t[,jj]/iv.bil.t[,7],0)}
                                                    ^
NO COPY: R/BWI3_HR.R:1909:56: style: Put spaces around all infix operators.
              {y <- ifelse(iv.bil.t[,7]>0,iv.bil.t[,jj]/iv.bil.t[,7],0)}
                                                      ~^~
NO COPY: R/BWI3_HR.R:1909:57: style: Words within variable and function names should be separated by '_' rather than '.'.
              {y <- ifelse(iv.bil.t[,7]>0,iv.bil.t[,jj]/iv.bil.t[,7],0)}
                                                        ^~~~~~~~
NO COPY: R/BWI3_HR.R:1909:67: style: Commas should always have a space after.
              {y <- ifelse(iv.bil.t[,7]>0,iv.bil.t[,jj]/iv.bil.t[,7],0)}
                                                                  ^
NO COPY: R/BWI3_HR.R:1909:70: style: Commas should always have a space after.
              {y <- ifelse(iv.bil.t[,7]>0,iv.bil.t[,jj]/iv.bil.t[,7],0)}
                                                                     ^
NO COPY: R/BWI3_HR.R:1909:72: style: Closing curly-braces should always be on their own line, unless it's followed by an else.
              {y <- ifelse(iv.bil.t[,7]>0,iv.bil.t[,jj]/iv.bil.t[,7],0)}
                                                                       ^
NO COPY: R/BWI3_HR.R:1910:46: style: Commas should always have a space after.
            R.list <- r.variance.fun(cbind(x,y),nT)
                                             ^
NO COPY: R/BWI3_HR.R:1910:49: style: Commas should always have a space after.
            R.list <- r.variance.fun(cbind(x,y),nT)
                                                ^
NO COPY: R/BWI3_HR.R:1911:13: style: Words within variable and function names should be separated by '_' rather than '.'.
            VB.A.bagr.akl.dkl[iiii,1,i,j,k] <- R.list$R.xy*ifelse(ii<3,A,1)
            ^~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1911:36: style: Commas should always have a space after.
            VB.A.bagr.akl.dkl[iiii,1,i,j,k] <- R.list$R.xy*ifelse(ii<3,A,1)
                                   ^
NO COPY: R/BWI3_HR.R:1911:38: style: Commas should always have a space after.
            VB.A.bagr.akl.dkl[iiii,1,i,j,k] <- R.list$R.xy*ifelse(ii<3,A,1)
                                     ^
NO COPY: R/BWI3_HR.R:1911:40: style: Commas should always have a space after.
            VB.A.bagr.akl.dkl[iiii,1,i,j,k] <- R.list$R.xy*ifelse(ii<3,A,1)
                                       ^
NO COPY: R/BWI3_HR.R:1911:42: style: Commas should always have a space after.
            VB.A.bagr.akl.dkl[iiii,1,i,j,k] <- R.list$R.xy*ifelse(ii<3,A,1)
                                         ^
NO COPY: R/BWI3_HR.R:1911:59: style: Put spaces around all infix operators.
            VB.A.bagr.akl.dkl[iiii,1,i,j,k] <- R.list$R.xy*ifelse(ii<3,A,1)
                                                         ~^~
NO COPY: R/BWI3_HR.R:1911:69: style: Put spaces around all infix operators.
            VB.A.bagr.akl.dkl[iiii,1,i,j,k] <- R.list$R.xy*ifelse(ii<3,A,1)
                                                                   ~^~
NO COPY: R/BWI3_HR.R:1911:72: style: Commas should always have a space after.
            VB.A.bagr.akl.dkl[iiii,1,i,j,k] <- R.list$R.xy*ifelse(ii<3,A,1)
                                                                       ^
NO COPY: R/BWI3_HR.R:1911:74: style: Commas should always have a space after.
            VB.A.bagr.akl.dkl[iiii,1,i,j,k] <- R.list$R.xy*ifelse(ii<3,A,1)
                                                                         ^
NO COPY: R/BWI3_HR.R:1912:1: style: lines should not be more than 80 characters.
            VB.A.bagr.akl.dkl[iiii,2,i,j,k] <- sqrt(R.list$V.R.xy)*ifelse(ii<3,A,1)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1912:13: style: Words within variable and function names should be separated by '_' rather than '.'.
            VB.A.bagr.akl.dkl[iiii,2,i,j,k] <- sqrt(R.list$V.R.xy)*ifelse(ii<3,A,1)
            ^~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1912:36: style: Commas should always have a space after.
            VB.A.bagr.akl.dkl[iiii,2,i,j,k] <- sqrt(R.list$V.R.xy)*ifelse(ii<3,A,1)
                                   ^
NO COPY: R/BWI3_HR.R:1912:38: style: Commas should always have a space after.
            VB.A.bagr.akl.dkl[iiii,2,i,j,k] <- sqrt(R.list$V.R.xy)*ifelse(ii<3,A,1)
                                     ^
NO COPY: R/BWI3_HR.R:1912:40: style: Commas should always have a space after.
            VB.A.bagr.akl.dkl[iiii,2,i,j,k] <- sqrt(R.list$V.R.xy)*ifelse(ii<3,A,1)
                                       ^
NO COPY: R/BWI3_HR.R:1912:42: style: Commas should always have a space after.
            VB.A.bagr.akl.dkl[iiii,2,i,j,k] <- sqrt(R.list$V.R.xy)*ifelse(ii<3,A,1)
                                         ^
NO COPY: R/BWI3_HR.R:1912:60: style: Words within variable and function names should be separated by '_' rather than '.'.
            VB.A.bagr.akl.dkl[iiii,2,i,j,k] <- sqrt(R.list$V.R.xy)*ifelse(ii<3,A,1)
                                                           ^~~~~~
NO COPY: R/BWI3_HR.R:1912:67: style: Put spaces around all infix operators.
            VB.A.bagr.akl.dkl[iiii,2,i,j,k] <- sqrt(R.list$V.R.xy)*ifelse(ii<3,A,1)
                                                                 ~^~
NO COPY: R/BWI3_HR.R:1912:77: style: Put spaces around all infix operators.
            VB.A.bagr.akl.dkl[iiii,2,i,j,k] <- sqrt(R.list$V.R.xy)*ifelse(ii<3,A,1)
                                                                           ~^~
NO COPY: R/BWI3_HR.R:1912:80: style: Commas should always have a space after.
            VB.A.bagr.akl.dkl[iiii,2,i,j,k] <- sqrt(R.list$V.R.xy)*ifelse(ii<3,A,1)
                                                                               ^
NO COPY: R/BWI3_HR.R:1912:82: style: Commas should always have a space after.
            VB.A.bagr.akl.dkl[iiii,2,i,j,k] <- sqrt(R.list$V.R.xy)*ifelse(ii<3,A,1)
                                                                                 ^
NO COPY: R/BWI3_HR.R:1916:40: style: Words within variable and function names should be separated by '_' rather than '.'.
        R.list <- r.variance.fun(cbind(iv.bil.t[,2],iv.bil.t[,4]),nT)
                                       ^~~~~~~~
NO COPY: R/BWI3_HR.R:1916:50: style: Commas should always have a space after.
        R.list <- r.variance.fun(cbind(iv.bil.t[,2],iv.bil.t[,4]),nT)
                                                 ^
NO COPY: R/BWI3_HR.R:1916:53: style: Commas should always have a space after.
        R.list <- r.variance.fun(cbind(iv.bil.t[,2],iv.bil.t[,4]),nT)
                                                    ^
NO COPY: R/BWI3_HR.R:1916:53: style: Words within variable and function names should be separated by '_' rather than '.'.
        R.list <- r.variance.fun(cbind(iv.bil.t[,2],iv.bil.t[,4]),nT)
                                                    ^~~~~~~~
NO COPY: R/BWI3_HR.R:1916:63: style: Commas should always have a space after.
        R.list <- r.variance.fun(cbind(iv.bil.t[,2],iv.bil.t[,4]),nT)
                                                              ^
NO COPY: R/BWI3_HR.R:1916:67: style: Commas should always have a space after.
        R.list <- r.variance.fun(cbind(iv.bil.t[,2],iv.bil.t[,4]),nT)
                                                                  ^
NO COPY: R/BWI3_HR.R:1917:9: style: Variable and function names should be all lowercase.
        iVB.bagr.akl.dkl[13,1,i,j,k] <- R.list$R.xy*A
        ^~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1917:9: style: Words within variable and function names should be separated by '_' rather than '.'.
        iVB.bagr.akl.dkl[13,1,i,j,k] <- R.list$R.xy*A
        ^~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1917:29: style: Commas should always have a space after.
        iVB.bagr.akl.dkl[13,1,i,j,k] <- R.list$R.xy*A
                            ^
NO COPY: R/BWI3_HR.R:1917:31: style: Commas should always have a space after.
        iVB.bagr.akl.dkl[13,1,i,j,k] <- R.list$R.xy*A
                              ^
NO COPY: R/BWI3_HR.R:1917:33: style: Commas should always have a space after.
        iVB.bagr.akl.dkl[13,1,i,j,k] <- R.list$R.xy*A
                                ^
NO COPY: R/BWI3_HR.R:1917:35: style: Commas should always have a space after.
        iVB.bagr.akl.dkl[13,1,i,j,k] <- R.list$R.xy*A
                                  ^
NO COPY: R/BWI3_HR.R:1917:52: style: Put spaces around all infix operators.
        iVB.bagr.akl.dkl[13,1,i,j,k] <- R.list$R.xy*A
                                                  ~^~
NO COPY: R/BWI3_HR.R:1918:9: style: Variable and function names should be all lowercase.
        iVB.bagr.akl.dkl[13,2,i,j,k] <- sqrt(R.list$V.R.xy)*A
        ^~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1918:9: style: Words within variable and function names should be separated by '_' rather than '.'.
        iVB.bagr.akl.dkl[13,2,i,j,k] <- sqrt(R.list$V.R.xy)*A
        ^~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1918:29: style: Commas should always have a space after.
        iVB.bagr.akl.dkl[13,2,i,j,k] <- sqrt(R.list$V.R.xy)*A
                            ^
NO COPY: R/BWI3_HR.R:1918:31: style: Commas should always have a space after.
        iVB.bagr.akl.dkl[13,2,i,j,k] <- sqrt(R.list$V.R.xy)*A
                              ^
NO COPY: R/BWI3_HR.R:1918:33: style: Commas should always have a space after.
        iVB.bagr.akl.dkl[13,2,i,j,k] <- sqrt(R.list$V.R.xy)*A
                                ^
NO COPY: R/BWI3_HR.R:1918:35: style: Commas should always have a space after.
        iVB.bagr.akl.dkl[13,2,i,j,k] <- sqrt(R.list$V.R.xy)*A
                                  ^
NO COPY: R/BWI3_HR.R:1918:53: style: Words within variable and function names should be separated by '_' rather than '.'.
        iVB.bagr.akl.dkl[13,2,i,j,k] <- sqrt(R.list$V.R.xy)*A
                                                    ^~~~~~
NO COPY: R/BWI3_HR.R:1918:60: style: Put spaces around all infix operators.
        iVB.bagr.akl.dkl[13,2,i,j,k] <- sqrt(R.list$V.R.xy)*A
                                                          ~^~
NO COPY: R/BWI3_HR.R:1920:40: style: Words within variable and function names should be separated by '_' rather than '.'.
        R.list <- r.variance.fun(cbind(iv.bil.t[,2],iv.bil.t[,5]),nT)
                                       ^~~~~~~~
NO COPY: R/BWI3_HR.R:1920:50: style: Commas should always have a space after.
        R.list <- r.variance.fun(cbind(iv.bil.t[,2],iv.bil.t[,5]),nT)
                                                 ^
NO COPY: R/BWI3_HR.R:1920:53: style: Commas should always have a space after.
        R.list <- r.variance.fun(cbind(iv.bil.t[,2],iv.bil.t[,5]),nT)
                                                    ^
NO COPY: R/BWI3_HR.R:1920:53: style: Words within variable and function names should be separated by '_' rather than '.'.
        R.list <- r.variance.fun(cbind(iv.bil.t[,2],iv.bil.t[,5]),nT)
                                                    ^~~~~~~~
NO COPY: R/BWI3_HR.R:1920:63: style: Commas should always have a space after.
        R.list <- r.variance.fun(cbind(iv.bil.t[,2],iv.bil.t[,5]),nT)
                                                              ^
NO COPY: R/BWI3_HR.R:1920:67: style: Commas should always have a space after.
        R.list <- r.variance.fun(cbind(iv.bil.t[,2],iv.bil.t[,5]),nT)
                                                                  ^
NO COPY: R/BWI3_HR.R:1921:9: style: Variable and function names should be all lowercase.
        iVB.bagr.akl.dkl[14,1,i,j,k] <- R.list$R.xy*A
        ^~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1921:9: style: Words within variable and function names should be separated by '_' rather than '.'.
        iVB.bagr.akl.dkl[14,1,i,j,k] <- R.list$R.xy*A
        ^~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1921:29: style: Commas should always have a space after.
        iVB.bagr.akl.dkl[14,1,i,j,k] <- R.list$R.xy*A
                            ^
NO COPY: R/BWI3_HR.R:1921:31: style: Commas should always have a space after.
        iVB.bagr.akl.dkl[14,1,i,j,k] <- R.list$R.xy*A
                              ^
NO COPY: R/BWI3_HR.R:1921:33: style: Commas should always have a space after.
        iVB.bagr.akl.dkl[14,1,i,j,k] <- R.list$R.xy*A
                                ^
NO COPY: R/BWI3_HR.R:1921:35: style: Commas should always have a space after.
        iVB.bagr.akl.dkl[14,1,i,j,k] <- R.list$R.xy*A
                                  ^
NO COPY: R/BWI3_HR.R:1921:52: style: Put spaces around all infix operators.
        iVB.bagr.akl.dkl[14,1,i,j,k] <- R.list$R.xy*A
                                                  ~^~
NO COPY: R/BWI3_HR.R:1922:9: style: Variable and function names should be all lowercase.
        iVB.bagr.akl.dkl[14,2,i,j,k] <- sqrt(R.list$V.R.xy)*A
        ^~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1922:9: style: Words within variable and function names should be separated by '_' rather than '.'.
        iVB.bagr.akl.dkl[14,2,i,j,k] <- sqrt(R.list$V.R.xy)*A
        ^~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1922:29: style: Commas should always have a space after.
        iVB.bagr.akl.dkl[14,2,i,j,k] <- sqrt(R.list$V.R.xy)*A
                            ^
NO COPY: R/BWI3_HR.R:1922:31: style: Commas should always have a space after.
        iVB.bagr.akl.dkl[14,2,i,j,k] <- sqrt(R.list$V.R.xy)*A
                              ^
NO COPY: R/BWI3_HR.R:1922:33: style: Commas should always have a space after.
        iVB.bagr.akl.dkl[14,2,i,j,k] <- sqrt(R.list$V.R.xy)*A
                                ^
NO COPY: R/BWI3_HR.R:1922:35: style: Commas should always have a space after.
        iVB.bagr.akl.dkl[14,2,i,j,k] <- sqrt(R.list$V.R.xy)*A
                                  ^
NO COPY: R/BWI3_HR.R:1922:53: style: Words within variable and function names should be separated by '_' rather than '.'.
        iVB.bagr.akl.dkl[14,2,i,j,k] <- sqrt(R.list$V.R.xy)*A
                                                    ^~~~~~
NO COPY: R/BWI3_HR.R:1922:60: style: Put spaces around all infix operators.
        iVB.bagr.akl.dkl[14,2,i,j,k] <- sqrt(R.list$V.R.xy)*A
                                                          ~^~
NO COPY: R/BWI3_HR.R:1927:21: style: Words within variable and function names should be separated by '_' rather than '.'.
        x <- ifelse(iv.bil.t[,6]>0,iv.bil.t[,3],0)
                    ^~~~~~~~
NO COPY: R/BWI3_HR.R:1927:31: style: Commas should always have a space after.
        x <- ifelse(iv.bil.t[,6]>0,iv.bil.t[,3],0)
                              ^
NO COPY: R/BWI3_HR.R:1927:33: style: Put spaces around all infix operators.
        x <- ifelse(iv.bil.t[,6]>0,iv.bil.t[,3],0)
                               ~^~
NO COPY: R/BWI3_HR.R:1927:36: style: Commas should always have a space after.
        x <- ifelse(iv.bil.t[,6]>0,iv.bil.t[,3],0)
                                   ^
NO COPY: R/BWI3_HR.R:1927:36: style: Words within variable and function names should be separated by '_' rather than '.'.
        x <- ifelse(iv.bil.t[,6]>0,iv.bil.t[,3],0)
                                   ^~~~~~~~
NO COPY: R/BWI3_HR.R:1927:46: style: Commas should always have a space after.
        x <- ifelse(iv.bil.t[,6]>0,iv.bil.t[,3],0)
                                             ^
NO COPY: R/BWI3_HR.R:1927:49: style: Commas should always have a space after.
        x <- ifelse(iv.bil.t[,6]>0,iv.bil.t[,3],0)
                                                ^
NO COPY: R/BWI3_HR.R:1928:42: style: Commas should always have a space after.
        R.list <- r.variance.fun(cbind(x,iv.bil.t[,3]*iv.bil.t[,6]),nT)
                                         ^
NO COPY: R/BWI3_HR.R:1928:42: style: Words within variable and function names should be separated by '_' rather than '.'.
        R.list <- r.variance.fun(cbind(x,iv.bil.t[,3]*iv.bil.t[,6]),nT)
                                         ^~~~~~~~
NO COPY: R/BWI3_HR.R:1928:52: style: Commas should always have a space after.
        R.list <- r.variance.fun(cbind(x,iv.bil.t[,3]*iv.bil.t[,6]),nT)
                                                   ^
NO COPY: R/BWI3_HR.R:1928:54: style: Put spaces around all infix operators.
        R.list <- r.variance.fun(cbind(x,iv.bil.t[,3]*iv.bil.t[,6]),nT)
                                                    ~^~
NO COPY: R/BWI3_HR.R:1928:55: style: Words within variable and function names should be separated by '_' rather than '.'.
        R.list <- r.variance.fun(cbind(x,iv.bil.t[,3]*iv.bil.t[,6]),nT)
                                                      ^~~~~~~~
NO COPY: R/BWI3_HR.R:1928:65: style: Commas should always have a space after.
        R.list <- r.variance.fun(cbind(x,iv.bil.t[,3]*iv.bil.t[,6]),nT)
                                                                ^
NO COPY: R/BWI3_HR.R:1928:69: style: Commas should always have a space after.
        R.list <- r.variance.fun(cbind(x,iv.bil.t[,3]*iv.bil.t[,6]),nT)
                                                                    ^
NO COPY: R/BWI3_HR.R:1929:9: style: Variable and function names should be all lowercase.
        iVB.bagr.akl.dkl[15,1,i,j,k] <- R.list$R.xy
        ^~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1929:9: style: Words within variable and function names should be separated by '_' rather than '.'.
        iVB.bagr.akl.dkl[15,1,i,j,k] <- R.list$R.xy
        ^~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1929:29: style: Commas should always have a space after.
        iVB.bagr.akl.dkl[15,1,i,j,k] <- R.list$R.xy
                            ^
NO COPY: R/BWI3_HR.R:1929:31: style: Commas should always have a space after.
        iVB.bagr.akl.dkl[15,1,i,j,k] <- R.list$R.xy
                              ^
NO COPY: R/BWI3_HR.R:1929:33: style: Commas should always have a space after.
        iVB.bagr.akl.dkl[15,1,i,j,k] <- R.list$R.xy
                                ^
NO COPY: R/BWI3_HR.R:1929:35: style: Commas should always have a space after.
        iVB.bagr.akl.dkl[15,1,i,j,k] <- R.list$R.xy
                                  ^
NO COPY: R/BWI3_HR.R:1930:9: style: Variable and function names should be all lowercase.
        iVB.bagr.akl.dkl[15,2,i,j,k] <- sqrt(R.list$V.R.xy)
        ^~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1930:9: style: Words within variable and function names should be separated by '_' rather than '.'.
        iVB.bagr.akl.dkl[15,2,i,j,k] <- sqrt(R.list$V.R.xy)
        ^~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1930:29: style: Commas should always have a space after.
        iVB.bagr.akl.dkl[15,2,i,j,k] <- sqrt(R.list$V.R.xy)
                            ^
NO COPY: R/BWI3_HR.R:1930:31: style: Commas should always have a space after.
        iVB.bagr.akl.dkl[15,2,i,j,k] <- sqrt(R.list$V.R.xy)
                              ^
NO COPY: R/BWI3_HR.R:1930:33: style: Commas should always have a space after.
        iVB.bagr.akl.dkl[15,2,i,j,k] <- sqrt(R.list$V.R.xy)
                                ^
NO COPY: R/BWI3_HR.R:1930:35: style: Commas should always have a space after.
        iVB.bagr.akl.dkl[15,2,i,j,k] <- sqrt(R.list$V.R.xy)
                                  ^
NO COPY: R/BWI3_HR.R:1930:53: style: Words within variable and function names should be separated by '_' rather than '.'.
        iVB.bagr.akl.dkl[15,2,i,j,k] <- sqrt(R.list$V.R.xy)
                                                    ^~~~~~
NO COPY: R/BWI3_HR.R:1933:21: style: Words within variable and function names should be separated by '_' rather than '.'.
        x <- ifelse(iv.bil.t[,7]>0,iv.bil.t[,3],0)
                    ^~~~~~~~
NO COPY: R/BWI3_HR.R:1933:31: style: Commas should always have a space after.
        x <- ifelse(iv.bil.t[,7]>0,iv.bil.t[,3],0)
                              ^
NO COPY: R/BWI3_HR.R:1933:33: style: Put spaces around all infix operators.
        x <- ifelse(iv.bil.t[,7]>0,iv.bil.t[,3],0)
                               ~^~
NO COPY: R/BWI3_HR.R:1933:36: style: Commas should always have a space after.
        x <- ifelse(iv.bil.t[,7]>0,iv.bil.t[,3],0)
                                   ^
NO COPY: R/BWI3_HR.R:1933:36: style: Words within variable and function names should be separated by '_' rather than '.'.
        x <- ifelse(iv.bil.t[,7]>0,iv.bil.t[,3],0)
                                   ^~~~~~~~
NO COPY: R/BWI3_HR.R:1933:46: style: Commas should always have a space after.
        x <- ifelse(iv.bil.t[,7]>0,iv.bil.t[,3],0)
                                             ^
NO COPY: R/BWI3_HR.R:1933:49: style: Commas should always have a space after.
        x <- ifelse(iv.bil.t[,7]>0,iv.bil.t[,3],0)
                                                ^
NO COPY: R/BWI3_HR.R:1934:42: style: Commas should always have a space after.
        R.list <- r.variance.fun(cbind(x,iv.bil.t[,3]*iv.bil.t[,7]),nT)
                                         ^
NO COPY: R/BWI3_HR.R:1934:42: style: Words within variable and function names should be separated by '_' rather than '.'.
        R.list <- r.variance.fun(cbind(x,iv.bil.t[,3]*iv.bil.t[,7]),nT)
                                         ^~~~~~~~
NO COPY: R/BWI3_HR.R:1934:52: style: Commas should always have a space after.
        R.list <- r.variance.fun(cbind(x,iv.bil.t[,3]*iv.bil.t[,7]),nT)
                                                   ^
NO COPY: R/BWI3_HR.R:1934:54: style: Put spaces around all infix operators.
        R.list <- r.variance.fun(cbind(x,iv.bil.t[,3]*iv.bil.t[,7]),nT)
                                                    ~^~
NO COPY: R/BWI3_HR.R:1934:55: style: Words within variable and function names should be separated by '_' rather than '.'.
        R.list <- r.variance.fun(cbind(x,iv.bil.t[,3]*iv.bil.t[,7]),nT)
                                                      ^~~~~~~~
NO COPY: R/BWI3_HR.R:1934:65: style: Commas should always have a space after.
        R.list <- r.variance.fun(cbind(x,iv.bil.t[,3]*iv.bil.t[,7]),nT)
                                                                ^
NO COPY: R/BWI3_HR.R:1934:69: style: Commas should always have a space after.
        R.list <- r.variance.fun(cbind(x,iv.bil.t[,3]*iv.bil.t[,7]),nT)
                                                                    ^
NO COPY: R/BWI3_HR.R:1935:9: style: Words within variable and function names should be separated by '_' rather than '.'.
        VB.A.bagr.akl.dkl[13,1,i,j,k] <- R.list$R.xy
        ^~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1935:30: style: Commas should always have a space after.
        VB.A.bagr.akl.dkl[13,1,i,j,k] <- R.list$R.xy
                             ^
NO COPY: R/BWI3_HR.R:1935:32: style: Commas should always have a space after.
        VB.A.bagr.akl.dkl[13,1,i,j,k] <- R.list$R.xy
                               ^
NO COPY: R/BWI3_HR.R:1935:34: style: Commas should always have a space after.
        VB.A.bagr.akl.dkl[13,1,i,j,k] <- R.list$R.xy
                                 ^
NO COPY: R/BWI3_HR.R:1935:36: style: Commas should always have a space after.
        VB.A.bagr.akl.dkl[13,1,i,j,k] <- R.list$R.xy
                                   ^
NO COPY: R/BWI3_HR.R:1936:9: style: Words within variable and function names should be separated by '_' rather than '.'.
        VB.A.bagr.akl.dkl[13,2,i,j,k] <- sqrt(R.list$V.R.xy)
        ^~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1936:30: style: Commas should always have a space after.
        VB.A.bagr.akl.dkl[13,2,i,j,k] <- sqrt(R.list$V.R.xy)
                             ^
NO COPY: R/BWI3_HR.R:1936:32: style: Commas should always have a space after.
        VB.A.bagr.akl.dkl[13,2,i,j,k] <- sqrt(R.list$V.R.xy)
                               ^
NO COPY: R/BWI3_HR.R:1936:34: style: Commas should always have a space after.
        VB.A.bagr.akl.dkl[13,2,i,j,k] <- sqrt(R.list$V.R.xy)
                                 ^
NO COPY: R/BWI3_HR.R:1936:36: style: Commas should always have a space after.
        VB.A.bagr.akl.dkl[13,2,i,j,k] <- sqrt(R.list$V.R.xy)
                                   ^
NO COPY: R/BWI3_HR.R:1936:54: style: Words within variable and function names should be separated by '_' rather than '.'.
        VB.A.bagr.akl.dkl[13,2,i,j,k] <- sqrt(R.list$V.R.xy)
                                                     ^~~~~~
NO COPY: R/BWI3_HR.R:1942:4: style: Commented code should be removed.
  #AKL-Labels
   ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:1943:34: style: Commas should always have a space after.
  akl.lab <- akl.lab.fun(A.klass,A.k)
                                 ^
NO COPY: R/BWI3_HR.R:1945:4: style: Commented code should be removed.
  #DKL-Labels
   ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:1946:34: style: Commas should always have a space after.
  dkl.lab <- dkl.lab.fun(D.klass,D.k) #k\u00e4/16.07.14
                                 ^
NO COPY: R/BWI3_HR.R:1947:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: R/BWI3_HR.R:1949:20: style: Commas should always have a space after.
  a <- regexpr("/",baeume.3$Bemerk[baeume.3$STP==0][1],fixed=T)
                   ^
NO COPY: R/BWI3_HR.R:1949:48: style: Put spaces around all infix operators.
  a <- regexpr("/",baeume.3$Bemerk[baeume.3$STP==0][1],fixed=T)
                                              ~^~~
NO COPY: R/BWI3_HR.R:1949:56: style: Commas should always have a space after.
  a <- regexpr("/",baeume.3$Bemerk[baeume.3$STP==0][1],fixed=T)
                                                       ^
NO COPY: R/BWI3_HR.R:1949:61: style: Put spaces around all infix operators.
  a <- regexpr("/",baeume.3$Bemerk[baeume.3$STP==0][1],fixed=T)
                                                           ~^~
NO COPY: R/BWI3_HR.R:1950:55: style: Put spaces around all infix operators.
  b <- nchar(as.character(baeume.3$Bemerk[baeume.3$STP==0][1]))
                                                     ~^~~
NO COPY: R/BWI3_HR.R:1951:1: style: lines should not be more than 80 characters.
  version.baeume.b  <- substr(as.character(baeume.3$Bemerk[baeume.3$STP==0][1]),a,b)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1951:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  version.baeume.b  <- substr(as.character(baeume.3$Bemerk[baeume.3$STP==0][1]),a,b)
  ^~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1951:3: warning: local variable 'version.baeume.b' assigned but may not be used
  version.baeume.b  <- substr(as.character(baeume.3$Bemerk[baeume.3$STP==0][1]),a,b)
  ^~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1951:72: style: Put spaces around all infix operators.
  version.baeume.b  <- substr(as.character(baeume.3$Bemerk[baeume.3$STP==0][1]),a,b)
                                                                      ~^~~
NO COPY: R/BWI3_HR.R:1951:81: style: Commas should always have a space after.
  version.baeume.b  <- substr(as.character(baeume.3$Bemerk[baeume.3$STP==0][1]),a,b)
                                                                                ^
NO COPY: R/BWI3_HR.R:1951:83: style: Commas should always have a space after.
  version.baeume.b  <- substr(as.character(baeume.3$Bemerk[baeume.3$STP==0][1]),a,b)
                                                                                  ^
NO COPY: R/BWI3_HR.R:1952:20: style: Put spaces around all infix operators.
  Log <- list(Datum=Sys.time(),
                  ~^~
NO COPY: R/BWI3_HR.R:1953:1: style: lines should not be more than 80 characters.
      Version.baeume.b=substr(as.character(baeume.3$Bemerk[baeume.3$STP==0][1]),a,b))
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1953:23: style: Put spaces around all infix operators.
      Version.baeume.b=substr(as.character(baeume.3$Bemerk[baeume.3$STP==0][1]),a,b))
                     ~^~
NO COPY: R/BWI3_HR.R:1953:72: style: Put spaces around all infix operators.
      Version.baeume.b=substr(as.character(baeume.3$Bemerk[baeume.3$STP==0][1]),a,b))
                                                                      ~^~~
NO COPY: R/BWI3_HR.R:1953:81: style: Commas should always have a space after.
      Version.baeume.b=substr(as.character(baeume.3$Bemerk[baeume.3$STP==0][1]),a,b))
                                                                                ^
NO COPY: R/BWI3_HR.R:1953:83: style: Commas should always have a space after.
      Version.baeume.b=substr(as.character(baeume.3$Bemerk[baeume.3$STP==0][1]),a,b))
                                                                                  ^
NO COPY: R/BWI3_HR.R:1955:18: style: Put spaces around all infix operators.
  return(list(Log=Log, Stratum=auswahl,
                ~^~
NO COPY: R/BWI3_HR.R:1955:31: style: Put spaces around all infix operators.
  return(list(Log=Log, Stratum=auswahl,
                             ~^~
NO COPY: R/BWI3_HR.R:1956:18: style: Put spaces around all infix operators.
              HBF=HBF, se_HBF=se.HBF,
                ~^~
NO COPY: R/BWI3_HR.R:1956:30: style: Put spaces around all infix operators.
              HBF=HBF, se_HBF=se.HBF,
                            ~^~
NO COPY: R/BWI3_HR.R:1957:24: style: Put spaces around all infix operators.
              Attribute=c("V_DhmR", "V_DhmR_HB", "V_EoR", "oiB",
                      ~^~
NO COPY: R/BWI3_HR.R:1959:1: style: lines should not be more than 80 characters.
                        "V_DhmR/ha/J", "V_DhmR_HB/ha/J", "V_EoR/ha/J", "oiB/ha/J"),
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1960:33: style: Put spaces around all infix operators.
              "Gr\u00f6\u00dfen"=c("Wert","Standardfehler"),
                               ~^~
NO COPY: R/BWI3_HR.R:1960:43: style: Commas should always have a space after.
              "Gr\u00f6\u00dfen"=c("Wert","Standardfehler"),
                                          ^
NO COPY: R/BWI3_HR.R:1963:34: style: Variable and function names should be all lowercase.
              iVB.bagr.akl.dkl = iVB.bagr.akl.dkl,
                                 ^~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1963:34: style: Words within variable and function names should be separated by '_' rather than '.'.
              iVB.bagr.akl.dkl = iVB.bagr.akl.dkl,
                                 ^~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:1964:35: style: Words within variable and function names should be separated by '_' rather than '.'.
              VB.A.bagr.akl.dkl = VB.A.bagr.akl.dkl))
                                  ^~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2023:61: style: Commas should always have a space after.
iVB.ew.bagrupp.akl.dkl.stratum.fun.2g <- function(baeume.23,baeume.3,
                                                            ^
NO COPY: R/BWI3_HR.R:2024:20: style: Commas should always have a space after.
          BA.grupp,A.klass,D.klass,auswahl,A,
                   ^
NO COPY: R/BWI3_HR.R:2024:28: style: Commas should always have a space after.
          BA.grupp,A.klass,D.klass,auswahl,A,
                           ^
NO COPY: R/BWI3_HR.R:2024:36: style: Commas should always have a space after.
          BA.grupp,A.klass,D.klass,auswahl,A,
                                   ^
NO COPY: R/BWI3_HR.R:2024:44: style: Commas should always have a space after.
          BA.grupp,A.klass,D.klass,auswahl,A,
                                           ^
NO COPY: R/BWI3_HR.R:2033:4: style: Commented code should be removed.
  #auswahl$Begehbar=1; auswahl$Wa=c(1:3)
   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2034:4: style: Commented code should be removed.
  #ecken.2.s <- stratum.fun(auswahl,ecken.2)
   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2036:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  ecken.2.s <- stratum.fun(list(Wa=c(1:3),Begehbar=1),ecken.2)
  ^~~~~~~~~
NO COPY: R/BWI3_HR.R:2036:35: style: Put spaces around all infix operators.
  ecken.2.s <- stratum.fun(list(Wa=c(1:3),Begehbar=1),ecken.2)
                                 ~^~
NO COPY: R/BWI3_HR.R:2036:43: style: Commas should always have a space after.
  ecken.2.s <- stratum.fun(list(Wa=c(1:3),Begehbar=1),ecken.2)
                                          ^
NO COPY: R/BWI3_HR.R:2036:51: style: Put spaces around all infix operators.
  ecken.2.s <- stratum.fun(list(Wa=c(1:3),Begehbar=1),ecken.2)
                                                 ~^~
NO COPY: R/BWI3_HR.R:2036:55: style: Commas should always have a space after.
  ecken.2.s <- stratum.fun(list(Wa=c(1:3),Begehbar=1),ecken.2)
                                                      ^
NO COPY: R/BWI3_HR.R:2038:13: style: Use <-, not =, for assignment.
  auswahl$Wa=c(3,5)
            ^
NO COPY: R/BWI3_HR.R:2038:13: style: Put spaces around all infix operators.
  auswahl$Wa=c(3,5)
           ~^~
NO COPY: R/BWI3_HR.R:2038:18: style: Commas should always have a space after.
  auswahl$Wa=c(3,5)
                 ^
NO COPY: R/BWI3_HR.R:2039:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  ecken.3.s <- stratum.fun(auswahl,ecken.3)
  ^~~~~~~~~
NO COPY: R/BWI3_HR.R:2039:36: style: Commas should always have a space after.
  ecken.3.s <- stratum.fun(auswahl,ecken.3)
                                   ^
NO COPY: R/BWI3_HR.R:2041:4: style: Commented code should be removed.
  #A <- 3575148 #ha
   ^~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2043:24: style: Commas should always have a space after.
  nT <- length(trakte[,1])
                       ^
NO COPY: R/BWI3_HR.R:2046:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  ecken.23.hb <- merge(
  ^~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2047:7: style: Words within variable and function names should be separated by '_' rather than '.'.
      ecken.3.s[TRUE,  c("TNr", "ENr")],
      ^~~~~~~~~
NO COPY: R/BWI3_HR.R:2048:7: style: Words within variable and function names should be separated by '_' rather than '.'.
      ecken.2.s[TRUE, c("TNr", "ENr")],
      ^~~~~~~~~
NO COPY: R/BWI3_HR.R:2049:9: style: Put spaces around all infix operators.
      by=c("TNr","ENr"))
       ~^~
NO COPY: R/BWI3_HR.R:2049:18: style: Commas should always have a space after.
      by=c("TNr","ENr"))
                 ^
NO COPY: R/BWI3_HR.R:2050:1: style: lines should not be more than 80 characters.
  ecken.23.hb <- merge(ecken.23.hb,ecken.3[TRUE, c("TNr", "ENr", "PL", "PLkal")],
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2050:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  ecken.23.hb <- merge(ecken.23.hb,ecken.3[TRUE, c("TNr", "ENr", "PL", "PLkal")],
  ^~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2050:24: style: Words within variable and function names should be separated by '_' rather than '.'.
  ecken.23.hb <- merge(ecken.23.hb,ecken.3[TRUE, c("TNr", "ENr", "PL", "PLkal")],
                       ^~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2050:36: style: Commas should always have a space after.
  ecken.23.hb <- merge(ecken.23.hb,ecken.3[TRUE, c("TNr", "ENr", "PL", "PLkal")],
                                   ^
NO COPY: R/BWI3_HR.R:2051:9: style: Put spaces around all infix operators.
      by=c("TNr","ENr"))
       ~^~
NO COPY: R/BWI3_HR.R:2051:18: style: Commas should always have a space after.
      by=c("TNr","ENr"))
                 ^
NO COPY: R/BWI3_HR.R:2064:1: style: lines should not be more than 80 characters.
  #Aus Komaptibilit\u00e4tsgr\u00fcnden wird Attribut-Name "bagr" auf "BaGr" ge\u00e4ndert
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2069:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  baeume.3.s <- merge(baeume.3[TRUE, c("TNr", "ENr", "STP", "BNr", "Entf", "Pk",
  ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:2070:77: style: Trailing whitespace is superfluous.
                                       "BA", "Alt1", "Alt2", "BHD1", "BHD2", 
                                                                            ^
NO COPY: R/BWI3_HR.R:2071:76: style: Trailing whitespace is superfluous.
                                       "D031", "D032", "H1", "H2", "VolV1", 
                                                                           ^
NO COPY: R/BWI3_HR.R:2072:1: style: lines should not be more than 80 characters.
                                       "VolV2", "VolE1", "VolE2", "oiB1", "oiB2", 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2072:82: style: Trailing whitespace is superfluous.
                                       "VolV2", "VolE1", "VolE2", "oiB1", "oiB2", 
                                                                                 ^
NO COPY: R/BWI3_HR.R:2077:1: style: lines should not be more than 80 characters.
  baeume.2.s <- merge(baeume.23[TRUE, c("TNr", "ENr", "STP", "BNr", "Entf", "Pk",
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2077:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  baeume.2.s <- merge(baeume.23[TRUE, c("TNr", "ENr", "STP", "BNr", "Entf", "Pk",
  ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:2078:78: style: Trailing whitespace is superfluous.
                                        "BA", "Alt1", "Alt2", "BHD1", "BHD2", 
                                                                             ^
NO COPY: R/BWI3_HR.R:2079:77: style: Trailing whitespace is superfluous.
                                        "D031", "D032", "H1", "H2", "VolV1", 
                                                                            ^
NO COPY: R/BWI3_HR.R:2080:75: style: Trailing whitespace is superfluous.
                                        "VolV2", "VolE1", "VolE2", "oiB1", 
                                                                          ^
NO COPY: R/BWI3_HR.R:2086:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  baeume.3.s <- merge(baeume.3.s,ecken.23.hb,by=c("TNr","ENr"))
  ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:2086:23: style: Words within variable and function names should be separated by '_' rather than '.'.
  baeume.3.s <- merge(baeume.3.s,ecken.23.hb,by=c("TNr","ENr"))
                      ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:2086:34: style: Commas should always have a space after.
  baeume.3.s <- merge(baeume.3.s,ecken.23.hb,by=c("TNr","ENr"))
                                 ^
NO COPY: R/BWI3_HR.R:2086:34: style: Words within variable and function names should be separated by '_' rather than '.'.
  baeume.3.s <- merge(baeume.3.s,ecken.23.hb,by=c("TNr","ENr"))
                                 ^~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2086:46: style: Commas should always have a space after.
  baeume.3.s <- merge(baeume.3.s,ecken.23.hb,by=c("TNr","ENr"))
                                             ^
NO COPY: R/BWI3_HR.R:2086:48: style: Put spaces around all infix operators.
  baeume.3.s <- merge(baeume.3.s,ecken.23.hb,by=c("TNr","ENr"))
                                              ~^~
NO COPY: R/BWI3_HR.R:2086:57: style: Commas should always have a space after.
  baeume.3.s <- merge(baeume.3.s,ecken.23.hb,by=c("TNr","ENr"))
                                                        ^
NO COPY: R/BWI3_HR.R:2087:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  baeume.2.s <- merge(baeume.2.s,ecken.23.hb,by=c("TNr","ENr"))
  ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:2087:23: style: Words within variable and function names should be separated by '_' rather than '.'.
  baeume.2.s <- merge(baeume.2.s,ecken.23.hb,by=c("TNr","ENr"))
                      ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:2087:34: style: Commas should always have a space after.
  baeume.2.s <- merge(baeume.2.s,ecken.23.hb,by=c("TNr","ENr"))
                                 ^
NO COPY: R/BWI3_HR.R:2087:34: style: Words within variable and function names should be separated by '_' rather than '.'.
  baeume.2.s <- merge(baeume.2.s,ecken.23.hb,by=c("TNr","ENr"))
                                 ^~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2087:46: style: Commas should always have a space after.
  baeume.2.s <- merge(baeume.2.s,ecken.23.hb,by=c("TNr","ENr"))
                                             ^
NO COPY: R/BWI3_HR.R:2087:48: style: Put spaces around all infix operators.
  baeume.2.s <- merge(baeume.2.s,ecken.23.hb,by=c("TNr","ENr"))
                                              ~^~
NO COPY: R/BWI3_HR.R:2087:57: style: Commas should always have a space after.
  baeume.2.s <- merge(baeume.2.s,ecken.23.hb,by=c("TNr","ENr"))
                                                        ^
NO COPY: R/BWI3_HR.R:2090:7: style: Words within variable and function names should be separated by '_' rather than '.'.
  sum(baeume.3.s$StFl2)/10000; sum(baeume.2.s$StFl1)/10000
      ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:2090:18: style: Variable and function names should be all lowercase.
  sum(baeume.3.s$StFl2)/10000; sum(baeume.2.s$StFl1)/10000
                 ^~~~~
NO COPY: R/BWI3_HR.R:2090:24: style: Put spaces around all infix operators.
  sum(baeume.3.s$StFl2)/10000; sum(baeume.2.s$StFl1)/10000
                      ~^~
NO COPY: R/BWI3_HR.R:2090:36: style: Words within variable and function names should be separated by '_' rather than '.'.
  sum(baeume.3.s$StFl2)/10000; sum(baeume.2.s$StFl1)/10000
                                   ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:2090:47: style: Variable and function names should be all lowercase.
  sum(baeume.3.s$StFl2)/10000; sum(baeume.2.s$StFl1)/10000
                                              ^~~~~
NO COPY: R/BWI3_HR.R:2090:53: style: Put spaces around all infix operators.
  sum(baeume.3.s$StFl2)/10000; sum(baeume.2.s$StFl1)/10000
                                                   ~^~
NO COPY: R/BWI3_HR.R:2094:29: style: Words within variable and function names should be separated by '_' rather than '.'.
  hb.te <- stats::aggregate(baeume.3.s$StFl2/10000,
                            ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:2094:40: style: Variable and function names should be all lowercase.
  hb.te <- stats::aggregate(baeume.3.s$StFl2/10000,
                                       ^~~~~
NO COPY: R/BWI3_HR.R:2094:45: style: Put spaces around all infix operators.
  hb.te <- stats::aggregate(baeume.3.s$StFl2/10000,
                                           ~^~
NO COPY: R/BWI3_HR.R:2095:27: style: Put spaces around all infix operators.
                        by=list(baeume.3.s$TNr,baeume.3.s$ENr),sum)
                         ~^~
NO COPY: R/BWI3_HR.R:2095:33: style: Words within variable and function names should be separated by '_' rather than '.'.
                        by=list(baeume.3.s$TNr,baeume.3.s$ENr),sum)
                                ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:2095:48: style: Commas should always have a space after.
                        by=list(baeume.3.s$TNr,baeume.3.s$ENr),sum)
                                               ^
NO COPY: R/BWI3_HR.R:2095:48: style: Words within variable and function names should be separated by '_' rather than '.'.
                        by=list(baeume.3.s$TNr,baeume.3.s$ENr),sum)
                                               ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:2095:64: style: Commas should always have a space after.
                        by=list(baeume.3.s$TNr,baeume.3.s$ENr),sum)
                                                               ^
NO COPY: R/BWI3_HR.R:2096:27: style: Commas should always have a space after.
  names(hb.te) <- c("TNr","ENr","m_HB_s")
                          ^
NO COPY: R/BWI3_HR.R:2096:33: style: Commas should always have a space after.
  names(hb.te) <- c("TNr","ENr","m_HB_s")
                                ^
NO COPY: R/BWI3_HR.R:2097:24: style: Commas should always have a space after.
  ecken <- merge(hb.te,ecken.23.hb[TRUE, c("TNr", "ENr", "PL", "PLkal")],
                       ^
NO COPY: R/BWI3_HR.R:2097:24: style: Words within variable and function names should be separated by '_' rather than '.'.
  ecken <- merge(hb.te,ecken.23.hb[TRUE, c("TNr", "ENr", "PL", "PLkal")],
                       ^~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2098:23: style: Put spaces around all infix operators.
                    by=c("TNr","ENr") )
                     ~^~
NO COPY: R/BWI3_HR.R:2098:32: style: Commas should always have a space after.
                    by=c("TNr","ENr") )
                               ^
NO COPY: R/BWI3_HR.R:2100:28: style: Words within variable and function names should be separated by '_' rather than '.'.
  hb.t <- stats::aggregate(baeume.3.s$StFl2/10000,by=list(baeume.3.s$TNr),sum)
                           ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:2100:39: style: Variable and function names should be all lowercase.
  hb.t <- stats::aggregate(baeume.3.s$StFl2/10000,by=list(baeume.3.s$TNr),sum)
                                      ^~~~~
NO COPY: R/BWI3_HR.R:2100:44: style: Put spaces around all infix operators.
  hb.t <- stats::aggregate(baeume.3.s$StFl2/10000,by=list(baeume.3.s$TNr),sum)
                                          ~^~
NO COPY: R/BWI3_HR.R:2100:51: style: Commas should always have a space after.
  hb.t <- stats::aggregate(baeume.3.s$StFl2/10000,by=list(baeume.3.s$TNr),sum)
                                                  ^
NO COPY: R/BWI3_HR.R:2100:53: style: Put spaces around all infix operators.
  hb.t <- stats::aggregate(baeume.3.s$StFl2/10000,by=list(baeume.3.s$TNr),sum)
                                                   ~^~
NO COPY: R/BWI3_HR.R:2100:59: style: Words within variable and function names should be separated by '_' rather than '.'.
  hb.t <- stats::aggregate(baeume.3.s$StFl2/10000,by=list(baeume.3.s$TNr),sum)
                                                          ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:2100:75: style: Commas should always have a space after.
  hb.t <- stats::aggregate(baeume.3.s$StFl2/10000,by=list(baeume.3.s$TNr),sum)
                                                                          ^
NO COPY: R/BWI3_HR.R:2101:26: style: Commas should always have a space after.
  names(hb.t) <- c("TNr","m_HB_s")
                         ^
NO COPY: R/BWI3_HR.R:2102:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  hb.t.s <- merge(trakte,hb.t,by=c("TNr"),all.x=T)
  ^~~~~~
NO COPY: R/BWI3_HR.R:2102:26: style: Commas should always have a space after.
  hb.t.s <- merge(trakte,hb.t,by=c("TNr"),all.x=T)
                         ^
NO COPY: R/BWI3_HR.R:2102:31: style: Commas should always have a space after.
  hb.t.s <- merge(trakte,hb.t,by=c("TNr"),all.x=T)
                              ^
NO COPY: R/BWI3_HR.R:2102:33: style: Put spaces around all infix operators.
  hb.t.s <- merge(trakte,hb.t,by=c("TNr"),all.x=T)
                               ~^~
NO COPY: R/BWI3_HR.R:2102:43: style: Commas should always have a space after.
  hb.t.s <- merge(trakte,hb.t,by=c("TNr"),all.x=T)
                                          ^
NO COPY: R/BWI3_HR.R:2102:48: style: Put spaces around all infix operators.
  hb.t.s <- merge(trakte,hb.t,by=c("TNr"),all.x=T)
                                              ~^~
NO COPY: R/BWI3_HR.R:2103:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  hb.t.s[is.na(hb.t.s)] <- 0
  ^~~~~~
NO COPY: R/BWI3_HR.R:2103:16: style: Words within variable and function names should be separated by '_' rather than '.'.
  hb.t.s[is.na(hb.t.s)] <- 0
               ^~~~~~
NO COPY: R/BWI3_HR.R:2104:34: style: Words within variable and function names should be separated by '_' rather than '.'.
  r.list <- r.variance.fun(cbind(hb.t.s$m,hb.t.s$m_HB_s),nT)
                                 ^~~~~~
NO COPY: R/BWI3_HR.R:2104:43: style: Commas should always have a space after.
  r.list <- r.variance.fun(cbind(hb.t.s$m,hb.t.s$m_HB_s),nT)
                                          ^
NO COPY: R/BWI3_HR.R:2104:43: style: Words within variable and function names should be separated by '_' rather than '.'.
  r.list <- r.variance.fun(cbind(hb.t.s$m,hb.t.s$m_HB_s),nT)
                                          ^~~~~~
NO COPY: R/BWI3_HR.R:2104:58: style: Commas should always have a space after.
  r.list <- r.variance.fun(cbind(hb.t.s$m,hb.t.s$m_HB_s),nT)
                                                         ^
NO COPY: R/BWI3_HR.R:2105:21: style: Put spaces around all infix operators.
  HBF <- r.list$R.xy*A
                   ~^~
NO COPY: R/BWI3_HR.R:2106:25: style: Words within variable and function names should be separated by '_' rather than '.'.
  se.HBF <- sqrt(r.list$V.R.xy)*A
                        ^~~~~~
NO COPY: R/BWI3_HR.R:2106:32: style: Put spaces around all infix operators.
  se.HBF <- sqrt(r.list$V.R.xy)*A
                              ~^~
NO COPY: R/BWI3_HR.R:2113:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  baeume.2.s$bhd.pm <- ifelse(baeume.2.s$Pk%in%c(2:5,9),baeume.2.s$BHD2,
  ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:2113:31: style: Words within variable and function names should be separated by '_' rather than '.'.
  baeume.2.s$bhd.pm <- ifelse(baeume.2.s$Pk%in%c(2:5,9),baeume.2.s$BHD2,
                              ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:2113:44: style: Put spaces around all infix operators.
  baeume.2.s$bhd.pm <- ifelse(baeume.2.s$Pk%in%c(2:5,9),baeume.2.s$BHD2,
                                          ~^~~~~
NO COPY: R/BWI3_HR.R:2113:54: style: Commas should always have a space after.
  baeume.2.s$bhd.pm <- ifelse(baeume.2.s$Pk%in%c(2:5,9),baeume.2.s$BHD2,
                                                     ^
NO COPY: R/BWI3_HR.R:2113:57: style: Commas should always have a space after.
  baeume.2.s$bhd.pm <- ifelse(baeume.2.s$Pk%in%c(2:5,9),baeume.2.s$BHD2,
                                                        ^
NO COPY: R/BWI3_HR.R:2113:57: style: Words within variable and function names should be separated by '_' rather than '.'.
  baeume.2.s$bhd.pm <- ifelse(baeume.2.s$Pk%in%c(2:5,9),baeume.2.s$BHD2,
                                                        ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:2114:8: style: Words within variable and function names should be separated by '_' rather than '.'.
      (baeume.2.s$BHD1+baeume.2.s$BHD2)/2)
       ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:2114:23: style: Put spaces around all infix operators.
      (baeume.2.s$BHD1+baeume.2.s$BHD2)/2)
                     ~^~
NO COPY: R/BWI3_HR.R:2114:24: style: Words within variable and function names should be separated by '_' rather than '.'.
      (baeume.2.s$BHD1+baeume.2.s$BHD2)/2)
                       ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:2114:40: style: Put spaces around all infix operators.
      (baeume.2.s$BHD1+baeume.2.s$BHD2)/2)
                                      ~^~
NO COPY: R/BWI3_HR.R:2115:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  baeume.2.s$alt.pm <- ifelse(baeume.2.s$Pk%in%c(2:5,9),baeume.2.s$Alt2,
  ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:2115:31: style: Words within variable and function names should be separated by '_' rather than '.'.
  baeume.2.s$alt.pm <- ifelse(baeume.2.s$Pk%in%c(2:5,9),baeume.2.s$Alt2,
                              ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:2115:44: style: Put spaces around all infix operators.
  baeume.2.s$alt.pm <- ifelse(baeume.2.s$Pk%in%c(2:5,9),baeume.2.s$Alt2,
                                          ~^~~~~
NO COPY: R/BWI3_HR.R:2115:54: style: Commas should always have a space after.
  baeume.2.s$alt.pm <- ifelse(baeume.2.s$Pk%in%c(2:5,9),baeume.2.s$Alt2,
                                                     ^
NO COPY: R/BWI3_HR.R:2115:57: style: Commas should always have a space after.
  baeume.2.s$alt.pm <- ifelse(baeume.2.s$Pk%in%c(2:5,9),baeume.2.s$Alt2,
                                                        ^
NO COPY: R/BWI3_HR.R:2115:57: style: Words within variable and function names should be separated by '_' rather than '.'.
  baeume.2.s$alt.pm <- ifelse(baeume.2.s$Pk%in%c(2:5,9),baeume.2.s$Alt2,
                                                        ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:2116:14: style: Words within variable and function names should be separated by '_' rather than '.'.
      ifelse(baeume.2.s$BA<998,baeume.2.s$Alt1+baeume.2.s$PL/2,0))
             ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:2116:27: style: Put spaces around all infix operators.
      ifelse(baeume.2.s$BA<998,baeume.2.s$Alt1+baeume.2.s$PL/2,0))
                         ~^~
NO COPY: R/BWI3_HR.R:2116:32: style: Commas should always have a space after.
      ifelse(baeume.2.s$BA<998,baeume.2.s$Alt1+baeume.2.s$PL/2,0))
                               ^
NO COPY: R/BWI3_HR.R:2116:32: style: Words within variable and function names should be separated by '_' rather than '.'.
      ifelse(baeume.2.s$BA<998,baeume.2.s$Alt1+baeume.2.s$PL/2,0))
                               ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:2116:47: style: Put spaces around all infix operators.
      ifelse(baeume.2.s$BA<998,baeume.2.s$Alt1+baeume.2.s$PL/2,0))
                                             ~^~
NO COPY: R/BWI3_HR.R:2116:48: style: Words within variable and function names should be separated by '_' rather than '.'.
      ifelse(baeume.2.s$BA<998,baeume.2.s$Alt1+baeume.2.s$PL/2,0))
                                               ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:2116:61: style: Put spaces around all infix operators.
      ifelse(baeume.2.s$BA<998,baeume.2.s$Alt1+baeume.2.s$PL/2,0))
                                                           ~^~
NO COPY: R/BWI3_HR.R:2116:64: style: Commas should always have a space after.
      ifelse(baeume.2.s$BA<998,baeume.2.s$Alt1+baeume.2.s$PL/2,0))
                                                               ^
NO COPY: R/BWI3_HR.R:2120:1: style: lines should not be more than 80 characters.
  #die bei der Zuwachsbilanzierung ben\u00f6tigten PB-Kategorien S- und E-B\u00e4ume)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2121:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  baeume.3.s$bhd.pm <- (baeume.3.s$BHD1+baeume.3.s$BHD2)/2
  ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:2121:25: style: Words within variable and function names should be separated by '_' rather than '.'.
  baeume.3.s$bhd.pm <- (baeume.3.s$BHD1+baeume.3.s$BHD2)/2
                        ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:2121:40: style: Put spaces around all infix operators.
  baeume.3.s$bhd.pm <- (baeume.3.s$BHD1+baeume.3.s$BHD2)/2
                                      ~^~
NO COPY: R/BWI3_HR.R:2121:41: style: Words within variable and function names should be separated by '_' rather than '.'.
  baeume.3.s$bhd.pm <- (baeume.3.s$BHD1+baeume.3.s$BHD2)/2
                                        ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:2121:57: style: Put spaces around all infix operators.
  baeume.3.s$bhd.pm <- (baeume.3.s$BHD1+baeume.3.s$BHD2)/2
                                                       ~^~
NO COPY: R/BWI3_HR.R:2122:1: style: lines should not be more than 80 characters.
  baeume.3.s$alt.pm<- ifelse(baeume.3.s$BA<998,baeume.3.s$Alt2-baeume.3.s$PL/2,0)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2122:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  baeume.3.s$alt.pm<- ifelse(baeume.3.s$BA<998,baeume.3.s$Alt2-baeume.3.s$PL/2,0)
  ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:2122:20: style: Put spaces around all infix operators.
  baeume.3.s$alt.pm<- ifelse(baeume.3.s$BA<998,baeume.3.s$Alt2-baeume.3.s$PL/2,0)
                  ~^
NO COPY: R/BWI3_HR.R:2122:30: style: Words within variable and function names should be separated by '_' rather than '.'.
  baeume.3.s$alt.pm<- ifelse(baeume.3.s$BA<998,baeume.3.s$Alt2-baeume.3.s$PL/2,0)
                             ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:2122:43: style: Put spaces around all infix operators.
  baeume.3.s$alt.pm<- ifelse(baeume.3.s$BA<998,baeume.3.s$Alt2-baeume.3.s$PL/2,0)
                                         ~^~
NO COPY: R/BWI3_HR.R:2122:48: style: Commas should always have a space after.
  baeume.3.s$alt.pm<- ifelse(baeume.3.s$BA<998,baeume.3.s$Alt2-baeume.3.s$PL/2,0)
                                               ^
NO COPY: R/BWI3_HR.R:2122:48: style: Words within variable and function names should be separated by '_' rather than '.'.
  baeume.3.s$alt.pm<- ifelse(baeume.3.s$BA<998,baeume.3.s$Alt2-baeume.3.s$PL/2,0)
                                               ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:2122:63: style: Put spaces around all infix operators.
  baeume.3.s$alt.pm<- ifelse(baeume.3.s$BA<998,baeume.3.s$Alt2-baeume.3.s$PL/2,0)
                                                             ~^~
NO COPY: R/BWI3_HR.R:2122:64: style: Words within variable and function names should be separated by '_' rather than '.'.
  baeume.3.s$alt.pm<- ifelse(baeume.3.s$BA<998,baeume.3.s$Alt2-baeume.3.s$PL/2,0)
                                                               ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:2122:77: style: Put spaces around all infix operators.
  baeume.3.s$alt.pm<- ifelse(baeume.3.s$BA<998,baeume.3.s$Alt2-baeume.3.s$PL/2,0)
                                                                           ~^~
NO COPY: R/BWI3_HR.R:2122:80: style: Commas should always have a space after.
  baeume.3.s$alt.pm<- ifelse(baeume.3.s$BA<998,baeume.3.s$Alt2-baeume.3.s$PL/2,0)
                                                                               ^
NO COPY: R/BWI3_HR.R:2127:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  baeume.2.s$akl <- cut(baeume.2.s$alt.pm,
  ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:2127:25: style: Words within variable and function names should be separated by '_' rather than '.'.
  baeume.2.s$akl <- cut(baeume.2.s$alt.pm,
                        ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:2128:29: style: Put spaces around all infix operators.
                      breaks=c(seq(0,A.klass[[1]],A.klass[[2]]),A.max),right=T)
                           ~^~
NO COPY: R/BWI3_HR.R:2128:38: style: Commas should always have a space after.
                      breaks=c(seq(0,A.klass[[1]],A.klass[[2]]),A.max),right=T)
                                     ^
NO COPY: R/BWI3_HR.R:2128:51: style: Commas should always have a space after.
                      breaks=c(seq(0,A.klass[[1]],A.klass[[2]]),A.max),right=T)
                                                  ^
NO COPY: R/BWI3_HR.R:2128:65: style: Commas should always have a space after.
                      breaks=c(seq(0,A.klass[[1]],A.klass[[2]]),A.max),right=T)
                                                                ^
NO COPY: R/BWI3_HR.R:2128:72: style: Commas should always have a space after.
                      breaks=c(seq(0,A.klass[[1]],A.klass[[2]]),A.max),right=T)
                                                                       ^
NO COPY: R/BWI3_HR.R:2128:77: style: Put spaces around all infix operators.
                      breaks=c(seq(0,A.klass[[1]],A.klass[[2]]),A.max),right=T)
                                                                           ~^~
NO COPY: R/BWI3_HR.R:2130:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  baeume.3.s$akl <- cut(baeume.3.s$alt.pm,
  ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:2130:25: style: Words within variable and function names should be separated by '_' rather than '.'.
  baeume.3.s$akl <- cut(baeume.3.s$alt.pm,
                        ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:2131:29: style: Put spaces around all infix operators.
                      breaks=c(seq(0,A.klass[[1]],A.klass[[2]]),A.max),right=T)
                           ~^~
NO COPY: R/BWI3_HR.R:2131:38: style: Commas should always have a space after.
                      breaks=c(seq(0,A.klass[[1]],A.klass[[2]]),A.max),right=T)
                                     ^
NO COPY: R/BWI3_HR.R:2131:51: style: Commas should always have a space after.
                      breaks=c(seq(0,A.klass[[1]],A.klass[[2]]),A.max),right=T)
                                                  ^
NO COPY: R/BWI3_HR.R:2131:65: style: Commas should always have a space after.
                      breaks=c(seq(0,A.klass[[1]],A.klass[[2]]),A.max),right=T)
                                                                ^
NO COPY: R/BWI3_HR.R:2131:72: style: Commas should always have a space after.
                      breaks=c(seq(0,A.klass[[1]],A.klass[[2]]),A.max),right=T)
                                                                       ^
NO COPY: R/BWI3_HR.R:2131:77: style: Put spaces around all infix operators.
                      breaks=c(seq(0,A.klass[[1]],A.klass[[2]]),A.max),right=T)
                                                                           ~^~
NO COPY: R/BWI3_HR.R:2132:21: style: Words within variable and function names should be separated by '_' rather than '.'.
  akl.lab <- unique(baeume.3.s$akl)
                    ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:2139:3: style: Opening curly braces should never go on their own line and should always be followed by a new line.
  {
  ^
NO COPY: R/BWI3_HR.R:2140:1: style: lines should not be more than 80 characters.
    brks <- c(0,7,seq(D.klass[[1]]+D.klass[[3]],D.klass[[2]],D.klass[[3]]),D.max)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2140:17: style: Commas should always have a space after.
    brks <- c(0,7,seq(D.klass[[1]]+D.klass[[3]],D.klass[[2]],D.klass[[3]]),D.max)
                ^
NO COPY: R/BWI3_HR.R:2140:19: style: Commas should always have a space after.
    brks <- c(0,7,seq(D.klass[[1]]+D.klass[[3]],D.klass[[2]],D.klass[[3]]),D.max)
                  ^
NO COPY: R/BWI3_HR.R:2140:35: style: Put spaces around all infix operators.
    brks <- c(0,7,seq(D.klass[[1]]+D.klass[[3]],D.klass[[2]],D.klass[[3]]),D.max)
                                 ~^~
NO COPY: R/BWI3_HR.R:2140:49: style: Commas should always have a space after.
    brks <- c(0,7,seq(D.klass[[1]]+D.klass[[3]],D.klass[[2]],D.klass[[3]]),D.max)
                                                ^
NO COPY: R/BWI3_HR.R:2140:62: style: Commas should always have a space after.
    brks <- c(0,7,seq(D.klass[[1]]+D.klass[[3]],D.klass[[2]],D.klass[[3]]),D.max)
                                                             ^
NO COPY: R/BWI3_HR.R:2140:76: style: Commas should always have a space after.
    brks <- c(0,7,seq(D.klass[[1]]+D.klass[[3]],D.klass[[2]],D.klass[[3]]),D.max)
                                                                           ^
NO COPY: R/BWI3_HR.R:2142:3: style: Opening curly braces should never go on their own line and should always be followed by a new line.
  {
  ^
NO COPY: R/BWI3_HR.R:2143:32: style: Commas should always have a space after.
    brks <- c(seq(D.klass[[1]],D.klass[[2]],D.klass[[3]]),D.max)
                               ^
NO COPY: R/BWI3_HR.R:2143:45: style: Commas should always have a space after.
    brks <- c(seq(D.klass[[1]],D.klass[[2]],D.klass[[3]]),D.max)
                                            ^
NO COPY: R/BWI3_HR.R:2143:59: style: Commas should always have a space after.
    brks <- c(seq(D.klass[[1]],D.klass[[2]],D.klass[[3]]),D.max)
                                                          ^
NO COPY: R/BWI3_HR.R:2146:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  baeume.2.s$dkl <- cut(baeume.2.s$bhd.pm, breaks=brks, right=F)
  ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:2146:25: style: Words within variable and function names should be separated by '_' rather than '.'.
  baeume.2.s$dkl <- cut(baeume.2.s$bhd.pm, breaks=brks, right=F)
                        ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:2146:50: style: Put spaces around all infix operators.
  baeume.2.s$dkl <- cut(baeume.2.s$bhd.pm, breaks=brks, right=F)
                                                ~^~
NO COPY: R/BWI3_HR.R:2146:62: style: Put spaces around all infix operators.
  baeume.2.s$dkl <- cut(baeume.2.s$bhd.pm, breaks=brks, right=F)
                                                            ~^~
NO COPY: R/BWI3_HR.R:2148:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  baeume.3.s$dkl <- cut(baeume.3.s$bhd.pm, breaks=brks, right=F)
  ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:2148:25: style: Words within variable and function names should be separated by '_' rather than '.'.
  baeume.3.s$dkl <- cut(baeume.3.s$bhd.pm, breaks=brks, right=F)
                        ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:2148:50: style: Put spaces around all infix operators.
  baeume.3.s$dkl <- cut(baeume.3.s$bhd.pm, breaks=brks, right=F)
                                                ~^~
NO COPY: R/BWI3_HR.R:2148:62: style: Put spaces around all infix operators.
  baeume.3.s$dkl <- cut(baeume.3.s$bhd.pm, breaks=brks, right=F)
                                                            ~^~
NO COPY: R/BWI3_HR.R:2149:21: style: Words within variable and function names should be separated by '_' rather than '.'.
  dkl.lab <- unique(baeume.3.s$dkl)
                    ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:2155:1: style: lines should not be more than 80 characters.
  iv.es.a.t.bagr.akl.dkl <- iVB.bilanz.bagr.akl.dkl.fun.2g(baeume.2.s,baeume.3.s,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2155:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.a.t.bagr.akl.dkl <- iVB.bilanz.bagr.akl.dkl.fun.2g(baeume.2.s,baeume.3.s,
  ^~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2155:60: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.a.t.bagr.akl.dkl <- iVB.bilanz.bagr.akl.dkl.fun.2g(baeume.2.s,baeume.3.s,
                                                           ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:2155:71: style: Commas should always have a space after.
  iv.es.a.t.bagr.akl.dkl <- iVB.bilanz.bagr.akl.dkl.fun.2g(baeume.2.s,baeume.3.s,
                                                                      ^
NO COPY: R/BWI3_HR.R:2155:71: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.a.t.bagr.akl.dkl <- iVB.bilanz.bagr.akl.dkl.fun.2g(baeume.2.s,baeume.3.s,
                                                                      ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:2160:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  baeume.2.s$BaGr <- "AlleBA"
  ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:2160:14: style: Variable and function names should be all lowercase.
  baeume.2.s$BaGr <- "AlleBA"
             ^~~~
NO COPY: R/BWI3_HR.R:2161:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  baeume.3.s$BaGr <- "AlleBA"
  ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:2161:14: style: Variable and function names should be all lowercase.
  baeume.3.s$BaGr <- "AlleBA"
             ^~~~
NO COPY: R/BWI3_HR.R:2162:1: style: lines should not be more than 80 characters.
  iv.es.a.t.alle.akl.dkl <- iVB.bilanz.bagr.akl.dkl.fun.2g(baeume.2.s,baeume.3.s,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2162:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.a.t.alle.akl.dkl <- iVB.bilanz.bagr.akl.dkl.fun.2g(baeume.2.s,baeume.3.s,
  ^~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2162:60: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.a.t.alle.akl.dkl <- iVB.bilanz.bagr.akl.dkl.fun.2g(baeume.2.s,baeume.3.s,
                                                           ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:2162:71: style: Commas should always have a space after.
  iv.es.a.t.alle.akl.dkl <- iVB.bilanz.bagr.akl.dkl.fun.2g(baeume.2.s,baeume.3.s,
                                                                      ^
NO COPY: R/BWI3_HR.R:2162:71: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.a.t.alle.akl.dkl <- iVB.bilanz.bagr.akl.dkl.fun.2g(baeume.2.s,baeume.3.s,
                                                                      ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:2169:1: style: lines should not be more than 80 characters.
  #1. 1-15: 5 Zielgr\u00f6\u00dfen: V_DhmR, V_DhmR_HB, V_EoR, oiB, G in je 3 Varianten
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2182:3: style: Variable and function names should be all lowercase.
  iVB.bagr.akl.dkl <- array(dim=c(19,2,n.bagr,A.k,D.k))
  ^~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2182:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  iVB.bagr.akl.dkl <- array(dim=c(19,2,n.bagr,A.k,D.k))
  ^~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2182:32: style: Put spaces around all infix operators.
  iVB.bagr.akl.dkl <- array(dim=c(19,2,n.bagr,A.k,D.k))
                              ~^~
NO COPY: R/BWI3_HR.R:2182:38: style: Commas should always have a space after.
  iVB.bagr.akl.dkl <- array(dim=c(19,2,n.bagr,A.k,D.k))
                                     ^
NO COPY: R/BWI3_HR.R:2182:40: style: Commas should always have a space after.
  iVB.bagr.akl.dkl <- array(dim=c(19,2,n.bagr,A.k,D.k))
                                       ^
NO COPY: R/BWI3_HR.R:2182:47: style: Commas should always have a space after.
  iVB.bagr.akl.dkl <- array(dim=c(19,2,n.bagr,A.k,D.k))
                                              ^
NO COPY: R/BWI3_HR.R:2182:51: style: Commas should always have a space after.
  iVB.bagr.akl.dkl <- array(dim=c(19,2,n.bagr,A.k,D.k))
                                                  ^
NO COPY: R/BWI3_HR.R:2187:1: style: lines should not be more than 80 characters.
  #1. 1-15: 4 Zielgr\u00f6\u00dfen: V_A_DhmR, V_A_DhmR_HB, V_A_EoR, oiB_A, G_A in je
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2198:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  VB.A.bagr.akl.dkl <- array(dim=c(16,2,n.bagr,A.k,D.k))
  ^~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2198:33: style: Put spaces around all infix operators.
  VB.A.bagr.akl.dkl <- array(dim=c(16,2,n.bagr,A.k,D.k))
                               ~^~
NO COPY: R/BWI3_HR.R:2198:39: style: Commas should always have a space after.
  VB.A.bagr.akl.dkl <- array(dim=c(16,2,n.bagr,A.k,D.k))
                                      ^
NO COPY: R/BWI3_HR.R:2198:41: style: Commas should always have a space after.
  VB.A.bagr.akl.dkl <- array(dim=c(16,2,n.bagr,A.k,D.k))
                                        ^
NO COPY: R/BWI3_HR.R:2198:48: style: Commas should always have a space after.
  VB.A.bagr.akl.dkl <- array(dim=c(16,2,n.bagr,A.k,D.k))
                                               ^
NO COPY: R/BWI3_HR.R:2198:52: style: Commas should always have a space after.
  VB.A.bagr.akl.dkl <- array(dim=c(16,2,n.bagr,A.k,D.k))
                                                   ^
NO COPY: R/BWI3_HR.R:2202:3: style: Opening curly braces should never go on their own line and should always be followed by a new line.
  {
  ^
NO COPY: R/BWI3_HR.R:2204:5: style: Opening curly braces should never go on their own line and should always be followed by a new line.
    {
    ^
NO COPY: R/BWI3_HR.R:2206:7: style: Opening curly braces should never go on their own line and should always be followed by a new line.
      {
      ^
NO COPY: R/BWI3_HR.R:2210:9: style: Opening curly braces should never go on their own line and should always be followed by a new line.
        {
        ^
NO COPY: R/BWI3_HR.R:2211:11: style: Words within variable and function names should be separated by '_' rather than '.'.
          iv.es.a.t <- iv.es.a.t.bagr.akl.dkl[
          ^~~~~~~~~
NO COPY: R/BWI3_HR.R:2211:24: style: Words within variable and function names should be separated by '_' rather than '.'.
          iv.es.a.t <- iv.es.a.t.bagr.akl.dkl[
                       ^~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2212:23: style: Words within variable and function names should be separated by '_' rather than '.'.
                      iv.es.a.t.bagr.akl.dkl[["BaGr"]] == bagr.list[i] &
                      ^~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2213:23: style: Words within variable and function names should be separated by '_' rather than '.'.
                      iv.es.a.t.bagr.akl.dkl[["Akl"]] == akl.lab[j] &
                      ^~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2214:23: style: Words within variable and function names should be separated by '_' rather than '.'.
                      iv.es.a.t.bagr.akl.dkl[["Dkl"]] == dkl.lab[k], TRUE]
                      ^~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2216:9: style: Opening curly braces should never go on their own line and should always be followed by a new line.
        { #Alle BA   k\u00e4/27.01.2015
        ^
NO COPY: R/BWI3_HR.R:2217:11: style: Words within variable and function names should be separated by '_' rather than '.'.
          iv.es.a.t <- iv.es.a.t.alle.akl.dkl[
          ^~~~~~~~~
NO COPY: R/BWI3_HR.R:2217:24: style: Words within variable and function names should be separated by '_' rather than '.'.
          iv.es.a.t <- iv.es.a.t.alle.akl.dkl[
                       ^~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2218:23: style: Words within variable and function names should be separated by '_' rather than '.'.
                      iv.es.a.t.alle.akl.dkl[["Akl"]] == akl.lab[j] & 
                      ^~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2218:70: style: Trailing whitespace is superfluous.
                      iv.es.a.t.alle.akl.dkl[["Akl"]] == akl.lab[j] & 
                                                                     ^
NO COPY: R/BWI3_HR.R:2219:23: style: Words within variable and function names should be separated by '_' rather than '.'.
                      iv.es.a.t.alle.akl.dkl[["Dkl"]] == dkl.lab[k], TRUE]
                      ^~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2224:9: style: Variable and function names should be all lowercase.
        iVB.bagr.akl.dkl[19,1,i,j,k] <- length(iv.es.a.t[,1])
        ^~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2224:9: style: Words within variable and function names should be separated by '_' rather than '.'.
        iVB.bagr.akl.dkl[19,1,i,j,k] <- length(iv.es.a.t[,1])
        ^~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2224:29: style: Commas should always have a space after.
        iVB.bagr.akl.dkl[19,1,i,j,k] <- length(iv.es.a.t[,1])
                            ^
NO COPY: R/BWI3_HR.R:2224:31: style: Commas should always have a space after.
        iVB.bagr.akl.dkl[19,1,i,j,k] <- length(iv.es.a.t[,1])
                              ^
NO COPY: R/BWI3_HR.R:2224:33: style: Commas should always have a space after.
        iVB.bagr.akl.dkl[19,1,i,j,k] <- length(iv.es.a.t[,1])
                                ^
NO COPY: R/BWI3_HR.R:2224:35: style: Commas should always have a space after.
        iVB.bagr.akl.dkl[19,1,i,j,k] <- length(iv.es.a.t[,1])
                                  ^
NO COPY: R/BWI3_HR.R:2224:48: style: Words within variable and function names should be separated by '_' rather than '.'.
        iVB.bagr.akl.dkl[19,1,i,j,k] <- length(iv.es.a.t[,1])
                                               ^~~~~~~~~
NO COPY: R/BWI3_HR.R:2224:59: style: Commas should always have a space after.
        iVB.bagr.akl.dkl[19,1,i,j,k] <- length(iv.es.a.t[,1])
                                                          ^
NO COPY: R/BWI3_HR.R:2226:1: style: lines should not be more than 80 characters.
        iv.bil.t <- iv.es.a.t[TRUE, c("TNr", "mBAF", "mBAF.oLK", "mPL", "mPLkal", 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2226:9: style: Words within variable and function names should be separated by '_' rather than '.'.
        iv.bil.t <- iv.es.a.t[TRUE, c("TNr", "mBAF", "mBAF.oLK", "mPL", "mPLkal", 
        ^~~~~~~~
NO COPY: R/BWI3_HR.R:2226:21: style: Words within variable and function names should be separated by '_' rather than '.'.
        iv.bil.t <- iv.es.a.t[TRUE, c("TNr", "mBAF", "mBAF.oLK", "mPL", "mPLkal", 
                    ^~~~~~~~~
NO COPY: R/BWI3_HR.R:2226:82: style: Trailing whitespace is superfluous.
        iv.bil.t <- iv.es.a.t[TRUE, c("TNr", "mBAF", "mBAF.oLK", "mPL", "mPLkal", 
                                                                                 ^
NO COPY: R/BWI3_HR.R:2227:78: style: Trailing whitespace is superfluous.
                                     "iV.DhmR", "iV.DhmR.HB", "iV.EoR", "iB", 
                                                                             ^
NO COPY: R/BWI3_HR.R:2228:1: style: lines should not be more than 80 characters.
                                     "iG", "V.DhmR.A", "V.DhmR.HB.A", "V.EoR.A", 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2228:81: style: Trailing whitespace is superfluous.
                                     "iG", "V.DhmR.A", "V.DhmR.HB.A", "V.EoR.A", 
                                                                                ^
NO COPY: R/BWI3_HR.R:2231:9: style: Words within variable and function names should be separated by '_' rather than '.'.
        iv.bil.t <- merge(trakte[TRUE, c("TNr", "m", "m_HB")],iv.bil.t,
        ^~~~~~~~
NO COPY: R/BWI3_HR.R:2231:63: style: Commas should always have a space after.
        iv.bil.t <- merge(trakte[TRUE, c("TNr", "m", "m_HB")],iv.bil.t,
                                                              ^
NO COPY: R/BWI3_HR.R:2231:63: style: Words within variable and function names should be separated by '_' rather than '.'.
        iv.bil.t <- merge(trakte[TRUE, c("TNr", "m", "m_HB")],iv.bil.t,
                                                              ^~~~~~~~
NO COPY: R/BWI3_HR.R:2232:29: style: Put spaces around all infix operators.
                          by=c("TNr"),all.x=T)
                           ~^~
NO COPY: R/BWI3_HR.R:2232:39: style: Commas should always have a space after.
                          by=c("TNr"),all.x=T)
                                      ^
NO COPY: R/BWI3_HR.R:2232:44: style: Put spaces around all infix operators.
                          by=c("TNr"),all.x=T)
                                          ~^~
NO COPY: R/BWI3_HR.R:2234:9: style: Words within variable and function names should be separated by '_' rather than '.'.
        iv.bil.t[is.na(iv.bil.t)] <- 0
        ^~~~~~~~
NO COPY: R/BWI3_HR.R:2234:24: style: Words within variable and function names should be separated by '_' rather than '.'.
        iv.bil.t[is.na(iv.bil.t)] <- 0
                       ^~~~~~~~
NO COPY: R/BWI3_HR.R:2236:10: style: Commented code should be removed.
        #utils::head(iv.bil.t)
         ^~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2247:1: style: lines should not be more than 80 characters.
                          #j\u00e4hrlicher Gesamtwert, Ha-bezogener j\u00e4hrl. Wert
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2248:9: style: Opening curly braces should never go on their own line and should always be followed by a new line.
        {
        ^
NO COPY: R/BWI3_HR.R:2249:1: style: lines should not be more than 80 characters.
          for (jj in 8:12) #Spaltenpositionen der 5 Zielgr\u00f6\u00dfen iV.DhmR,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2253:11: style: Opening curly braces should never go on their own line and should always be followed by a new line.
          {
          ^
NO COPY: R/BWI3_HR.R:2255:1: style: lines should not be more than 80 characters.
            #Bezugsgr\u00f6\u00dfe x: bei ii = 1 oder 2 (Gesamtwerte): Anzahl Ecken je
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2256:1: style: lines should not be more than 80 characters.
            #Takt (m); bei ii = 3 (Hektar.Bezug) Fallunterscheidung: "Gr\u00f6\u00dfen"
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2259:15: style: Place a space before left parenthesis, except in a function call.
            if(ii < 3) {x <- iv.bil.t[,2]}  else
              ^
NO COPY: R/BWI3_HR.R:2259:24: style: Opening curly braces should never go on their own line and should always be followed by a new line.
            if(ii < 3) {x <- iv.bil.t[,2]}  else
                       ^
NO COPY: R/BWI3_HR.R:2259:30: style: Words within variable and function names should be separated by '_' rather than '.'.
            if(ii < 3) {x <- iv.bil.t[,2]}  else
                             ^~~~~~~~
NO COPY: R/BWI3_HR.R:2259:40: style: Commas should always have a space after.
            if(ii < 3) {x <- iv.bil.t[,2]}  else
                                       ^
NO COPY: R/BWI3_HR.R:2259:42: style: Closing curly-braces should always be on their own line, unless it's followed by an else.
            if(ii < 3) {x <- iv.bil.t[,2]}  else
                                         ^
NO COPY: R/BWI3_HR.R:2260:13: style: Opening curly braces should never go on their own line and should always be followed by a new line.
            {if(jj==9) {x <- iv.bil.t[,5]} else {x <- iv.bil.t[,4]}}
            ^
NO COPY: R/BWI3_HR.R:2260:16: style: Place a space before left parenthesis, except in a function call.
            {if(jj==9) {x <- iv.bil.t[,5]} else {x <- iv.bil.t[,4]}}
               ^
NO COPY: R/BWI3_HR.R:2260:19: style: Put spaces around all infix operators.
            {if(jj==9) {x <- iv.bil.t[,5]} else {x <- iv.bil.t[,4]}}
                 ~^~~
NO COPY: R/BWI3_HR.R:2260:24: style: Opening curly braces should never go on their own line and should always be followed by a new line.
            {if(jj==9) {x <- iv.bil.t[,5]} else {x <- iv.bil.t[,4]}}
                       ^
NO COPY: R/BWI3_HR.R:2260:30: style: Words within variable and function names should be separated by '_' rather than '.'.
            {if(jj==9) {x <- iv.bil.t[,5]} else {x <- iv.bil.t[,4]}}
                             ^~~~~~~~
NO COPY: R/BWI3_HR.R:2260:40: style: Commas should always have a space after.
            {if(jj==9) {x <- iv.bil.t[,5]} else {x <- iv.bil.t[,4]}}
                                       ^
NO COPY: R/BWI3_HR.R:2260:42: style: Closing curly-braces should always be on their own line, unless it's followed by an else.
            {if(jj==9) {x <- iv.bil.t[,5]} else {x <- iv.bil.t[,4]}}
                                         ^
NO COPY: R/BWI3_HR.R:2260:49: style: Opening curly braces should never go on their own line and should always be followed by a new line.
            {if(jj==9) {x <- iv.bil.t[,5]} else {x <- iv.bil.t[,4]}}
                                                ^
NO COPY: R/BWI3_HR.R:2260:55: style: Words within variable and function names should be separated by '_' rather than '.'.
            {if(jj==9) {x <- iv.bil.t[,5]} else {x <- iv.bil.t[,4]}}
                                                      ^~~~~~~~
NO COPY: R/BWI3_HR.R:2260:65: style: Commas should always have a space after.
            {if(jj==9) {x <- iv.bil.t[,5]} else {x <- iv.bil.t[,4]}}
                                                                ^
NO COPY: R/BWI3_HR.R:2260:67: style: Closing curly-braces should always be on their own line, unless it's followed by an else.
            {if(jj==9) {x <- iv.bil.t[,5]} else {x <- iv.bil.t[,4]}}
                                                                  ^
NO COPY: R/BWI3_HR.R:2260:68: style: Closing curly-braces should always be on their own line, unless it's followed by an else.
            {if(jj==9) {x <- iv.bil.t[,5]} else {x <- iv.bil.t[,4]}}
                                                                   ^
NO COPY: R/BWI3_HR.R:2262:15: style: Place a space before left parenthesis, except in a function call.
            if(ii < 2) {y <- iv.bil.t[,jj]} else
              ^
NO COPY: R/BWI3_HR.R:2262:24: style: Opening curly braces should never go on their own line and should always be followed by a new line.
            if(ii < 2) {y <- iv.bil.t[,jj]} else
                       ^
NO COPY: R/BWI3_HR.R:2262:30: style: Words within variable and function names should be separated by '_' rather than '.'.
            if(ii < 2) {y <- iv.bil.t[,jj]} else
                             ^~~~~~~~
NO COPY: R/BWI3_HR.R:2262:40: style: Commas should always have a space after.
            if(ii < 2) {y <- iv.bil.t[,jj]} else
                                       ^
NO COPY: R/BWI3_HR.R:2262:43: style: Closing curly-braces should always be on their own line, unless it's followed by an else.
            if(ii < 2) {y <- iv.bil.t[,jj]} else
                                          ^
NO COPY: R/BWI3_HR.R:2263:15: style: Opening curly braces should never go on their own line and should always be followed by a new line.
              {y <- ifelse(iv.bil.t[,6]>0,iv.bil.t[,jj]/iv.bil.t[,6],0)}
              ^
NO COPY: R/BWI3_HR.R:2263:28: style: Words within variable and function names should be separated by '_' rather than '.'.
              {y <- ifelse(iv.bil.t[,6]>0,iv.bil.t[,jj]/iv.bil.t[,6],0)}
                           ^~~~~~~~
NO COPY: R/BWI3_HR.R:2263:38: style: Commas should always have a space after.
              {y <- ifelse(iv.bil.t[,6]>0,iv.bil.t[,jj]/iv.bil.t[,6],0)}
                                     ^
NO COPY: R/BWI3_HR.R:2263:40: style: Put spaces around all infix operators.
              {y <- ifelse(iv.bil.t[,6]>0,iv.bil.t[,jj]/iv.bil.t[,6],0)}
                                      ~^~
NO COPY: R/BWI3_HR.R:2263:43: style: Commas should always have a space after.
              {y <- ifelse(iv.bil.t[,6]>0,iv.bil.t[,jj]/iv.bil.t[,6],0)}
                                          ^
NO COPY: R/BWI3_HR.R:2263:43: style: Words within variable and function names should be separated by '_' rather than '.'.
              {y <- ifelse(iv.bil.t[,6]>0,iv.bil.t[,jj]/iv.bil.t[,6],0)}
                                          ^~~~~~~~
NO COPY: R/BWI3_HR.R:2263:53: style: Commas should always have a space after.
              {y <- ifelse(iv.bil.t[,6]>0,iv.bil.t[,jj]/iv.bil.t[,6],0)}
                                                    ^
NO COPY: R/BWI3_HR.R:2263:56: style: Put spaces around all infix operators.
              {y <- ifelse(iv.bil.t[,6]>0,iv.bil.t[,jj]/iv.bil.t[,6],0)}
                                                      ~^~
NO COPY: R/BWI3_HR.R:2263:57: style: Words within variable and function names should be separated by '_' rather than '.'.
              {y <- ifelse(iv.bil.t[,6]>0,iv.bil.t[,jj]/iv.bil.t[,6],0)}
                                                        ^~~~~~~~
NO COPY: R/BWI3_HR.R:2263:67: style: Commas should always have a space after.
              {y <- ifelse(iv.bil.t[,6]>0,iv.bil.t[,jj]/iv.bil.t[,6],0)}
                                                                  ^
NO COPY: R/BWI3_HR.R:2263:70: style: Commas should always have a space after.
              {y <- ifelse(iv.bil.t[,6]>0,iv.bil.t[,jj]/iv.bil.t[,6],0)}
                                                                     ^
NO COPY: R/BWI3_HR.R:2263:72: style: Closing curly-braces should always be on their own line, unless it's followed by an else.
              {y <- ifelse(iv.bil.t[,6]>0,iv.bil.t[,jj]/iv.bil.t[,6],0)}
                                                                       ^
NO COPY: R/BWI3_HR.R:2264:46: style: Commas should always have a space after.
            R.list <- r.variance.fun(cbind(x,y),nT)
                                             ^
NO COPY: R/BWI3_HR.R:2264:49: style: Commas should always have a space after.
            R.list <- r.variance.fun(cbind(x,y),nT)
                                                ^
NO COPY: R/BWI3_HR.R:2265:13: style: Variable and function names should be all lowercase.
            iVB.bagr.akl.dkl[iii,1,i,j,k] <- R.list$R.xy*ifelse(ii<3,A,1)
            ^~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2265:13: style: Words within variable and function names should be separated by '_' rather than '.'.
            iVB.bagr.akl.dkl[iii,1,i,j,k] <- R.list$R.xy*ifelse(ii<3,A,1)
            ^~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2265:34: style: Commas should always have a space after.
            iVB.bagr.akl.dkl[iii,1,i,j,k] <- R.list$R.xy*ifelse(ii<3,A,1)
                                 ^
NO COPY: R/BWI3_HR.R:2265:36: style: Commas should always have a space after.
            iVB.bagr.akl.dkl[iii,1,i,j,k] <- R.list$R.xy*ifelse(ii<3,A,1)
                                   ^
NO COPY: R/BWI3_HR.R:2265:38: style: Commas should always have a space after.
            iVB.bagr.akl.dkl[iii,1,i,j,k] <- R.list$R.xy*ifelse(ii<3,A,1)
                                     ^
NO COPY: R/BWI3_HR.R:2265:40: style: Commas should always have a space after.
            iVB.bagr.akl.dkl[iii,1,i,j,k] <- R.list$R.xy*ifelse(ii<3,A,1)
                                       ^
NO COPY: R/BWI3_HR.R:2265:57: style: Put spaces around all infix operators.
            iVB.bagr.akl.dkl[iii,1,i,j,k] <- R.list$R.xy*ifelse(ii<3,A,1)
                                                       ~^~
NO COPY: R/BWI3_HR.R:2265:67: style: Put spaces around all infix operators.
            iVB.bagr.akl.dkl[iii,1,i,j,k] <- R.list$R.xy*ifelse(ii<3,A,1)
                                                                 ~^~
NO COPY: R/BWI3_HR.R:2265:70: style: Commas should always have a space after.
            iVB.bagr.akl.dkl[iii,1,i,j,k] <- R.list$R.xy*ifelse(ii<3,A,1)
                                                                     ^
NO COPY: R/BWI3_HR.R:2265:72: style: Commas should always have a space after.
            iVB.bagr.akl.dkl[iii,1,i,j,k] <- R.list$R.xy*ifelse(ii<3,A,1)
                                                                       ^
NO COPY: R/BWI3_HR.R:2266:13: style: Variable and function names should be all lowercase.
            iVB.bagr.akl.dkl[iii,2,i,j,k]<- sqrt(R.list$V.R.xy)*ifelse(ii<3,A,1)
            ^~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2266:13: style: Words within variable and function names should be separated by '_' rather than '.'.
            iVB.bagr.akl.dkl[iii,2,i,j,k]<- sqrt(R.list$V.R.xy)*ifelse(ii<3,A,1)
            ^~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2266:34: style: Commas should always have a space after.
            iVB.bagr.akl.dkl[iii,2,i,j,k]<- sqrt(R.list$V.R.xy)*ifelse(ii<3,A,1)
                                 ^
NO COPY: R/BWI3_HR.R:2266:36: style: Commas should always have a space after.
            iVB.bagr.akl.dkl[iii,2,i,j,k]<- sqrt(R.list$V.R.xy)*ifelse(ii<3,A,1)
                                   ^
NO COPY: R/BWI3_HR.R:2266:38: style: Commas should always have a space after.
            iVB.bagr.akl.dkl[iii,2,i,j,k]<- sqrt(R.list$V.R.xy)*ifelse(ii<3,A,1)
                                     ^
NO COPY: R/BWI3_HR.R:2266:40: style: Commas should always have a space after.
            iVB.bagr.akl.dkl[iii,2,i,j,k]<- sqrt(R.list$V.R.xy)*ifelse(ii<3,A,1)
                                       ^
NO COPY: R/BWI3_HR.R:2266:42: style: Put spaces around all infix operators.
            iVB.bagr.akl.dkl[iii,2,i,j,k]<- sqrt(R.list$V.R.xy)*ifelse(ii<3,A,1)
                                        ~^
NO COPY: R/BWI3_HR.R:2266:57: style: Words within variable and function names should be separated by '_' rather than '.'.
            iVB.bagr.akl.dkl[iii,2,i,j,k]<- sqrt(R.list$V.R.xy)*ifelse(ii<3,A,1)
                                                        ^~~~~~
NO COPY: R/BWI3_HR.R:2266:64: style: Put spaces around all infix operators.
            iVB.bagr.akl.dkl[iii,2,i,j,k]<- sqrt(R.list$V.R.xy)*ifelse(ii<3,A,1)
                                                              ~^~
NO COPY: R/BWI3_HR.R:2266:74: style: Put spaces around all infix operators.
            iVB.bagr.akl.dkl[iii,2,i,j,k]<- sqrt(R.list$V.R.xy)*ifelse(ii<3,A,1)
                                                                        ~^~
NO COPY: R/BWI3_HR.R:2266:77: style: Commas should always have a space after.
            iVB.bagr.akl.dkl[iii,2,i,j,k]<- sqrt(R.list$V.R.xy)*ifelse(ii<3,A,1)
                                                                            ^
NO COPY: R/BWI3_HR.R:2266:79: style: Commas should always have a space after.
            iVB.bagr.akl.dkl[iii,2,i,j,k]<- sqrt(R.list$V.R.xy)*ifelse(ii<3,A,1)
                                                                              ^
NO COPY: R/BWI3_HR.R:2270:1: style: lines should not be more than 80 characters.
          for (jj in 13:17) #Spaltenpositionen der 5 Zielgr\u00f6\u00dfen V.DhmR.A,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2272:11: style: Opening curly braces should never go on their own line and should always be followed by a new line.
          {
          ^
NO COPY: R/BWI3_HR.R:2274:1: style: lines should not be more than 80 characters.
            #Bezugsgr\u00f6\u00dfe x: bei ii = 1 oder 2 (Gesamtwerte): Anzahl Ecken je
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2275:1: style: lines should not be more than 80 characters.
            #Takt (m); bei ii = 3 (Hektar.Bezug) Fallunterscheidung: "Gr\u00f6\u00dfen"
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2278:15: style: Place a space before left parenthesis, except in a function call.
            if(ii < 3) {x <- iv.bil.t[,2]}  else
              ^
NO COPY: R/BWI3_HR.R:2278:24: style: Opening curly braces should never go on their own line and should always be followed by a new line.
            if(ii < 3) {x <- iv.bil.t[,2]}  else
                       ^
NO COPY: R/BWI3_HR.R:2278:30: style: Words within variable and function names should be separated by '_' rather than '.'.
            if(ii < 3) {x <- iv.bil.t[,2]}  else
                             ^~~~~~~~
NO COPY: R/BWI3_HR.R:2278:40: style: Commas should always have a space after.
            if(ii < 3) {x <- iv.bil.t[,2]}  else
                                       ^
NO COPY: R/BWI3_HR.R:2278:42: style: Closing curly-braces should always be on their own line, unless it's followed by an else.
            if(ii < 3) {x <- iv.bil.t[,2]}  else
                                         ^
NO COPY: R/BWI3_HR.R:2280:13: style: Opening curly braces should never go on their own line and should always be followed by a new line.
            {if(jj==14) {x <- iv.bil.t[,5]} else {x <- iv.bil.t[,4]}}
            ^
NO COPY: R/BWI3_HR.R:2280:16: style: Place a space before left parenthesis, except in a function call.
            {if(jj==14) {x <- iv.bil.t[,5]} else {x <- iv.bil.t[,4]}}
               ^
NO COPY: R/BWI3_HR.R:2280:19: style: Put spaces around all infix operators.
            {if(jj==14) {x <- iv.bil.t[,5]} else {x <- iv.bil.t[,4]}}
                 ~^~~
NO COPY: R/BWI3_HR.R:2280:25: style: Opening curly braces should never go on their own line and should always be followed by a new line.
            {if(jj==14) {x <- iv.bil.t[,5]} else {x <- iv.bil.t[,4]}}
                        ^
NO COPY: R/BWI3_HR.R:2280:31: style: Words within variable and function names should be separated by '_' rather than '.'.
            {if(jj==14) {x <- iv.bil.t[,5]} else {x <- iv.bil.t[,4]}}
                              ^~~~~~~~
NO COPY: R/BWI3_HR.R:2280:41: style: Commas should always have a space after.
            {if(jj==14) {x <- iv.bil.t[,5]} else {x <- iv.bil.t[,4]}}
                                        ^
NO COPY: R/BWI3_HR.R:2280:43: style: Closing curly-braces should always be on their own line, unless it's followed by an else.
            {if(jj==14) {x <- iv.bil.t[,5]} else {x <- iv.bil.t[,4]}}
                                          ^
NO COPY: R/BWI3_HR.R:2280:50: style: Opening curly braces should never go on their own line and should always be followed by a new line.
            {if(jj==14) {x <- iv.bil.t[,5]} else {x <- iv.bil.t[,4]}}
                                                 ^
NO COPY: R/BWI3_HR.R:2280:56: style: Words within variable and function names should be separated by '_' rather than '.'.
            {if(jj==14) {x <- iv.bil.t[,5]} else {x <- iv.bil.t[,4]}}
                                                       ^~~~~~~~
NO COPY: R/BWI3_HR.R:2280:66: style: Commas should always have a space after.
            {if(jj==14) {x <- iv.bil.t[,5]} else {x <- iv.bil.t[,4]}}
                                                                 ^
NO COPY: R/BWI3_HR.R:2280:68: style: Closing curly-braces should always be on their own line, unless it's followed by an else.
            {if(jj==14) {x <- iv.bil.t[,5]} else {x <- iv.bil.t[,4]}}
                                                                   ^
NO COPY: R/BWI3_HR.R:2280:69: style: Closing curly-braces should always be on their own line, unless it's followed by an else.
            {if(jj==14) {x <- iv.bil.t[,5]} else {x <- iv.bil.t[,4]}}
                                                                    ^
NO COPY: R/BWI3_HR.R:2281:1: style: lines should not be more than 80 characters.
            #Zielg\u00f6\u00dfe y: ii = 1: Total; ii = 2 oder 3: Zeitbezug mPLkal
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2282:15: style: Place a space before left parenthesis, except in a function call.
            if(ii < 2) {y <- iv.bil.t[,jj]} else
              ^
NO COPY: R/BWI3_HR.R:2282:24: style: Opening curly braces should never go on their own line and should always be followed by a new line.
            if(ii < 2) {y <- iv.bil.t[,jj]} else
                       ^
NO COPY: R/BWI3_HR.R:2282:30: style: Words within variable and function names should be separated by '_' rather than '.'.
            if(ii < 2) {y <- iv.bil.t[,jj]} else
                             ^~~~~~~~
NO COPY: R/BWI3_HR.R:2282:40: style: Commas should always have a space after.
            if(ii < 2) {y <- iv.bil.t[,jj]} else
                                       ^
NO COPY: R/BWI3_HR.R:2282:43: style: Closing curly-braces should always be on their own line, unless it's followed by an else.
            if(ii < 2) {y <- iv.bil.t[,jj]} else
                                          ^
NO COPY: R/BWI3_HR.R:2283:15: style: Opening curly braces should never go on their own line and should always be followed by a new line.
              {y <- ifelse(iv.bil.t[,7]>0,iv.bil.t[,jj]/iv.bil.t[,7],0)}
              ^
NO COPY: R/BWI3_HR.R:2283:28: style: Words within variable and function names should be separated by '_' rather than '.'.
              {y <- ifelse(iv.bil.t[,7]>0,iv.bil.t[,jj]/iv.bil.t[,7],0)}
                           ^~~~~~~~
NO COPY: R/BWI3_HR.R:2283:38: style: Commas should always have a space after.
              {y <- ifelse(iv.bil.t[,7]>0,iv.bil.t[,jj]/iv.bil.t[,7],0)}
                                     ^
NO COPY: R/BWI3_HR.R:2283:40: style: Put spaces around all infix operators.
              {y <- ifelse(iv.bil.t[,7]>0,iv.bil.t[,jj]/iv.bil.t[,7],0)}
                                      ~^~
NO COPY: R/BWI3_HR.R:2283:43: style: Commas should always have a space after.
              {y <- ifelse(iv.bil.t[,7]>0,iv.bil.t[,jj]/iv.bil.t[,7],0)}
                                          ^
NO COPY: R/BWI3_HR.R:2283:43: style: Words within variable and function names should be separated by '_' rather than '.'.
              {y <- ifelse(iv.bil.t[,7]>0,iv.bil.t[,jj]/iv.bil.t[,7],0)}
                                          ^~~~~~~~
NO COPY: R/BWI3_HR.R:2283:53: style: Commas should always have a space after.
              {y <- ifelse(iv.bil.t[,7]>0,iv.bil.t[,jj]/iv.bil.t[,7],0)}
                                                    ^
NO COPY: R/BWI3_HR.R:2283:56: style: Put spaces around all infix operators.
              {y <- ifelse(iv.bil.t[,7]>0,iv.bil.t[,jj]/iv.bil.t[,7],0)}
                                                      ~^~
NO COPY: R/BWI3_HR.R:2283:57: style: Words within variable and function names should be separated by '_' rather than '.'.
              {y <- ifelse(iv.bil.t[,7]>0,iv.bil.t[,jj]/iv.bil.t[,7],0)}
                                                        ^~~~~~~~
NO COPY: R/BWI3_HR.R:2283:67: style: Commas should always have a space after.
              {y <- ifelse(iv.bil.t[,7]>0,iv.bil.t[,jj]/iv.bil.t[,7],0)}
                                                                  ^
NO COPY: R/BWI3_HR.R:2283:70: style: Commas should always have a space after.
              {y <- ifelse(iv.bil.t[,7]>0,iv.bil.t[,jj]/iv.bil.t[,7],0)}
                                                                     ^
NO COPY: R/BWI3_HR.R:2283:72: style: Closing curly-braces should always be on their own line, unless it's followed by an else.
              {y <- ifelse(iv.bil.t[,7]>0,iv.bil.t[,jj]/iv.bil.t[,7],0)}
                                                                       ^
NO COPY: R/BWI3_HR.R:2284:46: style: Commas should always have a space after.
            R.list <- r.variance.fun(cbind(x,y),nT)
                                             ^
NO COPY: R/BWI3_HR.R:2284:49: style: Commas should always have a space after.
            R.list <- r.variance.fun(cbind(x,y),nT)
                                                ^
NO COPY: R/BWI3_HR.R:2285:13: style: Words within variable and function names should be separated by '_' rather than '.'.
            VB.A.bagr.akl.dkl[iiii,1,i,j,k] <- R.list$R.xy*ifelse(ii<3,A,1)
            ^~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2285:36: style: Commas should always have a space after.
            VB.A.bagr.akl.dkl[iiii,1,i,j,k] <- R.list$R.xy*ifelse(ii<3,A,1)
                                   ^
NO COPY: R/BWI3_HR.R:2285:38: style: Commas should always have a space after.
            VB.A.bagr.akl.dkl[iiii,1,i,j,k] <- R.list$R.xy*ifelse(ii<3,A,1)
                                     ^
NO COPY: R/BWI3_HR.R:2285:40: style: Commas should always have a space after.
            VB.A.bagr.akl.dkl[iiii,1,i,j,k] <- R.list$R.xy*ifelse(ii<3,A,1)
                                       ^
NO COPY: R/BWI3_HR.R:2285:42: style: Commas should always have a space after.
            VB.A.bagr.akl.dkl[iiii,1,i,j,k] <- R.list$R.xy*ifelse(ii<3,A,1)
                                         ^
NO COPY: R/BWI3_HR.R:2285:59: style: Put spaces around all infix operators.
            VB.A.bagr.akl.dkl[iiii,1,i,j,k] <- R.list$R.xy*ifelse(ii<3,A,1)
                                                         ~^~
NO COPY: R/BWI3_HR.R:2285:69: style: Put spaces around all infix operators.
            VB.A.bagr.akl.dkl[iiii,1,i,j,k] <- R.list$R.xy*ifelse(ii<3,A,1)
                                                                   ~^~
NO COPY: R/BWI3_HR.R:2285:72: style: Commas should always have a space after.
            VB.A.bagr.akl.dkl[iiii,1,i,j,k] <- R.list$R.xy*ifelse(ii<3,A,1)
                                                                       ^
NO COPY: R/BWI3_HR.R:2285:74: style: Commas should always have a space after.
            VB.A.bagr.akl.dkl[iiii,1,i,j,k] <- R.list$R.xy*ifelse(ii<3,A,1)
                                                                         ^
NO COPY: R/BWI3_HR.R:2286:1: style: lines should not be more than 80 characters.
            VB.A.bagr.akl.dkl[iiii,2,i,j,k] <- sqrt(R.list$V.R.xy)*ifelse(ii<3,A,1)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2286:13: style: Words within variable and function names should be separated by '_' rather than '.'.
            VB.A.bagr.akl.dkl[iiii,2,i,j,k] <- sqrt(R.list$V.R.xy)*ifelse(ii<3,A,1)
            ^~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2286:36: style: Commas should always have a space after.
            VB.A.bagr.akl.dkl[iiii,2,i,j,k] <- sqrt(R.list$V.R.xy)*ifelse(ii<3,A,1)
                                   ^
NO COPY: R/BWI3_HR.R:2286:38: style: Commas should always have a space after.
            VB.A.bagr.akl.dkl[iiii,2,i,j,k] <- sqrt(R.list$V.R.xy)*ifelse(ii<3,A,1)
                                     ^
NO COPY: R/BWI3_HR.R:2286:40: style: Commas should always have a space after.
            VB.A.bagr.akl.dkl[iiii,2,i,j,k] <- sqrt(R.list$V.R.xy)*ifelse(ii<3,A,1)
                                       ^
NO COPY: R/BWI3_HR.R:2286:42: style: Commas should always have a space after.
            VB.A.bagr.akl.dkl[iiii,2,i,j,k] <- sqrt(R.list$V.R.xy)*ifelse(ii<3,A,1)
                                         ^
NO COPY: R/BWI3_HR.R:2286:60: style: Words within variable and function names should be separated by '_' rather than '.'.
            VB.A.bagr.akl.dkl[iiii,2,i,j,k] <- sqrt(R.list$V.R.xy)*ifelse(ii<3,A,1)
                                                           ^~~~~~
NO COPY: R/BWI3_HR.R:2286:67: style: Put spaces around all infix operators.
            VB.A.bagr.akl.dkl[iiii,2,i,j,k] <- sqrt(R.list$V.R.xy)*ifelse(ii<3,A,1)
                                                                 ~^~
NO COPY: R/BWI3_HR.R:2286:77: style: Put spaces around all infix operators.
            VB.A.bagr.akl.dkl[iiii,2,i,j,k] <- sqrt(R.list$V.R.xy)*ifelse(ii<3,A,1)
                                                                           ~^~
NO COPY: R/BWI3_HR.R:2286:80: style: Commas should always have a space after.
            VB.A.bagr.akl.dkl[iiii,2,i,j,k] <- sqrt(R.list$V.R.xy)*ifelse(ii<3,A,1)
                                                                               ^
NO COPY: R/BWI3_HR.R:2286:82: style: Commas should always have a space after.
            VB.A.bagr.akl.dkl[iiii,2,i,j,k] <- sqrt(R.list$V.R.xy)*ifelse(ii<3,A,1)
                                                                                 ^
NO COPY: R/BWI3_HR.R:2290:40: style: Words within variable and function names should be separated by '_' rather than '.'.
        R.list <- r.variance.fun(cbind(iv.bil.t[,2],iv.bil.t[,4]),nT)
                                       ^~~~~~~~
NO COPY: R/BWI3_HR.R:2290:50: style: Commas should always have a space after.
        R.list <- r.variance.fun(cbind(iv.bil.t[,2],iv.bil.t[,4]),nT)
                                                 ^
NO COPY: R/BWI3_HR.R:2290:53: style: Commas should always have a space after.
        R.list <- r.variance.fun(cbind(iv.bil.t[,2],iv.bil.t[,4]),nT)
                                                    ^
NO COPY: R/BWI3_HR.R:2290:53: style: Words within variable and function names should be separated by '_' rather than '.'.
        R.list <- r.variance.fun(cbind(iv.bil.t[,2],iv.bil.t[,4]),nT)
                                                    ^~~~~~~~
NO COPY: R/BWI3_HR.R:2290:63: style: Commas should always have a space after.
        R.list <- r.variance.fun(cbind(iv.bil.t[,2],iv.bil.t[,4]),nT)
                                                              ^
NO COPY: R/BWI3_HR.R:2290:67: style: Commas should always have a space after.
        R.list <- r.variance.fun(cbind(iv.bil.t[,2],iv.bil.t[,4]),nT)
                                                                  ^
NO COPY: R/BWI3_HR.R:2292:9: style: Variable and function names should be all lowercase.
        iVB.bagr.akl.dkl[16,1,i,j,k] <- R.list$R.xy*A
        ^~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2292:9: style: Words within variable and function names should be separated by '_' rather than '.'.
        iVB.bagr.akl.dkl[16,1,i,j,k] <- R.list$R.xy*A
        ^~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2292:29: style: Commas should always have a space after.
        iVB.bagr.akl.dkl[16,1,i,j,k] <- R.list$R.xy*A
                            ^
NO COPY: R/BWI3_HR.R:2292:31: style: Commas should always have a space after.
        iVB.bagr.akl.dkl[16,1,i,j,k] <- R.list$R.xy*A
                              ^
NO COPY: R/BWI3_HR.R:2292:33: style: Commas should always have a space after.
        iVB.bagr.akl.dkl[16,1,i,j,k] <- R.list$R.xy*A
                                ^
NO COPY: R/BWI3_HR.R:2292:35: style: Commas should always have a space after.
        iVB.bagr.akl.dkl[16,1,i,j,k] <- R.list$R.xy*A
                                  ^
NO COPY: R/BWI3_HR.R:2292:52: style: Put spaces around all infix operators.
        iVB.bagr.akl.dkl[16,1,i,j,k] <- R.list$R.xy*A
                                                  ~^~
NO COPY: R/BWI3_HR.R:2293:9: style: Variable and function names should be all lowercase.
        iVB.bagr.akl.dkl[16,2,i,j,k] <- sqrt(R.list$V.R.xy)*A
        ^~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2293:9: style: Words within variable and function names should be separated by '_' rather than '.'.
        iVB.bagr.akl.dkl[16,2,i,j,k] <- sqrt(R.list$V.R.xy)*A
        ^~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2293:29: style: Commas should always have a space after.
        iVB.bagr.akl.dkl[16,2,i,j,k] <- sqrt(R.list$V.R.xy)*A
                            ^
NO COPY: R/BWI3_HR.R:2293:31: style: Commas should always have a space after.
        iVB.bagr.akl.dkl[16,2,i,j,k] <- sqrt(R.list$V.R.xy)*A
                              ^
NO COPY: R/BWI3_HR.R:2293:33: style: Commas should always have a space after.
        iVB.bagr.akl.dkl[16,2,i,j,k] <- sqrt(R.list$V.R.xy)*A
                                ^
NO COPY: R/BWI3_HR.R:2293:35: style: Commas should always have a space after.
        iVB.bagr.akl.dkl[16,2,i,j,k] <- sqrt(R.list$V.R.xy)*A
                                  ^
NO COPY: R/BWI3_HR.R:2293:53: style: Words within variable and function names should be separated by '_' rather than '.'.
        iVB.bagr.akl.dkl[16,2,i,j,k] <- sqrt(R.list$V.R.xy)*A
                                                    ^~~~~~
NO COPY: R/BWI3_HR.R:2293:60: style: Put spaces around all infix operators.
        iVB.bagr.akl.dkl[16,2,i,j,k] <- sqrt(R.list$V.R.xy)*A
                                                          ~^~
NO COPY: R/BWI3_HR.R:2295:40: style: Words within variable and function names should be separated by '_' rather than '.'.
        R.list <- r.variance.fun(cbind(iv.bil.t[,2],iv.bil.t[,5]),nT)
                                       ^~~~~~~~
NO COPY: R/BWI3_HR.R:2295:50: style: Commas should always have a space after.
        R.list <- r.variance.fun(cbind(iv.bil.t[,2],iv.bil.t[,5]),nT)
                                                 ^
NO COPY: R/BWI3_HR.R:2295:53: style: Commas should always have a space after.
        R.list <- r.variance.fun(cbind(iv.bil.t[,2],iv.bil.t[,5]),nT)
                                                    ^
NO COPY: R/BWI3_HR.R:2295:53: style: Words within variable and function names should be separated by '_' rather than '.'.
        R.list <- r.variance.fun(cbind(iv.bil.t[,2],iv.bil.t[,5]),nT)
                                                    ^~~~~~~~
NO COPY: R/BWI3_HR.R:2295:63: style: Commas should always have a space after.
        R.list <- r.variance.fun(cbind(iv.bil.t[,2],iv.bil.t[,5]),nT)
                                                              ^
NO COPY: R/BWI3_HR.R:2295:67: style: Commas should always have a space after.
        R.list <- r.variance.fun(cbind(iv.bil.t[,2],iv.bil.t[,5]),nT)
                                                                  ^
NO COPY: R/BWI3_HR.R:2297:9: style: Variable and function names should be all lowercase.
        iVB.bagr.akl.dkl[17,1,i,j,k] <- R.list$R.xy*A
        ^~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2297:9: style: Words within variable and function names should be separated by '_' rather than '.'.
        iVB.bagr.akl.dkl[17,1,i,j,k] <- R.list$R.xy*A
        ^~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2297:29: style: Commas should always have a space after.
        iVB.bagr.akl.dkl[17,1,i,j,k] <- R.list$R.xy*A
                            ^
NO COPY: R/BWI3_HR.R:2297:31: style: Commas should always have a space after.
        iVB.bagr.akl.dkl[17,1,i,j,k] <- R.list$R.xy*A
                              ^
NO COPY: R/BWI3_HR.R:2297:33: style: Commas should always have a space after.
        iVB.bagr.akl.dkl[17,1,i,j,k] <- R.list$R.xy*A
                                ^
NO COPY: R/BWI3_HR.R:2297:35: style: Commas should always have a space after.
        iVB.bagr.akl.dkl[17,1,i,j,k] <- R.list$R.xy*A
                                  ^
NO COPY: R/BWI3_HR.R:2297:52: style: Put spaces around all infix operators.
        iVB.bagr.akl.dkl[17,1,i,j,k] <- R.list$R.xy*A
                                                  ~^~
NO COPY: R/BWI3_HR.R:2298:9: style: Variable and function names should be all lowercase.
        iVB.bagr.akl.dkl[17,2,i,j,k] <- sqrt(R.list$V.R.xy)*A
        ^~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2298:9: style: Words within variable and function names should be separated by '_' rather than '.'.
        iVB.bagr.akl.dkl[17,2,i,j,k] <- sqrt(R.list$V.R.xy)*A
        ^~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2298:29: style: Commas should always have a space after.
        iVB.bagr.akl.dkl[17,2,i,j,k] <- sqrt(R.list$V.R.xy)*A
                            ^
NO COPY: R/BWI3_HR.R:2298:31: style: Commas should always have a space after.
        iVB.bagr.akl.dkl[17,2,i,j,k] <- sqrt(R.list$V.R.xy)*A
                              ^
NO COPY: R/BWI3_HR.R:2298:33: style: Commas should always have a space after.
        iVB.bagr.akl.dkl[17,2,i,j,k] <- sqrt(R.list$V.R.xy)*A
                                ^
NO COPY: R/BWI3_HR.R:2298:35: style: Commas should always have a space after.
        iVB.bagr.akl.dkl[17,2,i,j,k] <- sqrt(R.list$V.R.xy)*A
                                  ^
NO COPY: R/BWI3_HR.R:2298:53: style: Words within variable and function names should be separated by '_' rather than '.'.
        iVB.bagr.akl.dkl[17,2,i,j,k] <- sqrt(R.list$V.R.xy)*A
                                                    ^~~~~~
NO COPY: R/BWI3_HR.R:2298:60: style: Put spaces around all infix operators.
        iVB.bagr.akl.dkl[17,2,i,j,k] <- sqrt(R.list$V.R.xy)*A
                                                          ~^~
NO COPY: R/BWI3_HR.R:2303:21: style: Words within variable and function names should be separated by '_' rather than '.'.
        x <- ifelse(iv.bil.t[,6]>0,iv.bil.t[,3],0)
                    ^~~~~~~~
NO COPY: R/BWI3_HR.R:2303:31: style: Commas should always have a space after.
        x <- ifelse(iv.bil.t[,6]>0,iv.bil.t[,3],0)
                              ^
NO COPY: R/BWI3_HR.R:2303:33: style: Put spaces around all infix operators.
        x <- ifelse(iv.bil.t[,6]>0,iv.bil.t[,3],0)
                               ~^~
NO COPY: R/BWI3_HR.R:2303:36: style: Commas should always have a space after.
        x <- ifelse(iv.bil.t[,6]>0,iv.bil.t[,3],0)
                                   ^
NO COPY: R/BWI3_HR.R:2303:36: style: Words within variable and function names should be separated by '_' rather than '.'.
        x <- ifelse(iv.bil.t[,6]>0,iv.bil.t[,3],0)
                                   ^~~~~~~~
NO COPY: R/BWI3_HR.R:2303:46: style: Commas should always have a space after.
        x <- ifelse(iv.bil.t[,6]>0,iv.bil.t[,3],0)
                                             ^
NO COPY: R/BWI3_HR.R:2303:49: style: Commas should always have a space after.
        x <- ifelse(iv.bil.t[,6]>0,iv.bil.t[,3],0)
                                                ^
NO COPY: R/BWI3_HR.R:2304:42: style: Commas should always have a space after.
        R.list <- r.variance.fun(cbind(x,iv.bil.t[,3]*iv.bil.t[,6]),nT)
                                         ^
NO COPY: R/BWI3_HR.R:2304:42: style: Words within variable and function names should be separated by '_' rather than '.'.
        R.list <- r.variance.fun(cbind(x,iv.bil.t[,3]*iv.bil.t[,6]),nT)
                                         ^~~~~~~~
NO COPY: R/BWI3_HR.R:2304:52: style: Commas should always have a space after.
        R.list <- r.variance.fun(cbind(x,iv.bil.t[,3]*iv.bil.t[,6]),nT)
                                                   ^
NO COPY: R/BWI3_HR.R:2304:54: style: Put spaces around all infix operators.
        R.list <- r.variance.fun(cbind(x,iv.bil.t[,3]*iv.bil.t[,6]),nT)
                                                    ~^~
NO COPY: R/BWI3_HR.R:2304:55: style: Words within variable and function names should be separated by '_' rather than '.'.
        R.list <- r.variance.fun(cbind(x,iv.bil.t[,3]*iv.bil.t[,6]),nT)
                                                      ^~~~~~~~
NO COPY: R/BWI3_HR.R:2304:65: style: Commas should always have a space after.
        R.list <- r.variance.fun(cbind(x,iv.bil.t[,3]*iv.bil.t[,6]),nT)
                                                                ^
NO COPY: R/BWI3_HR.R:2304:69: style: Commas should always have a space after.
        R.list <- r.variance.fun(cbind(x,iv.bil.t[,3]*iv.bil.t[,6]),nT)
                                                                    ^
NO COPY: R/BWI3_HR.R:2306:9: style: Variable and function names should be all lowercase.
        iVB.bagr.akl.dkl[18,1,i,j,k] <- R.list$R.xy
        ^~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2306:9: style: Words within variable and function names should be separated by '_' rather than '.'.
        iVB.bagr.akl.dkl[18,1,i,j,k] <- R.list$R.xy
        ^~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2306:29: style: Commas should always have a space after.
        iVB.bagr.akl.dkl[18,1,i,j,k] <- R.list$R.xy
                            ^
NO COPY: R/BWI3_HR.R:2306:31: style: Commas should always have a space after.
        iVB.bagr.akl.dkl[18,1,i,j,k] <- R.list$R.xy
                              ^
NO COPY: R/BWI3_HR.R:2306:33: style: Commas should always have a space after.
        iVB.bagr.akl.dkl[18,1,i,j,k] <- R.list$R.xy
                                ^
NO COPY: R/BWI3_HR.R:2306:35: style: Commas should always have a space after.
        iVB.bagr.akl.dkl[18,1,i,j,k] <- R.list$R.xy
                                  ^
NO COPY: R/BWI3_HR.R:2307:9: style: Variable and function names should be all lowercase.
        iVB.bagr.akl.dkl[18,2,i,j,k] <- sqrt(R.list$V.R.xy)
        ^~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2307:9: style: Words within variable and function names should be separated by '_' rather than '.'.
        iVB.bagr.akl.dkl[18,2,i,j,k] <- sqrt(R.list$V.R.xy)
        ^~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2307:29: style: Commas should always have a space after.
        iVB.bagr.akl.dkl[18,2,i,j,k] <- sqrt(R.list$V.R.xy)
                            ^
NO COPY: R/BWI3_HR.R:2307:31: style: Commas should always have a space after.
        iVB.bagr.akl.dkl[18,2,i,j,k] <- sqrt(R.list$V.R.xy)
                              ^
NO COPY: R/BWI3_HR.R:2307:33: style: Commas should always have a space after.
        iVB.bagr.akl.dkl[18,2,i,j,k] <- sqrt(R.list$V.R.xy)
                                ^
NO COPY: R/BWI3_HR.R:2307:35: style: Commas should always have a space after.
        iVB.bagr.akl.dkl[18,2,i,j,k] <- sqrt(R.list$V.R.xy)
                                  ^
NO COPY: R/BWI3_HR.R:2307:53: style: Words within variable and function names should be separated by '_' rather than '.'.
        iVB.bagr.akl.dkl[18,2,i,j,k] <- sqrt(R.list$V.R.xy)
                                                    ^~~~~~
NO COPY: R/BWI3_HR.R:2310:21: style: Words within variable and function names should be separated by '_' rather than '.'.
        x <- ifelse(iv.bil.t[,7]>0,iv.bil.t[,3],0)
                    ^~~~~~~~
NO COPY: R/BWI3_HR.R:2310:31: style: Commas should always have a space after.
        x <- ifelse(iv.bil.t[,7]>0,iv.bil.t[,3],0)
                              ^
NO COPY: R/BWI3_HR.R:2310:33: style: Put spaces around all infix operators.
        x <- ifelse(iv.bil.t[,7]>0,iv.bil.t[,3],0)
                               ~^~
NO COPY: R/BWI3_HR.R:2310:36: style: Commas should always have a space after.
        x <- ifelse(iv.bil.t[,7]>0,iv.bil.t[,3],0)
                                   ^
NO COPY: R/BWI3_HR.R:2310:36: style: Words within variable and function names should be separated by '_' rather than '.'.
        x <- ifelse(iv.bil.t[,7]>0,iv.bil.t[,3],0)
                                   ^~~~~~~~
NO COPY: R/BWI3_HR.R:2310:46: style: Commas should always have a space after.
        x <- ifelse(iv.bil.t[,7]>0,iv.bil.t[,3],0)
                                             ^
NO COPY: R/BWI3_HR.R:2310:49: style: Commas should always have a space after.
        x <- ifelse(iv.bil.t[,7]>0,iv.bil.t[,3],0)
                                                ^
NO COPY: R/BWI3_HR.R:2311:42: style: Commas should always have a space after.
        R.list <- r.variance.fun(cbind(x,iv.bil.t[,3]*iv.bil.t[,7]),nT)
                                         ^
NO COPY: R/BWI3_HR.R:2311:42: style: Words within variable and function names should be separated by '_' rather than '.'.
        R.list <- r.variance.fun(cbind(x,iv.bil.t[,3]*iv.bil.t[,7]),nT)
                                         ^~~~~~~~
NO COPY: R/BWI3_HR.R:2311:52: style: Commas should always have a space after.
        R.list <- r.variance.fun(cbind(x,iv.bil.t[,3]*iv.bil.t[,7]),nT)
                                                   ^
NO COPY: R/BWI3_HR.R:2311:54: style: Put spaces around all infix operators.
        R.list <- r.variance.fun(cbind(x,iv.bil.t[,3]*iv.bil.t[,7]),nT)
                                                    ~^~
NO COPY: R/BWI3_HR.R:2311:55: style: Words within variable and function names should be separated by '_' rather than '.'.
        R.list <- r.variance.fun(cbind(x,iv.bil.t[,3]*iv.bil.t[,7]),nT)
                                                      ^~~~~~~~
NO COPY: R/BWI3_HR.R:2311:65: style: Commas should always have a space after.
        R.list <- r.variance.fun(cbind(x,iv.bil.t[,3]*iv.bil.t[,7]),nT)
                                                                ^
NO COPY: R/BWI3_HR.R:2311:69: style: Commas should always have a space after.
        R.list <- r.variance.fun(cbind(x,iv.bil.t[,3]*iv.bil.t[,7]),nT)
                                                                    ^
NO COPY: R/BWI3_HR.R:2313:9: style: Words within variable and function names should be separated by '_' rather than '.'.
        VB.A.bagr.akl.dkl[16,1,i,j,k] <- R.list$R.xy
        ^~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2313:30: style: Commas should always have a space after.
        VB.A.bagr.akl.dkl[16,1,i,j,k] <- R.list$R.xy
                             ^
NO COPY: R/BWI3_HR.R:2313:32: style: Commas should always have a space after.
        VB.A.bagr.akl.dkl[16,1,i,j,k] <- R.list$R.xy
                               ^
NO COPY: R/BWI3_HR.R:2313:34: style: Commas should always have a space after.
        VB.A.bagr.akl.dkl[16,1,i,j,k] <- R.list$R.xy
                                 ^
NO COPY: R/BWI3_HR.R:2313:36: style: Commas should always have a space after.
        VB.A.bagr.akl.dkl[16,1,i,j,k] <- R.list$R.xy
                                   ^
NO COPY: R/BWI3_HR.R:2314:9: style: Words within variable and function names should be separated by '_' rather than '.'.
        VB.A.bagr.akl.dkl[16,2,i,j,k] <- sqrt(R.list$V.R.xy)
        ^~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2314:30: style: Commas should always have a space after.
        VB.A.bagr.akl.dkl[16,2,i,j,k] <- sqrt(R.list$V.R.xy)
                             ^
NO COPY: R/BWI3_HR.R:2314:32: style: Commas should always have a space after.
        VB.A.bagr.akl.dkl[16,2,i,j,k] <- sqrt(R.list$V.R.xy)
                               ^
NO COPY: R/BWI3_HR.R:2314:34: style: Commas should always have a space after.
        VB.A.bagr.akl.dkl[16,2,i,j,k] <- sqrt(R.list$V.R.xy)
                                 ^
NO COPY: R/BWI3_HR.R:2314:36: style: Commas should always have a space after.
        VB.A.bagr.akl.dkl[16,2,i,j,k] <- sqrt(R.list$V.R.xy)
                                   ^
NO COPY: R/BWI3_HR.R:2314:54: style: Words within variable and function names should be separated by '_' rather than '.'.
        VB.A.bagr.akl.dkl[16,2,i,j,k] <- sqrt(R.list$V.R.xy)
                                                     ^~~~~~
NO COPY: R/BWI3_HR.R:2320:4: style: Commented code should be removed.
  #AKL-Labels
   ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:2321:34: style: Commas should always have a space after.
  akl.lab <- akl.lab.fun(A.klass,A.k)
                                 ^
NO COPY: R/BWI3_HR.R:2323:4: style: Commented code should be removed.
  #DKL-Labels
   ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:2324:34: style: Commas should always have a space after.
  dkl.lab <- dkl.lab.fun(D.klass,D.k) #k\u00e4/16.07.14
                                 ^
NO COPY: R/BWI3_HR.R:2327:20: style: Commas should always have a space after.
  a <- regexpr("/",baeume.3$Bemerk[baeume.3$STP==0][1],fixed=T)
                   ^
NO COPY: R/BWI3_HR.R:2327:48: style: Put spaces around all infix operators.
  a <- regexpr("/",baeume.3$Bemerk[baeume.3$STP==0][1],fixed=T)
                                              ~^~~
NO COPY: R/BWI3_HR.R:2327:56: style: Commas should always have a space after.
  a <- regexpr("/",baeume.3$Bemerk[baeume.3$STP==0][1],fixed=T)
                                                       ^
NO COPY: R/BWI3_HR.R:2327:61: style: Put spaces around all infix operators.
  a <- regexpr("/",baeume.3$Bemerk[baeume.3$STP==0][1],fixed=T)
                                                           ~^~
NO COPY: R/BWI3_HR.R:2328:55: style: Put spaces around all infix operators.
  b <- nchar(as.character(baeume.3$Bemerk[baeume.3$STP==0][1]))
                                                     ~^~~
NO COPY: R/BWI3_HR.R:2329:1: style: lines should not be more than 80 characters.
  version.baeume.b  <- substr(as.character(baeume.3$Bemerk[baeume.3$STP==0][1]),a,b)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2329:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  version.baeume.b  <- substr(as.character(baeume.3$Bemerk[baeume.3$STP==0][1]),a,b)
  ^~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2329:3: warning: local variable 'version.baeume.b' assigned but may not be used
  version.baeume.b  <- substr(as.character(baeume.3$Bemerk[baeume.3$STP==0][1]),a,b)
  ^~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2329:72: style: Put spaces around all infix operators.
  version.baeume.b  <- substr(as.character(baeume.3$Bemerk[baeume.3$STP==0][1]),a,b)
                                                                      ~^~~
NO COPY: R/BWI3_HR.R:2329:81: style: Commas should always have a space after.
  version.baeume.b  <- substr(as.character(baeume.3$Bemerk[baeume.3$STP==0][1]),a,b)
                                                                                ^
NO COPY: R/BWI3_HR.R:2329:83: style: Commas should always have a space after.
  version.baeume.b  <- substr(as.character(baeume.3$Bemerk[baeume.3$STP==0][1]),a,b)
                                                                                  ^
NO COPY: R/BWI3_HR.R:2330:20: style: Put spaces around all infix operators.
  Log <- list(Datum=Sys.time(),
                  ~^~
NO COPY: R/BWI3_HR.R:2331:1: style: lines should not be more than 80 characters.
      Version.baeume.b=substr(as.character(baeume.3$Bemerk[baeume.3$STP==0][1]),a,b))
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2331:23: style: Put spaces around all infix operators.
      Version.baeume.b=substr(as.character(baeume.3$Bemerk[baeume.3$STP==0][1]),a,b))
                     ~^~
NO COPY: R/BWI3_HR.R:2331:72: style: Put spaces around all infix operators.
      Version.baeume.b=substr(as.character(baeume.3$Bemerk[baeume.3$STP==0][1]),a,b))
                                                                      ~^~~
NO COPY: R/BWI3_HR.R:2331:81: style: Commas should always have a space after.
      Version.baeume.b=substr(as.character(baeume.3$Bemerk[baeume.3$STP==0][1]),a,b))
                                                                                ^
NO COPY: R/BWI3_HR.R:2331:83: style: Commas should always have a space after.
      Version.baeume.b=substr(as.character(baeume.3$Bemerk[baeume.3$STP==0][1]),a,b))
                                                                                  ^
NO COPY: R/BWI3_HR.R:2333:18: style: Put spaces around all infix operators.
  return(list(Log=Log, Stratum=auswahl,
                ~^~
NO COPY: R/BWI3_HR.R:2333:31: style: Put spaces around all infix operators.
  return(list(Log=Log, Stratum=auswahl,
                             ~^~
NO COPY: R/BWI3_HR.R:2334:18: style: Put spaces around all infix operators.
              HBF=HBF, se_HBF=se.HBF,
                ~^~
NO COPY: R/BWI3_HR.R:2334:30: style: Put spaces around all infix operators.
              HBF=HBF, se_HBF=se.HBF,
                            ~^~
NO COPY: R/BWI3_HR.R:2335:24: style: Put spaces around all infix operators.
              Attribute=c("V_DhmR", "V_DhmR_HB", "V_EoR", "oiB","G",
                      ~^~
NO COPY: R/BWI3_HR.R:2335:65: style: Commas should always have a space after.
              Attribute=c("V_DhmR", "V_DhmR_HB", "V_EoR", "oiB","G",
                                                                ^
NO COPY: R/BWI3_HR.R:2336:71: style: Commas should always have a space after.
                        "V_DhmR/J", "V_DhmR_HB/J", "V_EoR/J", "oiB/J","G/J",
                                                                      ^
NO COPY: R/BWI3_HR.R:2338:58: style: Commas should always have a space after.
                        "oiB/ha/J", "G/ha/J", "mBAF_mLK","mBAFoLK","mPL","nT"),
                                                         ^
NO COPY: R/BWI3_HR.R:2338:68: style: Commas should always have a space after.
                        "oiB/ha/J", "G/ha/J", "mBAF_mLK","mBAFoLK","mPL","nT"),
                                                                   ^
NO COPY: R/BWI3_HR.R:2338:74: style: Commas should always have a space after.
                        "oiB/ha/J", "G/ha/J", "mBAF_mLK","mBAFoLK","mPL","nT"),
                                                                         ^
NO COPY: R/BWI3_HR.R:2339:33: style: Put spaces around all infix operators.
              "Gr\u00f6\u00dfen"=c("Wert","Standardfehler"),
                               ~^~
NO COPY: R/BWI3_HR.R:2339:43: style: Commas should always have a space after.
              "Gr\u00f6\u00dfen"=c("Wert","Standardfehler"),
                                          ^
NO COPY: R/BWI3_HR.R:2342:34: style: Variable and function names should be all lowercase.
              iVB.bagr.akl.dkl = iVB.bagr.akl.dkl,
                                 ^~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2342:34: style: Words within variable and function names should be separated by '_' rather than '.'.
              iVB.bagr.akl.dkl = iVB.bagr.akl.dkl,
                                 ^~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2343:35: style: Words within variable and function names should be separated by '_' rather than '.'.
              VB.A.bagr.akl.dkl = VB.A.bagr.akl.dkl))
                                  ^~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2381:35: style: Commas should always have a space after.
verbiss.bagr.fun <- function(verj,ecken,trakte,auswahl,inv,A,
                                  ^
NO COPY: R/BWI3_HR.R:2381:41: style: Commas should always have a space after.
verbiss.bagr.fun <- function(verj,ecken,trakte,auswahl,inv,A,
                                        ^
NO COPY: R/BWI3_HR.R:2381:48: style: Commas should always have a space after.
verbiss.bagr.fun <- function(verj,ecken,trakte,auswahl,inv,A,
                                               ^
NO COPY: R/BWI3_HR.R:2381:56: style: Commas should always have a space after.
verbiss.bagr.fun <- function(verj,ecken,trakte,auswahl,inv,A,
                                                       ^
NO COPY: R/BWI3_HR.R:2381:60: style: Commas should always have a space after.
verbiss.bagr.fun <- function(verj,ecken,trakte,auswahl,inv,A,
                                                           ^
NO COPY: R/BWI3_HR.R:2383:34: style: Commas should always have a space after.
  stratum <- stratum.fun(auswahl,ecken)
                                 ^
NO COPY: R/BWI3_HR.R:2388:31: style: Commas should always have a space after.
  y <- stats::aggregate(rep(1,length(stratum[,1])),by=list(stratum$tnr),sum)
                              ^
NO COPY: R/BWI3_HR.R:2388:47: style: Commas should always have a space after.
  y <- stats::aggregate(rep(1,length(stratum[,1])),by=list(stratum$tnr),sum)
                                              ^
NO COPY: R/BWI3_HR.R:2388:52: style: Commas should always have a space after.
  y <- stats::aggregate(rep(1,length(stratum[,1])),by=list(stratum$tnr),sum)
                                                   ^
NO COPY: R/BWI3_HR.R:2388:54: style: Put spaces around all infix operators.
  y <- stats::aggregate(rep(1,length(stratum[,1])),by=list(stratum$tnr),sum)
                                                    ~^~
NO COPY: R/BWI3_HR.R:2388:73: style: Commas should always have a space after.
  y <- stats::aggregate(rep(1,length(stratum[,1])),by=list(stratum$tnr),sum)
                                                                        ^
NO COPY: R/BWI3_HR.R:2389:23: style: Commas should always have a space after.
  names(y) <- c("tnr","y")
                      ^
NO COPY: R/BWI3_HR.R:2391:42: style: Commas should always have a space after.
  y <- merge(trakte[TRUE, c("tnr", "m")],y,by=c("tnr"),all.x=T)
                                         ^
NO COPY: R/BWI3_HR.R:2391:44: style: Commas should always have a space after.
  y <- merge(trakte[TRUE, c("tnr", "m")],y,by=c("tnr"),all.x=T)
                                           ^
NO COPY: R/BWI3_HR.R:2391:46: style: Put spaces around all infix operators.
  y <- merge(trakte[TRUE, c("tnr", "m")],y,by=c("tnr"),all.x=T)
                                            ~^~
NO COPY: R/BWI3_HR.R:2391:56: style: Commas should always have a space after.
  y <- merge(trakte[TRUE, c("tnr", "m")],y,by=c("tnr"),all.x=T)
                                                       ^
NO COPY: R/BWI3_HR.R:2391:61: style: Put spaces around all infix operators.
  y <- merge(trakte[TRUE, c("tnr", "m")],y,by=c("tnr"),all.x=T)
                                                           ~^~
NO COPY: R/BWI3_HR.R:2393:31: style: Commas should always have a space after.
  r.list <- r.variance.fun(y[,2:3],length(trakte[,1]))
                              ^
NO COPY: R/BWI3_HR.R:2393:36: style: Commas should always have a space after.
  r.list <- r.variance.fun(y[,2:3],length(trakte[,1]))
                                   ^
NO COPY: R/BWI3_HR.R:2393:51: style: Commas should always have a space after.
  r.list <- r.variance.fun(y[,2:3],length(trakte[,1]))
                                                  ^
NO COPY: R/BWI3_HR.R:2394:23: style: Put spaces around all infix operators.
  T.hbf <- r.list$R.xy*A
                     ~^~
NO COPY: R/BWI3_HR.R:2395:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  se.T.hbf <- sqrt(r.list$V.R.xy)*A
  ^~~~~~~~
NO COPY: R/BWI3_HR.R:2395:27: style: Words within variable and function names should be separated by '_' rather than '.'.
  se.T.hbf <- sqrt(r.list$V.R.xy)*A
                          ^~~~~~
NO COPY: R/BWI3_HR.R:2395:34: style: Put spaces around all infix operators.
  se.T.hbf <- sqrt(r.list$V.R.xy)*A
                                ~^~
NO COPY: R/BWI3_HR.R:2396:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: R/BWI3_HR.R:2400:20: style: Put spaces around all infix operators.
  inv <- ifelse(inv>1,2,inv)
                  ~^~
NO COPY: R/BWI3_HR.R:2400:23: style: Commas should always have a space after.
  inv <- ifelse(inv>1,2,inv)
                      ^
NO COPY: R/BWI3_HR.R:2400:25: style: Commas should always have a space after.
  inv <- ifelse(inv>1,2,inv)
                        ^
NO COPY: R/BWI3_HR.R:2401:26: style: Commas should always have a space after.
  names(verj) <- sub(inv,names(verj),replacement="")
                         ^
NO COPY: R/BWI3_HR.R:2401:38: style: Commas should always have a space after.
  names(verj) <- sub(inv,names(verj),replacement="")
                                     ^
NO COPY: R/BWI3_HR.R:2401:49: style: Put spaces around all infix operators.
  names(verj) <- sub(inv,names(verj),replacement="")
                                               ~^~
NO COPY: R/BWI3_HR.R:2403:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  verj.s.bis130 <- merge(verj[verj[["h"]] < 1.3, 
  ^~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2403:49: style: Trailing whitespace is superfluous.
  verj.s.bis130 <- merge(verj[verj[["h"]] < 1.3, 
                                                ^
NO COPY: R/BWI3_HR.R:2405:52: style: Commas should always have a space after.
                    stratum[TRUE, c("tnr", "enr")],by=c("tnr","enr"))
                                                   ^
NO COPY: R/BWI3_HR.R:2405:54: style: Put spaces around all infix operators.
                    stratum[TRUE, c("tnr", "enr")],by=c("tnr","enr"))
                                                    ~^~
NO COPY: R/BWI3_HR.R:2405:63: style: Commas should always have a space after.
                    stratum[TRUE, c("tnr", "enr")],by=c("tnr","enr"))
                                                              ^
NO COPY: R/BWI3_HR.R:2406:1: style: Trailing whitespace is superfluous.
                    
^~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2407:23: style: Commas should always have a space after.
  bagr.list <- c("FI","TA","DGL","KI","LAE","BU","EI","ALH","ALN")
                      ^
NO COPY: R/BWI3_HR.R:2407:28: style: Commas should always have a space after.
  bagr.list <- c("FI","TA","DGL","KI","LAE","BU","EI","ALH","ALN")
                           ^
NO COPY: R/BWI3_HR.R:2407:34: style: Commas should always have a space after.
  bagr.list <- c("FI","TA","DGL","KI","LAE","BU","EI","ALH","ALN")
                                 ^
NO COPY: R/BWI3_HR.R:2407:39: style: Commas should always have a space after.
  bagr.list <- c("FI","TA","DGL","KI","LAE","BU","EI","ALH","ALN")
                                      ^
NO COPY: R/BWI3_HR.R:2407:45: style: Commas should always have a space after.
  bagr.list <- c("FI","TA","DGL","KI","LAE","BU","EI","ALH","ALN")
                                            ^
NO COPY: R/BWI3_HR.R:2407:50: style: Commas should always have a space after.
  bagr.list <- c("FI","TA","DGL","KI","LAE","BU","EI","ALH","ALN")
                                                 ^
NO COPY: R/BWI3_HR.R:2407:55: style: Commas should always have a space after.
  bagr.list <- c("FI","TA","DGL","KI","LAE","BU","EI","ALH","ALN")
                                                      ^
NO COPY: R/BWI3_HR.R:2407:61: style: Commas should always have a space after.
  bagr.list <- c("FI","TA","DGL","KI","LAE","BU","EI","ALH","ALN")
                                                            ^
NO COPY: R/BWI3_HR.R:2410:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  verj.s.bis130 <- merge(verj.s.bis130, bacode[TRUE, c("ICode", "BaGr")],
  ^~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2410:26: style: Words within variable and function names should be separated by '_' rather than '.'.
  verj.s.bis130 <- merge(verj.s.bis130, bacode[TRUE, c("ICode", "BaGr")],
                         ^~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2411:35: style: Put spaces around all infix operators.
                              by.x="ba",by.y="ICode",all.x=T)
                                 ~^~
NO COPY: R/BWI3_HR.R:2411:41: style: Commas should always have a space after.
                              by.x="ba",by.y="ICode",all.x=T)
                                        ^
NO COPY: R/BWI3_HR.R:2411:45: style: Put spaces around all infix operators.
                              by.x="ba",by.y="ICode",all.x=T)
                                           ~^~
NO COPY: R/BWI3_HR.R:2411:54: style: Commas should always have a space after.
                              by.x="ba",by.y="ICode",all.x=T)
                                                     ^
NO COPY: R/BWI3_HR.R:2411:59: style: Put spaces around all infix operators.
                              by.x="ba",by.y="ICode",all.x=T)
                                                         ~^~
NO COPY: R/BWI3_HR.R:2412:1: style: Trailing whitespace is superfluous.
                              
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2414:33: style: Words within variable and function names should be separated by '_' rather than '.'.
  verbiss.a <- stats::aggregate(verj.s.bis130$nha,
                                ^~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2415:15: style: Put spaces around all infix operators.
            by=list(verj.s.bis130$tnr,verj.s.bis130$enr,verj.s.bis130$BaGr),sum)
             ~^~
NO COPY: R/BWI3_HR.R:2415:21: style: Words within variable and function names should be separated by '_' rather than '.'.
            by=list(verj.s.bis130$tnr,verj.s.bis130$enr,verj.s.bis130$BaGr),sum)
                    ^~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2415:39: style: Commas should always have a space after.
            by=list(verj.s.bis130$tnr,verj.s.bis130$enr,verj.s.bis130$BaGr),sum)
                                      ^
NO COPY: R/BWI3_HR.R:2415:39: style: Words within variable and function names should be separated by '_' rather than '.'.
            by=list(verj.s.bis130$tnr,verj.s.bis130$enr,verj.s.bis130$BaGr),sum)
                                      ^~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2415:57: style: Commas should always have a space after.
            by=list(verj.s.bis130$tnr,verj.s.bis130$enr,verj.s.bis130$BaGr),sum)
                                                        ^
NO COPY: R/BWI3_HR.R:2415:57: style: Words within variable and function names should be separated by '_' rather than '.'.
            by=list(verj.s.bis130$tnr,verj.s.bis130$enr,verj.s.bis130$BaGr),sum)
                                                        ^~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2415:71: style: Variable and function names should be all lowercase.
            by=list(verj.s.bis130$tnr,verj.s.bis130$enr,verj.s.bis130$BaGr),sum)
                                                                      ^~~~
NO COPY: R/BWI3_HR.R:2415:77: style: Commas should always have a space after.
            by=list(verj.s.bis130$tnr,verj.s.bis130$enr,verj.s.bis130$BaGr),sum)
                                                                            ^
NO COPY: R/BWI3_HR.R:2416:1: style: lines should not be more than 80 characters.
  verbiss.0 <-stats::aggregate(verj.s.bis130$nha*ifelse(verj.s.bis130$biss==0,1,0),
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2416:13: style: Put spaces around all infix operators.
  verbiss.0 <-stats::aggregate(verj.s.bis130$nha*ifelse(verj.s.bis130$biss==0,1,0),
            ^~~
NO COPY: R/BWI3_HR.R:2416:32: style: Words within variable and function names should be separated by '_' rather than '.'.
  verbiss.0 <-stats::aggregate(verj.s.bis130$nha*ifelse(verj.s.bis130$biss==0,1,0),
                               ^~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2416:49: style: Put spaces around all infix operators.
  verbiss.0 <-stats::aggregate(verj.s.bis130$nha*ifelse(verj.s.bis130$biss==0,1,0),
                                               ~^~
NO COPY: R/BWI3_HR.R:2416:57: style: Words within variable and function names should be separated by '_' rather than '.'.
  verbiss.0 <-stats::aggregate(verj.s.bis130$nha*ifelse(verj.s.bis130$biss==0,1,0),
                                                        ^~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2416:75: style: Put spaces around all infix operators.
  verbiss.0 <-stats::aggregate(verj.s.bis130$nha*ifelse(verj.s.bis130$biss==0,1,0),
                                                                         ~^~~
NO COPY: R/BWI3_HR.R:2416:79: style: Commas should always have a space after.
  verbiss.0 <-stats::aggregate(verj.s.bis130$nha*ifelse(verj.s.bis130$biss==0,1,0),
                                                                              ^
NO COPY: R/BWI3_HR.R:2416:81: style: Commas should always have a space after.
  verbiss.0 <-stats::aggregate(verj.s.bis130$nha*ifelse(verj.s.bis130$biss==0,1,0),
                                                                                ^
NO COPY: R/BWI3_HR.R:2417:15: style: Put spaces around all infix operators.
            by=list(verj.s.bis130$tnr,verj.s.bis130$enr,verj.s.bis130$BaGr),sum)
             ~^~
NO COPY: R/BWI3_HR.R:2417:21: style: Words within variable and function names should be separated by '_' rather than '.'.
            by=list(verj.s.bis130$tnr,verj.s.bis130$enr,verj.s.bis130$BaGr),sum)
                    ^~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2417:39: style: Commas should always have a space after.
            by=list(verj.s.bis130$tnr,verj.s.bis130$enr,verj.s.bis130$BaGr),sum)
                                      ^
NO COPY: R/BWI3_HR.R:2417:39: style: Words within variable and function names should be separated by '_' rather than '.'.
            by=list(verj.s.bis130$tnr,verj.s.bis130$enr,verj.s.bis130$BaGr),sum)
                                      ^~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2417:57: style: Commas should always have a space after.
            by=list(verj.s.bis130$tnr,verj.s.bis130$enr,verj.s.bis130$BaGr),sum)
                                                        ^
NO COPY: R/BWI3_HR.R:2417:57: style: Words within variable and function names should be separated by '_' rather than '.'.
            by=list(verj.s.bis130$tnr,verj.s.bis130$enr,verj.s.bis130$BaGr),sum)
                                                        ^~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2417:71: style: Variable and function names should be all lowercase.
            by=list(verj.s.bis130$tnr,verj.s.bis130$enr,verj.s.bis130$BaGr),sum)
                                                                      ^~~~
NO COPY: R/BWI3_HR.R:2417:77: style: Commas should always have a space after.
            by=list(verj.s.bis130$tnr,verj.s.bis130$enr,verj.s.bis130$BaGr),sum)
                                                                            ^
NO COPY: R/BWI3_HR.R:2418:1: style: lines should not be more than 80 characters.
  verbiss.1 <-stats::aggregate(verj.s.bis130$nha*ifelse(verj.s.bis130$biss==1,1,0),
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2418:13: style: Put spaces around all infix operators.
  verbiss.1 <-stats::aggregate(verj.s.bis130$nha*ifelse(verj.s.bis130$biss==1,1,0),
            ^~~
NO COPY: R/BWI3_HR.R:2418:32: style: Words within variable and function names should be separated by '_' rather than '.'.
  verbiss.1 <-stats::aggregate(verj.s.bis130$nha*ifelse(verj.s.bis130$biss==1,1,0),
                               ^~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2418:49: style: Put spaces around all infix operators.
  verbiss.1 <-stats::aggregate(verj.s.bis130$nha*ifelse(verj.s.bis130$biss==1,1,0),
                                               ~^~
NO COPY: R/BWI3_HR.R:2418:57: style: Words within variable and function names should be separated by '_' rather than '.'.
  verbiss.1 <-stats::aggregate(verj.s.bis130$nha*ifelse(verj.s.bis130$biss==1,1,0),
                                                        ^~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2418:75: style: Put spaces around all infix operators.
  verbiss.1 <-stats::aggregate(verj.s.bis130$nha*ifelse(verj.s.bis130$biss==1,1,0),
                                                                         ~^~~
NO COPY: R/BWI3_HR.R:2418:79: style: Commas should always have a space after.
  verbiss.1 <-stats::aggregate(verj.s.bis130$nha*ifelse(verj.s.bis130$biss==1,1,0),
                                                                              ^
NO COPY: R/BWI3_HR.R:2418:81: style: Commas should always have a space after.
  verbiss.1 <-stats::aggregate(verj.s.bis130$nha*ifelse(verj.s.bis130$biss==1,1,0),
                                                                                ^
NO COPY: R/BWI3_HR.R:2419:15: style: Put spaces around all infix operators.
            by=list(verj.s.bis130$tnr,verj.s.bis130$enr,verj.s.bis130$BaGr),sum)
             ~^~
NO COPY: R/BWI3_HR.R:2419:21: style: Words within variable and function names should be separated by '_' rather than '.'.
            by=list(verj.s.bis130$tnr,verj.s.bis130$enr,verj.s.bis130$BaGr),sum)
                    ^~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2419:39: style: Commas should always have a space after.
            by=list(verj.s.bis130$tnr,verj.s.bis130$enr,verj.s.bis130$BaGr),sum)
                                      ^
NO COPY: R/BWI3_HR.R:2419:39: style: Words within variable and function names should be separated by '_' rather than '.'.
            by=list(verj.s.bis130$tnr,verj.s.bis130$enr,verj.s.bis130$BaGr),sum)
                                      ^~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2419:57: style: Commas should always have a space after.
            by=list(verj.s.bis130$tnr,verj.s.bis130$enr,verj.s.bis130$BaGr),sum)
                                                        ^
NO COPY: R/BWI3_HR.R:2419:57: style: Words within variable and function names should be separated by '_' rather than '.'.
            by=list(verj.s.bis130$tnr,verj.s.bis130$enr,verj.s.bis130$BaGr),sum)
                                                        ^~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2419:71: style: Variable and function names should be all lowercase.
            by=list(verj.s.bis130$tnr,verj.s.bis130$enr,verj.s.bis130$BaGr),sum)
                                                                      ^~~~
NO COPY: R/BWI3_HR.R:2419:77: style: Commas should always have a space after.
            by=list(verj.s.bis130$tnr,verj.s.bis130$enr,verj.s.bis130$BaGr),sum)
                                                                            ^
NO COPY: R/BWI3_HR.R:2420:1: style: lines should not be more than 80 characters.
  verbiss.2 <-stats::aggregate(verj.s.bis130$nha*ifelse(verj.s.bis130$biss==2,1,0),
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2420:13: style: Put spaces around all infix operators.
  verbiss.2 <-stats::aggregate(verj.s.bis130$nha*ifelse(verj.s.bis130$biss==2,1,0),
            ^~~
NO COPY: R/BWI3_HR.R:2420:32: style: Words within variable and function names should be separated by '_' rather than '.'.
  verbiss.2 <-stats::aggregate(verj.s.bis130$nha*ifelse(verj.s.bis130$biss==2,1,0),
                               ^~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2420:49: style: Put spaces around all infix operators.
  verbiss.2 <-stats::aggregate(verj.s.bis130$nha*ifelse(verj.s.bis130$biss==2,1,0),
                                               ~^~
NO COPY: R/BWI3_HR.R:2420:57: style: Words within variable and function names should be separated by '_' rather than '.'.
  verbiss.2 <-stats::aggregate(verj.s.bis130$nha*ifelse(verj.s.bis130$biss==2,1,0),
                                                        ^~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2420:75: style: Put spaces around all infix operators.
  verbiss.2 <-stats::aggregate(verj.s.bis130$nha*ifelse(verj.s.bis130$biss==2,1,0),
                                                                         ~^~~
NO COPY: R/BWI3_HR.R:2420:79: style: Commas should always have a space after.
  verbiss.2 <-stats::aggregate(verj.s.bis130$nha*ifelse(verj.s.bis130$biss==2,1,0),
                                                                              ^
NO COPY: R/BWI3_HR.R:2420:81: style: Commas should always have a space after.
  verbiss.2 <-stats::aggregate(verj.s.bis130$nha*ifelse(verj.s.bis130$biss==2,1,0),
                                                                                ^
NO COPY: R/BWI3_HR.R:2421:15: style: Put spaces around all infix operators.
            by=list(verj.s.bis130$tnr,verj.s.bis130$enr,verj.s.bis130$BaGr),sum)
             ~^~
NO COPY: R/BWI3_HR.R:2421:21: style: Words within variable and function names should be separated by '_' rather than '.'.
            by=list(verj.s.bis130$tnr,verj.s.bis130$enr,verj.s.bis130$BaGr),sum)
                    ^~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2421:39: style: Commas should always have a space after.
            by=list(verj.s.bis130$tnr,verj.s.bis130$enr,verj.s.bis130$BaGr),sum)
                                      ^
NO COPY: R/BWI3_HR.R:2421:39: style: Words within variable and function names should be separated by '_' rather than '.'.
            by=list(verj.s.bis130$tnr,verj.s.bis130$enr,verj.s.bis130$BaGr),sum)
                                      ^~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2421:57: style: Commas should always have a space after.
            by=list(verj.s.bis130$tnr,verj.s.bis130$enr,verj.s.bis130$BaGr),sum)
                                                        ^
NO COPY: R/BWI3_HR.R:2421:57: style: Words within variable and function names should be separated by '_' rather than '.'.
            by=list(verj.s.bis130$tnr,verj.s.bis130$enr,verj.s.bis130$BaGr),sum)
                                                        ^~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2421:71: style: Variable and function names should be all lowercase.
            by=list(verj.s.bis130$tnr,verj.s.bis130$enr,verj.s.bis130$BaGr),sum)
                                                                      ^~~~
NO COPY: R/BWI3_HR.R:2421:77: style: Commas should always have a space after.
            by=list(verj.s.bis130$tnr,verj.s.bis130$enr,verj.s.bis130$BaGr),sum)
                                                                            ^
NO COPY: R/BWI3_HR.R:2423:31: style: Commas should always have a space after.
  names(verbiss.a) <- c("TNr","ENr","BaGr","n.ges")
                              ^
NO COPY: R/BWI3_HR.R:2423:37: style: Commas should always have a space after.
  names(verbiss.a) <- c("TNr","ENr","BaGr","n.ges")
                                    ^
NO COPY: R/BWI3_HR.R:2423:44: style: Commas should always have a space after.
  names(verbiss.a) <- c("TNr","ENr","BaGr","n.ges")
                                           ^
NO COPY: R/BWI3_HR.R:2424:31: style: Commas should always have a space after.
  names(verbiss.0) <- c("TNr","ENr","BaGr","n.vb0")
                              ^
NO COPY: R/BWI3_HR.R:2424:37: style: Commas should always have a space after.
  names(verbiss.0) <- c("TNr","ENr","BaGr","n.vb0")
                                    ^
NO COPY: R/BWI3_HR.R:2424:44: style: Commas should always have a space after.
  names(verbiss.0) <- c("TNr","ENr","BaGr","n.vb0")
                                           ^
NO COPY: R/BWI3_HR.R:2425:31: style: Commas should always have a space after.
  names(verbiss.1) <- c("TNr","ENr","BaGr","n.vb1")
                              ^
NO COPY: R/BWI3_HR.R:2425:37: style: Commas should always have a space after.
  names(verbiss.1) <- c("TNr","ENr","BaGr","n.vb1")
                                    ^
NO COPY: R/BWI3_HR.R:2425:44: style: Commas should always have a space after.
  names(verbiss.1) <- c("TNr","ENr","BaGr","n.vb1")
                                           ^
NO COPY: R/BWI3_HR.R:2426:31: style: Commas should always have a space after.
  names(verbiss.2) <- c("TNr","ENr","BaGr","n.vb2")
                              ^
NO COPY: R/BWI3_HR.R:2426:37: style: Commas should always have a space after.
  names(verbiss.2) <- c("TNr","ENr","BaGr","n.vb2")
                                    ^
NO COPY: R/BWI3_HR.R:2426:44: style: Commas should always have a space after.
  names(verbiss.2) <- c("TNr","ENr","BaGr","n.vb2")
                                           ^
NO COPY: R/BWI3_HR.R:2427:30: style: Commas should always have a space after.
  verbiss <- merge(verbiss.a,verbiss.0,by=c("TNr","ENr","BaGr"))
                             ^
NO COPY: R/BWI3_HR.R:2427:40: style: Commas should always have a space after.
  verbiss <- merge(verbiss.a,verbiss.0,by=c("TNr","ENr","BaGr"))
                                       ^
NO COPY: R/BWI3_HR.R:2427:42: style: Put spaces around all infix operators.
  verbiss <- merge(verbiss.a,verbiss.0,by=c("TNr","ENr","BaGr"))
                                        ~^~
NO COPY: R/BWI3_HR.R:2427:51: style: Commas should always have a space after.
  verbiss <- merge(verbiss.a,verbiss.0,by=c("TNr","ENr","BaGr"))
                                                  ^
NO COPY: R/BWI3_HR.R:2427:57: style: Commas should always have a space after.
  verbiss <- merge(verbiss.a,verbiss.0,by=c("TNr","ENr","BaGr"))
                                                        ^
NO COPY: R/BWI3_HR.R:2428:28: style: Commas should always have a space after.
  verbiss <- merge(verbiss,verbiss.1,by=c("TNr","ENr","BaGr"))
                           ^
NO COPY: R/BWI3_HR.R:2428:38: style: Commas should always have a space after.
  verbiss <- merge(verbiss,verbiss.1,by=c("TNr","ENr","BaGr"))
                                     ^
NO COPY: R/BWI3_HR.R:2428:40: style: Put spaces around all infix operators.
  verbiss <- merge(verbiss,verbiss.1,by=c("TNr","ENr","BaGr"))
                                      ~^~
NO COPY: R/BWI3_HR.R:2428:49: style: Commas should always have a space after.
  verbiss <- merge(verbiss,verbiss.1,by=c("TNr","ENr","BaGr"))
                                                ^
NO COPY: R/BWI3_HR.R:2428:55: style: Commas should always have a space after.
  verbiss <- merge(verbiss,verbiss.1,by=c("TNr","ENr","BaGr"))
                                                      ^
NO COPY: R/BWI3_HR.R:2429:28: style: Commas should always have a space after.
  verbiss <- merge(verbiss,verbiss.2,by=c("TNr","ENr","BaGr"))
                           ^
NO COPY: R/BWI3_HR.R:2429:38: style: Commas should always have a space after.
  verbiss <- merge(verbiss,verbiss.2,by=c("TNr","ENr","BaGr"))
                                     ^
NO COPY: R/BWI3_HR.R:2429:40: style: Put spaces around all infix operators.
  verbiss <- merge(verbiss,verbiss.2,by=c("TNr","ENr","BaGr"))
                                      ~^~
NO COPY: R/BWI3_HR.R:2429:49: style: Commas should always have a space after.
  verbiss <- merge(verbiss,verbiss.2,by=c("TNr","ENr","BaGr"))
                                                ^
NO COPY: R/BWI3_HR.R:2429:55: style: Commas should always have a space after.
  verbiss <- merge(verbiss,verbiss.2,by=c("TNr","ENr","BaGr"))
                                                      ^
NO COPY: R/BWI3_HR.R:2430:40: style: Commas should always have a space after.
  verbiss <- verbiss[order(verbiss$TNr,verbiss$ENr),]
                                       ^
NO COPY: R/BWI3_HR.R:2430:53: style: Commas should always have a space after.
  verbiss <- verbiss[order(verbiss$TNr,verbiss$ENr),]
                                                    ^
NO COPY: R/BWI3_HR.R:2431:35: style: Put spaces around all infix operators.
  verbiss$vb0.prz <- verbiss$n.vb0/verbiss$n.ges
                                 ~^~
NO COPY: R/BWI3_HR.R:2432:35: style: Put spaces around all infix operators.
  verbiss$vb1.prz <- verbiss$n.vb1/verbiss$n.ges
                                 ~^~
NO COPY: R/BWI3_HR.R:2433:35: style: Put spaces around all infix operators.
  verbiss$vb2.prz <- verbiss$n.vb2/verbiss$n.ges
                                 ~^~
NO COPY: R/BWI3_HR.R:2434:38: style: Put spaces around all infix operators.
  verbiss$vb12.prz <-  (verbiss$n.vb1+verbiss$n.vb2)/verbiss$n.ges
                                    ~^~
NO COPY: R/BWI3_HR.R:2434:53: style: Put spaces around all infix operators.
  verbiss$vb12.prz <-  (verbiss$n.vb1+verbiss$n.vb2)/verbiss$n.ges
                                                   ~^~
NO COPY: R/BWI3_HR.R:2443:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  verbiss.t.a <-
  ^~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2444:1: style: lines should not be more than 80 characters.
    stats::aggregate(ifelse(verbiss$n.ges>0,1,0),by=list(verbiss$TNr,verbiss$BaGr),sum)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2444:42: style: Put spaces around all infix operators.
    stats::aggregate(ifelse(verbiss$n.ges>0,1,0),by=list(verbiss$TNr,verbiss$BaGr),sum)
                                        ~^~
NO COPY: R/BWI3_HR.R:2444:45: style: Commas should always have a space after.
    stats::aggregate(ifelse(verbiss$n.ges>0,1,0),by=list(verbiss$TNr,verbiss$BaGr),sum)
                                            ^
NO COPY: R/BWI3_HR.R:2444:47: style: Commas should always have a space after.
    stats::aggregate(ifelse(verbiss$n.ges>0,1,0),by=list(verbiss$TNr,verbiss$BaGr),sum)
                                              ^
NO COPY: R/BWI3_HR.R:2444:50: style: Commas should always have a space after.
    stats::aggregate(ifelse(verbiss$n.ges>0,1,0),by=list(verbiss$TNr,verbiss$BaGr),sum)
                                                 ^
NO COPY: R/BWI3_HR.R:2444:52: style: Put spaces around all infix operators.
    stats::aggregate(ifelse(verbiss$n.ges>0,1,0),by=list(verbiss$TNr,verbiss$BaGr),sum)
                                                  ~^~
NO COPY: R/BWI3_HR.R:2444:70: style: Commas should always have a space after.
    stats::aggregate(ifelse(verbiss$n.ges>0,1,0),by=list(verbiss$TNr,verbiss$BaGr),sum)
                                                                     ^
NO COPY: R/BWI3_HR.R:2444:78: style: Variable and function names should be all lowercase.
    stats::aggregate(ifelse(verbiss$n.ges>0,1,0),by=list(verbiss$TNr,verbiss$BaGr),sum)
                                                                             ^~~~
NO COPY: R/BWI3_HR.R:2444:84: style: Commas should always have a space after.
    stats::aggregate(ifelse(verbiss$n.ges>0,1,0),by=list(verbiss$TNr,verbiss$BaGr),sum)
                                                                                   ^
NO COPY: R/BWI3_HR.R:2445:9: style: Words within variable and function names should be separated by '_' rather than '.'.
  names(verbiss.t.a) <- c("TNr","BaGr","t")
        ^~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2445:33: style: Commas should always have a space after.
  names(verbiss.t.a) <- c("TNr","BaGr","t")
                                ^
NO COPY: R/BWI3_HR.R:2445:40: style: Commas should always have a space after.
  names(verbiss.t.a) <- c("TNr","BaGr","t")
                                       ^
NO COPY: R/BWI3_HR.R:2446:1: style: lines should not be more than 80 characters.
  verbiss.t. <- stats::aggregate(verbiss$vb0.prz,by=list(verbiss$TNr,verbiss$BaGr),sum)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2446:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  verbiss.t. <- stats::aggregate(verbiss$vb0.prz,by=list(verbiss$TNr,verbiss$BaGr),sum)
  ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:2446:50: style: Commas should always have a space after.
  verbiss.t. <- stats::aggregate(verbiss$vb0.prz,by=list(verbiss$TNr,verbiss$BaGr),sum)
                                                 ^
NO COPY: R/BWI3_HR.R:2446:52: style: Put spaces around all infix operators.
  verbiss.t. <- stats::aggregate(verbiss$vb0.prz,by=list(verbiss$TNr,verbiss$BaGr),sum)
                                                  ~^~
NO COPY: R/BWI3_HR.R:2446:70: style: Commas should always have a space after.
  verbiss.t. <- stats::aggregate(verbiss$vb0.prz,by=list(verbiss$TNr,verbiss$BaGr),sum)
                                                                     ^
NO COPY: R/BWI3_HR.R:2446:78: style: Variable and function names should be all lowercase.
  verbiss.t. <- stats::aggregate(verbiss$vb0.prz,by=list(verbiss$TNr,verbiss$BaGr),sum)
                                                                             ^~~~
NO COPY: R/BWI3_HR.R:2446:84: style: Commas should always have a space after.
  verbiss.t. <- stats::aggregate(verbiss$vb0.prz,by=list(verbiss$TNr,verbiss$BaGr),sum)
                                                                                   ^
NO COPY: R/BWI3_HR.R:2447:9: style: Words within variable and function names should be separated by '_' rather than '.'.
  names(verbiss.t.) <- c("TNr","BaGr","s.vb0")
        ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:2447:32: style: Commas should always have a space after.
  names(verbiss.t.) <- c("TNr","BaGr","s.vb0")
                               ^
NO COPY: R/BWI3_HR.R:2447:39: style: Commas should always have a space after.
  names(verbiss.t.) <- c("TNr","BaGr","s.vb0")
                                      ^
NO COPY: R/BWI3_HR.R:2448:22: style: Words within variable and function names should be separated by '_' rather than '.'.
  verbiss.t <- merge(verbiss.t.a,verbiss.t.,by=c("TNr","BaGr"))
                     ^~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2448:34: style: Commas should always have a space after.
  verbiss.t <- merge(verbiss.t.a,verbiss.t.,by=c("TNr","BaGr"))
                                 ^
NO COPY: R/BWI3_HR.R:2448:34: style: Words within variable and function names should be separated by '_' rather than '.'.
  verbiss.t <- merge(verbiss.t.a,verbiss.t.,by=c("TNr","BaGr"))
                                 ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:2448:45: style: Commas should always have a space after.
  verbiss.t <- merge(verbiss.t.a,verbiss.t.,by=c("TNr","BaGr"))
                                            ^
NO COPY: R/BWI3_HR.R:2448:47: style: Put spaces around all infix operators.
  verbiss.t <- merge(verbiss.t.a,verbiss.t.,by=c("TNr","BaGr"))
                                             ~^~
NO COPY: R/BWI3_HR.R:2448:56: style: Commas should always have a space after.
  verbiss.t <- merge(verbiss.t.a,verbiss.t.,by=c("TNr","BaGr"))
                                                       ^
NO COPY: R/BWI3_HR.R:2449:1: style: lines should not be more than 80 characters.
  verbiss.t. <- stats::aggregate(verbiss$vb1.prz,by=list(verbiss$TNr,verbiss$BaGr),sum)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2449:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  verbiss.t. <- stats::aggregate(verbiss$vb1.prz,by=list(verbiss$TNr,verbiss$BaGr),sum)
  ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:2449:50: style: Commas should always have a space after.
  verbiss.t. <- stats::aggregate(verbiss$vb1.prz,by=list(verbiss$TNr,verbiss$BaGr),sum)
                                                 ^
NO COPY: R/BWI3_HR.R:2449:52: style: Put spaces around all infix operators.
  verbiss.t. <- stats::aggregate(verbiss$vb1.prz,by=list(verbiss$TNr,verbiss$BaGr),sum)
                                                  ~^~
NO COPY: R/BWI3_HR.R:2449:70: style: Commas should always have a space after.
  verbiss.t. <- stats::aggregate(verbiss$vb1.prz,by=list(verbiss$TNr,verbiss$BaGr),sum)
                                                                     ^
NO COPY: R/BWI3_HR.R:2449:78: style: Variable and function names should be all lowercase.
  verbiss.t. <- stats::aggregate(verbiss$vb1.prz,by=list(verbiss$TNr,verbiss$BaGr),sum)
                                                                             ^~~~
NO COPY: R/BWI3_HR.R:2449:84: style: Commas should always have a space after.
  verbiss.t. <- stats::aggregate(verbiss$vb1.prz,by=list(verbiss$TNr,verbiss$BaGr),sum)
                                                                                   ^
NO COPY: R/BWI3_HR.R:2450:9: style: Words within variable and function names should be separated by '_' rather than '.'.
  names(verbiss.t.) <- c("TNr","BaGr","s.vb1")
        ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:2450:32: style: Commas should always have a space after.
  names(verbiss.t.) <- c("TNr","BaGr","s.vb1")
                               ^
NO COPY: R/BWI3_HR.R:2450:39: style: Commas should always have a space after.
  names(verbiss.t.) <- c("TNr","BaGr","s.vb1")
                                      ^
NO COPY: R/BWI3_HR.R:2451:32: style: Commas should always have a space after.
  verbiss.t <- merge(verbiss.t,verbiss.t.,by=c("TNr","BaGr"))
                               ^
NO COPY: R/BWI3_HR.R:2451:32: style: Words within variable and function names should be separated by '_' rather than '.'.
  verbiss.t <- merge(verbiss.t,verbiss.t.,by=c("TNr","BaGr"))
                               ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:2451:43: style: Commas should always have a space after.
  verbiss.t <- merge(verbiss.t,verbiss.t.,by=c("TNr","BaGr"))
                                          ^
NO COPY: R/BWI3_HR.R:2451:45: style: Put spaces around all infix operators.
  verbiss.t <- merge(verbiss.t,verbiss.t.,by=c("TNr","BaGr"))
                                           ~^~
NO COPY: R/BWI3_HR.R:2451:54: style: Commas should always have a space after.
  verbiss.t <- merge(verbiss.t,verbiss.t.,by=c("TNr","BaGr"))
                                                     ^
NO COPY: R/BWI3_HR.R:2452:1: style: lines should not be more than 80 characters.
  verbiss.t. <- stats::aggregate(verbiss$vb2.prz,by=list(verbiss$TNr,verbiss$BaGr),sum)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2452:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  verbiss.t. <- stats::aggregate(verbiss$vb2.prz,by=list(verbiss$TNr,verbiss$BaGr),sum)
  ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:2452:50: style: Commas should always have a space after.
  verbiss.t. <- stats::aggregate(verbiss$vb2.prz,by=list(verbiss$TNr,verbiss$BaGr),sum)
                                                 ^
NO COPY: R/BWI3_HR.R:2452:52: style: Put spaces around all infix operators.
  verbiss.t. <- stats::aggregate(verbiss$vb2.prz,by=list(verbiss$TNr,verbiss$BaGr),sum)
                                                  ~^~
NO COPY: R/BWI3_HR.R:2452:70: style: Commas should always have a space after.
  verbiss.t. <- stats::aggregate(verbiss$vb2.prz,by=list(verbiss$TNr,verbiss$BaGr),sum)
                                                                     ^
NO COPY: R/BWI3_HR.R:2452:78: style: Variable and function names should be all lowercase.
  verbiss.t. <- stats::aggregate(verbiss$vb2.prz,by=list(verbiss$TNr,verbiss$BaGr),sum)
                                                                             ^~~~
NO COPY: R/BWI3_HR.R:2452:84: style: Commas should always have a space after.
  verbiss.t. <- stats::aggregate(verbiss$vb2.prz,by=list(verbiss$TNr,verbiss$BaGr),sum)
                                                                                   ^
NO COPY: R/BWI3_HR.R:2453:9: style: Words within variable and function names should be separated by '_' rather than '.'.
  names(verbiss.t.) <- c("TNr","BaGr","s.vb2")
        ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:2453:32: style: Commas should always have a space after.
  names(verbiss.t.) <- c("TNr","BaGr","s.vb2")
                               ^
NO COPY: R/BWI3_HR.R:2453:39: style: Commas should always have a space after.
  names(verbiss.t.) <- c("TNr","BaGr","s.vb2")
                                      ^
NO COPY: R/BWI3_HR.R:2454:32: style: Commas should always have a space after.
  verbiss.t <- merge(verbiss.t,verbiss.t.,by=c("TNr","BaGr"))
                               ^
NO COPY: R/BWI3_HR.R:2454:32: style: Words within variable and function names should be separated by '_' rather than '.'.
  verbiss.t <- merge(verbiss.t,verbiss.t.,by=c("TNr","BaGr"))
                               ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:2454:43: style: Commas should always have a space after.
  verbiss.t <- merge(verbiss.t,verbiss.t.,by=c("TNr","BaGr"))
                                          ^
NO COPY: R/BWI3_HR.R:2454:45: style: Put spaces around all infix operators.
  verbiss.t <- merge(verbiss.t,verbiss.t.,by=c("TNr","BaGr"))
                                           ~^~
NO COPY: R/BWI3_HR.R:2454:54: style: Commas should always have a space after.
  verbiss.t <- merge(verbiss.t,verbiss.t.,by=c("TNr","BaGr"))
                                                     ^
NO COPY: R/BWI3_HR.R:2455:1: style: lines should not be more than 80 characters.
  verbiss.t. <- stats::aggregate(verbiss$vb12.prz,by=list(verbiss$TNr,verbiss$BaGr),sum)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2455:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  verbiss.t. <- stats::aggregate(verbiss$vb12.prz,by=list(verbiss$TNr,verbiss$BaGr),sum)
  ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:2455:51: style: Commas should always have a space after.
  verbiss.t. <- stats::aggregate(verbiss$vb12.prz,by=list(verbiss$TNr,verbiss$BaGr),sum)
                                                  ^
NO COPY: R/BWI3_HR.R:2455:53: style: Put spaces around all infix operators.
  verbiss.t. <- stats::aggregate(verbiss$vb12.prz,by=list(verbiss$TNr,verbiss$BaGr),sum)
                                                   ~^~
NO COPY: R/BWI3_HR.R:2455:71: style: Commas should always have a space after.
  verbiss.t. <- stats::aggregate(verbiss$vb12.prz,by=list(verbiss$TNr,verbiss$BaGr),sum)
                                                                      ^
NO COPY: R/BWI3_HR.R:2455:79: style: Variable and function names should be all lowercase.
  verbiss.t. <- stats::aggregate(verbiss$vb12.prz,by=list(verbiss$TNr,verbiss$BaGr),sum)
                                                                              ^~~~
NO COPY: R/BWI3_HR.R:2455:85: style: Commas should always have a space after.
  verbiss.t. <- stats::aggregate(verbiss$vb12.prz,by=list(verbiss$TNr,verbiss$BaGr),sum)
                                                                                    ^
NO COPY: R/BWI3_HR.R:2456:9: style: Words within variable and function names should be separated by '_' rather than '.'.
  names(verbiss.t.) <- c("TNr","BaGr","s.vb12")
        ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:2456:32: style: Commas should always have a space after.
  names(verbiss.t.) <- c("TNr","BaGr","s.vb12")
                               ^
NO COPY: R/BWI3_HR.R:2456:39: style: Commas should always have a space after.
  names(verbiss.t.) <- c("TNr","BaGr","s.vb12")
                                      ^
NO COPY: R/BWI3_HR.R:2457:32: style: Commas should always have a space after.
  verbiss.t <- merge(verbiss.t,verbiss.t.,by=c("TNr","BaGr"))
                               ^
NO COPY: R/BWI3_HR.R:2457:32: style: Words within variable and function names should be separated by '_' rather than '.'.
  verbiss.t <- merge(verbiss.t,verbiss.t.,by=c("TNr","BaGr"))
                               ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:2457:43: style: Commas should always have a space after.
  verbiss.t <- merge(verbiss.t,verbiss.t.,by=c("TNr","BaGr"))
                                          ^
NO COPY: R/BWI3_HR.R:2457:45: style: Put spaces around all infix operators.
  verbiss.t <- merge(verbiss.t,verbiss.t.,by=c("TNr","BaGr"))
                                           ~^~
NO COPY: R/BWI3_HR.R:2457:54: style: Commas should always have a space after.
  verbiss.t <- merge(verbiss.t,verbiss.t.,by=c("TNr","BaGr"))
                                                     ^
NO COPY: R/BWI3_HR.R:2459:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  m.vb.bagr <- array(dim=c(4,2,(n.bagr+1)))
  ^~~~~~~~~
NO COPY: R/BWI3_HR.R:2459:25: style: Put spaces around all infix operators.
  m.vb.bagr <- array(dim=c(4,2,(n.bagr+1)))
                       ~^~
NO COPY: R/BWI3_HR.R:2459:30: style: Commas should always have a space after.
  m.vb.bagr <- array(dim=c(4,2,(n.bagr+1)))
                             ^
NO COPY: R/BWI3_HR.R:2459:32: style: Commas should always have a space after.
  m.vb.bagr <- array(dim=c(4,2,(n.bagr+1)))
                               ^
NO COPY: R/BWI3_HR.R:2459:32: style: Place a space before left parenthesis, except in a function call.
  m.vb.bagr <- array(dim=c(4,2,(n.bagr+1)))
                               ^
NO COPY: R/BWI3_HR.R:2459:39: style: Put spaces around all infix operators.
  m.vb.bagr <- array(dim=c(4,2,(n.bagr+1)))
                                     ~^~
NO COPY: R/BWI3_HR.R:2460:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: R/BWI3_HR.R:2462:3: style: Opening curly braces should never go on their own line and should always be followed by a new line.
  {
  ^
NO COPY: R/BWI3_HR.R:2463:5: style: Words within variable and function names should be separated by '_' rather than '.'.
    verbiss.t.bagr <- verbiss.t[verbiss.t[["BaGr"]] == bagr.list[i], TRUE]
    ^~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2464:1: style: Trailing whitespace is superfluous.
    
^~~~
NO COPY: R/BWI3_HR.R:2466:5: style: Opening curly braces should never go on their own line and should always be followed by a new line.
    {
    ^
NO COPY: R/BWI3_HR.R:2467:38: style: Words within variable and function names should be separated by '_' rather than '.'.
     vb.bagr <- r.variance.fun(cbind(verbiss.t.bagr$t,verbiss.t.bagr[,(3+j)]),
                                     ^~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2467:55: style: Commas should always have a space after.
     vb.bagr <- r.variance.fun(cbind(verbiss.t.bagr$t,verbiss.t.bagr[,(3+j)]),
                                                      ^
NO COPY: R/BWI3_HR.R:2467:55: style: Words within variable and function names should be separated by '_' rather than '.'.
     vb.bagr <- r.variance.fun(cbind(verbiss.t.bagr$t,verbiss.t.bagr[,(3+j)]),
                                                      ^~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2467:71: style: Commas should always have a space after.
     vb.bagr <- r.variance.fun(cbind(verbiss.t.bagr$t,verbiss.t.bagr[,(3+j)]),
                                                                      ^
NO COPY: R/BWI3_HR.R:2467:71: style: Place a space before left parenthesis, except in a function call.
     vb.bagr <- r.variance.fun(cbind(verbiss.t.bagr$t,verbiss.t.bagr[,(3+j)]),
                                                                      ^
NO COPY: R/BWI3_HR.R:2467:73: style: Put spaces around all infix operators.
     vb.bagr <- r.variance.fun(cbind(verbiss.t.bagr$t,verbiss.t.bagr[,(3+j)]),
                                                                       ~^~
NO COPY: R/BWI3_HR.R:2468:48: style: Commas should always have a space after.
                                length(trakte[,1]))
                                               ^
NO COPY: R/BWI3_HR.R:2469:6: style: Words within variable and function names should be separated by '_' rather than '.'.
     m.vb.bagr[j,1,i] <- vb.bagr$R.xy*100         #in Prozent
     ^~~~~~~~~
NO COPY: R/BWI3_HR.R:2469:18: style: Commas should always have a space after.
     m.vb.bagr[j,1,i] <- vb.bagr$R.xy*100         #in Prozent
                 ^
NO COPY: R/BWI3_HR.R:2469:20: style: Commas should always have a space after.
     m.vb.bagr[j,1,i] <- vb.bagr$R.xy*100         #in Prozent
                   ^
NO COPY: R/BWI3_HR.R:2469:38: style: Put spaces around all infix operators.
     m.vb.bagr[j,1,i] <- vb.bagr$R.xy*100         #in Prozent
                                    ~^~
NO COPY: R/BWI3_HR.R:2470:6: style: Words within variable and function names should be separated by '_' rather than '.'.
     m.vb.bagr[j,2,i] <- sqrt(vb.bagr$V.R.xy)*100 #in Prozent
     ^~~~~~~~~
NO COPY: R/BWI3_HR.R:2470:18: style: Commas should always have a space after.
     m.vb.bagr[j,2,i] <- sqrt(vb.bagr$V.R.xy)*100 #in Prozent
                 ^
NO COPY: R/BWI3_HR.R:2470:20: style: Commas should always have a space after.
     m.vb.bagr[j,2,i] <- sqrt(vb.bagr$V.R.xy)*100 #in Prozent
                   ^
NO COPY: R/BWI3_HR.R:2470:39: style: Words within variable and function names should be separated by '_' rather than '.'.
     m.vb.bagr[j,2,i] <- sqrt(vb.bagr$V.R.xy)*100 #in Prozent
                                      ^~~~~~
NO COPY: R/BWI3_HR.R:2470:46: style: Put spaces around all infix operators.
     m.vb.bagr[j,2,i] <- sqrt(vb.bagr$V.R.xy)*100 #in Prozent
                                            ~^~
NO COPY: R/BWI3_HR.R:2474:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: R/BWI3_HR.R:2477:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: R/BWI3_HR.R:2479:33: style: Words within variable and function names should be separated by '_' rather than '.'.
  verbiss.a <- stats::aggregate(verj.s.bis130$nha,
                                ^~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2480:15: style: Put spaces around all infix operators.
            by=list(verj.s.bis130$tnr,verj.s.bis130$enr),sum)
             ~^~
NO COPY: R/BWI3_HR.R:2480:21: style: Words within variable and function names should be separated by '_' rather than '.'.
            by=list(verj.s.bis130$tnr,verj.s.bis130$enr),sum)
                    ^~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2480:39: style: Commas should always have a space after.
            by=list(verj.s.bis130$tnr,verj.s.bis130$enr),sum)
                                      ^
NO COPY: R/BWI3_HR.R:2480:39: style: Words within variable and function names should be separated by '_' rather than '.'.
            by=list(verj.s.bis130$tnr,verj.s.bis130$enr),sum)
                                      ^~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2480:58: style: Commas should always have a space after.
            by=list(verj.s.bis130$tnr,verj.s.bis130$enr),sum)
                                                         ^
NO COPY: R/BWI3_HR.R:2481:1: style: lines should not be more than 80 characters.
  verbiss.0 <-stats::aggregate(verj.s.bis130$nha*ifelse(verj.s.bis130$biss==0,1,0),
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2481:13: style: Put spaces around all infix operators.
  verbiss.0 <-stats::aggregate(verj.s.bis130$nha*ifelse(verj.s.bis130$biss==0,1,0),
            ^~~
NO COPY: R/BWI3_HR.R:2481:32: style: Words within variable and function names should be separated by '_' rather than '.'.
  verbiss.0 <-stats::aggregate(verj.s.bis130$nha*ifelse(verj.s.bis130$biss==0,1,0),
                               ^~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2481:49: style: Put spaces around all infix operators.
  verbiss.0 <-stats::aggregate(verj.s.bis130$nha*ifelse(verj.s.bis130$biss==0,1,0),
                                               ~^~
NO COPY: R/BWI3_HR.R:2481:57: style: Words within variable and function names should be separated by '_' rather than '.'.
  verbiss.0 <-stats::aggregate(verj.s.bis130$nha*ifelse(verj.s.bis130$biss==0,1,0),
                                                        ^~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2481:75: style: Put spaces around all infix operators.
  verbiss.0 <-stats::aggregate(verj.s.bis130$nha*ifelse(verj.s.bis130$biss==0,1,0),
                                                                         ~^~~
NO COPY: R/BWI3_HR.R:2481:79: style: Commas should always have a space after.
  verbiss.0 <-stats::aggregate(verj.s.bis130$nha*ifelse(verj.s.bis130$biss==0,1,0),
                                                                              ^
NO COPY: R/BWI3_HR.R:2481:81: style: Commas should always have a space after.
  verbiss.0 <-stats::aggregate(verj.s.bis130$nha*ifelse(verj.s.bis130$biss==0,1,0),
                                                                                ^
NO COPY: R/BWI3_HR.R:2482:15: style: Put spaces around all infix operators.
            by=list(verj.s.bis130$tnr,verj.s.bis130$enr),sum)
             ~^~
NO COPY: R/BWI3_HR.R:2482:21: style: Words within variable and function names should be separated by '_' rather than '.'.
            by=list(verj.s.bis130$tnr,verj.s.bis130$enr),sum)
                    ^~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2482:39: style: Commas should always have a space after.
            by=list(verj.s.bis130$tnr,verj.s.bis130$enr),sum)
                                      ^
NO COPY: R/BWI3_HR.R:2482:39: style: Words within variable and function names should be separated by '_' rather than '.'.
            by=list(verj.s.bis130$tnr,verj.s.bis130$enr),sum)
                                      ^~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2482:58: style: Commas should always have a space after.
            by=list(verj.s.bis130$tnr,verj.s.bis130$enr),sum)
                                                         ^
NO COPY: R/BWI3_HR.R:2483:1: style: lines should not be more than 80 characters.
  verbiss.1 <-stats::aggregate(verj.s.bis130$nha*ifelse(verj.s.bis130$biss==1,1,0),
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2483:13: style: Put spaces around all infix operators.
  verbiss.1 <-stats::aggregate(verj.s.bis130$nha*ifelse(verj.s.bis130$biss==1,1,0),
            ^~~
NO COPY: R/BWI3_HR.R:2483:32: style: Words within variable and function names should be separated by '_' rather than '.'.
  verbiss.1 <-stats::aggregate(verj.s.bis130$nha*ifelse(verj.s.bis130$biss==1,1,0),
                               ^~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2483:49: style: Put spaces around all infix operators.
  verbiss.1 <-stats::aggregate(verj.s.bis130$nha*ifelse(verj.s.bis130$biss==1,1,0),
                                               ~^~
NO COPY: R/BWI3_HR.R:2483:57: style: Words within variable and function names should be separated by '_' rather than '.'.
  verbiss.1 <-stats::aggregate(verj.s.bis130$nha*ifelse(verj.s.bis130$biss==1,1,0),
                                                        ^~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2483:75: style: Put spaces around all infix operators.
  verbiss.1 <-stats::aggregate(verj.s.bis130$nha*ifelse(verj.s.bis130$biss==1,1,0),
                                                                         ~^~~
NO COPY: R/BWI3_HR.R:2483:79: style: Commas should always have a space after.
  verbiss.1 <-stats::aggregate(verj.s.bis130$nha*ifelse(verj.s.bis130$biss==1,1,0),
                                                                              ^
NO COPY: R/BWI3_HR.R:2483:81: style: Commas should always have a space after.
  verbiss.1 <-stats::aggregate(verj.s.bis130$nha*ifelse(verj.s.bis130$biss==1,1,0),
                                                                                ^
NO COPY: R/BWI3_HR.R:2484:15: style: Put spaces around all infix operators.
            by=list(verj.s.bis130$tnr,verj.s.bis130$enr),sum)
             ~^~
NO COPY: R/BWI3_HR.R:2484:21: style: Words within variable and function names should be separated by '_' rather than '.'.
            by=list(verj.s.bis130$tnr,verj.s.bis130$enr),sum)
                    ^~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2484:39: style: Commas should always have a space after.
            by=list(verj.s.bis130$tnr,verj.s.bis130$enr),sum)
                                      ^
NO COPY: R/BWI3_HR.R:2484:39: style: Words within variable and function names should be separated by '_' rather than '.'.
            by=list(verj.s.bis130$tnr,verj.s.bis130$enr),sum)
                                      ^~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2484:58: style: Commas should always have a space after.
            by=list(verj.s.bis130$tnr,verj.s.bis130$enr),sum)
                                                         ^
NO COPY: R/BWI3_HR.R:2485:1: style: lines should not be more than 80 characters.
  verbiss.2 <-stats::aggregate(verj.s.bis130$nha*ifelse(verj.s.bis130$biss==2,1,0),
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2485:13: style: Put spaces around all infix operators.
  verbiss.2 <-stats::aggregate(verj.s.bis130$nha*ifelse(verj.s.bis130$biss==2,1,0),
            ^~~
NO COPY: R/BWI3_HR.R:2485:32: style: Words within variable and function names should be separated by '_' rather than '.'.
  verbiss.2 <-stats::aggregate(verj.s.bis130$nha*ifelse(verj.s.bis130$biss==2,1,0),
                               ^~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2485:49: style: Put spaces around all infix operators.
  verbiss.2 <-stats::aggregate(verj.s.bis130$nha*ifelse(verj.s.bis130$biss==2,1,0),
                                               ~^~
NO COPY: R/BWI3_HR.R:2485:57: style: Words within variable and function names should be separated by '_' rather than '.'.
  verbiss.2 <-stats::aggregate(verj.s.bis130$nha*ifelse(verj.s.bis130$biss==2,1,0),
                                                        ^~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2485:75: style: Put spaces around all infix operators.
  verbiss.2 <-stats::aggregate(verj.s.bis130$nha*ifelse(verj.s.bis130$biss==2,1,0),
                                                                         ~^~~
NO COPY: R/BWI3_HR.R:2485:79: style: Commas should always have a space after.
  verbiss.2 <-stats::aggregate(verj.s.bis130$nha*ifelse(verj.s.bis130$biss==2,1,0),
                                                                              ^
NO COPY: R/BWI3_HR.R:2485:81: style: Commas should always have a space after.
  verbiss.2 <-stats::aggregate(verj.s.bis130$nha*ifelse(verj.s.bis130$biss==2,1,0),
                                                                                ^
NO COPY: R/BWI3_HR.R:2486:15: style: Put spaces around all infix operators.
            by=list(verj.s.bis130$tnr,verj.s.bis130$enr),sum)
             ~^~
NO COPY: R/BWI3_HR.R:2486:21: style: Words within variable and function names should be separated by '_' rather than '.'.
            by=list(verj.s.bis130$tnr,verj.s.bis130$enr),sum)
                    ^~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2486:39: style: Commas should always have a space after.
            by=list(verj.s.bis130$tnr,verj.s.bis130$enr),sum)
                                      ^
NO COPY: R/BWI3_HR.R:2486:39: style: Words within variable and function names should be separated by '_' rather than '.'.
            by=list(verj.s.bis130$tnr,verj.s.bis130$enr),sum)
                                      ^~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2486:58: style: Commas should always have a space after.
            by=list(verj.s.bis130$tnr,verj.s.bis130$enr),sum)
                                                         ^
NO COPY: R/BWI3_HR.R:2488:31: style: Commas should always have a space after.
  names(verbiss.a) <- c("TNr","ENr","n.ges")
                              ^
NO COPY: R/BWI3_HR.R:2488:37: style: Commas should always have a space after.
  names(verbiss.a) <- c("TNr","ENr","n.ges")
                                    ^
NO COPY: R/BWI3_HR.R:2489:31: style: Commas should always have a space after.
  names(verbiss.0) <- c("TNr","ENr","n.vb0")
                              ^
NO COPY: R/BWI3_HR.R:2489:37: style: Commas should always have a space after.
  names(verbiss.0) <- c("TNr","ENr","n.vb0")
                                    ^
NO COPY: R/BWI3_HR.R:2490:31: style: Commas should always have a space after.
  names(verbiss.1) <- c("TNr","ENr","n.vb1")
                              ^
NO COPY: R/BWI3_HR.R:2490:37: style: Commas should always have a space after.
  names(verbiss.1) <- c("TNr","ENr","n.vb1")
                                    ^
NO COPY: R/BWI3_HR.R:2491:31: style: Commas should always have a space after.
  names(verbiss.2) <- c("TNr","ENr","n.vb2")
                              ^
NO COPY: R/BWI3_HR.R:2491:37: style: Commas should always have a space after.
  names(verbiss.2) <- c("TNr","ENr","n.vb2")
                                    ^
NO COPY: R/BWI3_HR.R:2492:30: style: Commas should always have a space after.
  verbiss <- merge(verbiss.a,verbiss.0,by=c("TNr","ENr"))
                             ^
NO COPY: R/BWI3_HR.R:2492:40: style: Commas should always have a space after.
  verbiss <- merge(verbiss.a,verbiss.0,by=c("TNr","ENr"))
                                       ^
NO COPY: R/BWI3_HR.R:2492:42: style: Put spaces around all infix operators.
  verbiss <- merge(verbiss.a,verbiss.0,by=c("TNr","ENr"))
                                        ~^~
NO COPY: R/BWI3_HR.R:2492:51: style: Commas should always have a space after.
  verbiss <- merge(verbiss.a,verbiss.0,by=c("TNr","ENr"))
                                                  ^
NO COPY: R/BWI3_HR.R:2493:28: style: Commas should always have a space after.
  verbiss <- merge(verbiss,verbiss.1,by=c("TNr","ENr"))
                           ^
NO COPY: R/BWI3_HR.R:2493:38: style: Commas should always have a space after.
  verbiss <- merge(verbiss,verbiss.1,by=c("TNr","ENr"))
                                     ^
NO COPY: R/BWI3_HR.R:2493:40: style: Put spaces around all infix operators.
  verbiss <- merge(verbiss,verbiss.1,by=c("TNr","ENr"))
                                      ~^~
NO COPY: R/BWI3_HR.R:2493:49: style: Commas should always have a space after.
  verbiss <- merge(verbiss,verbiss.1,by=c("TNr","ENr"))
                                                ^
NO COPY: R/BWI3_HR.R:2494:28: style: Commas should always have a space after.
  verbiss <- merge(verbiss,verbiss.2,by=c("TNr","ENr"))
                           ^
NO COPY: R/BWI3_HR.R:2494:38: style: Commas should always have a space after.
  verbiss <- merge(verbiss,verbiss.2,by=c("TNr","ENr"))
                                     ^
NO COPY: R/BWI3_HR.R:2494:40: style: Put spaces around all infix operators.
  verbiss <- merge(verbiss,verbiss.2,by=c("TNr","ENr"))
                                      ~^~
NO COPY: R/BWI3_HR.R:2494:49: style: Commas should always have a space after.
  verbiss <- merge(verbiss,verbiss.2,by=c("TNr","ENr"))
                                                ^
NO COPY: R/BWI3_HR.R:2496:35: style: Put spaces around all infix operators.
  verbiss$vb0.prz <- verbiss$n.vb0/verbiss$n.ges
                                 ~^~
NO COPY: R/BWI3_HR.R:2497:35: style: Put spaces around all infix operators.
  verbiss$vb1.prz <- verbiss$n.vb1/verbiss$n.ges
                                 ~^~
NO COPY: R/BWI3_HR.R:2498:35: style: Put spaces around all infix operators.
  verbiss$vb2.prz <- verbiss$n.vb2/verbiss$n.ges
                                 ~^~
NO COPY: R/BWI3_HR.R:2499:38: style: Put spaces around all infix operators.
  verbiss$vb12.prz <-  (verbiss$n.vb1+verbiss$n.vb2)/verbiss$n.ges
                                    ~^~
NO COPY: R/BWI3_HR.R:2499:53: style: Put spaces around all infix operators.
  verbiss$vb12.prz <-  (verbiss$n.vb1+verbiss$n.vb2)/verbiss$n.ges
                                                   ~^~
NO COPY: R/BWI3_HR.R:2503:1: style: lines should not be more than 80 characters.
  verbiss.t.a <- stats::aggregate(ifelse(verbiss$n.ges>0,1,0),by=list(verbiss$TNr),sum)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2503:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  verbiss.t.a <- stats::aggregate(ifelse(verbiss$n.ges>0,1,0),by=list(verbiss$TNr),sum)
  ^~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2503:55: style: Put spaces around all infix operators.
  verbiss.t.a <- stats::aggregate(ifelse(verbiss$n.ges>0,1,0),by=list(verbiss$TNr),sum)
                                                     ~^~
NO COPY: R/BWI3_HR.R:2503:58: style: Commas should always have a space after.
  verbiss.t.a <- stats::aggregate(ifelse(verbiss$n.ges>0,1,0),by=list(verbiss$TNr),sum)
                                                         ^
NO COPY: R/BWI3_HR.R:2503:60: style: Commas should always have a space after.
  verbiss.t.a <- stats::aggregate(ifelse(verbiss$n.ges>0,1,0),by=list(verbiss$TNr),sum)
                                                           ^
NO COPY: R/BWI3_HR.R:2503:63: style: Commas should always have a space after.
  verbiss.t.a <- stats::aggregate(ifelse(verbiss$n.ges>0,1,0),by=list(verbiss$TNr),sum)
                                                              ^
NO COPY: R/BWI3_HR.R:2503:65: style: Put spaces around all infix operators.
  verbiss.t.a <- stats::aggregate(ifelse(verbiss$n.ges>0,1,0),by=list(verbiss$TNr),sum)
                                                               ~^~
NO COPY: R/BWI3_HR.R:2503:84: style: Commas should always have a space after.
  verbiss.t.a <- stats::aggregate(ifelse(verbiss$n.ges>0,1,0),by=list(verbiss$TNr),sum)
                                                                                   ^
NO COPY: R/BWI3_HR.R:2504:9: style: Words within variable and function names should be separated by '_' rather than '.'.
  names(verbiss.t.a) <- c("TNr","t")
        ^~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2504:33: style: Commas should always have a space after.
  names(verbiss.t.a) <- c("TNr","t")
                                ^
NO COPY: R/BWI3_HR.R:2506:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  verbiss.t. <- stats::aggregate(verbiss$vb0.prz,by=list(verbiss$TNr),sum)
  ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:2506:50: style: Commas should always have a space after.
  verbiss.t. <- stats::aggregate(verbiss$vb0.prz,by=list(verbiss$TNr),sum)
                                                 ^
NO COPY: R/BWI3_HR.R:2506:52: style: Put spaces around all infix operators.
  verbiss.t. <- stats::aggregate(verbiss$vb0.prz,by=list(verbiss$TNr),sum)
                                                  ~^~
NO COPY: R/BWI3_HR.R:2506:71: style: Commas should always have a space after.
  verbiss.t. <- stats::aggregate(verbiss$vb0.prz,by=list(verbiss$TNr),sum)
                                                                      ^
NO COPY: R/BWI3_HR.R:2507:9: style: Words within variable and function names should be separated by '_' rather than '.'.
  names(verbiss.t.) <- c("TNr","s.vb0")
        ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:2507:32: style: Commas should always have a space after.
  names(verbiss.t.) <- c("TNr","s.vb0")
                               ^
NO COPY: R/BWI3_HR.R:2508:22: style: Words within variable and function names should be separated by '_' rather than '.'.
  verbiss.t <- merge(verbiss.t.a,verbiss.t.,by=c("TNr"))
                     ^~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2508:34: style: Commas should always have a space after.
  verbiss.t <- merge(verbiss.t.a,verbiss.t.,by=c("TNr"))
                                 ^
NO COPY: R/BWI3_HR.R:2508:34: style: Words within variable and function names should be separated by '_' rather than '.'.
  verbiss.t <- merge(verbiss.t.a,verbiss.t.,by=c("TNr"))
                                 ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:2508:45: style: Commas should always have a space after.
  verbiss.t <- merge(verbiss.t.a,verbiss.t.,by=c("TNr"))
                                            ^
NO COPY: R/BWI3_HR.R:2508:47: style: Put spaces around all infix operators.
  verbiss.t <- merge(verbiss.t.a,verbiss.t.,by=c("TNr"))
                                             ~^~
NO COPY: R/BWI3_HR.R:2510:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  verbiss.t. <- stats::aggregate(verbiss$vb1.prz,by=list(verbiss$TNr),sum)
  ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:2510:50: style: Commas should always have a space after.
  verbiss.t. <- stats::aggregate(verbiss$vb1.prz,by=list(verbiss$TNr),sum)
                                                 ^
NO COPY: R/BWI3_HR.R:2510:52: style: Put spaces around all infix operators.
  verbiss.t. <- stats::aggregate(verbiss$vb1.prz,by=list(verbiss$TNr),sum)
                                                  ~^~
NO COPY: R/BWI3_HR.R:2510:71: style: Commas should always have a space after.
  verbiss.t. <- stats::aggregate(verbiss$vb1.prz,by=list(verbiss$TNr),sum)
                                                                      ^
NO COPY: R/BWI3_HR.R:2511:9: style: Words within variable and function names should be separated by '_' rather than '.'.
  names(verbiss.t.) <- c("TNr","s.vb1")
        ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:2511:32: style: Commas should always have a space after.
  names(verbiss.t.) <- c("TNr","s.vb1")
                               ^
NO COPY: R/BWI3_HR.R:2512:32: style: Commas should always have a space after.
  verbiss.t <- merge(verbiss.t,verbiss.t.,by=c("TNr"))
                               ^
NO COPY: R/BWI3_HR.R:2512:32: style: Words within variable and function names should be separated by '_' rather than '.'.
  verbiss.t <- merge(verbiss.t,verbiss.t.,by=c("TNr"))
                               ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:2512:43: style: Commas should always have a space after.
  verbiss.t <- merge(verbiss.t,verbiss.t.,by=c("TNr"))
                                          ^
NO COPY: R/BWI3_HR.R:2512:45: style: Put spaces around all infix operators.
  verbiss.t <- merge(verbiss.t,verbiss.t.,by=c("TNr"))
                                           ~^~
NO COPY: R/BWI3_HR.R:2514:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  verbiss.t. <- stats::aggregate(verbiss$vb2.prz,by=list(verbiss$TNr),sum)
  ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:2514:50: style: Commas should always have a space after.
  verbiss.t. <- stats::aggregate(verbiss$vb2.prz,by=list(verbiss$TNr),sum)
                                                 ^
NO COPY: R/BWI3_HR.R:2514:52: style: Put spaces around all infix operators.
  verbiss.t. <- stats::aggregate(verbiss$vb2.prz,by=list(verbiss$TNr),sum)
                                                  ~^~
NO COPY: R/BWI3_HR.R:2514:71: style: Commas should always have a space after.
  verbiss.t. <- stats::aggregate(verbiss$vb2.prz,by=list(verbiss$TNr),sum)
                                                                      ^
NO COPY: R/BWI3_HR.R:2515:9: style: Words within variable and function names should be separated by '_' rather than '.'.
  names(verbiss.t.) <- c("TNr","s.vb2")
        ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:2515:32: style: Commas should always have a space after.
  names(verbiss.t.) <- c("TNr","s.vb2")
                               ^
NO COPY: R/BWI3_HR.R:2516:32: style: Commas should always have a space after.
  verbiss.t <- merge(verbiss.t,verbiss.t.,by=c("TNr"))
                               ^
NO COPY: R/BWI3_HR.R:2516:32: style: Words within variable and function names should be separated by '_' rather than '.'.
  verbiss.t <- merge(verbiss.t,verbiss.t.,by=c("TNr"))
                               ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:2516:43: style: Commas should always have a space after.
  verbiss.t <- merge(verbiss.t,verbiss.t.,by=c("TNr"))
                                          ^
NO COPY: R/BWI3_HR.R:2516:45: style: Put spaces around all infix operators.
  verbiss.t <- merge(verbiss.t,verbiss.t.,by=c("TNr"))
                                           ~^~
NO COPY: R/BWI3_HR.R:2518:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  verbiss.t. <- stats::aggregate(verbiss$vb12.prz,by=list(verbiss$TNr),sum)
  ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:2518:51: style: Commas should always have a space after.
  verbiss.t. <- stats::aggregate(verbiss$vb12.prz,by=list(verbiss$TNr),sum)
                                                  ^
NO COPY: R/BWI3_HR.R:2518:53: style: Put spaces around all infix operators.
  verbiss.t. <- stats::aggregate(verbiss$vb12.prz,by=list(verbiss$TNr),sum)
                                                   ~^~
NO COPY: R/BWI3_HR.R:2518:72: style: Commas should always have a space after.
  verbiss.t. <- stats::aggregate(verbiss$vb12.prz,by=list(verbiss$TNr),sum)
                                                                       ^
NO COPY: R/BWI3_HR.R:2519:9: style: Words within variable and function names should be separated by '_' rather than '.'.
  names(verbiss.t.) <- c("TNr","s.vb12")
        ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:2519:32: style: Commas should always have a space after.
  names(verbiss.t.) <- c("TNr","s.vb12")
                               ^
NO COPY: R/BWI3_HR.R:2520:32: style: Commas should always have a space after.
  verbiss.t <- merge(verbiss.t,verbiss.t.,by=c("TNr"))
                               ^
NO COPY: R/BWI3_HR.R:2520:32: style: Words within variable and function names should be separated by '_' rather than '.'.
  verbiss.t <- merge(verbiss.t,verbiss.t.,by=c("TNr"))
                               ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:2520:43: style: Commas should always have a space after.
  verbiss.t <- merge(verbiss.t,verbiss.t.,by=c("TNr"))
                                          ^
NO COPY: R/BWI3_HR.R:2520:45: style: Put spaces around all infix operators.
  verbiss.t <- merge(verbiss.t,verbiss.t.,by=c("TNr"))
                                           ~^~
NO COPY: R/BWI3_HR.R:2524:3: style: Opening curly braces should never go on their own line and should always be followed by a new line.
  {
  ^
NO COPY: R/BWI3_HR.R:2525:49: style: Commas should always have a space after.
     r.list <- r.variance.fun(cbind(verbiss.t$t,verbiss.t[,(2+i)]),
                                                ^
NO COPY: R/BWI3_HR.R:2525:60: style: Commas should always have a space after.
     r.list <- r.variance.fun(cbind(verbiss.t$t,verbiss.t[,(2+i)]),
                                                           ^
NO COPY: R/BWI3_HR.R:2525:60: style: Place a space before left parenthesis, except in a function call.
     r.list <- r.variance.fun(cbind(verbiss.t$t,verbiss.t[,(2+i)]),
                                                           ^
NO COPY: R/BWI3_HR.R:2525:62: style: Put spaces around all infix operators.
     r.list <- r.variance.fun(cbind(verbiss.t$t,verbiss.t[,(2+i)]),
                                                            ~^~
NO COPY: R/BWI3_HR.R:2526:48: style: Commas should always have a space after.
                                length(trakte[,1]))
                                               ^
NO COPY: R/BWI3_HR.R:2527:6: style: Words within variable and function names should be separated by '_' rather than '.'.
     m.vb.bagr[i,1,(n.bagr+1)] <- r.list$R.xy*100 #in Prozent
     ^~~~~~~~~
NO COPY: R/BWI3_HR.R:2527:18: style: Commas should always have a space after.
     m.vb.bagr[i,1,(n.bagr+1)] <- r.list$R.xy*100 #in Prozent
                 ^
NO COPY: R/BWI3_HR.R:2527:20: style: Commas should always have a space after.
     m.vb.bagr[i,1,(n.bagr+1)] <- r.list$R.xy*100 #in Prozent
                   ^
NO COPY: R/BWI3_HR.R:2527:20: style: Place a space before left parenthesis, except in a function call.
     m.vb.bagr[i,1,(n.bagr+1)] <- r.list$R.xy*100 #in Prozent
                   ^
NO COPY: R/BWI3_HR.R:2527:27: style: Put spaces around all infix operators.
     m.vb.bagr[i,1,(n.bagr+1)] <- r.list$R.xy*100 #in Prozent
                         ~^~
NO COPY: R/BWI3_HR.R:2527:46: style: Put spaces around all infix operators.
     m.vb.bagr[i,1,(n.bagr+1)] <- r.list$R.xy*100 #in Prozent
                                            ~^~
NO COPY: R/BWI3_HR.R:2528:6: style: Words within variable and function names should be separated by '_' rather than '.'.
     m.vb.bagr[i,2,(n.bagr+1)] <- sqrt(r.list$V.R.xy)*100
     ^~~~~~~~~
NO COPY: R/BWI3_HR.R:2528:18: style: Commas should always have a space after.
     m.vb.bagr[i,2,(n.bagr+1)] <- sqrt(r.list$V.R.xy)*100
                 ^
NO COPY: R/BWI3_HR.R:2528:20: style: Commas should always have a space after.
     m.vb.bagr[i,2,(n.bagr+1)] <- sqrt(r.list$V.R.xy)*100
                   ^
NO COPY: R/BWI3_HR.R:2528:20: style: Place a space before left parenthesis, except in a function call.
     m.vb.bagr[i,2,(n.bagr+1)] <- sqrt(r.list$V.R.xy)*100
                   ^
NO COPY: R/BWI3_HR.R:2528:27: style: Put spaces around all infix operators.
     m.vb.bagr[i,2,(n.bagr+1)] <- sqrt(r.list$V.R.xy)*100
                         ~^~
NO COPY: R/BWI3_HR.R:2528:47: style: Words within variable and function names should be separated by '_' rather than '.'.
     m.vb.bagr[i,2,(n.bagr+1)] <- sqrt(r.list$V.R.xy)*100
                                              ^~~~~~
NO COPY: R/BWI3_HR.R:2528:54: style: Put spaces around all infix operators.
     m.vb.bagr[i,2,(n.bagr+1)] <- sqrt(r.list$V.R.xy)*100
                                                    ~^~
NO COPY: R/BWI3_HR.R:2532:20: style: Put spaces around all infix operators.
  Log <- list(Datum=Sys.time())
                  ~^~
NO COPY: R/BWI3_HR.R:2534:18: style: Put spaces around all infix operators.
  return(list(Log=Log, Stratum=auswahl, HBF=T.hbf, se.HBF=se.T.hbf,
                ~^~
NO COPY: R/BWI3_HR.R:2534:31: style: Put spaces around all infix operators.
  return(list(Log=Log, Stratum=auswahl, HBF=T.hbf, se.HBF=se.T.hbf,
                             ~^~
NO COPY: R/BWI3_HR.R:2534:44: style: Put spaces around all infix operators.
  return(list(Log=Log, Stratum=auswahl, HBF=T.hbf, se.HBF=se.T.hbf,
                                          ~^~
NO COPY: R/BWI3_HR.R:2534:58: style: Put spaces around all infix operators.
  return(list(Log=Log, Stratum=auswahl, HBF=T.hbf, se.HBF=se.T.hbf,
                                                        ~^~
NO COPY: R/BWI3_HR.R:2534:59: style: Words within variable and function names should be separated by '_' rather than '.'.
  return(list(Log=Log, Stratum=auswahl, HBF=T.hbf, se.HBF=se.T.hbf,
                                                          ^~~~~~~~
NO COPY: R/BWI3_HR.R:2535:19: style: Put spaces around all infix operators.
              BAGR=bagr.list,
                 ~^~
NO COPY: R/BWI3_HR.R:2536:33: style: Put spaces around all infix operators.
              m.Verbissproz.BAGR=m.vb.bagr))
                               ~^~
NO COPY: R/BWI3_HR.R:2536:34: style: Words within variable and function names should be separated by '_' rather than '.'.
              m.Verbissproz.BAGR=m.vb.bagr))
                                 ^~~~~~~~~
NO COPY: R/BWI3_HR.R:2577:38: style: Commas should always have a space after.
verbiss.bagrupp.fun <- function(verj,ecken,trakte,ba.grupp,auswahl,inv,A){
                                     ^
NO COPY: R/BWI3_HR.R:2577:44: style: Commas should always have a space after.
verbiss.bagrupp.fun <- function(verj,ecken,trakte,ba.grupp,auswahl,inv,A){
                                           ^
NO COPY: R/BWI3_HR.R:2577:51: style: Commas should always have a space after.
verbiss.bagrupp.fun <- function(verj,ecken,trakte,ba.grupp,auswahl,inv,A){
                                                  ^
NO COPY: R/BWI3_HR.R:2577:60: style: Commas should always have a space after.
verbiss.bagrupp.fun <- function(verj,ecken,trakte,ba.grupp,auswahl,inv,A){
                                                           ^
NO COPY: R/BWI3_HR.R:2577:68: style: Commas should always have a space after.
verbiss.bagrupp.fun <- function(verj,ecken,trakte,ba.grupp,auswahl,inv,A){
                                                                   ^
NO COPY: R/BWI3_HR.R:2577:72: style: Commas should always have a space after.
verbiss.bagrupp.fun <- function(verj,ecken,trakte,ba.grupp,auswahl,inv,A){
                                                                       ^
NO COPY: R/BWI3_HR.R:2578:34: style: Commas should always have a space after.
  stratum <- stratum.fun(auswahl,ecken)
                                 ^
NO COPY: R/BWI3_HR.R:2583:31: style: Commas should always have a space after.
  y <- stats::aggregate(rep(1,length(stratum[,1])),by=list(stratum$tnr),sum)
                              ^
NO COPY: R/BWI3_HR.R:2583:47: style: Commas should always have a space after.
  y <- stats::aggregate(rep(1,length(stratum[,1])),by=list(stratum$tnr),sum)
                                              ^
NO COPY: R/BWI3_HR.R:2583:52: style: Commas should always have a space after.
  y <- stats::aggregate(rep(1,length(stratum[,1])),by=list(stratum$tnr),sum)
                                                   ^
NO COPY: R/BWI3_HR.R:2583:54: style: Put spaces around all infix operators.
  y <- stats::aggregate(rep(1,length(stratum[,1])),by=list(stratum$tnr),sum)
                                                    ~^~
NO COPY: R/BWI3_HR.R:2583:73: style: Commas should always have a space after.
  y <- stats::aggregate(rep(1,length(stratum[,1])),by=list(stratum$tnr),sum)
                                                                        ^
NO COPY: R/BWI3_HR.R:2584:23: style: Commas should always have a space after.
  names(y) <- c("tnr","y")
                      ^
NO COPY: R/BWI3_HR.R:2586:42: style: Commas should always have a space after.
  y <- merge(trakte[TRUE, c("tnr", "m")],y,by=c("tnr"),all.x=T)
                                         ^
NO COPY: R/BWI3_HR.R:2586:44: style: Commas should always have a space after.
  y <- merge(trakte[TRUE, c("tnr", "m")],y,by=c("tnr"),all.x=T)
                                           ^
NO COPY: R/BWI3_HR.R:2586:46: style: Put spaces around all infix operators.
  y <- merge(trakte[TRUE, c("tnr", "m")],y,by=c("tnr"),all.x=T)
                                            ~^~
NO COPY: R/BWI3_HR.R:2586:56: style: Commas should always have a space after.
  y <- merge(trakte[TRUE, c("tnr", "m")],y,by=c("tnr"),all.x=T)
                                                       ^
NO COPY: R/BWI3_HR.R:2586:61: style: Put spaces around all infix operators.
  y <- merge(trakte[TRUE, c("tnr", "m")],y,by=c("tnr"),all.x=T)
                                                           ~^~
NO COPY: R/BWI3_HR.R:2588:31: style: Commas should always have a space after.
  r.list <- r.variance.fun(y[,2:3],length(trakte[,1]))
                              ^
NO COPY: R/BWI3_HR.R:2588:36: style: Commas should always have a space after.
  r.list <- r.variance.fun(y[,2:3],length(trakte[,1]))
                                   ^
NO COPY: R/BWI3_HR.R:2588:51: style: Commas should always have a space after.
  r.list <- r.variance.fun(y[,2:3],length(trakte[,1]))
                                                  ^
NO COPY: R/BWI3_HR.R:2589:23: style: Put spaces around all infix operators.
  T.hbf <- r.list$R.xy*A
                     ~^~
NO COPY: R/BWI3_HR.R:2590:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  se.T.hbf <- sqrt(r.list$V.R.xy)*A
  ^~~~~~~~
NO COPY: R/BWI3_HR.R:2590:27: style: Words within variable and function names should be separated by '_' rather than '.'.
  se.T.hbf <- sqrt(r.list$V.R.xy)*A
                          ^~~~~~
NO COPY: R/BWI3_HR.R:2590:34: style: Put spaces around all infix operators.
  se.T.hbf <- sqrt(r.list$V.R.xy)*A
                                ~^~
NO COPY: R/BWI3_HR.R:2595:20: style: Put spaces around all infix operators.
  inv <- ifelse(inv>1,2,inv)
                  ~^~
NO COPY: R/BWI3_HR.R:2595:23: style: Commas should always have a space after.
  inv <- ifelse(inv>1,2,inv)
                      ^
NO COPY: R/BWI3_HR.R:2595:25: style: Commas should always have a space after.
  inv <- ifelse(inv>1,2,inv)
                        ^
NO COPY: R/BWI3_HR.R:2596:26: style: Commas should always have a space after.
  names(verj) <- sub(inv,names(verj),replacement="")
                         ^
NO COPY: R/BWI3_HR.R:2596:38: style: Commas should always have a space after.
  names(verj) <- sub(inv,names(verj),replacement="")
                                     ^
NO COPY: R/BWI3_HR.R:2596:49: style: Put spaces around all infix operators.
  names(verj) <- sub(inv,names(verj),replacement="")
                                               ~^~
NO COPY: R/BWI3_HR.R:2598:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  verj.s.bis130 <- merge(verj[verj[["h"]] < 1.3, 
  ^~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2598:49: style: Trailing whitespace is superfluous.
  verj.s.bis130 <- merge(verj[verj[["h"]] < 1.3, 
                                                ^
NO COPY: R/BWI3_HR.R:2600:52: style: Commas should always have a space after.
                    stratum[TRUE, c("tnr", "enr")],by=c("tnr","enr"))
                                                   ^
NO COPY: R/BWI3_HR.R:2600:54: style: Put spaces around all infix operators.
                    stratum[TRUE, c("tnr", "enr")],by=c("tnr","enr"))
                                                    ~^~
NO COPY: R/BWI3_HR.R:2600:63: style: Commas should always have a space after.
                    stratum[TRUE, c("tnr", "enr")],by=c("tnr","enr"))
                                                              ^
NO COPY: R/BWI3_HR.R:2609:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  verj.s.bis130 <- merge(verj.s.bis130, bagr.tab[TRUE, c("ICode", "BaGr")],
  ^~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2609:26: style: Words within variable and function names should be separated by '_' rather than '.'.
  verj.s.bis130 <- merge(verj.s.bis130, bagr.tab[TRUE, c("ICode", "BaGr")],
                         ^~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2610:39: style: Put spaces around all infix operators.
                                  by.x="ba",by.y="ICode",all.x=T)
                                     ~^~
NO COPY: R/BWI3_HR.R:2610:45: style: Commas should always have a space after.
                                  by.x="ba",by.y="ICode",all.x=T)
                                            ^
NO COPY: R/BWI3_HR.R:2610:49: style: Put spaces around all infix operators.
                                  by.x="ba",by.y="ICode",all.x=T)
                                               ~^~
NO COPY: R/BWI3_HR.R:2610:58: style: Commas should always have a space after.
                                  by.x="ba",by.y="ICode",all.x=T)
                                                         ^
NO COPY: R/BWI3_HR.R:2610:63: style: Put spaces around all infix operators.
                                  by.x="ba",by.y="ICode",all.x=T)
                                                             ~^~
NO COPY: R/BWI3_HR.R:2611:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  verj.s.bis130[is.na(verj.s.bis130)] <- 0
  ^~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2611:23: style: Words within variable and function names should be separated by '_' rather than '.'.
  verj.s.bis130[is.na(verj.s.bis130)] <- 0
                      ^~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2616:33: style: Words within variable and function names should be separated by '_' rather than '.'.
  verbiss.a <- stats::aggregate(verj.s.bis130$nha,
                                ^~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2617:15: style: Put spaces around all infix operators.
            by=list(verj.s.bis130$tnr,verj.s.bis130$enr,verj.s.bis130$BaGr),sum)
             ~^~
NO COPY: R/BWI3_HR.R:2617:21: style: Words within variable and function names should be separated by '_' rather than '.'.
            by=list(verj.s.bis130$tnr,verj.s.bis130$enr,verj.s.bis130$BaGr),sum)
                    ^~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2617:39: style: Commas should always have a space after.
            by=list(verj.s.bis130$tnr,verj.s.bis130$enr,verj.s.bis130$BaGr),sum)
                                      ^
NO COPY: R/BWI3_HR.R:2617:39: style: Words within variable and function names should be separated by '_' rather than '.'.
            by=list(verj.s.bis130$tnr,verj.s.bis130$enr,verj.s.bis130$BaGr),sum)
                                      ^~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2617:57: style: Commas should always have a space after.
            by=list(verj.s.bis130$tnr,verj.s.bis130$enr,verj.s.bis130$BaGr),sum)
                                                        ^
NO COPY: R/BWI3_HR.R:2617:57: style: Words within variable and function names should be separated by '_' rather than '.'.
            by=list(verj.s.bis130$tnr,verj.s.bis130$enr,verj.s.bis130$BaGr),sum)
                                                        ^~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2617:71: style: Variable and function names should be all lowercase.
            by=list(verj.s.bis130$tnr,verj.s.bis130$enr,verj.s.bis130$BaGr),sum)
                                                                      ^~~~
NO COPY: R/BWI3_HR.R:2617:77: style: Commas should always have a space after.
            by=list(verj.s.bis130$tnr,verj.s.bis130$enr,verj.s.bis130$BaGr),sum)
                                                                            ^
NO COPY: R/BWI3_HR.R:2618:1: style: lines should not be more than 80 characters.
  verbiss.0 <-stats::aggregate(verj.s.bis130$nha*ifelse(verj.s.bis130$biss==0,1,0),
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2618:13: style: Put spaces around all infix operators.
  verbiss.0 <-stats::aggregate(verj.s.bis130$nha*ifelse(verj.s.bis130$biss==0,1,0),
            ^~~
NO COPY: R/BWI3_HR.R:2618:32: style: Words within variable and function names should be separated by '_' rather than '.'.
  verbiss.0 <-stats::aggregate(verj.s.bis130$nha*ifelse(verj.s.bis130$biss==0,1,0),
                               ^~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2618:49: style: Put spaces around all infix operators.
  verbiss.0 <-stats::aggregate(verj.s.bis130$nha*ifelse(verj.s.bis130$biss==0,1,0),
                                               ~^~
NO COPY: R/BWI3_HR.R:2618:57: style: Words within variable and function names should be separated by '_' rather than '.'.
  verbiss.0 <-stats::aggregate(verj.s.bis130$nha*ifelse(verj.s.bis130$biss==0,1,0),
                                                        ^~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2618:75: style: Put spaces around all infix operators.
  verbiss.0 <-stats::aggregate(verj.s.bis130$nha*ifelse(verj.s.bis130$biss==0,1,0),
                                                                         ~^~~
NO COPY: R/BWI3_HR.R:2618:79: style: Commas should always have a space after.
  verbiss.0 <-stats::aggregate(verj.s.bis130$nha*ifelse(verj.s.bis130$biss==0,1,0),
                                                                              ^
NO COPY: R/BWI3_HR.R:2618:81: style: Commas should always have a space after.
  verbiss.0 <-stats::aggregate(verj.s.bis130$nha*ifelse(verj.s.bis130$biss==0,1,0),
                                                                                ^
NO COPY: R/BWI3_HR.R:2619:15: style: Put spaces around all infix operators.
            by=list(verj.s.bis130$tnr,verj.s.bis130$enr,verj.s.bis130$BaGr),sum)
             ~^~
NO COPY: R/BWI3_HR.R:2619:21: style: Words within variable and function names should be separated by '_' rather than '.'.
            by=list(verj.s.bis130$tnr,verj.s.bis130$enr,verj.s.bis130$BaGr),sum)
                    ^~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2619:39: style: Commas should always have a space after.
            by=list(verj.s.bis130$tnr,verj.s.bis130$enr,verj.s.bis130$BaGr),sum)
                                      ^
NO COPY: R/BWI3_HR.R:2619:39: style: Words within variable and function names should be separated by '_' rather than '.'.
            by=list(verj.s.bis130$tnr,verj.s.bis130$enr,verj.s.bis130$BaGr),sum)
                                      ^~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2619:57: style: Commas should always have a space after.
            by=list(verj.s.bis130$tnr,verj.s.bis130$enr,verj.s.bis130$BaGr),sum)
                                                        ^
NO COPY: R/BWI3_HR.R:2619:57: style: Words within variable and function names should be separated by '_' rather than '.'.
            by=list(verj.s.bis130$tnr,verj.s.bis130$enr,verj.s.bis130$BaGr),sum)
                                                        ^~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2619:71: style: Variable and function names should be all lowercase.
            by=list(verj.s.bis130$tnr,verj.s.bis130$enr,verj.s.bis130$BaGr),sum)
                                                                      ^~~~
NO COPY: R/BWI3_HR.R:2619:77: style: Commas should always have a space after.
            by=list(verj.s.bis130$tnr,verj.s.bis130$enr,verj.s.bis130$BaGr),sum)
                                                                            ^
NO COPY: R/BWI3_HR.R:2620:1: style: lines should not be more than 80 characters.
  verbiss.1 <-stats::aggregate(verj.s.bis130$nha*ifelse(verj.s.bis130$biss==1,1,0),
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2620:13: style: Put spaces around all infix operators.
  verbiss.1 <-stats::aggregate(verj.s.bis130$nha*ifelse(verj.s.bis130$biss==1,1,0),
            ^~~
NO COPY: R/BWI3_HR.R:2620:32: style: Words within variable and function names should be separated by '_' rather than '.'.
  verbiss.1 <-stats::aggregate(verj.s.bis130$nha*ifelse(verj.s.bis130$biss==1,1,0),
                               ^~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2620:49: style: Put spaces around all infix operators.
  verbiss.1 <-stats::aggregate(verj.s.bis130$nha*ifelse(verj.s.bis130$biss==1,1,0),
                                               ~^~
NO COPY: R/BWI3_HR.R:2620:57: style: Words within variable and function names should be separated by '_' rather than '.'.
  verbiss.1 <-stats::aggregate(verj.s.bis130$nha*ifelse(verj.s.bis130$biss==1,1,0),
                                                        ^~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2620:75: style: Put spaces around all infix operators.
  verbiss.1 <-stats::aggregate(verj.s.bis130$nha*ifelse(verj.s.bis130$biss==1,1,0),
                                                                         ~^~~
NO COPY: R/BWI3_HR.R:2620:79: style: Commas should always have a space after.
  verbiss.1 <-stats::aggregate(verj.s.bis130$nha*ifelse(verj.s.bis130$biss==1,1,0),
                                                                              ^
NO COPY: R/BWI3_HR.R:2620:81: style: Commas should always have a space after.
  verbiss.1 <-stats::aggregate(verj.s.bis130$nha*ifelse(verj.s.bis130$biss==1,1,0),
                                                                                ^
NO COPY: R/BWI3_HR.R:2621:15: style: Put spaces around all infix operators.
            by=list(verj.s.bis130$tnr,verj.s.bis130$enr,verj.s.bis130$BaGr),sum)
             ~^~
NO COPY: R/BWI3_HR.R:2621:21: style: Words within variable and function names should be separated by '_' rather than '.'.
            by=list(verj.s.bis130$tnr,verj.s.bis130$enr,verj.s.bis130$BaGr),sum)
                    ^~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2621:39: style: Commas should always have a space after.
            by=list(verj.s.bis130$tnr,verj.s.bis130$enr,verj.s.bis130$BaGr),sum)
                                      ^
NO COPY: R/BWI3_HR.R:2621:39: style: Words within variable and function names should be separated by '_' rather than '.'.
            by=list(verj.s.bis130$tnr,verj.s.bis130$enr,verj.s.bis130$BaGr),sum)
                                      ^~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2621:57: style: Commas should always have a space after.
            by=list(verj.s.bis130$tnr,verj.s.bis130$enr,verj.s.bis130$BaGr),sum)
                                                        ^
NO COPY: R/BWI3_HR.R:2621:57: style: Words within variable and function names should be separated by '_' rather than '.'.
            by=list(verj.s.bis130$tnr,verj.s.bis130$enr,verj.s.bis130$BaGr),sum)
                                                        ^~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2621:71: style: Variable and function names should be all lowercase.
            by=list(verj.s.bis130$tnr,verj.s.bis130$enr,verj.s.bis130$BaGr),sum)
                                                                      ^~~~
NO COPY: R/BWI3_HR.R:2621:77: style: Commas should always have a space after.
            by=list(verj.s.bis130$tnr,verj.s.bis130$enr,verj.s.bis130$BaGr),sum)
                                                                            ^
NO COPY: R/BWI3_HR.R:2622:1: style: lines should not be more than 80 characters.
  verbiss.2 <-stats::aggregate(verj.s.bis130$nha*ifelse(verj.s.bis130$biss==2,1,0),
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2622:13: style: Put spaces around all infix operators.
  verbiss.2 <-stats::aggregate(verj.s.bis130$nha*ifelse(verj.s.bis130$biss==2,1,0),
            ^~~
NO COPY: R/BWI3_HR.R:2622:32: style: Words within variable and function names should be separated by '_' rather than '.'.
  verbiss.2 <-stats::aggregate(verj.s.bis130$nha*ifelse(verj.s.bis130$biss==2,1,0),
                               ^~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2622:49: style: Put spaces around all infix operators.
  verbiss.2 <-stats::aggregate(verj.s.bis130$nha*ifelse(verj.s.bis130$biss==2,1,0),
                                               ~^~
NO COPY: R/BWI3_HR.R:2622:57: style: Words within variable and function names should be separated by '_' rather than '.'.
  verbiss.2 <-stats::aggregate(verj.s.bis130$nha*ifelse(verj.s.bis130$biss==2,1,0),
                                                        ^~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2622:75: style: Put spaces around all infix operators.
  verbiss.2 <-stats::aggregate(verj.s.bis130$nha*ifelse(verj.s.bis130$biss==2,1,0),
                                                                         ~^~~
NO COPY: R/BWI3_HR.R:2622:79: style: Commas should always have a space after.
  verbiss.2 <-stats::aggregate(verj.s.bis130$nha*ifelse(verj.s.bis130$biss==2,1,0),
                                                                              ^
NO COPY: R/BWI3_HR.R:2622:81: style: Commas should always have a space after.
  verbiss.2 <-stats::aggregate(verj.s.bis130$nha*ifelse(verj.s.bis130$biss==2,1,0),
                                                                                ^
NO COPY: R/BWI3_HR.R:2623:15: style: Put spaces around all infix operators.
            by=list(verj.s.bis130$tnr,verj.s.bis130$enr,verj.s.bis130$BaGr),sum)
             ~^~
NO COPY: R/BWI3_HR.R:2623:21: style: Words within variable and function names should be separated by '_' rather than '.'.
            by=list(verj.s.bis130$tnr,verj.s.bis130$enr,verj.s.bis130$BaGr),sum)
                    ^~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2623:39: style: Commas should always have a space after.
            by=list(verj.s.bis130$tnr,verj.s.bis130$enr,verj.s.bis130$BaGr),sum)
                                      ^
NO COPY: R/BWI3_HR.R:2623:39: style: Words within variable and function names should be separated by '_' rather than '.'.
            by=list(verj.s.bis130$tnr,verj.s.bis130$enr,verj.s.bis130$BaGr),sum)
                                      ^~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2623:57: style: Commas should always have a space after.
            by=list(verj.s.bis130$tnr,verj.s.bis130$enr,verj.s.bis130$BaGr),sum)
                                                        ^
NO COPY: R/BWI3_HR.R:2623:57: style: Words within variable and function names should be separated by '_' rather than '.'.
            by=list(verj.s.bis130$tnr,verj.s.bis130$enr,verj.s.bis130$BaGr),sum)
                                                        ^~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2623:71: style: Variable and function names should be all lowercase.
            by=list(verj.s.bis130$tnr,verj.s.bis130$enr,verj.s.bis130$BaGr),sum)
                                                                      ^~~~
NO COPY: R/BWI3_HR.R:2623:77: style: Commas should always have a space after.
            by=list(verj.s.bis130$tnr,verj.s.bis130$enr,verj.s.bis130$BaGr),sum)
                                                                            ^
NO COPY: R/BWI3_HR.R:2625:31: style: Commas should always have a space after.
  names(verbiss.a) <- c("TNr","ENr","BaGr","n.ges")
                              ^
NO COPY: R/BWI3_HR.R:2625:37: style: Commas should always have a space after.
  names(verbiss.a) <- c("TNr","ENr","BaGr","n.ges")
                                    ^
NO COPY: R/BWI3_HR.R:2625:44: style: Commas should always have a space after.
  names(verbiss.a) <- c("TNr","ENr","BaGr","n.ges")
                                           ^
NO COPY: R/BWI3_HR.R:2626:31: style: Commas should always have a space after.
  names(verbiss.0) <- c("TNr","ENr","BaGr","n.vb0")
                              ^
NO COPY: R/BWI3_HR.R:2626:37: style: Commas should always have a space after.
  names(verbiss.0) <- c("TNr","ENr","BaGr","n.vb0")
                                    ^
NO COPY: R/BWI3_HR.R:2626:44: style: Commas should always have a space after.
  names(verbiss.0) <- c("TNr","ENr","BaGr","n.vb0")
                                           ^
NO COPY: R/BWI3_HR.R:2627:31: style: Commas should always have a space after.
  names(verbiss.1) <- c("TNr","ENr","BaGr","n.vb1")
                              ^
NO COPY: R/BWI3_HR.R:2627:37: style: Commas should always have a space after.
  names(verbiss.1) <- c("TNr","ENr","BaGr","n.vb1")
                                    ^
NO COPY: R/BWI3_HR.R:2627:44: style: Commas should always have a space after.
  names(verbiss.1) <- c("TNr","ENr","BaGr","n.vb1")
                                           ^
NO COPY: R/BWI3_HR.R:2628:31: style: Commas should always have a space after.
  names(verbiss.2) <- c("TNr","ENr","BaGr","n.vb2")
                              ^
NO COPY: R/BWI3_HR.R:2628:37: style: Commas should always have a space after.
  names(verbiss.2) <- c("TNr","ENr","BaGr","n.vb2")
                                    ^
NO COPY: R/BWI3_HR.R:2628:44: style: Commas should always have a space after.
  names(verbiss.2) <- c("TNr","ENr","BaGr","n.vb2")
                                           ^
NO COPY: R/BWI3_HR.R:2629:30: style: Commas should always have a space after.
  verbiss <- merge(verbiss.a,verbiss.0,by=c("TNr","ENr","BaGr"))
                             ^
NO COPY: R/BWI3_HR.R:2629:40: style: Commas should always have a space after.
  verbiss <- merge(verbiss.a,verbiss.0,by=c("TNr","ENr","BaGr"))
                                       ^
NO COPY: R/BWI3_HR.R:2629:42: style: Put spaces around all infix operators.
  verbiss <- merge(verbiss.a,verbiss.0,by=c("TNr","ENr","BaGr"))
                                        ~^~
NO COPY: R/BWI3_HR.R:2629:51: style: Commas should always have a space after.
  verbiss <- merge(verbiss.a,verbiss.0,by=c("TNr","ENr","BaGr"))
                                                  ^
NO COPY: R/BWI3_HR.R:2629:57: style: Commas should always have a space after.
  verbiss <- merge(verbiss.a,verbiss.0,by=c("TNr","ENr","BaGr"))
                                                        ^
NO COPY: R/BWI3_HR.R:2630:28: style: Commas should always have a space after.
  verbiss <- merge(verbiss,verbiss.1,by=c("TNr","ENr","BaGr"))
                           ^
NO COPY: R/BWI3_HR.R:2630:38: style: Commas should always have a space after.
  verbiss <- merge(verbiss,verbiss.1,by=c("TNr","ENr","BaGr"))
                                     ^
NO COPY: R/BWI3_HR.R:2630:40: style: Put spaces around all infix operators.
  verbiss <- merge(verbiss,verbiss.1,by=c("TNr","ENr","BaGr"))
                                      ~^~
NO COPY: R/BWI3_HR.R:2630:49: style: Commas should always have a space after.
  verbiss <- merge(verbiss,verbiss.1,by=c("TNr","ENr","BaGr"))
                                                ^
NO COPY: R/BWI3_HR.R:2630:55: style: Commas should always have a space after.
  verbiss <- merge(verbiss,verbiss.1,by=c("TNr","ENr","BaGr"))
                                                      ^
NO COPY: R/BWI3_HR.R:2631:28: style: Commas should always have a space after.
  verbiss <- merge(verbiss,verbiss.2,by=c("TNr","ENr","BaGr"))
                           ^
NO COPY: R/BWI3_HR.R:2631:38: style: Commas should always have a space after.
  verbiss <- merge(verbiss,verbiss.2,by=c("TNr","ENr","BaGr"))
                                     ^
NO COPY: R/BWI3_HR.R:2631:40: style: Put spaces around all infix operators.
  verbiss <- merge(verbiss,verbiss.2,by=c("TNr","ENr","BaGr"))
                                      ~^~
NO COPY: R/BWI3_HR.R:2631:49: style: Commas should always have a space after.
  verbiss <- merge(verbiss,verbiss.2,by=c("TNr","ENr","BaGr"))
                                                ^
NO COPY: R/BWI3_HR.R:2631:55: style: Commas should always have a space after.
  verbiss <- merge(verbiss,verbiss.2,by=c("TNr","ENr","BaGr"))
                                                      ^
NO COPY: R/BWI3_HR.R:2632:40: style: Commas should always have a space after.
  verbiss <- verbiss[order(verbiss$TNr,verbiss$ENr),]
                                       ^
NO COPY: R/BWI3_HR.R:2632:53: style: Commas should always have a space after.
  verbiss <- verbiss[order(verbiss$TNr,verbiss$ENr),]
                                                    ^
NO COPY: R/BWI3_HR.R:2633:35: style: Put spaces around all infix operators.
  verbiss$vb0.prz <- verbiss$n.vb0/verbiss$n.ges
                                 ~^~
NO COPY: R/BWI3_HR.R:2634:35: style: Put spaces around all infix operators.
  verbiss$vb1.prz <- verbiss$n.vb1/verbiss$n.ges
                                 ~^~
NO COPY: R/BWI3_HR.R:2635:35: style: Put spaces around all infix operators.
  verbiss$vb2.prz <- verbiss$n.vb2/verbiss$n.ges
                                 ~^~
NO COPY: R/BWI3_HR.R:2636:38: style: Put spaces around all infix operators.
  verbiss$vb12.prz <-  (verbiss$n.vb1+verbiss$n.vb2)/verbiss$n.ges
                                    ~^~
NO COPY: R/BWI3_HR.R:2636:53: style: Put spaces around all infix operators.
  verbiss$vb12.prz <-  (verbiss$n.vb1+verbiss$n.vb2)/verbiss$n.ges
                                                   ~^~
NO COPY: R/BWI3_HR.R:2645:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  verbiss.t.a <-
  ^~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2646:1: style: lines should not be more than 80 characters.
    stats::aggregate(ifelse(verbiss$n.ges>0,1,0),by=list(verbiss$TNr,verbiss$BaGr),sum)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2646:42: style: Put spaces around all infix operators.
    stats::aggregate(ifelse(verbiss$n.ges>0,1,0),by=list(verbiss$TNr,verbiss$BaGr),sum)
                                        ~^~
NO COPY: R/BWI3_HR.R:2646:45: style: Commas should always have a space after.
    stats::aggregate(ifelse(verbiss$n.ges>0,1,0),by=list(verbiss$TNr,verbiss$BaGr),sum)
                                            ^
NO COPY: R/BWI3_HR.R:2646:47: style: Commas should always have a space after.
    stats::aggregate(ifelse(verbiss$n.ges>0,1,0),by=list(verbiss$TNr,verbiss$BaGr),sum)
                                              ^
NO COPY: R/BWI3_HR.R:2646:50: style: Commas should always have a space after.
    stats::aggregate(ifelse(verbiss$n.ges>0,1,0),by=list(verbiss$TNr,verbiss$BaGr),sum)
                                                 ^
NO COPY: R/BWI3_HR.R:2646:52: style: Put spaces around all infix operators.
    stats::aggregate(ifelse(verbiss$n.ges>0,1,0),by=list(verbiss$TNr,verbiss$BaGr),sum)
                                                  ~^~
NO COPY: R/BWI3_HR.R:2646:70: style: Commas should always have a space after.
    stats::aggregate(ifelse(verbiss$n.ges>0,1,0),by=list(verbiss$TNr,verbiss$BaGr),sum)
                                                                     ^
NO COPY: R/BWI3_HR.R:2646:78: style: Variable and function names should be all lowercase.
    stats::aggregate(ifelse(verbiss$n.ges>0,1,0),by=list(verbiss$TNr,verbiss$BaGr),sum)
                                                                             ^~~~
NO COPY: R/BWI3_HR.R:2646:84: style: Commas should always have a space after.
    stats::aggregate(ifelse(verbiss$n.ges>0,1,0),by=list(verbiss$TNr,verbiss$BaGr),sum)
                                                                                   ^
NO COPY: R/BWI3_HR.R:2647:9: style: Words within variable and function names should be separated by '_' rather than '.'.
  names(verbiss.t.a) <- c("TNr","BaGr","t")
        ^~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2647:33: style: Commas should always have a space after.
  names(verbiss.t.a) <- c("TNr","BaGr","t")
                                ^
NO COPY: R/BWI3_HR.R:2647:40: style: Commas should always have a space after.
  names(verbiss.t.a) <- c("TNr","BaGr","t")
                                       ^
NO COPY: R/BWI3_HR.R:2648:1: style: lines should not be more than 80 characters.
  verbiss.t. <- stats::aggregate(verbiss$vb0.prz,by=list(verbiss$TNr,verbiss$BaGr),sum)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2648:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  verbiss.t. <- stats::aggregate(verbiss$vb0.prz,by=list(verbiss$TNr,verbiss$BaGr),sum)
  ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:2648:50: style: Commas should always have a space after.
  verbiss.t. <- stats::aggregate(verbiss$vb0.prz,by=list(verbiss$TNr,verbiss$BaGr),sum)
                                                 ^
NO COPY: R/BWI3_HR.R:2648:52: style: Put spaces around all infix operators.
  verbiss.t. <- stats::aggregate(verbiss$vb0.prz,by=list(verbiss$TNr,verbiss$BaGr),sum)
                                                  ~^~
NO COPY: R/BWI3_HR.R:2648:70: style: Commas should always have a space after.
  verbiss.t. <- stats::aggregate(verbiss$vb0.prz,by=list(verbiss$TNr,verbiss$BaGr),sum)
                                                                     ^
NO COPY: R/BWI3_HR.R:2648:78: style: Variable and function names should be all lowercase.
  verbiss.t. <- stats::aggregate(verbiss$vb0.prz,by=list(verbiss$TNr,verbiss$BaGr),sum)
                                                                             ^~~~
NO COPY: R/BWI3_HR.R:2648:84: style: Commas should always have a space after.
  verbiss.t. <- stats::aggregate(verbiss$vb0.prz,by=list(verbiss$TNr,verbiss$BaGr),sum)
                                                                                   ^
NO COPY: R/BWI3_HR.R:2649:9: style: Words within variable and function names should be separated by '_' rather than '.'.
  names(verbiss.t.) <- c("TNr","BaGr","s.vb0")
        ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:2649:32: style: Commas should always have a space after.
  names(verbiss.t.) <- c("TNr","BaGr","s.vb0")
                               ^
NO COPY: R/BWI3_HR.R:2649:39: style: Commas should always have a space after.
  names(verbiss.t.) <- c("TNr","BaGr","s.vb0")
                                      ^
NO COPY: R/BWI3_HR.R:2650:22: style: Words within variable and function names should be separated by '_' rather than '.'.
  verbiss.t <- merge(verbiss.t.a,verbiss.t.,by=c("TNr","BaGr"))
                     ^~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2650:34: style: Commas should always have a space after.
  verbiss.t <- merge(verbiss.t.a,verbiss.t.,by=c("TNr","BaGr"))
                                 ^
NO COPY: R/BWI3_HR.R:2650:34: style: Words within variable and function names should be separated by '_' rather than '.'.
  verbiss.t <- merge(verbiss.t.a,verbiss.t.,by=c("TNr","BaGr"))
                                 ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:2650:45: style: Commas should always have a space after.
  verbiss.t <- merge(verbiss.t.a,verbiss.t.,by=c("TNr","BaGr"))
                                            ^
NO COPY: R/BWI3_HR.R:2650:47: style: Put spaces around all infix operators.
  verbiss.t <- merge(verbiss.t.a,verbiss.t.,by=c("TNr","BaGr"))
                                             ~^~
NO COPY: R/BWI3_HR.R:2650:56: style: Commas should always have a space after.
  verbiss.t <- merge(verbiss.t.a,verbiss.t.,by=c("TNr","BaGr"))
                                                       ^
NO COPY: R/BWI3_HR.R:2651:1: style: lines should not be more than 80 characters.
  verbiss.t. <- stats::aggregate(verbiss$vb1.prz,by=list(verbiss$TNr,verbiss$BaGr),sum)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2651:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  verbiss.t. <- stats::aggregate(verbiss$vb1.prz,by=list(verbiss$TNr,verbiss$BaGr),sum)
  ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:2651:50: style: Commas should always have a space after.
  verbiss.t. <- stats::aggregate(verbiss$vb1.prz,by=list(verbiss$TNr,verbiss$BaGr),sum)
                                                 ^
NO COPY: R/BWI3_HR.R:2651:52: style: Put spaces around all infix operators.
  verbiss.t. <- stats::aggregate(verbiss$vb1.prz,by=list(verbiss$TNr,verbiss$BaGr),sum)
                                                  ~^~
NO COPY: R/BWI3_HR.R:2651:70: style: Commas should always have a space after.
  verbiss.t. <- stats::aggregate(verbiss$vb1.prz,by=list(verbiss$TNr,verbiss$BaGr),sum)
                                                                     ^
NO COPY: R/BWI3_HR.R:2651:78: style: Variable and function names should be all lowercase.
  verbiss.t. <- stats::aggregate(verbiss$vb1.prz,by=list(verbiss$TNr,verbiss$BaGr),sum)
                                                                             ^~~~
NO COPY: R/BWI3_HR.R:2651:84: style: Commas should always have a space after.
  verbiss.t. <- stats::aggregate(verbiss$vb1.prz,by=list(verbiss$TNr,verbiss$BaGr),sum)
                                                                                   ^
NO COPY: R/BWI3_HR.R:2652:9: style: Words within variable and function names should be separated by '_' rather than '.'.
  names(verbiss.t.) <- c("TNr","BaGr","s.vb1")
        ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:2652:32: style: Commas should always have a space after.
  names(verbiss.t.) <- c("TNr","BaGr","s.vb1")
                               ^
NO COPY: R/BWI3_HR.R:2652:39: style: Commas should always have a space after.
  names(verbiss.t.) <- c("TNr","BaGr","s.vb1")
                                      ^
NO COPY: R/BWI3_HR.R:2653:32: style: Commas should always have a space after.
  verbiss.t <- merge(verbiss.t,verbiss.t.,by=c("TNr","BaGr"))
                               ^
NO COPY: R/BWI3_HR.R:2653:32: style: Words within variable and function names should be separated by '_' rather than '.'.
  verbiss.t <- merge(verbiss.t,verbiss.t.,by=c("TNr","BaGr"))
                               ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:2653:43: style: Commas should always have a space after.
  verbiss.t <- merge(verbiss.t,verbiss.t.,by=c("TNr","BaGr"))
                                          ^
NO COPY: R/BWI3_HR.R:2653:45: style: Put spaces around all infix operators.
  verbiss.t <- merge(verbiss.t,verbiss.t.,by=c("TNr","BaGr"))
                                           ~^~
NO COPY: R/BWI3_HR.R:2653:54: style: Commas should always have a space after.
  verbiss.t <- merge(verbiss.t,verbiss.t.,by=c("TNr","BaGr"))
                                                     ^
NO COPY: R/BWI3_HR.R:2654:1: style: lines should not be more than 80 characters.
  verbiss.t. <- stats::aggregate(verbiss$vb2.prz,by=list(verbiss$TNr,verbiss$BaGr),sum)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2654:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  verbiss.t. <- stats::aggregate(verbiss$vb2.prz,by=list(verbiss$TNr,verbiss$BaGr),sum)
  ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:2654:50: style: Commas should always have a space after.
  verbiss.t. <- stats::aggregate(verbiss$vb2.prz,by=list(verbiss$TNr,verbiss$BaGr),sum)
                                                 ^
NO COPY: R/BWI3_HR.R:2654:52: style: Put spaces around all infix operators.
  verbiss.t. <- stats::aggregate(verbiss$vb2.prz,by=list(verbiss$TNr,verbiss$BaGr),sum)
                                                  ~^~
NO COPY: R/BWI3_HR.R:2654:70: style: Commas should always have a space after.
  verbiss.t. <- stats::aggregate(verbiss$vb2.prz,by=list(verbiss$TNr,verbiss$BaGr),sum)
                                                                     ^
NO COPY: R/BWI3_HR.R:2654:78: style: Variable and function names should be all lowercase.
  verbiss.t. <- stats::aggregate(verbiss$vb2.prz,by=list(verbiss$TNr,verbiss$BaGr),sum)
                                                                             ^~~~
NO COPY: R/BWI3_HR.R:2654:84: style: Commas should always have a space after.
  verbiss.t. <- stats::aggregate(verbiss$vb2.prz,by=list(verbiss$TNr,verbiss$BaGr),sum)
                                                                                   ^
NO COPY: R/BWI3_HR.R:2655:9: style: Words within variable and function names should be separated by '_' rather than '.'.
  names(verbiss.t.) <- c("TNr","BaGr","s.vb2")
        ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:2655:32: style: Commas should always have a space after.
  names(verbiss.t.) <- c("TNr","BaGr","s.vb2")
                               ^
NO COPY: R/BWI3_HR.R:2655:39: style: Commas should always have a space after.
  names(verbiss.t.) <- c("TNr","BaGr","s.vb2")
                                      ^
NO COPY: R/BWI3_HR.R:2656:32: style: Commas should always have a space after.
  verbiss.t <- merge(verbiss.t,verbiss.t.,by=c("TNr","BaGr"))
                               ^
NO COPY: R/BWI3_HR.R:2656:32: style: Words within variable and function names should be separated by '_' rather than '.'.
  verbiss.t <- merge(verbiss.t,verbiss.t.,by=c("TNr","BaGr"))
                               ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:2656:43: style: Commas should always have a space after.
  verbiss.t <- merge(verbiss.t,verbiss.t.,by=c("TNr","BaGr"))
                                          ^
NO COPY: R/BWI3_HR.R:2656:45: style: Put spaces around all infix operators.
  verbiss.t <- merge(verbiss.t,verbiss.t.,by=c("TNr","BaGr"))
                                           ~^~
NO COPY: R/BWI3_HR.R:2656:54: style: Commas should always have a space after.
  verbiss.t <- merge(verbiss.t,verbiss.t.,by=c("TNr","BaGr"))
                                                     ^
NO COPY: R/BWI3_HR.R:2657:1: style: lines should not be more than 80 characters.
  verbiss.t. <- stats::aggregate(verbiss$vb12.prz,by=list(verbiss$TNr,verbiss$BaGr),sum)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2657:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  verbiss.t. <- stats::aggregate(verbiss$vb12.prz,by=list(verbiss$TNr,verbiss$BaGr),sum)
  ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:2657:51: style: Commas should always have a space after.
  verbiss.t. <- stats::aggregate(verbiss$vb12.prz,by=list(verbiss$TNr,verbiss$BaGr),sum)
                                                  ^
NO COPY: R/BWI3_HR.R:2657:53: style: Put spaces around all infix operators.
  verbiss.t. <- stats::aggregate(verbiss$vb12.prz,by=list(verbiss$TNr,verbiss$BaGr),sum)
                                                   ~^~
NO COPY: R/BWI3_HR.R:2657:71: style: Commas should always have a space after.
  verbiss.t. <- stats::aggregate(verbiss$vb12.prz,by=list(verbiss$TNr,verbiss$BaGr),sum)
                                                                      ^
NO COPY: R/BWI3_HR.R:2657:79: style: Variable and function names should be all lowercase.
  verbiss.t. <- stats::aggregate(verbiss$vb12.prz,by=list(verbiss$TNr,verbiss$BaGr),sum)
                                                                              ^~~~
NO COPY: R/BWI3_HR.R:2657:85: style: Commas should always have a space after.
  verbiss.t. <- stats::aggregate(verbiss$vb12.prz,by=list(verbiss$TNr,verbiss$BaGr),sum)
                                                                                    ^
NO COPY: R/BWI3_HR.R:2658:9: style: Words within variable and function names should be separated by '_' rather than '.'.
  names(verbiss.t.) <- c("TNr","BaGr","s.vb12")
        ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:2658:32: style: Commas should always have a space after.
  names(verbiss.t.) <- c("TNr","BaGr","s.vb12")
                               ^
NO COPY: R/BWI3_HR.R:2658:39: style: Commas should always have a space after.
  names(verbiss.t.) <- c("TNr","BaGr","s.vb12")
                                      ^
NO COPY: R/BWI3_HR.R:2659:32: style: Commas should always have a space after.
  verbiss.t <- merge(verbiss.t,verbiss.t.,by=c("TNr","BaGr"))
                               ^
NO COPY: R/BWI3_HR.R:2659:32: style: Words within variable and function names should be separated by '_' rather than '.'.
  verbiss.t <- merge(verbiss.t,verbiss.t.,by=c("TNr","BaGr"))
                               ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:2659:43: style: Commas should always have a space after.
  verbiss.t <- merge(verbiss.t,verbiss.t.,by=c("TNr","BaGr"))
                                          ^
NO COPY: R/BWI3_HR.R:2659:45: style: Put spaces around all infix operators.
  verbiss.t <- merge(verbiss.t,verbiss.t.,by=c("TNr","BaGr"))
                                           ~^~
NO COPY: R/BWI3_HR.R:2659:54: style: Commas should always have a space after.
  verbiss.t <- merge(verbiss.t,verbiss.t.,by=c("TNr","BaGr"))
                                                     ^
NO COPY: R/BWI3_HR.R:2661:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  m.vb.bagr <- array(dim=c(4,2,(n.bagr+1)))
  ^~~~~~~~~
NO COPY: R/BWI3_HR.R:2661:25: style: Put spaces around all infix operators.
  m.vb.bagr <- array(dim=c(4,2,(n.bagr+1)))
                       ~^~
NO COPY: R/BWI3_HR.R:2661:30: style: Commas should always have a space after.
  m.vb.bagr <- array(dim=c(4,2,(n.bagr+1)))
                             ^
NO COPY: R/BWI3_HR.R:2661:32: style: Commas should always have a space after.
  m.vb.bagr <- array(dim=c(4,2,(n.bagr+1)))
                               ^
NO COPY: R/BWI3_HR.R:2661:32: style: Place a space before left parenthesis, except in a function call.
  m.vb.bagr <- array(dim=c(4,2,(n.bagr+1)))
                               ^
NO COPY: R/BWI3_HR.R:2661:39: style: Put spaces around all infix operators.
  m.vb.bagr <- array(dim=c(4,2,(n.bagr+1)))
                                     ~^~
NO COPY: R/BWI3_HR.R:2664:3: style: Opening curly braces should never go on their own line and should always be followed by a new line.
  {
  ^
NO COPY: R/BWI3_HR.R:2665:5: style: Words within variable and function names should be separated by '_' rather than '.'.
    verbiss.t.bagr <- verbiss.t[verbiss.t[["BaGr"]] == bagr.list[i],TRUE]
    ^~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2665:69: style: Commas should always have a space after.
    verbiss.t.bagr <- verbiss.t[verbiss.t[["BaGr"]] == bagr.list[i],TRUE]
                                                                    ^
NO COPY: R/BWI3_HR.R:2668:5: style: Opening curly braces should never go on their own line and should always be followed by a new line.
    {
    ^
NO COPY: R/BWI3_HR.R:2669:38: style: Words within variable and function names should be separated by '_' rather than '.'.
     vb.bagr <- r.variance.fun(cbind(verbiss.t.bagr$t,verbiss.t.bagr[,(3+j)]),
                                     ^~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2669:55: style: Commas should always have a space after.
     vb.bagr <- r.variance.fun(cbind(verbiss.t.bagr$t,verbiss.t.bagr[,(3+j)]),
                                                      ^
NO COPY: R/BWI3_HR.R:2669:55: style: Words within variable and function names should be separated by '_' rather than '.'.
     vb.bagr <- r.variance.fun(cbind(verbiss.t.bagr$t,verbiss.t.bagr[,(3+j)]),
                                                      ^~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2669:71: style: Commas should always have a space after.
     vb.bagr <- r.variance.fun(cbind(verbiss.t.bagr$t,verbiss.t.bagr[,(3+j)]),
                                                                      ^
NO COPY: R/BWI3_HR.R:2669:71: style: Place a space before left parenthesis, except in a function call.
     vb.bagr <- r.variance.fun(cbind(verbiss.t.bagr$t,verbiss.t.bagr[,(3+j)]),
                                                                      ^
NO COPY: R/BWI3_HR.R:2669:73: style: Put spaces around all infix operators.
     vb.bagr <- r.variance.fun(cbind(verbiss.t.bagr$t,verbiss.t.bagr[,(3+j)]),
                                                                       ~^~
NO COPY: R/BWI3_HR.R:2670:48: style: Commas should always have a space after.
                                length(trakte[,1]))
                                               ^
NO COPY: R/BWI3_HR.R:2671:6: style: Words within variable and function names should be separated by '_' rather than '.'.
     m.vb.bagr[j,1,i] <- vb.bagr$R.xy*100         #in Prozent
     ^~~~~~~~~
NO COPY: R/BWI3_HR.R:2671:18: style: Commas should always have a space after.
     m.vb.bagr[j,1,i] <- vb.bagr$R.xy*100         #in Prozent
                 ^
NO COPY: R/BWI3_HR.R:2671:20: style: Commas should always have a space after.
     m.vb.bagr[j,1,i] <- vb.bagr$R.xy*100         #in Prozent
                   ^
NO COPY: R/BWI3_HR.R:2671:38: style: Put spaces around all infix operators.
     m.vb.bagr[j,1,i] <- vb.bagr$R.xy*100         #in Prozent
                                    ~^~
NO COPY: R/BWI3_HR.R:2672:6: style: Words within variable and function names should be separated by '_' rather than '.'.
     m.vb.bagr[j,2,i] <- sqrt(vb.bagr$V.R.xy)*100 #in Prozent
     ^~~~~~~~~
NO COPY: R/BWI3_HR.R:2672:18: style: Commas should always have a space after.
     m.vb.bagr[j,2,i] <- sqrt(vb.bagr$V.R.xy)*100 #in Prozent
                 ^
NO COPY: R/BWI3_HR.R:2672:20: style: Commas should always have a space after.
     m.vb.bagr[j,2,i] <- sqrt(vb.bagr$V.R.xy)*100 #in Prozent
                   ^
NO COPY: R/BWI3_HR.R:2672:39: style: Words within variable and function names should be separated by '_' rather than '.'.
     m.vb.bagr[j,2,i] <- sqrt(vb.bagr$V.R.xy)*100 #in Prozent
                                      ^~~~~~
NO COPY: R/BWI3_HR.R:2672:46: style: Put spaces around all infix operators.
     m.vb.bagr[j,2,i] <- sqrt(vb.bagr$V.R.xy)*100 #in Prozent
                                            ~^~
NO COPY: R/BWI3_HR.R:2681:33: style: Words within variable and function names should be separated by '_' rather than '.'.
  verbiss.a <- stats::aggregate(verj.s.bis130$nha,
                                ^~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2682:15: style: Put spaces around all infix operators.
            by=list(verj.s.bis130$tnr,verj.s.bis130$enr),sum)
             ~^~
NO COPY: R/BWI3_HR.R:2682:21: style: Words within variable and function names should be separated by '_' rather than '.'.
            by=list(verj.s.bis130$tnr,verj.s.bis130$enr),sum)
                    ^~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2682:39: style: Commas should always have a space after.
            by=list(verj.s.bis130$tnr,verj.s.bis130$enr),sum)
                                      ^
NO COPY: R/BWI3_HR.R:2682:39: style: Words within variable and function names should be separated by '_' rather than '.'.
            by=list(verj.s.bis130$tnr,verj.s.bis130$enr),sum)
                                      ^~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2682:58: style: Commas should always have a space after.
            by=list(verj.s.bis130$tnr,verj.s.bis130$enr),sum)
                                                         ^
NO COPY: R/BWI3_HR.R:2683:1: style: lines should not be more than 80 characters.
  verbiss.0 <-stats::aggregate(verj.s.bis130$nha*ifelse(verj.s.bis130$biss==0,1,0),
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2683:13: style: Put spaces around all infix operators.
  verbiss.0 <-stats::aggregate(verj.s.bis130$nha*ifelse(verj.s.bis130$biss==0,1,0),
            ^~~
NO COPY: R/BWI3_HR.R:2683:32: style: Words within variable and function names should be separated by '_' rather than '.'.
  verbiss.0 <-stats::aggregate(verj.s.bis130$nha*ifelse(verj.s.bis130$biss==0,1,0),
                               ^~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2683:49: style: Put spaces around all infix operators.
  verbiss.0 <-stats::aggregate(verj.s.bis130$nha*ifelse(verj.s.bis130$biss==0,1,0),
                                               ~^~
NO COPY: R/BWI3_HR.R:2683:57: style: Words within variable and function names should be separated by '_' rather than '.'.
  verbiss.0 <-stats::aggregate(verj.s.bis130$nha*ifelse(verj.s.bis130$biss==0,1,0),
                                                        ^~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2683:75: style: Put spaces around all infix operators.
  verbiss.0 <-stats::aggregate(verj.s.bis130$nha*ifelse(verj.s.bis130$biss==0,1,0),
                                                                         ~^~~
NO COPY: R/BWI3_HR.R:2683:79: style: Commas should always have a space after.
  verbiss.0 <-stats::aggregate(verj.s.bis130$nha*ifelse(verj.s.bis130$biss==0,1,0),
                                                                              ^
NO COPY: R/BWI3_HR.R:2683:81: style: Commas should always have a space after.
  verbiss.0 <-stats::aggregate(verj.s.bis130$nha*ifelse(verj.s.bis130$biss==0,1,0),
                                                                                ^
NO COPY: R/BWI3_HR.R:2684:15: style: Put spaces around all infix operators.
            by=list(verj.s.bis130$tnr,verj.s.bis130$enr),sum)
             ~^~
NO COPY: R/BWI3_HR.R:2684:21: style: Words within variable and function names should be separated by '_' rather than '.'.
            by=list(verj.s.bis130$tnr,verj.s.bis130$enr),sum)
                    ^~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2684:39: style: Commas should always have a space after.
            by=list(verj.s.bis130$tnr,verj.s.bis130$enr),sum)
                                      ^
NO COPY: R/BWI3_HR.R:2684:39: style: Words within variable and function names should be separated by '_' rather than '.'.
            by=list(verj.s.bis130$tnr,verj.s.bis130$enr),sum)
                                      ^~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2684:58: style: Commas should always have a space after.
            by=list(verj.s.bis130$tnr,verj.s.bis130$enr),sum)
                                                         ^
NO COPY: R/BWI3_HR.R:2685:1: style: lines should not be more than 80 characters.
  verbiss.1 <-stats::aggregate(verj.s.bis130$nha*ifelse(verj.s.bis130$biss==1,1,0),
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2685:13: style: Put spaces around all infix operators.
  verbiss.1 <-stats::aggregate(verj.s.bis130$nha*ifelse(verj.s.bis130$biss==1,1,0),
            ^~~
NO COPY: R/BWI3_HR.R:2685:32: style: Words within variable and function names should be separated by '_' rather than '.'.
  verbiss.1 <-stats::aggregate(verj.s.bis130$nha*ifelse(verj.s.bis130$biss==1,1,0),
                               ^~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2685:49: style: Put spaces around all infix operators.
  verbiss.1 <-stats::aggregate(verj.s.bis130$nha*ifelse(verj.s.bis130$biss==1,1,0),
                                               ~^~
NO COPY: R/BWI3_HR.R:2685:57: style: Words within variable and function names should be separated by '_' rather than '.'.
  verbiss.1 <-stats::aggregate(verj.s.bis130$nha*ifelse(verj.s.bis130$biss==1,1,0),
                                                        ^~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2685:75: style: Put spaces around all infix operators.
  verbiss.1 <-stats::aggregate(verj.s.bis130$nha*ifelse(verj.s.bis130$biss==1,1,0),
                                                                         ~^~~
NO COPY: R/BWI3_HR.R:2685:79: style: Commas should always have a space after.
  verbiss.1 <-stats::aggregate(verj.s.bis130$nha*ifelse(verj.s.bis130$biss==1,1,0),
                                                                              ^
NO COPY: R/BWI3_HR.R:2685:81: style: Commas should always have a space after.
  verbiss.1 <-stats::aggregate(verj.s.bis130$nha*ifelse(verj.s.bis130$biss==1,1,0),
                                                                                ^
NO COPY: R/BWI3_HR.R:2686:15: style: Put spaces around all infix operators.
            by=list(verj.s.bis130$tnr,verj.s.bis130$enr),sum)
             ~^~
NO COPY: R/BWI3_HR.R:2686:21: style: Words within variable and function names should be separated by '_' rather than '.'.
            by=list(verj.s.bis130$tnr,verj.s.bis130$enr),sum)
                    ^~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2686:39: style: Commas should always have a space after.
            by=list(verj.s.bis130$tnr,verj.s.bis130$enr),sum)
                                      ^
NO COPY: R/BWI3_HR.R:2686:39: style: Words within variable and function names should be separated by '_' rather than '.'.
            by=list(verj.s.bis130$tnr,verj.s.bis130$enr),sum)
                                      ^~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2686:58: style: Commas should always have a space after.
            by=list(verj.s.bis130$tnr,verj.s.bis130$enr),sum)
                                                         ^
NO COPY: R/BWI3_HR.R:2687:1: style: lines should not be more than 80 characters.
  verbiss.2 <-stats::aggregate(verj.s.bis130$nha*ifelse(verj.s.bis130$biss==2,1,0),
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2687:13: style: Put spaces around all infix operators.
  verbiss.2 <-stats::aggregate(verj.s.bis130$nha*ifelse(verj.s.bis130$biss==2,1,0),
            ^~~
NO COPY: R/BWI3_HR.R:2687:32: style: Words within variable and function names should be separated by '_' rather than '.'.
  verbiss.2 <-stats::aggregate(verj.s.bis130$nha*ifelse(verj.s.bis130$biss==2,1,0),
                               ^~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2687:49: style: Put spaces around all infix operators.
  verbiss.2 <-stats::aggregate(verj.s.bis130$nha*ifelse(verj.s.bis130$biss==2,1,0),
                                               ~^~
NO COPY: R/BWI3_HR.R:2687:57: style: Words within variable and function names should be separated by '_' rather than '.'.
  verbiss.2 <-stats::aggregate(verj.s.bis130$nha*ifelse(verj.s.bis130$biss==2,1,0),
                                                        ^~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2687:75: style: Put spaces around all infix operators.
  verbiss.2 <-stats::aggregate(verj.s.bis130$nha*ifelse(verj.s.bis130$biss==2,1,0),
                                                                         ~^~~
NO COPY: R/BWI3_HR.R:2687:79: style: Commas should always have a space after.
  verbiss.2 <-stats::aggregate(verj.s.bis130$nha*ifelse(verj.s.bis130$biss==2,1,0),
                                                                              ^
NO COPY: R/BWI3_HR.R:2687:81: style: Commas should always have a space after.
  verbiss.2 <-stats::aggregate(verj.s.bis130$nha*ifelse(verj.s.bis130$biss==2,1,0),
                                                                                ^
NO COPY: R/BWI3_HR.R:2688:15: style: Put spaces around all infix operators.
            by=list(verj.s.bis130$tnr,verj.s.bis130$enr),sum)
             ~^~
NO COPY: R/BWI3_HR.R:2688:21: style: Words within variable and function names should be separated by '_' rather than '.'.
            by=list(verj.s.bis130$tnr,verj.s.bis130$enr),sum)
                    ^~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2688:39: style: Commas should always have a space after.
            by=list(verj.s.bis130$tnr,verj.s.bis130$enr),sum)
                                      ^
NO COPY: R/BWI3_HR.R:2688:39: style: Words within variable and function names should be separated by '_' rather than '.'.
            by=list(verj.s.bis130$tnr,verj.s.bis130$enr),sum)
                                      ^~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2688:58: style: Commas should always have a space after.
            by=list(verj.s.bis130$tnr,verj.s.bis130$enr),sum)
                                                         ^
NO COPY: R/BWI3_HR.R:2690:31: style: Commas should always have a space after.
  names(verbiss.a) <- c("TNr","ENr","n.ges")
                              ^
NO COPY: R/BWI3_HR.R:2690:37: style: Commas should always have a space after.
  names(verbiss.a) <- c("TNr","ENr","n.ges")
                                    ^
NO COPY: R/BWI3_HR.R:2691:31: style: Commas should always have a space after.
  names(verbiss.0) <- c("TNr","ENr","n.vb0")
                              ^
NO COPY: R/BWI3_HR.R:2691:37: style: Commas should always have a space after.
  names(verbiss.0) <- c("TNr","ENr","n.vb0")
                                    ^
NO COPY: R/BWI3_HR.R:2692:31: style: Commas should always have a space after.
  names(verbiss.1) <- c("TNr","ENr","n.vb1")
                              ^
NO COPY: R/BWI3_HR.R:2692:37: style: Commas should always have a space after.
  names(verbiss.1) <- c("TNr","ENr","n.vb1")
                                    ^
NO COPY: R/BWI3_HR.R:2693:31: style: Commas should always have a space after.
  names(verbiss.2) <- c("TNr","ENr","n.vb2")
                              ^
NO COPY: R/BWI3_HR.R:2693:37: style: Commas should always have a space after.
  names(verbiss.2) <- c("TNr","ENr","n.vb2")
                                    ^
NO COPY: R/BWI3_HR.R:2694:30: style: Commas should always have a space after.
  verbiss <- merge(verbiss.a,verbiss.0,by=c("TNr","ENr"))
                             ^
NO COPY: R/BWI3_HR.R:2694:40: style: Commas should always have a space after.
  verbiss <- merge(verbiss.a,verbiss.0,by=c("TNr","ENr"))
                                       ^
NO COPY: R/BWI3_HR.R:2694:42: style: Put spaces around all infix operators.
  verbiss <- merge(verbiss.a,verbiss.0,by=c("TNr","ENr"))
                                        ~^~
NO COPY: R/BWI3_HR.R:2694:51: style: Commas should always have a space after.
  verbiss <- merge(verbiss.a,verbiss.0,by=c("TNr","ENr"))
                                                  ^
NO COPY: R/BWI3_HR.R:2695:28: style: Commas should always have a space after.
  verbiss <- merge(verbiss,verbiss.1,by=c("TNr","ENr"))
                           ^
NO COPY: R/BWI3_HR.R:2695:38: style: Commas should always have a space after.
  verbiss <- merge(verbiss,verbiss.1,by=c("TNr","ENr"))
                                     ^
NO COPY: R/BWI3_HR.R:2695:40: style: Put spaces around all infix operators.
  verbiss <- merge(verbiss,verbiss.1,by=c("TNr","ENr"))
                                      ~^~
NO COPY: R/BWI3_HR.R:2695:49: style: Commas should always have a space after.
  verbiss <- merge(verbiss,verbiss.1,by=c("TNr","ENr"))
                                                ^
NO COPY: R/BWI3_HR.R:2696:28: style: Commas should always have a space after.
  verbiss <- merge(verbiss,verbiss.2,by=c("TNr","ENr"))
                           ^
NO COPY: R/BWI3_HR.R:2696:38: style: Commas should always have a space after.
  verbiss <- merge(verbiss,verbiss.2,by=c("TNr","ENr"))
                                     ^
NO COPY: R/BWI3_HR.R:2696:40: style: Put spaces around all infix operators.
  verbiss <- merge(verbiss,verbiss.2,by=c("TNr","ENr"))
                                      ~^~
NO COPY: R/BWI3_HR.R:2696:49: style: Commas should always have a space after.
  verbiss <- merge(verbiss,verbiss.2,by=c("TNr","ENr"))
                                                ^
NO COPY: R/BWI3_HR.R:2698:35: style: Put spaces around all infix operators.
  verbiss$vb0.prz <- verbiss$n.vb0/verbiss$n.ges
                                 ~^~
NO COPY: R/BWI3_HR.R:2699:35: style: Put spaces around all infix operators.
  verbiss$vb1.prz <- verbiss$n.vb1/verbiss$n.ges
                                 ~^~
NO COPY: R/BWI3_HR.R:2700:35: style: Put spaces around all infix operators.
  verbiss$vb2.prz <- verbiss$n.vb2/verbiss$n.ges
                                 ~^~
NO COPY: R/BWI3_HR.R:2701:38: style: Put spaces around all infix operators.
  verbiss$vb12.prz <-  (verbiss$n.vb1+verbiss$n.vb2)/verbiss$n.ges
                                    ~^~
NO COPY: R/BWI3_HR.R:2701:53: style: Put spaces around all infix operators.
  verbiss$vb12.prz <-  (verbiss$n.vb1+verbiss$n.vb2)/verbiss$n.ges
                                                   ~^~
NO COPY: R/BWI3_HR.R:2705:1: style: lines should not be more than 80 characters.
  verbiss.t.a <- stats::aggregate(ifelse(verbiss$n.ges>0,1,0),by=list(verbiss$TNr),sum)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2705:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  verbiss.t.a <- stats::aggregate(ifelse(verbiss$n.ges>0,1,0),by=list(verbiss$TNr),sum)
  ^~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2705:55: style: Put spaces around all infix operators.
  verbiss.t.a <- stats::aggregate(ifelse(verbiss$n.ges>0,1,0),by=list(verbiss$TNr),sum)
                                                     ~^~
NO COPY: R/BWI3_HR.R:2705:58: style: Commas should always have a space after.
  verbiss.t.a <- stats::aggregate(ifelse(verbiss$n.ges>0,1,0),by=list(verbiss$TNr),sum)
                                                         ^
NO COPY: R/BWI3_HR.R:2705:60: style: Commas should always have a space after.
  verbiss.t.a <- stats::aggregate(ifelse(verbiss$n.ges>0,1,0),by=list(verbiss$TNr),sum)
                                                           ^
NO COPY: R/BWI3_HR.R:2705:63: style: Commas should always have a space after.
  verbiss.t.a <- stats::aggregate(ifelse(verbiss$n.ges>0,1,0),by=list(verbiss$TNr),sum)
                                                              ^
NO COPY: R/BWI3_HR.R:2705:65: style: Put spaces around all infix operators.
  verbiss.t.a <- stats::aggregate(ifelse(verbiss$n.ges>0,1,0),by=list(verbiss$TNr),sum)
                                                               ~^~
NO COPY: R/BWI3_HR.R:2705:84: style: Commas should always have a space after.
  verbiss.t.a <- stats::aggregate(ifelse(verbiss$n.ges>0,1,0),by=list(verbiss$TNr),sum)
                                                                                   ^
NO COPY: R/BWI3_HR.R:2706:9: style: Words within variable and function names should be separated by '_' rather than '.'.
  names(verbiss.t.a) <- c("TNr","t")
        ^~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2706:33: style: Commas should always have a space after.
  names(verbiss.t.a) <- c("TNr","t")
                                ^
NO COPY: R/BWI3_HR.R:2708:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  verbiss.t. <- stats::aggregate(verbiss$vb0.prz,by=list(verbiss$TNr),sum)
  ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:2708:50: style: Commas should always have a space after.
  verbiss.t. <- stats::aggregate(verbiss$vb0.prz,by=list(verbiss$TNr),sum)
                                                 ^
NO COPY: R/BWI3_HR.R:2708:52: style: Put spaces around all infix operators.
  verbiss.t. <- stats::aggregate(verbiss$vb0.prz,by=list(verbiss$TNr),sum)
                                                  ~^~
NO COPY: R/BWI3_HR.R:2708:71: style: Commas should always have a space after.
  verbiss.t. <- stats::aggregate(verbiss$vb0.prz,by=list(verbiss$TNr),sum)
                                                                      ^
NO COPY: R/BWI3_HR.R:2709:9: style: Words within variable and function names should be separated by '_' rather than '.'.
  names(verbiss.t.) <- c("TNr","s.vb0")
        ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:2709:32: style: Commas should always have a space after.
  names(verbiss.t.) <- c("TNr","s.vb0")
                               ^
NO COPY: R/BWI3_HR.R:2710:22: style: Words within variable and function names should be separated by '_' rather than '.'.
  verbiss.t <- merge(verbiss.t.a,verbiss.t.,by=c("TNr"))
                     ^~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2710:34: style: Commas should always have a space after.
  verbiss.t <- merge(verbiss.t.a,verbiss.t.,by=c("TNr"))
                                 ^
NO COPY: R/BWI3_HR.R:2710:34: style: Words within variable and function names should be separated by '_' rather than '.'.
  verbiss.t <- merge(verbiss.t.a,verbiss.t.,by=c("TNr"))
                                 ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:2710:45: style: Commas should always have a space after.
  verbiss.t <- merge(verbiss.t.a,verbiss.t.,by=c("TNr"))
                                            ^
NO COPY: R/BWI3_HR.R:2710:47: style: Put spaces around all infix operators.
  verbiss.t <- merge(verbiss.t.a,verbiss.t.,by=c("TNr"))
                                             ~^~
NO COPY: R/BWI3_HR.R:2712:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  verbiss.t. <- stats::aggregate(verbiss$vb1.prz,by=list(verbiss$TNr),sum)
  ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:2712:50: style: Commas should always have a space after.
  verbiss.t. <- stats::aggregate(verbiss$vb1.prz,by=list(verbiss$TNr),sum)
                                                 ^
NO COPY: R/BWI3_HR.R:2712:52: style: Put spaces around all infix operators.
  verbiss.t. <- stats::aggregate(verbiss$vb1.prz,by=list(verbiss$TNr),sum)
                                                  ~^~
NO COPY: R/BWI3_HR.R:2712:71: style: Commas should always have a space after.
  verbiss.t. <- stats::aggregate(verbiss$vb1.prz,by=list(verbiss$TNr),sum)
                                                                      ^
NO COPY: R/BWI3_HR.R:2713:9: style: Words within variable and function names should be separated by '_' rather than '.'.
  names(verbiss.t.) <- c("TNr","s.vb1")
        ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:2713:32: style: Commas should always have a space after.
  names(verbiss.t.) <- c("TNr","s.vb1")
                               ^
NO COPY: R/BWI3_HR.R:2714:32: style: Commas should always have a space after.
  verbiss.t <- merge(verbiss.t,verbiss.t.,by=c("TNr"))
                               ^
NO COPY: R/BWI3_HR.R:2714:32: style: Words within variable and function names should be separated by '_' rather than '.'.
  verbiss.t <- merge(verbiss.t,verbiss.t.,by=c("TNr"))
                               ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:2714:43: style: Commas should always have a space after.
  verbiss.t <- merge(verbiss.t,verbiss.t.,by=c("TNr"))
                                          ^
NO COPY: R/BWI3_HR.R:2714:45: style: Put spaces around all infix operators.
  verbiss.t <- merge(verbiss.t,verbiss.t.,by=c("TNr"))
                                           ~^~
NO COPY: R/BWI3_HR.R:2716:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  verbiss.t. <- stats::aggregate(verbiss$vb2.prz,by=list(verbiss$TNr),sum)
  ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:2716:50: style: Commas should always have a space after.
  verbiss.t. <- stats::aggregate(verbiss$vb2.prz,by=list(verbiss$TNr),sum)
                                                 ^
NO COPY: R/BWI3_HR.R:2716:52: style: Put spaces around all infix operators.
  verbiss.t. <- stats::aggregate(verbiss$vb2.prz,by=list(verbiss$TNr),sum)
                                                  ~^~
NO COPY: R/BWI3_HR.R:2716:71: style: Commas should always have a space after.
  verbiss.t. <- stats::aggregate(verbiss$vb2.prz,by=list(verbiss$TNr),sum)
                                                                      ^
NO COPY: R/BWI3_HR.R:2717:9: style: Words within variable and function names should be separated by '_' rather than '.'.
  names(verbiss.t.) <- c("TNr","s.vb2")
        ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:2717:32: style: Commas should always have a space after.
  names(verbiss.t.) <- c("TNr","s.vb2")
                               ^
NO COPY: R/BWI3_HR.R:2718:32: style: Commas should always have a space after.
  verbiss.t <- merge(verbiss.t,verbiss.t.,by=c("TNr"))
                               ^
NO COPY: R/BWI3_HR.R:2718:32: style: Words within variable and function names should be separated by '_' rather than '.'.
  verbiss.t <- merge(verbiss.t,verbiss.t.,by=c("TNr"))
                               ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:2718:43: style: Commas should always have a space after.
  verbiss.t <- merge(verbiss.t,verbiss.t.,by=c("TNr"))
                                          ^
NO COPY: R/BWI3_HR.R:2718:45: style: Put spaces around all infix operators.
  verbiss.t <- merge(verbiss.t,verbiss.t.,by=c("TNr"))
                                           ~^~
NO COPY: R/BWI3_HR.R:2720:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  verbiss.t. <- stats::aggregate(verbiss$vb12.prz,by=list(verbiss$TNr),sum)
  ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:2720:51: style: Commas should always have a space after.
  verbiss.t. <- stats::aggregate(verbiss$vb12.prz,by=list(verbiss$TNr),sum)
                                                  ^
NO COPY: R/BWI3_HR.R:2720:53: style: Put spaces around all infix operators.
  verbiss.t. <- stats::aggregate(verbiss$vb12.prz,by=list(verbiss$TNr),sum)
                                                   ~^~
NO COPY: R/BWI3_HR.R:2720:72: style: Commas should always have a space after.
  verbiss.t. <- stats::aggregate(verbiss$vb12.prz,by=list(verbiss$TNr),sum)
                                                                       ^
NO COPY: R/BWI3_HR.R:2721:9: style: Words within variable and function names should be separated by '_' rather than '.'.
  names(verbiss.t.) <- c("TNr","s.vb12")
        ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:2721:32: style: Commas should always have a space after.
  names(verbiss.t.) <- c("TNr","s.vb12")
                               ^
NO COPY: R/BWI3_HR.R:2722:32: style: Commas should always have a space after.
  verbiss.t <- merge(verbiss.t,verbiss.t.,by=c("TNr"))
                               ^
NO COPY: R/BWI3_HR.R:2722:32: style: Words within variable and function names should be separated by '_' rather than '.'.
  verbiss.t <- merge(verbiss.t,verbiss.t.,by=c("TNr"))
                               ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:2722:43: style: Commas should always have a space after.
  verbiss.t <- merge(verbiss.t,verbiss.t.,by=c("TNr"))
                                          ^
NO COPY: R/BWI3_HR.R:2722:45: style: Put spaces around all infix operators.
  verbiss.t <- merge(verbiss.t,verbiss.t.,by=c("TNr"))
                                           ~^~
NO COPY: R/BWI3_HR.R:2726:3: style: Opening curly braces should never go on their own line and should always be followed by a new line.
  {
  ^
NO COPY: R/BWI3_HR.R:2727:49: style: Commas should always have a space after.
     r.list <- r.variance.fun(cbind(verbiss.t$t,verbiss.t[,(2+i)]),
                                                ^
NO COPY: R/BWI3_HR.R:2727:60: style: Commas should always have a space after.
     r.list <- r.variance.fun(cbind(verbiss.t$t,verbiss.t[,(2+i)]),
                                                           ^
NO COPY: R/BWI3_HR.R:2727:60: style: Place a space before left parenthesis, except in a function call.
     r.list <- r.variance.fun(cbind(verbiss.t$t,verbiss.t[,(2+i)]),
                                                           ^
NO COPY: R/BWI3_HR.R:2727:62: style: Put spaces around all infix operators.
     r.list <- r.variance.fun(cbind(verbiss.t$t,verbiss.t[,(2+i)]),
                                                            ~^~
NO COPY: R/BWI3_HR.R:2728:48: style: Commas should always have a space after.
                                length(trakte[,1]))
                                               ^
NO COPY: R/BWI3_HR.R:2729:6: style: Words within variable and function names should be separated by '_' rather than '.'.
     m.vb.bagr[i,1,(n.bagr+1)] <- r.list$R.xy*100 #in Prozent
     ^~~~~~~~~
NO COPY: R/BWI3_HR.R:2729:18: style: Commas should always have a space after.
     m.vb.bagr[i,1,(n.bagr+1)] <- r.list$R.xy*100 #in Prozent
                 ^
NO COPY: R/BWI3_HR.R:2729:20: style: Commas should always have a space after.
     m.vb.bagr[i,1,(n.bagr+1)] <- r.list$R.xy*100 #in Prozent
                   ^
NO COPY: R/BWI3_HR.R:2729:20: style: Place a space before left parenthesis, except in a function call.
     m.vb.bagr[i,1,(n.bagr+1)] <- r.list$R.xy*100 #in Prozent
                   ^
NO COPY: R/BWI3_HR.R:2729:27: style: Put spaces around all infix operators.
     m.vb.bagr[i,1,(n.bagr+1)] <- r.list$R.xy*100 #in Prozent
                         ~^~
NO COPY: R/BWI3_HR.R:2729:46: style: Put spaces around all infix operators.
     m.vb.bagr[i,1,(n.bagr+1)] <- r.list$R.xy*100 #in Prozent
                                            ~^~
NO COPY: R/BWI3_HR.R:2730:6: style: Words within variable and function names should be separated by '_' rather than '.'.
     m.vb.bagr[i,2,(n.bagr+1)] <- sqrt(r.list$V.R.xy)*100
     ^~~~~~~~~
NO COPY: R/BWI3_HR.R:2730:18: style: Commas should always have a space after.
     m.vb.bagr[i,2,(n.bagr+1)] <- sqrt(r.list$V.R.xy)*100
                 ^
NO COPY: R/BWI3_HR.R:2730:20: style: Commas should always have a space after.
     m.vb.bagr[i,2,(n.bagr+1)] <- sqrt(r.list$V.R.xy)*100
                   ^
NO COPY: R/BWI3_HR.R:2730:20: style: Place a space before left parenthesis, except in a function call.
     m.vb.bagr[i,2,(n.bagr+1)] <- sqrt(r.list$V.R.xy)*100
                   ^
NO COPY: R/BWI3_HR.R:2730:27: style: Put spaces around all infix operators.
     m.vb.bagr[i,2,(n.bagr+1)] <- sqrt(r.list$V.R.xy)*100
                         ~^~
NO COPY: R/BWI3_HR.R:2730:47: style: Words within variable and function names should be separated by '_' rather than '.'.
     m.vb.bagr[i,2,(n.bagr+1)] <- sqrt(r.list$V.R.xy)*100
                                              ^~~~~~
NO COPY: R/BWI3_HR.R:2730:54: style: Put spaces around all infix operators.
     m.vb.bagr[i,2,(n.bagr+1)] <- sqrt(r.list$V.R.xy)*100
                                                    ~^~
NO COPY: R/BWI3_HR.R:2734:20: style: Put spaces around all infix operators.
  Log <- list(Datum=Sys.time())
                  ~^~
NO COPY: R/BWI3_HR.R:2736:18: style: Put spaces around all infix operators.
  return(list(Log=Log, Stratum=auswahl, HBF=T.hbf, se.HBF=se.T.hbf,
                ~^~
NO COPY: R/BWI3_HR.R:2736:31: style: Put spaces around all infix operators.
  return(list(Log=Log, Stratum=auswahl, HBF=T.hbf, se.HBF=se.T.hbf,
                             ~^~
NO COPY: R/BWI3_HR.R:2736:44: style: Put spaces around all infix operators.
  return(list(Log=Log, Stratum=auswahl, HBF=T.hbf, se.HBF=se.T.hbf,
                                          ~^~
NO COPY: R/BWI3_HR.R:2736:58: style: Put spaces around all infix operators.
  return(list(Log=Log, Stratum=auswahl, HBF=T.hbf, se.HBF=se.T.hbf,
                                                        ~^~
NO COPY: R/BWI3_HR.R:2736:59: style: Words within variable and function names should be separated by '_' rather than '.'.
  return(list(Log=Log, Stratum=auswahl, HBF=T.hbf, se.HBF=se.T.hbf,
                                                          ^~~~~~~~
NO COPY: R/BWI3_HR.R:2737:19: style: Put spaces around all infix operators.
              BAGR=bagr.list,
                 ~^~
NO COPY: R/BWI3_HR.R:2738:33: style: Put spaces around all infix operators.
              m.Verbissproz.BAGR=m.vb.bagr))
                               ~^~
NO COPY: R/BWI3_HR.R:2738:34: style: Words within variable and function names should be separated by '_' rather than '.'.
              m.Verbissproz.BAGR=m.vb.bagr))
                                 ^~~~~~~~~
NO COPY: R/BWI3_HR.R:2771:33: style: Commas should always have a space after.
verjg.bagr.fun <- function(verj,ecken,trakte,auswahl,inv,A,
                                ^
NO COPY: R/BWI3_HR.R:2771:39: style: Commas should always have a space after.
verjg.bagr.fun <- function(verj,ecken,trakte,auswahl,inv,A,
                                      ^
NO COPY: R/BWI3_HR.R:2771:46: style: Commas should always have a space after.
verjg.bagr.fun <- function(verj,ecken,trakte,auswahl,inv,A,
                                             ^
NO COPY: R/BWI3_HR.R:2771:54: style: Commas should always have a space after.
verjg.bagr.fun <- function(verj,ecken,trakte,auswahl,inv,A,
                                                     ^
NO COPY: R/BWI3_HR.R:2771:58: style: Commas should always have a space after.
verjg.bagr.fun <- function(verj,ecken,trakte,auswahl,inv,A,
                                                         ^
NO COPY: R/BWI3_HR.R:2773:34: style: Commas should always have a space after.
  stratum <- stratum.fun(auswahl,ecken)
                                 ^
NO COPY: R/BWI3_HR.R:2778:31: style: Commas should always have a space after.
  y <- stats::aggregate(rep(1,length(stratum[,1])),by=list(stratum$tnr),sum)
                              ^
NO COPY: R/BWI3_HR.R:2778:47: style: Commas should always have a space after.
  y <- stats::aggregate(rep(1,length(stratum[,1])),by=list(stratum$tnr),sum)
                                              ^
NO COPY: R/BWI3_HR.R:2778:52: style: Commas should always have a space after.
  y <- stats::aggregate(rep(1,length(stratum[,1])),by=list(stratum$tnr),sum)
                                                   ^
NO COPY: R/BWI3_HR.R:2778:54: style: Put spaces around all infix operators.
  y <- stats::aggregate(rep(1,length(stratum[,1])),by=list(stratum$tnr),sum)
                                                    ~^~
NO COPY: R/BWI3_HR.R:2778:73: style: Commas should always have a space after.
  y <- stats::aggregate(rep(1,length(stratum[,1])),by=list(stratum$tnr),sum)
                                                                        ^
NO COPY: R/BWI3_HR.R:2779:23: style: Commas should always have a space after.
  names(y) <- c("tnr","y")
                      ^
NO COPY: R/BWI3_HR.R:2781:42: style: Commas should always have a space after.
  y <- merge(trakte[TRUE, c("tnr", "m")],y,by=c("tnr"),all.x=T)
                                         ^
NO COPY: R/BWI3_HR.R:2781:44: style: Commas should always have a space after.
  y <- merge(trakte[TRUE, c("tnr", "m")],y,by=c("tnr"),all.x=T)
                                           ^
NO COPY: R/BWI3_HR.R:2781:46: style: Put spaces around all infix operators.
  y <- merge(trakte[TRUE, c("tnr", "m")],y,by=c("tnr"),all.x=T)
                                            ~^~
NO COPY: R/BWI3_HR.R:2781:56: style: Commas should always have a space after.
  y <- merge(trakte[TRUE, c("tnr", "m")],y,by=c("tnr"),all.x=T)
                                                       ^
NO COPY: R/BWI3_HR.R:2781:61: style: Put spaces around all infix operators.
  y <- merge(trakte[TRUE, c("tnr", "m")],y,by=c("tnr"),all.x=T)
                                                           ~^~
NO COPY: R/BWI3_HR.R:2783:31: style: Commas should always have a space after.
  r.list <- r.variance.fun(y[,2:3],length(trakte[,1]))
                              ^
NO COPY: R/BWI3_HR.R:2783:36: style: Commas should always have a space after.
  r.list <- r.variance.fun(y[,2:3],length(trakte[,1]))
                                   ^
NO COPY: R/BWI3_HR.R:2783:51: style: Commas should always have a space after.
  r.list <- r.variance.fun(y[,2:3],length(trakte[,1]))
                                                  ^
NO COPY: R/BWI3_HR.R:2784:23: style: Put spaces around all infix operators.
  T.hbf <- r.list$R.xy*A
                     ~^~
NO COPY: R/BWI3_HR.R:2785:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  se.T.hbf <- sqrt(r.list$V.R.xy)*A
  ^~~~~~~~
NO COPY: R/BWI3_HR.R:2785:27: style: Words within variable and function names should be separated by '_' rather than '.'.
  se.T.hbf <- sqrt(r.list$V.R.xy)*A
                          ^~~~~~
NO COPY: R/BWI3_HR.R:2785:34: style: Put spaces around all infix operators.
  se.T.hbf <- sqrt(r.list$V.R.xy)*A
                                ~^~
NO COPY: R/BWI3_HR.R:2786:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: R/BWI3_HR.R:2790:20: style: Put spaces around all infix operators.
  inv <- ifelse(inv>1,2,inv)
                  ~^~
NO COPY: R/BWI3_HR.R:2790:23: style: Commas should always have a space after.
  inv <- ifelse(inv>1,2,inv)
                      ^
NO COPY: R/BWI3_HR.R:2790:25: style: Commas should always have a space after.
  inv <- ifelse(inv>1,2,inv)
                        ^
NO COPY: R/BWI3_HR.R:2791:26: style: Commas should always have a space after.
  names(verj) <- sub(inv,names(verj),replacement="")
                         ^
NO COPY: R/BWI3_HR.R:2791:38: style: Commas should always have a space after.
  names(verj) <- sub(inv,names(verj),replacement="")
                                     ^
NO COPY: R/BWI3_HR.R:2791:49: style: Put spaces around all infix operators.
  names(verj) <- sub(inv,names(verj),replacement="")
                                               ~^~
NO COPY: R/BWI3_HR.R:2794:52: style: Commas should always have a space after.
                    stratum[TRUE, c("tnr", "enr")],by=c("tnr","enr"))
                                                   ^
NO COPY: R/BWI3_HR.R:2794:54: style: Put spaces around all infix operators.
                    stratum[TRUE, c("tnr", "enr")],by=c("tnr","enr"))
                                                    ~^~
NO COPY: R/BWI3_HR.R:2794:63: style: Commas should always have a space after.
                    stratum[TRUE, c("tnr", "enr")],by=c("tnr","enr"))
                                                              ^
NO COPY: R/BWI3_HR.R:2795:1: style: Trailing whitespace is superfluous.
                    
^~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2796:23: style: Commas should always have a space after.
  bagr.list <- c("FI","TA","DGL","KI","LAE","BU","EI","ALH","ALN")
                      ^
NO COPY: R/BWI3_HR.R:2796:28: style: Commas should always have a space after.
  bagr.list <- c("FI","TA","DGL","KI","LAE","BU","EI","ALH","ALN")
                           ^
NO COPY: R/BWI3_HR.R:2796:34: style: Commas should always have a space after.
  bagr.list <- c("FI","TA","DGL","KI","LAE","BU","EI","ALH","ALN")
                                 ^
NO COPY: R/BWI3_HR.R:2796:39: style: Commas should always have a space after.
  bagr.list <- c("FI","TA","DGL","KI","LAE","BU","EI","ALH","ALN")
                                      ^
NO COPY: R/BWI3_HR.R:2796:45: style: Commas should always have a space after.
  bagr.list <- c("FI","TA","DGL","KI","LAE","BU","EI","ALH","ALN")
                                            ^
NO COPY: R/BWI3_HR.R:2796:50: style: Commas should always have a space after.
  bagr.list <- c("FI","TA","DGL","KI","LAE","BU","EI","ALH","ALN")
                                                 ^
NO COPY: R/BWI3_HR.R:2796:55: style: Commas should always have a space after.
  bagr.list <- c("FI","TA","DGL","KI","LAE","BU","EI","ALH","ALN")
                                                      ^
NO COPY: R/BWI3_HR.R:2796:61: style: Commas should always have a space after.
  bagr.list <- c("FI","TA","DGL","KI","LAE","BU","EI","ALH","ALN")
                                                            ^
NO COPY: R/BWI3_HR.R:2800:35: style: Put spaces around all infix operators.
                              by.x="ba",by.y="ICode",all.x=T)
                                 ~^~
NO COPY: R/BWI3_HR.R:2800:41: style: Commas should always have a space after.
                              by.x="ba",by.y="ICode",all.x=T)
                                        ^
NO COPY: R/BWI3_HR.R:2800:45: style: Put spaces around all infix operators.
                              by.x="ba",by.y="ICode",all.x=T)
                                           ~^~
NO COPY: R/BWI3_HR.R:2800:54: style: Commas should always have a space after.
                              by.x="ba",by.y="ICode",all.x=T)
                                                     ^
NO COPY: R/BWI3_HR.R:2800:59: style: Put spaces around all infix operators.
                              by.x="ba",by.y="ICode",all.x=T)
                                                         ~^~
NO COPY: R/BWI3_HR.R:2802:19: style: Put spaces around all infix operators.
  names(verj.s)[7]<- "bagr"                            
                 ~^
NO COPY: R/BWI3_HR.R:2802:28: style: Trailing whitespace is superfluous.
  names(verj.s)[7]<- "bagr"                            
                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2807:25: style: Trailing whitespace is superfluous.
  #Nach Baumartengruppen  
                        ^~
NO COPY: R/BWI3_HR.R:2809:33: style: Commas should always have a space after.
    stats::aggregate(verj.s$nha,by=list(verj.s$tnr,verj.s$bagr),sum)
                                ^
NO COPY: R/BWI3_HR.R:2809:35: style: Put spaces around all infix operators.
    stats::aggregate(verj.s$nha,by=list(verj.s$tnr,verj.s$bagr),sum)
                                 ~^~
NO COPY: R/BWI3_HR.R:2809:52: style: Commas should always have a space after.
    stats::aggregate(verj.s$nha,by=list(verj.s$tnr,verj.s$bagr),sum)
                                                   ^
NO COPY: R/BWI3_HR.R:2809:65: style: Commas should always have a space after.
    stats::aggregate(verj.s$nha,by=list(verj.s$tnr,verj.s$bagr),sum)
                                                                ^
NO COPY: R/BWI3_HR.R:2810:28: style: Commas should always have a space after.
  names(verj.t) <- c("tnr","bagr","n")
                           ^
NO COPY: R/BWI3_HR.R:2810:35: style: Commas should always have a space after.
  names(verj.t) <- c("tnr","bagr","n")
                                  ^
NO COPY: R/BWI3_HR.R:2812:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  verj.t.a <-
  ^~~~~~~~
NO COPY: R/BWI3_HR.R:2813:33: style: Commas should always have a space after.
    stats::aggregate(verj.s$nha,by=list(verj.s$tnr),sum)
                                ^
NO COPY: R/BWI3_HR.R:2813:35: style: Put spaces around all infix operators.
    stats::aggregate(verj.s$nha,by=list(verj.s$tnr),sum)
                                 ~^~
NO COPY: R/BWI3_HR.R:2813:53: style: Commas should always have a space after.
    stats::aggregate(verj.s$nha,by=list(verj.s$tnr),sum)
                                                    ^
NO COPY: R/BWI3_HR.R:2814:9: style: Words within variable and function names should be separated by '_' rather than '.'.
  names(verj.t.a) <- c("tnr","n.ges")
        ^~~~~~~~
NO COPY: R/BWI3_HR.R:2814:30: style: Commas should always have a space after.
  names(verj.t.a) <- c("tnr","n.ges")
                             ^
NO COPY: R/BWI3_HR.R:2815:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: R/BWI3_HR.R:2818:38: style: Trailing whitespace is superfluous.
  #2. Dimension: Wert, Standardfehler 
                                     ^
NO COPY: R/BWI3_HR.R:2820:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  n.verj.bagr <- array(dim=c(2,2,(n.bagr+1)))
  ^~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2820:27: style: Put spaces around all infix operators.
  n.verj.bagr <- array(dim=c(2,2,(n.bagr+1)))
                         ~^~
NO COPY: R/BWI3_HR.R:2820:32: style: Commas should always have a space after.
  n.verj.bagr <- array(dim=c(2,2,(n.bagr+1)))
                               ^
NO COPY: R/BWI3_HR.R:2820:34: style: Commas should always have a space after.
  n.verj.bagr <- array(dim=c(2,2,(n.bagr+1)))
                                 ^
NO COPY: R/BWI3_HR.R:2820:34: style: Place a space before left parenthesis, except in a function call.
  n.verj.bagr <- array(dim=c(2,2,(n.bagr+1)))
                                 ^
NO COPY: R/BWI3_HR.R:2820:41: style: Put spaces around all infix operators.
  n.verj.bagr <- array(dim=c(2,2,(n.bagr+1)))
                                       ~^~
NO COPY: R/BWI3_HR.R:2821:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: R/BWI3_HR.R:2823:3: style: Opening curly braces should never go on their own line and should always be followed by a new line.
  {
  ^
NO COPY: R/BWI3_HR.R:2824:5: style: Words within variable and function names should be separated by '_' rather than '.'.
    verj.t.bagr <- verj.t[verj.t[["bagr"]] == bagr.list[i], TRUE]
    ^~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2827:17: style: Words within variable and function names should be separated by '_' rather than '.'.
                verj.t.bagr[TRUE,  c("tnr", "n")],by="tnr",all.x=T)
                ^~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2827:51: style: Commas should always have a space after.
                verj.t.bagr[TRUE,  c("tnr", "n")],by="tnr",all.x=T)
                                                  ^
NO COPY: R/BWI3_HR.R:2827:53: style: Put spaces around all infix operators.
                verj.t.bagr[TRUE,  c("tnr", "n")],by="tnr",all.x=T)
                                                   ~^~
NO COPY: R/BWI3_HR.R:2827:60: style: Commas should always have a space after.
                verj.t.bagr[TRUE,  c("tnr", "n")],by="tnr",all.x=T)
                                                           ^
NO COPY: R/BWI3_HR.R:2827:65: style: Put spaces around all infix operators.
                verj.t.bagr[TRUE,  c("tnr", "n")],by="tnr",all.x=T)
                                                               ~^~
NO COPY: R/BWI3_HR.R:2829:35: style: Commas should always have a space after.
    vj.bagr <- r.variance.fun(xy[,2:3],length(trakte[,1]))
                                  ^
NO COPY: R/BWI3_HR.R:2829:40: style: Commas should always have a space after.
    vj.bagr <- r.variance.fun(xy[,2:3],length(trakte[,1]))
                                       ^
NO COPY: R/BWI3_HR.R:2829:55: style: Commas should always have a space after.
    vj.bagr <- r.variance.fun(xy[,2:3],length(trakte[,1]))
                                                      ^
NO COPY: R/BWI3_HR.R:2830:5: style: Words within variable and function names should be separated by '_' rather than '.'.
    n.verj.bagr[1,1,i] <- vj.bagr$R.xy * A        
    ^~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2830:19: style: Commas should always have a space after.
    n.verj.bagr[1,1,i] <- vj.bagr$R.xy * A        
                  ^
NO COPY: R/BWI3_HR.R:2830:21: style: Commas should always have a space after.
    n.verj.bagr[1,1,i] <- vj.bagr$R.xy * A        
                    ^
NO COPY: R/BWI3_HR.R:2830:43: style: Trailing whitespace is superfluous.
    n.verj.bagr[1,1,i] <- vj.bagr$R.xy * A        
                                          ^~~~~~~~
NO COPY: R/BWI3_HR.R:2831:5: style: Words within variable and function names should be separated by '_' rather than '.'.
    n.verj.bagr[1,2,i] <- sqrt(vj.bagr$V.R.xy)* A 
    ^~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2831:19: style: Commas should always have a space after.
    n.verj.bagr[1,2,i] <- sqrt(vj.bagr$V.R.xy)* A 
                  ^
NO COPY: R/BWI3_HR.R:2831:21: style: Commas should always have a space after.
    n.verj.bagr[1,2,i] <- sqrt(vj.bagr$V.R.xy)* A 
                    ^
NO COPY: R/BWI3_HR.R:2831:40: style: Words within variable and function names should be separated by '_' rather than '.'.
    n.verj.bagr[1,2,i] <- sqrt(vj.bagr$V.R.xy)* A 
                                       ^~~~~~
NO COPY: R/BWI3_HR.R:2831:47: style: Put spaces around all infix operators.
    n.verj.bagr[1,2,i] <- sqrt(vj.bagr$V.R.xy)* A 
                                             ~^
NO COPY: R/BWI3_HR.R:2831:50: style: Trailing whitespace is superfluous.
    n.verj.bagr[1,2,i] <- sqrt(vj.bagr$V.R.xy)* A 
                                                 ^
NO COPY: R/BWI3_HR.R:2833:17: style: Words within variable and function names should be separated by '_' rather than '.'.
    xy <- merge(verj.t.a,xy[TRUE, c("tnr", "n")],by="tnr",all.y=T)
                ^~~~~~~~
NO COPY: R/BWI3_HR.R:2833:26: style: Commas should always have a space after.
    xy <- merge(verj.t.a,xy[TRUE, c("tnr", "n")],by="tnr",all.y=T)
                         ^
NO COPY: R/BWI3_HR.R:2833:50: style: Commas should always have a space after.
    xy <- merge(verj.t.a,xy[TRUE, c("tnr", "n")],by="tnr",all.y=T)
                                                 ^
NO COPY: R/BWI3_HR.R:2833:52: style: Put spaces around all infix operators.
    xy <- merge(verj.t.a,xy[TRUE, c("tnr", "n")],by="tnr",all.y=T)
                                                  ~^~
NO COPY: R/BWI3_HR.R:2833:59: style: Commas should always have a space after.
    xy <- merge(verj.t.a,xy[TRUE, c("tnr", "n")],by="tnr",all.y=T)
                                                          ^
NO COPY: R/BWI3_HR.R:2833:64: style: Put spaces around all infix operators.
    xy <- merge(verj.t.a,xy[TRUE, c("tnr", "n")],by="tnr",all.y=T)
                                                              ~^~
NO COPY: R/BWI3_HR.R:2835:5: style: Words within variable and function names should be separated by '_' rather than '.'.
    vj.proz.bagr <- r.variance.fun(xy[,2:3],length(trakte[,1])) 
    ^~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2835:40: style: Commas should always have a space after.
    vj.proz.bagr <- r.variance.fun(xy[,2:3],length(trakte[,1])) 
                                       ^
NO COPY: R/BWI3_HR.R:2835:45: style: Commas should always have a space after.
    vj.proz.bagr <- r.variance.fun(xy[,2:3],length(trakte[,1])) 
                                            ^
NO COPY: R/BWI3_HR.R:2835:60: style: Commas should always have a space after.
    vj.proz.bagr <- r.variance.fun(xy[,2:3],length(trakte[,1])) 
                                                           ^
NO COPY: R/BWI3_HR.R:2835:64: style: Trailing whitespace is superfluous.
    vj.proz.bagr <- r.variance.fun(xy[,2:3],length(trakte[,1])) 
                                                               ^
NO COPY: R/BWI3_HR.R:2836:5: style: Words within variable and function names should be separated by '_' rather than '.'.
    n.verj.bagr[2,1,i] <- vj.proz.bagr$R.xy * 100        #Prozent        
    ^~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2836:19: style: Commas should always have a space after.
    n.verj.bagr[2,1,i] <- vj.proz.bagr$R.xy * 100        #Prozent        
                  ^
NO COPY: R/BWI3_HR.R:2836:21: style: Commas should always have a space after.
    n.verj.bagr[2,1,i] <- vj.proz.bagr$R.xy * 100        #Prozent        
                    ^
NO COPY: R/BWI3_HR.R:2836:27: style: Words within variable and function names should be separated by '_' rather than '.'.
    n.verj.bagr[2,1,i] <- vj.proz.bagr$R.xy * 100        #Prozent        
                          ^~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2836:66: style: Trailing whitespace is superfluous.
    n.verj.bagr[2,1,i] <- vj.proz.bagr$R.xy * 100        #Prozent        
                                                                 ^~~~~~~~
NO COPY: R/BWI3_HR.R:2837:5: style: Words within variable and function names should be separated by '_' rather than '.'.
    n.verj.bagr[2,2,i] <- sqrt(vj.proz.bagr$V.R.xy)* 100 #Prozent 
    ^~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2837:19: style: Commas should always have a space after.
    n.verj.bagr[2,2,i] <- sqrt(vj.proz.bagr$V.R.xy)* 100 #Prozent 
                  ^
NO COPY: R/BWI3_HR.R:2837:21: style: Commas should always have a space after.
    n.verj.bagr[2,2,i] <- sqrt(vj.proz.bagr$V.R.xy)* 100 #Prozent 
                    ^
NO COPY: R/BWI3_HR.R:2837:32: style: Words within variable and function names should be separated by '_' rather than '.'.
    n.verj.bagr[2,2,i] <- sqrt(vj.proz.bagr$V.R.xy)* 100 #Prozent 
                               ^~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2837:45: style: Words within variable and function names should be separated by '_' rather than '.'.
    n.verj.bagr[2,2,i] <- sqrt(vj.proz.bagr$V.R.xy)* 100 #Prozent 
                                            ^~~~~~
NO COPY: R/BWI3_HR.R:2837:52: style: Put spaces around all infix operators.
    n.verj.bagr[2,2,i] <- sqrt(vj.proz.bagr$V.R.xy)* 100 #Prozent 
                                                  ~^
NO COPY: R/BWI3_HR.R:2837:66: style: Trailing whitespace is superfluous.
    n.verj.bagr[2,2,i] <- sqrt(vj.proz.bagr$V.R.xy)* 100 #Prozent 
                                                                 ^
NO COPY: R/BWI3_HR.R:2839:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: R/BWI3_HR.R:2842:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: R/BWI3_HR.R:2843:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  verj.t.a <- merge(trakte[TRUE, c("tnr", "m")],verj.t.a,by="tnr",all.x=T) 
  ^~~~~~~~
NO COPY: R/BWI3_HR.R:2843:49: style: Commas should always have a space after.
  verj.t.a <- merge(trakte[TRUE, c("tnr", "m")],verj.t.a,by="tnr",all.x=T) 
                                                ^
NO COPY: R/BWI3_HR.R:2843:49: style: Words within variable and function names should be separated by '_' rather than '.'.
  verj.t.a <- merge(trakte[TRUE, c("tnr", "m")],verj.t.a,by="tnr",all.x=T) 
                                                ^~~~~~~~
NO COPY: R/BWI3_HR.R:2843:58: style: Commas should always have a space after.
  verj.t.a <- merge(trakte[TRUE, c("tnr", "m")],verj.t.a,by="tnr",all.x=T) 
                                                         ^
NO COPY: R/BWI3_HR.R:2843:60: style: Put spaces around all infix operators.
  verj.t.a <- merge(trakte[TRUE, c("tnr", "m")],verj.t.a,by="tnr",all.x=T) 
                                                          ~^~
NO COPY: R/BWI3_HR.R:2843:67: style: Commas should always have a space after.
  verj.t.a <- merge(trakte[TRUE, c("tnr", "m")],verj.t.a,by="tnr",all.x=T) 
                                                                  ^
NO COPY: R/BWI3_HR.R:2843:72: style: Put spaces around all infix operators.
  verj.t.a <- merge(trakte[TRUE, c("tnr", "m")],verj.t.a,by="tnr",all.x=T) 
                                                                      ~^~
NO COPY: R/BWI3_HR.R:2843:75: style: Trailing whitespace is superfluous.
  verj.t.a <- merge(trakte[TRUE, c("tnr", "m")],verj.t.a,by="tnr",all.x=T) 
                                                                          ^
NO COPY: R/BWI3_HR.R:2844:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  verj.t.a[is.na(verj.t.a)] <- 0 
  ^~~~~~~~
NO COPY: R/BWI3_HR.R:2844:18: style: Words within variable and function names should be separated by '_' rather than '.'.
  verj.t.a[is.na(verj.t.a)] <- 0 
                 ^~~~~~~~
NO COPY: R/BWI3_HR.R:2844:33: style: Trailing whitespace is superfluous.
  verj.t.a[is.na(verj.t.a)] <- 0 
                                ^
NO COPY: R/BWI3_HR.R:2845:34: style: Words within variable and function names should be separated by '_' rather than '.'.
  r.list <- r.variance.fun(cbind(verj.t.a$m,verj.t.a$n.ges),length(trakte[,1]))
                                 ^~~~~~~~
NO COPY: R/BWI3_HR.R:2845:45: style: Commas should always have a space after.
  r.list <- r.variance.fun(cbind(verj.t.a$m,verj.t.a$n.ges),length(trakte[,1]))
                                            ^
NO COPY: R/BWI3_HR.R:2845:45: style: Words within variable and function names should be separated by '_' rather than '.'.
  r.list <- r.variance.fun(cbind(verj.t.a$m,verj.t.a$n.ges),length(trakte[,1]))
                                            ^~~~~~~~
NO COPY: R/BWI3_HR.R:2845:61: style: Commas should always have a space after.
  r.list <- r.variance.fun(cbind(verj.t.a$m,verj.t.a$n.ges),length(trakte[,1]))
                                                            ^
NO COPY: R/BWI3_HR.R:2845:76: style: Commas should always have a space after.
  r.list <- r.variance.fun(cbind(verj.t.a$m,verj.t.a$n.ges),length(trakte[,1]))
                                                                           ^
NO COPY: R/BWI3_HR.R:2846:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  n.verj.bagr[1,1,(n.bagr+1)] <- r.list$R.xy*A
  ^~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2846:17: style: Commas should always have a space after.
  n.verj.bagr[1,1,(n.bagr+1)] <- r.list$R.xy*A
                ^
NO COPY: R/BWI3_HR.R:2846:19: style: Commas should always have a space after.
  n.verj.bagr[1,1,(n.bagr+1)] <- r.list$R.xy*A
                  ^
NO COPY: R/BWI3_HR.R:2846:19: style: Place a space before left parenthesis, except in a function call.
  n.verj.bagr[1,1,(n.bagr+1)] <- r.list$R.xy*A
                  ^
NO COPY: R/BWI3_HR.R:2846:26: style: Put spaces around all infix operators.
  n.verj.bagr[1,1,(n.bagr+1)] <- r.list$R.xy*A
                        ~^~
NO COPY: R/BWI3_HR.R:2846:45: style: Put spaces around all infix operators.
  n.verj.bagr[1,1,(n.bagr+1)] <- r.list$R.xy*A
                                           ~^~
NO COPY: R/BWI3_HR.R:2847:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  n.verj.bagr[1,2,(n.bagr+1)] <- sqrt(r.list$V.R.xy)*A
  ^~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2847:17: style: Commas should always have a space after.
  n.verj.bagr[1,2,(n.bagr+1)] <- sqrt(r.list$V.R.xy)*A
                ^
NO COPY: R/BWI3_HR.R:2847:19: style: Commas should always have a space after.
  n.verj.bagr[1,2,(n.bagr+1)] <- sqrt(r.list$V.R.xy)*A
                  ^
NO COPY: R/BWI3_HR.R:2847:19: style: Place a space before left parenthesis, except in a function call.
  n.verj.bagr[1,2,(n.bagr+1)] <- sqrt(r.list$V.R.xy)*A
                  ^
NO COPY: R/BWI3_HR.R:2847:26: style: Put spaces around all infix operators.
  n.verj.bagr[1,2,(n.bagr+1)] <- sqrt(r.list$V.R.xy)*A
                        ~^~
NO COPY: R/BWI3_HR.R:2847:46: style: Words within variable and function names should be separated by '_' rather than '.'.
  n.verj.bagr[1,2,(n.bagr+1)] <- sqrt(r.list$V.R.xy)*A
                                             ^~~~~~
NO COPY: R/BWI3_HR.R:2847:53: style: Put spaces around all infix operators.
  n.verj.bagr[1,2,(n.bagr+1)] <- sqrt(r.list$V.R.xy)*A
                                                   ~^~
NO COPY: R/BWI3_HR.R:2849:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  n.verj.bagr[2,1,(n.bagr+1)] <- 100 #Prozent        
  ^~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2849:17: style: Commas should always have a space after.
  n.verj.bagr[2,1,(n.bagr+1)] <- 100 #Prozent        
                ^
NO COPY: R/BWI3_HR.R:2849:19: style: Commas should always have a space after.
  n.verj.bagr[2,1,(n.bagr+1)] <- 100 #Prozent        
                  ^
NO COPY: R/BWI3_HR.R:2849:19: style: Place a space before left parenthesis, except in a function call.
  n.verj.bagr[2,1,(n.bagr+1)] <- 100 #Prozent        
                  ^
NO COPY: R/BWI3_HR.R:2849:26: style: Put spaces around all infix operators.
  n.verj.bagr[2,1,(n.bagr+1)] <- 100 #Prozent        
                        ~^~
NO COPY: R/BWI3_HR.R:2849:46: style: Trailing whitespace is superfluous.
  n.verj.bagr[2,1,(n.bagr+1)] <- 100 #Prozent        
                                             ^~~~~~~~
NO COPY: R/BWI3_HR.R:2850:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  n.verj.bagr[2,2,(n.bagr+1)] <- 0   #Prozent 
  ^~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2850:17: style: Commas should always have a space after.
  n.verj.bagr[2,2,(n.bagr+1)] <- 0   #Prozent 
                ^
NO COPY: R/BWI3_HR.R:2850:19: style: Commas should always have a space after.
  n.verj.bagr[2,2,(n.bagr+1)] <- 0   #Prozent 
                  ^
NO COPY: R/BWI3_HR.R:2850:19: style: Place a space before left parenthesis, except in a function call.
  n.verj.bagr[2,2,(n.bagr+1)] <- 0   #Prozent 
                  ^
NO COPY: R/BWI3_HR.R:2850:26: style: Put spaces around all infix operators.
  n.verj.bagr[2,2,(n.bagr+1)] <- 0   #Prozent 
                        ~^~
NO COPY: R/BWI3_HR.R:2850:46: style: Trailing whitespace is superfluous.
  n.verj.bagr[2,2,(n.bagr+1)] <- 0   #Prozent 
                                             ^
NO COPY: R/BWI3_HR.R:2851:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: R/BWI3_HR.R:2852:20: style: Put spaces around all infix operators.
  Log <- list(Datum=Sys.time())
                  ~^~
NO COPY: R/BWI3_HR.R:2854:18: style: Put spaces around all infix operators.
  return(list(Log=Log, Stratum=auswahl, HBF=T.hbf, se.HBF=se.T.hbf,
                ~^~
NO COPY: R/BWI3_HR.R:2854:31: style: Put spaces around all infix operators.
  return(list(Log=Log, Stratum=auswahl, HBF=T.hbf, se.HBF=se.T.hbf,
                             ~^~
NO COPY: R/BWI3_HR.R:2854:44: style: Put spaces around all infix operators.
  return(list(Log=Log, Stratum=auswahl, HBF=T.hbf, se.HBF=se.T.hbf,
                                          ~^~
NO COPY: R/BWI3_HR.R:2854:58: style: Put spaces around all infix operators.
  return(list(Log=Log, Stratum=auswahl, HBF=T.hbf, se.HBF=se.T.hbf,
                                                        ~^~
NO COPY: R/BWI3_HR.R:2854:59: style: Words within variable and function names should be separated by '_' rather than '.'.
  return(list(Log=Log, Stratum=auswahl, HBF=T.hbf, se.HBF=se.T.hbf,
                                                          ^~~~~~~~
NO COPY: R/BWI3_HR.R:2855:19: style: Put spaces around all infix operators.
              BAGR=bagr.list,
                 ~^~
NO COPY: R/BWI3_HR.R:2856:27: style: Put spaces around all infix operators.
              n.Verjg.BAGR=n.verj.bagr))
                         ~^~
NO COPY: R/BWI3_HR.R:2856:28: style: Words within variable and function names should be separated by '_' rather than '.'.
              n.Verjg.BAGR=n.verj.bagr))
                           ^~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2892:36: style: Commas should always have a space after.
verjg.bagrupp.fun <- function(verj,ecken,trakte,ba.grupp,auswahl,inv,A){
                                   ^
NO COPY: R/BWI3_HR.R:2892:42: style: Commas should always have a space after.
verjg.bagrupp.fun <- function(verj,ecken,trakte,ba.grupp,auswahl,inv,A){
                                         ^
NO COPY: R/BWI3_HR.R:2892:49: style: Commas should always have a space after.
verjg.bagrupp.fun <- function(verj,ecken,trakte,ba.grupp,auswahl,inv,A){
                                                ^
NO COPY: R/BWI3_HR.R:2892:58: style: Commas should always have a space after.
verjg.bagrupp.fun <- function(verj,ecken,trakte,ba.grupp,auswahl,inv,A){
                                                         ^
NO COPY: R/BWI3_HR.R:2892:66: style: Commas should always have a space after.
verjg.bagrupp.fun <- function(verj,ecken,trakte,ba.grupp,auswahl,inv,A){
                                                                 ^
NO COPY: R/BWI3_HR.R:2892:70: style: Commas should always have a space after.
verjg.bagrupp.fun <- function(verj,ecken,trakte,ba.grupp,auswahl,inv,A){
                                                                     ^
NO COPY: R/BWI3_HR.R:2893:34: style: Commas should always have a space after.
  stratum <- stratum.fun(auswahl,ecken)
                                 ^
NO COPY: R/BWI3_HR.R:2898:31: style: Commas should always have a space after.
  y <- stats::aggregate(rep(1,length(stratum[,1])),by=list(stratum$tnr),sum)
                              ^
NO COPY: R/BWI3_HR.R:2898:47: style: Commas should always have a space after.
  y <- stats::aggregate(rep(1,length(stratum[,1])),by=list(stratum$tnr),sum)
                                              ^
NO COPY: R/BWI3_HR.R:2898:52: style: Commas should always have a space after.
  y <- stats::aggregate(rep(1,length(stratum[,1])),by=list(stratum$tnr),sum)
                                                   ^
NO COPY: R/BWI3_HR.R:2898:54: style: Put spaces around all infix operators.
  y <- stats::aggregate(rep(1,length(stratum[,1])),by=list(stratum$tnr),sum)
                                                    ~^~
NO COPY: R/BWI3_HR.R:2898:73: style: Commas should always have a space after.
  y <- stats::aggregate(rep(1,length(stratum[,1])),by=list(stratum$tnr),sum)
                                                                        ^
NO COPY: R/BWI3_HR.R:2899:23: style: Commas should always have a space after.
  names(y) <- c("tnr","y")
                      ^
NO COPY: R/BWI3_HR.R:2901:42: style: Commas should always have a space after.
  y <- merge(trakte[TRUE, c("tnr", "m")],y,by=c("tnr"),all.x=T)
                                         ^
NO COPY: R/BWI3_HR.R:2901:44: style: Commas should always have a space after.
  y <- merge(trakte[TRUE, c("tnr", "m")],y,by=c("tnr"),all.x=T)
                                           ^
NO COPY: R/BWI3_HR.R:2901:46: style: Put spaces around all infix operators.
  y <- merge(trakte[TRUE, c("tnr", "m")],y,by=c("tnr"),all.x=T)
                                            ~^~
NO COPY: R/BWI3_HR.R:2901:56: style: Commas should always have a space after.
  y <- merge(trakte[TRUE, c("tnr", "m")],y,by=c("tnr"),all.x=T)
                                                       ^
NO COPY: R/BWI3_HR.R:2901:61: style: Put spaces around all infix operators.
  y <- merge(trakte[TRUE, c("tnr", "m")],y,by=c("tnr"),all.x=T)
                                                           ~^~
NO COPY: R/BWI3_HR.R:2903:31: style: Commas should always have a space after.
  r.list <- r.variance.fun(y[,2:3],length(trakte[,1]))
                              ^
NO COPY: R/BWI3_HR.R:2903:36: style: Commas should always have a space after.
  r.list <- r.variance.fun(y[,2:3],length(trakte[,1]))
                                   ^
NO COPY: R/BWI3_HR.R:2903:51: style: Commas should always have a space after.
  r.list <- r.variance.fun(y[,2:3],length(trakte[,1]))
                                                  ^
NO COPY: R/BWI3_HR.R:2904:23: style: Put spaces around all infix operators.
  T.hbf <- r.list$R.xy*A
                     ~^~
NO COPY: R/BWI3_HR.R:2905:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  se.T.hbf <- sqrt(r.list$V.R.xy)*A
  ^~~~~~~~
NO COPY: R/BWI3_HR.R:2905:27: style: Words within variable and function names should be separated by '_' rather than '.'.
  se.T.hbf <- sqrt(r.list$V.R.xy)*A
                          ^~~~~~
NO COPY: R/BWI3_HR.R:2905:34: style: Put spaces around all infix operators.
  se.T.hbf <- sqrt(r.list$V.R.xy)*A
                                ~^~
NO COPY: R/BWI3_HR.R:2906:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: R/BWI3_HR.R:2910:20: style: Put spaces around all infix operators.
  inv <- ifelse(inv>1,2,inv)
                  ~^~
NO COPY: R/BWI3_HR.R:2910:23: style: Commas should always have a space after.
  inv <- ifelse(inv>1,2,inv)
                      ^
NO COPY: R/BWI3_HR.R:2910:25: style: Commas should always have a space after.
  inv <- ifelse(inv>1,2,inv)
                        ^
NO COPY: R/BWI3_HR.R:2911:26: style: Commas should always have a space after.
  names(verj) <- sub(inv,names(verj),replacement="")
                         ^
NO COPY: R/BWI3_HR.R:2911:38: style: Commas should always have a space after.
  names(verj) <- sub(inv,names(verj),replacement="")
                                     ^
NO COPY: R/BWI3_HR.R:2911:49: style: Put spaces around all infix operators.
  names(verj) <- sub(inv,names(verj),replacement="")
                                               ~^~
NO COPY: R/BWI3_HR.R:2914:52: style: Commas should always have a space after.
                    stratum[TRUE, c("tnr", "enr")],by=c("tnr","enr"))
                                                   ^
NO COPY: R/BWI3_HR.R:2914:54: style: Put spaces around all infix operators.
                    stratum[TRUE, c("tnr", "enr")],by=c("tnr","enr"))
                                                    ~^~
NO COPY: R/BWI3_HR.R:2914:63: style: Commas should always have a space after.
                    stratum[TRUE, c("tnr", "enr")],by=c("tnr","enr"))
                                                              ^
NO COPY: R/BWI3_HR.R:2915:1: style: Trailing whitespace is superfluous.
                    
^~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2924:39: style: Put spaces around all infix operators.
                                  by.x="ba",by.y="ICode",all.x=T)
                                     ~^~
NO COPY: R/BWI3_HR.R:2924:45: style: Commas should always have a space after.
                                  by.x="ba",by.y="ICode",all.x=T)
                                            ^
NO COPY: R/BWI3_HR.R:2924:49: style: Put spaces around all infix operators.
                                  by.x="ba",by.y="ICode",all.x=T)
                                               ~^~
NO COPY: R/BWI3_HR.R:2924:58: style: Commas should always have a space after.
                                  by.x="ba",by.y="ICode",all.x=T)
                                                         ^
NO COPY: R/BWI3_HR.R:2924:63: style: Put spaces around all infix operators.
                                  by.x="ba",by.y="ICode",all.x=T)
                                                             ~^~
NO COPY: R/BWI3_HR.R:2926:19: style: Put spaces around all infix operators.
  names(verj.s)[7]<- "bagr"                            
                 ~^
NO COPY: R/BWI3_HR.R:2926:28: style: Trailing whitespace is superfluous.
  names(verj.s)[7]<- "bagr"                            
                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2931:25: style: Trailing whitespace is superfluous.
  #Nach Baumartengruppen  
                        ^~
NO COPY: R/BWI3_HR.R:2933:33: style: Commas should always have a space after.
    stats::aggregate(verj.s$nha,by=list(verj.s$tnr,verj.s$bagr),sum)
                                ^
NO COPY: R/BWI3_HR.R:2933:35: style: Put spaces around all infix operators.
    stats::aggregate(verj.s$nha,by=list(verj.s$tnr,verj.s$bagr),sum)
                                 ~^~
NO COPY: R/BWI3_HR.R:2933:52: style: Commas should always have a space after.
    stats::aggregate(verj.s$nha,by=list(verj.s$tnr,verj.s$bagr),sum)
                                                   ^
NO COPY: R/BWI3_HR.R:2933:65: style: Commas should always have a space after.
    stats::aggregate(verj.s$nha,by=list(verj.s$tnr,verj.s$bagr),sum)
                                                                ^
NO COPY: R/BWI3_HR.R:2934:28: style: Commas should always have a space after.
  names(verj.t) <- c("tnr","bagr","n")
                           ^
NO COPY: R/BWI3_HR.R:2934:35: style: Commas should always have a space after.
  names(verj.t) <- c("tnr","bagr","n")
                                  ^
NO COPY: R/BWI3_HR.R:2936:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  verj.t.a <-
  ^~~~~~~~
NO COPY: R/BWI3_HR.R:2937:33: style: Commas should always have a space after.
    stats::aggregate(verj.s$nha,by=list(verj.s$tnr),sum)
                                ^
NO COPY: R/BWI3_HR.R:2937:35: style: Put spaces around all infix operators.
    stats::aggregate(verj.s$nha,by=list(verj.s$tnr),sum)
                                 ~^~
NO COPY: R/BWI3_HR.R:2937:53: style: Commas should always have a space after.
    stats::aggregate(verj.s$nha,by=list(verj.s$tnr),sum)
                                                    ^
NO COPY: R/BWI3_HR.R:2938:9: style: Words within variable and function names should be separated by '_' rather than '.'.
  names(verj.t.a) <- c("tnr","n.ges")
        ^~~~~~~~
NO COPY: R/BWI3_HR.R:2938:30: style: Commas should always have a space after.
  names(verj.t.a) <- c("tnr","n.ges")
                             ^
NO COPY: R/BWI3_HR.R:2939:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: R/BWI3_HR.R:2942:38: style: Trailing whitespace is superfluous.
  #2. Dimension: Wert, Standardfehler 
                                     ^
NO COPY: R/BWI3_HR.R:2944:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  n.verj.bagr <- array(dim=c(2,2,(n.bagr+1)))
  ^~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2944:27: style: Put spaces around all infix operators.
  n.verj.bagr <- array(dim=c(2,2,(n.bagr+1)))
                         ~^~
NO COPY: R/BWI3_HR.R:2944:32: style: Commas should always have a space after.
  n.verj.bagr <- array(dim=c(2,2,(n.bagr+1)))
                               ^
NO COPY: R/BWI3_HR.R:2944:34: style: Commas should always have a space after.
  n.verj.bagr <- array(dim=c(2,2,(n.bagr+1)))
                                 ^
NO COPY: R/BWI3_HR.R:2944:34: style: Place a space before left parenthesis, except in a function call.
  n.verj.bagr <- array(dim=c(2,2,(n.bagr+1)))
                                 ^
NO COPY: R/BWI3_HR.R:2944:41: style: Put spaces around all infix operators.
  n.verj.bagr <- array(dim=c(2,2,(n.bagr+1)))
                                       ~^~
NO COPY: R/BWI3_HR.R:2945:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: R/BWI3_HR.R:2947:3: style: Opening curly braces should never go on their own line and should always be followed by a new line.
  {
  ^
NO COPY: R/BWI3_HR.R:2948:5: style: Words within variable and function names should be separated by '_' rather than '.'.
    verj.t.bagr <- verj.t[verj.t[["bagr"]] == bagr.list[i], TRUE]
    ^~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2951:17: style: Words within variable and function names should be separated by '_' rather than '.'.
                verj.t.bagr[TRUE,  c("tnr", "n")],by="tnr",all.x=T)
                ^~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2951:51: style: Commas should always have a space after.
                verj.t.bagr[TRUE,  c("tnr", "n")],by="tnr",all.x=T)
                                                  ^
NO COPY: R/BWI3_HR.R:2951:53: style: Put spaces around all infix operators.
                verj.t.bagr[TRUE,  c("tnr", "n")],by="tnr",all.x=T)
                                                   ~^~
NO COPY: R/BWI3_HR.R:2951:60: style: Commas should always have a space after.
                verj.t.bagr[TRUE,  c("tnr", "n")],by="tnr",all.x=T)
                                                           ^
NO COPY: R/BWI3_HR.R:2951:65: style: Put spaces around all infix operators.
                verj.t.bagr[TRUE,  c("tnr", "n")],by="tnr",all.x=T)
                                                               ~^~
NO COPY: R/BWI3_HR.R:2953:35: style: Commas should always have a space after.
    vj.bagr <- r.variance.fun(xy[,2:3],length(trakte[,1]))
                                  ^
NO COPY: R/BWI3_HR.R:2953:40: style: Commas should always have a space after.
    vj.bagr <- r.variance.fun(xy[,2:3],length(trakte[,1]))
                                       ^
NO COPY: R/BWI3_HR.R:2953:55: style: Commas should always have a space after.
    vj.bagr <- r.variance.fun(xy[,2:3],length(trakte[,1]))
                                                      ^
NO COPY: R/BWI3_HR.R:2954:5: style: Words within variable and function names should be separated by '_' rather than '.'.
    n.verj.bagr[1,1,i] <- vj.bagr$R.xy * A        
    ^~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2954:19: style: Commas should always have a space after.
    n.verj.bagr[1,1,i] <- vj.bagr$R.xy * A        
                  ^
NO COPY: R/BWI3_HR.R:2954:21: style: Commas should always have a space after.
    n.verj.bagr[1,1,i] <- vj.bagr$R.xy * A        
                    ^
NO COPY: R/BWI3_HR.R:2954:43: style: Trailing whitespace is superfluous.
    n.verj.bagr[1,1,i] <- vj.bagr$R.xy * A        
                                          ^~~~~~~~
NO COPY: R/BWI3_HR.R:2955:5: style: Words within variable and function names should be separated by '_' rather than '.'.
    n.verj.bagr[1,2,i] <- sqrt(vj.bagr$V.R.xy)* A 
    ^~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2955:19: style: Commas should always have a space after.
    n.verj.bagr[1,2,i] <- sqrt(vj.bagr$V.R.xy)* A 
                  ^
NO COPY: R/BWI3_HR.R:2955:21: style: Commas should always have a space after.
    n.verj.bagr[1,2,i] <- sqrt(vj.bagr$V.R.xy)* A 
                    ^
NO COPY: R/BWI3_HR.R:2955:40: style: Words within variable and function names should be separated by '_' rather than '.'.
    n.verj.bagr[1,2,i] <- sqrt(vj.bagr$V.R.xy)* A 
                                       ^~~~~~
NO COPY: R/BWI3_HR.R:2955:47: style: Put spaces around all infix operators.
    n.verj.bagr[1,2,i] <- sqrt(vj.bagr$V.R.xy)* A 
                                             ~^
NO COPY: R/BWI3_HR.R:2955:50: style: Trailing whitespace is superfluous.
    n.verj.bagr[1,2,i] <- sqrt(vj.bagr$V.R.xy)* A 
                                                 ^
NO COPY: R/BWI3_HR.R:2957:17: style: Words within variable and function names should be separated by '_' rather than '.'.
    xy <- merge(verj.t.a,xy[TRUE, c("tnr", "n")],by="tnr",all.y=T)
                ^~~~~~~~
NO COPY: R/BWI3_HR.R:2957:26: style: Commas should always have a space after.
    xy <- merge(verj.t.a,xy[TRUE, c("tnr", "n")],by="tnr",all.y=T)
                         ^
NO COPY: R/BWI3_HR.R:2957:50: style: Commas should always have a space after.
    xy <- merge(verj.t.a,xy[TRUE, c("tnr", "n")],by="tnr",all.y=T)
                                                 ^
NO COPY: R/BWI3_HR.R:2957:52: style: Put spaces around all infix operators.
    xy <- merge(verj.t.a,xy[TRUE, c("tnr", "n")],by="tnr",all.y=T)
                                                  ~^~
NO COPY: R/BWI3_HR.R:2957:59: style: Commas should always have a space after.
    xy <- merge(verj.t.a,xy[TRUE, c("tnr", "n")],by="tnr",all.y=T)
                                                          ^
NO COPY: R/BWI3_HR.R:2957:64: style: Put spaces around all infix operators.
    xy <- merge(verj.t.a,xy[TRUE, c("tnr", "n")],by="tnr",all.y=T)
                                                              ~^~
NO COPY: R/BWI3_HR.R:2959:5: style: Words within variable and function names should be separated by '_' rather than '.'.
    vj.proz.bagr <- r.variance.fun(xy[,2:3],length(trakte[,1])) 
    ^~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2959:40: style: Commas should always have a space after.
    vj.proz.bagr <- r.variance.fun(xy[,2:3],length(trakte[,1])) 
                                       ^
NO COPY: R/BWI3_HR.R:2959:45: style: Commas should always have a space after.
    vj.proz.bagr <- r.variance.fun(xy[,2:3],length(trakte[,1])) 
                                            ^
NO COPY: R/BWI3_HR.R:2959:60: style: Commas should always have a space after.
    vj.proz.bagr <- r.variance.fun(xy[,2:3],length(trakte[,1])) 
                                                           ^
NO COPY: R/BWI3_HR.R:2959:64: style: Trailing whitespace is superfluous.
    vj.proz.bagr <- r.variance.fun(xy[,2:3],length(trakte[,1])) 
                                                               ^
NO COPY: R/BWI3_HR.R:2960:5: style: Words within variable and function names should be separated by '_' rather than '.'.
    n.verj.bagr[2,1,i] <- vj.proz.bagr$R.xy * 100        #Prozent        
    ^~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2960:19: style: Commas should always have a space after.
    n.verj.bagr[2,1,i] <- vj.proz.bagr$R.xy * 100        #Prozent        
                  ^
NO COPY: R/BWI3_HR.R:2960:21: style: Commas should always have a space after.
    n.verj.bagr[2,1,i] <- vj.proz.bagr$R.xy * 100        #Prozent        
                    ^
NO COPY: R/BWI3_HR.R:2960:27: style: Words within variable and function names should be separated by '_' rather than '.'.
    n.verj.bagr[2,1,i] <- vj.proz.bagr$R.xy * 100        #Prozent        
                          ^~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2960:66: style: Trailing whitespace is superfluous.
    n.verj.bagr[2,1,i] <- vj.proz.bagr$R.xy * 100        #Prozent        
                                                                 ^~~~~~~~
NO COPY: R/BWI3_HR.R:2961:5: style: Words within variable and function names should be separated by '_' rather than '.'.
    n.verj.bagr[2,2,i] <- sqrt(vj.proz.bagr$V.R.xy)* 100 #Prozent 
    ^~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2961:19: style: Commas should always have a space after.
    n.verj.bagr[2,2,i] <- sqrt(vj.proz.bagr$V.R.xy)* 100 #Prozent 
                  ^
NO COPY: R/BWI3_HR.R:2961:21: style: Commas should always have a space after.
    n.verj.bagr[2,2,i] <- sqrt(vj.proz.bagr$V.R.xy)* 100 #Prozent 
                    ^
NO COPY: R/BWI3_HR.R:2961:32: style: Words within variable and function names should be separated by '_' rather than '.'.
    n.verj.bagr[2,2,i] <- sqrt(vj.proz.bagr$V.R.xy)* 100 #Prozent 
                               ^~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2961:45: style: Words within variable and function names should be separated by '_' rather than '.'.
    n.verj.bagr[2,2,i] <- sqrt(vj.proz.bagr$V.R.xy)* 100 #Prozent 
                                            ^~~~~~
NO COPY: R/BWI3_HR.R:2961:52: style: Put spaces around all infix operators.
    n.verj.bagr[2,2,i] <- sqrt(vj.proz.bagr$V.R.xy)* 100 #Prozent 
                                                  ~^
NO COPY: R/BWI3_HR.R:2961:66: style: Trailing whitespace is superfluous.
    n.verj.bagr[2,2,i] <- sqrt(vj.proz.bagr$V.R.xy)* 100 #Prozent 
                                                                 ^
NO COPY: R/BWI3_HR.R:2963:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: R/BWI3_HR.R:2966:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: R/BWI3_HR.R:2967:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  verj.t.a <- merge(trakte[TRUE, c("tnr", "m")],verj.t.a,by="tnr",all.x=T) 
  ^~~~~~~~
NO COPY: R/BWI3_HR.R:2967:49: style: Commas should always have a space after.
  verj.t.a <- merge(trakte[TRUE, c("tnr", "m")],verj.t.a,by="tnr",all.x=T) 
                                                ^
NO COPY: R/BWI3_HR.R:2967:49: style: Words within variable and function names should be separated by '_' rather than '.'.
  verj.t.a <- merge(trakte[TRUE, c("tnr", "m")],verj.t.a,by="tnr",all.x=T) 
                                                ^~~~~~~~
NO COPY: R/BWI3_HR.R:2967:58: style: Commas should always have a space after.
  verj.t.a <- merge(trakte[TRUE, c("tnr", "m")],verj.t.a,by="tnr",all.x=T) 
                                                         ^
NO COPY: R/BWI3_HR.R:2967:60: style: Put spaces around all infix operators.
  verj.t.a <- merge(trakte[TRUE, c("tnr", "m")],verj.t.a,by="tnr",all.x=T) 
                                                          ~^~
NO COPY: R/BWI3_HR.R:2967:67: style: Commas should always have a space after.
  verj.t.a <- merge(trakte[TRUE, c("tnr", "m")],verj.t.a,by="tnr",all.x=T) 
                                                                  ^
NO COPY: R/BWI3_HR.R:2967:72: style: Put spaces around all infix operators.
  verj.t.a <- merge(trakte[TRUE, c("tnr", "m")],verj.t.a,by="tnr",all.x=T) 
                                                                      ~^~
NO COPY: R/BWI3_HR.R:2967:75: style: Trailing whitespace is superfluous.
  verj.t.a <- merge(trakte[TRUE, c("tnr", "m")],verj.t.a,by="tnr",all.x=T) 
                                                                          ^
NO COPY: R/BWI3_HR.R:2968:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  verj.t.a[is.na(verj.t.a)] <- 0 
  ^~~~~~~~
NO COPY: R/BWI3_HR.R:2968:18: style: Words within variable and function names should be separated by '_' rather than '.'.
  verj.t.a[is.na(verj.t.a)] <- 0 
                 ^~~~~~~~
NO COPY: R/BWI3_HR.R:2968:33: style: Trailing whitespace is superfluous.
  verj.t.a[is.na(verj.t.a)] <- 0 
                                ^
NO COPY: R/BWI3_HR.R:2969:34: style: Words within variable and function names should be separated by '_' rather than '.'.
  r.list <- r.variance.fun(cbind(verj.t.a$m,verj.t.a$n.ges),length(trakte[,1]))
                                 ^~~~~~~~
NO COPY: R/BWI3_HR.R:2969:45: style: Commas should always have a space after.
  r.list <- r.variance.fun(cbind(verj.t.a$m,verj.t.a$n.ges),length(trakte[,1]))
                                            ^
NO COPY: R/BWI3_HR.R:2969:45: style: Words within variable and function names should be separated by '_' rather than '.'.
  r.list <- r.variance.fun(cbind(verj.t.a$m,verj.t.a$n.ges),length(trakte[,1]))
                                            ^~~~~~~~
NO COPY: R/BWI3_HR.R:2969:61: style: Commas should always have a space after.
  r.list <- r.variance.fun(cbind(verj.t.a$m,verj.t.a$n.ges),length(trakte[,1]))
                                                            ^
NO COPY: R/BWI3_HR.R:2969:76: style: Commas should always have a space after.
  r.list <- r.variance.fun(cbind(verj.t.a$m,verj.t.a$n.ges),length(trakte[,1]))
                                                                           ^
NO COPY: R/BWI3_HR.R:2970:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  n.verj.bagr[1,1,(n.bagr+1)] <- r.list$R.xy*A
  ^~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2970:17: style: Commas should always have a space after.
  n.verj.bagr[1,1,(n.bagr+1)] <- r.list$R.xy*A
                ^
NO COPY: R/BWI3_HR.R:2970:19: style: Commas should always have a space after.
  n.verj.bagr[1,1,(n.bagr+1)] <- r.list$R.xy*A
                  ^
NO COPY: R/BWI3_HR.R:2970:19: style: Place a space before left parenthesis, except in a function call.
  n.verj.bagr[1,1,(n.bagr+1)] <- r.list$R.xy*A
                  ^
NO COPY: R/BWI3_HR.R:2970:26: style: Put spaces around all infix operators.
  n.verj.bagr[1,1,(n.bagr+1)] <- r.list$R.xy*A
                        ~^~
NO COPY: R/BWI3_HR.R:2970:45: style: Put spaces around all infix operators.
  n.verj.bagr[1,1,(n.bagr+1)] <- r.list$R.xy*A
                                           ~^~
NO COPY: R/BWI3_HR.R:2971:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  n.verj.bagr[1,2,(n.bagr+1)] <- sqrt(r.list$V.R.xy)*A
  ^~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2971:17: style: Commas should always have a space after.
  n.verj.bagr[1,2,(n.bagr+1)] <- sqrt(r.list$V.R.xy)*A
                ^
NO COPY: R/BWI3_HR.R:2971:19: style: Commas should always have a space after.
  n.verj.bagr[1,2,(n.bagr+1)] <- sqrt(r.list$V.R.xy)*A
                  ^
NO COPY: R/BWI3_HR.R:2971:19: style: Place a space before left parenthesis, except in a function call.
  n.verj.bagr[1,2,(n.bagr+1)] <- sqrt(r.list$V.R.xy)*A
                  ^
NO COPY: R/BWI3_HR.R:2971:26: style: Put spaces around all infix operators.
  n.verj.bagr[1,2,(n.bagr+1)] <- sqrt(r.list$V.R.xy)*A
                        ~^~
NO COPY: R/BWI3_HR.R:2971:46: style: Words within variable and function names should be separated by '_' rather than '.'.
  n.verj.bagr[1,2,(n.bagr+1)] <- sqrt(r.list$V.R.xy)*A
                                             ^~~~~~
NO COPY: R/BWI3_HR.R:2971:53: style: Put spaces around all infix operators.
  n.verj.bagr[1,2,(n.bagr+1)] <- sqrt(r.list$V.R.xy)*A
                                                   ~^~
NO COPY: R/BWI3_HR.R:2973:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  n.verj.bagr[2,1,(n.bagr+1)] <- 100 #Prozent        
  ^~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2973:17: style: Commas should always have a space after.
  n.verj.bagr[2,1,(n.bagr+1)] <- 100 #Prozent        
                ^
NO COPY: R/BWI3_HR.R:2973:19: style: Commas should always have a space after.
  n.verj.bagr[2,1,(n.bagr+1)] <- 100 #Prozent        
                  ^
NO COPY: R/BWI3_HR.R:2973:19: style: Place a space before left parenthesis, except in a function call.
  n.verj.bagr[2,1,(n.bagr+1)] <- 100 #Prozent        
                  ^
NO COPY: R/BWI3_HR.R:2973:26: style: Put spaces around all infix operators.
  n.verj.bagr[2,1,(n.bagr+1)] <- 100 #Prozent        
                        ~^~
NO COPY: R/BWI3_HR.R:2973:46: style: Trailing whitespace is superfluous.
  n.verj.bagr[2,1,(n.bagr+1)] <- 100 #Prozent        
                                             ^~~~~~~~
NO COPY: R/BWI3_HR.R:2974:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  n.verj.bagr[2,2,(n.bagr+1)] <- 0   #Prozent 
  ^~~~~~~~~~~
NO COPY: R/BWI3_HR.R:2974:17: style: Commas should always have a space after.
  n.verj.bagr[2,2,(n.bagr+1)] <- 0   #Prozent 
                ^
NO COPY: R/BWI3_HR.R:2974:19: style: Commas should always have a space after.
  n.verj.bagr[2,2,(n.bagr+1)] <- 0   #Prozent 
                  ^
NO COPY: R/BWI3_HR.R:2974:19: style: Place a space before left parenthesis, except in a function call.
  n.verj.bagr[2,2,(n.bagr+1)] <- 0   #Prozent 
                  ^
NO COPY: R/BWI3_HR.R:2974:26: style: Put spaces around all infix operators.
  n.verj.bagr[2,2,(n.bagr+1)] <- 0   #Prozent 
                        ~^~
NO COPY: R/BWI3_HR.R:2974:46: style: Trailing whitespace is superfluous.
  n.verj.bagr[2,2,(n.bagr+1)] <- 0   #Prozent 
                                             ^
NO COPY: R/BWI3_HR.R:2975:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: R/BWI3_HR.R:2976:20: style: Put spaces around all infix operators.
  Log <- list(Datum=Sys.time())
                  ~^~
NO COPY: R/BWI3_HR.R:2978:18: style: Put spaces around all infix operators.
  return(list(Log=Log, Stratum=auswahl, HBF=T.hbf, se.HBF=se.T.hbf,
                ~^~
NO COPY: R/BWI3_HR.R:2978:31: style: Put spaces around all infix operators.
  return(list(Log=Log, Stratum=auswahl, HBF=T.hbf, se.HBF=se.T.hbf,
                             ~^~
NO COPY: R/BWI3_HR.R:2978:44: style: Put spaces around all infix operators.
  return(list(Log=Log, Stratum=auswahl, HBF=T.hbf, se.HBF=se.T.hbf,
                                          ~^~
NO COPY: R/BWI3_HR.R:2978:58: style: Put spaces around all infix operators.
  return(list(Log=Log, Stratum=auswahl, HBF=T.hbf, se.HBF=se.T.hbf,
                                                        ~^~
NO COPY: R/BWI3_HR.R:2978:59: style: Words within variable and function names should be separated by '_' rather than '.'.
  return(list(Log=Log, Stratum=auswahl, HBF=T.hbf, se.HBF=se.T.hbf,
                                                          ^~~~~~~~
NO COPY: R/BWI3_HR.R:2979:19: style: Put spaces around all infix operators.
              BAGR=bagr.list,
                 ~^~
NO COPY: R/BWI3_HR.R:2980:27: style: Put spaces around all infix operators.
              n.Verjg.BAGR=n.verj.bagr))
                         ~^~
NO COPY: R/BWI3_HR.R:2980:28: style: Words within variable and function names should be separated by '_' rather than '.'.
              n.Verjg.BAGR=n.verj.bagr))
                           ^~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3011:41: style: Commas should always have a space after.
verjg.kl4.bagr.fun <- function(verj.kl4,ecken,trakte,auswahl,A, 
                                        ^
NO COPY: R/BWI3_HR.R:3011:47: style: Commas should always have a space after.
verjg.kl4.bagr.fun <- function(verj.kl4,ecken,trakte,auswahl,A, 
                                              ^
NO COPY: R/BWI3_HR.R:3011:54: style: Commas should always have a space after.
verjg.kl4.bagr.fun <- function(verj.kl4,ecken,trakte,auswahl,A, 
                                                     ^
NO COPY: R/BWI3_HR.R:3011:62: style: Commas should always have a space after.
verjg.kl4.bagr.fun <- function(verj.kl4,ecken,trakte,auswahl,A, 
                                                             ^
NO COPY: R/BWI3_HR.R:3011:64: style: Trailing whitespace is superfluous.
verjg.kl4.bagr.fun <- function(verj.kl4,ecken,trakte,auswahl,A, 
                                                               ^
NO COPY: R/BWI3_HR.R:3015:34: style: Commas should always have a space after.
  stratum <- stratum.fun(auswahl,ecken)
                                 ^
NO COPY: R/BWI3_HR.R:3020:31: style: Commas should always have a space after.
  y <- stats::aggregate(rep(1,length(stratum[,1])),by=list(stratum$tnr),sum)
                              ^
NO COPY: R/BWI3_HR.R:3020:47: style: Commas should always have a space after.
  y <- stats::aggregate(rep(1,length(stratum[,1])),by=list(stratum$tnr),sum)
                                              ^
NO COPY: R/BWI3_HR.R:3020:52: style: Commas should always have a space after.
  y <- stats::aggregate(rep(1,length(stratum[,1])),by=list(stratum$tnr),sum)
                                                   ^
NO COPY: R/BWI3_HR.R:3020:54: style: Put spaces around all infix operators.
  y <- stats::aggregate(rep(1,length(stratum[,1])),by=list(stratum$tnr),sum)
                                                    ~^~
NO COPY: R/BWI3_HR.R:3020:73: style: Commas should always have a space after.
  y <- stats::aggregate(rep(1,length(stratum[,1])),by=list(stratum$tnr),sum)
                                                                        ^
NO COPY: R/BWI3_HR.R:3021:23: style: Commas should always have a space after.
  names(y) <- c("tnr","y")
                      ^
NO COPY: R/BWI3_HR.R:3023:42: style: Commas should always have a space after.
  y <- merge(trakte[TRUE, c("tnr", "m")],y,by=c("tnr"),all.x=T)
                                         ^
NO COPY: R/BWI3_HR.R:3023:44: style: Commas should always have a space after.
  y <- merge(trakte[TRUE, c("tnr", "m")],y,by=c("tnr"),all.x=T)
                                           ^
NO COPY: R/BWI3_HR.R:3023:46: style: Put spaces around all infix operators.
  y <- merge(trakte[TRUE, c("tnr", "m")],y,by=c("tnr"),all.x=T)
                                            ~^~
NO COPY: R/BWI3_HR.R:3023:56: style: Commas should always have a space after.
  y <- merge(trakte[TRUE, c("tnr", "m")],y,by=c("tnr"),all.x=T)
                                                       ^
NO COPY: R/BWI3_HR.R:3023:61: style: Put spaces around all infix operators.
  y <- merge(trakte[TRUE, c("tnr", "m")],y,by=c("tnr"),all.x=T)
                                                           ~^~
NO COPY: R/BWI3_HR.R:3025:31: style: Commas should always have a space after.
  r.list <- r.variance.fun(y[,2:3],length(trakte[,1]))
                              ^
NO COPY: R/BWI3_HR.R:3025:36: style: Commas should always have a space after.
  r.list <- r.variance.fun(y[,2:3],length(trakte[,1]))
                                   ^
NO COPY: R/BWI3_HR.R:3025:51: style: Commas should always have a space after.
  r.list <- r.variance.fun(y[,2:3],length(trakte[,1]))
                                                  ^
NO COPY: R/BWI3_HR.R:3026:23: style: Put spaces around all infix operators.
  T.hbf <- r.list$R.xy*A
                     ~^~
NO COPY: R/BWI3_HR.R:3027:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  se.T.hbf <- sqrt(r.list$V.R.xy)*A
  ^~~~~~~~
NO COPY: R/BWI3_HR.R:3027:27: style: Words within variable and function names should be separated by '_' rather than '.'.
  se.T.hbf <- sqrt(r.list$V.R.xy)*A
                          ^~~~~~
NO COPY: R/BWI3_HR.R:3027:34: style: Put spaces around all infix operators.
  se.T.hbf <- sqrt(r.list$V.R.xy)*A
                                ~^~
NO COPY: R/BWI3_HR.R:3028:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: R/BWI3_HR.R:3031:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: R/BWI3_HR.R:3033:4: style: Commented code should be removed.
  #BAF = Deckungsgrad (Zehntel) * Anteil (Zehntel)/100
   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3034:30: style: Put spaces around all infix operators.
  verj.kl4$baf <- verj.kl4$dg*verj.kl4$anteil/100
                            ~^~
NO COPY: R/BWI3_HR.R:3034:46: style: Put spaces around all infix operators.
  verj.kl4$baf <- verj.kl4$dg*verj.kl4$anteil/100
                                            ~^~
NO COPY: R/BWI3_HR.R:3035:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: R/BWI3_HR.R:3037:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  verj.kl4.s <- 
  ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:3037:16: style: Trailing whitespace is superfluous.
  verj.kl4.s <- 
               ^
NO COPY: R/BWI3_HR.R:3038:58: style: Commas should always have a space after.
          merge(verj.kl4, stratum[TRUE, c("tnr", "enr")],by=c("tnr","enr"))
                                                         ^
NO COPY: R/BWI3_HR.R:3038:60: style: Put spaces around all infix operators.
          merge(verj.kl4, stratum[TRUE, c("tnr", "enr")],by=c("tnr","enr"))
                                                          ~^~
NO COPY: R/BWI3_HR.R:3038:69: style: Commas should always have a space after.
          merge(verj.kl4, stratum[TRUE, c("tnr", "enr")],by=c("tnr","enr"))
                                                                    ^
NO COPY: R/BWI3_HR.R:3039:1: style: Trailing whitespace is superfluous.
   
^~~
NO COPY: R/BWI3_HR.R:3041:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  verj.kl4.s <- merge(verj.kl4.s,bacode[TRUE, c("ICode", "BaGr")],by.x="ba",
  ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:3041:23: style: Words within variable and function names should be separated by '_' rather than '.'.
  verj.kl4.s <- merge(verj.kl4.s,bacode[TRUE, c("ICode", "BaGr")],by.x="ba",
                      ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:3041:34: style: Commas should always have a space after.
  verj.kl4.s <- merge(verj.kl4.s,bacode[TRUE, c("ICode", "BaGr")],by.x="ba",
                                 ^
NO COPY: R/BWI3_HR.R:3041:67: style: Commas should always have a space after.
  verj.kl4.s <- merge(verj.kl4.s,bacode[TRUE, c("ICode", "BaGr")],by.x="ba",
                                                                  ^
NO COPY: R/BWI3_HR.R:3041:71: style: Put spaces around all infix operators.
  verj.kl4.s <- merge(verj.kl4.s,bacode[TRUE, c("ICode", "BaGr")],by.x="ba",
                                                                     ~^~
NO COPY: R/BWI3_HR.R:3042:27: style: Put spaces around all infix operators.
                      by.y="ICode",all.x=T)
                         ~^~
NO COPY: R/BWI3_HR.R:3042:36: style: Commas should always have a space after.
                      by.y="ICode",all.x=T)
                                   ^
NO COPY: R/BWI3_HR.R:3042:41: style: Put spaces around all infix operators.
                      by.y="ICode",all.x=T)
                                       ~^~
NO COPY: R/BWI3_HR.R:3043:9: style: Words within variable and function names should be separated by '_' rather than '.'.
  names(verj.kl4.s)[11] <- "bagr"
        ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:3045:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  vj.kl4.t <- stats::aggregate(verj.kl4.s$baf,
  ^~~~~~~~
NO COPY: R/BWI3_HR.R:3045:32: style: Words within variable and function names should be separated by '_' rather than '.'.
  vj.kl4.t <- stats::aggregate(verj.kl4.s$baf,
                               ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:3046:23: style: Put spaces around all infix operators.
                    by=list(verj.kl4.s$tnr,verj.kl4.s$bagr,verj.kl4.s$vjgart),
                     ~^~
NO COPY: R/BWI3_HR.R:3046:29: style: Words within variable and function names should be separated by '_' rather than '.'.
                    by=list(verj.kl4.s$tnr,verj.kl4.s$bagr,verj.kl4.s$vjgart),
                            ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:3046:44: style: Commas should always have a space after.
                    by=list(verj.kl4.s$tnr,verj.kl4.s$bagr,verj.kl4.s$vjgart),
                                           ^
NO COPY: R/BWI3_HR.R:3046:44: style: Words within variable and function names should be separated by '_' rather than '.'.
                    by=list(verj.kl4.s$tnr,verj.kl4.s$bagr,verj.kl4.s$vjgart),
                                           ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:3046:60: style: Commas should always have a space after.
                    by=list(verj.kl4.s$tnr,verj.kl4.s$bagr,verj.kl4.s$vjgart),
                                                           ^
NO COPY: R/BWI3_HR.R:3046:60: style: Words within variable and function names should be separated by '_' rather than '.'.
                    by=list(verj.kl4.s$tnr,verj.kl4.s$bagr,verj.kl4.s$vjgart),
                                                           ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:3048:9: style: Words within variable and function names should be separated by '_' rather than '.'.
  names(vj.kl4.t) <- c("tnr","bagr","vart","baf")
        ^~~~~~~~
NO COPY: R/BWI3_HR.R:3048:30: style: Commas should always have a space after.
  names(vj.kl4.t) <- c("tnr","bagr","vart","baf")
                             ^
NO COPY: R/BWI3_HR.R:3048:37: style: Commas should always have a space after.
  names(vj.kl4.t) <- c("tnr","bagr","vart","baf")
                                    ^
NO COPY: R/BWI3_HR.R:3048:44: style: Commas should always have a space after.
  names(vj.kl4.t) <- c("tnr","bagr","vart","baf")
                                           ^
NO COPY: R/BWI3_HR.R:3049:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: R/BWI3_HR.R:3051:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: R/BWI3_HR.R:3052:23: style: Commas should always have a space after.
  bagr.list <- c("FI","TA","DGL","KI","LAE","BU","EI","ALH","ALN")
                      ^
NO COPY: R/BWI3_HR.R:3052:28: style: Commas should always have a space after.
  bagr.list <- c("FI","TA","DGL","KI","LAE","BU","EI","ALH","ALN")
                           ^
NO COPY: R/BWI3_HR.R:3052:34: style: Commas should always have a space after.
  bagr.list <- c("FI","TA","DGL","KI","LAE","BU","EI","ALH","ALN")
                                 ^
NO COPY: R/BWI3_HR.R:3052:39: style: Commas should always have a space after.
  bagr.list <- c("FI","TA","DGL","KI","LAE","BU","EI","ALH","ALN")
                                      ^
NO COPY: R/BWI3_HR.R:3052:45: style: Commas should always have a space after.
  bagr.list <- c("FI","TA","DGL","KI","LAE","BU","EI","ALH","ALN")
                                            ^
NO COPY: R/BWI3_HR.R:3052:50: style: Commas should always have a space after.
  bagr.list <- c("FI","TA","DGL","KI","LAE","BU","EI","ALH","ALN")
                                                 ^
NO COPY: R/BWI3_HR.R:3052:55: style: Commas should always have a space after.
  bagr.list <- c("FI","TA","DGL","KI","LAE","BU","EI","ALH","ALN")
                                                      ^
NO COPY: R/BWI3_HR.R:3052:61: style: Commas should always have a space after.
  bagr.list <- c("FI","TA","DGL","KI","LAE","BU","EI","ALH","ALN")
                                                            ^
NO COPY: R/BWI3_HR.R:3054:1: style: lines should not be more than 80 characters.
    c("Naturverj\u00fcngung","Pflanzung","Saat","Stockausschlag","nicht zuzuordnen")
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3054:30: style: Commas should always have a space after.
    c("Naturverj\u00fcngung","Pflanzung","Saat","Stockausschlag","nicht zuzuordnen")
                             ^
NO COPY: R/BWI3_HR.R:3054:42: style: Commas should always have a space after.
    c("Naturverj\u00fcngung","Pflanzung","Saat","Stockausschlag","nicht zuzuordnen")
                                         ^
NO COPY: R/BWI3_HR.R:3054:49: style: Commas should always have a space after.
    c("Naturverj\u00fcngung","Pflanzung","Saat","Stockausschlag","nicht zuzuordnen")
                                                ^
NO COPY: R/BWI3_HR.R:3054:66: style: Commas should always have a space after.
    c("Naturverj\u00fcngung","Pflanzung","Saat","Stockausschlag","nicht zuzuordnen")
                                                                 ^
NO COPY: R/BWI3_HR.R:3057:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: R/BWI3_HR.R:3059:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  vj.kl4.baf.bagr.vart <- array(dim=c(2,(n.vart+1),(n.bagr+1)))
  ^~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3059:36: style: Put spaces around all infix operators.
  vj.kl4.baf.bagr.vart <- array(dim=c(2,(n.vart+1),(n.bagr+1)))
                                  ~^~
NO COPY: R/BWI3_HR.R:3059:41: style: Commas should always have a space after.
  vj.kl4.baf.bagr.vart <- array(dim=c(2,(n.vart+1),(n.bagr+1)))
                                        ^
NO COPY: R/BWI3_HR.R:3059:41: style: Place a space before left parenthesis, except in a function call.
  vj.kl4.baf.bagr.vart <- array(dim=c(2,(n.vart+1),(n.bagr+1)))
                                        ^
NO COPY: R/BWI3_HR.R:3059:48: style: Put spaces around all infix operators.
  vj.kl4.baf.bagr.vart <- array(dim=c(2,(n.vart+1),(n.bagr+1)))
                                              ~^~
NO COPY: R/BWI3_HR.R:3059:52: style: Commas should always have a space after.
  vj.kl4.baf.bagr.vart <- array(dim=c(2,(n.vart+1),(n.bagr+1)))
                                                   ^
NO COPY: R/BWI3_HR.R:3059:52: style: Place a space before left parenthesis, except in a function call.
  vj.kl4.baf.bagr.vart <- array(dim=c(2,(n.vart+1),(n.bagr+1)))
                                                   ^
NO COPY: R/BWI3_HR.R:3059:59: style: Put spaces around all infix operators.
  vj.kl4.baf.bagr.vart <- array(dim=c(2,(n.vart+1),(n.bagr+1)))
                                                         ~^~
NO COPY: R/BWI3_HR.R:3060:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: R/BWI3_HR.R:3062:3: style: Opening curly braces should never go on their own line and should always be followed by a new line.
  {
  ^
NO COPY: R/BWI3_HR.R:3064:5: style: Words within variable and function names should be separated by '_' rather than '.'.
    vj.kl4.t.bagr <- vj.kl4.t[vj.kl4.t[["bagr"]]==bagr.list[i], TRUE]
    ^~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3064:22: style: Words within variable and function names should be separated by '_' rather than '.'.
    vj.kl4.t.bagr <- vj.kl4.t[vj.kl4.t[["bagr"]]==bagr.list[i], TRUE]
                     ^~~~~~~~
NO COPY: R/BWI3_HR.R:3064:31: style: Words within variable and function names should be separated by '_' rather than '.'.
    vj.kl4.t.bagr <- vj.kl4.t[vj.kl4.t[["bagr"]]==bagr.list[i], TRUE]
                              ^~~~~~~~
NO COPY: R/BWI3_HR.R:3064:49: style: Put spaces around all infix operators.
    vj.kl4.t.bagr <- vj.kl4.t[vj.kl4.t[["bagr"]]==bagr.list[i], TRUE]
                                               ~^~~
NO COPY: R/BWI3_HR.R:3067:5: style: Opening curly braces should never go on their own line and should always be followed by a new line.
    {
    ^
NO COPY: R/BWI3_HR.R:3068:7: style: Words within variable and function names should be separated by '_' rather than '.'.
      vj.kl4.t.vart <- vj.kl4.t.bagr[vj.kl4.t.bagr[["vart"]] == vart.list[j], 
      ^~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3068:24: style: Words within variable and function names should be separated by '_' rather than '.'.
      vj.kl4.t.vart <- vj.kl4.t.bagr[vj.kl4.t.bagr[["vart"]] == vart.list[j], 
                       ^~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3068:38: style: Words within variable and function names should be separated by '_' rather than '.'.
      vj.kl4.t.vart <- vj.kl4.t.bagr[vj.kl4.t.bagr[["vart"]] == vart.list[j], 
                                     ^~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3068:78: style: Trailing whitespace is superfluous.
      vj.kl4.t.vart <- vj.kl4.t.bagr[vj.kl4.t.bagr[["vart"]] == vart.list[j], 
                                                                             ^
NO COPY: R/BWI3_HR.R:3070:47: style: Commas should always have a space after.
      xy <- merge(trakte[TRUE, c("tnr", "m")],vj.kl4.t.vart,by="tnr",all.x=T)
                                              ^
NO COPY: R/BWI3_HR.R:3070:47: style: Words within variable and function names should be separated by '_' rather than '.'.
      xy <- merge(trakte[TRUE, c("tnr", "m")],vj.kl4.t.vart,by="tnr",all.x=T)
                                              ^~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3070:61: style: Commas should always have a space after.
      xy <- merge(trakte[TRUE, c("tnr", "m")],vj.kl4.t.vart,by="tnr",all.x=T)
                                                            ^
NO COPY: R/BWI3_HR.R:3070:63: style: Put spaces around all infix operators.
      xy <- merge(trakte[TRUE, c("tnr", "m")],vj.kl4.t.vart,by="tnr",all.x=T)
                                                             ~^~
NO COPY: R/BWI3_HR.R:3070:70: style: Commas should always have a space after.
      xy <- merge(trakte[TRUE, c("tnr", "m")],vj.kl4.t.vart,by="tnr",all.x=T)
                                                                     ^
NO COPY: R/BWI3_HR.R:3070:75: style: Put spaces around all infix operators.
      xy <- merge(trakte[TRUE, c("tnr", "m")],vj.kl4.t.vart,by="tnr",all.x=T)
                                                                         ~^~
NO COPY: R/BWI3_HR.R:3072:36: style: Commas should always have a space after.
      r.list <- r.variance.fun(xy[,2:3],length(trakte[,1]))
                                   ^
NO COPY: R/BWI3_HR.R:3072:41: style: Commas should always have a space after.
      r.list <- r.variance.fun(xy[,2:3],length(trakte[,1]))
                                        ^
NO COPY: R/BWI3_HR.R:3072:56: style: Commas should always have a space after.
      r.list <- r.variance.fun(xy[,2:3],length(trakte[,1]))
                                                       ^
NO COPY: R/BWI3_HR.R:3073:7: style: Words within variable and function names should be separated by '_' rather than '.'.
      vj.kl4.baf.bagr.vart[1,j,i] <- r.list$R.xy * A
      ^~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3073:30: style: Commas should always have a space after.
      vj.kl4.baf.bagr.vart[1,j,i] <- r.list$R.xy * A
                             ^
NO COPY: R/BWI3_HR.R:3073:32: style: Commas should always have a space after.
      vj.kl4.baf.bagr.vart[1,j,i] <- r.list$R.xy * A
                               ^
NO COPY: R/BWI3_HR.R:3074:7: style: Words within variable and function names should be separated by '_' rather than '.'.
      vj.kl4.baf.bagr.vart[2,j,i] <- sqrt(r.list$V.R.xy) * A
      ^~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3074:30: style: Commas should always have a space after.
      vj.kl4.baf.bagr.vart[2,j,i] <- sqrt(r.list$V.R.xy) * A
                             ^
NO COPY: R/BWI3_HR.R:3074:32: style: Commas should always have a space after.
      vj.kl4.baf.bagr.vart[2,j,i] <- sqrt(r.list$V.R.xy) * A
                               ^
NO COPY: R/BWI3_HR.R:3074:50: style: Words within variable and function names should be separated by '_' rather than '.'.
      vj.kl4.baf.bagr.vart[2,j,i] <- sqrt(r.list$V.R.xy) * A
                                                 ^~~~~~
NO COPY: R/BWI3_HR.R:3075:1: style: Trailing whitespace is superfluous.
      
^~~~~~
NO COPY: R/BWI3_HR.R:3077:7: style: Words within variable and function names should be separated by '_' rather than '.'.
      vj.kl4.t.a <- stats::aggregate(vj.kl4.t$baf[vj.kl4.t$vart==vart.list[j]],
      ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:3077:38: style: Words within variable and function names should be separated by '_' rather than '.'.
      vj.kl4.t.a <- stats::aggregate(vj.kl4.t$baf[vj.kl4.t$vart==vart.list[j]],
                                     ^~~~~~~~
NO COPY: R/BWI3_HR.R:3077:51: style: Words within variable and function names should be separated by '_' rather than '.'.
      vj.kl4.t.a <- stats::aggregate(vj.kl4.t$baf[vj.kl4.t$vart==vart.list[j]],
                                                  ^~~~~~~~
NO COPY: R/BWI3_HR.R:3077:64: style: Put spaces around all infix operators.
      vj.kl4.t.a <- stats::aggregate(vj.kl4.t$baf[vj.kl4.t$vart==vart.list[j]],
                                                              ~^~~
NO COPY: R/BWI3_HR.R:3078:25: style: Put spaces around all infix operators.
                      by=list(vj.kl4.t$tnr[vj.kl4.t$vart==vart.list[j]]),sum)
                       ~^~
NO COPY: R/BWI3_HR.R:3078:31: style: Words within variable and function names should be separated by '_' rather than '.'.
                      by=list(vj.kl4.t$tnr[vj.kl4.t$vart==vart.list[j]]),sum)
                              ^~~~~~~~
NO COPY: R/BWI3_HR.R:3078:44: style: Words within variable and function names should be separated by '_' rather than '.'.
                      by=list(vj.kl4.t$tnr[vj.kl4.t$vart==vart.list[j]]),sum)
                                           ^~~~~~~~
NO COPY: R/BWI3_HR.R:3078:57: style: Put spaces around all infix operators.
                      by=list(vj.kl4.t$tnr[vj.kl4.t$vart==vart.list[j]]),sum)
                                                       ~^~~
NO COPY: R/BWI3_HR.R:3078:74: style: Commas should always have a space after.
                      by=list(vj.kl4.t$tnr[vj.kl4.t$vart==vart.list[j]]),sum)
                                                                         ^
NO COPY: R/BWI3_HR.R:3079:13: style: Words within variable and function names should be separated by '_' rather than '.'.
      names(vj.kl4.t.a) <- c("tnr","baf")
            ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:3079:36: style: Commas should always have a space after.
      names(vj.kl4.t.a) <- c("tnr","baf")
                                   ^
NO COPY: R/BWI3_HR.R:3080:47: style: Commas should always have a space after.
      xy <- merge(trakte[TRUE, c("tnr", "m")],vj.kl4.t.a,by="tnr",all.x=T)
                                              ^
NO COPY: R/BWI3_HR.R:3080:47: style: Words within variable and function names should be separated by '_' rather than '.'.
      xy <- merge(trakte[TRUE, c("tnr", "m")],vj.kl4.t.a,by="tnr",all.x=T)
                                              ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:3080:58: style: Commas should always have a space after.
      xy <- merge(trakte[TRUE, c("tnr", "m")],vj.kl4.t.a,by="tnr",all.x=T)
                                                         ^
NO COPY: R/BWI3_HR.R:3080:60: style: Put spaces around all infix operators.
      xy <- merge(trakte[TRUE, c("tnr", "m")],vj.kl4.t.a,by="tnr",all.x=T)
                                                          ~^~
NO COPY: R/BWI3_HR.R:3080:67: style: Commas should always have a space after.
      xy <- merge(trakte[TRUE, c("tnr", "m")],vj.kl4.t.a,by="tnr",all.x=T)
                                                                  ^
NO COPY: R/BWI3_HR.R:3080:72: style: Put spaces around all infix operators.
      xy <- merge(trakte[TRUE, c("tnr", "m")],vj.kl4.t.a,by="tnr",all.x=T)
                                                                      ~^~
NO COPY: R/BWI3_HR.R:3082:36: style: Commas should always have a space after.
      r.list <- r.variance.fun(xy[,2:3],length(trakte[,1]))
                                   ^
NO COPY: R/BWI3_HR.R:3082:41: style: Commas should always have a space after.
      r.list <- r.variance.fun(xy[,2:3],length(trakte[,1]))
                                        ^
NO COPY: R/BWI3_HR.R:3082:56: style: Commas should always have a space after.
      r.list <- r.variance.fun(xy[,2:3],length(trakte[,1]))
                                                       ^
NO COPY: R/BWI3_HR.R:3083:7: style: Words within variable and function names should be separated by '_' rather than '.'.
      vj.kl4.baf.bagr.vart[1,j,(n.bagr+1)] <- r.list$R.xy * A
      ^~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3083:30: style: Commas should always have a space after.
      vj.kl4.baf.bagr.vart[1,j,(n.bagr+1)] <- r.list$R.xy * A
                             ^
NO COPY: R/BWI3_HR.R:3083:32: style: Commas should always have a space after.
      vj.kl4.baf.bagr.vart[1,j,(n.bagr+1)] <- r.list$R.xy * A
                               ^
NO COPY: R/BWI3_HR.R:3083:32: style: Place a space before left parenthesis, except in a function call.
      vj.kl4.baf.bagr.vart[1,j,(n.bagr+1)] <- r.list$R.xy * A
                               ^
NO COPY: R/BWI3_HR.R:3083:39: style: Put spaces around all infix operators.
      vj.kl4.baf.bagr.vart[1,j,(n.bagr+1)] <- r.list$R.xy * A
                                     ~^~
NO COPY: R/BWI3_HR.R:3084:7: style: Words within variable and function names should be separated by '_' rather than '.'.
      vj.kl4.baf.bagr.vart[2,j,(n.bagr+1)] <- sqrt(r.list$V.R.xy) * A
      ^~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3084:30: style: Commas should always have a space after.
      vj.kl4.baf.bagr.vart[2,j,(n.bagr+1)] <- sqrt(r.list$V.R.xy) * A
                             ^
NO COPY: R/BWI3_HR.R:3084:32: style: Commas should always have a space after.
      vj.kl4.baf.bagr.vart[2,j,(n.bagr+1)] <- sqrt(r.list$V.R.xy) * A
                               ^
NO COPY: R/BWI3_HR.R:3084:32: style: Place a space before left parenthesis, except in a function call.
      vj.kl4.baf.bagr.vart[2,j,(n.bagr+1)] <- sqrt(r.list$V.R.xy) * A
                               ^
NO COPY: R/BWI3_HR.R:3084:39: style: Put spaces around all infix operators.
      vj.kl4.baf.bagr.vart[2,j,(n.bagr+1)] <- sqrt(r.list$V.R.xy) * A
                                     ~^~
NO COPY: R/BWI3_HR.R:3084:59: style: Words within variable and function names should be separated by '_' rather than '.'.
      vj.kl4.baf.bagr.vart[2,j,(n.bagr+1)] <- sqrt(r.list$V.R.xy) * A
                                                          ^~~~~~
NO COPY: R/BWI3_HR.R:3087:1: style: lines should not be more than 80 characters.
    vj.kl4.t.a <- stats::aggregate(vj.kl4.t.bagr$baf,by=list(vj.kl4.t.bagr$tnr),sum)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3087:5: style: Words within variable and function names should be separated by '_' rather than '.'.
    vj.kl4.t.a <- stats::aggregate(vj.kl4.t.bagr$baf,by=list(vj.kl4.t.bagr$tnr),sum)
    ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:3087:36: style: Words within variable and function names should be separated by '_' rather than '.'.
    vj.kl4.t.a <- stats::aggregate(vj.kl4.t.bagr$baf,by=list(vj.kl4.t.bagr$tnr),sum)
                                   ^~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3087:54: style: Commas should always have a space after.
    vj.kl4.t.a <- stats::aggregate(vj.kl4.t.bagr$baf,by=list(vj.kl4.t.bagr$tnr),sum)
                                                     ^
NO COPY: R/BWI3_HR.R:3087:56: style: Put spaces around all infix operators.
    vj.kl4.t.a <- stats::aggregate(vj.kl4.t.bagr$baf,by=list(vj.kl4.t.bagr$tnr),sum)
                                                      ~^~
NO COPY: R/BWI3_HR.R:3087:62: style: Words within variable and function names should be separated by '_' rather than '.'.
    vj.kl4.t.a <- stats::aggregate(vj.kl4.t.bagr$baf,by=list(vj.kl4.t.bagr$tnr),sum)
                                                             ^~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3087:81: style: Commas should always have a space after.
    vj.kl4.t.a <- stats::aggregate(vj.kl4.t.bagr$baf,by=list(vj.kl4.t.bagr$tnr),sum)
                                                                                ^
NO COPY: R/BWI3_HR.R:3088:11: style: Words within variable and function names should be separated by '_' rather than '.'.
    names(vj.kl4.t.a) <- c("tnr","baf")
          ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:3088:34: style: Commas should always have a space after.
    names(vj.kl4.t.a) <- c("tnr","baf")
                                 ^
NO COPY: R/BWI3_HR.R:3089:45: style: Commas should always have a space after.
    xy <- merge(trakte[TRUE, c("tnr", "m")],vj.kl4.t.a,by="tnr",all.x=T)
                                            ^
NO COPY: R/BWI3_HR.R:3089:45: style: Words within variable and function names should be separated by '_' rather than '.'.
    xy <- merge(trakte[TRUE, c("tnr", "m")],vj.kl4.t.a,by="tnr",all.x=T)
                                            ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:3089:56: style: Commas should always have a space after.
    xy <- merge(trakte[TRUE, c("tnr", "m")],vj.kl4.t.a,by="tnr",all.x=T)
                                                       ^
NO COPY: R/BWI3_HR.R:3089:58: style: Put spaces around all infix operators.
    xy <- merge(trakte[TRUE, c("tnr", "m")],vj.kl4.t.a,by="tnr",all.x=T)
                                                        ~^~
NO COPY: R/BWI3_HR.R:3089:65: style: Commas should always have a space after.
    xy <- merge(trakte[TRUE, c("tnr", "m")],vj.kl4.t.a,by="tnr",all.x=T)
                                                                ^
NO COPY: R/BWI3_HR.R:3089:70: style: Put spaces around all infix operators.
    xy <- merge(trakte[TRUE, c("tnr", "m")],vj.kl4.t.a,by="tnr",all.x=T)
                                                                    ~^~
NO COPY: R/BWI3_HR.R:3091:34: style: Commas should always have a space after.
    r.list <- r.variance.fun(xy[,2:3],length(trakte[,1]))
                                 ^
NO COPY: R/BWI3_HR.R:3091:39: style: Commas should always have a space after.
    r.list <- r.variance.fun(xy[,2:3],length(trakte[,1]))
                                      ^
NO COPY: R/BWI3_HR.R:3091:54: style: Commas should always have a space after.
    r.list <- r.variance.fun(xy[,2:3],length(trakte[,1]))
                                                     ^
NO COPY: R/BWI3_HR.R:3092:5: style: Words within variable and function names should be separated by '_' rather than '.'.
    vj.kl4.baf.bagr.vart[1,(n.vart+1),i] <- r.list$R.xy * A
    ^~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3092:28: style: Commas should always have a space after.
    vj.kl4.baf.bagr.vart[1,(n.vart+1),i] <- r.list$R.xy * A
                           ^
NO COPY: R/BWI3_HR.R:3092:28: style: Place a space before left parenthesis, except in a function call.
    vj.kl4.baf.bagr.vart[1,(n.vart+1),i] <- r.list$R.xy * A
                           ^
NO COPY: R/BWI3_HR.R:3092:35: style: Put spaces around all infix operators.
    vj.kl4.baf.bagr.vart[1,(n.vart+1),i] <- r.list$R.xy * A
                                 ~^~
NO COPY: R/BWI3_HR.R:3092:39: style: Commas should always have a space after.
    vj.kl4.baf.bagr.vart[1,(n.vart+1),i] <- r.list$R.xy * A
                                      ^
NO COPY: R/BWI3_HR.R:3093:5: style: Words within variable and function names should be separated by '_' rather than '.'.
    vj.kl4.baf.bagr.vart[2,(n.vart+1),i] <- sqrt(r.list$V.R.xy) * A
    ^~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3093:28: style: Commas should always have a space after.
    vj.kl4.baf.bagr.vart[2,(n.vart+1),i] <- sqrt(r.list$V.R.xy) * A
                           ^
NO COPY: R/BWI3_HR.R:3093:28: style: Place a space before left parenthesis, except in a function call.
    vj.kl4.baf.bagr.vart[2,(n.vart+1),i] <- sqrt(r.list$V.R.xy) * A
                           ^
NO COPY: R/BWI3_HR.R:3093:35: style: Put spaces around all infix operators.
    vj.kl4.baf.bagr.vart[2,(n.vart+1),i] <- sqrt(r.list$V.R.xy) * A
                                 ~^~
NO COPY: R/BWI3_HR.R:3093:39: style: Commas should always have a space after.
    vj.kl4.baf.bagr.vart[2,(n.vart+1),i] <- sqrt(r.list$V.R.xy) * A
                                      ^
NO COPY: R/BWI3_HR.R:3093:57: style: Words within variable and function names should be separated by '_' rather than '.'.
    vj.kl4.baf.bagr.vart[2,(n.vart+1),i] <- sqrt(r.list$V.R.xy) * A
                                                        ^~~~~~
NO COPY: R/BWI3_HR.R:3095:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: R/BWI3_HR.R:3096:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: R/BWI3_HR.R:3098:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  vj.kl4.t.a <- stats::aggregate(vj.kl4.t$baf,by=list(vj.kl4.t$tnr),sum)
  ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:3098:34: style: Words within variable and function names should be separated by '_' rather than '.'.
  vj.kl4.t.a <- stats::aggregate(vj.kl4.t$baf,by=list(vj.kl4.t$tnr),sum)
                                 ^~~~~~~~
NO COPY: R/BWI3_HR.R:3098:47: style: Commas should always have a space after.
  vj.kl4.t.a <- stats::aggregate(vj.kl4.t$baf,by=list(vj.kl4.t$tnr),sum)
                                              ^
NO COPY: R/BWI3_HR.R:3098:49: style: Put spaces around all infix operators.
  vj.kl4.t.a <- stats::aggregate(vj.kl4.t$baf,by=list(vj.kl4.t$tnr),sum)
                                               ~^~
NO COPY: R/BWI3_HR.R:3098:55: style: Words within variable and function names should be separated by '_' rather than '.'.
  vj.kl4.t.a <- stats::aggregate(vj.kl4.t$baf,by=list(vj.kl4.t$tnr),sum)
                                                      ^~~~~~~~
NO COPY: R/BWI3_HR.R:3098:69: style: Commas should always have a space after.
  vj.kl4.t.a <- stats::aggregate(vj.kl4.t$baf,by=list(vj.kl4.t$tnr),sum)
                                                                    ^
NO COPY: R/BWI3_HR.R:3099:9: style: Words within variable and function names should be separated by '_' rather than '.'.
  names(vj.kl4.t.a) <- c("tnr","baf")
        ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:3099:32: style: Commas should always have a space after.
  names(vj.kl4.t.a) <- c("tnr","baf")
                               ^
NO COPY: R/BWI3_HR.R:3100:43: style: Commas should always have a space after.
  xy <- merge(trakte[TRUE, c("tnr", "m")],vj.kl4.t.a,by="tnr",all.x=T)
                                          ^
NO COPY: R/BWI3_HR.R:3100:43: style: Words within variable and function names should be separated by '_' rather than '.'.
  xy <- merge(trakte[TRUE, c("tnr", "m")],vj.kl4.t.a,by="tnr",all.x=T)
                                          ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:3100:54: style: Commas should always have a space after.
  xy <- merge(trakte[TRUE, c("tnr", "m")],vj.kl4.t.a,by="tnr",all.x=T)
                                                     ^
NO COPY: R/BWI3_HR.R:3100:56: style: Put spaces around all infix operators.
  xy <- merge(trakte[TRUE, c("tnr", "m")],vj.kl4.t.a,by="tnr",all.x=T)
                                                      ~^~
NO COPY: R/BWI3_HR.R:3100:63: style: Commas should always have a space after.
  xy <- merge(trakte[TRUE, c("tnr", "m")],vj.kl4.t.a,by="tnr",all.x=T)
                                                              ^
NO COPY: R/BWI3_HR.R:3100:68: style: Put spaces around all infix operators.
  xy <- merge(trakte[TRUE, c("tnr", "m")],vj.kl4.t.a,by="tnr",all.x=T)
                                                                  ~^~
NO COPY: R/BWI3_HR.R:3102:32: style: Commas should always have a space after.
  r.list <- r.variance.fun(xy[,2:3],length(trakte[,1]))
                               ^
NO COPY: R/BWI3_HR.R:3102:37: style: Commas should always have a space after.
  r.list <- r.variance.fun(xy[,2:3],length(trakte[,1]))
                                    ^
NO COPY: R/BWI3_HR.R:3102:52: style: Commas should always have a space after.
  r.list <- r.variance.fun(xy[,2:3],length(trakte[,1]))
                                                   ^
NO COPY: R/BWI3_HR.R:3103:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  vj.kl4.baf.bagr.vart[1,(n.vart+1),(n.bagr+1)] <- r.list$R.xy * A
  ^~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3103:26: style: Commas should always have a space after.
  vj.kl4.baf.bagr.vart[1,(n.vart+1),(n.bagr+1)] <- r.list$R.xy * A
                         ^
NO COPY: R/BWI3_HR.R:3103:26: style: Place a space before left parenthesis, except in a function call.
  vj.kl4.baf.bagr.vart[1,(n.vart+1),(n.bagr+1)] <- r.list$R.xy * A
                         ^
NO COPY: R/BWI3_HR.R:3103:33: style: Put spaces around all infix operators.
  vj.kl4.baf.bagr.vart[1,(n.vart+1),(n.bagr+1)] <- r.list$R.xy * A
                               ~^~
NO COPY: R/BWI3_HR.R:3103:37: style: Commas should always have a space after.
  vj.kl4.baf.bagr.vart[1,(n.vart+1),(n.bagr+1)] <- r.list$R.xy * A
                                    ^
NO COPY: R/BWI3_HR.R:3103:37: style: Place a space before left parenthesis, except in a function call.
  vj.kl4.baf.bagr.vart[1,(n.vart+1),(n.bagr+1)] <- r.list$R.xy * A
                                    ^
NO COPY: R/BWI3_HR.R:3103:44: style: Put spaces around all infix operators.
  vj.kl4.baf.bagr.vart[1,(n.vart+1),(n.bagr+1)] <- r.list$R.xy * A
                                          ~^~
NO COPY: R/BWI3_HR.R:3104:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  vj.kl4.baf.bagr.vart[2,(n.vart+1),(n.bagr+1)] <- sqrt(r.list$V.R.xy) * A
  ^~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3104:26: style: Commas should always have a space after.
  vj.kl4.baf.bagr.vart[2,(n.vart+1),(n.bagr+1)] <- sqrt(r.list$V.R.xy) * A
                         ^
NO COPY: R/BWI3_HR.R:3104:26: style: Place a space before left parenthesis, except in a function call.
  vj.kl4.baf.bagr.vart[2,(n.vart+1),(n.bagr+1)] <- sqrt(r.list$V.R.xy) * A
                         ^
NO COPY: R/BWI3_HR.R:3104:33: style: Put spaces around all infix operators.
  vj.kl4.baf.bagr.vart[2,(n.vart+1),(n.bagr+1)] <- sqrt(r.list$V.R.xy) * A
                               ~^~
NO COPY: R/BWI3_HR.R:3104:37: style: Commas should always have a space after.
  vj.kl4.baf.bagr.vart[2,(n.vart+1),(n.bagr+1)] <- sqrt(r.list$V.R.xy) * A
                                    ^
NO COPY: R/BWI3_HR.R:3104:37: style: Place a space before left parenthesis, except in a function call.
  vj.kl4.baf.bagr.vart[2,(n.vart+1),(n.bagr+1)] <- sqrt(r.list$V.R.xy) * A
                                    ^
NO COPY: R/BWI3_HR.R:3104:44: style: Put spaces around all infix operators.
  vj.kl4.baf.bagr.vart[2,(n.vart+1),(n.bagr+1)] <- sqrt(r.list$V.R.xy) * A
                                          ~^~
NO COPY: R/BWI3_HR.R:3104:64: style: Words within variable and function names should be separated by '_' rather than '.'.
  vj.kl4.baf.bagr.vart[2,(n.vart+1),(n.bagr+1)] <- sqrt(r.list$V.R.xy) * A
                                                               ^~~~~~
NO COPY: R/BWI3_HR.R:3105:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: R/BWI3_HR.R:3107:20: style: Put spaces around all infix operators.
  Log <- list(Datum=Sys.time())
                  ~^~
NO COPY: R/BWI3_HR.R:3109:18: style: Put spaces around all infix operators.
  return(list(Log=Log, Stratum=auswahl, HBF=T.hbf, se.HBF=se.T.hbf,
                ~^~
NO COPY: R/BWI3_HR.R:3109:31: style: Put spaces around all infix operators.
  return(list(Log=Log, Stratum=auswahl, HBF=T.hbf, se.HBF=se.T.hbf,
                             ~^~
NO COPY: R/BWI3_HR.R:3109:44: style: Put spaces around all infix operators.
  return(list(Log=Log, Stratum=auswahl, HBF=T.hbf, se.HBF=se.T.hbf,
                                          ~^~
NO COPY: R/BWI3_HR.R:3109:58: style: Put spaces around all infix operators.
  return(list(Log=Log, Stratum=auswahl, HBF=T.hbf, se.HBF=se.T.hbf,
                                                        ~^~
NO COPY: R/BWI3_HR.R:3109:59: style: Words within variable and function names should be separated by '_' rather than '.'.
  return(list(Log=Log, Stratum=auswahl, HBF=T.hbf, se.HBF=se.T.hbf,
                                                          ^~~~~~~~
NO COPY: R/BWI3_HR.R:3110:19: style: Put spaces around all infix operators.
              BAGR=bagr.list, VjgArt=vart.list,
                 ~^~
NO COPY: R/BWI3_HR.R:3110:37: style: Put spaces around all infix operators.
              BAGR=bagr.list, VjgArt=vart.list,
                                   ~^~
NO COPY: R/BWI3_HR.R:3111:39: style: Put spaces around all infix operators.
              Verjg.kl4m.BAF.VArt.BAGR=vj.kl4.baf.bagr.vart))
                                     ~^~
NO COPY: R/BWI3_HR.R:3111:40: style: Words within variable and function names should be separated by '_' rather than '.'.
              Verjg.kl4m.BAF.VArt.BAGR=vj.kl4.baf.bagr.vart))
                                       ^~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3145:44: style: Commas should always have a space after.
verjg.kl4.bagrupp.fun <- function(verj.kl4,ecken,trakte,ba.grupp,auswahl,A){
                                           ^
NO COPY: R/BWI3_HR.R:3145:50: style: Commas should always have a space after.
verjg.kl4.bagrupp.fun <- function(verj.kl4,ecken,trakte,ba.grupp,auswahl,A){
                                                 ^
NO COPY: R/BWI3_HR.R:3145:57: style: Commas should always have a space after.
verjg.kl4.bagrupp.fun <- function(verj.kl4,ecken,trakte,ba.grupp,auswahl,A){
                                                        ^
NO COPY: R/BWI3_HR.R:3145:66: style: Commas should always have a space after.
verjg.kl4.bagrupp.fun <- function(verj.kl4,ecken,trakte,ba.grupp,auswahl,A){
                                                                 ^
NO COPY: R/BWI3_HR.R:3145:74: style: Commas should always have a space after.
verjg.kl4.bagrupp.fun <- function(verj.kl4,ecken,trakte,ba.grupp,auswahl,A){
                                                                         ^
NO COPY: R/BWI3_HR.R:3147:34: style: Commas should always have a space after.
  stratum <- stratum.fun(auswahl,ecken)
                                 ^
NO COPY: R/BWI3_HR.R:3152:1: style: lines should not be more than 80 characters.
  y <- tryCatch(stats::aggregate(rep(1,length(stratum[,1])),by=list(stratum$tnr),sum),
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3152:40: style: Commas should always have a space after.
  y <- tryCatch(stats::aggregate(rep(1,length(stratum[,1])),by=list(stratum$tnr),sum),
                                       ^
NO COPY: R/BWI3_HR.R:3152:56: style: Commas should always have a space after.
  y <- tryCatch(stats::aggregate(rep(1,length(stratum[,1])),by=list(stratum$tnr),sum),
                                                       ^
NO COPY: R/BWI3_HR.R:3152:61: style: Commas should always have a space after.
  y <- tryCatch(stats::aggregate(rep(1,length(stratum[,1])),by=list(stratum$tnr),sum),
                                                            ^
NO COPY: R/BWI3_HR.R:3152:63: style: Put spaces around all infix operators.
  y <- tryCatch(stats::aggregate(rep(1,length(stratum[,1])),by=list(stratum$tnr),sum),
                                                             ~^~
NO COPY: R/BWI3_HR.R:3152:82: style: Commas should always have a space after.
  y <- tryCatch(stats::aggregate(rep(1,length(stratum[,1])),by=list(stratum$tnr),sum),
                                                                                 ^
NO COPY: R/BWI3_HR.R:3155:23: style: Commas should always have a space after.
  names(y) <- c("tnr","y")
                      ^
NO COPY: R/BWI3_HR.R:3157:42: style: Commas should always have a space after.
  y <- merge(trakte[TRUE, c("tnr", "m")],y,by=c("tnr"),all.x=T)
                                         ^
NO COPY: R/BWI3_HR.R:3157:44: style: Commas should always have a space after.
  y <- merge(trakte[TRUE, c("tnr", "m")],y,by=c("tnr"),all.x=T)
                                           ^
NO COPY: R/BWI3_HR.R:3157:46: style: Put spaces around all infix operators.
  y <- merge(trakte[TRUE, c("tnr", "m")],y,by=c("tnr"),all.x=T)
                                            ~^~
NO COPY: R/BWI3_HR.R:3157:56: style: Commas should always have a space after.
  y <- merge(trakte[TRUE, c("tnr", "m")],y,by=c("tnr"),all.x=T)
                                                       ^
NO COPY: R/BWI3_HR.R:3157:61: style: Put spaces around all infix operators.
  y <- merge(trakte[TRUE, c("tnr", "m")],y,by=c("tnr"),all.x=T)
                                                           ~^~
NO COPY: R/BWI3_HR.R:3159:31: style: Commas should always have a space after.
  r.list <- r.variance.fun(y[,2:3],length(trakte[,1]))
                              ^
NO COPY: R/BWI3_HR.R:3159:36: style: Commas should always have a space after.
  r.list <- r.variance.fun(y[,2:3],length(trakte[,1]))
                                   ^
NO COPY: R/BWI3_HR.R:3159:51: style: Commas should always have a space after.
  r.list <- r.variance.fun(y[,2:3],length(trakte[,1]))
                                                  ^
NO COPY: R/BWI3_HR.R:3160:23: style: Put spaces around all infix operators.
  T.hbf <- r.list$R.xy*A
                     ~^~
NO COPY: R/BWI3_HR.R:3161:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  se.T.hbf <- sqrt(r.list$V.R.xy)*A
  ^~~~~~~~
NO COPY: R/BWI3_HR.R:3161:27: style: Words within variable and function names should be separated by '_' rather than '.'.
  se.T.hbf <- sqrt(r.list$V.R.xy)*A
                          ^~~~~~
NO COPY: R/BWI3_HR.R:3161:34: style: Put spaces around all infix operators.
  se.T.hbf <- sqrt(r.list$V.R.xy)*A
                                ~^~
NO COPY: R/BWI3_HR.R:3162:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: R/BWI3_HR.R:3165:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: R/BWI3_HR.R:3167:4: style: Commented code should be removed.
  #BAF = Deckungsgrad (Zehntel) * Anteil (Zehntel)/100
   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3168:30: style: Put spaces around all infix operators.
  verj.kl4$baf <- verj.kl4$dg*verj.kl4$anteil/100
                            ~^~
NO COPY: R/BWI3_HR.R:3168:46: style: Put spaces around all infix operators.
  verj.kl4$baf <- verj.kl4$dg*verj.kl4$anteil/100
                                            ~^~
NO COPY: R/BWI3_HR.R:3169:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: R/BWI3_HR.R:3171:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  verj.kl4.s <- 
  ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:3171:16: style: Trailing whitespace is superfluous.
  verj.kl4.s <- 
               ^
NO COPY: R/BWI3_HR.R:3172:58: style: Commas should always have a space after.
          merge(verj.kl4, stratum[TRUE, c("tnr", "enr")],by=c("tnr","enr"))
                                                         ^
NO COPY: R/BWI3_HR.R:3172:60: style: Put spaces around all infix operators.
          merge(verj.kl4, stratum[TRUE, c("tnr", "enr")],by=c("tnr","enr"))
                                                          ~^~
NO COPY: R/BWI3_HR.R:3172:69: style: Commas should always have a space after.
          merge(verj.kl4, stratum[TRUE, c("tnr", "enr")],by=c("tnr","enr"))
                                                                    ^
NO COPY: R/BWI3_HR.R:3173:1: style: Trailing whitespace is superfluous.
   
^~~
NO COPY: R/BWI3_HR.R:3180:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  verj.kl4.s <- merge(verj.kl4.s, bagr.tab[TRUE, c("ICode", "BaGr")],
  ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:3180:23: style: Words within variable and function names should be separated by '_' rather than '.'.
  verj.kl4.s <- merge(verj.kl4.s, bagr.tab[TRUE, c("ICode", "BaGr")],
                      ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:3181:39: style: Put spaces around all infix operators.
                                  by.x="ba",by.y="ICode",all.x=T)
                                     ~^~
NO COPY: R/BWI3_HR.R:3181:45: style: Commas should always have a space after.
                                  by.x="ba",by.y="ICode",all.x=T)
                                            ^
NO COPY: R/BWI3_HR.R:3181:49: style: Put spaces around all infix operators.
                                  by.x="ba",by.y="ICode",all.x=T)
                                               ~^~
NO COPY: R/BWI3_HR.R:3181:58: style: Commas should always have a space after.
                                  by.x="ba",by.y="ICode",all.x=T)
                                                         ^
NO COPY: R/BWI3_HR.R:3181:63: style: Put spaces around all infix operators.
                                  by.x="ba",by.y="ICode",all.x=T)
                                                             ~^~
NO COPY: R/BWI3_HR.R:3182:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  verj.kl4.s[is.na(verj.kl4.s)] <- 0
  ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:3182:20: style: Words within variable and function names should be separated by '_' rather than '.'.
  verj.kl4.s[is.na(verj.kl4.s)] <- 0
                   ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:3185:9: style: Words within variable and function names should be separated by '_' rather than '.'.
  names(verj.kl4.s)[11] <- "bagr"
        ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:3186:1: style: Trailing whitespace is superfluous.
    
^~~~
NO COPY: R/BWI3_HR.R:3189:1: style: lines should not be more than 80 characters.
    c("Naturverj\u00fcngung","Pflanzung","Saat","Stockausschlag","nicht zuzuordnen")
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3189:30: style: Commas should always have a space after.
    c("Naturverj\u00fcngung","Pflanzung","Saat","Stockausschlag","nicht zuzuordnen")
                             ^
NO COPY: R/BWI3_HR.R:3189:42: style: Commas should always have a space after.
    c("Naturverj\u00fcngung","Pflanzung","Saat","Stockausschlag","nicht zuzuordnen")
                                         ^
NO COPY: R/BWI3_HR.R:3189:49: style: Commas should always have a space after.
    c("Naturverj\u00fcngung","Pflanzung","Saat","Stockausschlag","nicht zuzuordnen")
                                                ^
NO COPY: R/BWI3_HR.R:3189:66: style: Commas should always have a space after.
    c("Naturverj\u00fcngung","Pflanzung","Saat","Stockausschlag","nicht zuzuordnen")
                                                                 ^
NO COPY: R/BWI3_HR.R:3191:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: R/BWI3_HR.R:3193:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  vj.kl4.t <- tryCatch(stats::aggregate(verj.kl4.s$baf,
  ^~~~~~~~
NO COPY: R/BWI3_HR.R:3193:41: style: Words within variable and function names should be separated by '_' rather than '.'.
  vj.kl4.t <- tryCatch(stats::aggregate(verj.kl4.s$baf,
                                        ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:3194:36: style: Put spaces around all infix operators.
                                 by=list(verj.kl4.s$tnr, verj.kl4.s$bagr,
                                  ~^~
NO COPY: R/BWI3_HR.R:3194:42: style: Words within variable and function names should be separated by '_' rather than '.'.
                                 by=list(verj.kl4.s$tnr, verj.kl4.s$bagr,
                                         ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:3194:58: style: Words within variable and function names should be separated by '_' rather than '.'.
                                 by=list(verj.kl4.s$tnr, verj.kl4.s$bagr,
                                                         ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:3195:42: style: Words within variable and function names should be separated by '_' rather than '.'.
                                         verj.kl4.s$vjgart),
                                         ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:3199:9: style: Words within variable and function names should be separated by '_' rather than '.'.
  names(vj.kl4.t) <- c("tnr","bagr","vart","baf")
        ^~~~~~~~
NO COPY: R/BWI3_HR.R:3199:30: style: Commas should always have a space after.
  names(vj.kl4.t) <- c("tnr","bagr","vart","baf")
                             ^
NO COPY: R/BWI3_HR.R:3199:37: style: Commas should always have a space after.
  names(vj.kl4.t) <- c("tnr","bagr","vart","baf")
                                    ^
NO COPY: R/BWI3_HR.R:3199:44: style: Commas should always have a space after.
  names(vj.kl4.t) <- c("tnr","bagr","vart","baf")
                                           ^
NO COPY: R/BWI3_HR.R:3200:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: R/BWI3_HR.R:3202:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  vj.kl4.baf.bagr.vart <- array(dim=c(2,(n.vart+1),(n.bagr+1)))
  ^~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3202:36: style: Put spaces around all infix operators.
  vj.kl4.baf.bagr.vart <- array(dim=c(2,(n.vart+1),(n.bagr+1)))
                                  ~^~
NO COPY: R/BWI3_HR.R:3202:41: style: Commas should always have a space after.
  vj.kl4.baf.bagr.vart <- array(dim=c(2,(n.vart+1),(n.bagr+1)))
                                        ^
NO COPY: R/BWI3_HR.R:3202:41: style: Place a space before left parenthesis, except in a function call.
  vj.kl4.baf.bagr.vart <- array(dim=c(2,(n.vart+1),(n.bagr+1)))
                                        ^
NO COPY: R/BWI3_HR.R:3202:48: style: Put spaces around all infix operators.
  vj.kl4.baf.bagr.vart <- array(dim=c(2,(n.vart+1),(n.bagr+1)))
                                              ~^~
NO COPY: R/BWI3_HR.R:3202:52: style: Commas should always have a space after.
  vj.kl4.baf.bagr.vart <- array(dim=c(2,(n.vart+1),(n.bagr+1)))
                                                   ^
NO COPY: R/BWI3_HR.R:3202:52: style: Place a space before left parenthesis, except in a function call.
  vj.kl4.baf.bagr.vart <- array(dim=c(2,(n.vart+1),(n.bagr+1)))
                                                   ^
NO COPY: R/BWI3_HR.R:3202:59: style: Put spaces around all infix operators.
  vj.kl4.baf.bagr.vart <- array(dim=c(2,(n.vart+1),(n.bagr+1)))
                                                         ~^~
NO COPY: R/BWI3_HR.R:3203:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: R/BWI3_HR.R:3205:3: style: Opening curly braces should never go on their own line and should always be followed by a new line.
  {
  ^
NO COPY: R/BWI3_HR.R:3207:5: style: Words within variable and function names should be separated by '_' rather than '.'.
    vj.kl4.t.bagr <- vj.kl4.t[vj.kl4.t[["bagr"]] == bagr.list[i], TRUE]
    ^~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3207:22: style: Words within variable and function names should be separated by '_' rather than '.'.
    vj.kl4.t.bagr <- vj.kl4.t[vj.kl4.t[["bagr"]] == bagr.list[i], TRUE]
                     ^~~~~~~~
NO COPY: R/BWI3_HR.R:3207:31: style: Words within variable and function names should be separated by '_' rather than '.'.
    vj.kl4.t.bagr <- vj.kl4.t[vj.kl4.t[["bagr"]] == bagr.list[i], TRUE]
                              ^~~~~~~~
NO COPY: R/BWI3_HR.R:3210:5: style: Opening curly braces should never go on their own line and should always be followed by a new line.
    {
    ^
NO COPY: R/BWI3_HR.R:3211:7: style: Words within variable and function names should be separated by '_' rather than '.'.
      vj.kl4.t.vart <- vj.kl4.t.bagr[vj.kl4.t.bagr[["vart"]] == vart.list[j],
      ^~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3211:24: style: Words within variable and function names should be separated by '_' rather than '.'.
      vj.kl4.t.vart <- vj.kl4.t.bagr[vj.kl4.t.bagr[["vart"]] == vart.list[j],
                       ^~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3211:38: style: Words within variable and function names should be separated by '_' rather than '.'.
      vj.kl4.t.vart <- vj.kl4.t.bagr[vj.kl4.t.bagr[["vart"]] == vart.list[j],
                                     ^~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3213:47: style: Commas should always have a space after.
      xy <- merge(trakte[TRUE, c("tnr", "m")],vj.kl4.t.vart,by="tnr",all.x=T)
                                              ^
NO COPY: R/BWI3_HR.R:3213:47: style: Words within variable and function names should be separated by '_' rather than '.'.
      xy <- merge(trakte[TRUE, c("tnr", "m")],vj.kl4.t.vart,by="tnr",all.x=T)
                                              ^~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3213:61: style: Commas should always have a space after.
      xy <- merge(trakte[TRUE, c("tnr", "m")],vj.kl4.t.vart,by="tnr",all.x=T)
                                                            ^
NO COPY: R/BWI3_HR.R:3213:63: style: Put spaces around all infix operators.
      xy <- merge(trakte[TRUE, c("tnr", "m")],vj.kl4.t.vart,by="tnr",all.x=T)
                                                             ~^~
NO COPY: R/BWI3_HR.R:3213:70: style: Commas should always have a space after.
      xy <- merge(trakte[TRUE, c("tnr", "m")],vj.kl4.t.vart,by="tnr",all.x=T)
                                                                     ^
NO COPY: R/BWI3_HR.R:3213:75: style: Put spaces around all infix operators.
      xy <- merge(trakte[TRUE, c("tnr", "m")],vj.kl4.t.vart,by="tnr",all.x=T)
                                                                         ~^~
NO COPY: R/BWI3_HR.R:3215:36: style: Commas should always have a space after.
      r.list <- r.variance.fun(xy[,2:3],length(trakte[,1]))
                                   ^
NO COPY: R/BWI3_HR.R:3215:41: style: Commas should always have a space after.
      r.list <- r.variance.fun(xy[,2:3],length(trakte[,1]))
                                        ^
NO COPY: R/BWI3_HR.R:3215:56: style: Commas should always have a space after.
      r.list <- r.variance.fun(xy[,2:3],length(trakte[,1]))
                                                       ^
NO COPY: R/BWI3_HR.R:3216:7: style: Words within variable and function names should be separated by '_' rather than '.'.
      vj.kl4.baf.bagr.vart[1,j,i] <- r.list$R.xy * A
      ^~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3216:30: style: Commas should always have a space after.
      vj.kl4.baf.bagr.vart[1,j,i] <- r.list$R.xy * A
                             ^
NO COPY: R/BWI3_HR.R:3216:32: style: Commas should always have a space after.
      vj.kl4.baf.bagr.vart[1,j,i] <- r.list$R.xy * A
                               ^
NO COPY: R/BWI3_HR.R:3217:7: style: Words within variable and function names should be separated by '_' rather than '.'.
      vj.kl4.baf.bagr.vart[2,j,i] <- sqrt(r.list$V.R.xy) * A
      ^~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3217:30: style: Commas should always have a space after.
      vj.kl4.baf.bagr.vart[2,j,i] <- sqrt(r.list$V.R.xy) * A
                             ^
NO COPY: R/BWI3_HR.R:3217:32: style: Commas should always have a space after.
      vj.kl4.baf.bagr.vart[2,j,i] <- sqrt(r.list$V.R.xy) * A
                               ^
NO COPY: R/BWI3_HR.R:3217:50: style: Words within variable and function names should be separated by '_' rather than '.'.
      vj.kl4.baf.bagr.vart[2,j,i] <- sqrt(r.list$V.R.xy) * A
                                                 ^~~~~~
NO COPY: R/BWI3_HR.R:3218:1: style: Trailing whitespace is superfluous.
      
^~~~~~
NO COPY: R/BWI3_HR.R:3220:7: style: Words within variable and function names should be separated by '_' rather than '.'.
      vj.kl4.t.a <- 
      ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:3220:20: style: Trailing whitespace is superfluous.
      vj.kl4.t.a <- 
                   ^
NO COPY: R/BWI3_HR.R:3221:52: style: Words within variable and function names should be separated by '_' rather than '.'.
          tryCatch(stats::aggregate(stats::na.fail(vj.kl4.t$baf[vj.kl4.t$vart ==
                                                   ^~~~~~~~
NO COPY: R/BWI3_HR.R:3221:65: style: Words within variable and function names should be separated by '_' rather than '.'.
          tryCatch(stats::aggregate(stats::na.fail(vj.kl4.t$baf[vj.kl4.t$vart ==
                                                                ^~~~~~~~
NO COPY: R/BWI3_HR.R:3222:53: style: Commas should never have a space before.
                                     vart.list[j]]) ,
                                                   ~^
NO COPY: R/BWI3_HR.R:3223:1: style: lines should not be more than 80 characters.
                             by = list(stats::na.fail(vj.kl4.t$tnr[vj.kl4.t$vart == 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3223:55: style: Words within variable and function names should be separated by '_' rather than '.'.
                             by = list(stats::na.fail(vj.kl4.t$tnr[vj.kl4.t$vart == 
                                                      ^~~~~~~~
NO COPY: R/BWI3_HR.R:3223:68: style: Words within variable and function names should be separated by '_' rather than '.'.
                             by = list(stats::na.fail(vj.kl4.t$tnr[vj.kl4.t$vart == 
                                                                   ^~~~~~~~
NO COPY: R/BWI3_HR.R:3223:84: style: Trailing whitespace is superfluous.
                             by = list(stats::na.fail(vj.kl4.t$tnr[vj.kl4.t$vart == 
                                                                                   ^
NO COPY: R/BWI3_HR.R:3224:56: style: Trailing whitespace is superfluous.
                                       vart.list[j]])), 
                                                       ^
NO COPY: R/BWI3_HR.R:3225:35: style: Trailing whitespace is superfluous.
                             sum), 
                                  ^
NO COPY: R/BWI3_HR.R:3228:13: style: Words within variable and function names should be separated by '_' rather than '.'.
      names(vj.kl4.t.a) <- c("tnr","baf")
            ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:3228:36: style: Commas should always have a space after.
      names(vj.kl4.t.a) <- c("tnr","baf")
                                   ^
NO COPY: R/BWI3_HR.R:3229:47: style: Commas should always have a space after.
      xy <- merge(trakte[TRUE, c("tnr", "m")],vj.kl4.t.a,by="tnr",all.x=T)
                                              ^
NO COPY: R/BWI3_HR.R:3229:47: style: Words within variable and function names should be separated by '_' rather than '.'.
      xy <- merge(trakte[TRUE, c("tnr", "m")],vj.kl4.t.a,by="tnr",all.x=T)
                                              ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:3229:58: style: Commas should always have a space after.
      xy <- merge(trakte[TRUE, c("tnr", "m")],vj.kl4.t.a,by="tnr",all.x=T)
                                                         ^
NO COPY: R/BWI3_HR.R:3229:60: style: Put spaces around all infix operators.
      xy <- merge(trakte[TRUE, c("tnr", "m")],vj.kl4.t.a,by="tnr",all.x=T)
                                                          ~^~
NO COPY: R/BWI3_HR.R:3229:67: style: Commas should always have a space after.
      xy <- merge(trakte[TRUE, c("tnr", "m")],vj.kl4.t.a,by="tnr",all.x=T)
                                                                  ^
NO COPY: R/BWI3_HR.R:3229:72: style: Put spaces around all infix operators.
      xy <- merge(trakte[TRUE, c("tnr", "m")],vj.kl4.t.a,by="tnr",all.x=T)
                                                                      ~^~
NO COPY: R/BWI3_HR.R:3231:36: style: Commas should always have a space after.
      r.list <- r.variance.fun(xy[,2:3],length(trakte[,1]))
                                   ^
NO COPY: R/BWI3_HR.R:3231:41: style: Commas should always have a space after.
      r.list <- r.variance.fun(xy[,2:3],length(trakte[,1]))
                                        ^
NO COPY: R/BWI3_HR.R:3231:56: style: Commas should always have a space after.
      r.list <- r.variance.fun(xy[,2:3],length(trakte[,1]))
                                                       ^
NO COPY: R/BWI3_HR.R:3232:7: style: Words within variable and function names should be separated by '_' rather than '.'.
      vj.kl4.baf.bagr.vart[1,j,(n.bagr+1)] <- r.list$R.xy * A
      ^~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3232:30: style: Commas should always have a space after.
      vj.kl4.baf.bagr.vart[1,j,(n.bagr+1)] <- r.list$R.xy * A
                             ^
NO COPY: R/BWI3_HR.R:3232:32: style: Commas should always have a space after.
      vj.kl4.baf.bagr.vart[1,j,(n.bagr+1)] <- r.list$R.xy * A
                               ^
NO COPY: R/BWI3_HR.R:3232:32: style: Place a space before left parenthesis, except in a function call.
      vj.kl4.baf.bagr.vart[1,j,(n.bagr+1)] <- r.list$R.xy * A
                               ^
NO COPY: R/BWI3_HR.R:3232:39: style: Put spaces around all infix operators.
      vj.kl4.baf.bagr.vart[1,j,(n.bagr+1)] <- r.list$R.xy * A
                                     ~^~
NO COPY: R/BWI3_HR.R:3233:7: style: Words within variable and function names should be separated by '_' rather than '.'.
      vj.kl4.baf.bagr.vart[2,j,(n.bagr+1)] <- sqrt(r.list$V.R.xy) * A
      ^~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3233:30: style: Commas should always have a space after.
      vj.kl4.baf.bagr.vart[2,j,(n.bagr+1)] <- sqrt(r.list$V.R.xy) * A
                             ^
NO COPY: R/BWI3_HR.R:3233:32: style: Commas should always have a space after.
      vj.kl4.baf.bagr.vart[2,j,(n.bagr+1)] <- sqrt(r.list$V.R.xy) * A
                               ^
NO COPY: R/BWI3_HR.R:3233:32: style: Place a space before left parenthesis, except in a function call.
      vj.kl4.baf.bagr.vart[2,j,(n.bagr+1)] <- sqrt(r.list$V.R.xy) * A
                               ^
NO COPY: R/BWI3_HR.R:3233:39: style: Put spaces around all infix operators.
      vj.kl4.baf.bagr.vart[2,j,(n.bagr+1)] <- sqrt(r.list$V.R.xy) * A
                                     ~^~
NO COPY: R/BWI3_HR.R:3233:59: style: Words within variable and function names should be separated by '_' rather than '.'.
      vj.kl4.baf.bagr.vart[2,j,(n.bagr+1)] <- sqrt(r.list$V.R.xy) * A
                                                          ^~~~~~
NO COPY: R/BWI3_HR.R:3236:5: style: Words within variable and function names should be separated by '_' rather than '.'.
    vj.kl4.t.a <-
    ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:3237:1: style: lines should not be more than 80 characters.
        tryCatch(stats::aggregate(vj.kl4.t.bagr$baf,by=list(vj.kl4.t.bagr$tnr),sum),
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3237:35: style: Words within variable and function names should be separated by '_' rather than '.'.
        tryCatch(stats::aggregate(vj.kl4.t.bagr$baf,by=list(vj.kl4.t.bagr$tnr),sum),
                                  ^~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3237:53: style: Commas should always have a space after.
        tryCatch(stats::aggregate(vj.kl4.t.bagr$baf,by=list(vj.kl4.t.bagr$tnr),sum),
                                                    ^
NO COPY: R/BWI3_HR.R:3237:55: style: Put spaces around all infix operators.
        tryCatch(stats::aggregate(vj.kl4.t.bagr$baf,by=list(vj.kl4.t.bagr$tnr),sum),
                                                     ~^~
NO COPY: R/BWI3_HR.R:3237:61: style: Words within variable and function names should be separated by '_' rather than '.'.
        tryCatch(stats::aggregate(vj.kl4.t.bagr$baf,by=list(vj.kl4.t.bagr$tnr),sum),
                                                            ^~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3237:80: style: Commas should always have a space after.
        tryCatch(stats::aggregate(vj.kl4.t.bagr$baf,by=list(vj.kl4.t.bagr$tnr),sum),
                                                                               ^
NO COPY: R/BWI3_HR.R:3240:11: style: Words within variable and function names should be separated by '_' rather than '.'.
    names(vj.kl4.t.a) <- c("tnr","baf")
          ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:3240:34: style: Commas should always have a space after.
    names(vj.kl4.t.a) <- c("tnr","baf")
                                 ^
NO COPY: R/BWI3_HR.R:3241:45: style: Commas should always have a space after.
    xy <- merge(trakte[TRUE, c("tnr", "m")],vj.kl4.t.a,by="tnr",all.x=T)
                                            ^
NO COPY: R/BWI3_HR.R:3241:45: style: Words within variable and function names should be separated by '_' rather than '.'.
    xy <- merge(trakte[TRUE, c("tnr", "m")],vj.kl4.t.a,by="tnr",all.x=T)
                                            ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:3241:56: style: Commas should always have a space after.
    xy <- merge(trakte[TRUE, c("tnr", "m")],vj.kl4.t.a,by="tnr",all.x=T)
                                                       ^
NO COPY: R/BWI3_HR.R:3241:58: style: Put spaces around all infix operators.
    xy <- merge(trakte[TRUE, c("tnr", "m")],vj.kl4.t.a,by="tnr",all.x=T)
                                                        ~^~
NO COPY: R/BWI3_HR.R:3241:65: style: Commas should always have a space after.
    xy <- merge(trakte[TRUE, c("tnr", "m")],vj.kl4.t.a,by="tnr",all.x=T)
                                                                ^
NO COPY: R/BWI3_HR.R:3241:70: style: Put spaces around all infix operators.
    xy <- merge(trakte[TRUE, c("tnr", "m")],vj.kl4.t.a,by="tnr",all.x=T)
                                                                    ~^~
NO COPY: R/BWI3_HR.R:3243:34: style: Commas should always have a space after.
    r.list <- r.variance.fun(xy[,2:3],length(trakte[,1]))
                                 ^
NO COPY: R/BWI3_HR.R:3243:39: style: Commas should always have a space after.
    r.list <- r.variance.fun(xy[,2:3],length(trakte[,1]))
                                      ^
NO COPY: R/BWI3_HR.R:3243:54: style: Commas should always have a space after.
    r.list <- r.variance.fun(xy[,2:3],length(trakte[,1]))
                                                     ^
NO COPY: R/BWI3_HR.R:3244:5: style: Words within variable and function names should be separated by '_' rather than '.'.
    vj.kl4.baf.bagr.vart[1,(n.vart+1),i] <- r.list$R.xy * A
    ^~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3244:28: style: Commas should always have a space after.
    vj.kl4.baf.bagr.vart[1,(n.vart+1),i] <- r.list$R.xy * A
                           ^
NO COPY: R/BWI3_HR.R:3244:28: style: Place a space before left parenthesis, except in a function call.
    vj.kl4.baf.bagr.vart[1,(n.vart+1),i] <- r.list$R.xy * A
                           ^
NO COPY: R/BWI3_HR.R:3244:35: style: Put spaces around all infix operators.
    vj.kl4.baf.bagr.vart[1,(n.vart+1),i] <- r.list$R.xy * A
                                 ~^~
NO COPY: R/BWI3_HR.R:3244:39: style: Commas should always have a space after.
    vj.kl4.baf.bagr.vart[1,(n.vart+1),i] <- r.list$R.xy * A
                                      ^
NO COPY: R/BWI3_HR.R:3245:5: style: Words within variable and function names should be separated by '_' rather than '.'.
    vj.kl4.baf.bagr.vart[2,(n.vart+1),i] <- sqrt(r.list$V.R.xy) * A
    ^~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3245:28: style: Commas should always have a space after.
    vj.kl4.baf.bagr.vart[2,(n.vart+1),i] <- sqrt(r.list$V.R.xy) * A
                           ^
NO COPY: R/BWI3_HR.R:3245:28: style: Place a space before left parenthesis, except in a function call.
    vj.kl4.baf.bagr.vart[2,(n.vart+1),i] <- sqrt(r.list$V.R.xy) * A
                           ^
NO COPY: R/BWI3_HR.R:3245:35: style: Put spaces around all infix operators.
    vj.kl4.baf.bagr.vart[2,(n.vart+1),i] <- sqrt(r.list$V.R.xy) * A
                                 ~^~
NO COPY: R/BWI3_HR.R:3245:39: style: Commas should always have a space after.
    vj.kl4.baf.bagr.vart[2,(n.vart+1),i] <- sqrt(r.list$V.R.xy) * A
                                      ^
NO COPY: R/BWI3_HR.R:3245:57: style: Words within variable and function names should be separated by '_' rather than '.'.
    vj.kl4.baf.bagr.vart[2,(n.vart+1),i] <- sqrt(r.list$V.R.xy) * A
                                                        ^~~~~~
NO COPY: R/BWI3_HR.R:3247:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: R/BWI3_HR.R:3249:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  vj.kl4.t.a <-
  ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:3250:1: style: lines should not be more than 80 characters.
      tryCatch(stats::aggregate(stats::na.fail(vj.kl4.t$baf),by=list(stats::na.fail(vj.kl4.t$tnr)),sum),
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3250:48: style: Words within variable and function names should be separated by '_' rather than '.'.
      tryCatch(stats::aggregate(stats::na.fail(vj.kl4.t$baf),by=list(stats::na.fail(vj.kl4.t$tnr)),sum),
                                               ^~~~~~~~
NO COPY: R/BWI3_HR.R:3250:62: style: Commas should always have a space after.
      tryCatch(stats::aggregate(stats::na.fail(vj.kl4.t$baf),by=list(stats::na.fail(vj.kl4.t$tnr)),sum),
                                                             ^
NO COPY: R/BWI3_HR.R:3250:64: style: Put spaces around all infix operators.
      tryCatch(stats::aggregate(stats::na.fail(vj.kl4.t$baf),by=list(stats::na.fail(vj.kl4.t$tnr)),sum),
                                                              ~^~
NO COPY: R/BWI3_HR.R:3250:85: style: Words within variable and function names should be separated by '_' rather than '.'.
      tryCatch(stats::aggregate(stats::na.fail(vj.kl4.t$baf),by=list(stats::na.fail(vj.kl4.t$tnr)),sum),
                                                                                    ^~~~~~~~
NO COPY: R/BWI3_HR.R:3250:100: style: Commas should always have a space after.
      tryCatch(stats::aggregate(stats::na.fail(vj.kl4.t$baf),by=list(stats::na.fail(vj.kl4.t$tnr)),sum),
                                                                                                   ^
NO COPY: R/BWI3_HR.R:3253:9: style: Words within variable and function names should be separated by '_' rather than '.'.
  names(vj.kl4.t.a) <- c("tnr","baf")
        ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:3253:32: style: Commas should always have a space after.
  names(vj.kl4.t.a) <- c("tnr","baf")
                               ^
NO COPY: R/BWI3_HR.R:3254:43: style: Commas should always have a space after.
  xy <- merge(trakte[TRUE, c("tnr", "m")],vj.kl4.t.a,by="tnr",all.x=T)
                                          ^
NO COPY: R/BWI3_HR.R:3254:43: style: Words within variable and function names should be separated by '_' rather than '.'.
  xy <- merge(trakte[TRUE, c("tnr", "m")],vj.kl4.t.a,by="tnr",all.x=T)
                                          ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:3254:54: style: Commas should always have a space after.
  xy <- merge(trakte[TRUE, c("tnr", "m")],vj.kl4.t.a,by="tnr",all.x=T)
                                                     ^
NO COPY: R/BWI3_HR.R:3254:56: style: Put spaces around all infix operators.
  xy <- merge(trakte[TRUE, c("tnr", "m")],vj.kl4.t.a,by="tnr",all.x=T)
                                                      ~^~
NO COPY: R/BWI3_HR.R:3254:63: style: Commas should always have a space after.
  xy <- merge(trakte[TRUE, c("tnr", "m")],vj.kl4.t.a,by="tnr",all.x=T)
                                                              ^
NO COPY: R/BWI3_HR.R:3254:68: style: Put spaces around all infix operators.
  xy <- merge(trakte[TRUE, c("tnr", "m")],vj.kl4.t.a,by="tnr",all.x=T)
                                                                  ~^~
NO COPY: R/BWI3_HR.R:3256:32: style: Commas should always have a space after.
  r.list <- r.variance.fun(xy[,2:3],length(trakte[,1]))
                               ^
NO COPY: R/BWI3_HR.R:3256:37: style: Commas should always have a space after.
  r.list <- r.variance.fun(xy[,2:3],length(trakte[,1]))
                                    ^
NO COPY: R/BWI3_HR.R:3256:52: style: Commas should always have a space after.
  r.list <- r.variance.fun(xy[,2:3],length(trakte[,1]))
                                                   ^
NO COPY: R/BWI3_HR.R:3257:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  vj.kl4.baf.bagr.vart[1,(n.vart+1),(n.bagr+1)] <- r.list$R.xy * A
  ^~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3257:26: style: Commas should always have a space after.
  vj.kl4.baf.bagr.vart[1,(n.vart+1),(n.bagr+1)] <- r.list$R.xy * A
                         ^
NO COPY: R/BWI3_HR.R:3257:26: style: Place a space before left parenthesis, except in a function call.
  vj.kl4.baf.bagr.vart[1,(n.vart+1),(n.bagr+1)] <- r.list$R.xy * A
                         ^
NO COPY: R/BWI3_HR.R:3257:33: style: Put spaces around all infix operators.
  vj.kl4.baf.bagr.vart[1,(n.vart+1),(n.bagr+1)] <- r.list$R.xy * A
                               ~^~
NO COPY: R/BWI3_HR.R:3257:37: style: Commas should always have a space after.
  vj.kl4.baf.bagr.vart[1,(n.vart+1),(n.bagr+1)] <- r.list$R.xy * A
                                    ^
NO COPY: R/BWI3_HR.R:3257:37: style: Place a space before left parenthesis, except in a function call.
  vj.kl4.baf.bagr.vart[1,(n.vart+1),(n.bagr+1)] <- r.list$R.xy * A
                                    ^
NO COPY: R/BWI3_HR.R:3257:44: style: Put spaces around all infix operators.
  vj.kl4.baf.bagr.vart[1,(n.vart+1),(n.bagr+1)] <- r.list$R.xy * A
                                          ~^~
NO COPY: R/BWI3_HR.R:3258:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  vj.kl4.baf.bagr.vart[2,(n.vart+1),(n.bagr+1)] <- sqrt(r.list$V.R.xy) * A
  ^~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3258:26: style: Commas should always have a space after.
  vj.kl4.baf.bagr.vart[2,(n.vart+1),(n.bagr+1)] <- sqrt(r.list$V.R.xy) * A
                         ^
NO COPY: R/BWI3_HR.R:3258:26: style: Place a space before left parenthesis, except in a function call.
  vj.kl4.baf.bagr.vart[2,(n.vart+1),(n.bagr+1)] <- sqrt(r.list$V.R.xy) * A
                         ^
NO COPY: R/BWI3_HR.R:3258:33: style: Put spaces around all infix operators.
  vj.kl4.baf.bagr.vart[2,(n.vart+1),(n.bagr+1)] <- sqrt(r.list$V.R.xy) * A
                               ~^~
NO COPY: R/BWI3_HR.R:3258:37: style: Commas should always have a space after.
  vj.kl4.baf.bagr.vart[2,(n.vart+1),(n.bagr+1)] <- sqrt(r.list$V.R.xy) * A
                                    ^
NO COPY: R/BWI3_HR.R:3258:37: style: Place a space before left parenthesis, except in a function call.
  vj.kl4.baf.bagr.vart[2,(n.vart+1),(n.bagr+1)] <- sqrt(r.list$V.R.xy) * A
                                    ^
NO COPY: R/BWI3_HR.R:3258:44: style: Put spaces around all infix operators.
  vj.kl4.baf.bagr.vart[2,(n.vart+1),(n.bagr+1)] <- sqrt(r.list$V.R.xy) * A
                                          ~^~
NO COPY: R/BWI3_HR.R:3258:64: style: Words within variable and function names should be separated by '_' rather than '.'.
  vj.kl4.baf.bagr.vart[2,(n.vart+1),(n.bagr+1)] <- sqrt(r.list$V.R.xy) * A
                                                               ^~~~~~
NO COPY: R/BWI3_HR.R:3259:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: R/BWI3_HR.R:3261:20: style: Put spaces around all infix operators.
  Log <- list(Datum=Sys.time())
                  ~^~
NO COPY: R/BWI3_HR.R:3263:18: style: Put spaces around all infix operators.
  return(list(Log=Log, Stratum=auswahl, HBF=T.hbf, se.HBF=se.T.hbf,
                ~^~
NO COPY: R/BWI3_HR.R:3263:31: style: Put spaces around all infix operators.
  return(list(Log=Log, Stratum=auswahl, HBF=T.hbf, se.HBF=se.T.hbf,
                             ~^~
NO COPY: R/BWI3_HR.R:3263:44: style: Put spaces around all infix operators.
  return(list(Log=Log, Stratum=auswahl, HBF=T.hbf, se.HBF=se.T.hbf,
                                          ~^~
NO COPY: R/BWI3_HR.R:3263:58: style: Put spaces around all infix operators.
  return(list(Log=Log, Stratum=auswahl, HBF=T.hbf, se.HBF=se.T.hbf,
                                                        ~^~
NO COPY: R/BWI3_HR.R:3263:59: style: Words within variable and function names should be separated by '_' rather than '.'.
  return(list(Log=Log, Stratum=auswahl, HBF=T.hbf, se.HBF=se.T.hbf,
                                                          ^~~~~~~~
NO COPY: R/BWI3_HR.R:3264:19: style: Put spaces around all infix operators.
              BAGR=bagr.list, VjgArt=vart.list,
                 ~^~
NO COPY: R/BWI3_HR.R:3264:37: style: Put spaces around all infix operators.
              BAGR=bagr.list, VjgArt=vart.list,
                                   ~^~
NO COPY: R/BWI3_HR.R:3265:39: style: Put spaces around all infix operators.
              Verjg.kl4m.BAF.VArt.BAGR=vj.kl4.baf.bagr.vart))
                                     ~^~
NO COPY: R/BWI3_HR.R:3265:40: style: Words within variable and function names should be separated by '_' rather than '.'.
              Verjg.kl4m.BAF.VArt.BAGR=vj.kl4.baf.bagr.vart))
                                       ^~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3296:38: style: Commas should always have a space after.
ntns.stratum.fun <- function(ntns.te,ecken,trakte,A,auswahl,bwi,natwg){
                                     ^
NO COPY: R/BWI3_HR.R:3296:44: style: Commas should always have a space after.
ntns.stratum.fun <- function(ntns.te,ecken,trakte,A,auswahl,bwi,natwg){
                                           ^
NO COPY: R/BWI3_HR.R:3296:51: style: Commas should always have a space after.
ntns.stratum.fun <- function(ntns.te,ecken,trakte,A,auswahl,bwi,natwg){
                                                  ^
NO COPY: R/BWI3_HR.R:3296:53: style: Commas should always have a space after.
ntns.stratum.fun <- function(ntns.te,ecken,trakte,A,auswahl,bwi,natwg){
                                                    ^
NO COPY: R/BWI3_HR.R:3296:61: style: Commas should always have a space after.
ntns.stratum.fun <- function(ntns.te,ecken,trakte,A,auswahl,bwi,natwg){
                                                            ^
NO COPY: R/BWI3_HR.R:3296:65: style: Commas should always have a space after.
ntns.stratum.fun <- function(ntns.te,ecken,trakte,A,auswahl,bwi,natwg){
                                                                ^
NO COPY: R/BWI3_HR.R:3297:34: style: Commas should always have a space after.
  stratum <- stratum.fun(auswahl,ecken)
                                 ^
NO COPY: R/BWI3_HR.R:3298:10: style: Put spaces around all infix operators.
  if (bwi==3){
        ~^~~
NO COPY: R/BWI3_HR.R:3299:1: style: lines should not be more than 80 characters.
    stratum <- merge(stratum,ntns.te[TRUE, c("Tnr", "Enr", "NTNS_F_BaWue_BWI3")],
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3299:30: style: Commas should always have a space after.
    stratum <- merge(stratum,ntns.te[TRUE, c("Tnr", "Enr", "NTNS_F_BaWue_BWI3")],
                             ^
NO COPY: R/BWI3_HR.R:3300:17: style: Put spaces around all infix operators.
            by.x=c("TNr","ENr"),by.y=c("Tnr","Enr"),all.x=T)
               ~^~
NO COPY: R/BWI3_HR.R:3300:26: style: Commas should always have a space after.
            by.x=c("TNr","ENr"),by.y=c("Tnr","Enr"),all.x=T)
                         ^
NO COPY: R/BWI3_HR.R:3300:33: style: Commas should always have a space after.
            by.x=c("TNr","ENr"),by.y=c("Tnr","Enr"),all.x=T)
                                ^
NO COPY: R/BWI3_HR.R:3300:37: style: Put spaces around all infix operators.
            by.x=c("TNr","ENr"),by.y=c("Tnr","Enr"),all.x=T)
                                   ~^~
NO COPY: R/BWI3_HR.R:3300:46: style: Commas should always have a space after.
            by.x=c("TNr","ENr"),by.y=c("Tnr","Enr"),all.x=T)
                                             ^
NO COPY: R/BWI3_HR.R:3300:53: style: Commas should always have a space after.
            by.x=c("TNr","ENr"),by.y=c("Tnr","Enr"),all.x=T)
                                                    ^
NO COPY: R/BWI3_HR.R:3300:58: style: Put spaces around all infix operators.
            by.x=c("TNr","ENr"),by.y=c("Tnr","Enr"),all.x=T)
                                                        ~^~
NO COPY: R/BWI3_HR.R:3301:5: warning: local variable 'NTNS' assigned but may not be used
    NTNS <- "BWI 3"
    ^~~~
NO COPY: R/BWI3_HR.R:3302:9: style: Opening curly braces should never go on their own line and should always be followed by a new line.
  } else{ #BWI 2: Fallunterscheidung nach verwendeten nat. WG
        ^
NO COPY: R/BWI3_HR.R:3303:14: style: Put spaces around all infix operators.
    if (natwg==3){
            ~^~~
NO COPY: R/BWI3_HR.R:3305:39: style: Trailing whitespace is superfluous.
                         ntns.te[TRUE, 
                                      ^
NO COPY: R/BWI3_HR.R:3306:1: style: lines should not be more than 80 characters.
                                 c("Tnr", "Enr", "NTNS_F_BaWue_BWI2_natwgBWI3")],
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3307:19: style: Put spaces around all infix operators.
              by.x=c("TNr","ENr"),by.y=c("Tnr","Enr"),all.x=T)
                 ~^~
NO COPY: R/BWI3_HR.R:3307:28: style: Commas should always have a space after.
              by.x=c("TNr","ENr"),by.y=c("Tnr","Enr"),all.x=T)
                           ^
NO COPY: R/BWI3_HR.R:3307:35: style: Commas should always have a space after.
              by.x=c("TNr","ENr"),by.y=c("Tnr","Enr"),all.x=T)
                                  ^
NO COPY: R/BWI3_HR.R:3307:39: style: Put spaces around all infix operators.
              by.x=c("TNr","ENr"),by.y=c("Tnr","Enr"),all.x=T)
                                     ~^~
NO COPY: R/BWI3_HR.R:3307:48: style: Commas should always have a space after.
              by.x=c("TNr","ENr"),by.y=c("Tnr","Enr"),all.x=T)
                                               ^
NO COPY: R/BWI3_HR.R:3307:55: style: Commas should always have a space after.
              by.x=c("TNr","ENr"),by.y=c("Tnr","Enr"),all.x=T)
                                                      ^
NO COPY: R/BWI3_HR.R:3307:60: style: Put spaces around all infix operators.
              by.x=c("TNr","ENr"),by.y=c("Tnr","Enr"),all.x=T)
                                                          ~^~
NO COPY: R/BWI3_HR.R:3309:13: style: Opening curly braces should never go on their own line and should always be followed by a new line.
      } else{ #Nat. WG der BWI 2
            ^
NO COPY: R/BWI3_HR.R:3312:19: style: Put spaces around all infix operators.
              by.x=c("TNr","ENr"),by.y=c("Tnr","Enr"),all.x=T)
                 ~^~
NO COPY: R/BWI3_HR.R:3312:28: style: Commas should always have a space after.
              by.x=c("TNr","ENr"),by.y=c("Tnr","Enr"),all.x=T)
                           ^
NO COPY: R/BWI3_HR.R:3312:35: style: Commas should always have a space after.
              by.x=c("TNr","ENr"),by.y=c("Tnr","Enr"),all.x=T)
                                  ^
NO COPY: R/BWI3_HR.R:3312:39: style: Put spaces around all infix operators.
              by.x=c("TNr","ENr"),by.y=c("Tnr","Enr"),all.x=T)
                                     ~^~
NO COPY: R/BWI3_HR.R:3312:48: style: Commas should always have a space after.
              by.x=c("TNr","ENr"),by.y=c("Tnr","Enr"),all.x=T)
                                               ^
NO COPY: R/BWI3_HR.R:3312:55: style: Commas should always have a space after.
              by.x=c("TNr","ENr"),by.y=c("Tnr","Enr"),all.x=T)
                                                      ^
NO COPY: R/BWI3_HR.R:3312:60: style: Put spaces around all infix operators.
              by.x=c("TNr","ENr"),by.y=c("Tnr","Enr"),all.x=T)
                                                          ~^~
NO COPY: R/BWI3_HR.R:3318:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  xy.ntns.t <- stats::aggregate(rep(1,length(stratum[,1])),
  ^~~~~~~~~
NO COPY: R/BWI3_HR.R:3318:39: style: Commas should always have a space after.
  xy.ntns.t <- stats::aggregate(rep(1,length(stratum[,1])),
                                      ^
NO COPY: R/BWI3_HR.R:3318:55: style: Commas should always have a space after.
  xy.ntns.t <- stats::aggregate(rep(1,length(stratum[,1])),
                                                      ^
NO COPY: R/BWI3_HR.R:3319:23: style: Put spaces around all infix operators.
                    by=list(stratum$TNr,stratum$ntns),sum)
                     ~^~
NO COPY: R/BWI3_HR.R:3319:41: style: Commas should always have a space after.
                    by=list(stratum$TNr,stratum$ntns),sum)
                                        ^
NO COPY: R/BWI3_HR.R:3319:55: style: Commas should always have a space after.
                    by=list(stratum$TNr,stratum$ntns),sum)
                                                      ^
NO COPY: R/BWI3_HR.R:3320:9: style: Words within variable and function names should be separated by '_' rather than '.'.
  names(xy.ntns.t) <- c("TNr","ntns","n.ntns")
        ^~~~~~~~~
NO COPY: R/BWI3_HR.R:3320:31: style: Commas should always have a space after.
  names(xy.ntns.t) <- c("TNr","ntns","n.ntns")
                              ^
NO COPY: R/BWI3_HR.R:3320:38: style: Commas should always have a space after.
  names(xy.ntns.t) <- c("TNr","ntns","n.ntns")
                                     ^
NO COPY: R/BWI3_HR.R:3322:34: style: Commas should always have a space after.
  xy.t <- stats::aggregate(rep(1,length(stratum[,1])),
                                 ^
NO COPY: R/BWI3_HR.R:3322:50: style: Commas should always have a space after.
  xy.t <- stats::aggregate(rep(1,length(stratum[,1])),
                                                 ^
NO COPY: R/BWI3_HR.R:3323:23: style: Put spaces around all infix operators.
                    by=list(stratum$TNr),sum)
                     ~^~
NO COPY: R/BWI3_HR.R:3323:42: style: Commas should always have a space after.
                    by=list(stratum$TNr),sum)
                                         ^
NO COPY: R/BWI3_HR.R:3324:26: style: Commas should always have a space after.
  names(xy.t) <- c("TNr","n")
                         ^
NO COPY: R/BWI3_HR.R:3330:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: R/BWI3_HR.R:3331:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  ntns.f.ant <- array(dim=c(2,2,6))
  ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:3331:26: style: Put spaces around all infix operators.
  ntns.f.ant <- array(dim=c(2,2,6))
                        ~^~
NO COPY: R/BWI3_HR.R:3331:31: style: Commas should always have a space after.
  ntns.f.ant <- array(dim=c(2,2,6))
                              ^
NO COPY: R/BWI3_HR.R:3331:33: style: Commas should always have a space after.
  ntns.f.ant <- array(dim=c(2,2,6))
                                ^
NO COPY: R/BWI3_HR.R:3332:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: R/BWI3_HR.R:3335:7: style: Words within variable and function names should be separated by '_' rather than '.'.
      xy.ntns.i.t <- xy.ntns.t[xy.ntns.t[["ntns"]] == i, c("TNr", "n.ntns")]
      ^~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3335:22: style: Words within variable and function names should be separated by '_' rather than '.'.
      xy.ntns.i.t <- xy.ntns.t[xy.ntns.t[["ntns"]] == i, c("TNr", "n.ntns")]
                     ^~~~~~~~~
NO COPY: R/BWI3_HR.R:3335:32: style: Words within variable and function names should be separated by '_' rather than '.'.
      xy.ntns.i.t <- xy.ntns.t[xy.ntns.t[["ntns"]] == i, c("TNr", "n.ntns")]
                               ^~~~~~~~~
NO COPY: R/BWI3_HR.R:3336:11: style: Opening curly braces should never go on their own line and should always be followed by a new line.
    } else{  #OHNE NTNS-Angabe
          ^
NO COPY: R/BWI3_HR.R:3337:7: style: Words within variable and function names should be separated by '_' rather than '.'.
      xy.ntns.i.t <- xy.ntns.t[! xy.ntns.t[["ntns"]] %in% c(1:5), 
      ^~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3337:22: style: Words within variable and function names should be separated by '_' rather than '.'.
      xy.ntns.i.t <- xy.ntns.t[! xy.ntns.t[["ntns"]] %in% c(1:5), 
                     ^~~~~~~~~
NO COPY: R/BWI3_HR.R:3337:34: style: Words within variable and function names should be separated by '_' rather than '.'.
      xy.ntns.i.t <- xy.ntns.t[! xy.ntns.t[["ntns"]] %in% c(1:5), 
                                 ^~~~~~~~~
NO COPY: R/BWI3_HR.R:3337:66: style: Trailing whitespace is superfluous.
      xy.ntns.i.t <- xy.ntns.t[! xy.ntns.t[["ntns"]] %in% c(1:5), 
                                                                 ^
NO COPY: R/BWI3_HR.R:3338:40: style: Commas should always have a space after.
                               c("TNr","n.ntns")]
                                       ^
NO COPY: R/BWI3_HR.R:3340:11: style: Words within variable and function names should be separated by '_' rather than '.'.
    names(xy.ntns.i.t)[2] <- "n.ntns"
          ^~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3341:5: style: Words within variable and function names should be separated by '_' rather than '.'.
    xy.i.t <- merge(trakte[TRUE, c("TNr", "m")],
    ^~~~~~
NO COPY: R/BWI3_HR.R:3342:23: style: Words within variable and function names should be separated by '_' rather than '.'.
                      xy.ntns.i.t,by="TNr",all.x=T)
                      ^~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3342:35: style: Commas should always have a space after.
                      xy.ntns.i.t,by="TNr",all.x=T)
                                  ^
NO COPY: R/BWI3_HR.R:3342:37: style: Put spaces around all infix operators.
                      xy.ntns.i.t,by="TNr",all.x=T)
                                   ~^~
NO COPY: R/BWI3_HR.R:3342:44: style: Commas should always have a space after.
                      xy.ntns.i.t,by="TNr",all.x=T)
                                           ^
NO COPY: R/BWI3_HR.R:3342:49: style: Put spaces around all infix operators.
                      xy.ntns.i.t,by="TNr",all.x=T)
                                               ~^~
NO COPY: R/BWI3_HR.R:3343:5: style: Words within variable and function names should be separated by '_' rather than '.'.
    xy.i.t[is.na(xy.i.t)] <- 0
    ^~~~~~
NO COPY: R/BWI3_HR.R:3343:18: style: Words within variable and function names should be separated by '_' rather than '.'.
    xy.i.t[is.na(xy.i.t)] <- 0
                 ^~~~~~
NO COPY: R/BWI3_HR.R:3345:30: style: Words within variable and function names should be separated by '_' rather than '.'.
    r.list <- r.variance.fun(xy.i.t[,2:3], length(trakte[,1]))
                             ^~~~~~
NO COPY: R/BWI3_HR.R:3345:38: style: Commas should always have a space after.
    r.list <- r.variance.fun(xy.i.t[,2:3], length(trakte[,1]))
                                     ^
NO COPY: R/BWI3_HR.R:3345:59: style: Commas should always have a space after.
    r.list <- r.variance.fun(xy.i.t[,2:3], length(trakte[,1]))
                                                          ^
NO COPY: R/BWI3_HR.R:3346:5: style: Words within variable and function names should be separated by '_' rather than '.'.
    ntns.f.ant[1,1,i] <- r.list$R.xy*A
    ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:3346:18: style: Commas should always have a space after.
    ntns.f.ant[1,1,i] <- r.list$R.xy*A
                 ^
NO COPY: R/BWI3_HR.R:3346:20: style: Commas should always have a space after.
    ntns.f.ant[1,1,i] <- r.list$R.xy*A
                   ^
NO COPY: R/BWI3_HR.R:3346:37: style: Put spaces around all infix operators.
    ntns.f.ant[1,1,i] <- r.list$R.xy*A
                                   ~^~
NO COPY: R/BWI3_HR.R:3347:5: style: Words within variable and function names should be separated by '_' rather than '.'.
    ntns.f.ant[1,2,i] <- sqrt(r.list$V.R.xy)*A
    ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:3347:18: style: Commas should always have a space after.
    ntns.f.ant[1,2,i] <- sqrt(r.list$V.R.xy)*A
                 ^
NO COPY: R/BWI3_HR.R:3347:20: style: Commas should always have a space after.
    ntns.f.ant[1,2,i] <- sqrt(r.list$V.R.xy)*A
                   ^
NO COPY: R/BWI3_HR.R:3347:38: style: Words within variable and function names should be separated by '_' rather than '.'.
    ntns.f.ant[1,2,i] <- sqrt(r.list$V.R.xy)*A
                                     ^~~~~~
NO COPY: R/BWI3_HR.R:3347:45: style: Put spaces around all infix operators.
    ntns.f.ant[1,2,i] <- sqrt(r.list$V.R.xy)*A
                                           ~^~
NO COPY: R/BWI3_HR.R:3349:5: style: Words within variable and function names should be separated by '_' rather than '.'.
    xy.i.t <- merge(xy.t[TRUE, c("TNr", "n")],xy.ntns.i.t,by=c("TNr"),all.x=T)
    ^~~~~~
NO COPY: R/BWI3_HR.R:3349:47: style: Commas should always have a space after.
    xy.i.t <- merge(xy.t[TRUE, c("TNr", "n")],xy.ntns.i.t,by=c("TNr"),all.x=T)
                                              ^
NO COPY: R/BWI3_HR.R:3349:47: style: Words within variable and function names should be separated by '_' rather than '.'.
    xy.i.t <- merge(xy.t[TRUE, c("TNr", "n")],xy.ntns.i.t,by=c("TNr"),all.x=T)
                                              ^~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3349:59: style: Commas should always have a space after.
    xy.i.t <- merge(xy.t[TRUE, c("TNr", "n")],xy.ntns.i.t,by=c("TNr"),all.x=T)
                                                          ^
NO COPY: R/BWI3_HR.R:3349:61: style: Put spaces around all infix operators.
    xy.i.t <- merge(xy.t[TRUE, c("TNr", "n")],xy.ntns.i.t,by=c("TNr"),all.x=T)
                                                           ~^~
NO COPY: R/BWI3_HR.R:3349:71: style: Commas should always have a space after.
    xy.i.t <- merge(xy.t[TRUE, c("TNr", "n")],xy.ntns.i.t,by=c("TNr"),all.x=T)
                                                                      ^
NO COPY: R/BWI3_HR.R:3349:76: style: Put spaces around all infix operators.
    xy.i.t <- merge(xy.t[TRUE, c("TNr", "n")],xy.ntns.i.t,by=c("TNr"),all.x=T)
                                                                          ~^~
NO COPY: R/BWI3_HR.R:3350:5: style: Words within variable and function names should be separated by '_' rather than '.'.
    xy.i.t[is.na(xy.i.t)] <- 0
    ^~~~~~
NO COPY: R/BWI3_HR.R:3350:18: style: Words within variable and function names should be separated by '_' rather than '.'.
    xy.i.t[is.na(xy.i.t)] <- 0
                 ^~~~~~
NO COPY: R/BWI3_HR.R:3351:30: style: Words within variable and function names should be separated by '_' rather than '.'.
    r.list <- r.variance.fun(xy.i.t[,2:3],length(trakte[,1]))
                             ^~~~~~
NO COPY: R/BWI3_HR.R:3351:38: style: Commas should always have a space after.
    r.list <- r.variance.fun(xy.i.t[,2:3],length(trakte[,1]))
                                     ^
NO COPY: R/BWI3_HR.R:3351:43: style: Commas should always have a space after.
    r.list <- r.variance.fun(xy.i.t[,2:3],length(trakte[,1]))
                                          ^
NO COPY: R/BWI3_HR.R:3351:58: style: Commas should always have a space after.
    r.list <- r.variance.fun(xy.i.t[,2:3],length(trakte[,1]))
                                                         ^
NO COPY: R/BWI3_HR.R:3352:5: style: Words within variable and function names should be separated by '_' rather than '.'.
    ntns.f.ant[2,1,i] <- r.list$R.xy*100
    ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:3352:18: style: Commas should always have a space after.
    ntns.f.ant[2,1,i] <- r.list$R.xy*100
                 ^
NO COPY: R/BWI3_HR.R:3352:20: style: Commas should always have a space after.
    ntns.f.ant[2,1,i] <- r.list$R.xy*100
                   ^
NO COPY: R/BWI3_HR.R:3352:37: style: Put spaces around all infix operators.
    ntns.f.ant[2,1,i] <- r.list$R.xy*100
                                   ~^~
NO COPY: R/BWI3_HR.R:3353:5: style: Words within variable and function names should be separated by '_' rather than '.'.
    ntns.f.ant[2,2,i] <- sqrt(r.list$V.R.xy)*100
    ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:3353:18: style: Commas should always have a space after.
    ntns.f.ant[2,2,i] <- sqrt(r.list$V.R.xy)*100
                 ^
NO COPY: R/BWI3_HR.R:3353:20: style: Commas should always have a space after.
    ntns.f.ant[2,2,i] <- sqrt(r.list$V.R.xy)*100
                   ^
NO COPY: R/BWI3_HR.R:3353:38: style: Words within variable and function names should be separated by '_' rather than '.'.
    ntns.f.ant[2,2,i] <- sqrt(r.list$V.R.xy)*100
                                     ^~~~~~
NO COPY: R/BWI3_HR.R:3353:45: style: Put spaces around all infix operators.
    ntns.f.ant[2,2,i] <- sqrt(r.list$V.R.xy)*100
                                           ~^~
NO COPY: R/BWI3_HR.R:3356:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  xy.i.t <- merge(trakte[TRUE, c("TNr", "m")],xy.t,by="TNr",all.x=T)
  ^~~~~~
NO COPY: R/BWI3_HR.R:3356:47: style: Commas should always have a space after.
  xy.i.t <- merge(trakte[TRUE, c("TNr", "m")],xy.t,by="TNr",all.x=T)
                                              ^
NO COPY: R/BWI3_HR.R:3356:52: style: Commas should always have a space after.
  xy.i.t <- merge(trakte[TRUE, c("TNr", "m")],xy.t,by="TNr",all.x=T)
                                                   ^
NO COPY: R/BWI3_HR.R:3356:54: style: Put spaces around all infix operators.
  xy.i.t <- merge(trakte[TRUE, c("TNr", "m")],xy.t,by="TNr",all.x=T)
                                                    ~^~
NO COPY: R/BWI3_HR.R:3356:61: style: Commas should always have a space after.
  xy.i.t <- merge(trakte[TRUE, c("TNr", "m")],xy.t,by="TNr",all.x=T)
                                                            ^
NO COPY: R/BWI3_HR.R:3356:66: style: Put spaces around all infix operators.
  xy.i.t <- merge(trakte[TRUE, c("TNr", "m")],xy.t,by="TNr",all.x=T)
                                                                ~^~
NO COPY: R/BWI3_HR.R:3357:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  xy.i.t[is.na(xy.i.t)] <- 0
  ^~~~~~
NO COPY: R/BWI3_HR.R:3357:16: style: Words within variable and function names should be separated by '_' rather than '.'.
  xy.i.t[is.na(xy.i.t)] <- 0
               ^~~~~~
NO COPY: R/BWI3_HR.R:3358:28: style: Words within variable and function names should be separated by '_' rather than '.'.
  r.list <- r.variance.fun(xy.i.t[,2:3],length(trakte[,1]))
                           ^~~~~~
NO COPY: R/BWI3_HR.R:3358:36: style: Commas should always have a space after.
  r.list <- r.variance.fun(xy.i.t[,2:3],length(trakte[,1]))
                                   ^
NO COPY: R/BWI3_HR.R:3358:41: style: Commas should always have a space after.
  r.list <- r.variance.fun(xy.i.t[,2:3],length(trakte[,1]))
                                        ^
NO COPY: R/BWI3_HR.R:3358:56: style: Commas should always have a space after.
  r.list <- r.variance.fun(xy.i.t[,2:3],length(trakte[,1]))
                                                       ^
NO COPY: R/BWI3_HR.R:3360:21: style: Put spaces around all infix operators.
  return (list(Datum=Sys.time(),
                   ~^~
NO COPY: R/BWI3_HR.R:3361:33: style: Put spaces around all infix operators.
               HBF = r.list$R.xy*A, se.HBF = sqrt(r.list$V.R.xy)*A,
                               ~^~
NO COPY: R/BWI3_HR.R:3361:58: style: Words within variable and function names should be separated by '_' rather than '.'.
               HBF = r.list$R.xy*A, se.HBF = sqrt(r.list$V.R.xy)*A,
                                                         ^~~~~~
NO COPY: R/BWI3_HR.R:3361:65: style: Put spaces around all infix operators.
               HBF = r.list$R.xy*A, se.HBF = sqrt(r.list$V.R.xy)*A,
                                                               ~^~
NO COPY: R/BWI3_HR.R:3364:38: style: Words within variable and function names should be separated by '_' rather than '.'.
               NTNS.Flaeche.Anteil = ntns.f.ant))
                                     ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:3399:40: style: Commas should always have a space after.
ntns.stratum.fun.2 <- function(ntns.te,ecken,trakte,A,auswahl,bwi,natwg,schicht)
                                       ^
NO COPY: R/BWI3_HR.R:3399:46: style: Commas should always have a space after.
ntns.stratum.fun.2 <- function(ntns.te,ecken,trakte,A,auswahl,bwi,natwg,schicht)
                                             ^
NO COPY: R/BWI3_HR.R:3399:53: style: Commas should always have a space after.
ntns.stratum.fun.2 <- function(ntns.te,ecken,trakte,A,auswahl,bwi,natwg,schicht)
                                                    ^
NO COPY: R/BWI3_HR.R:3399:55: style: Commas should always have a space after.
ntns.stratum.fun.2 <- function(ntns.te,ecken,trakte,A,auswahl,bwi,natwg,schicht)
                                                      ^
NO COPY: R/BWI3_HR.R:3399:63: style: Commas should always have a space after.
ntns.stratum.fun.2 <- function(ntns.te,ecken,trakte,A,auswahl,bwi,natwg,schicht)
                                                              ^
NO COPY: R/BWI3_HR.R:3399:67: style: Commas should always have a space after.
ntns.stratum.fun.2 <- function(ntns.te,ecken,trakte,A,auswahl,bwi,natwg,schicht)
                                                                  ^
NO COPY: R/BWI3_HR.R:3399:73: style: Commas should always have a space after.
ntns.stratum.fun.2 <- function(ntns.te,ecken,trakte,A,auswahl,bwi,natwg,schicht)
                                                                        ^
NO COPY: R/BWI3_HR.R:3400:3: style: Opening curly braces should never go on their own line and should always be followed by a new line.
  {
  ^
NO COPY: R/BWI3_HR.R:3401:34: style: Commas should always have a space after.
  stratum <- stratum.fun(auswahl,ecken)
                                 ^
NO COPY: R/BWI3_HR.R:3403:10: style: Put spaces around all infix operators.
  if (bwi==3){
        ~^~~
NO COPY: R/BWI3_HR.R:3404:16: style: Put spaces around all infix operators.
    if (schicht==1){ #kleiner 4m
              ~^~~
NO COPY: R/BWI3_HR.R:3404:20: style: Opening curly braces should never go on their own line and should always be followed by a new line.
    if (schicht==1){ #kleiner 4m
                   ^
NO COPY: R/BWI3_HR.R:3406:1: style: lines should not be more than 80 characters.
                       ntns.te[TRUE, c("Tnr", "Enr", "NTNS_F_kl4m_BA_Anteile_BWI3")],
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3407:19: style: Put spaces around all infix operators.
              by.x=c("TNr","ENr"),by.y=c("Tnr","Enr"),all.x=T)
                 ~^~
NO COPY: R/BWI3_HR.R:3407:28: style: Commas should always have a space after.
              by.x=c("TNr","ENr"),by.y=c("Tnr","Enr"),all.x=T)
                           ^
NO COPY: R/BWI3_HR.R:3407:35: style: Commas should always have a space after.
              by.x=c("TNr","ENr"),by.y=c("Tnr","Enr"),all.x=T)
                                  ^
NO COPY: R/BWI3_HR.R:3407:39: style: Put spaces around all infix operators.
              by.x=c("TNr","ENr"),by.y=c("Tnr","Enr"),all.x=T)
                                     ~^~
NO COPY: R/BWI3_HR.R:3407:48: style: Commas should always have a space after.
              by.x=c("TNr","ENr"),by.y=c("Tnr","Enr"),all.x=T)
                                               ^
NO COPY: R/BWI3_HR.R:3407:55: style: Commas should always have a space after.
              by.x=c("TNr","ENr"),by.y=c("Tnr","Enr"),all.x=T)
                                                      ^
NO COPY: R/BWI3_HR.R:3407:60: style: Put spaces around all infix operators.
              by.x=c("TNr","ENr"),by.y=c("Tnr","Enr"),all.x=T)
                                                          ~^~
NO COPY: R/BWI3_HR.R:3411:1: style: lines should not be more than 80 characters.
                       ntns.te[TRUE, c("Tnr", "Enr", "NTNS_F_gr4m_alleBaeume_BWI3")],
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3412:19: style: Put spaces around all infix operators.
              by.x=c("TNr","ENr"),by.y=c("Tnr","Enr"),all.x=T)
                 ~^~
NO COPY: R/BWI3_HR.R:3412:28: style: Commas should always have a space after.
              by.x=c("TNr","ENr"),by.y=c("Tnr","Enr"),all.x=T)
                           ^
NO COPY: R/BWI3_HR.R:3412:35: style: Commas should always have a space after.
              by.x=c("TNr","ENr"),by.y=c("Tnr","Enr"),all.x=T)
                                  ^
NO COPY: R/BWI3_HR.R:3412:39: style: Put spaces around all infix operators.
              by.x=c("TNr","ENr"),by.y=c("Tnr","Enr"),all.x=T)
                                     ~^~
NO COPY: R/BWI3_HR.R:3412:48: style: Commas should always have a space after.
              by.x=c("TNr","ENr"),by.y=c("Tnr","Enr"),all.x=T)
                                               ^
NO COPY: R/BWI3_HR.R:3412:55: style: Commas should always have a space after.
              by.x=c("TNr","ENr"),by.y=c("Tnr","Enr"),all.x=T)
                                                      ^
NO COPY: R/BWI3_HR.R:3412:60: style: Put spaces around all infix operators.
              by.x=c("TNr","ENr"),by.y=c("Tnr","Enr"),all.x=T)
                                                          ~^~
NO COPY: R/BWI3_HR.R:3415:9: style: Opening curly braces should never go on their own line and should always be followed by a new line.
  } else{ #BWI 2: Fallunterscheidung nach verwendeten nat. WG
        ^
NO COPY: R/BWI3_HR.R:3416:14: style: Put spaces around all infix operators.
    if (natwg==3){
            ~^~~
NO COPY: R/BWI3_HR.R:3417:20: style: Put spaces around all infix operators.
        if (schicht==1){
                  ~^~~
NO COPY: R/BWI3_HR.R:3419:1: style: lines should not be more than 80 characters.
                           ntns.te[TRUE, c("Tnr", "Enr", "NTNS_F_kl4m_BA_Anteile_BWI2_natwgBWI3")],
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3420:21: style: Put spaces around all infix operators.
                by.x=c("TNr","ENr"),by.y=c("Tnr","Enr"),all.x=T)
                   ~^~
NO COPY: R/BWI3_HR.R:3420:30: style: Commas should always have a space after.
                by.x=c("TNr","ENr"),by.y=c("Tnr","Enr"),all.x=T)
                             ^
NO COPY: R/BWI3_HR.R:3420:37: style: Commas should always have a space after.
                by.x=c("TNr","ENr"),by.y=c("Tnr","Enr"),all.x=T)
                                    ^
NO COPY: R/BWI3_HR.R:3420:41: style: Put spaces around all infix operators.
                by.x=c("TNr","ENr"),by.y=c("Tnr","Enr"),all.x=T)
                                       ~^~
NO COPY: R/BWI3_HR.R:3420:50: style: Commas should always have a space after.
                by.x=c("TNr","ENr"),by.y=c("Tnr","Enr"),all.x=T)
                                                 ^
NO COPY: R/BWI3_HR.R:3420:57: style: Commas should always have a space after.
                by.x=c("TNr","ENr"),by.y=c("Tnr","Enr"),all.x=T)
                                                        ^
NO COPY: R/BWI3_HR.R:3420:62: style: Put spaces around all infix operators.
                by.x=c("TNr","ENr"),by.y=c("Tnr","Enr"),all.x=T)
                                                            ~^~
NO COPY: R/BWI3_HR.R:3424:1: style: lines should not be more than 80 characters.
                           ntns.te[TRUE, c("Tnr", "Enr", "NTNS_F_gr4m_alleBaeume_BWI2_natwgBWI3")],
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3425:21: style: Put spaces around all infix operators.
                by.x=c("TNr","ENr"),by.y=c("Tnr","Enr"),all.x=T)
                   ~^~
NO COPY: R/BWI3_HR.R:3425:30: style: Commas should always have a space after.
                by.x=c("TNr","ENr"),by.y=c("Tnr","Enr"),all.x=T)
                             ^
NO COPY: R/BWI3_HR.R:3425:37: style: Commas should always have a space after.
                by.x=c("TNr","ENr"),by.y=c("Tnr","Enr"),all.x=T)
                                    ^
NO COPY: R/BWI3_HR.R:3425:41: style: Put spaces around all infix operators.
                by.x=c("TNr","ENr"),by.y=c("Tnr","Enr"),all.x=T)
                                       ~^~
NO COPY: R/BWI3_HR.R:3425:50: style: Commas should always have a space after.
                by.x=c("TNr","ENr"),by.y=c("Tnr","Enr"),all.x=T)
                                                 ^
NO COPY: R/BWI3_HR.R:3425:57: style: Commas should always have a space after.
                by.x=c("TNr","ENr"),by.y=c("Tnr","Enr"),all.x=T)
                                                        ^
NO COPY: R/BWI3_HR.R:3425:62: style: Put spaces around all infix operators.
                by.x=c("TNr","ENr"),by.y=c("Tnr","Enr"),all.x=T)
                                                            ~^~
NO COPY: R/BWI3_HR.R:3430:20: style: Put spaces around all infix operators.
        if (schicht==1){
                  ~^~~
NO COPY: R/BWI3_HR.R:3432:1: style: lines should not be more than 80 characters.
                           ntns.te[TRUE, c("Tnr", "Enr", "NTNS_F_kl4m_BA_Anteile_BWI2")],
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3433:21: style: Put spaces around all infix operators.
                by.x=c("TNr","ENr"),by.y=c("Tnr","Enr"),all.x=T)
                   ~^~
NO COPY: R/BWI3_HR.R:3433:30: style: Commas should always have a space after.
                by.x=c("TNr","ENr"),by.y=c("Tnr","Enr"),all.x=T)
                             ^
NO COPY: R/BWI3_HR.R:3433:37: style: Commas should always have a space after.
                by.x=c("TNr","ENr"),by.y=c("Tnr","Enr"),all.x=T)
                                    ^
NO COPY: R/BWI3_HR.R:3433:41: style: Put spaces around all infix operators.
                by.x=c("TNr","ENr"),by.y=c("Tnr","Enr"),all.x=T)
                                       ~^~
NO COPY: R/BWI3_HR.R:3433:50: style: Commas should always have a space after.
                by.x=c("TNr","ENr"),by.y=c("Tnr","Enr"),all.x=T)
                                                 ^
NO COPY: R/BWI3_HR.R:3433:57: style: Commas should always have a space after.
                by.x=c("TNr","ENr"),by.y=c("Tnr","Enr"),all.x=T)
                                                        ^
NO COPY: R/BWI3_HR.R:3433:62: style: Put spaces around all infix operators.
                by.x=c("TNr","ENr"),by.y=c("Tnr","Enr"),all.x=T)
                                                            ~^~
NO COPY: R/BWI3_HR.R:3437:1: style: lines should not be more than 80 characters.
                           ntns.te[TRUE, c("Tnr", "Enr", "NTNS_F_gr4m_alleBaeume_BWI2")],
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3438:21: style: Put spaces around all infix operators.
                by.x=c("TNr","ENr"),by.y=c("Tnr","Enr"),all.x=T)
                   ~^~
NO COPY: R/BWI3_HR.R:3438:30: style: Commas should always have a space after.
                by.x=c("TNr","ENr"),by.y=c("Tnr","Enr"),all.x=T)
                             ^
NO COPY: R/BWI3_HR.R:3438:37: style: Commas should always have a space after.
                by.x=c("TNr","ENr"),by.y=c("Tnr","Enr"),all.x=T)
                                    ^
NO COPY: R/BWI3_HR.R:3438:41: style: Put spaces around all infix operators.
                by.x=c("TNr","ENr"),by.y=c("Tnr","Enr"),all.x=T)
                                       ~^~
NO COPY: R/BWI3_HR.R:3438:50: style: Commas should always have a space after.
                by.x=c("TNr","ENr"),by.y=c("Tnr","Enr"),all.x=T)
                                                 ^
NO COPY: R/BWI3_HR.R:3438:57: style: Commas should always have a space after.
                by.x=c("TNr","ENr"),by.y=c("Tnr","Enr"),all.x=T)
                                                        ^
NO COPY: R/BWI3_HR.R:3438:62: style: Put spaces around all infix operators.
                by.x=c("TNr","ENr"),by.y=c("Tnr","Enr"),all.x=T)
                                                            ~^~
NO COPY: R/BWI3_HR.R:3445:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  xy.ntns.t <- stats::aggregate(rep(1,length(stratum[,1])),
  ^~~~~~~~~
NO COPY: R/BWI3_HR.R:3445:39: style: Commas should always have a space after.
  xy.ntns.t <- stats::aggregate(rep(1,length(stratum[,1])),
                                      ^
NO COPY: R/BWI3_HR.R:3445:55: style: Commas should always have a space after.
  xy.ntns.t <- stats::aggregate(rep(1,length(stratum[,1])),
                                                      ^
NO COPY: R/BWI3_HR.R:3446:23: style: Put spaces around all infix operators.
                    by=list(stratum$TNr,stratum$ntns),sum)
                     ~^~
NO COPY: R/BWI3_HR.R:3446:41: style: Commas should always have a space after.
                    by=list(stratum$TNr,stratum$ntns),sum)
                                        ^
NO COPY: R/BWI3_HR.R:3446:55: style: Commas should always have a space after.
                    by=list(stratum$TNr,stratum$ntns),sum)
                                                      ^
NO COPY: R/BWI3_HR.R:3447:9: style: Words within variable and function names should be separated by '_' rather than '.'.
  names(xy.ntns.t) <- c("TNr","ntns","n.ntns")
        ^~~~~~~~~
NO COPY: R/BWI3_HR.R:3447:31: style: Commas should always have a space after.
  names(xy.ntns.t) <- c("TNr","ntns","n.ntns")
                              ^
NO COPY: R/BWI3_HR.R:3447:38: style: Commas should always have a space after.
  names(xy.ntns.t) <- c("TNr","ntns","n.ntns")
                                     ^
NO COPY: R/BWI3_HR.R:3449:34: style: Commas should always have a space after.
  xy.t <- stats::aggregate(rep(1,length(stratum[,1])),
                                 ^
NO COPY: R/BWI3_HR.R:3449:50: style: Commas should always have a space after.
  xy.t <- stats::aggregate(rep(1,length(stratum[,1])),
                                                 ^
NO COPY: R/BWI3_HR.R:3450:23: style: Put spaces around all infix operators.
                    by=list(stratum$TNr),sum)
                     ~^~
NO COPY: R/BWI3_HR.R:3450:42: style: Commas should always have a space after.
                    by=list(stratum$TNr),sum)
                                         ^
NO COPY: R/BWI3_HR.R:3451:26: style: Commas should always have a space after.
  names(xy.t) <- c("TNr","n")
                         ^
NO COPY: R/BWI3_HR.R:3457:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: R/BWI3_HR.R:3458:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  ntns.f.ant <- array(dim=c(2,2,6))
  ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:3458:26: style: Put spaces around all infix operators.
  ntns.f.ant <- array(dim=c(2,2,6))
                        ~^~
NO COPY: R/BWI3_HR.R:3458:31: style: Commas should always have a space after.
  ntns.f.ant <- array(dim=c(2,2,6))
                              ^
NO COPY: R/BWI3_HR.R:3458:33: style: Commas should always have a space after.
  ntns.f.ant <- array(dim=c(2,2,6))
                                ^
NO COPY: R/BWI3_HR.R:3459:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: R/BWI3_HR.R:3462:7: style: Words within variable and function names should be separated by '_' rather than '.'.
      xy.ntns.i.t <- xy.ntns.t[xy.ntns.t[["ntns"]] == i, c("TNr", "n.ntns")]
      ^~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3462:22: style: Words within variable and function names should be separated by '_' rather than '.'.
      xy.ntns.i.t <- xy.ntns.t[xy.ntns.t[["ntns"]] == i, c("TNr", "n.ntns")]
                     ^~~~~~~~~
NO COPY: R/BWI3_HR.R:3462:32: style: Words within variable and function names should be separated by '_' rather than '.'.
      xy.ntns.i.t <- xy.ntns.t[xy.ntns.t[["ntns"]] == i, c("TNr", "n.ntns")]
                               ^~~~~~~~~
NO COPY: R/BWI3_HR.R:3463:14: style: Opening curly braces should never go on their own line and should always be followed by a new line.
    } else   {#OHNE NTNS-Angabe
             ^
NO COPY: R/BWI3_HR.R:3464:1: style: lines should not be more than 80 characters.
      xy.ntns.i.t <- xy.ntns.t[! xy.ntns.t[["ntns"]] %in% c(1:5), c("TNr", "n.ntns")]
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3464:7: style: Words within variable and function names should be separated by '_' rather than '.'.
      xy.ntns.i.t <- xy.ntns.t[! xy.ntns.t[["ntns"]] %in% c(1:5), c("TNr", "n.ntns")]
      ^~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3464:22: style: Words within variable and function names should be separated by '_' rather than '.'.
      xy.ntns.i.t <- xy.ntns.t[! xy.ntns.t[["ntns"]] %in% c(1:5), c("TNr", "n.ntns")]
                     ^~~~~~~~~
NO COPY: R/BWI3_HR.R:3464:34: style: Words within variable and function names should be separated by '_' rather than '.'.
      xy.ntns.i.t <- xy.ntns.t[! xy.ntns.t[["ntns"]] %in% c(1:5), c("TNr", "n.ntns")]
                                 ^~~~~~~~~
NO COPY: R/BWI3_HR.R:3466:11: style: Words within variable and function names should be separated by '_' rather than '.'.
    names(xy.ntns.i.t)[2] <- "n.ntns"
          ^~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3467:5: style: Words within variable and function names should be separated by '_' rather than '.'.
    xy.i.t <- merge(trakte[TRUE, c("TNr", "m")],
    ^~~~~~
NO COPY: R/BWI3_HR.R:3468:23: style: Words within variable and function names should be separated by '_' rather than '.'.
                      xy.ntns.i.t,by="TNr",all.x=T)
                      ^~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3468:35: style: Commas should always have a space after.
                      xy.ntns.i.t,by="TNr",all.x=T)
                                  ^
NO COPY: R/BWI3_HR.R:3468:37: style: Put spaces around all infix operators.
                      xy.ntns.i.t,by="TNr",all.x=T)
                                   ~^~
NO COPY: R/BWI3_HR.R:3468:44: style: Commas should always have a space after.
                      xy.ntns.i.t,by="TNr",all.x=T)
                                           ^
NO COPY: R/BWI3_HR.R:3468:49: style: Put spaces around all infix operators.
                      xy.ntns.i.t,by="TNr",all.x=T)
                                               ~^~
NO COPY: R/BWI3_HR.R:3469:5: style: Words within variable and function names should be separated by '_' rather than '.'.
    xy.i.t[is.na(xy.i.t)] <- 0
    ^~~~~~
NO COPY: R/BWI3_HR.R:3469:18: style: Words within variable and function names should be separated by '_' rather than '.'.
    xy.i.t[is.na(xy.i.t)] <- 0
                 ^~~~~~
NO COPY: R/BWI3_HR.R:3471:30: style: Words within variable and function names should be separated by '_' rather than '.'.
    r.list <- r.variance.fun(xy.i.t[,2:3], length(trakte[,1]))
                             ^~~~~~
NO COPY: R/BWI3_HR.R:3471:38: style: Commas should always have a space after.
    r.list <- r.variance.fun(xy.i.t[,2:3], length(trakte[,1]))
                                     ^
NO COPY: R/BWI3_HR.R:3471:59: style: Commas should always have a space after.
    r.list <- r.variance.fun(xy.i.t[,2:3], length(trakte[,1]))
                                                          ^
NO COPY: R/BWI3_HR.R:3472:5: style: Words within variable and function names should be separated by '_' rather than '.'.
    ntns.f.ant[1,1,i] <- r.list$R.xy*A
    ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:3472:18: style: Commas should always have a space after.
    ntns.f.ant[1,1,i] <- r.list$R.xy*A
                 ^
NO COPY: R/BWI3_HR.R:3472:20: style: Commas should always have a space after.
    ntns.f.ant[1,1,i] <- r.list$R.xy*A
                   ^
NO COPY: R/BWI3_HR.R:3472:37: style: Put spaces around all infix operators.
    ntns.f.ant[1,1,i] <- r.list$R.xy*A
                                   ~^~
NO COPY: R/BWI3_HR.R:3473:5: style: Words within variable and function names should be separated by '_' rather than '.'.
    ntns.f.ant[1,2,i] <- sqrt(r.list$V.R.xy)*A
    ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:3473:18: style: Commas should always have a space after.
    ntns.f.ant[1,2,i] <- sqrt(r.list$V.R.xy)*A
                 ^
NO COPY: R/BWI3_HR.R:3473:20: style: Commas should always have a space after.
    ntns.f.ant[1,2,i] <- sqrt(r.list$V.R.xy)*A
                   ^
NO COPY: R/BWI3_HR.R:3473:38: style: Words within variable and function names should be separated by '_' rather than '.'.
    ntns.f.ant[1,2,i] <- sqrt(r.list$V.R.xy)*A
                                     ^~~~~~
NO COPY: R/BWI3_HR.R:3473:45: style: Put spaces around all infix operators.
    ntns.f.ant[1,2,i] <- sqrt(r.list$V.R.xy)*A
                                           ~^~
NO COPY: R/BWI3_HR.R:3475:5: style: Words within variable and function names should be separated by '_' rather than '.'.
    xy.i.t <- merge(xy.t[TRUE, c("TNr", "n")],xy.ntns.i.t,by=c("TNr"),all.x=T)
    ^~~~~~
NO COPY: R/BWI3_HR.R:3475:47: style: Commas should always have a space after.
    xy.i.t <- merge(xy.t[TRUE, c("TNr", "n")],xy.ntns.i.t,by=c("TNr"),all.x=T)
                                              ^
NO COPY: R/BWI3_HR.R:3475:47: style: Words within variable and function names should be separated by '_' rather than '.'.
    xy.i.t <- merge(xy.t[TRUE, c("TNr", "n")],xy.ntns.i.t,by=c("TNr"),all.x=T)
                                              ^~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3475:59: style: Commas should always have a space after.
    xy.i.t <- merge(xy.t[TRUE, c("TNr", "n")],xy.ntns.i.t,by=c("TNr"),all.x=T)
                                                          ^
NO COPY: R/BWI3_HR.R:3475:61: style: Put spaces around all infix operators.
    xy.i.t <- merge(xy.t[TRUE, c("TNr", "n")],xy.ntns.i.t,by=c("TNr"),all.x=T)
                                                           ~^~
NO COPY: R/BWI3_HR.R:3475:71: style: Commas should always have a space after.
    xy.i.t <- merge(xy.t[TRUE, c("TNr", "n")],xy.ntns.i.t,by=c("TNr"),all.x=T)
                                                                      ^
NO COPY: R/BWI3_HR.R:3475:76: style: Put spaces around all infix operators.
    xy.i.t <- merge(xy.t[TRUE, c("TNr", "n")],xy.ntns.i.t,by=c("TNr"),all.x=T)
                                                                          ~^~
NO COPY: R/BWI3_HR.R:3476:5: style: Words within variable and function names should be separated by '_' rather than '.'.
    xy.i.t[is.na(xy.i.t)] <- 0
    ^~~~~~
NO COPY: R/BWI3_HR.R:3476:18: style: Words within variable and function names should be separated by '_' rather than '.'.
    xy.i.t[is.na(xy.i.t)] <- 0
                 ^~~~~~
NO COPY: R/BWI3_HR.R:3477:30: style: Words within variable and function names should be separated by '_' rather than '.'.
    r.list <- r.variance.fun(xy.i.t[,2:3],length(trakte[,1]))
                             ^~~~~~
NO COPY: R/BWI3_HR.R:3477:38: style: Commas should always have a space after.
    r.list <- r.variance.fun(xy.i.t[,2:3],length(trakte[,1]))
                                     ^
NO COPY: R/BWI3_HR.R:3477:43: style: Commas should always have a space after.
    r.list <- r.variance.fun(xy.i.t[,2:3],length(trakte[,1]))
                                          ^
NO COPY: R/BWI3_HR.R:3477:58: style: Commas should always have a space after.
    r.list <- r.variance.fun(xy.i.t[,2:3],length(trakte[,1]))
                                                         ^
NO COPY: R/BWI3_HR.R:3478:5: style: Words within variable and function names should be separated by '_' rather than '.'.
    ntns.f.ant[2,1,i] <- r.list$R.xy*100
    ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:3478:18: style: Commas should always have a space after.
    ntns.f.ant[2,1,i] <- r.list$R.xy*100
                 ^
NO COPY: R/BWI3_HR.R:3478:20: style: Commas should always have a space after.
    ntns.f.ant[2,1,i] <- r.list$R.xy*100
                   ^
NO COPY: R/BWI3_HR.R:3478:37: style: Put spaces around all infix operators.
    ntns.f.ant[2,1,i] <- r.list$R.xy*100
                                   ~^~
NO COPY: R/BWI3_HR.R:3479:5: style: Words within variable and function names should be separated by '_' rather than '.'.
    ntns.f.ant[2,2,i] <- sqrt(r.list$V.R.xy)*100
    ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:3479:18: style: Commas should always have a space after.
    ntns.f.ant[2,2,i] <- sqrt(r.list$V.R.xy)*100
                 ^
NO COPY: R/BWI3_HR.R:3479:20: style: Commas should always have a space after.
    ntns.f.ant[2,2,i] <- sqrt(r.list$V.R.xy)*100
                   ^
NO COPY: R/BWI3_HR.R:3479:38: style: Words within variable and function names should be separated by '_' rather than '.'.
    ntns.f.ant[2,2,i] <- sqrt(r.list$V.R.xy)*100
                                     ^~~~~~
NO COPY: R/BWI3_HR.R:3479:45: style: Put spaces around all infix operators.
    ntns.f.ant[2,2,i] <- sqrt(r.list$V.R.xy)*100
                                           ~^~
NO COPY: R/BWI3_HR.R:3482:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  xy.i.t <- merge(trakte[TRUE, c("TNr", "m")],xy.t,by="TNr",all.x=T)
  ^~~~~~
NO COPY: R/BWI3_HR.R:3482:47: style: Commas should always have a space after.
  xy.i.t <- merge(trakte[TRUE, c("TNr", "m")],xy.t,by="TNr",all.x=T)
                                              ^
NO COPY: R/BWI3_HR.R:3482:52: style: Commas should always have a space after.
  xy.i.t <- merge(trakte[TRUE, c("TNr", "m")],xy.t,by="TNr",all.x=T)
                                                   ^
NO COPY: R/BWI3_HR.R:3482:54: style: Put spaces around all infix operators.
  xy.i.t <- merge(trakte[TRUE, c("TNr", "m")],xy.t,by="TNr",all.x=T)
                                                    ~^~
NO COPY: R/BWI3_HR.R:3482:61: style: Commas should always have a space after.
  xy.i.t <- merge(trakte[TRUE, c("TNr", "m")],xy.t,by="TNr",all.x=T)
                                                            ^
NO COPY: R/BWI3_HR.R:3482:66: style: Put spaces around all infix operators.
  xy.i.t <- merge(trakte[TRUE, c("TNr", "m")],xy.t,by="TNr",all.x=T)
                                                                ~^~
NO COPY: R/BWI3_HR.R:3483:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  xy.i.t[is.na(xy.i.t)] <- 0
  ^~~~~~
NO COPY: R/BWI3_HR.R:3483:16: style: Words within variable and function names should be separated by '_' rather than '.'.
  xy.i.t[is.na(xy.i.t)] <- 0
               ^~~~~~
NO COPY: R/BWI3_HR.R:3484:28: style: Words within variable and function names should be separated by '_' rather than '.'.
  r.list <- r.variance.fun(xy.i.t[,2:3],length(trakte[,1]))
                           ^~~~~~
NO COPY: R/BWI3_HR.R:3484:36: style: Commas should always have a space after.
  r.list <- r.variance.fun(xy.i.t[,2:3],length(trakte[,1]))
                                   ^
NO COPY: R/BWI3_HR.R:3484:41: style: Commas should always have a space after.
  r.list <- r.variance.fun(xy.i.t[,2:3],length(trakte[,1]))
                                        ^
NO COPY: R/BWI3_HR.R:3484:56: style: Commas should always have a space after.
  r.list <- r.variance.fun(xy.i.t[,2:3],length(trakte[,1]))
                                                       ^
NO COPY: R/BWI3_HR.R:3486:21: style: Put spaces around all infix operators.
  return (list(Datum=Sys.time(),
                   ~^~
NO COPY: R/BWI3_HR.R:3487:33: style: Put spaces around all infix operators.
               HBF = r.list$R.xy*A, se.HBF = sqrt(r.list$V.R.xy)*A,
                               ~^~
NO COPY: R/BWI3_HR.R:3487:58: style: Words within variable and function names should be separated by '_' rather than '.'.
               HBF = r.list$R.xy*A, se.HBF = sqrt(r.list$V.R.xy)*A,
                                                         ^~~~~~
NO COPY: R/BWI3_HR.R:3487:65: style: Put spaces around all infix operators.
               HBF = r.list$R.xy*A, se.HBF = sqrt(r.list$V.R.xy)*A,
                                                               ~^~
NO COPY: R/BWI3_HR.R:3491:38: style: Words within variable and function names should be separated by '_' rather than '.'.
               NTNS.Flaeche.Anteil = ntns.f.ant))
                                     ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:3530:45: style: Commas should always have a space after.
biotop.baeume.fun <- function(wzp4.merkmale,baeume,ecken,trakte,A,auswahl){
                                            ^
NO COPY: R/BWI3_HR.R:3530:52: style: Commas should always have a space after.
biotop.baeume.fun <- function(wzp4.merkmale,baeume,ecken,trakte,A,auswahl){
                                                   ^
NO COPY: R/BWI3_HR.R:3530:58: style: Commas should always have a space after.
biotop.baeume.fun <- function(wzp4.merkmale,baeume,ecken,trakte,A,auswahl){
                                                         ^
NO COPY: R/BWI3_HR.R:3530:65: style: Commas should always have a space after.
biotop.baeume.fun <- function(wzp4.merkmale,baeume,ecken,trakte,A,auswahl){
                                                                ^
NO COPY: R/BWI3_HR.R:3530:67: style: Commas should always have a space after.
biotop.baeume.fun <- function(wzp4.merkmale,baeume,ecken,trakte,A,auswahl){
                                                                  ^
NO COPY: R/BWI3_HR.R:3532:34: style: Commas should always have a space after.
  stratum <- stratum.fun(auswahl,ecken)
                                 ^
NO COPY: R/BWI3_HR.R:3538:1: style: lines should not be more than 80 characters.
  #"Neutralisierung" der ben\u00f6tigten Attributnamen in <baeume>: <2> entfernen
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3539:26: style: Commas should always have a space after.
  names(baeume) <- sub(2,names(baeume),replacement="")
                         ^
NO COPY: R/BWI3_HR.R:3539:40: style: Commas should always have a space after.
  names(baeume) <- sub(2,names(baeume),replacement="")
                                       ^
NO COPY: R/BWI3_HR.R:3539:51: style: Put spaces around all infix operators.
  names(baeume) <- sub(2,names(baeume),replacement="")
                                                 ~^~
NO COPY: R/BWI3_HR.R:3542:43: style: Put spaces around all infix operators.
  wzp4.merkmale <- merge(baeume[baeume$stp==0,
                                         ~^~~
NO COPY: R/BWI3_HR.R:3543:1: style: lines should not be more than 80 characters.
                        c("tnr", "enr", "bnr", "ba", "alt", "bhd", "h", "volv", "oib", "nha", "stfl")], 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3543:104: style: Trailing whitespace is superfluous.
                        c("tnr", "enr", "bnr", "ba", "alt", "bhd", "h", "volv", "oib", "nha", "stfl")], 
                                                                                                       ^
NO COPY: R/BWI3_HR.R:3544:42: style: Put spaces around all infix operators.
                        wzp4.merkmale, by=c("tnr","enr","bnr"),all.x=T)
                                        ~^~
NO COPY: R/BWI3_HR.R:3544:51: style: Commas should always have a space after.
                        wzp4.merkmale, by=c("tnr","enr","bnr"),all.x=T)
                                                  ^
NO COPY: R/BWI3_HR.R:3544:57: style: Commas should always have a space after.
                        wzp4.merkmale, by=c("tnr","enr","bnr"),all.x=T)
                                                        ^
NO COPY: R/BWI3_HR.R:3544:64: style: Commas should always have a space after.
                        wzp4.merkmale, by=c("tnr","enr","bnr"),all.x=T)
                                                               ^
NO COPY: R/BWI3_HR.R:3544:69: style: Put spaces around all infix operators.
                        wzp4.merkmale, by=c("tnr","enr","bnr"),all.x=T)
                                                                   ~^~
NO COPY: R/BWI3_HR.R:3550:1: style: lines should not be more than 80 characters.
      wzp4.merkmale$faulkon + wzp4.merkmale$hoehle + wzp4.merkmale$bizarr + wzp4.merkmale$uralt + wzp4.merkmale$horst + wzp4.merkmale$mbiotop
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3553:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  wzp4.merkmale.s <- merge(wzp4.merkmale[TRUE, c("tnr", "enr", "bnr", "pk", 
  ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3553:76: style: Trailing whitespace is superfluous.
  wzp4.merkmale.s <- merge(wzp4.merkmale[TRUE, c("tnr", "enr", "bnr", "pk", 
                                                                           ^
NO COPY: R/BWI3_HR.R:3557:30: style: Put spaces around all infix operators.
                           by=c("tnr", "enr"), all.y=T)
                            ~^~
NO COPY: R/BWI3_HR.R:3557:53: style: Put spaces around all infix operators.
                           by=c("tnr", "enr"), all.y=T)
                                                   ~^~
NO COPY: R/BWI3_HR.R:3558:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  wzp4.merkmale.s[is.na(wzp4.merkmale.s)] <- 0
  ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3558:25: style: Words within variable and function names should be separated by '_' rather than '.'.
  wzp4.merkmale.s[is.na(wzp4.merkmale.s)] <- 0
                        ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3559:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: R/BWI3_HR.R:3563:24: style: Commas should always have a space after.
  nT <- length(trakte[,1])
                       ^
NO COPY: R/BWI3_HR.R:3565:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  n.te.s <- length(stratum[,1])
  ^~~~~~
NO COPY: R/BWI3_HR.R:3565:29: style: Commas should always have a space after.
  n.te.s <- length(stratum[,1])
                            ^
NO COPY: R/BWI3_HR.R:3568:32: style: Commas should always have a space after.
  xy <- stats::aggregate(rep(1,length(stratum[,1])),by=list(stratum$tnr),sum)
                               ^
NO COPY: R/BWI3_HR.R:3568:48: style: Commas should always have a space after.
  xy <- stats::aggregate(rep(1,length(stratum[,1])),by=list(stratum$tnr),sum)
                                               ^
NO COPY: R/BWI3_HR.R:3568:53: style: Commas should always have a space after.
  xy <- stats::aggregate(rep(1,length(stratum[,1])),by=list(stratum$tnr),sum)
                                                    ^
NO COPY: R/BWI3_HR.R:3568:55: style: Put spaces around all infix operators.
  xy <- stats::aggregate(rep(1,length(stratum[,1])),by=list(stratum$tnr),sum)
                                                     ~^~
NO COPY: R/BWI3_HR.R:3568:74: style: Commas should always have a space after.
  xy <- stats::aggregate(rep(1,length(stratum[,1])),by=list(stratum$tnr),sum)
                                                                         ^
NO COPY: R/BWI3_HR.R:3570:18: style: Commas should always have a space after.
  xy <- cbind(xy,stats::aggregate(ifelse(
                 ^
NO COPY: R/BWI3_HR.R:3571:19: style: Words within variable and function names should be separated by '_' rather than '.'.
                  wzp4.merkmale.s$ba==999,wzp4.merkmale.s$stfl/10000,0),
                  ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3571:37: style: Put spaces around all infix operators.
                  wzp4.merkmale.s$ba==999,wzp4.merkmale.s$stfl/10000,0),
                                   ~^~~
NO COPY: R/BWI3_HR.R:3571:43: style: Commas should always have a space after.
                  wzp4.merkmale.s$ba==999,wzp4.merkmale.s$stfl/10000,0),
                                          ^
NO COPY: R/BWI3_HR.R:3571:43: style: Words within variable and function names should be separated by '_' rather than '.'.
                  wzp4.merkmale.s$ba==999,wzp4.merkmale.s$stfl/10000,0),
                                          ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3571:63: style: Put spaces around all infix operators.
                  wzp4.merkmale.s$ba==999,wzp4.merkmale.s$stfl/10000,0),
                                                             ~^~
NO COPY: R/BWI3_HR.R:3571:70: style: Commas should always have a space after.
                  wzp4.merkmale.s$ba==999,wzp4.merkmale.s$stfl/10000,0),
                                                                     ^
NO COPY: R/BWI3_HR.R:3572:21: style: Put spaces around all infix operators.
                  by=list(wzp4.merkmale.s$tnr),sum)$x)
                   ~^~
NO COPY: R/BWI3_HR.R:3572:27: style: Words within variable and function names should be separated by '_' rather than '.'.
                  by=list(wzp4.merkmale.s$tnr),sum)$x)
                          ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3572:48: style: Commas should always have a space after.
                  by=list(wzp4.merkmale.s$tnr),sum)$x)
                                               ^
NO COPY: R/BWI3_HR.R:3573:1: style: lines should not be more than 80 characters.
  xy <- cbind(xy,stats::aggregate(ifelse(wzp4.merkmale.s$ba==998,wzp4.merkmale.s$stfl,0),
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3573:18: style: Commas should always have a space after.
  xy <- cbind(xy,stats::aggregate(ifelse(wzp4.merkmale.s$ba==998,wzp4.merkmale.s$stfl,0),
                 ^
NO COPY: R/BWI3_HR.R:3573:42: style: Words within variable and function names should be separated by '_' rather than '.'.
  xy <- cbind(xy,stats::aggregate(ifelse(wzp4.merkmale.s$ba==998,wzp4.merkmale.s$stfl,0),
                                         ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3573:60: style: Put spaces around all infix operators.
  xy <- cbind(xy,stats::aggregate(ifelse(wzp4.merkmale.s$ba==998,wzp4.merkmale.s$stfl,0),
                                                          ~^~~
NO COPY: R/BWI3_HR.R:3573:66: style: Commas should always have a space after.
  xy <- cbind(xy,stats::aggregate(ifelse(wzp4.merkmale.s$ba==998,wzp4.merkmale.s$stfl,0),
                                                                 ^
NO COPY: R/BWI3_HR.R:3573:66: style: Words within variable and function names should be separated by '_' rather than '.'.
  xy <- cbind(xy,stats::aggregate(ifelse(wzp4.merkmale.s$ba==998,wzp4.merkmale.s$stfl,0),
                                                                 ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3573:87: style: Commas should always have a space after.
  xy <- cbind(xy,stats::aggregate(ifelse(wzp4.merkmale.s$ba==998,wzp4.merkmale.s$stfl,0),
                                                                                      ^
NO COPY: R/BWI3_HR.R:3574:21: style: Put spaces around all infix operators.
                  by=list(wzp4.merkmale.s$tnr),sum)$x/10000)
                   ~^~
NO COPY: R/BWI3_HR.R:3574:27: style: Words within variable and function names should be separated by '_' rather than '.'.
                  by=list(wzp4.merkmale.s$tnr),sum)$x/10000)
                          ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3574:48: style: Commas should always have a space after.
                  by=list(wzp4.merkmale.s$tnr),sum)$x/10000)
                                               ^
NO COPY: R/BWI3_HR.R:3574:54: style: Put spaces around all infix operators.
                  by=list(wzp4.merkmale.s$tnr),sum)$x/10000)
                                                    ~^~
NO COPY: R/BWI3_HR.R:3575:24: style: Commas should always have a space after.
  names(xy) <- c("tnr","hbf","bl","ibl")
                       ^
NO COPY: R/BWI3_HR.R:3575:30: style: Commas should always have a space after.
  names(xy) <- c("tnr","hbf","bl","ibl")
                             ^
NO COPY: R/BWI3_HR.R:3575:35: style: Commas should always have a space after.
  names(xy) <- c("tnr","hbf","bl","ibl")
                                  ^
NO COPY: R/BWI3_HR.R:3576:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  n.t.s <- length(xy[,1])
  ^~~~~
NO COPY: R/BWI3_HR.R:3576:3: warning: local variable 'n.t.s' assigned but may not be used
  n.t.s <- length(xy[,1])
  ^~~~~
NO COPY: R/BWI3_HR.R:3576:23: style: Commas should always have a space after.
  n.t.s <- length(xy[,1])
                      ^
NO COPY: R/BWI3_HR.R:3580:22: style: Put spaces around all infix operators.
  xy$hbf.ba <- xy$hbf-xy$bl-xy$ibl
                    ~^~
NO COPY: R/BWI3_HR.R:3580:28: style: Put spaces around all infix operators.
  xy$hbf.ba <- xy$hbf-xy$bl-xy$ibl
                          ~^~
NO COPY: R/BWI3_HR.R:3582:4: style: Commented code should be removed.
  #HBFl. [ha]
   ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:3583:9: style: Use <-, not =, for assignment.
  r.list= r.variance.fun(xy[TRUE, c("m", "hbf")], nT)
        ^
NO COPY: R/BWI3_HR.R:3583:9: style: Put spaces around all infix operators.
  r.list= r.variance.fun(xy[TRUE, c("m", "hbf")], nT)
       ~^
NO COPY: R/BWI3_HR.R:3584:23: style: Put spaces around all infix operators.
  T.hbf <- r.list$R.xy*A
                     ~^~
NO COPY: R/BWI3_HR.R:3585:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  se.T.hbf <- sqrt(r.list$V.R.xy)*A
  ^~~~~~~~
NO COPY: R/BWI3_HR.R:3585:27: style: Words within variable and function names should be separated by '_' rather than '.'.
  se.T.hbf <- sqrt(r.list$V.R.xy)*A
                          ^~~~~~
NO COPY: R/BWI3_HR.R:3585:34: style: Put spaces around all infix operators.
  se.T.hbf <- sqrt(r.list$V.R.xy)*A
                                ~^~
NO COPY: R/BWI3_HR.R:3588:22: style: Put spaces around all infix operators.
  T.bl <- r.list$R.xy*A
                    ~^~
NO COPY: R/BWI3_HR.R:3589:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  se.T.bl <- sqrt(r.list$V.R.xy)*A
  ^~~~~~~
NO COPY: R/BWI3_HR.R:3589:26: style: Words within variable and function names should be separated by '_' rather than '.'.
  se.T.bl <- sqrt(r.list$V.R.xy)*A
                         ^~~~~~
NO COPY: R/BWI3_HR.R:3589:33: style: Put spaces around all infix operators.
  se.T.bl <- sqrt(r.list$V.R.xy)*A
                               ~^~
NO COPY: R/BWI3_HR.R:3592:23: style: Put spaces around all infix operators.
  T.ibl <- r.list$R.xy*A
                     ~^~
NO COPY: R/BWI3_HR.R:3593:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  se.T.ibl <- sqrt(r.list$V.R.xy)*A
  ^~~~~~~~
NO COPY: R/BWI3_HR.R:3593:27: style: Words within variable and function names should be separated by '_' rather than '.'.
  se.T.ibl <- sqrt(r.list$V.R.xy)*A
                          ^~~~~~
NO COPY: R/BWI3_HR.R:3593:34: style: Put spaces around all infix operators.
  se.T.ibl <- sqrt(r.list$V.R.xy)*A
                                ~^~
NO COPY: R/BWI3_HR.R:3597:24: style: Words within variable and function names should be separated by '_' rather than '.'.
  se.lk <- sqrt(r.list$V.R.xy)
                       ^~~~~~
NO COPY: R/BWI3_HR.R:3600:1: style: lines should not be more than 80 characters.
  biotop.t <- stats::aggregate(ifelse(wzp4.merkmale.s$biotopb>0&wzp4.merkmale.s$pk<=1,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3600:39: style: Words within variable and function names should be separated by '_' rather than '.'.
  biotop.t <- stats::aggregate(ifelse(wzp4.merkmale.s$biotopb>0&wzp4.merkmale.s$pk<=1,
                                      ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3600:62: style: Put spaces around all infix operators.
  biotop.t <- stats::aggregate(ifelse(wzp4.merkmale.s$biotopb>0&wzp4.merkmale.s$pk<=1,
                                                            ~^~
NO COPY: R/BWI3_HR.R:3600:64: style: Put spaces around all infix operators.
  biotop.t <- stats::aggregate(ifelse(wzp4.merkmale.s$biotopb>0&wzp4.merkmale.s$pk<=1,
                                                              ~^~
NO COPY: R/BWI3_HR.R:3600:65: style: Words within variable and function names should be separated by '_' rather than '.'.
  biotop.t <- stats::aggregate(ifelse(wzp4.merkmale.s$biotopb>0&wzp4.merkmale.s$pk<=1,
                                                                ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3600:83: style: Put spaces around all infix operators.
  biotop.t <- stats::aggregate(ifelse(wzp4.merkmale.s$biotopb>0&wzp4.merkmale.s$pk<=1,
                                                                                 ~^~~
NO COPY: R/BWI3_HR.R:3601:25: style: Words within variable and function names should be separated by '_' rather than '.'.
                        wzp4.merkmale.s$nha,0),by=list(wzp4.merkmale.s$tnr),sum)
                        ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3601:45: style: Commas should always have a space after.
                        wzp4.merkmale.s$nha,0),by=list(wzp4.merkmale.s$tnr),sum)
                                            ^
NO COPY: R/BWI3_HR.R:3601:48: style: Commas should always have a space after.
                        wzp4.merkmale.s$nha,0),by=list(wzp4.merkmale.s$tnr),sum)
                                               ^
NO COPY: R/BWI3_HR.R:3601:50: style: Put spaces around all infix operators.
                        wzp4.merkmale.s$nha,0),by=list(wzp4.merkmale.s$tnr),sum)
                                                ~^~
NO COPY: R/BWI3_HR.R:3601:56: style: Words within variable and function names should be separated by '_' rather than '.'.
                        wzp4.merkmale.s$nha,0),by=list(wzp4.merkmale.s$tnr),sum)
                                                       ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3601:77: style: Commas should always have a space after.
                        wzp4.merkmale.s$nha,0),by=list(wzp4.merkmale.s$tnr),sum)
                                                                            ^
NO COPY: R/BWI3_HR.R:3603:30: style: Commas should always have a space after.
  biotop.t <- cbind(biotop.t,stats::aggregate(ifelse(wzp4.merkmale.s$biotopb>0
                             ^
NO COPY: R/BWI3_HR.R:3603:54: style: Words within variable and function names should be separated by '_' rather than '.'.
  biotop.t <- cbind(biotop.t,stats::aggregate(ifelse(wzp4.merkmale.s$biotopb>0
                                                     ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3603:77: style: Put spaces around all infix operators.
  biotop.t <- cbind(biotop.t,stats::aggregate(ifelse(wzp4.merkmale.s$biotopb>0
                                                                           ~^~
NO COPY: R/BWI3_HR.R:3604:15: style: Put spaces around all infix operators.
              &wzp4.merkmale.s$pk<=1,
              ^~
NO COPY: R/BWI3_HR.R:3604:16: style: Words within variable and function names should be separated by '_' rather than '.'.
              &wzp4.merkmale.s$pk<=1,
               ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3604:34: style: Put spaces around all infix operators.
              &wzp4.merkmale.s$pk<=1,
                                ~^~~
NO COPY: R/BWI3_HR.R:3605:15: style: Words within variable and function names should be separated by '_' rather than '.'.
              wzp4.merkmale.s$nha*wzp4.merkmale.s$volv,0),
              ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3605:34: style: Put spaces around all infix operators.
              wzp4.merkmale.s$nha*wzp4.merkmale.s$volv,0),
                                ~^~
NO COPY: R/BWI3_HR.R:3605:35: style: Words within variable and function names should be separated by '_' rather than '.'.
              wzp4.merkmale.s$nha*wzp4.merkmale.s$volv,0),
                                  ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3605:56: style: Commas should always have a space after.
              wzp4.merkmale.s$nha*wzp4.merkmale.s$volv,0),
                                                       ^
NO COPY: R/BWI3_HR.R:3606:17: style: Put spaces around all infix operators.
              by=list(wzp4.merkmale.s$tnr),sum)$x)
               ~^~
NO COPY: R/BWI3_HR.R:3606:23: style: Words within variable and function names should be separated by '_' rather than '.'.
              by=list(wzp4.merkmale.s$tnr),sum)$x)
                      ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3606:44: style: Commas should always have a space after.
              by=list(wzp4.merkmale.s$tnr),sum)$x)
                                           ^
NO COPY: R/BWI3_HR.R:3607:1: style: Trailing whitespace is superfluous.
              
^~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3609:30: style: Commas should always have a space after.
  biotop.t <- cbind(biotop.t,stats::aggregate(ifelse(wzp4.merkmale.s$biotopb>0
                             ^
NO COPY: R/BWI3_HR.R:3609:54: style: Words within variable and function names should be separated by '_' rather than '.'.
  biotop.t <- cbind(biotop.t,stats::aggregate(ifelse(wzp4.merkmale.s$biotopb>0
                                                     ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3609:77: style: Put spaces around all infix operators.
  biotop.t <- cbind(biotop.t,stats::aggregate(ifelse(wzp4.merkmale.s$biotopb>0
                                                                           ~^~
NO COPY: R/BWI3_HR.R:3610:15: style: Put spaces around all infix operators.
              &wzp4.merkmale.s$pk<=1,
              ^~
NO COPY: R/BWI3_HR.R:3610:16: style: Words within variable and function names should be separated by '_' rather than '.'.
              &wzp4.merkmale.s$pk<=1,
               ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3610:34: style: Put spaces around all infix operators.
              &wzp4.merkmale.s$pk<=1,
                                ~^~~
NO COPY: R/BWI3_HR.R:3611:15: style: Words within variable and function names should be separated by '_' rather than '.'.
              wzp4.merkmale.s$nha*wzp4.merkmale.s$oib,0),
              ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3611:34: style: Put spaces around all infix operators.
              wzp4.merkmale.s$nha*wzp4.merkmale.s$oib,0),
                                ~^~
NO COPY: R/BWI3_HR.R:3611:35: style: Words within variable and function names should be separated by '_' rather than '.'.
              wzp4.merkmale.s$nha*wzp4.merkmale.s$oib,0),
                                  ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3611:55: style: Commas should always have a space after.
              wzp4.merkmale.s$nha*wzp4.merkmale.s$oib,0),
                                                      ^
NO COPY: R/BWI3_HR.R:3612:17: style: Put spaces around all infix operators.
              by=list(wzp4.merkmale.s$tnr),sum)$x)
               ~^~
NO COPY: R/BWI3_HR.R:3612:23: style: Words within variable and function names should be separated by '_' rather than '.'.
              by=list(wzp4.merkmale.s$tnr),sum)$x)
                      ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3612:44: style: Commas should always have a space after.
              by=list(wzp4.merkmale.s$tnr),sum)$x)
                                           ^
NO COPY: R/BWI3_HR.R:3615:30: style: Commas should always have a space after.
  biotop.t <- cbind(biotop.t,stats::aggregate(ifelse(
                             ^
NO COPY: R/BWI3_HR.R:3616:15: style: Words within variable and function names should be separated by '_' rather than '.'.
              wzp4.merkmale.s$biotopb>0&wzp4.merkmale.s$bhd>=50
              ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3616:38: style: Put spaces around all infix operators.
              wzp4.merkmale.s$biotopb>0&wzp4.merkmale.s$bhd>=50
                                    ~^~
NO COPY: R/BWI3_HR.R:3616:40: style: Put spaces around all infix operators.
              wzp4.merkmale.s$biotopb>0&wzp4.merkmale.s$bhd>=50
                                      ~^~
NO COPY: R/BWI3_HR.R:3616:41: style: Words within variable and function names should be separated by '_' rather than '.'.
              wzp4.merkmale.s$biotopb>0&wzp4.merkmale.s$bhd>=50
                                        ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3616:60: style: Put spaces around all infix operators.
              wzp4.merkmale.s$biotopb>0&wzp4.merkmale.s$bhd>=50
                                                          ~^~~
NO COPY: R/BWI3_HR.R:3617:15: style: Put spaces around all infix operators.
              &wzp4.merkmale.s$pk<=1,
              ^~
NO COPY: R/BWI3_HR.R:3617:16: style: Words within variable and function names should be separated by '_' rather than '.'.
              &wzp4.merkmale.s$pk<=1,
               ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3617:34: style: Put spaces around all infix operators.
              &wzp4.merkmale.s$pk<=1,
                                ~^~~
NO COPY: R/BWI3_HR.R:3618:15: style: Words within variable and function names should be separated by '_' rather than '.'.
              wzp4.merkmale.s$nha*wzp4.merkmale.s$volv,0),
              ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3618:34: style: Put spaces around all infix operators.
              wzp4.merkmale.s$nha*wzp4.merkmale.s$volv,0),
                                ~^~
NO COPY: R/BWI3_HR.R:3618:35: style: Words within variable and function names should be separated by '_' rather than '.'.
              wzp4.merkmale.s$nha*wzp4.merkmale.s$volv,0),
                                  ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3618:56: style: Commas should always have a space after.
              wzp4.merkmale.s$nha*wzp4.merkmale.s$volv,0),
                                                       ^
NO COPY: R/BWI3_HR.R:3619:17: style: Put spaces around all infix operators.
              by=list(wzp4.merkmale.s$tnr),sum)$x)
               ~^~
NO COPY: R/BWI3_HR.R:3619:23: style: Words within variable and function names should be separated by '_' rather than '.'.
              by=list(wzp4.merkmale.s$tnr),sum)$x)
                      ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3619:44: style: Commas should always have a space after.
              by=list(wzp4.merkmale.s$tnr),sum)$x)
                                           ^
NO COPY: R/BWI3_HR.R:3621:4: style: Commented code should be removed.
  #LB-Vorrat
   ^~~~~~~~~
NO COPY: R/BWI3_HR.R:3622:30: style: Commas should always have a space after.
  biotop.t <- cbind(biotop.t,stats::aggregate(ifelse(
                             ^
NO COPY: R/BWI3_HR.R:3623:15: style: Words within variable and function names should be separated by '_' rather than '.'.
              wzp4.merkmale.s$biotopb>0&wzp4.merkmale.s$ba%in%c(100:299)
              ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3623:38: style: Put spaces around all infix operators.
              wzp4.merkmale.s$biotopb>0&wzp4.merkmale.s$ba%in%c(100:299)
                                    ~^~
NO COPY: R/BWI3_HR.R:3623:40: style: Put spaces around all infix operators.
              wzp4.merkmale.s$biotopb>0&wzp4.merkmale.s$ba%in%c(100:299)
                                      ~^~
NO COPY: R/BWI3_HR.R:3623:41: style: Words within variable and function names should be separated by '_' rather than '.'.
              wzp4.merkmale.s$biotopb>0&wzp4.merkmale.s$ba%in%c(100:299)
                                        ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3623:59: style: Put spaces around all infix operators.
              wzp4.merkmale.s$biotopb>0&wzp4.merkmale.s$ba%in%c(100:299)
                                                         ~^~~~~
NO COPY: R/BWI3_HR.R:3624:15: style: Put spaces around all infix operators.
              &wzp4.merkmale.s$pk<=1,
              ^~
NO COPY: R/BWI3_HR.R:3624:16: style: Words within variable and function names should be separated by '_' rather than '.'.
              &wzp4.merkmale.s$pk<=1,
               ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3624:34: style: Put spaces around all infix operators.
              &wzp4.merkmale.s$pk<=1,
                                ~^~~
NO COPY: R/BWI3_HR.R:3625:15: style: Words within variable and function names should be separated by '_' rather than '.'.
              wzp4.merkmale.s$nha*wzp4.merkmale.s$volv,0),
              ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3625:34: style: Put spaces around all infix operators.
              wzp4.merkmale.s$nha*wzp4.merkmale.s$volv,0),
                                ~^~
NO COPY: R/BWI3_HR.R:3625:35: style: Words within variable and function names should be separated by '_' rather than '.'.
              wzp4.merkmale.s$nha*wzp4.merkmale.s$volv,0),
                                  ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3625:56: style: Commas should always have a space after.
              wzp4.merkmale.s$nha*wzp4.merkmale.s$volv,0),
                                                       ^
NO COPY: R/BWI3_HR.R:3626:17: style: Put spaces around all infix operators.
              by=list(wzp4.merkmale.s$tnr),sum)$x)
               ~^~
NO COPY: R/BWI3_HR.R:3626:23: style: Words within variable and function names should be separated by '_' rather than '.'.
              by=list(wzp4.merkmale.s$tnr),sum)$x)
                      ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3626:44: style: Commas should always have a space after.
              by=list(wzp4.merkmale.s$tnr),sum)$x)
                                           ^
NO COPY: R/BWI3_HR.R:3628:4: style: Commented code should be removed.
  #NB-Vorrat
   ^~~~~~~~~
NO COPY: R/BWI3_HR.R:3629:30: style: Commas should always have a space after.
  biotop.t <- cbind(biotop.t,stats::aggregate(ifelse(
                             ^
NO COPY: R/BWI3_HR.R:3630:15: style: Words within variable and function names should be separated by '_' rather than '.'.
              wzp4.merkmale.s$biotopb>0&wzp4.merkmale.s$ba%in%c(10:99)
              ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3630:38: style: Put spaces around all infix operators.
              wzp4.merkmale.s$biotopb>0&wzp4.merkmale.s$ba%in%c(10:99)
                                    ~^~
NO COPY: R/BWI3_HR.R:3630:40: style: Put spaces around all infix operators.
              wzp4.merkmale.s$biotopb>0&wzp4.merkmale.s$ba%in%c(10:99)
                                      ~^~
NO COPY: R/BWI3_HR.R:3630:41: style: Words within variable and function names should be separated by '_' rather than '.'.
              wzp4.merkmale.s$biotopb>0&wzp4.merkmale.s$ba%in%c(10:99)
                                        ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3630:59: style: Put spaces around all infix operators.
              wzp4.merkmale.s$biotopb>0&wzp4.merkmale.s$ba%in%c(10:99)
                                                         ~^~~~~
NO COPY: R/BWI3_HR.R:3631:15: style: Put spaces around all infix operators.
              &wzp4.merkmale.s$pk<=1,
              ^~
NO COPY: R/BWI3_HR.R:3631:16: style: Words within variable and function names should be separated by '_' rather than '.'.
              &wzp4.merkmale.s$pk<=1,
               ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3631:34: style: Put spaces around all infix operators.
              &wzp4.merkmale.s$pk<=1,
                                ~^~~
NO COPY: R/BWI3_HR.R:3632:15: style: Words within variable and function names should be separated by '_' rather than '.'.
              wzp4.merkmale.s$nha*wzp4.merkmale.s$volv,0),
              ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3632:34: style: Put spaces around all infix operators.
              wzp4.merkmale.s$nha*wzp4.merkmale.s$volv,0),
                                ~^~
NO COPY: R/BWI3_HR.R:3632:35: style: Words within variable and function names should be separated by '_' rather than '.'.
              wzp4.merkmale.s$nha*wzp4.merkmale.s$volv,0),
                                  ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3632:56: style: Commas should always have a space after.
              wzp4.merkmale.s$nha*wzp4.merkmale.s$volv,0),
                                                       ^
NO COPY: R/BWI3_HR.R:3633:17: style: Put spaces around all infix operators.
              by=list(wzp4.merkmale.s$tnr),sum)$x)
               ~^~
NO COPY: R/BWI3_HR.R:3633:23: style: Words within variable and function names should be separated by '_' rather than '.'.
              by=list(wzp4.merkmale.s$tnr),sum)$x)
                      ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3633:44: style: Commas should always have a space after.
              by=list(wzp4.merkmale.s$tnr),sum)$x)
                                           ^
NO COPY: R/BWI3_HR.R:3637:30: style: Commas should always have a space after.
  names(biotop.t) <- c("tnr","N.BB","V.BB","oiB.BB","SthV.BB","V.BB.LB",
                             ^
NO COPY: R/BWI3_HR.R:3637:37: style: Commas should always have a space after.
  names(biotop.t) <- c("tnr","N.BB","V.BB","oiB.BB","SthV.BB","V.BB.LB",
                                    ^
NO COPY: R/BWI3_HR.R:3637:44: style: Commas should always have a space after.
  names(biotop.t) <- c("tnr","N.BB","V.BB","oiB.BB","SthV.BB","V.BB.LB",
                                           ^
NO COPY: R/BWI3_HR.R:3637:53: style: Commas should always have a space after.
  names(biotop.t) <- c("tnr","N.BB","V.BB","oiB.BB","SthV.BB","V.BB.LB",
                                                    ^
NO COPY: R/BWI3_HR.R:3637:63: style: Commas should always have a space after.
  names(biotop.t) <- c("tnr","N.BB","V.BB","oiB.BB","SthV.BB","V.BB.LB",
                                                              ^
NO COPY: R/BWI3_HR.R:3641:52: style: Trailing whitespace is superfluous.
  biotop.t <- merge(xy[TRUE, c("tnr", "m", "hbf")], 
                                                   ^
NO COPY: R/BWI3_HR.R:3642:30: style: Trailing whitespace is superfluous.
                    biotop.t, 
                             ^
NO COPY: R/BWI3_HR.R:3644:26: style: Put spaces around all infix operators.
                    all.x=T)
                        ~^~
NO COPY: R/BWI3_HR.R:3647:23: style: Commas should always have a space after.
  n <- length(trakte[,1])
                      ^
NO COPY: R/BWI3_HR.R:3649:43: style: Commas should always have a space after.
  R.xy <- r.variance.fun(cbind(biotop.t$m,biotop.t$N.BB),n)
                                          ^
NO COPY: R/BWI3_HR.R:3649:58: style: Commas should always have a space after.
  R.xy <- r.variance.fun(cbind(biotop.t$m,biotop.t$N.BB),n)
                                                         ^
NO COPY: R/BWI3_HR.R:3650:4: style: Words within variable and function names should be separated by '_' rather than '.'.
  (T.N.BB <- R.xy$R.xy*A)
   ^~~~~~
NO COPY: R/BWI3_HR.R:3650:23: style: Put spaces around all infix operators.
  (T.N.BB <- R.xy$R.xy*A)
                     ~^~
NO COPY: R/BWI3_HR.R:3651:4: style: Words within variable and function names should be separated by '_' rather than '.'.
  (se.T.N.BB <- R.xy$V.R.xy^0.5*A)
   ^~~~~~~~~
NO COPY: R/BWI3_HR.R:3651:22: style: Words within variable and function names should be separated by '_' rather than '.'.
  (se.T.N.BB <- R.xy$V.R.xy^0.5*A)
                     ^~~~~~
NO COPY: R/BWI3_HR.R:3651:28: style: Put spaces around all infix operators.
  (se.T.N.BB <- R.xy$V.R.xy^0.5*A)
                          ~^~
NO COPY: R/BWI3_HR.R:3651:32: style: Put spaces around all infix operators.
  (se.T.N.BB <- R.xy$V.R.xy^0.5*A)
                              ~^~
NO COPY: R/BWI3_HR.R:3654:45: style: Commas should always have a space after.
  R.xy <- r.variance.fun(cbind(biotop.t$hbf,biotop.t$N.BB),n)
                                            ^
NO COPY: R/BWI3_HR.R:3654:60: style: Commas should always have a space after.
  R.xy <- r.variance.fun(cbind(biotop.t$hbf,biotop.t$N.BB),n)
                                                           ^
NO COPY: R/BWI3_HR.R:3655:4: style: Words within variable and function names should be separated by '_' rather than '.'.
  (N.BB.ha <- R.xy$R.xy)
   ^~~~~~~
NO COPY: R/BWI3_HR.R:3656:4: style: Words within variable and function names should be separated by '_' rather than '.'.
  (se.N.BB.ha <- R.xy$V.R.xy^0.5)
   ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:3656:23: style: Words within variable and function names should be separated by '_' rather than '.'.
  (se.N.BB.ha <- R.xy$V.R.xy^0.5)
                      ^~~~~~
NO COPY: R/BWI3_HR.R:3656:29: style: Put spaces around all infix operators.
  (se.N.BB.ha <- R.xy$V.R.xy^0.5)
                           ~^~
NO COPY: R/BWI3_HR.R:3659:43: style: Commas should always have a space after.
  R.xy <- r.variance.fun(cbind(biotop.t$m,biotop.t$V.BB),n)
                                          ^
NO COPY: R/BWI3_HR.R:3659:58: style: Commas should always have a space after.
  R.xy <- r.variance.fun(cbind(biotop.t$m,biotop.t$V.BB),n)
                                                         ^
NO COPY: R/BWI3_HR.R:3660:4: style: Words within variable and function names should be separated by '_' rather than '.'.
  (T.V.BB <- R.xy$R.xy*A)
   ^~~~~~
NO COPY: R/BWI3_HR.R:3660:23: style: Put spaces around all infix operators.
  (T.V.BB <- R.xy$R.xy*A)
                     ~^~
NO COPY: R/BWI3_HR.R:3661:4: style: Words within variable and function names should be separated by '_' rather than '.'.
  (se.T.V.BB <- R.xy$V.R.xy^0.5*A)
   ^~~~~~~~~
NO COPY: R/BWI3_HR.R:3661:22: style: Words within variable and function names should be separated by '_' rather than '.'.
  (se.T.V.BB <- R.xy$V.R.xy^0.5*A)
                     ^~~~~~
NO COPY: R/BWI3_HR.R:3661:28: style: Put spaces around all infix operators.
  (se.T.V.BB <- R.xy$V.R.xy^0.5*A)
                          ~^~
NO COPY: R/BWI3_HR.R:3661:32: style: Put spaces around all infix operators.
  (se.T.V.BB <- R.xy$V.R.xy^0.5*A)
                              ~^~
NO COPY: R/BWI3_HR.R:3664:45: style: Commas should always have a space after.
  R.xy <- r.variance.fun(cbind(biotop.t$hbf,biotop.t$V.BB),n)
                                            ^
NO COPY: R/BWI3_HR.R:3664:60: style: Commas should always have a space after.
  R.xy <- r.variance.fun(cbind(biotop.t$hbf,biotop.t$V.BB),n)
                                                           ^
NO COPY: R/BWI3_HR.R:3665:4: style: Words within variable and function names should be separated by '_' rather than '.'.
  (V.BB.ha <- R.xy$R.xy)
   ^~~~~~~
NO COPY: R/BWI3_HR.R:3666:4: style: Words within variable and function names should be separated by '_' rather than '.'.
  (se.V.BB.ha <- R.xy$V.R.xy^0.5)
   ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:3666:23: style: Words within variable and function names should be separated by '_' rather than '.'.
  (se.V.BB.ha <- R.xy$V.R.xy^0.5)
                      ^~~~~~
NO COPY: R/BWI3_HR.R:3666:29: style: Put spaces around all infix operators.
  (se.V.BB.ha <- R.xy$V.R.xy^0.5)
                           ~^~
NO COPY: R/BWI3_HR.R:3669:46: style: Commas should always have a space after.
  R.xy <- r.variance.fun(cbind(biotop.t$N.BB,biotop.t$V.BB),n)
                                             ^
NO COPY: R/BWI3_HR.R:3669:61: style: Commas should always have a space after.
  R.xy <- r.variance.fun(cbind(biotop.t$N.BB,biotop.t$V.BB),n)
                                                            ^
NO COPY: R/BWI3_HR.R:3670:4: style: Words within variable and function names should be separated by '_' rather than '.'.
  (V.BB.Stck <- R.xy$R.xy)
   ^~~~~~~~~
NO COPY: R/BWI3_HR.R:3671:4: style: Words within variable and function names should be separated by '_' rather than '.'.
  (se.V.BB.Stck <- R.xy$V.R.xy^0.5)
   ^~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3671:25: style: Words within variable and function names should be separated by '_' rather than '.'.
  (se.V.BB.Stck <- R.xy$V.R.xy^0.5)
                        ^~~~~~
NO COPY: R/BWI3_HR.R:3671:31: style: Put spaces around all infix operators.
  (se.V.BB.Stck <- R.xy$V.R.xy^0.5)
                             ~^~
NO COPY: R/BWI3_HR.R:3674:43: style: Commas should always have a space after.
  R.xy <- r.variance.fun(cbind(biotop.t$m,biotop.t$V.BB.LB),n)
                                          ^
NO COPY: R/BWI3_HR.R:3674:52: style: Words within variable and function names should be separated by '_' rather than '.'.
  R.xy <- r.variance.fun(cbind(biotop.t$m,biotop.t$V.BB.LB),n)
                                                   ^~~~~~~
NO COPY: R/BWI3_HR.R:3674:61: style: Commas should always have a space after.
  R.xy <- r.variance.fun(cbind(biotop.t$m,biotop.t$V.BB.LB),n)
                                                            ^
NO COPY: R/BWI3_HR.R:3675:4: style: Words within variable and function names should be separated by '_' rather than '.'.
  (T.V.BB.LB <- R.xy$R.xy*A)
   ^~~~~~~~~
NO COPY: R/BWI3_HR.R:3675:26: style: Put spaces around all infix operators.
  (T.V.BB.LB <- R.xy$R.xy*A)
                        ~^~
NO COPY: R/BWI3_HR.R:3676:4: style: Words within variable and function names should be separated by '_' rather than '.'.
  (se.T.V.BB.LB <- R.xy$V.R.xy^0.5*A)
   ^~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3676:25: style: Words within variable and function names should be separated by '_' rather than '.'.
  (se.T.V.BB.LB <- R.xy$V.R.xy^0.5*A)
                        ^~~~~~
NO COPY: R/BWI3_HR.R:3676:31: style: Put spaces around all infix operators.
  (se.T.V.BB.LB <- R.xy$V.R.xy^0.5*A)
                             ~^~
NO COPY: R/BWI3_HR.R:3676:35: style: Put spaces around all infix operators.
  (se.T.V.BB.LB <- R.xy$V.R.xy^0.5*A)
                                 ~^~
NO COPY: R/BWI3_HR.R:3679:45: style: Commas should always have a space after.
  R.xy <- r.variance.fun(cbind(biotop.t$hbf,biotop.t$V.BB.LB),n)
                                            ^
NO COPY: R/BWI3_HR.R:3679:54: style: Words within variable and function names should be separated by '_' rather than '.'.
  R.xy <- r.variance.fun(cbind(biotop.t$hbf,biotop.t$V.BB.LB),n)
                                                     ^~~~~~~
NO COPY: R/BWI3_HR.R:3679:63: style: Commas should always have a space after.
  R.xy <- r.variance.fun(cbind(biotop.t$hbf,biotop.t$V.BB.LB),n)
                                                              ^
NO COPY: R/BWI3_HR.R:3680:4: style: Words within variable and function names should be separated by '_' rather than '.'.
  (V.BB.LB.ha <- R.xy$R.xy)
   ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:3681:4: style: Words within variable and function names should be separated by '_' rather than '.'.
  (se.V.BB.LB.ha <- R.xy$V.R.xy^0.5)
   ^~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3681:26: style: Words within variable and function names should be separated by '_' rather than '.'.
  (se.V.BB.LB.ha <- R.xy$V.R.xy^0.5)
                         ^~~~~~
NO COPY: R/BWI3_HR.R:3681:32: style: Put spaces around all infix operators.
  (se.V.BB.LB.ha <- R.xy$V.R.xy^0.5)
                              ~^~
NO COPY: R/BWI3_HR.R:3684:43: style: Commas should always have a space after.
  R.xy <- r.variance.fun(cbind(biotop.t$m,biotop.t$V.BB.NB),n)
                                          ^
NO COPY: R/BWI3_HR.R:3684:52: style: Words within variable and function names should be separated by '_' rather than '.'.
  R.xy <- r.variance.fun(cbind(biotop.t$m,biotop.t$V.BB.NB),n)
                                                   ^~~~~~~
NO COPY: R/BWI3_HR.R:3684:61: style: Commas should always have a space after.
  R.xy <- r.variance.fun(cbind(biotop.t$m,biotop.t$V.BB.NB),n)
                                                            ^
NO COPY: R/BWI3_HR.R:3685:4: style: Words within variable and function names should be separated by '_' rather than '.'.
  (T.V.BB.NB <- R.xy$R.xy*A)
   ^~~~~~~~~
NO COPY: R/BWI3_HR.R:3685:26: style: Put spaces around all infix operators.
  (T.V.BB.NB <- R.xy$R.xy*A)
                        ~^~
NO COPY: R/BWI3_HR.R:3686:4: style: Words within variable and function names should be separated by '_' rather than '.'.
  (se.T.V.BB.NB <- R.xy$V.R.xy^0.5*A)
   ^~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3686:25: style: Words within variable and function names should be separated by '_' rather than '.'.
  (se.T.V.BB.NB <- R.xy$V.R.xy^0.5*A)
                        ^~~~~~
NO COPY: R/BWI3_HR.R:3686:31: style: Put spaces around all infix operators.
  (se.T.V.BB.NB <- R.xy$V.R.xy^0.5*A)
                             ~^~
NO COPY: R/BWI3_HR.R:3686:35: style: Put spaces around all infix operators.
  (se.T.V.BB.NB <- R.xy$V.R.xy^0.5*A)
                                 ~^~
NO COPY: R/BWI3_HR.R:3689:45: style: Commas should always have a space after.
  R.xy <- r.variance.fun(cbind(biotop.t$hbf,biotop.t$V.BB.NB),n)
                                            ^
NO COPY: R/BWI3_HR.R:3689:54: style: Words within variable and function names should be separated by '_' rather than '.'.
  R.xy <- r.variance.fun(cbind(biotop.t$hbf,biotop.t$V.BB.NB),n)
                                                     ^~~~~~~
NO COPY: R/BWI3_HR.R:3689:63: style: Commas should always have a space after.
  R.xy <- r.variance.fun(cbind(biotop.t$hbf,biotop.t$V.BB.NB),n)
                                                              ^
NO COPY: R/BWI3_HR.R:3690:4: style: Words within variable and function names should be separated by '_' rather than '.'.
  (V.BB.NB.ha <- R.xy$R.xy)
   ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:3691:4: style: Words within variable and function names should be separated by '_' rather than '.'.
  (se.V.BB.NB.ha <- R.xy$V.R.xy^0.5)
   ^~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3691:26: style: Words within variable and function names should be separated by '_' rather than '.'.
  (se.V.BB.NB.ha <- R.xy$V.R.xy^0.5)
                         ^~~~~~
NO COPY: R/BWI3_HR.R:3691:32: style: Put spaces around all infix operators.
  (se.V.BB.NB.ha <- R.xy$V.R.xy^0.5)
                              ~^~
NO COPY: R/BWI3_HR.R:3692:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: R/BWI3_HR.R:3694:43: style: Commas should always have a space after.
  R.xy <- r.variance.fun(cbind(biotop.t$m,biotop.t$oiB.BB),n)
                                          ^
NO COPY: R/BWI3_HR.R:3694:52: style: Variable and function names should be all lowercase.
  R.xy <- r.variance.fun(cbind(biotop.t$m,biotop.t$oiB.BB),n)
                                                   ^~~~~~
NO COPY: R/BWI3_HR.R:3694:60: style: Commas should always have a space after.
  R.xy <- r.variance.fun(cbind(biotop.t$m,biotop.t$oiB.BB),n)
                                                           ^
NO COPY: R/BWI3_HR.R:3695:4: style: Variable and function names should be all lowercase.
  (T.oiB.BB <- R.xy$R.xy*A/1000)
   ^~~~~~~~
NO COPY: R/BWI3_HR.R:3695:4: style: Words within variable and function names should be separated by '_' rather than '.'.
  (T.oiB.BB <- R.xy$R.xy*A/1000)
   ^~~~~~~~
NO COPY: R/BWI3_HR.R:3695:25: style: Put spaces around all infix operators.
  (T.oiB.BB <- R.xy$R.xy*A/1000)
                       ~^~
NO COPY: R/BWI3_HR.R:3695:27: style: Put spaces around all infix operators.
  (T.oiB.BB <- R.xy$R.xy*A/1000)
                         ~^~
NO COPY: R/BWI3_HR.R:3696:4: style: Variable and function names should be all lowercase.
  (se.T.oiB.BB <- R.xy$V.R.xy^0.5*A/1000)
   ^~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3696:4: style: Words within variable and function names should be separated by '_' rather than '.'.
  (se.T.oiB.BB <- R.xy$V.R.xy^0.5*A/1000)
   ^~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3696:24: style: Words within variable and function names should be separated by '_' rather than '.'.
  (se.T.oiB.BB <- R.xy$V.R.xy^0.5*A/1000)
                       ^~~~~~
NO COPY: R/BWI3_HR.R:3696:30: style: Put spaces around all infix operators.
  (se.T.oiB.BB <- R.xy$V.R.xy^0.5*A/1000)
                            ~^~
NO COPY: R/BWI3_HR.R:3696:34: style: Put spaces around all infix operators.
  (se.T.oiB.BB <- R.xy$V.R.xy^0.5*A/1000)
                                ~^~
NO COPY: R/BWI3_HR.R:3696:36: style: Put spaces around all infix operators.
  (se.T.oiB.BB <- R.xy$V.R.xy^0.5*A/1000)
                                  ~^~
NO COPY: R/BWI3_HR.R:3699:45: style: Commas should always have a space after.
  R.xy <- r.variance.fun(cbind(biotop.t$hbf,biotop.t$oiB.BB),n)
                                            ^
NO COPY: R/BWI3_HR.R:3699:54: style: Variable and function names should be all lowercase.
  R.xy <- r.variance.fun(cbind(biotop.t$hbf,biotop.t$oiB.BB),n)
                                                     ^~~~~~
NO COPY: R/BWI3_HR.R:3699:62: style: Commas should always have a space after.
  R.xy <- r.variance.fun(cbind(biotop.t$hbf,biotop.t$oiB.BB),n)
                                                             ^
NO COPY: R/BWI3_HR.R:3700:4: style: Variable and function names should be all lowercase.
  (oiB.BB.ha <- R.xy$R.xy/1000)
   ^~~~~~~~~
NO COPY: R/BWI3_HR.R:3700:4: style: Words within variable and function names should be separated by '_' rather than '.'.
  (oiB.BB.ha <- R.xy$R.xy/1000)
   ^~~~~~~~~
NO COPY: R/BWI3_HR.R:3700:26: style: Put spaces around all infix operators.
  (oiB.BB.ha <- R.xy$R.xy/1000)
                        ~^~
NO COPY: R/BWI3_HR.R:3701:4: style: Variable and function names should be all lowercase.
  (se.oiB.BB.ha <- R.xy$V.R.xy^0.5/1000)
   ^~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3701:4: style: Words within variable and function names should be separated by '_' rather than '.'.
  (se.oiB.BB.ha <- R.xy$V.R.xy^0.5/1000)
   ^~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3701:25: style: Words within variable and function names should be separated by '_' rather than '.'.
  (se.oiB.BB.ha <- R.xy$V.R.xy^0.5/1000)
                        ^~~~~~
NO COPY: R/BWI3_HR.R:3701:31: style: Put spaces around all infix operators.
  (se.oiB.BB.ha <- R.xy$V.R.xy^0.5/1000)
                             ~^~
NO COPY: R/BWI3_HR.R:3701:35: style: Put spaces around all infix operators.
  (se.oiB.BB.ha <- R.xy$V.R.xy^0.5/1000)
                                 ~^~
NO COPY: R/BWI3_HR.R:3703:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: R/BWI3_HR.R:3705:20: style: Commas should always have a space after.
  a <- regexpr("/",baeume$bemerk[baeume$stp==0][1],fixed=T)
                   ^
NO COPY: R/BWI3_HR.R:3705:44: style: Put spaces around all infix operators.
  a <- regexpr("/",baeume$bemerk[baeume$stp==0][1],fixed=T)
                                          ~^~~
NO COPY: R/BWI3_HR.R:3705:52: style: Commas should always have a space after.
  a <- regexpr("/",baeume$bemerk[baeume$stp==0][1],fixed=T)
                                                   ^
NO COPY: R/BWI3_HR.R:3705:57: style: Put spaces around all infix operators.
  a <- regexpr("/",baeume$bemerk[baeume$stp==0][1],fixed=T)
                                                       ~^~
NO COPY: R/BWI3_HR.R:3706:51: style: Put spaces around all infix operators.
  b <- nchar(as.character(baeume$bemerk[baeume$stp==0][1]))
                                                 ~^~~
NO COPY: R/BWI3_HR.R:3707:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  version.baeume.b  <- substr(as.character(baeume$bemerk[baeume$stp==0][1]),a,b)
  ^~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3707:3: warning: local variable 'version.baeume.b' assigned but may not be used
  version.baeume.b  <- substr(as.character(baeume$bemerk[baeume$stp==0][1]),a,b)
  ^~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3707:68: style: Put spaces around all infix operators.
  version.baeume.b  <- substr(as.character(baeume$bemerk[baeume$stp==0][1]),a,b)
                                                                  ~^~~
NO COPY: R/BWI3_HR.R:3707:77: style: Commas should always have a space after.
  version.baeume.b  <- substr(as.character(baeume$bemerk[baeume$stp==0][1]),a,b)
                                                                            ^
NO COPY: R/BWI3_HR.R:3707:79: style: Commas should always have a space after.
  version.baeume.b  <- substr(as.character(baeume$bemerk[baeume$stp==0][1]),a,b)
                                                                              ^
NO COPY: R/BWI3_HR.R:3708:20: style: Put spaces around all infix operators.
  Log <- list(Datum=Sys.time(),
                  ~^~
NO COPY: R/BWI3_HR.R:3709:1: style: lines should not be more than 80 characters.
      Version.baeume.b=substr(as.character(baeume$bemerk[baeume$stp==0][1]),a,b))
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3709:23: style: Put spaces around all infix operators.
      Version.baeume.b=substr(as.character(baeume$bemerk[baeume$stp==0][1]),a,b))
                     ~^~
NO COPY: R/BWI3_HR.R:3709:68: style: Put spaces around all infix operators.
      Version.baeume.b=substr(as.character(baeume$bemerk[baeume$stp==0][1]),a,b))
                                                                  ~^~~
NO COPY: R/BWI3_HR.R:3709:77: style: Commas should always have a space after.
      Version.baeume.b=substr(as.character(baeume$bemerk[baeume$stp==0][1]),a,b))
                                                                            ^
NO COPY: R/BWI3_HR.R:3709:79: style: Commas should always have a space after.
      Version.baeume.b=substr(as.character(baeume$bemerk[baeume$stp==0][1]),a,b))
                                                                              ^
NO COPY: R/BWI3_HR.R:3711:19: style: Put spaces around all infix operators.
  return( list(Log=Log, Stratum=auswahl, nTE=n.te.s, HBF=T.hbf, se.HBF=se.T.hbf,
                 ~^~
NO COPY: R/BWI3_HR.R:3711:32: style: Put spaces around all infix operators.
  return( list(Log=Log, Stratum=auswahl, nTE=n.te.s, HBF=T.hbf, se.HBF=se.T.hbf,
                              ~^~
NO COPY: R/BWI3_HR.R:3711:45: style: Put spaces around all infix operators.
  return( list(Log=Log, Stratum=auswahl, nTE=n.te.s, HBF=T.hbf, se.HBF=se.T.hbf,
                                           ~^~
NO COPY: R/BWI3_HR.R:3711:46: style: Words within variable and function names should be separated by '_' rather than '.'.
  return( list(Log=Log, Stratum=auswahl, nTE=n.te.s, HBF=T.hbf, se.HBF=se.T.hbf,
                                             ^~~~~~
NO COPY: R/BWI3_HR.R:3711:57: style: Put spaces around all infix operators.
  return( list(Log=Log, Stratum=auswahl, nTE=n.te.s, HBF=T.hbf, se.HBF=se.T.hbf,
                                                       ~^~
NO COPY: R/BWI3_HR.R:3711:71: style: Put spaces around all infix operators.
  return( list(Log=Log, Stratum=auswahl, nTE=n.te.s, HBF=T.hbf, se.HBF=se.T.hbf,
                                                                     ~^~
NO COPY: R/BWI3_HR.R:3711:72: style: Words within variable and function names should be separated by '_' rather than '.'.
  return( list(Log=Log, Stratum=auswahl, nTE=n.te.s, HBF=T.hbf, se.HBF=se.T.hbf,
                                                                       ^~~~~~~~
NO COPY: R/BWI3_HR.R:3712:17: style: Put spaces around all infix operators.
              BL=T.bl,se.BL=se.T.bl,iBL=T.ibl,se.iBL=se.T.ibl,LK=lk,se.LK=se.lk,
               ~^~
NO COPY: R/BWI3_HR.R:3712:23: style: Commas should always have a space after.
              BL=T.bl,se.BL=se.T.bl,iBL=T.ibl,se.iBL=se.T.ibl,LK=lk,se.LK=se.lk,
                      ^
NO COPY: R/BWI3_HR.R:3712:28: style: Put spaces around all infix operators.
              BL=T.bl,se.BL=se.T.bl,iBL=T.ibl,se.iBL=se.T.ibl,LK=lk,se.LK=se.lk,
                          ~^~
NO COPY: R/BWI3_HR.R:3712:29: style: Words within variable and function names should be separated by '_' rather than '.'.
              BL=T.bl,se.BL=se.T.bl,iBL=T.ibl,se.iBL=se.T.ibl,LK=lk,se.LK=se.lk,
                            ^~~~~~~
NO COPY: R/BWI3_HR.R:3712:37: style: Commas should always have a space after.
              BL=T.bl,se.BL=se.T.bl,iBL=T.ibl,se.iBL=se.T.ibl,LK=lk,se.LK=se.lk,
                                    ^
NO COPY: R/BWI3_HR.R:3712:40: style: Put spaces around all infix operators.
              BL=T.bl,se.BL=se.T.bl,iBL=T.ibl,se.iBL=se.T.ibl,LK=lk,se.LK=se.lk,
                                      ~^~
NO COPY: R/BWI3_HR.R:3712:47: style: Commas should always have a space after.
              BL=T.bl,se.BL=se.T.bl,iBL=T.ibl,se.iBL=se.T.ibl,LK=lk,se.LK=se.lk,
                                              ^
NO COPY: R/BWI3_HR.R:3712:53: style: Put spaces around all infix operators.
              BL=T.bl,se.BL=se.T.bl,iBL=T.ibl,se.iBL=se.T.ibl,LK=lk,se.LK=se.lk,
                                                   ~^~
NO COPY: R/BWI3_HR.R:3712:54: style: Words within variable and function names should be separated by '_' rather than '.'.
              BL=T.bl,se.BL=se.T.bl,iBL=T.ibl,se.iBL=se.T.ibl,LK=lk,se.LK=se.lk,
                                                     ^~~~~~~~
NO COPY: R/BWI3_HR.R:3712:63: style: Commas should always have a space after.
              BL=T.bl,se.BL=se.T.bl,iBL=T.ibl,se.iBL=se.T.ibl,LK=lk,se.LK=se.lk,
                                                              ^
NO COPY: R/BWI3_HR.R:3712:65: style: Put spaces around all infix operators.
              BL=T.bl,se.BL=se.T.bl,iBL=T.ibl,se.iBL=se.T.ibl,LK=lk,se.LK=se.lk,
                                                               ~^~
NO COPY: R/BWI3_HR.R:3712:69: style: Commas should always have a space after.
              BL=T.bl,se.BL=se.T.bl,iBL=T.ibl,se.iBL=se.T.ibl,LK=lk,se.LK=se.lk,
                                                                    ^
NO COPY: R/BWI3_HR.R:3712:74: style: Put spaces around all infix operators.
              BL=T.bl,se.BL=se.T.bl,iBL=T.ibl,se.iBL=se.T.ibl,LK=lk,se.LK=se.lk,
                                                                        ~^~
NO COPY: R/BWI3_HR.R:3713:34: style: Put spaces around all infix operators.
              Biotopbaumkennwerte=
                                ~^~
NO COPY: R/BWI3_HR.R:3714:35: style: Put spaces around all infix operators.
              data.frame(Attribute=c("Gesamtzahl","Zahl_je_ha","Vorrat_m3_mR",
                                 ~^~
NO COPY: R/BWI3_HR.R:3714:51: style: Commas should always have a space after.
              data.frame(Attribute=c("Gesamtzahl","Zahl_je_ha","Vorrat_m3_mR",
                                                  ^
NO COPY: R/BWI3_HR.R:3714:64: style: Commas should always have a space after.
              data.frame(Attribute=c("Gesamtzahl","Zahl_je_ha","Vorrat_m3_mR",
                                                               ^
NO COPY: R/BWI3_HR.R:3715:33: style: Commas should always have a space after.
              "Vorrat_m3_je_ha","Stueckvolumen_m3","Vorrat_LB_m3",
                                ^
NO COPY: R/BWI3_HR.R:3715:52: style: Commas should always have a space after.
              "Vorrat_m3_je_ha","Stueckvolumen_m3","Vorrat_LB_m3",
                                                   ^
NO COPY: R/BWI3_HR.R:3716:36: style: Commas should always have a space after.
              "Vorrat_LB_m3_je_ha","Vorrat_NB_m3","Vorrat_NB_m3_je_ha",
                                   ^
NO COPY: R/BWI3_HR.R:3716:51: style: Commas should always have a space after.
              "Vorrat_LB_m3_je_ha","Vorrat_NB_m3","Vorrat_NB_m3_je_ha",
                                                  ^
NO COPY: R/BWI3_HR.R:3717:27: style: Commas should always have a space after.
              "oi_Biom_t","oi_Biom_t_je_ha"),
                          ^
NO COPY: R/BWI3_HR.R:3718:19: style: Put spaces around all infix operators.
              Wert=c(T.N.BB,N.BB.ha,T.V.BB,V.BB.ha,V.BB.Stck,T.V.BB.LB,
                 ~^~
NO COPY: R/BWI3_HR.R:3718:22: style: Words within variable and function names should be separated by '_' rather than '.'.
              Wert=c(T.N.BB,N.BB.ha,T.V.BB,V.BB.ha,V.BB.Stck,T.V.BB.LB,
                     ^~~~~~
NO COPY: R/BWI3_HR.R:3718:29: style: Commas should always have a space after.
              Wert=c(T.N.BB,N.BB.ha,T.V.BB,V.BB.ha,V.BB.Stck,T.V.BB.LB,
                            ^
NO COPY: R/BWI3_HR.R:3718:29: style: Words within variable and function names should be separated by '_' rather than '.'.
              Wert=c(T.N.BB,N.BB.ha,T.V.BB,V.BB.ha,V.BB.Stck,T.V.BB.LB,
                            ^~~~~~~
NO COPY: R/BWI3_HR.R:3718:37: style: Commas should always have a space after.
              Wert=c(T.N.BB,N.BB.ha,T.V.BB,V.BB.ha,V.BB.Stck,T.V.BB.LB,
                                    ^
NO COPY: R/BWI3_HR.R:3718:37: style: Words within variable and function names should be separated by '_' rather than '.'.
              Wert=c(T.N.BB,N.BB.ha,T.V.BB,V.BB.ha,V.BB.Stck,T.V.BB.LB,
                                    ^~~~~~
NO COPY: R/BWI3_HR.R:3718:44: style: Commas should always have a space after.
              Wert=c(T.N.BB,N.BB.ha,T.V.BB,V.BB.ha,V.BB.Stck,T.V.BB.LB,
                                           ^
NO COPY: R/BWI3_HR.R:3718:44: style: Words within variable and function names should be separated by '_' rather than '.'.
              Wert=c(T.N.BB,N.BB.ha,T.V.BB,V.BB.ha,V.BB.Stck,T.V.BB.LB,
                                           ^~~~~~~
NO COPY: R/BWI3_HR.R:3718:52: style: Commas should always have a space after.
              Wert=c(T.N.BB,N.BB.ha,T.V.BB,V.BB.ha,V.BB.Stck,T.V.BB.LB,
                                                   ^
NO COPY: R/BWI3_HR.R:3718:52: style: Words within variable and function names should be separated by '_' rather than '.'.
              Wert=c(T.N.BB,N.BB.ha,T.V.BB,V.BB.ha,V.BB.Stck,T.V.BB.LB,
                                                   ^~~~~~~~~
NO COPY: R/BWI3_HR.R:3718:62: style: Commas should always have a space after.
              Wert=c(T.N.BB,N.BB.ha,T.V.BB,V.BB.ha,V.BB.Stck,T.V.BB.LB,
                                                             ^
NO COPY: R/BWI3_HR.R:3718:62: style: Words within variable and function names should be separated by '_' rather than '.'.
              Wert=c(T.N.BB,N.BB.ha,T.V.BB,V.BB.ha,V.BB.Stck,T.V.BB.LB,
                                                             ^~~~~~~~~
NO COPY: R/BWI3_HR.R:3719:15: style: Words within variable and function names should be separated by '_' rather than '.'.
              V.BB.LB.ha,T.V.BB.NB,V.BB.NB.ha,T.oiB.BB,oiB.BB.ha),
              ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:3719:26: style: Commas should always have a space after.
              V.BB.LB.ha,T.V.BB.NB,V.BB.NB.ha,T.oiB.BB,oiB.BB.ha),
                         ^
NO COPY: R/BWI3_HR.R:3719:26: style: Words within variable and function names should be separated by '_' rather than '.'.
              V.BB.LB.ha,T.V.BB.NB,V.BB.NB.ha,T.oiB.BB,oiB.BB.ha),
                         ^~~~~~~~~
NO COPY: R/BWI3_HR.R:3719:36: style: Commas should always have a space after.
              V.BB.LB.ha,T.V.BB.NB,V.BB.NB.ha,T.oiB.BB,oiB.BB.ha),
                                   ^
NO COPY: R/BWI3_HR.R:3719:36: style: Words within variable and function names should be separated by '_' rather than '.'.
              V.BB.LB.ha,T.V.BB.NB,V.BB.NB.ha,T.oiB.BB,oiB.BB.ha),
                                   ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:3719:47: style: Commas should always have a space after.
              V.BB.LB.ha,T.V.BB.NB,V.BB.NB.ha,T.oiB.BB,oiB.BB.ha),
                                              ^
NO COPY: R/BWI3_HR.R:3719:47: style: Variable and function names should be all lowercase.
              V.BB.LB.ha,T.V.BB.NB,V.BB.NB.ha,T.oiB.BB,oiB.BB.ha),
                                              ^~~~~~~~
NO COPY: R/BWI3_HR.R:3719:47: style: Words within variable and function names should be separated by '_' rather than '.'.
              V.BB.LB.ha,T.V.BB.NB,V.BB.NB.ha,T.oiB.BB,oiB.BB.ha),
                                              ^~~~~~~~
NO COPY: R/BWI3_HR.R:3719:56: style: Commas should always have a space after.
              V.BB.LB.ha,T.V.BB.NB,V.BB.NB.ha,T.oiB.BB,oiB.BB.ha),
                                                       ^
NO COPY: R/BWI3_HR.R:3719:56: style: Variable and function names should be all lowercase.
              V.BB.LB.ha,T.V.BB.NB,V.BB.NB.ha,T.oiB.BB,oiB.BB.ha),
                                                       ^~~~~~~~~
NO COPY: R/BWI3_HR.R:3719:56: style: Words within variable and function names should be separated by '_' rather than '.'.
              V.BB.LB.ha,T.V.BB.NB,V.BB.NB.ha,T.oiB.BB,oiB.BB.ha),
                                                       ^~~~~~~~~
NO COPY: R/BWI3_HR.R:3720:22: style: Words within variable and function names should be separated by '_' rather than '.'.
              SE = c(se.T.N.BB,se.N.BB.ha,se.T.V.BB,se.V.BB.ha,se.V.BB.Stck,
                     ^~~~~~~~~
NO COPY: R/BWI3_HR.R:3720:32: style: Commas should always have a space after.
              SE = c(se.T.N.BB,se.N.BB.ha,se.T.V.BB,se.V.BB.ha,se.V.BB.Stck,
                               ^
NO COPY: R/BWI3_HR.R:3720:32: style: Words within variable and function names should be separated by '_' rather than '.'.
              SE = c(se.T.N.BB,se.N.BB.ha,se.T.V.BB,se.V.BB.ha,se.V.BB.Stck,
                               ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:3720:43: style: Commas should always have a space after.
              SE = c(se.T.N.BB,se.N.BB.ha,se.T.V.BB,se.V.BB.ha,se.V.BB.Stck,
                                          ^
NO COPY: R/BWI3_HR.R:3720:43: style: Words within variable and function names should be separated by '_' rather than '.'.
              SE = c(se.T.N.BB,se.N.BB.ha,se.T.V.BB,se.V.BB.ha,se.V.BB.Stck,
                                          ^~~~~~~~~
NO COPY: R/BWI3_HR.R:3720:53: style: Commas should always have a space after.
              SE = c(se.T.N.BB,se.N.BB.ha,se.T.V.BB,se.V.BB.ha,se.V.BB.Stck,
                                                    ^
NO COPY: R/BWI3_HR.R:3720:53: style: Words within variable and function names should be separated by '_' rather than '.'.
              SE = c(se.T.N.BB,se.N.BB.ha,se.T.V.BB,se.V.BB.ha,se.V.BB.Stck,
                                                    ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:3720:64: style: Commas should always have a space after.
              SE = c(se.T.N.BB,se.N.BB.ha,se.T.V.BB,se.V.BB.ha,se.V.BB.Stck,
                                                               ^
NO COPY: R/BWI3_HR.R:3720:64: style: Words within variable and function names should be separated by '_' rather than '.'.
              SE = c(se.T.N.BB,se.N.BB.ha,se.T.V.BB,se.V.BB.ha,se.V.BB.Stck,
                                                               ^~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3721:15: style: Words within variable and function names should be separated by '_' rather than '.'.
              se.T.V.BB.LB,se.V.BB.LB.ha,se.T.V.BB.NB,se.V.BB.NB.ha,
              ^~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3721:28: style: Commas should always have a space after.
              se.T.V.BB.LB,se.V.BB.LB.ha,se.T.V.BB.NB,se.V.BB.NB.ha,
                           ^
NO COPY: R/BWI3_HR.R:3721:28: style: Words within variable and function names should be separated by '_' rather than '.'.
              se.T.V.BB.LB,se.V.BB.LB.ha,se.T.V.BB.NB,se.V.BB.NB.ha,
                           ^~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3721:42: style: Commas should always have a space after.
              se.T.V.BB.LB,se.V.BB.LB.ha,se.T.V.BB.NB,se.V.BB.NB.ha,
                                         ^
NO COPY: R/BWI3_HR.R:3721:42: style: Words within variable and function names should be separated by '_' rather than '.'.
              se.T.V.BB.LB,se.V.BB.LB.ha,se.T.V.BB.NB,se.V.BB.NB.ha,
                                         ^~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3721:55: style: Commas should always have a space after.
              se.T.V.BB.LB,se.V.BB.LB.ha,se.T.V.BB.NB,se.V.BB.NB.ha,
                                                      ^
NO COPY: R/BWI3_HR.R:3721:55: style: Words within variable and function names should be separated by '_' rather than '.'.
              se.T.V.BB.LB,se.V.BB.LB.ha,se.T.V.BB.NB,se.V.BB.NB.ha,
                                                      ^~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3722:15: style: Variable and function names should be all lowercase.
              se.T.oiB.BB,se.oiB.BB.ha)
              ^~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3722:15: style: Words within variable and function names should be separated by '_' rather than '.'.
              se.T.oiB.BB,se.oiB.BB.ha)
              ^~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3722:27: style: Commas should always have a space after.
              se.T.oiB.BB,se.oiB.BB.ha)
                          ^
NO COPY: R/BWI3_HR.R:3722:27: style: Variable and function names should be all lowercase.
              se.T.oiB.BB,se.oiB.BB.ha)
                          ^~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3722:27: style: Words within variable and function names should be separated by '_' rather than '.'.
              se.T.oiB.BB,se.oiB.BB.ha)
                          ^~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3724:1: style: Trailing whitespace is superfluous.
              
^~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3725:2: style: Trailing whitespace is superfluous.
}  
 ^~
NO COPY: R/BWI3_HR.R:3777:51: style: Commas should always have a space after.
stamm.merkmale.bagr.fun <- function(wzp4.merkmale,baeume,ecken,trakte,A,
                                                  ^
NO COPY: R/BWI3_HR.R:3777:58: style: Commas should always have a space after.
stamm.merkmale.bagr.fun <- function(wzp4.merkmale,baeume,ecken,trakte,A,
                                                         ^
NO COPY: R/BWI3_HR.R:3777:64: style: Commas should always have a space after.
stamm.merkmale.bagr.fun <- function(wzp4.merkmale,baeume,ecken,trakte,A,
                                                               ^
NO COPY: R/BWI3_HR.R:3777:71: style: Commas should always have a space after.
stamm.merkmale.bagr.fun <- function(wzp4.merkmale,baeume,ecken,trakte,A,
                                                                      ^
NO COPY: R/BWI3_HR.R:3778:21: style: Commas should always have a space after.
            auswahl,merkmale,ba.grupp,
                    ^
NO COPY: R/BWI3_HR.R:3778:30: style: Commas should always have a space after.
            auswahl,merkmale,ba.grupp,
                             ^
NO COPY: R/BWI3_HR.R:3782:34: style: Commas should always have a space after.
  stratum <- stratum.fun(auswahl,ecken)
                                 ^
NO COPY: R/BWI3_HR.R:3788:1: style: lines should not be more than 80 characters.
  #"Neutralisierung" der ben\u00f6tigten Attributnamen in <baeume>: <2> entfernen
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3789:26: style: Commas should always have a space after.
  names(baeume) <- sub(2,names(baeume),replacement="")
                         ^
NO COPY: R/BWI3_HR.R:3789:40: style: Commas should always have a space after.
  names(baeume) <- sub(2,names(baeume),replacement="")
                                       ^
NO COPY: R/BWI3_HR.R:3789:51: style: Put spaces around all infix operators.
  names(baeume) <- sub(2,names(baeume),replacement="")
                                                 ~^~
NO COPY: R/BWI3_HR.R:3793:25: style: Commas should always have a space after.
  ast.pos <- grep("Ast",names(wzp4.merkmale))
                        ^
NO COPY: R/BWI3_HR.R:3794:22: style: Put spaces around all infix operators.
  if (length(ast.pos)>0)
                    ~^~
NO COPY: R/BWI3_HR.R:3795:3: style: Opening curly braces should never go on their own line and should always be followed by a new line.
  {
  ^
NO COPY: R/BWI3_HR.R:3798:1: style: lines should not be more than 80 characters.
  #(2) Merkmal-DS <wzp4.merkmale> mit Attribut-Auswahl aus <baeume> verkn\u00fcpfen
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3799:43: style: Put spaces around all infix operators.
  wzp4.merkmale <- merge(baeume[baeume$stp==0,
                                         ~^~~
NO COPY: R/BWI3_HR.R:3800:1: style: lines should not be more than 80 characters.
                        c("tnr", "enr", "bnr", "ba", "alt", "bhd", "h", "volv", "oib", "nha", "stfl")],
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3801:42: style: Put spaces around all infix operators.
                        wzp4.merkmale, by=c("tnr","enr","bnr"),all.x=T)
                                        ~^~
NO COPY: R/BWI3_HR.R:3801:51: style: Commas should always have a space after.
                        wzp4.merkmale, by=c("tnr","enr","bnr"),all.x=T)
                                                  ^
NO COPY: R/BWI3_HR.R:3801:57: style: Commas should always have a space after.
                        wzp4.merkmale, by=c("tnr","enr","bnr"),all.x=T)
                                                        ^
NO COPY: R/BWI3_HR.R:3801:64: style: Commas should always have a space after.
                        wzp4.merkmale, by=c("tnr","enr","bnr"),all.x=T)
                                                               ^
NO COPY: R/BWI3_HR.R:3801:69: style: Put spaces around all infix operators.
                        wzp4.merkmale, by=c("tnr","enr","bnr"),all.x=T)
                                                                   ~^~
NO COPY: R/BWI3_HR.R:3803:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: R/BWI3_HR.R:3807:19: style: Commas should always have a space after.
  mm.pos <- rep(0,k)
                  ^
NO COPY: R/BWI3_HR.R:3810:36: style: Commas should always have a space after.
  wzp4.merkmale$merkmal.s <- rep(0,length(wzp4.merkmale[,1]))
                                   ^
NO COPY: R/BWI3_HR.R:3810:58: style: Commas should always have a space after.
  wzp4.merkmale$merkmal.s <- rep(0,length(wzp4.merkmale[,1]))
                                                         ^
NO COPY: R/BWI3_HR.R:3812:3: style: Opening curly braces should never go on their own line and should always be followed by a new line.
  {
  ^
NO COPY: R/BWI3_HR.R:3813:44: style: Commas should always have a space after.
    mm.pos[i] <- grep(toupper(merkmale[i]),toupper(names(wzp4.merkmale)))
                                           ^
NO COPY: R/BWI3_HR.R:3814:1: style: lines should not be more than 80 characters.
    wzp4.merkmale$merkmal.s <- wzp4.merkmale$merkmal.s+ wzp4.merkmale[,mm.pos[i]]
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3814:55: style: Put spaces around all infix operators.
    wzp4.merkmale$merkmal.s <- wzp4.merkmale$merkmal.s+ wzp4.merkmale[,mm.pos[i]]
                                                     ~^
NO COPY: R/BWI3_HR.R:3814:72: style: Commas should always have a space after.
    wzp4.merkmale$merkmal.s <- wzp4.merkmale$merkmal.s+ wzp4.merkmale[,mm.pos[i]]
                                                                       ^
NO COPY: R/BWI3_HR.R:3816:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  mm.s.pos <- length(wzp4.merkmale)
  ^~~~~~~~
NO COPY: R/BWI3_HR.R:3817:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  wzp4.merkmale.s <- merge(
  ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3818:1: style: lines should not be more than 80 characters.
                           wzp4.merkmale[TRUE, c(1:3,12,mm.pos,mm.s.pos,4:11)], # TODO: use names, not index numbers!
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3818:54: style: Commas should always have a space after.
                           wzp4.merkmale[TRUE, c(1:3,12,mm.pos,mm.s.pos,4:11)], # TODO: use names, not index numbers!
                                                     ^
NO COPY: R/BWI3_HR.R:3818:57: style: Commas should always have a space after.
                           wzp4.merkmale[TRUE, c(1:3,12,mm.pos,mm.s.pos,4:11)], # TODO: use names, not index numbers!
                                                        ^
NO COPY: R/BWI3_HR.R:3818:64: style: Commas should always have a space after.
                           wzp4.merkmale[TRUE, c(1:3,12,mm.pos,mm.s.pos,4:11)], # TODO: use names, not index numbers!
                                                               ^
NO COPY: R/BWI3_HR.R:3818:64: style: Words within variable and function names should be separated by '_' rather than '.'.
                           wzp4.merkmale[TRUE, c(1:3,12,mm.pos,mm.s.pos,4:11)], # TODO: use names, not index numbers!
                                                               ^~~~~~~~
NO COPY: R/BWI3_HR.R:3818:73: style: Commas should always have a space after.
                           wzp4.merkmale[TRUE, c(1:3,12,mm.pos,mm.s.pos,4:11)], # TODO: use names, not index numbers!
                                                                        ^
NO COPY: R/BWI3_HR.R:3819:59: style: Trailing whitespace is superfluous.
                           stratum[TRUE, c("tnr", "enr")], 
                                                          ^
NO COPY: R/BWI3_HR.R:3820:7: style: Put spaces around all infix operators.
    by=c("tnr","enr"),all.y=T)
     ~^~
NO COPY: R/BWI3_HR.R:3820:16: style: Commas should always have a space after.
    by=c("tnr","enr"),all.y=T)
               ^
NO COPY: R/BWI3_HR.R:3820:23: style: Commas should always have a space after.
    by=c("tnr","enr"),all.y=T)
                      ^
NO COPY: R/BWI3_HR.R:3820:28: style: Put spaces around all infix operators.
    by=c("tnr","enr"),all.y=T)
                          ~^~
NO COPY: R/BWI3_HR.R:3821:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  wzp4.merkmale.s[is.na(wzp4.merkmale.s)] <- 0 
  ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3821:25: style: Words within variable and function names should be separated by '_' rather than '.'.
  wzp4.merkmale.s[is.na(wzp4.merkmale.s)] <- 0 
                        ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3821:47: style: Trailing whitespace is superfluous.
  wzp4.merkmale.s[is.na(wzp4.merkmale.s)] <- 0 
                                              ^
NO COPY: R/BWI3_HR.R:3822:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: R/BWI3_HR.R:3826:24: style: Commas should always have a space after.
  nT <- length(trakte[,1])
                       ^
NO COPY: R/BWI3_HR.R:3828:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  n.te.s <- length(stratum[,1])
  ^~~~~~
NO COPY: R/BWI3_HR.R:3828:29: style: Commas should always have a space after.
  n.te.s <- length(stratum[,1])
                            ^
NO COPY: R/BWI3_HR.R:3831:32: style: Commas should always have a space after.
  xy <- stats::aggregate(rep(1,length(stratum[,1])),by=list(stratum$tnr),sum)
                               ^
NO COPY: R/BWI3_HR.R:3831:48: style: Commas should always have a space after.
  xy <- stats::aggregate(rep(1,length(stratum[,1])),by=list(stratum$tnr),sum)
                                               ^
NO COPY: R/BWI3_HR.R:3831:53: style: Commas should always have a space after.
  xy <- stats::aggregate(rep(1,length(stratum[,1])),by=list(stratum$tnr),sum)
                                                    ^
NO COPY: R/BWI3_HR.R:3831:55: style: Put spaces around all infix operators.
  xy <- stats::aggregate(rep(1,length(stratum[,1])),by=list(stratum$tnr),sum)
                                                     ~^~
NO COPY: R/BWI3_HR.R:3831:74: style: Commas should always have a space after.
  xy <- stats::aggregate(rep(1,length(stratum[,1])),by=list(stratum$tnr),sum)
                                                                         ^
NO COPY: R/BWI3_HR.R:3833:18: style: Commas should always have a space after.
  xy <- cbind(xy,stats::aggregate(ifelse(
                 ^
NO COPY: R/BWI3_HR.R:3834:19: style: Words within variable and function names should be separated by '_' rather than '.'.
                  wzp4.merkmale.s$ba==999,wzp4.merkmale.s$stfl/10000,0),
                  ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3834:37: style: Put spaces around all infix operators.
                  wzp4.merkmale.s$ba==999,wzp4.merkmale.s$stfl/10000,0),
                                   ~^~~
NO COPY: R/BWI3_HR.R:3834:43: style: Commas should always have a space after.
                  wzp4.merkmale.s$ba==999,wzp4.merkmale.s$stfl/10000,0),
                                          ^
NO COPY: R/BWI3_HR.R:3834:43: style: Words within variable and function names should be separated by '_' rather than '.'.
                  wzp4.merkmale.s$ba==999,wzp4.merkmale.s$stfl/10000,0),
                                          ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3834:63: style: Put spaces around all infix operators.
                  wzp4.merkmale.s$ba==999,wzp4.merkmale.s$stfl/10000,0),
                                                             ~^~
NO COPY: R/BWI3_HR.R:3834:70: style: Commas should always have a space after.
                  wzp4.merkmale.s$ba==999,wzp4.merkmale.s$stfl/10000,0),
                                                                     ^
NO COPY: R/BWI3_HR.R:3835:21: style: Put spaces around all infix operators.
                  by=list(wzp4.merkmale.s$tnr),sum)$x)
                   ~^~
NO COPY: R/BWI3_HR.R:3835:27: style: Words within variable and function names should be separated by '_' rather than '.'.
                  by=list(wzp4.merkmale.s$tnr),sum)$x)
                          ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3835:48: style: Commas should always have a space after.
                  by=list(wzp4.merkmale.s$tnr),sum)$x)
                                               ^
NO COPY: R/BWI3_HR.R:3836:1: style: lines should not be more than 80 characters.
  xy <- cbind(xy,stats::aggregate(ifelse(wzp4.merkmale.s$ba==998,wzp4.merkmale.s$stfl,0),
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3836:18: style: Commas should always have a space after.
  xy <- cbind(xy,stats::aggregate(ifelse(wzp4.merkmale.s$ba==998,wzp4.merkmale.s$stfl,0),
                 ^
NO COPY: R/BWI3_HR.R:3836:42: style: Words within variable and function names should be separated by '_' rather than '.'.
  xy <- cbind(xy,stats::aggregate(ifelse(wzp4.merkmale.s$ba==998,wzp4.merkmale.s$stfl,0),
                                         ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3836:60: style: Put spaces around all infix operators.
  xy <- cbind(xy,stats::aggregate(ifelse(wzp4.merkmale.s$ba==998,wzp4.merkmale.s$stfl,0),
                                                          ~^~~
NO COPY: R/BWI3_HR.R:3836:66: style: Commas should always have a space after.
  xy <- cbind(xy,stats::aggregate(ifelse(wzp4.merkmale.s$ba==998,wzp4.merkmale.s$stfl,0),
                                                                 ^
NO COPY: R/BWI3_HR.R:3836:66: style: Words within variable and function names should be separated by '_' rather than '.'.
  xy <- cbind(xy,stats::aggregate(ifelse(wzp4.merkmale.s$ba==998,wzp4.merkmale.s$stfl,0),
                                                                 ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3836:87: style: Commas should always have a space after.
  xy <- cbind(xy,stats::aggregate(ifelse(wzp4.merkmale.s$ba==998,wzp4.merkmale.s$stfl,0),
                                                                                      ^
NO COPY: R/BWI3_HR.R:3837:21: style: Put spaces around all infix operators.
                  by=list(wzp4.merkmale.s$tnr),sum)$x/10000)
                   ~^~
NO COPY: R/BWI3_HR.R:3837:27: style: Words within variable and function names should be separated by '_' rather than '.'.
                  by=list(wzp4.merkmale.s$tnr),sum)$x/10000)
                          ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3837:48: style: Commas should always have a space after.
                  by=list(wzp4.merkmale.s$tnr),sum)$x/10000)
                                               ^
NO COPY: R/BWI3_HR.R:3837:54: style: Put spaces around all infix operators.
                  by=list(wzp4.merkmale.s$tnr),sum)$x/10000)
                                                    ~^~
NO COPY: R/BWI3_HR.R:3838:24: style: Commas should always have a space after.
  names(xy) <- c("tnr","hbf","bl","ibl")
                       ^
NO COPY: R/BWI3_HR.R:3838:30: style: Commas should always have a space after.
  names(xy) <- c("tnr","hbf","bl","ibl")
                             ^
NO COPY: R/BWI3_HR.R:3838:35: style: Commas should always have a space after.
  names(xy) <- c("tnr","hbf","bl","ibl")
                                  ^
NO COPY: R/BWI3_HR.R:3839:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  n.t.s <- length(xy[,1])
  ^~~~~
NO COPY: R/BWI3_HR.R:3839:3: warning: local variable 'n.t.s' assigned but may not be used
  n.t.s <- length(xy[,1])
  ^~~~~
NO COPY: R/BWI3_HR.R:3839:23: style: Commas should always have a space after.
  n.t.s <- length(xy[,1])
                      ^
NO COPY: R/BWI3_HR.R:3840:43: style: Commas should always have a space after.
  xy <- merge(trakte[TRUE, c("tnr", "m")],xy,by=c("tnr"),all.x=T)
                                          ^
NO COPY: R/BWI3_HR.R:3840:46: style: Commas should always have a space after.
  xy <- merge(trakte[TRUE, c("tnr", "m")],xy,by=c("tnr"),all.x=T)
                                             ^
NO COPY: R/BWI3_HR.R:3840:48: style: Put spaces around all infix operators.
  xy <- merge(trakte[TRUE, c("tnr", "m")],xy,by=c("tnr"),all.x=T)
                                              ~^~
NO COPY: R/BWI3_HR.R:3840:58: style: Commas should always have a space after.
  xy <- merge(trakte[TRUE, c("tnr", "m")],xy,by=c("tnr"),all.x=T)
                                                         ^
NO COPY: R/BWI3_HR.R:3840:63: style: Put spaces around all infix operators.
  xy <- merge(trakte[TRUE, c("tnr", "m")],xy,by=c("tnr"),all.x=T)
                                                             ~^~
NO COPY: R/BWI3_HR.R:3843:22: style: Put spaces around all infix operators.
  xy$hbf.ba <- xy$hbf-xy$bl-xy$ibl
                    ~^~
NO COPY: R/BWI3_HR.R:3843:28: style: Put spaces around all infix operators.
  xy$hbf.ba <- xy$hbf-xy$bl-xy$ibl
                          ~^~
NO COPY: R/BWI3_HR.R:3845:4: style: Commented code should be removed.
  #HBFl. [ha]
   ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:3846:9: style: Use <-, not =, for assignment.
  r.list= r.variance.fun(xy[TRUE, c("m", "hbf")],nT)
        ^
NO COPY: R/BWI3_HR.R:3846:9: style: Put spaces around all infix operators.
  r.list= r.variance.fun(xy[TRUE, c("m", "hbf")],nT)
       ~^
NO COPY: R/BWI3_HR.R:3846:50: style: Commas should always have a space after.
  r.list= r.variance.fun(xy[TRUE, c("m", "hbf")],nT)
                                                 ^
NO COPY: R/BWI3_HR.R:3847:23: style: Put spaces around all infix operators.
  T.hbf <- r.list$R.xy*A
                     ~^~
NO COPY: R/BWI3_HR.R:3848:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  se.T.hbf <- sqrt(r.list$V.R.xy)*A
  ^~~~~~~~
NO COPY: R/BWI3_HR.R:3848:27: style: Words within variable and function names should be separated by '_' rather than '.'.
  se.T.hbf <- sqrt(r.list$V.R.xy)*A
                          ^~~~~~
NO COPY: R/BWI3_HR.R:3848:34: style: Put spaces around all infix operators.
  se.T.hbf <- sqrt(r.list$V.R.xy)*A
                                ~^~
NO COPY: R/BWI3_HR.R:3850:51: style: Commas should always have a space after.
  r.list <- r.variance.fun(xy[TRUE, c("m", "bl")],nT)
                                                  ^
NO COPY: R/BWI3_HR.R:3851:22: style: Put spaces around all infix operators.
  T.bl <- r.list$R.xy*A
                    ~^~
NO COPY: R/BWI3_HR.R:3852:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  se.T.bl <- sqrt(r.list$V.R.xy)*A
  ^~~~~~~
NO COPY: R/BWI3_HR.R:3852:26: style: Words within variable and function names should be separated by '_' rather than '.'.
  se.T.bl <- sqrt(r.list$V.R.xy)*A
                         ^~~~~~
NO COPY: R/BWI3_HR.R:3852:33: style: Put spaces around all infix operators.
  se.T.bl <- sqrt(r.list$V.R.xy)*A
                               ~^~
NO COPY: R/BWI3_HR.R:3854:52: style: Commas should always have a space after.
  r.list <- r.variance.fun(xy[TRUE, c("m", "ibl")],nT)
                                                   ^
NO COPY: R/BWI3_HR.R:3855:23: style: Put spaces around all infix operators.
  T.ibl <- r.list$R.xy*A
                     ~^~
NO COPY: R/BWI3_HR.R:3856:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  se.T.ibl <- sqrt(r.list$V.R.xy)*A
  ^~~~~~~~
NO COPY: R/BWI3_HR.R:3856:27: style: Words within variable and function names should be separated by '_' rather than '.'.
  se.T.ibl <- sqrt(r.list$V.R.xy)*A
                          ^~~~~~
NO COPY: R/BWI3_HR.R:3856:34: style: Put spaces around all infix operators.
  se.T.ibl <- sqrt(r.list$V.R.xy)*A
                                ~^~
NO COPY: R/BWI3_HR.R:3858:57: style: Commas should always have a space after.
  r.list <- r.variance.fun(xy[TRUE, c("hbf.ba", "hbf")],nT)
                                                        ^
NO COPY: R/BWI3_HR.R:3860:24: style: Words within variable and function names should be separated by '_' rather than '.'.
  se.lk <- sqrt(r.list$V.R.xy)
                       ^~~~~~
NO COPY: R/BWI3_HR.R:3863:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: R/BWI3_HR.R:3866:12: style: Use <-, not =, for assignment.
  Kennwerte=c("Gesamtzahl","Zahl_je_ha","Vorrat_m3_mR",
           ^
NO COPY: R/BWI3_HR.R:3866:12: style: Put spaces around all infix operators.
  Kennwerte=c("Gesamtzahl","Zahl_je_ha","Vorrat_m3_mR",
          ~^~
NO COPY: R/BWI3_HR.R:3866:28: style: Commas should always have a space after.
  Kennwerte=c("Gesamtzahl","Zahl_je_ha","Vorrat_m3_mR",
                           ^
NO COPY: R/BWI3_HR.R:3866:41: style: Commas should always have a space after.
  Kennwerte=c("Gesamtzahl","Zahl_je_ha","Vorrat_m3_mR",
                                        ^
NO COPY: R/BWI3_HR.R:3867:36: style: Commas should always have a space after.
              "Vorrat_m3_mR_je_ha","Stueckvolumen_m3_mR","oi_Biom_t",
                                   ^
NO COPY: R/BWI3_HR.R:3867:58: style: Commas should always have a space after.
              "Vorrat_m3_mR_je_ha","Stueckvolumen_m3_mR","oi_Biom_t",
                                                         ^
NO COPY: R/BWI3_HR.R:3868:33: style: Commas should always have a space after.
              "oi_Biom_t_je_ha","Anteil_Gesamtzahl_Proz",
                                ^
NO COPY: R/BWI3_HR.R:3873:19: style: Put spaces around all infix operators.
  n.bagr <- n.bagr+1
                 ~^~
NO COPY: R/BWI3_HR.R:3877:1: style: lines should not be more than 80 characters.
  #Array  f\u00fcr Ergebnisse je  BAGR (Dimension 2 steht f\u00fcr Wert und Standardfehler)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3878:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  attr.bagr.tab <- array(dim=c(n.kw,2,n.bagr))
  ^~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3878:29: style: Put spaces around all infix operators.
  attr.bagr.tab <- array(dim=c(n.kw,2,n.bagr))
                           ~^~
NO COPY: R/BWI3_HR.R:3878:37: style: Commas should always have a space after.
  attr.bagr.tab <- array(dim=c(n.kw,2,n.bagr))
                                    ^
NO COPY: R/BWI3_HR.R:3878:39: style: Commas should always have a space after.
  attr.bagr.tab <- array(dim=c(n.kw,2,n.bagr))
                                      ^
NO COPY: R/BWI3_HR.R:3879:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: R/BWI3_HR.R:3881:3: style: Opening curly braces should never go on their own line and should always be followed by a new line.
  {
  ^
NO COPY: R/BWI3_HR.R:3883:7: style: Words within variable and function names should be separated by '_' rather than '.'.
      wzp4.merkmale.s$merkmal.s>0&wzp4.merkmale.s$pk<=1&wzp4.merkmale.s$ba 
      ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3883:32: style: Put spaces around all infix operators.
      wzp4.merkmale.s$merkmal.s>0&wzp4.merkmale.s$pk<=1&wzp4.merkmale.s$ba 
                              ~^~
NO COPY: R/BWI3_HR.R:3883:34: style: Put spaces around all infix operators.
      wzp4.merkmale.s$merkmal.s>0&wzp4.merkmale.s$pk<=1&wzp4.merkmale.s$ba 
                                ~^~
NO COPY: R/BWI3_HR.R:3883:35: style: Words within variable and function names should be separated by '_' rather than '.'.
      wzp4.merkmale.s$merkmal.s>0&wzp4.merkmale.s$pk<=1&wzp4.merkmale.s$ba 
                                  ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3883:53: style: Put spaces around all infix operators.
      wzp4.merkmale.s$merkmal.s>0&wzp4.merkmale.s$pk<=1&wzp4.merkmale.s$ba 
                                                   ~^~~
NO COPY: R/BWI3_HR.R:3883:56: style: Put spaces around all infix operators.
      wzp4.merkmale.s$merkmal.s>0&wzp4.merkmale.s$pk<=1&wzp4.merkmale.s$ba 
                                                      ~^~
NO COPY: R/BWI3_HR.R:3883:57: style: Words within variable and function names should be separated by '_' rather than '.'.
      wzp4.merkmale.s$merkmal.s>0&wzp4.merkmale.s$pk<=1&wzp4.merkmale.s$ba 
                                                        ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3883:75: style: Trailing whitespace is superfluous.
      wzp4.merkmale.s$merkmal.s>0&wzp4.merkmale.s$pk<=1&wzp4.merkmale.s$ba 
                                                                          ^
NO COPY: R/BWI3_HR.R:3884:35: style: Commas should always have a space after.
      %in% ba.grupp$ba.grupp[[i]],wzp4.merkmale.s$nha,0),
                                  ^
NO COPY: R/BWI3_HR.R:3884:35: style: Words within variable and function names should be separated by '_' rather than '.'.
      %in% ba.grupp$ba.grupp[[i]],wzp4.merkmale.s$nha,0),
                                  ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3884:55: style: Commas should always have a space after.
      %in% ba.grupp$ba.grupp[[i]],wzp4.merkmale.s$nha,0),
                                                      ^
NO COPY: R/BWI3_HR.R:3885:9: style: Put spaces around all infix operators.
      by=list(wzp4.merkmale.s$tnr),sum)
       ~^~
NO COPY: R/BWI3_HR.R:3885:15: style: Words within variable and function names should be separated by '_' rather than '.'.
      by=list(wzp4.merkmale.s$tnr),sum)
              ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3885:36: style: Commas should always have a space after.
      by=list(wzp4.merkmale.s$tnr),sum)
                                   ^
NO COPY: R/BWI3_HR.R:3887:1: style: lines should not be more than 80 characters.
    merkmal.t <- cbind(merkmal.t,stats::aggregate(ifelse(wzp4.merkmale.s$merkmal.s>0
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3887:34: style: Commas should always have a space after.
    merkmal.t <- cbind(merkmal.t,stats::aggregate(ifelse(wzp4.merkmale.s$merkmal.s>0
                                 ^
NO COPY: R/BWI3_HR.R:3887:58: style: Words within variable and function names should be separated by '_' rather than '.'.
    merkmal.t <- cbind(merkmal.t,stats::aggregate(ifelse(wzp4.merkmale.s$merkmal.s>0
                                                         ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3887:83: style: Put spaces around all infix operators.
    merkmal.t <- cbind(merkmal.t,stats::aggregate(ifelse(wzp4.merkmale.s$merkmal.s>0
                                                                                 ~^~
NO COPY: R/BWI3_HR.R:3888:7: style: Put spaces around all infix operators.
      &wzp4.merkmale.s$pk<=1&wzp4.merkmale.s$ba %in% ba.grupp$ba.grupp[[i]],
      ^~
NO COPY: R/BWI3_HR.R:3888:8: style: Words within variable and function names should be separated by '_' rather than '.'.
      &wzp4.merkmale.s$pk<=1&wzp4.merkmale.s$ba %in% ba.grupp$ba.grupp[[i]],
       ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3888:26: style: Put spaces around all infix operators.
      &wzp4.merkmale.s$pk<=1&wzp4.merkmale.s$ba %in% ba.grupp$ba.grupp[[i]],
                        ~^~~
NO COPY: R/BWI3_HR.R:3888:29: style: Put spaces around all infix operators.
      &wzp4.merkmale.s$pk<=1&wzp4.merkmale.s$ba %in% ba.grupp$ba.grupp[[i]],
                           ~^~
NO COPY: R/BWI3_HR.R:3888:30: style: Words within variable and function names should be separated by '_' rather than '.'.
      &wzp4.merkmale.s$pk<=1&wzp4.merkmale.s$ba %in% ba.grupp$ba.grupp[[i]],
                             ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3889:7: style: Words within variable and function names should be separated by '_' rather than '.'.
      wzp4.merkmale.s$nha*wzp4.merkmale.s$volv,0),
      ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3889:26: style: Put spaces around all infix operators.
      wzp4.merkmale.s$nha*wzp4.merkmale.s$volv,0),
                        ~^~
NO COPY: R/BWI3_HR.R:3889:27: style: Words within variable and function names should be separated by '_' rather than '.'.
      wzp4.merkmale.s$nha*wzp4.merkmale.s$volv,0),
                          ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3889:48: style: Commas should always have a space after.
      wzp4.merkmale.s$nha*wzp4.merkmale.s$volv,0),
                                               ^
NO COPY: R/BWI3_HR.R:3890:9: style: Put spaces around all infix operators.
      by=list(wzp4.merkmale.s$tnr),sum)$x)
       ~^~
NO COPY: R/BWI3_HR.R:3890:15: style: Words within variable and function names should be separated by '_' rather than '.'.
      by=list(wzp4.merkmale.s$tnr),sum)$x)
              ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3890:36: style: Commas should always have a space after.
      by=list(wzp4.merkmale.s$tnr),sum)$x)
                                   ^
NO COPY: R/BWI3_HR.R:3891:1: style: Trailing whitespace is superfluous.
                
^~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3893:1: style: lines should not be more than 80 characters.
    merkmal.t <- cbind(merkmal.t,stats::aggregate(ifelse(wzp4.merkmale.s$merkmal.s>0
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3893:34: style: Commas should always have a space after.
    merkmal.t <- cbind(merkmal.t,stats::aggregate(ifelse(wzp4.merkmale.s$merkmal.s>0
                                 ^
NO COPY: R/BWI3_HR.R:3893:58: style: Words within variable and function names should be separated by '_' rather than '.'.
    merkmal.t <- cbind(merkmal.t,stats::aggregate(ifelse(wzp4.merkmale.s$merkmal.s>0
                                                         ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3893:83: style: Put spaces around all infix operators.
    merkmal.t <- cbind(merkmal.t,stats::aggregate(ifelse(wzp4.merkmale.s$merkmal.s>0
                                                                                 ~^~
NO COPY: R/BWI3_HR.R:3894:7: style: Put spaces around all infix operators.
      &wzp4.merkmale.s$pk<=1&wzp4.merkmale.s$ba %in% ba.grupp$ba.grupp[[i]],
      ^~
NO COPY: R/BWI3_HR.R:3894:8: style: Words within variable and function names should be separated by '_' rather than '.'.
      &wzp4.merkmale.s$pk<=1&wzp4.merkmale.s$ba %in% ba.grupp$ba.grupp[[i]],
       ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3894:26: style: Put spaces around all infix operators.
      &wzp4.merkmale.s$pk<=1&wzp4.merkmale.s$ba %in% ba.grupp$ba.grupp[[i]],
                        ~^~~
NO COPY: R/BWI3_HR.R:3894:29: style: Put spaces around all infix operators.
      &wzp4.merkmale.s$pk<=1&wzp4.merkmale.s$ba %in% ba.grupp$ba.grupp[[i]],
                           ~^~
NO COPY: R/BWI3_HR.R:3894:30: style: Words within variable and function names should be separated by '_' rather than '.'.
      &wzp4.merkmale.s$pk<=1&wzp4.merkmale.s$ba %in% ba.grupp$ba.grupp[[i]],
                             ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3895:7: style: Words within variable and function names should be separated by '_' rather than '.'.
      wzp4.merkmale.s$nha*wzp4.merkmale.s$oib,0),
      ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3895:26: style: Put spaces around all infix operators.
      wzp4.merkmale.s$nha*wzp4.merkmale.s$oib,0),
                        ~^~
NO COPY: R/BWI3_HR.R:3895:27: style: Words within variable and function names should be separated by '_' rather than '.'.
      wzp4.merkmale.s$nha*wzp4.merkmale.s$oib,0),
                          ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3895:47: style: Commas should always have a space after.
      wzp4.merkmale.s$nha*wzp4.merkmale.s$oib,0),
                                              ^
NO COPY: R/BWI3_HR.R:3896:9: style: Put spaces around all infix operators.
      by=list(wzp4.merkmale.s$tnr),sum)$x)
       ~^~
NO COPY: R/BWI3_HR.R:3896:15: style: Words within variable and function names should be separated by '_' rather than '.'.
      by=list(wzp4.merkmale.s$tnr),sum)$x)
              ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3896:36: style: Commas should always have a space after.
      by=list(wzp4.merkmale.s$tnr),sum)$x)
                                   ^
NO COPY: R/BWI3_HR.R:3897:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: R/BWI3_HR.R:3899:34: style: Commas should always have a space after.
    merkmal.t <- cbind(merkmal.t,stats::aggregate(ifelse(
                                 ^
NO COPY: R/BWI3_HR.R:3900:7: style: Words within variable and function names should be separated by '_' rather than '.'.
      wzp4.merkmale.s$merkmal.s>0&wzp4.merkmale.s$bhd>=50
      ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3900:32: style: Put spaces around all infix operators.
      wzp4.merkmale.s$merkmal.s>0&wzp4.merkmale.s$bhd>=50
                              ~^~
NO COPY: R/BWI3_HR.R:3900:34: style: Put spaces around all infix operators.
      wzp4.merkmale.s$merkmal.s>0&wzp4.merkmale.s$bhd>=50
                                ~^~
NO COPY: R/BWI3_HR.R:3900:35: style: Words within variable and function names should be separated by '_' rather than '.'.
      wzp4.merkmale.s$merkmal.s>0&wzp4.merkmale.s$bhd>=50
                                  ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3900:54: style: Put spaces around all infix operators.
      wzp4.merkmale.s$merkmal.s>0&wzp4.merkmale.s$bhd>=50
                                                    ~^~~
NO COPY: R/BWI3_HR.R:3901:7: style: Put spaces around all infix operators.
      &wzp4.merkmale.s$pk<=1&wzp4.merkmale.s$ba %in% ba.grupp$ba.grupp[[i]],
      ^~
NO COPY: R/BWI3_HR.R:3901:8: style: Words within variable and function names should be separated by '_' rather than '.'.
      &wzp4.merkmale.s$pk<=1&wzp4.merkmale.s$ba %in% ba.grupp$ba.grupp[[i]],
       ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3901:26: style: Put spaces around all infix operators.
      &wzp4.merkmale.s$pk<=1&wzp4.merkmale.s$ba %in% ba.grupp$ba.grupp[[i]],
                        ~^~~
NO COPY: R/BWI3_HR.R:3901:29: style: Put spaces around all infix operators.
      &wzp4.merkmale.s$pk<=1&wzp4.merkmale.s$ba %in% ba.grupp$ba.grupp[[i]],
                           ~^~
NO COPY: R/BWI3_HR.R:3901:30: style: Words within variable and function names should be separated by '_' rather than '.'.
      &wzp4.merkmale.s$pk<=1&wzp4.merkmale.s$ba %in% ba.grupp$ba.grupp[[i]],
                             ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3902:7: style: Words within variable and function names should be separated by '_' rather than '.'.
      wzp4.merkmale.s$nha*wzp4.merkmale.s$volv,0),
      ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3902:26: style: Put spaces around all infix operators.
      wzp4.merkmale.s$nha*wzp4.merkmale.s$volv,0),
                        ~^~
NO COPY: R/BWI3_HR.R:3902:27: style: Words within variable and function names should be separated by '_' rather than '.'.
      wzp4.merkmale.s$nha*wzp4.merkmale.s$volv,0),
                          ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3902:48: style: Commas should always have a space after.
      wzp4.merkmale.s$nha*wzp4.merkmale.s$volv,0),
                                               ^
NO COPY: R/BWI3_HR.R:3903:9: style: Put spaces around all infix operators.
      by=list(wzp4.merkmale.s$tnr),sum)$x)
       ~^~
NO COPY: R/BWI3_HR.R:3903:15: style: Words within variable and function names should be separated by '_' rather than '.'.
      by=list(wzp4.merkmale.s$tnr),sum)$x)
              ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3903:36: style: Commas should always have a space after.
      by=list(wzp4.merkmale.s$tnr),sum)$x)
                                   ^
NO COPY: R/BWI3_HR.R:3904:1: style: Trailing whitespace is superfluous.
    
^~~~
NO COPY: R/BWI3_HR.R:3905:16: style: Trailing whitespace is superfluous.
    #Gesamtzahl 
               ^
NO COPY: R/BWI3_HR.R:3906:34: style: Commas should always have a space after.
    merkmal.t <- cbind(merkmal.t,stats::aggregate(ifelse(
                                 ^
NO COPY: R/BWI3_HR.R:3907:7: style: Words within variable and function names should be separated by '_' rather than '.'.
      wzp4.merkmale.s$pk<=1&wzp4.merkmale.s$ba %in% ba.grupp$ba.grupp[[i]],
      ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3907:25: style: Put spaces around all infix operators.
      wzp4.merkmale.s$pk<=1&wzp4.merkmale.s$ba %in% ba.grupp$ba.grupp[[i]],
                       ~^~~
NO COPY: R/BWI3_HR.R:3907:28: style: Put spaces around all infix operators.
      wzp4.merkmale.s$pk<=1&wzp4.merkmale.s$ba %in% ba.grupp$ba.grupp[[i]],
                          ~^~
NO COPY: R/BWI3_HR.R:3907:29: style: Words within variable and function names should be separated by '_' rather than '.'.
      wzp4.merkmale.s$pk<=1&wzp4.merkmale.s$ba %in% ba.grupp$ba.grupp[[i]],
                            ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3908:7: style: Words within variable and function names should be separated by '_' rather than '.'.
      wzp4.merkmale.s$nha,0), by=list(wzp4.merkmale.s$tnr),sum)$x)
      ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3908:27: style: Commas should always have a space after.
      wzp4.merkmale.s$nha,0), by=list(wzp4.merkmale.s$tnr),sum)$x)
                          ^
NO COPY: R/BWI3_HR.R:3908:33: style: Put spaces around all infix operators.
      wzp4.merkmale.s$nha,0), by=list(wzp4.merkmale.s$tnr),sum)$x)
                               ~^~
NO COPY: R/BWI3_HR.R:3908:39: style: Words within variable and function names should be separated by '_' rather than '.'.
      wzp4.merkmale.s$nha,0), by=list(wzp4.merkmale.s$tnr),sum)$x)
                                      ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3908:60: style: Commas should always have a space after.
      wzp4.merkmale.s$nha,0), by=list(wzp4.merkmale.s$tnr),sum)$x)
                                                           ^
NO COPY: R/BWI3_HR.R:3909:18: style: Trailing whitespace is superfluous.
    #Gesamtvorrat 
                 ^
NO COPY: R/BWI3_HR.R:3910:34: style: Commas should always have a space after.
    merkmal.t <- cbind(merkmal.t,stats::aggregate(ifelse(
                                 ^
NO COPY: R/BWI3_HR.R:3911:7: style: Words within variable and function names should be separated by '_' rather than '.'.
      wzp4.merkmale.s$pk<=1&wzp4.merkmale.s$ba %in% ba.grupp$ba.grupp[[i]],
      ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3911:25: style: Put spaces around all infix operators.
      wzp4.merkmale.s$pk<=1&wzp4.merkmale.s$ba %in% ba.grupp$ba.grupp[[i]],
                       ~^~~
NO COPY: R/BWI3_HR.R:3911:28: style: Put spaces around all infix operators.
      wzp4.merkmale.s$pk<=1&wzp4.merkmale.s$ba %in% ba.grupp$ba.grupp[[i]],
                          ~^~
NO COPY: R/BWI3_HR.R:3911:29: style: Words within variable and function names should be separated by '_' rather than '.'.
      wzp4.merkmale.s$pk<=1&wzp4.merkmale.s$ba %in% ba.grupp$ba.grupp[[i]],
                            ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3912:7: style: Words within variable and function names should be separated by '_' rather than '.'.
      wzp4.merkmale.s$nha*wzp4.merkmale.s$volv,0),
      ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3912:26: style: Put spaces around all infix operators.
      wzp4.merkmale.s$nha*wzp4.merkmale.s$volv,0),
                        ~^~
NO COPY: R/BWI3_HR.R:3912:27: style: Words within variable and function names should be separated by '_' rather than '.'.
      wzp4.merkmale.s$nha*wzp4.merkmale.s$volv,0),
                          ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3912:48: style: Commas should always have a space after.
      wzp4.merkmale.s$nha*wzp4.merkmale.s$volv,0),
                                               ^
NO COPY: R/BWI3_HR.R:3913:9: style: Put spaces around all infix operators.
      by=list(wzp4.merkmale.s$tnr),sum)$x)
       ~^~
NO COPY: R/BWI3_HR.R:3913:15: style: Words within variable and function names should be separated by '_' rather than '.'.
      by=list(wzp4.merkmale.s$tnr),sum)$x)
              ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3913:36: style: Commas should always have a space after.
      by=list(wzp4.merkmale.s$tnr),sum)$x)
                                   ^
NO COPY: R/BWI3_HR.R:3914:1: style: Trailing whitespace is superfluous.
    
^~~~
NO COPY: R/BWI3_HR.R:3915:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: R/BWI3_HR.R:3916:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: R/BWI3_HR.R:3917:1: style: lines should not be more than 80 characters.
    names(merkmal.t) <- c("tnr","N.MM","V.MM","oiB.MM","SthV.MM","N.ges","V.ges")
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3917:33: style: Commas should always have a space after.
    names(merkmal.t) <- c("tnr","N.MM","V.MM","oiB.MM","SthV.MM","N.ges","V.ges")
                                ^
NO COPY: R/BWI3_HR.R:3917:40: style: Commas should always have a space after.
    names(merkmal.t) <- c("tnr","N.MM","V.MM","oiB.MM","SthV.MM","N.ges","V.ges")
                                       ^
NO COPY: R/BWI3_HR.R:3917:47: style: Commas should always have a space after.
    names(merkmal.t) <- c("tnr","N.MM","V.MM","oiB.MM","SthV.MM","N.ges","V.ges")
                                              ^
NO COPY: R/BWI3_HR.R:3917:56: style: Commas should always have a space after.
    names(merkmal.t) <- c("tnr","N.MM","V.MM","oiB.MM","SthV.MM","N.ges","V.ges")
                                                       ^
NO COPY: R/BWI3_HR.R:3917:66: style: Commas should always have a space after.
    names(merkmal.t) <- c("tnr","N.MM","V.MM","oiB.MM","SthV.MM","N.ges","V.ges")
                                                                 ^
NO COPY: R/BWI3_HR.R:3917:74: style: Commas should always have a space after.
    names(merkmal.t) <- c("tnr","N.MM","V.MM","oiB.MM","SthV.MM","N.ges","V.ges")
                                                                         ^
NO COPY: R/BWI3_HR.R:3919:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: R/BWI3_HR.R:3920:55: style: Commas should always have a space after.
    merkmal.t <- merge(xy[TRUE, c("tnr", "m", "hbf")],merkmal.t,by="tnr",
                                                      ^
NO COPY: R/BWI3_HR.R:3920:65: style: Commas should always have a space after.
    merkmal.t <- merge(xy[TRUE, c("tnr", "m", "hbf")],merkmal.t,by="tnr",
                                                                ^
NO COPY: R/BWI3_HR.R:3920:67: style: Put spaces around all infix operators.
    merkmal.t <- merge(xy[TRUE, c("tnr", "m", "hbf")],merkmal.t,by="tnr",
                                                                 ~^~
NO COPY: R/BWI3_HR.R:3921:28: style: Put spaces around all infix operators.
                      all.x=T)
                          ~^~
NO COPY: R/BWI3_HR.R:3923:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: R/BWI3_HR.R:3924:27: style: Commas should always have a space after.
    n <- length(trakte.3[,1])# TODO: is trakte.3 really the one? Is this a bug?
                          ^
NO COPY: R/BWI3_HR.R:3927:46: style: Commas should always have a space after.
    R.xy <- r.variance.fun(cbind(merkmal.t$m,merkmal.t$N.MM),n)
                                             ^
NO COPY: R/BWI3_HR.R:3927:62: style: Commas should always have a space after.
    R.xy <- r.variance.fun(cbind(merkmal.t$m,merkmal.t$N.MM),n)
                                                             ^
NO COPY: R/BWI3_HR.R:3928:6: style: Words within variable and function names should be separated by '_' rather than '.'.
    (T.N.MM <- R.xy$R.xy*A)
     ^~~~~~
NO COPY: R/BWI3_HR.R:3928:25: style: Put spaces around all infix operators.
    (T.N.MM <- R.xy$R.xy*A)
                       ~^~
NO COPY: R/BWI3_HR.R:3929:6: style: Words within variable and function names should be separated by '_' rather than '.'.
    (se.T.N.MM <- R.xy$V.R.xy^0.5*A)
     ^~~~~~~~~
NO COPY: R/BWI3_HR.R:3929:24: style: Words within variable and function names should be separated by '_' rather than '.'.
    (se.T.N.MM <- R.xy$V.R.xy^0.5*A)
                       ^~~~~~
NO COPY: R/BWI3_HR.R:3929:30: style: Put spaces around all infix operators.
    (se.T.N.MM <- R.xy$V.R.xy^0.5*A)
                            ~^~
NO COPY: R/BWI3_HR.R:3929:34: style: Put spaces around all infix operators.
    (se.T.N.MM <- R.xy$V.R.xy^0.5*A)
                                ~^~
NO COPY: R/BWI3_HR.R:3930:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: R/BWI3_HR.R:3932:48: style: Commas should always have a space after.
    R.xy <- r.variance.fun(cbind(merkmal.t$hbf,merkmal.t$N.MM),n)
                                               ^
NO COPY: R/BWI3_HR.R:3932:64: style: Commas should always have a space after.
    R.xy <- r.variance.fun(cbind(merkmal.t$hbf,merkmal.t$N.MM),n)
                                                               ^
NO COPY: R/BWI3_HR.R:3933:6: style: Words within variable and function names should be separated by '_' rather than '.'.
    (N.MM.ha <- R.xy$R.xy)
     ^~~~~~~
NO COPY: R/BWI3_HR.R:3934:6: style: Words within variable and function names should be separated by '_' rather than '.'.
    (se.N.MM.ha <- R.xy$V.R.xy^0.5)
     ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:3934:25: style: Words within variable and function names should be separated by '_' rather than '.'.
    (se.N.MM.ha <- R.xy$V.R.xy^0.5)
                        ^~~~~~
NO COPY: R/BWI3_HR.R:3934:31: style: Put spaces around all infix operators.
    (se.N.MM.ha <- R.xy$V.R.xy^0.5)
                             ~^~
NO COPY: R/BWI3_HR.R:3935:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: R/BWI3_HR.R:3937:46: style: Commas should always have a space after.
    R.xy <- r.variance.fun(cbind(merkmal.t$m,merkmal.t$V.MM),n)
                                             ^
NO COPY: R/BWI3_HR.R:3937:62: style: Commas should always have a space after.
    R.xy <- r.variance.fun(cbind(merkmal.t$m,merkmal.t$V.MM),n)
                                                             ^
NO COPY: R/BWI3_HR.R:3938:6: style: Words within variable and function names should be separated by '_' rather than '.'.
    (T.V.MM <- R.xy$R.xy*A)
     ^~~~~~
NO COPY: R/BWI3_HR.R:3938:25: style: Put spaces around all infix operators.
    (T.V.MM <- R.xy$R.xy*A)
                       ~^~
NO COPY: R/BWI3_HR.R:3939:6: style: Words within variable and function names should be separated by '_' rather than '.'.
    (se.T.V.MM <- R.xy$V.R.xy^0.5*A)
     ^~~~~~~~~
NO COPY: R/BWI3_HR.R:3939:24: style: Words within variable and function names should be separated by '_' rather than '.'.
    (se.T.V.MM <- R.xy$V.R.xy^0.5*A)
                       ^~~~~~
NO COPY: R/BWI3_HR.R:3939:30: style: Put spaces around all infix operators.
    (se.T.V.MM <- R.xy$V.R.xy^0.5*A)
                            ~^~
NO COPY: R/BWI3_HR.R:3939:34: style: Put spaces around all infix operators.
    (se.T.V.MM <- R.xy$V.R.xy^0.5*A)
                                ~^~
NO COPY: R/BWI3_HR.R:3940:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: R/BWI3_HR.R:3942:48: style: Commas should always have a space after.
    R.xy <- r.variance.fun(cbind(merkmal.t$hbf,merkmal.t$V.MM),n)
                                               ^
NO COPY: R/BWI3_HR.R:3942:64: style: Commas should always have a space after.
    R.xy <- r.variance.fun(cbind(merkmal.t$hbf,merkmal.t$V.MM),n)
                                                               ^
NO COPY: R/BWI3_HR.R:3943:6: style: Words within variable and function names should be separated by '_' rather than '.'.
    (V.MM.ha <- R.xy$R.xy)
     ^~~~~~~
NO COPY: R/BWI3_HR.R:3944:6: style: Words within variable and function names should be separated by '_' rather than '.'.
    (se.V.MM.ha <- R.xy$V.R.xy^0.5)
     ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:3944:25: style: Words within variable and function names should be separated by '_' rather than '.'.
    (se.V.MM.ha <- R.xy$V.R.xy^0.5)
                        ^~~~~~
NO COPY: R/BWI3_HR.R:3944:31: style: Put spaces around all infix operators.
    (se.V.MM.ha <- R.xy$V.R.xy^0.5)
                             ~^~
NO COPY: R/BWI3_HR.R:3945:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: R/BWI3_HR.R:3947:49: style: Commas should always have a space after.
    R.xy <- r.variance.fun(cbind(merkmal.t$N.MM,merkmal.t$V.MM),n)
                                                ^
NO COPY: R/BWI3_HR.R:3947:65: style: Commas should always have a space after.
    R.xy <- r.variance.fun(cbind(merkmal.t$N.MM,merkmal.t$V.MM),n)
                                                                ^
NO COPY: R/BWI3_HR.R:3948:6: style: Words within variable and function names should be separated by '_' rather than '.'.
    (V.MM.Stck <- R.xy$R.xy)
     ^~~~~~~~~
NO COPY: R/BWI3_HR.R:3949:6: style: Words within variable and function names should be separated by '_' rather than '.'.
    (se.V.MM.Stck <- R.xy$V.R.xy^0.5)
     ^~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3949:27: style: Words within variable and function names should be separated by '_' rather than '.'.
    (se.V.MM.Stck <- R.xy$V.R.xy^0.5)
                          ^~~~~~
NO COPY: R/BWI3_HR.R:3949:33: style: Put spaces around all infix operators.
    (se.V.MM.Stck <- R.xy$V.R.xy^0.5)
                               ~^~
NO COPY: R/BWI3_HR.R:3950:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: R/BWI3_HR.R:3952:46: style: Commas should always have a space after.
    R.xy <- r.variance.fun(cbind(merkmal.t$m,merkmal.t$oiB.MM),n)
                                             ^
NO COPY: R/BWI3_HR.R:3952:56: style: Variable and function names should be all lowercase.
    R.xy <- r.variance.fun(cbind(merkmal.t$m,merkmal.t$oiB.MM),n)
                                                       ^~~~~~
NO COPY: R/BWI3_HR.R:3952:64: style: Commas should always have a space after.
    R.xy <- r.variance.fun(cbind(merkmal.t$m,merkmal.t$oiB.MM),n)
                                                               ^
NO COPY: R/BWI3_HR.R:3953:6: style: Variable and function names should be all lowercase.
    (T.oiB.MM <- R.xy$R.xy*A/1000)
     ^~~~~~~~
NO COPY: R/BWI3_HR.R:3953:6: style: Words within variable and function names should be separated by '_' rather than '.'.
    (T.oiB.MM <- R.xy$R.xy*A/1000)
     ^~~~~~~~
NO COPY: R/BWI3_HR.R:3953:27: style: Put spaces around all infix operators.
    (T.oiB.MM <- R.xy$R.xy*A/1000)
                         ~^~
NO COPY: R/BWI3_HR.R:3953:29: style: Put spaces around all infix operators.
    (T.oiB.MM <- R.xy$R.xy*A/1000)
                           ~^~
NO COPY: R/BWI3_HR.R:3954:6: style: Variable and function names should be all lowercase.
    (se.T.oiB.MM <- R.xy$V.R.xy^0.5*A/1000)
     ^~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3954:6: style: Words within variable and function names should be separated by '_' rather than '.'.
    (se.T.oiB.MM <- R.xy$V.R.xy^0.5*A/1000)
     ^~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3954:26: style: Words within variable and function names should be separated by '_' rather than '.'.
    (se.T.oiB.MM <- R.xy$V.R.xy^0.5*A/1000)
                         ^~~~~~
NO COPY: R/BWI3_HR.R:3954:32: style: Put spaces around all infix operators.
    (se.T.oiB.MM <- R.xy$V.R.xy^0.5*A/1000)
                              ~^~
NO COPY: R/BWI3_HR.R:3954:36: style: Put spaces around all infix operators.
    (se.T.oiB.MM <- R.xy$V.R.xy^0.5*A/1000)
                                  ~^~
NO COPY: R/BWI3_HR.R:3954:38: style: Put spaces around all infix operators.
    (se.T.oiB.MM <- R.xy$V.R.xy^0.5*A/1000)
                                    ~^~
NO COPY: R/BWI3_HR.R:3955:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: R/BWI3_HR.R:3957:48: style: Commas should always have a space after.
    R.xy <- r.variance.fun(cbind(merkmal.t$hbf,merkmal.t$oiB.MM),n)
                                               ^
NO COPY: R/BWI3_HR.R:3957:58: style: Variable and function names should be all lowercase.
    R.xy <- r.variance.fun(cbind(merkmal.t$hbf,merkmal.t$oiB.MM),n)
                                                         ^~~~~~
NO COPY: R/BWI3_HR.R:3957:66: style: Commas should always have a space after.
    R.xy <- r.variance.fun(cbind(merkmal.t$hbf,merkmal.t$oiB.MM),n)
                                                                 ^
NO COPY: R/BWI3_HR.R:3958:6: style: Variable and function names should be all lowercase.
    (oiB.MM.ha <- R.xy$R.xy/1000)
     ^~~~~~~~~
NO COPY: R/BWI3_HR.R:3958:6: style: Words within variable and function names should be separated by '_' rather than '.'.
    (oiB.MM.ha <- R.xy$R.xy/1000)
     ^~~~~~~~~
NO COPY: R/BWI3_HR.R:3958:28: style: Put spaces around all infix operators.
    (oiB.MM.ha <- R.xy$R.xy/1000)
                          ~^~
NO COPY: R/BWI3_HR.R:3959:6: style: Variable and function names should be all lowercase.
    (se.oiB.MM.ha <- R.xy$V.R.xy^0.5/1000)
     ^~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3959:6: style: Words within variable and function names should be separated by '_' rather than '.'.
    (se.oiB.MM.ha <- R.xy$V.R.xy^0.5/1000)
     ^~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3959:27: style: Words within variable and function names should be separated by '_' rather than '.'.
    (se.oiB.MM.ha <- R.xy$V.R.xy^0.5/1000)
                          ^~~~~~
NO COPY: R/BWI3_HR.R:3959:33: style: Put spaces around all infix operators.
    (se.oiB.MM.ha <- R.xy$V.R.xy^0.5/1000)
                               ~^~
NO COPY: R/BWI3_HR.R:3959:37: style: Put spaces around all infix operators.
    (se.oiB.MM.ha <- R.xy$V.R.xy^0.5/1000)
                                   ~^~
NO COPY: R/BWI3_HR.R:3960:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: R/BWI3_HR.R:3962:50: style: Commas should always have a space after.
    R.xy <- r.variance.fun(cbind(merkmal.t$N.ges,merkmal.t$N.MM),n)
                                                 ^
NO COPY: R/BWI3_HR.R:3962:66: style: Commas should always have a space after.
    R.xy <- r.variance.fun(cbind(merkmal.t$N.ges,merkmal.t$N.MM),n)
                                                                 ^
NO COPY: R/BWI3_HR.R:3963:6: style: Words within variable and function names should be separated by '_' rather than '.'.
    (Anteil.MM.N <- R.xy$R.xy)
     ^~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3964:6: style: Words within variable and function names should be separated by '_' rather than '.'.
    (se.Anteil.MM.N <- R.xy$V.R.xy^0.5)
     ^~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3964:29: style: Words within variable and function names should be separated by '_' rather than '.'.
    (se.Anteil.MM.N <- R.xy$V.R.xy^0.5)
                            ^~~~~~
NO COPY: R/BWI3_HR.R:3964:35: style: Put spaces around all infix operators.
    (se.Anteil.MM.N <- R.xy$V.R.xy^0.5)
                                 ~^~
NO COPY: R/BWI3_HR.R:3965:1: style: Trailing whitespace is superfluous.
    
^~~~
NO COPY: R/BWI3_HR.R:3967:50: style: Commas should always have a space after.
    R.xy <- r.variance.fun(cbind(merkmal.t$V.ges,merkmal.t$V.MM),n)
                                                 ^
NO COPY: R/BWI3_HR.R:3967:66: style: Commas should always have a space after.
    R.xy <- r.variance.fun(cbind(merkmal.t$V.ges,merkmal.t$V.MM),n)
                                                                 ^
NO COPY: R/BWI3_HR.R:3968:6: style: Words within variable and function names should be separated by '_' rather than '.'.
    (Anteil.MM.V <- R.xy$R.xy)
     ^~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3969:6: style: Words within variable and function names should be separated by '_' rather than '.'.
    (se.Anteil.MM.V <- R.xy$V.R.xy^0.5)
     ^~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3969:29: style: Words within variable and function names should be separated by '_' rather than '.'.
    (se.Anteil.MM.V <- R.xy$V.R.xy^0.5)
                            ^~~~~~
NO COPY: R/BWI3_HR.R:3969:35: style: Put spaces around all infix operators.
    (se.Anteil.MM.V <- R.xy$V.R.xy^0.5)
                                 ~^~
NO COPY: R/BWI3_HR.R:3970:1: style: Trailing whitespace is superfluous.
    
^~~~
NO COPY: R/BWI3_HR.R:3971:1: style: Trailing whitespace is superfluous.
    
^~~~
NO COPY: R/BWI3_HR.R:3973:5: style: Words within variable and function names should be separated by '_' rather than '.'.
    attr.bagr.tab[,1,i] <- 
    ^~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3973:20: style: Commas should always have a space after.
    attr.bagr.tab[,1,i] <- 
                   ^
NO COPY: R/BWI3_HR.R:3973:22: style: Commas should always have a space after.
    attr.bagr.tab[,1,i] <- 
                     ^
NO COPY: R/BWI3_HR.R:3973:27: style: Trailing whitespace is superfluous.
    attr.bagr.tab[,1,i] <- 
                          ^
NO COPY: R/BWI3_HR.R:3974:17: style: Words within variable and function names should be separated by '_' rather than '.'.
              c(T.N.MM,N.MM.ha,T.V.MM,V.MM.ha,V.MM.Stck,T.oiB.MM,oiB.MM.ha,
                ^~~~~~
NO COPY: R/BWI3_HR.R:3974:24: style: Commas should always have a space after.
              c(T.N.MM,N.MM.ha,T.V.MM,V.MM.ha,V.MM.Stck,T.oiB.MM,oiB.MM.ha,
                       ^
NO COPY: R/BWI3_HR.R:3974:24: style: Words within variable and function names should be separated by '_' rather than '.'.
              c(T.N.MM,N.MM.ha,T.V.MM,V.MM.ha,V.MM.Stck,T.oiB.MM,oiB.MM.ha,
                       ^~~~~~~
NO COPY: R/BWI3_HR.R:3974:32: style: Commas should always have a space after.
              c(T.N.MM,N.MM.ha,T.V.MM,V.MM.ha,V.MM.Stck,T.oiB.MM,oiB.MM.ha,
                               ^
NO COPY: R/BWI3_HR.R:3974:32: style: Words within variable and function names should be separated by '_' rather than '.'.
              c(T.N.MM,N.MM.ha,T.V.MM,V.MM.ha,V.MM.Stck,T.oiB.MM,oiB.MM.ha,
                               ^~~~~~
NO COPY: R/BWI3_HR.R:3974:39: style: Commas should always have a space after.
              c(T.N.MM,N.MM.ha,T.V.MM,V.MM.ha,V.MM.Stck,T.oiB.MM,oiB.MM.ha,
                                      ^
NO COPY: R/BWI3_HR.R:3974:39: style: Words within variable and function names should be separated by '_' rather than '.'.
              c(T.N.MM,N.MM.ha,T.V.MM,V.MM.ha,V.MM.Stck,T.oiB.MM,oiB.MM.ha,
                                      ^~~~~~~
NO COPY: R/BWI3_HR.R:3974:47: style: Commas should always have a space after.
              c(T.N.MM,N.MM.ha,T.V.MM,V.MM.ha,V.MM.Stck,T.oiB.MM,oiB.MM.ha,
                                              ^
NO COPY: R/BWI3_HR.R:3974:47: style: Words within variable and function names should be separated by '_' rather than '.'.
              c(T.N.MM,N.MM.ha,T.V.MM,V.MM.ha,V.MM.Stck,T.oiB.MM,oiB.MM.ha,
                                              ^~~~~~~~~
NO COPY: R/BWI3_HR.R:3974:57: style: Commas should always have a space after.
              c(T.N.MM,N.MM.ha,T.V.MM,V.MM.ha,V.MM.Stck,T.oiB.MM,oiB.MM.ha,
                                                        ^
NO COPY: R/BWI3_HR.R:3974:57: style: Variable and function names should be all lowercase.
              c(T.N.MM,N.MM.ha,T.V.MM,V.MM.ha,V.MM.Stck,T.oiB.MM,oiB.MM.ha,
                                                        ^~~~~~~~
NO COPY: R/BWI3_HR.R:3974:57: style: Words within variable and function names should be separated by '_' rather than '.'.
              c(T.N.MM,N.MM.ha,T.V.MM,V.MM.ha,V.MM.Stck,T.oiB.MM,oiB.MM.ha,
                                                        ^~~~~~~~
NO COPY: R/BWI3_HR.R:3974:66: style: Commas should always have a space after.
              c(T.N.MM,N.MM.ha,T.V.MM,V.MM.ha,V.MM.Stck,T.oiB.MM,oiB.MM.ha,
                                                                 ^
NO COPY: R/BWI3_HR.R:3974:66: style: Variable and function names should be all lowercase.
              c(T.N.MM,N.MM.ha,T.V.MM,V.MM.ha,V.MM.Stck,T.oiB.MM,oiB.MM.ha,
                                                                 ^~~~~~~~~
NO COPY: R/BWI3_HR.R:3974:66: style: Words within variable and function names should be separated by '_' rather than '.'.
              c(T.N.MM,N.MM.ha,T.V.MM,V.MM.ha,V.MM.Stck,T.oiB.MM,oiB.MM.ha,
                                                                 ^~~~~~~~~
NO COPY: R/BWI3_HR.R:3975:15: style: Words within variable and function names should be separated by '_' rather than '.'.
              Anteil.MM.N*100,Anteil.MM.V*100)
              ^~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3975:26: style: Put spaces around all infix operators.
              Anteil.MM.N*100,Anteil.MM.V*100)
                        ~^~
NO COPY: R/BWI3_HR.R:3975:31: style: Commas should always have a space after.
              Anteil.MM.N*100,Anteil.MM.V*100)
                              ^
NO COPY: R/BWI3_HR.R:3975:31: style: Words within variable and function names should be separated by '_' rather than '.'.
              Anteil.MM.N*100,Anteil.MM.V*100)
                              ^~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3975:42: style: Put spaces around all infix operators.
              Anteil.MM.N*100,Anteil.MM.V*100)
                                        ~^~
NO COPY: R/BWI3_HR.R:3976:1: style: lines should not be more than 80 characters.
    attr.bagr.tab[,2,i] <- c(se.T.N.MM,se.N.MM.ha,se.T.V.MM,se.V.MM.ha,se.V.MM.Stck,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3976:5: style: Words within variable and function names should be separated by '_' rather than '.'.
    attr.bagr.tab[,2,i] <- c(se.T.N.MM,se.N.MM.ha,se.T.V.MM,se.V.MM.ha,se.V.MM.Stck,
    ^~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3976:20: style: Commas should always have a space after.
    attr.bagr.tab[,2,i] <- c(se.T.N.MM,se.N.MM.ha,se.T.V.MM,se.V.MM.ha,se.V.MM.Stck,
                   ^
NO COPY: R/BWI3_HR.R:3976:22: style: Commas should always have a space after.
    attr.bagr.tab[,2,i] <- c(se.T.N.MM,se.N.MM.ha,se.T.V.MM,se.V.MM.ha,se.V.MM.Stck,
                     ^
NO COPY: R/BWI3_HR.R:3976:30: style: Words within variable and function names should be separated by '_' rather than '.'.
    attr.bagr.tab[,2,i] <- c(se.T.N.MM,se.N.MM.ha,se.T.V.MM,se.V.MM.ha,se.V.MM.Stck,
                             ^~~~~~~~~
NO COPY: R/BWI3_HR.R:3976:40: style: Commas should always have a space after.
    attr.bagr.tab[,2,i] <- c(se.T.N.MM,se.N.MM.ha,se.T.V.MM,se.V.MM.ha,se.V.MM.Stck,
                                       ^
NO COPY: R/BWI3_HR.R:3976:40: style: Words within variable and function names should be separated by '_' rather than '.'.
    attr.bagr.tab[,2,i] <- c(se.T.N.MM,se.N.MM.ha,se.T.V.MM,se.V.MM.ha,se.V.MM.Stck,
                                       ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:3976:51: style: Commas should always have a space after.
    attr.bagr.tab[,2,i] <- c(se.T.N.MM,se.N.MM.ha,se.T.V.MM,se.V.MM.ha,se.V.MM.Stck,
                                                  ^
NO COPY: R/BWI3_HR.R:3976:51: style: Words within variable and function names should be separated by '_' rather than '.'.
    attr.bagr.tab[,2,i] <- c(se.T.N.MM,se.N.MM.ha,se.T.V.MM,se.V.MM.ha,se.V.MM.Stck,
                                                  ^~~~~~~~~
NO COPY: R/BWI3_HR.R:3976:61: style: Commas should always have a space after.
    attr.bagr.tab[,2,i] <- c(se.T.N.MM,se.N.MM.ha,se.T.V.MM,se.V.MM.ha,se.V.MM.Stck,
                                                            ^
NO COPY: R/BWI3_HR.R:3976:61: style: Words within variable and function names should be separated by '_' rather than '.'.
    attr.bagr.tab[,2,i] <- c(se.T.N.MM,se.N.MM.ha,se.T.V.MM,se.V.MM.ha,se.V.MM.Stck,
                                                            ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:3976:72: style: Commas should always have a space after.
    attr.bagr.tab[,2,i] <- c(se.T.N.MM,se.N.MM.ha,se.T.V.MM,se.V.MM.ha,se.V.MM.Stck,
                                                                       ^
NO COPY: R/BWI3_HR.R:3976:72: style: Words within variable and function names should be separated by '_' rather than '.'.
    attr.bagr.tab[,2,i] <- c(se.T.N.MM,se.N.MM.ha,se.T.V.MM,se.V.MM.ha,se.V.MM.Stck,
                                                                       ^~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3977:15: style: Variable and function names should be all lowercase.
              se.T.oiB.MM,se.oiB.MM.ha,se.Anteil.MM.N*100,se.Anteil.MM.V*100)
              ^~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3977:15: style: Words within variable and function names should be separated by '_' rather than '.'.
              se.T.oiB.MM,se.oiB.MM.ha,se.Anteil.MM.N*100,se.Anteil.MM.V*100)
              ^~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3977:27: style: Commas should always have a space after.
              se.T.oiB.MM,se.oiB.MM.ha,se.Anteil.MM.N*100,se.Anteil.MM.V*100)
                          ^
NO COPY: R/BWI3_HR.R:3977:27: style: Variable and function names should be all lowercase.
              se.T.oiB.MM,se.oiB.MM.ha,se.Anteil.MM.N*100,se.Anteil.MM.V*100)
                          ^~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3977:27: style: Words within variable and function names should be separated by '_' rather than '.'.
              se.T.oiB.MM,se.oiB.MM.ha,se.Anteil.MM.N*100,se.Anteil.MM.V*100)
                          ^~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3977:40: style: Commas should always have a space after.
              se.T.oiB.MM,se.oiB.MM.ha,se.Anteil.MM.N*100,se.Anteil.MM.V*100)
                                       ^
NO COPY: R/BWI3_HR.R:3977:40: style: Words within variable and function names should be separated by '_' rather than '.'.
              se.T.oiB.MM,se.oiB.MM.ha,se.Anteil.MM.N*100,se.Anteil.MM.V*100)
                                       ^~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3977:54: style: Put spaces around all infix operators.
              se.T.oiB.MM,se.oiB.MM.ha,se.Anteil.MM.N*100,se.Anteil.MM.V*100)
                                                    ~^~
NO COPY: R/BWI3_HR.R:3977:59: style: Commas should always have a space after.
              se.T.oiB.MM,se.oiB.MM.ha,se.Anteil.MM.N*100,se.Anteil.MM.V*100)
                                                          ^
NO COPY: R/BWI3_HR.R:3977:59: style: Words within variable and function names should be separated by '_' rather than '.'.
              se.T.oiB.MM,se.oiB.MM.ha,se.Anteil.MM.N*100,se.Anteil.MM.V*100)
                                                          ^~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3977:73: style: Put spaces around all infix operators.
              se.T.oiB.MM,se.oiB.MM.ha,se.Anteil.MM.N*100,se.Anteil.MM.V*100)
                                                                       ~^~
NO COPY: R/BWI3_HR.R:3978:4: style: Trailing whitespace is superfluous.
  } 
   ^
NO COPY: R/BWI3_HR.R:3979:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: R/BWI3_HR.R:3981:20: style: Commas should always have a space after.
  a <- regexpr("/",baeume$bemerk[baeume$stp==0][1],fixed=T)
                   ^
NO COPY: R/BWI3_HR.R:3981:44: style: Put spaces around all infix operators.
  a <- regexpr("/",baeume$bemerk[baeume$stp==0][1],fixed=T)
                                          ~^~~
NO COPY: R/BWI3_HR.R:3981:52: style: Commas should always have a space after.
  a <- regexpr("/",baeume$bemerk[baeume$stp==0][1],fixed=T)
                                                   ^
NO COPY: R/BWI3_HR.R:3981:57: style: Put spaces around all infix operators.
  a <- regexpr("/",baeume$bemerk[baeume$stp==0][1],fixed=T)
                                                       ~^~
NO COPY: R/BWI3_HR.R:3982:51: style: Put spaces around all infix operators.
  b <- nchar(as.character(baeume$bemerk[baeume$stp==0][1]))
                                                 ~^~~
NO COPY: R/BWI3_HR.R:3983:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  version.baeume.b  <- substr(as.character(baeume$bemerk[baeume$stp==0][1]),a,b)
  ^~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3983:3: warning: local variable 'version.baeume.b' assigned but may not be used
  version.baeume.b  <- substr(as.character(baeume$bemerk[baeume$stp==0][1]),a,b)
  ^~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3983:68: style: Put spaces around all infix operators.
  version.baeume.b  <- substr(as.character(baeume$bemerk[baeume$stp==0][1]),a,b)
                                                                  ~^~~
NO COPY: R/BWI3_HR.R:3983:77: style: Commas should always have a space after.
  version.baeume.b  <- substr(as.character(baeume$bemerk[baeume$stp==0][1]),a,b)
                                                                            ^
NO COPY: R/BWI3_HR.R:3983:79: style: Commas should always have a space after.
  version.baeume.b  <- substr(as.character(baeume$bemerk[baeume$stp==0][1]),a,b)
                                                                              ^
NO COPY: R/BWI3_HR.R:3984:20: style: Put spaces around all infix operators.
  Log <- list(Datum=Sys.time(),
                  ~^~
NO COPY: R/BWI3_HR.R:3985:1: style: lines should not be more than 80 characters.
      Version.baeume.b=substr(as.character(baeume$bemerk[baeume$stp==0][1]),a,b))
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3985:23: style: Put spaces around all infix operators.
      Version.baeume.b=substr(as.character(baeume$bemerk[baeume$stp==0][1]),a,b))
                     ~^~
NO COPY: R/BWI3_HR.R:3985:68: style: Put spaces around all infix operators.
      Version.baeume.b=substr(as.character(baeume$bemerk[baeume$stp==0][1]),a,b))
                                                                  ~^~~
NO COPY: R/BWI3_HR.R:3985:77: style: Commas should always have a space after.
      Version.baeume.b=substr(as.character(baeume$bemerk[baeume$stp==0][1]),a,b))
                                                                            ^
NO COPY: R/BWI3_HR.R:3985:79: style: Commas should always have a space after.
      Version.baeume.b=substr(as.character(baeume$bemerk[baeume$stp==0][1]),a,b))
                                                                              ^
NO COPY: R/BWI3_HR.R:3987:19: style: Put spaces around all infix operators.
  return( list(Log=Log, Stratum=auswahl, nTE=n.te.s, HBF=T.hbf, se.HBF=se.T.hbf,
                 ~^~
NO COPY: R/BWI3_HR.R:3987:32: style: Put spaces around all infix operators.
  return( list(Log=Log, Stratum=auswahl, nTE=n.te.s, HBF=T.hbf, se.HBF=se.T.hbf,
                              ~^~
NO COPY: R/BWI3_HR.R:3987:45: style: Put spaces around all infix operators.
  return( list(Log=Log, Stratum=auswahl, nTE=n.te.s, HBF=T.hbf, se.HBF=se.T.hbf,
                                           ~^~
NO COPY: R/BWI3_HR.R:3987:46: style: Words within variable and function names should be separated by '_' rather than '.'.
  return( list(Log=Log, Stratum=auswahl, nTE=n.te.s, HBF=T.hbf, se.HBF=se.T.hbf,
                                             ^~~~~~
NO COPY: R/BWI3_HR.R:3987:57: style: Put spaces around all infix operators.
  return( list(Log=Log, Stratum=auswahl, nTE=n.te.s, HBF=T.hbf, se.HBF=se.T.hbf,
                                                       ~^~
NO COPY: R/BWI3_HR.R:3987:71: style: Put spaces around all infix operators.
  return( list(Log=Log, Stratum=auswahl, nTE=n.te.s, HBF=T.hbf, se.HBF=se.T.hbf,
                                                                     ~^~
NO COPY: R/BWI3_HR.R:3987:72: style: Words within variable and function names should be separated by '_' rather than '.'.
  return( list(Log=Log, Stratum=auswahl, nTE=n.te.s, HBF=T.hbf, se.HBF=se.T.hbf,
                                                                       ^~~~~~~~
NO COPY: R/BWI3_HR.R:3988:17: style: Put spaces around all infix operators.
              BL=T.bl,se.BL=se.T.bl,iBL=T.ibl,se.iBL=se.T.ibl,LK=lk,se.LK=se.lk,
               ~^~
NO COPY: R/BWI3_HR.R:3988:23: style: Commas should always have a space after.
              BL=T.bl,se.BL=se.T.bl,iBL=T.ibl,se.iBL=se.T.ibl,LK=lk,se.LK=se.lk,
                      ^
NO COPY: R/BWI3_HR.R:3988:28: style: Put spaces around all infix operators.
              BL=T.bl,se.BL=se.T.bl,iBL=T.ibl,se.iBL=se.T.ibl,LK=lk,se.LK=se.lk,
                          ~^~
NO COPY: R/BWI3_HR.R:3988:29: style: Words within variable and function names should be separated by '_' rather than '.'.
              BL=T.bl,se.BL=se.T.bl,iBL=T.ibl,se.iBL=se.T.ibl,LK=lk,se.LK=se.lk,
                            ^~~~~~~
NO COPY: R/BWI3_HR.R:3988:37: style: Commas should always have a space after.
              BL=T.bl,se.BL=se.T.bl,iBL=T.ibl,se.iBL=se.T.ibl,LK=lk,se.LK=se.lk,
                                    ^
NO COPY: R/BWI3_HR.R:3988:40: style: Put spaces around all infix operators.
              BL=T.bl,se.BL=se.T.bl,iBL=T.ibl,se.iBL=se.T.ibl,LK=lk,se.LK=se.lk,
                                      ~^~
NO COPY: R/BWI3_HR.R:3988:47: style: Commas should always have a space after.
              BL=T.bl,se.BL=se.T.bl,iBL=T.ibl,se.iBL=se.T.ibl,LK=lk,se.LK=se.lk,
                                              ^
NO COPY: R/BWI3_HR.R:3988:53: style: Put spaces around all infix operators.
              BL=T.bl,se.BL=se.T.bl,iBL=T.ibl,se.iBL=se.T.ibl,LK=lk,se.LK=se.lk,
                                                   ~^~
NO COPY: R/BWI3_HR.R:3988:54: style: Words within variable and function names should be separated by '_' rather than '.'.
              BL=T.bl,se.BL=se.T.bl,iBL=T.ibl,se.iBL=se.T.ibl,LK=lk,se.LK=se.lk,
                                                     ^~~~~~~~
NO COPY: R/BWI3_HR.R:3988:63: style: Commas should always have a space after.
              BL=T.bl,se.BL=se.T.bl,iBL=T.ibl,se.iBL=se.T.ibl,LK=lk,se.LK=se.lk,
                                                              ^
NO COPY: R/BWI3_HR.R:3988:65: style: Put spaces around all infix operators.
              BL=T.bl,se.BL=se.T.bl,iBL=T.ibl,se.iBL=se.T.ibl,LK=lk,se.LK=se.lk,
                                                               ~^~
NO COPY: R/BWI3_HR.R:3988:69: style: Commas should always have a space after.
              BL=T.bl,se.BL=se.T.bl,iBL=T.ibl,se.iBL=se.T.ibl,LK=lk,se.LK=se.lk,
                                                                    ^
NO COPY: R/BWI3_HR.R:3988:74: style: Put spaces around all infix operators.
              BL=T.bl,se.BL=se.T.bl,iBL=T.ibl,se.iBL=se.T.ibl,LK=lk,se.LK=se.lk,
                                                                        ~^~
NO COPY: R/BWI3_HR.R:3989:23: style: Put spaces around all infix operators.
              Merkmale=merkmale,BAGR=ba.grupp$bagr.lab,
                     ~^~
NO COPY: R/BWI3_HR.R:3989:33: style: Commas should always have a space after.
              Merkmale=merkmale,BAGR=ba.grupp$bagr.lab,
                                ^
NO COPY: R/BWI3_HR.R:3989:37: style: Put spaces around all infix operators.
              Merkmale=merkmale,BAGR=ba.grupp$bagr.lab,
                                   ~^~
NO COPY: R/BWI3_HR.R:3990:24: style: Put spaces around all infix operators.
              Kennwerte=Kennwerte,
                      ~^~
NO COPY: R/BWI3_HR.R:3991:36: style: Put spaces around all infix operators.
              Kennwert_Tabelle_BAGR=attr.bagr.tab))
                                  ~^~
NO COPY: R/BWI3_HR.R:3991:37: style: Words within variable and function names should be separated by '_' rather than '.'.
              Kennwert_Tabelle_BAGR=attr.bagr.tab))
                                    ^~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3992:1: style: Trailing whitespace is superfluous.
              
^~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:3993:2: style: Trailing whitespace is superfluous.
}  
 ^~
NO COPY: R/BWI3_HR.R:4034:33: style: Commas should always have a space after.
fba.stratum.fun <- function(fba,fba.tab,auswahl,ecken,trakte,A){
                                ^
NO COPY: R/BWI3_HR.R:4034:41: style: Commas should always have a space after.
fba.stratum.fun <- function(fba,fba.tab,auswahl,ecken,trakte,A){
                                        ^
NO COPY: R/BWI3_HR.R:4034:49: style: Commas should always have a space after.
fba.stratum.fun <- function(fba,fba.tab,auswahl,ecken,trakte,A){
                                                ^
NO COPY: R/BWI3_HR.R:4034:55: style: Commas should always have a space after.
fba.stratum.fun <- function(fba,fba.tab,auswahl,ecken,trakte,A){
                                                      ^
NO COPY: R/BWI3_HR.R:4034:62: style: Commas should always have a space after.
fba.stratum.fun <- function(fba,fba.tab,auswahl,ecken,trakte,A){
                                                             ^
NO COPY: R/BWI3_HR.R:4036:34: style: Commas should always have a space after.
  stratum <- stratum.fun(auswahl,ecken)
                                 ^
NO COPY: R/BWI3_HR.R:4041:31: style: Commas should always have a space after.
  y <- stats::aggregate(rep(1,length(stratum[,1])),by=list(stratum$tnr),sum)
                              ^
NO COPY: R/BWI3_HR.R:4041:47: style: Commas should always have a space after.
  y <- stats::aggregate(rep(1,length(stratum[,1])),by=list(stratum$tnr),sum)
                                              ^
NO COPY: R/BWI3_HR.R:4041:52: style: Commas should always have a space after.
  y <- stats::aggregate(rep(1,length(stratum[,1])),by=list(stratum$tnr),sum)
                                                   ^
NO COPY: R/BWI3_HR.R:4041:54: style: Put spaces around all infix operators.
  y <- stats::aggregate(rep(1,length(stratum[,1])),by=list(stratum$tnr),sum)
                                                    ~^~
NO COPY: R/BWI3_HR.R:4041:73: style: Commas should always have a space after.
  y <- stats::aggregate(rep(1,length(stratum[,1])),by=list(stratum$tnr),sum)
                                                                        ^
NO COPY: R/BWI3_HR.R:4042:23: style: Commas should always have a space after.
  names(y) <- c("tnr","y")
                      ^
NO COPY: R/BWI3_HR.R:4047:31: style: Commas should always have a space after.
  r.list <- r.variance.fun(y[,2:3],length(trakte[,1]))
                              ^
NO COPY: R/BWI3_HR.R:4047:36: style: Commas should always have a space after.
  r.list <- r.variance.fun(y[,2:3],length(trakte[,1]))
                                   ^
NO COPY: R/BWI3_HR.R:4047:51: style: Commas should always have a space after.
  r.list <- r.variance.fun(y[,2:3],length(trakte[,1]))
                                                  ^
NO COPY: R/BWI3_HR.R:4048:23: style: Put spaces around all infix operators.
  T.hbf <- r.list$R.xy*A
                     ~^~
NO COPY: R/BWI3_HR.R:4049:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  se.T.hbf <- sqrt(r.list$V.R.xy)*A
  ^~~~~~~~
NO COPY: R/BWI3_HR.R:4049:27: style: Words within variable and function names should be separated by '_' rather than '.'.
  se.T.hbf <- sqrt(r.list$V.R.xy)*A
                          ^~~~~~
NO COPY: R/BWI3_HR.R:4049:34: style: Put spaces around all infix operators.
  se.T.hbf <- sqrt(r.list$V.R.xy)*A
                                ~^~
NO COPY: R/BWI3_HR.R:4051:35: style: Commas should always have a space after.
  nte.t <- stats::aggregate(rep(1,length(stratum[,1])),by=list(stratum$tnr),sum)
                                  ^
NO COPY: R/BWI3_HR.R:4051:51: style: Commas should always have a space after.
  nte.t <- stats::aggregate(rep(1,length(stratum[,1])),by=list(stratum$tnr),sum)
                                                  ^
NO COPY: R/BWI3_HR.R:4051:56: style: Commas should always have a space after.
  nte.t <- stats::aggregate(rep(1,length(stratum[,1])),by=list(stratum$tnr),sum)
                                                       ^
NO COPY: R/BWI3_HR.R:4051:58: style: Put spaces around all infix operators.
  nte.t <- stats::aggregate(rep(1,length(stratum[,1])),by=list(stratum$tnr),sum)
                                                        ~^~
NO COPY: R/BWI3_HR.R:4051:77: style: Commas should always have a space after.
  nte.t <- stats::aggregate(rep(1,length(stratum[,1])),by=list(stratum$tnr),sum)
                                                                            ^
NO COPY: R/BWI3_HR.R:4052:27: style: Commas should always have a space after.
  names(nte.t) <- c("tnr","nte")   
                          ^
NO COPY: R/BWI3_HR.R:4052:33: style: Trailing whitespace is superfluous.
  names(nte.t) <- c("tnr","nte")   
                                ^~~
NO COPY: R/BWI3_HR.R:4062:32: style: Put spaces around all infix operators.
  fba.tab$dichte[fba.tab$dichte==-1] <- 0
                              ~^~~
NO COPY: R/BWI3_HR.R:4063:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: R/BWI3_HR.R:4065:44: style: Commas should always have a space after.
               "Heidekraut", "Heidelbeere","Brombeere", "Riesenb\u00e4renklau",
                                           ^
NO COPY: R/BWI3_HR.R:4066:1: style: lines should not be more than 80 characters.
               "Riesenkn\u00f6terich", "Dr\u00fcsiges Springkraut","Kleinbl\u00fctiges Springkraut",
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:4066:68: style: Commas should always have a space after.
               "Riesenkn\u00f6terich", "Dr\u00fcsiges Springkraut","Kleinbl\u00fctiges Springkraut",
                                                                   ^
NO COPY: R/BWI3_HR.R:4069:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: R/BWI3_HR.R:4070:38: style: Put spaces around all infix operators.
  if (is.na(fba[1]) | tolower(fba[1])=="alle")
                                    ~^~~
NO COPY: R/BWI3_HR.R:4071:3: style: Opening curly braces should never go on their own line and should always be followed by a new line.
  {fba <- c(11:23) }
  ^
NO COPY: R/BWI3_HR.R:4071:20: style: Closing curly-braces should always be on their own line, unless it's followed by an else.
  {fba <- c(11:23) }
                   ^
NO COPY: R/BWI3_HR.R:4072:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: R/BWI3_HR.R:4073:4: style: Commented code should be removed.
  #d.lab <- c("k.A.","fehlt","selten","h\u00e4ufig","fl\u00e4chig")
   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:4075:1: style: lines should not be more than 80 characters.
  d.lab <- c("nicht vorhanden","selten, bis 10%","h\u00e4ufig, > 10 bis 50%","fl\u00e4chig, > 50%")
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:4075:32: style: Commas should always have a space after.
  d.lab <- c("nicht vorhanden","selten, bis 10%","h\u00e4ufig, > 10 bis 50%","fl\u00e4chig, > 50%")
                               ^
NO COPY: R/BWI3_HR.R:4075:50: style: Commas should always have a space after.
  d.lab <- c("nicht vorhanden","selten, bis 10%","h\u00e4ufig, > 10 bis 50%","fl\u00e4chig, > 50%")
                                                 ^
NO COPY: R/BWI3_HR.R:4075:78: style: Commas should always have a space after.
  d.lab <- c("nicht vorhanden","selten, bis 10%","h\u00e4ufig, > 10 bis 50%","fl\u00e4chig, > 50%")
                                                                             ^
NO COPY: R/BWI3_HR.R:4078:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  d.fl.ant <- data.frame(dichte=0:3,fl.ant=c(0,0.05,0.3,0.7))
  ^~~~~~~~
NO COPY: R/BWI3_HR.R:4078:32: style: Put spaces around all infix operators.
  d.fl.ant <- data.frame(dichte=0:3,fl.ant=c(0,0.05,0.3,0.7))
                              ~^~
NO COPY: R/BWI3_HR.R:4078:37: style: Commas should always have a space after.
  d.fl.ant <- data.frame(dichte=0:3,fl.ant=c(0,0.05,0.3,0.7))
                                    ^
NO COPY: R/BWI3_HR.R:4078:43: style: Put spaces around all infix operators.
  d.fl.ant <- data.frame(dichte=0:3,fl.ant=c(0,0.05,0.3,0.7))
                                         ~^~
NO COPY: R/BWI3_HR.R:4078:48: style: Commas should always have a space after.
  d.fl.ant <- data.frame(dichte=0:3,fl.ant=c(0,0.05,0.3,0.7))
                                               ^
NO COPY: R/BWI3_HR.R:4078:53: style: Commas should always have a space after.
  d.fl.ant <- data.frame(dichte=0:3,fl.ant=c(0,0.05,0.3,0.7))
                                                    ^
NO COPY: R/BWI3_HR.R:4078:57: style: Commas should always have a space after.
  d.fl.ant <- data.frame(dichte=0:3,fl.ant=c(0,0.05,0.3,0.7))
                                                        ^
NO COPY: R/BWI3_HR.R:4079:28: style: Commas should always have a space after.
  fba.tab <- merge(fba.tab,d.fl.ant,by="dichte",all.x=T)
                           ^
NO COPY: R/BWI3_HR.R:4079:28: style: Words within variable and function names should be separated by '_' rather than '.'.
  fba.tab <- merge(fba.tab,d.fl.ant,by="dichte",all.x=T)
                           ^~~~~~~~
NO COPY: R/BWI3_HR.R:4079:37: style: Commas should always have a space after.
  fba.tab <- merge(fba.tab,d.fl.ant,by="dichte",all.x=T)
                                    ^
NO COPY: R/BWI3_HR.R:4079:39: style: Put spaces around all infix operators.
  fba.tab <- merge(fba.tab,d.fl.ant,by="dichte",all.x=T)
                                     ~^~
NO COPY: R/BWI3_HR.R:4079:49: style: Commas should always have a space after.
  fba.tab <- merge(fba.tab,d.fl.ant,by="dichte",all.x=T)
                                                ^
NO COPY: R/BWI3_HR.R:4079:54: style: Put spaces around all infix operators.
  fba.tab <- merge(fba.tab,d.fl.ant,by="dichte",all.x=T)
                                                    ~^~
NO COPY: R/BWI3_HR.R:4080:34: style: Commas should always have a space after.
  fba.tab <- fba.tab[TRUE, c(2:4,1,5)] # TODO: Use named index.
                                 ^
NO COPY: R/BWI3_HR.R:4080:36: style: Commas should always have a space after.
  fba.tab <- fba.tab[TRUE, c(2:4,1,5)] # TODO: Use named index.
                                   ^
NO COPY: R/BWI3_HR.R:4082:1: style: lines should not be more than 80 characters.
  n.fba.te <- stats::aggregate(cbind(ifelse(fba.tab$dichte<=0,0,1),fba.tab$fl.ant),
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:4082:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  n.fba.te <- stats::aggregate(cbind(ifelse(fba.tab$dichte<=0,0,1),fba.tab$fl.ant),
  ^~~~~~~~
NO COPY: R/BWI3_HR.R:4082:59: style: Put spaces around all infix operators.
  n.fba.te <- stats::aggregate(cbind(ifelse(fba.tab$dichte<=0,0,1),fba.tab$fl.ant),
                                                         ~^~~
NO COPY: R/BWI3_HR.R:4082:63: style: Commas should always have a space after.
  n.fba.te <- stats::aggregate(cbind(ifelse(fba.tab$dichte<=0,0,1),fba.tab$fl.ant),
                                                              ^
NO COPY: R/BWI3_HR.R:4082:65: style: Commas should always have a space after.
  n.fba.te <- stats::aggregate(cbind(ifelse(fba.tab$dichte<=0,0,1),fba.tab$fl.ant),
                                                                ^
NO COPY: R/BWI3_HR.R:4082:68: style: Commas should always have a space after.
  n.fba.te <- stats::aggregate(cbind(ifelse(fba.tab$dichte<=0,0,1),fba.tab$fl.ant),
                                                                   ^
NO COPY: R/BWI3_HR.R:4083:27: style: Put spaces around all infix operators.
                        by=list(fba.tab$tnr,fba.tab$enr),sum)
                         ~^~
NO COPY: R/BWI3_HR.R:4083:45: style: Commas should always have a space after.
                        by=list(fba.tab$tnr,fba.tab$enr),sum)
                                            ^
NO COPY: R/BWI3_HR.R:4083:58: style: Commas should always have a space after.
                        by=list(fba.tab$tnr,fba.tab$enr),sum)
                                                         ^
NO COPY: R/BWI3_HR.R:4084:9: style: Words within variable and function names should be separated by '_' rather than '.'.
  names(n.fba.te) <- c("tnr","enr","n.fba","sum.fl.ant")
        ^~~~~~~~
NO COPY: R/BWI3_HR.R:4084:30: style: Commas should always have a space after.
  names(n.fba.te) <- c("tnr","enr","n.fba","sum.fl.ant")
                             ^
NO COPY: R/BWI3_HR.R:4084:36: style: Commas should always have a space after.
  names(n.fba.te) <- c("tnr","enr","n.fba","sum.fl.ant")
                                   ^
NO COPY: R/BWI3_HR.R:4084:44: style: Commas should always have a space after.
  names(n.fba.te) <- c("tnr","enr","n.fba","sum.fl.ant")
                                           ^
NO COPY: R/BWI3_HR.R:4086:28: style: Commas should always have a space after.
  fba.tab <- merge(fba.tab,n.fba.te,by=c("tnr","enr"),all.x=T)
                           ^
NO COPY: R/BWI3_HR.R:4086:28: style: Words within variable and function names should be separated by '_' rather than '.'.
  fba.tab <- merge(fba.tab,n.fba.te,by=c("tnr","enr"),all.x=T)
                           ^~~~~~~~
NO COPY: R/BWI3_HR.R:4086:37: style: Commas should always have a space after.
  fba.tab <- merge(fba.tab,n.fba.te,by=c("tnr","enr"),all.x=T)
                                    ^
NO COPY: R/BWI3_HR.R:4086:39: style: Put spaces around all infix operators.
  fba.tab <- merge(fba.tab,n.fba.te,by=c("tnr","enr"),all.x=T)
                                     ~^~
NO COPY: R/BWI3_HR.R:4086:48: style: Commas should always have a space after.
  fba.tab <- merge(fba.tab,n.fba.te,by=c("tnr","enr"),all.x=T)
                                               ^
NO COPY: R/BWI3_HR.R:4086:55: style: Commas should always have a space after.
  fba.tab <- merge(fba.tab,n.fba.te,by=c("tnr","enr"),all.x=T)
                                                      ^
NO COPY: R/BWI3_HR.R:4086:60: style: Put spaces around all infix operators.
  fba.tab <- merge(fba.tab,n.fba.te,by=c("tnr","enr"),all.x=T)
                                                          ~^~
NO COPY: R/BWI3_HR.R:4087:4: style: Commented code should be removed.
  #fba.tab$fl.ant.0 <- fba.tab$fl.ant
   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:4088:1: style: lines should not be more than 80 characters.
  fba.tab$fl.ant <- ifelse(fba.tab$sum.fl.ant>1,fba.tab$fl.ant/fba.tab$sum.fl.ant,fba.tab$fl.ant)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:4088:36: style: Words within variable and function names should be separated by '_' rather than '.'.
  fba.tab$fl.ant <- ifelse(fba.tab$sum.fl.ant>1,fba.tab$fl.ant/fba.tab$sum.fl.ant,fba.tab$fl.ant)
                                   ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:4088:46: style: Put spaces around all infix operators.
  fba.tab$fl.ant <- ifelse(fba.tab$sum.fl.ant>1,fba.tab$fl.ant/fba.tab$sum.fl.ant,fba.tab$fl.ant)
                                            ~^~
NO COPY: R/BWI3_HR.R:4088:49: style: Commas should always have a space after.
  fba.tab$fl.ant <- ifelse(fba.tab$sum.fl.ant>1,fba.tab$fl.ant/fba.tab$sum.fl.ant,fba.tab$fl.ant)
                                                ^
NO COPY: R/BWI3_HR.R:4088:63: style: Put spaces around all infix operators.
  fba.tab$fl.ant <- ifelse(fba.tab$sum.fl.ant>1,fba.tab$fl.ant/fba.tab$sum.fl.ant,fba.tab$fl.ant)
                                                             ~^~
NO COPY: R/BWI3_HR.R:4088:72: style: Words within variable and function names should be separated by '_' rather than '.'.
  fba.tab$fl.ant <- ifelse(fba.tab$sum.fl.ant>1,fba.tab$fl.ant/fba.tab$sum.fl.ant,fba.tab$fl.ant)
                                                                       ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:4088:83: style: Commas should always have a space after.
  fba.tab$fl.ant <- ifelse(fba.tab$sum.fl.ant>1,fba.tab$fl.ant/fba.tab$sum.fl.ant,fba.tab$fl.ant)
                                                                                  ^
NO COPY: R/BWI3_HR.R:4089:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: R/BWI3_HR.R:4092:4: style: Commented code should be removed.
  #Dichte-Anteile
   ^~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:4094:9: style: Put spaces around all infix operators.
  fba.d <-array(dim=c(2,4,length(fba)))
        ^~~
NO COPY: R/BWI3_HR.R:4094:20: style: Put spaces around all infix operators.
  fba.d <-array(dim=c(2,4,length(fba)))
                  ~^~
NO COPY: R/BWI3_HR.R:4094:25: style: Commas should always have a space after.
  fba.d <-array(dim=c(2,4,length(fba)))
                        ^
NO COPY: R/BWI3_HR.R:4094:27: style: Commas should always have a space after.
  fba.d <-array(dim=c(2,4,length(fba)))
                          ^
NO COPY: R/BWI3_HR.R:4096:1: style: lines should not be more than 80 characters.
  #jeweils Wert und Fehler f\u00fcr FBA f\u00fcr Fl\u00e4che (ha) und Fl\u00e4chenanteil
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:4097:10: style: Put spaces around all infix operators.
  fba.fl <-array(dim=c(2,length(fba),2))
         ^~~
NO COPY: R/BWI3_HR.R:4097:21: style: Put spaces around all infix operators.
  fba.fl <-array(dim=c(2,length(fba),2))
                   ~^~
NO COPY: R/BWI3_HR.R:4097:26: style: Commas should always have a space after.
  fba.fl <-array(dim=c(2,length(fba),2))
                         ^
NO COPY: R/BWI3_HR.R:4097:38: style: Commas should always have a space after.
  fba.fl <-array(dim=c(2,length(fba),2))
                                     ^
NO COPY: R/BWI3_HR.R:4098:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: R/BWI3_HR.R:4101:3: style: Opening curly braces should never go on their own line and should always be followed by a new line.
  {
  ^
NO COPY: R/BWI3_HR.R:4102:1: style: Trailing whitespace is superfluous.
    
^~~~
NO COPY: R/BWI3_HR.R:4103:13: style: Put spaces around all infix operators.
    ii <- ii+1
           ~^~
NO COPY: R/BWI3_HR.R:4105:50: style: Trailing whitespace is superfluous.
                   fba.tab[fba.tab[["fba"]] == i, 
                                                 ^
NO COPY: R/BWI3_HR.R:4107:22: style: Put spaces around all infix operators.
                   by=c("tnr", "enr"),
                    ~^~
NO COPY: R/BWI3_HR.R:4111:1: style: Trailing whitespace is superfluous.
    
^~~~
NO COPY: R/BWI3_HR.R:4113:5: style: Opening curly braces should never go on their own line and should always be followed by a new line.
    {
    ^
NO COPY: R/BWI3_HR.R:4114:1: style: lines should not be more than 80 characters.
      nte.d.j.t <- stats::aggregate(ifelse(fba.i$dichte==j,1,0),by=list(fba.i$tnr),sum)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:4114:7: style: Words within variable and function names should be separated by '_' rather than '.'.
      nte.d.j.t <- stats::aggregate(ifelse(fba.i$dichte==j,1,0),by=list(fba.i$tnr),sum)
      ^~~~~~~~~
NO COPY: R/BWI3_HR.R:4114:56: style: Put spaces around all infix operators.
      nte.d.j.t <- stats::aggregate(ifelse(fba.i$dichte==j,1,0),by=list(fba.i$tnr),sum)
                                                      ~^~~
NO COPY: R/BWI3_HR.R:4114:60: style: Commas should always have a space after.
      nte.d.j.t <- stats::aggregate(ifelse(fba.i$dichte==j,1,0),by=list(fba.i$tnr),sum)
                                                           ^
NO COPY: R/BWI3_HR.R:4114:62: style: Commas should always have a space after.
      nte.d.j.t <- stats::aggregate(ifelse(fba.i$dichte==j,1,0),by=list(fba.i$tnr),sum)
                                                             ^
NO COPY: R/BWI3_HR.R:4114:65: style: Commas should always have a space after.
      nte.d.j.t <- stats::aggregate(ifelse(fba.i$dichte==j,1,0),by=list(fba.i$tnr),sum)
                                                                ^
NO COPY: R/BWI3_HR.R:4114:67: style: Put spaces around all infix operators.
      nte.d.j.t <- stats::aggregate(ifelse(fba.i$dichte==j,1,0),by=list(fba.i$tnr),sum)
                                                                 ~^~
NO COPY: R/BWI3_HR.R:4114:84: style: Commas should always have a space after.
      nte.d.j.t <- stats::aggregate(ifelse(fba.i$dichte==j,1,0),by=list(fba.i$tnr),sum)
                                                                                   ^
NO COPY: R/BWI3_HR.R:4115:13: style: Words within variable and function names should be separated by '_' rather than '.'.
      names(nte.d.j.t) <- c("tnr","nd")
            ^~~~~~~~~
NO COPY: R/BWI3_HR.R:4115:35: style: Commas should always have a space after.
      names(nte.d.j.t) <- c("tnr","nd")
                                  ^
NO COPY: R/BWI3_HR.R:4116:7: style: Words within variable and function names should be separated by '_' rather than '.'.
      nte.d.j.t <- merge(nte.t,nte.d.j.t,by=c("tnr"),all.x=T)
      ^~~~~~~~~
NO COPY: R/BWI3_HR.R:4116:32: style: Commas should always have a space after.
      nte.d.j.t <- merge(nte.t,nte.d.j.t,by=c("tnr"),all.x=T)
                               ^
NO COPY: R/BWI3_HR.R:4116:32: style: Words within variable and function names should be separated by '_' rather than '.'.
      nte.d.j.t <- merge(nte.t,nte.d.j.t,by=c("tnr"),all.x=T)
                               ^~~~~~~~~
NO COPY: R/BWI3_HR.R:4116:42: style: Commas should always have a space after.
      nte.d.j.t <- merge(nte.t,nte.d.j.t,by=c("tnr"),all.x=T)
                                         ^
NO COPY: R/BWI3_HR.R:4116:44: style: Put spaces around all infix operators.
      nte.d.j.t <- merge(nte.t,nte.d.j.t,by=c("tnr"),all.x=T)
                                          ~^~
NO COPY: R/BWI3_HR.R:4116:54: style: Commas should always have a space after.
      nte.d.j.t <- merge(nte.t,nte.d.j.t,by=c("tnr"),all.x=T)
                                                     ^
NO COPY: R/BWI3_HR.R:4116:59: style: Put spaces around all infix operators.
      nte.d.j.t <- merge(nte.t,nte.d.j.t,by=c("tnr"),all.x=T)
                                                         ~^~
NO COPY: R/BWI3_HR.R:4117:7: style: Words within variable and function names should be separated by '_' rather than '.'.
      nte.d.j.t[is.na(nte.d.j.t)] <- 0
      ^~~~~~~~~
NO COPY: R/BWI3_HR.R:4117:23: style: Words within variable and function names should be separated by '_' rather than '.'.
      nte.d.j.t[is.na(nte.d.j.t)] <- 0
                      ^~~~~~~~~
NO COPY: R/BWI3_HR.R:4118:33: style: Words within variable and function names should be separated by '_' rather than '.'.
      r.list <-  r.variance.fun(nte.d.j.t[,2:3],length(trakte[,1]))
                                ^~~~~~~~~
NO COPY: R/BWI3_HR.R:4118:44: style: Commas should always have a space after.
      r.list <-  r.variance.fun(nte.d.j.t[,2:3],length(trakte[,1]))
                                           ^
NO COPY: R/BWI3_HR.R:4118:49: style: Commas should always have a space after.
      r.list <-  r.variance.fun(nte.d.j.t[,2:3],length(trakte[,1]))
                                                ^
NO COPY: R/BWI3_HR.R:4118:64: style: Commas should always have a space after.
      r.list <-  r.variance.fun(nte.d.j.t[,2:3],length(trakte[,1]))
                                                               ^
NO COPY: R/BWI3_HR.R:4119:15: style: Commas should always have a space after.
      fba.d[1,(j+1),ii] <- round(r.list$R.xy,4)
              ^
NO COPY: R/BWI3_HR.R:4119:15: style: Place a space before left parenthesis, except in a function call.
      fba.d[1,(j+1),ii] <- round(r.list$R.xy,4)
              ^
NO COPY: R/BWI3_HR.R:4119:17: style: Put spaces around all infix operators.
      fba.d[1,(j+1),ii] <- round(r.list$R.xy,4)
               ~^~
NO COPY: R/BWI3_HR.R:4119:21: style: Commas should always have a space after.
      fba.d[1,(j+1),ii] <- round(r.list$R.xy,4)
                    ^
NO COPY: R/BWI3_HR.R:4119:46: style: Commas should always have a space after.
      fba.d[1,(j+1),ii] <- round(r.list$R.xy,4)
                                             ^
NO COPY: R/BWI3_HR.R:4120:15: style: Commas should always have a space after.
      fba.d[2,(j+1),ii] <- round(sqrt(r.list$V.R.xy),5)      
              ^
NO COPY: R/BWI3_HR.R:4120:15: style: Place a space before left parenthesis, except in a function call.
      fba.d[2,(j+1),ii] <- round(sqrt(r.list$V.R.xy),5)      
              ^
NO COPY: R/BWI3_HR.R:4120:17: style: Put spaces around all infix operators.
      fba.d[2,(j+1),ii] <- round(sqrt(r.list$V.R.xy),5)      
               ~^~
NO COPY: R/BWI3_HR.R:4120:21: style: Commas should always have a space after.
      fba.d[2,(j+1),ii] <- round(sqrt(r.list$V.R.xy),5)      
                    ^
NO COPY: R/BWI3_HR.R:4120:46: style: Words within variable and function names should be separated by '_' rather than '.'.
      fba.d[2,(j+1),ii] <- round(sqrt(r.list$V.R.xy),5)      
                                             ^~~~~~
NO COPY: R/BWI3_HR.R:4120:54: style: Commas should always have a space after.
      fba.d[2,(j+1),ii] <- round(sqrt(r.list$V.R.xy),5)      
                                                     ^
NO COPY: R/BWI3_HR.R:4120:56: style: Trailing whitespace is superfluous.
      fba.d[2,(j+1),ii] <- round(sqrt(r.list$V.R.xy),5)      
                                                       ^~~~~~
NO COPY: R/BWI3_HR.R:4123:5: style: Words within variable and function names should be separated by '_' rather than '.'.
    fl.i.t <- stats::aggregate(fba.i$fl.ant,by=list(fba.i$tnr),sum)
    ^~~~~~
NO COPY: R/BWI3_HR.R:4123:45: style: Commas should always have a space after.
    fl.i.t <- stats::aggregate(fba.i$fl.ant,by=list(fba.i$tnr),sum)
                                            ^
NO COPY: R/BWI3_HR.R:4123:47: style: Put spaces around all infix operators.
    fl.i.t <- stats::aggregate(fba.i$fl.ant,by=list(fba.i$tnr),sum)
                                             ~^~
NO COPY: R/BWI3_HR.R:4123:64: style: Commas should always have a space after.
    fl.i.t <- stats::aggregate(fba.i$fl.ant,by=list(fba.i$tnr),sum)
                                                               ^
NO COPY: R/BWI3_HR.R:4124:11: style: Words within variable and function names should be separated by '_' rather than '.'.
    names(fl.i.t) <- c("tnr","fl")
          ^~~~~~
NO COPY: R/BWI3_HR.R:4124:30: style: Commas should always have a space after.
    names(fl.i.t) <- c("tnr","fl")
                             ^
NO COPY: R/BWI3_HR.R:4126:5: style: Words within variable and function names should be separated by '_' rather than '.'.
    fl.i.t <- merge(y[,1:2],fl.i.t,by="tnr",all.x=T)
    ^~~~~~
NO COPY: R/BWI3_HR.R:4126:24: style: Commas should always have a space after.
    fl.i.t <- merge(y[,1:2],fl.i.t,by="tnr",all.x=T)
                       ^
NO COPY: R/BWI3_HR.R:4126:29: style: Commas should always have a space after.
    fl.i.t <- merge(y[,1:2],fl.i.t,by="tnr",all.x=T)
                            ^
NO COPY: R/BWI3_HR.R:4126:29: style: Words within variable and function names should be separated by '_' rather than '.'.
    fl.i.t <- merge(y[,1:2],fl.i.t,by="tnr",all.x=T)
                            ^~~~~~
NO COPY: R/BWI3_HR.R:4126:36: style: Commas should always have a space after.
    fl.i.t <- merge(y[,1:2],fl.i.t,by="tnr",all.x=T)
                                   ^
NO COPY: R/BWI3_HR.R:4126:38: style: Put spaces around all infix operators.
    fl.i.t <- merge(y[,1:2],fl.i.t,by="tnr",all.x=T)
                                    ~^~
NO COPY: R/BWI3_HR.R:4126:45: style: Commas should always have a space after.
    fl.i.t <- merge(y[,1:2],fl.i.t,by="tnr",all.x=T)
                                            ^
NO COPY: R/BWI3_HR.R:4126:50: style: Put spaces around all infix operators.
    fl.i.t <- merge(y[,1:2],fl.i.t,by="tnr",all.x=T)
                                                ~^~
NO COPY: R/BWI3_HR.R:4127:5: style: Words within variable and function names should be separated by '_' rather than '.'.
    fl.i.t[is.na(fl.i.t)] <- 0
    ^~~~~~
NO COPY: R/BWI3_HR.R:4127:18: style: Words within variable and function names should be separated by '_' rather than '.'.
    fl.i.t[is.na(fl.i.t)] <- 0
                 ^~~~~~
NO COPY: R/BWI3_HR.R:4128:31: style: Words within variable and function names should be separated by '_' rather than '.'.
    r.list <-  r.variance.fun(fl.i.t[,2:3],length(trakte[,1]))
                              ^~~~~~
NO COPY: R/BWI3_HR.R:4128:39: style: Commas should always have a space after.
    r.list <-  r.variance.fun(fl.i.t[,2:3],length(trakte[,1]))
                                      ^
NO COPY: R/BWI3_HR.R:4128:44: style: Commas should always have a space after.
    r.list <-  r.variance.fun(fl.i.t[,2:3],length(trakte[,1]))
                                           ^
NO COPY: R/BWI3_HR.R:4128:59: style: Commas should always have a space after.
    r.list <-  r.variance.fun(fl.i.t[,2:3],length(trakte[,1]))
                                                          ^
NO COPY: R/BWI3_HR.R:4129:14: style: Commas should always have a space after.
    fba.fl[1,ii,1] <- round(r.list$R.xy*A,1)
             ^
NO COPY: R/BWI3_HR.R:4129:17: style: Commas should always have a space after.
    fba.fl[1,ii,1] <- round(r.list$R.xy*A,1)
                ^
NO COPY: R/BWI3_HR.R:4129:40: style: Put spaces around all infix operators.
    fba.fl[1,ii,1] <- round(r.list$R.xy*A,1)
                                      ~^~
NO COPY: R/BWI3_HR.R:4129:43: style: Commas should always have a space after.
    fba.fl[1,ii,1] <- round(r.list$R.xy*A,1)
                                          ^
NO COPY: R/BWI3_HR.R:4130:14: style: Commas should always have a space after.
    fba.fl[2,ii,1] <- round(sqrt(r.list$V.R.xy)*A,2)
             ^
NO COPY: R/BWI3_HR.R:4130:17: style: Commas should always have a space after.
    fba.fl[2,ii,1] <- round(sqrt(r.list$V.R.xy)*A,2)
                ^
NO COPY: R/BWI3_HR.R:4130:41: style: Words within variable and function names should be separated by '_' rather than '.'.
    fba.fl[2,ii,1] <- round(sqrt(r.list$V.R.xy)*A,2)
                                        ^~~~~~
NO COPY: R/BWI3_HR.R:4130:48: style: Put spaces around all infix operators.
    fba.fl[2,ii,1] <- round(sqrt(r.list$V.R.xy)*A,2)
                                              ~^~
NO COPY: R/BWI3_HR.R:4130:51: style: Commas should always have a space after.
    fba.fl[2,ii,1] <- round(sqrt(r.list$V.R.xy)*A,2)
                                                  ^
NO COPY: R/BWI3_HR.R:4131:1: style: Trailing whitespace is superfluous.
    
^~~~
NO COPY: R/BWI3_HR.R:4133:5: style: Words within variable and function names should be separated by '_' rather than '.'.
    fl.i.t <- stats::aggregate(fba.i$fl.ant,by=list(fba.i$tnr),sum)
    ^~~~~~
NO COPY: R/BWI3_HR.R:4133:45: style: Commas should always have a space after.
    fl.i.t <- stats::aggregate(fba.i$fl.ant,by=list(fba.i$tnr),sum)
                                            ^
NO COPY: R/BWI3_HR.R:4133:47: style: Put spaces around all infix operators.
    fl.i.t <- stats::aggregate(fba.i$fl.ant,by=list(fba.i$tnr),sum)
                                             ~^~
NO COPY: R/BWI3_HR.R:4133:64: style: Commas should always have a space after.
    fl.i.t <- stats::aggregate(fba.i$fl.ant,by=list(fba.i$tnr),sum)
                                                               ^
NO COPY: R/BWI3_HR.R:4134:11: style: Words within variable and function names should be separated by '_' rather than '.'.
    names(fl.i.t) <- c("tnr","fl")
          ^~~~~~
NO COPY: R/BWI3_HR.R:4134:30: style: Commas should always have a space after.
    names(fl.i.t) <- c("tnr","fl")
                             ^
NO COPY: R/BWI3_HR.R:4136:5: style: Words within variable and function names should be separated by '_' rather than '.'.
    fl.i.t <- merge(nte.t,fl.i.t,by="tnr",all.x=T)
    ^~~~~~
NO COPY: R/BWI3_HR.R:4136:27: style: Commas should always have a space after.
    fl.i.t <- merge(nte.t,fl.i.t,by="tnr",all.x=T)
                          ^
NO COPY: R/BWI3_HR.R:4136:27: style: Words within variable and function names should be separated by '_' rather than '.'.
    fl.i.t <- merge(nte.t,fl.i.t,by="tnr",all.x=T)
                          ^~~~~~
NO COPY: R/BWI3_HR.R:4136:34: style: Commas should always have a space after.
    fl.i.t <- merge(nte.t,fl.i.t,by="tnr",all.x=T)
                                 ^
NO COPY: R/BWI3_HR.R:4136:36: style: Put spaces around all infix operators.
    fl.i.t <- merge(nte.t,fl.i.t,by="tnr",all.x=T)
                                  ~^~
NO COPY: R/BWI3_HR.R:4136:43: style: Commas should always have a space after.
    fl.i.t <- merge(nte.t,fl.i.t,by="tnr",all.x=T)
                                          ^
NO COPY: R/BWI3_HR.R:4136:48: style: Put spaces around all infix operators.
    fl.i.t <- merge(nte.t,fl.i.t,by="tnr",all.x=T)
                                              ~^~
NO COPY: R/BWI3_HR.R:4137:5: style: Words within variable and function names should be separated by '_' rather than '.'.
    fl.i.t[is.na(fl.i.t)] <- 0
    ^~~~~~
NO COPY: R/BWI3_HR.R:4137:18: style: Words within variable and function names should be separated by '_' rather than '.'.
    fl.i.t[is.na(fl.i.t)] <- 0
                 ^~~~~~
NO COPY: R/BWI3_HR.R:4138:31: style: Words within variable and function names should be separated by '_' rather than '.'.
    r.list <-  r.variance.fun(fl.i.t[,2:3],length(trakte[,1]))
                              ^~~~~~
NO COPY: R/BWI3_HR.R:4138:39: style: Commas should always have a space after.
    r.list <-  r.variance.fun(fl.i.t[,2:3],length(trakte[,1]))
                                      ^
NO COPY: R/BWI3_HR.R:4138:44: style: Commas should always have a space after.
    r.list <-  r.variance.fun(fl.i.t[,2:3],length(trakte[,1]))
                                           ^
NO COPY: R/BWI3_HR.R:4138:59: style: Commas should always have a space after.
    r.list <-  r.variance.fun(fl.i.t[,2:3],length(trakte[,1]))
                                                          ^
NO COPY: R/BWI3_HR.R:4139:14: style: Commas should always have a space after.
    fba.fl[1,ii,2] <- round(r.list$R.xy,4)
             ^
NO COPY: R/BWI3_HR.R:4139:17: style: Commas should always have a space after.
    fba.fl[1,ii,2] <- round(r.list$R.xy,4)
                ^
NO COPY: R/BWI3_HR.R:4139:41: style: Commas should always have a space after.
    fba.fl[1,ii,2] <- round(r.list$R.xy,4)
                                        ^
NO COPY: R/BWI3_HR.R:4140:14: style: Commas should always have a space after.
    fba.fl[2,ii,2] <- round(sqrt(r.list$V.R.xy),4)
             ^
NO COPY: R/BWI3_HR.R:4140:17: style: Commas should always have a space after.
    fba.fl[2,ii,2] <- round(sqrt(r.list$V.R.xy),4)
                ^
NO COPY: R/BWI3_HR.R:4140:41: style: Words within variable and function names should be separated by '_' rather than '.'.
    fba.fl[2,ii,2] <- round(sqrt(r.list$V.R.xy),4)
                                        ^~~~~~
NO COPY: R/BWI3_HR.R:4140:49: style: Commas should always have a space after.
    fba.fl[2,ii,2] <- round(sqrt(r.list$V.R.xy),4)
                                                ^
NO COPY: R/BWI3_HR.R:4141:1: style: Trailing whitespace is superfluous.
    
^~~~
NO COPY: R/BWI3_HR.R:4143:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: R/BWI3_HR.R:4145:37: style: Words within variable and function names should be separated by '_' rather than '.'.
              HBF = T.hbf, se.HBF = se.T.hbf,
                                    ^~~~~~~~
NO COPY: R/BWI3_HR.R:4146:39: style: Commas should always have a space after.
              FBA = fba.lab[match(fba,fba.code)],
                                      ^
NO COPY: R/BWI3_HR.R:4148:31: style: Put spaces around all infix operators.
              FBA.Dichtevertlg=fba.d,
                             ~^~
NO COPY: R/BWI3_HR.R:4168:36: style: Commas should always have a space after.
fl.stratum.fun <- function(auswahl,ecken,trakte,A,
                                   ^
NO COPY: R/BWI3_HR.R:4168:42: style: Commas should always have a space after.
fl.stratum.fun <- function(auswahl,ecken,trakte,A,
                                         ^
NO COPY: R/BWI3_HR.R:4168:49: style: Commas should always have a space after.
fl.stratum.fun <- function(auswahl,ecken,trakte,A,
                                                ^
NO COPY: R/BWI3_HR.R:4169:1: style: lines should not be more than 80 characters.
                                 trakte.3 = get_data("trakte.3") # TODO: see below.
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:4171:29: style: Commas should always have a space after.
  te <- stratum.fun(auswahl,ecken)
                            ^
NO COPY: R/BWI3_HR.R:4172:35: style: Commas should always have a space after.
  nte.t <- stats::aggregate(rep(1,length(te[,1])),by=list(te$TNr),sum)
                                  ^
NO COPY: R/BWI3_HR.R:4172:46: style: Commas should always have a space after.
  nte.t <- stats::aggregate(rep(1,length(te[,1])),by=list(te$TNr),sum)
                                             ^
NO COPY: R/BWI3_HR.R:4172:51: style: Commas should always have a space after.
  nte.t <- stats::aggregate(rep(1,length(te[,1])),by=list(te$TNr),sum)
                                                  ^
NO COPY: R/BWI3_HR.R:4172:53: style: Put spaces around all infix operators.
  nte.t <- stats::aggregate(rep(1,length(te[,1])),by=list(te$TNr),sum)
                                                   ~^~
NO COPY: R/BWI3_HR.R:4172:67: style: Commas should always have a space after.
  nte.t <- stats::aggregate(rep(1,length(te[,1])),by=list(te$TNr),sum)
                                                                  ^
NO COPY: R/BWI3_HR.R:4173:27: style: Commas should always have a space after.
  names(nte.t) <- c("TNr","nte")
                          ^
NO COPY: R/BWI3_HR.R:4175:46: style: Commas should always have a space after.
  nte.t <- merge(trakte[TRUE, c("TNr", "m")],nte.t,by="TNr",all.x=T)
                                             ^
NO COPY: R/BWI3_HR.R:4175:52: style: Commas should always have a space after.
  nte.t <- merge(trakte[TRUE, c("TNr", "m")],nte.t,by="TNr",all.x=T)
                                                   ^
NO COPY: R/BWI3_HR.R:4175:54: style: Put spaces around all infix operators.
  nte.t <- merge(trakte[TRUE, c("TNr", "m")],nte.t,by="TNr",all.x=T)
                                                    ~^~
NO COPY: R/BWI3_HR.R:4175:61: style: Commas should always have a space after.
  nte.t <- merge(trakte[TRUE, c("TNr", "m")],nte.t,by="TNr",all.x=T)
                                                            ^
NO COPY: R/BWI3_HR.R:4175:66: style: Put spaces around all infix operators.
  nte.t <- merge(trakte[TRUE, c("TNr", "m")],nte.t,by="TNr",all.x=T)
                                                                ~^~
NO COPY: R/BWI3_HR.R:4177:1: style: lines should not be more than 80 characters.
  r.list <- r.variance.fun(nte.t[,2:3],length(trakte.3[,1]))# TODO: is trakte.3 really the one? Is this a bug?
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:4177:35: style: Commas should always have a space after.
  r.list <- r.variance.fun(nte.t[,2:3],length(trakte.3[,1]))# TODO: is trakte.3 really the one? Is this a bug?
                                  ^
NO COPY: R/BWI3_HR.R:4177:40: style: Commas should always have a space after.
  r.list <- r.variance.fun(nte.t[,2:3],length(trakte.3[,1]))# TODO: is trakte.3 really the one? Is this a bug?
                                       ^
NO COPY: R/BWI3_HR.R:4177:57: style: Commas should always have a space after.
  r.list <- r.variance.fun(nte.t[,2:3],length(trakte.3[,1]))# TODO: is trakte.3 really the one? Is this a bug?
                                                        ^
NO COPY: R/BWI3_HR.R:4178:22: style: Put spaces around all infix operators.
  return(list(Flaeche=r.list$R.xy*A, SE_Flaeche=sqrt(r.list$V.R.xy)*A))
                    ~^~
NO COPY: R/BWI3_HR.R:4178:34: style: Put spaces around all infix operators.
  return(list(Flaeche=r.list$R.xy*A, SE_Flaeche=sqrt(r.list$V.R.xy)*A))
                                ~^~
NO COPY: R/BWI3_HR.R:4178:48: style: Put spaces around all infix operators.
  return(list(Flaeche=r.list$R.xy*A, SE_Flaeche=sqrt(r.list$V.R.xy)*A))
                                              ~^~
NO COPY: R/BWI3_HR.R:4178:61: style: Words within variable and function names should be separated by '_' rather than '.'.
  return(list(Flaeche=r.list$R.xy*A, SE_Flaeche=sqrt(r.list$V.R.xy)*A))
                                                            ^~~~~~
NO COPY: R/BWI3_HR.R:4178:68: style: Put spaces around all infix operators.
  return(list(Flaeche=r.list$R.xy*A, SE_Flaeche=sqrt(r.list$V.R.xy)*A))
                                                                  ~^~
NO COPY: R/BWI3_HR.R:4198:41: style: Commas should always have a space after.
fl.proz.stratum.fun <- function(stratum,substratum,ecken,
                                        ^
NO COPY: R/BWI3_HR.R:4198:52: style: Commas should always have a space after.
fl.proz.stratum.fun <- function(stratum,substratum,ecken,
                                                   ^
NO COPY: R/BWI3_HR.R:4199:1: style: lines should not be more than 80 characters.
                                 trakte.3 = get_data("trakte.3") # TODO: see below.
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:4201:29: style: Commas should always have a space after.
  te <- stratum.fun(stratum,ecken)
                            ^
NO COPY: R/BWI3_HR.R:4202:35: style: Commas should always have a space after.
  nte.t <- stats::aggregate(rep(1,length(te[,1])),by=list(te$TNr),sum)
                                  ^
NO COPY: R/BWI3_HR.R:4202:46: style: Commas should always have a space after.
  nte.t <- stats::aggregate(rep(1,length(te[,1])),by=list(te$TNr),sum)
                                             ^
NO COPY: R/BWI3_HR.R:4202:51: style: Commas should always have a space after.
  nte.t <- stats::aggregate(rep(1,length(te[,1])),by=list(te$TNr),sum)
                                                  ^
NO COPY: R/BWI3_HR.R:4202:53: style: Put spaces around all infix operators.
  nte.t <- stats::aggregate(rep(1,length(te[,1])),by=list(te$TNr),sum)
                                                   ~^~
NO COPY: R/BWI3_HR.R:4202:67: style: Commas should always have a space after.
  nte.t <- stats::aggregate(rep(1,length(te[,1])),by=list(te$TNr),sum)
                                                                  ^
NO COPY: R/BWI3_HR.R:4203:27: style: Commas should always have a space after.
  names(nte.t) <- c("TNr","nte")
                          ^
NO COPY: R/BWI3_HR.R:4209:36: style: Commas should always have a space after.
  te.s <- stratum.fun(substratum.1,ecken)
                                   ^
NO COPY: R/BWI3_HR.R:4210:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  nte.s.t <- stats::aggregate(rep(1,length(te.s[,1])),by=list(te.s$TNr),sum)
  ^~~~~~~
NO COPY: R/BWI3_HR.R:4210:37: style: Commas should always have a space after.
  nte.s.t <- stats::aggregate(rep(1,length(te.s[,1])),by=list(te.s$TNr),sum)
                                    ^
NO COPY: R/BWI3_HR.R:4210:50: style: Commas should always have a space after.
  nte.s.t <- stats::aggregate(rep(1,length(te.s[,1])),by=list(te.s$TNr),sum)
                                                 ^
NO COPY: R/BWI3_HR.R:4210:55: style: Commas should always have a space after.
  nte.s.t <- stats::aggregate(rep(1,length(te.s[,1])),by=list(te.s$TNr),sum)
                                                      ^
NO COPY: R/BWI3_HR.R:4210:57: style: Put spaces around all infix operators.
  nte.s.t <- stats::aggregate(rep(1,length(te.s[,1])),by=list(te.s$TNr),sum)
                                                       ~^~
NO COPY: R/BWI3_HR.R:4210:73: style: Commas should always have a space after.
  nte.s.t <- stats::aggregate(rep(1,length(te.s[,1])),by=list(te.s$TNr),sum)
                                                                        ^
NO COPY: R/BWI3_HR.R:4211:9: style: Words within variable and function names should be separated by '_' rather than '.'.
  names(nte.s.t) <- c("TNr","nte.s")
        ^~~~~~~
NO COPY: R/BWI3_HR.R:4211:29: style: Commas should always have a space after.
  names(nte.s.t) <- c("TNr","nte.s")
                            ^
NO COPY: R/BWI3_HR.R:4212:15: style: Words within variable and function names should be separated by '_' rather than '.'.
  utils::head(nte.s.t)
              ^~~~~~~
NO COPY: R/BWI3_HR.R:4213:5: style: Words within variable and function names should be separated by '_' rather than '.'.
    nte.s.t <- merge(nte.t,nte.s.t,by="TNr",all.x=T)
    ^~~~~~~
NO COPY: R/BWI3_HR.R:4213:28: style: Commas should always have a space after.
    nte.s.t <- merge(nte.t,nte.s.t,by="TNr",all.x=T)
                           ^
NO COPY: R/BWI3_HR.R:4213:28: style: Words within variable and function names should be separated by '_' rather than '.'.
    nte.s.t <- merge(nte.t,nte.s.t,by="TNr",all.x=T)
                           ^~~~~~~
NO COPY: R/BWI3_HR.R:4213:36: style: Commas should always have a space after.
    nte.s.t <- merge(nte.t,nte.s.t,by="TNr",all.x=T)
                                   ^
NO COPY: R/BWI3_HR.R:4213:38: style: Put spaces around all infix operators.
    nte.s.t <- merge(nte.t,nte.s.t,by="TNr",all.x=T)
                                    ~^~
NO COPY: R/BWI3_HR.R:4213:45: style: Commas should always have a space after.
    nte.s.t <- merge(nte.t,nte.s.t,by="TNr",all.x=T)
                                            ^
NO COPY: R/BWI3_HR.R:4213:50: style: Put spaces around all infix operators.
    nte.s.t <- merge(nte.t,nte.s.t,by="TNr",all.x=T)
                                                ~^~
NO COPY: R/BWI3_HR.R:4214:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  nte.s.t[is.na(nte.s.t)] <- 0
  ^~~~~~~
NO COPY: R/BWI3_HR.R:4214:17: style: Words within variable and function names should be separated by '_' rather than '.'.
  nte.s.t[is.na(nte.s.t)] <- 0
                ^~~~~~~
NO COPY: R/BWI3_HR.R:4215:1: style: lines should not be more than 80 characters.
  r.list <- r.variance.fun(nte.s.t[,2:3],length(trakte.3[,1])) # TODO: is trakte.3 really the one? Is this a bug?
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:4215:28: style: Words within variable and function names should be separated by '_' rather than '.'.
  r.list <- r.variance.fun(nte.s.t[,2:3],length(trakte.3[,1])) # TODO: is trakte.3 really the one? Is this a bug?
                           ^~~~~~~
NO COPY: R/BWI3_HR.R:4215:37: style: Commas should always have a space after.
  r.list <- r.variance.fun(nte.s.t[,2:3],length(trakte.3[,1])) # TODO: is trakte.3 really the one? Is this a bug?
                                    ^
NO COPY: R/BWI3_HR.R:4215:42: style: Commas should always have a space after.
  r.list <- r.variance.fun(nte.s.t[,2:3],length(trakte.3[,1])) # TODO: is trakte.3 really the one? Is this a bug?
                                         ^
NO COPY: R/BWI3_HR.R:4215:59: style: Commas should always have a space after.
  r.list <- r.variance.fun(nte.s.t[,2:3],length(trakte.3[,1])) # TODO: is trakte.3 really the one? Is this a bug?
                                                          ^
NO COPY: R/BWI3_HR.R:4216:22: style: Put spaces around all infix operators.
  return(list(Fl_Proz=r.list$R.xy*100,
                    ~^~
NO COPY: R/BWI3_HR.R:4216:34: style: Put spaces around all infix operators.
  return(list(Fl_Proz=r.list$R.xy*100,
                                ~^~
NO COPY: R/BWI3_HR.R:4217:35: style: Words within variable and function names should be separated by '_' rather than '.'.
              SE_Fl_Proz = r.list$V.R.xy^0.5*100))
                                  ^~~~~~
NO COPY: R/BWI3_HR.R:4217:41: style: Put spaces around all infix operators.
              SE_Fl_Proz = r.list$V.R.xy^0.5*100))
                                       ~^~
NO COPY: R/BWI3_HR.R:4217:45: style: Put spaces around all infix operators.
              SE_Fl_Proz = r.list$V.R.xy^0.5*100))
                                           ~^~
NO COPY: R/BWI3_HR.R:4251:57: style: Trailing whitespace is superfluous.
    idx <- which(unlist(lapply(auswahl, is.character)) & 
                                                        ^
NO COPY: R/BWI3_HR.R:4253:15: style: Trailing whitespace is superfluous.
             ) 
              ^
NO COPY: R/BWI3_HR.R:4254:42: style: Trailing whitespace is superfluous.
    auswahl[idx] <- shQuote(auswahl[idx]) 
                                         ^
NO COPY: R/BWI3_HR.R:4256:1: style: lines should not be more than 80 characters.
    auswahl[idx] <- paste0(auswahl[idx]) # now this is some magic I don't understand
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:4298:49: style: Commas should always have a space after.
mbaf.bagr.alt.bhd.pm.fun <- function(baeume.vor,baeume.folg,A.klass,D.klass){
                                                ^
NO COPY: R/BWI3_HR.R:4298:61: style: Commas should always have a space after.
mbaf.bagr.alt.bhd.pm.fun <- function(baeume.vor,baeume.folg,A.klass,D.klass){
                                                            ^
NO COPY: R/BWI3_HR.R:4298:69: style: Commas should always have a space after.
mbaf.bagr.alt.bhd.pm.fun <- function(baeume.vor,baeume.folg,A.klass,D.klass){
                                                                    ^
NO COPY: R/BWI3_HR.R:4303:44: style: Put spaces around all infix operators.
  baeume.vor$bhd.pm <- ifelse(baeume.vor$pk%in%c(2:5,9),baeume.vor$bhd2,
                                          ~^~~~~
NO COPY: R/BWI3_HR.R:4303:54: style: Commas should always have a space after.
  baeume.vor$bhd.pm <- ifelse(baeume.vor$pk%in%c(2:5,9),baeume.vor$bhd2,
                                                     ^
NO COPY: R/BWI3_HR.R:4303:57: style: Commas should always have a space after.
  baeume.vor$bhd.pm <- ifelse(baeume.vor$pk%in%c(2:5,9),baeume.vor$bhd2,
                                                        ^
NO COPY: R/BWI3_HR.R:4304:41: style: Put spaces around all infix operators.
                        (baeume.vor$bhd1+baeume.vor$bhd2)/2)
                                       ~^~
NO COPY: R/BWI3_HR.R:4304:58: style: Put spaces around all infix operators.
                        (baeume.vor$bhd1+baeume.vor$bhd2)/2)
                                                        ~^~
NO COPY: R/BWI3_HR.R:4305:44: style: Put spaces around all infix operators.
  baeume.vor$alt.pm <- ifelse(baeume.vor$pk%in%c(2:5,9),baeume.vor$alt2,
                                          ~^~~~~
NO COPY: R/BWI3_HR.R:4305:54: style: Commas should always have a space after.
  baeume.vor$alt.pm <- ifelse(baeume.vor$pk%in%c(2:5,9),baeume.vor$alt2,
                                                     ^
NO COPY: R/BWI3_HR.R:4305:57: style: Commas should always have a space after.
  baeume.vor$alt.pm <- ifelse(baeume.vor$pk%in%c(2:5,9),baeume.vor$alt2,
                                                        ^
NO COPY: R/BWI3_HR.R:4306:44: style: Commas should always have a space after.
                ifelse(baeume.vor$ba < 998,baeume.vor$alt1+baeume.vor$pl/2,0))
                                           ^
NO COPY: R/BWI3_HR.R:4306:59: style: Put spaces around all infix operators.
                ifelse(baeume.vor$ba < 998,baeume.vor$alt1+baeume.vor$pl/2,0))
                                                         ~^~
NO COPY: R/BWI3_HR.R:4306:73: style: Put spaces around all infix operators.
                ifelse(baeume.vor$ba < 998,baeume.vor$alt1+baeume.vor$pl/2,0))
                                                                       ~^~
NO COPY: R/BWI3_HR.R:4306:76: style: Commas should always have a space after.
                ifelse(baeume.vor$ba < 998,baeume.vor$alt1+baeume.vor$pl/2,0))
                                                                           ^
NO COPY: R/BWI3_HR.R:4309:42: style: Put spaces around all infix operators.
  baeume.folg$bhd.pm <- (baeume.folg$bhd1+baeume.folg$bhd2)/2
                                        ~^~
NO COPY: R/BWI3_HR.R:4309:60: style: Put spaces around all infix operators.
  baeume.folg$bhd.pm <- (baeume.folg$bhd1+baeume.folg$bhd2)/2
                                                          ~^~
NO COPY: R/BWI3_HR.R:4310:1: style: lines should not be more than 80 characters.
  baeume.folg$alt.pm <- ifelse(baeume.folg$ba<998,baeume.folg$alt2-baeume.folg$pl/2,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:4310:46: style: Put spaces around all infix operators.
  baeume.folg$alt.pm <- ifelse(baeume.folg$ba<998,baeume.folg$alt2-baeume.folg$pl/2,
                                            ~^~
NO COPY: R/BWI3_HR.R:4310:51: style: Commas should always have a space after.
  baeume.folg$alt.pm <- ifelse(baeume.folg$ba<998,baeume.folg$alt2-baeume.folg$pl/2,
                                                  ^
NO COPY: R/BWI3_HR.R:4310:67: style: Put spaces around all infix operators.
  baeume.folg$alt.pm <- ifelse(baeume.folg$ba<998,baeume.folg$alt2-baeume.folg$pl/2,
                                                                 ~^~
NO COPY: R/BWI3_HR.R:4310:82: style: Put spaces around all infix operators.
  baeume.folg$alt.pm <- ifelse(baeume.folg$ba<998,baeume.folg$alt2-baeume.folg$pl/2,
                                                                                ~^~
NO COPY: R/BWI3_HR.R:4317:29: style: Put spaces around all infix operators.
                      breaks=c(seq(0,A.klass[[1]],A.klass[[2]]),A.max),right=T)
                           ~^~
NO COPY: R/BWI3_HR.R:4317:38: style: Commas should always have a space after.
                      breaks=c(seq(0,A.klass[[1]],A.klass[[2]]),A.max),right=T)
                                     ^
NO COPY: R/BWI3_HR.R:4317:51: style: Commas should always have a space after.
                      breaks=c(seq(0,A.klass[[1]],A.klass[[2]]),A.max),right=T)
                                                  ^
NO COPY: R/BWI3_HR.R:4317:65: style: Commas should always have a space after.
                      breaks=c(seq(0,A.klass[[1]],A.klass[[2]]),A.max),right=T)
                                                                ^
NO COPY: R/BWI3_HR.R:4317:72: style: Commas should always have a space after.
                      breaks=c(seq(0,A.klass[[1]],A.klass[[2]]),A.max),right=T)
                                                                       ^
NO COPY: R/BWI3_HR.R:4317:77: style: Put spaces around all infix operators.
                      breaks=c(seq(0,A.klass[[1]],A.klass[[2]]),A.max),right=T)
                                                                           ~^~
NO COPY: R/BWI3_HR.R:4319:29: style: Put spaces around all infix operators.
                      breaks=c(seq(0,A.klass[[1]],A.klass[[2]]),A.max),right=T)
                           ~^~
NO COPY: R/BWI3_HR.R:4319:38: style: Commas should always have a space after.
                      breaks=c(seq(0,A.klass[[1]],A.klass[[2]]),A.max),right=T)
                                     ^
NO COPY: R/BWI3_HR.R:4319:51: style: Commas should always have a space after.
                      breaks=c(seq(0,A.klass[[1]],A.klass[[2]]),A.max),right=T)
                                                  ^
NO COPY: R/BWI3_HR.R:4319:65: style: Commas should always have a space after.
                      breaks=c(seq(0,A.klass[[1]],A.klass[[2]]),A.max),right=T)
                                                                ^
NO COPY: R/BWI3_HR.R:4319:72: style: Commas should always have a space after.
                      breaks=c(seq(0,A.klass[[1]],A.klass[[2]]),A.max),right=T)
                                                                       ^
NO COPY: R/BWI3_HR.R:4319:77: style: Put spaces around all infix operators.
                      breaks=c(seq(0,A.klass[[1]],A.klass[[2]]),A.max),right=T)
                                                                           ~^~
NO COPY: R/BWI3_HR.R:4328:1: style: lines should not be more than 80 characters.
    brks <- c(0,7,seq(D.klass[[1]]+D.klass[[3]],D.klass[[2]],D.klass[[3]]),D.max)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:4328:17: style: Commas should always have a space after.
    brks <- c(0,7,seq(D.klass[[1]]+D.klass[[3]],D.klass[[2]],D.klass[[3]]),D.max)
                ^
NO COPY: R/BWI3_HR.R:4328:19: style: Commas should always have a space after.
    brks <- c(0,7,seq(D.klass[[1]]+D.klass[[3]],D.klass[[2]],D.klass[[3]]),D.max)
                  ^
NO COPY: R/BWI3_HR.R:4328:35: style: Put spaces around all infix operators.
    brks <- c(0,7,seq(D.klass[[1]]+D.klass[[3]],D.klass[[2]],D.klass[[3]]),D.max)
                                 ~^~
NO COPY: R/BWI3_HR.R:4328:49: style: Commas should always have a space after.
    brks <- c(0,7,seq(D.klass[[1]]+D.klass[[3]],D.klass[[2]],D.klass[[3]]),D.max)
                                                ^
NO COPY: R/BWI3_HR.R:4328:62: style: Commas should always have a space after.
    brks <- c(0,7,seq(D.klass[[1]]+D.klass[[3]],D.klass[[2]],D.klass[[3]]),D.max)
                                                             ^
NO COPY: R/BWI3_HR.R:4328:76: style: Commas should always have a space after.
    brks <- c(0,7,seq(D.klass[[1]]+D.klass[[3]],D.klass[[2]],D.klass[[3]]),D.max)
                                                                           ^
NO COPY: R/BWI3_HR.R:4330:32: style: Commas should always have a space after.
    brks <- c(seq(D.klass[[1]],D.klass[[2]],D.klass[[3]]),D.max)
                               ^
NO COPY: R/BWI3_HR.R:4330:45: style: Commas should always have a space after.
    brks <- c(seq(D.klass[[1]],D.klass[[2]],D.klass[[3]]),D.max)
                                            ^
NO COPY: R/BWI3_HR.R:4330:59: style: Commas should always have a space after.
    brks <- c(seq(D.klass[[1]],D.klass[[2]],D.klass[[3]]),D.max)
                                                          ^
NO COPY: R/BWI3_HR.R:4333:53: style: Put spaces around all infix operators.
  baeume.vor$dkl.pm <- cut(baeume.vor$bhd.pm, breaks=brks, right=F)
                                                   ~^~
NO COPY: R/BWI3_HR.R:4333:65: style: Put spaces around all infix operators.
  baeume.vor$dkl.pm <- cut(baeume.vor$bhd.pm, breaks=brks, right=F)
                                                               ~^~
NO COPY: R/BWI3_HR.R:4334:55: style: Put spaces around all infix operators.
  baeume.folg$dkl.pm <- cut(baeume.folg$bhd.pm, breaks=brks, right=F)
                                                     ~^~
NO COPY: R/BWI3_HR.R:4334:67: style: Put spaces around all infix operators.
  baeume.folg$dkl.pm <- cut(baeume.folg$bhd.pm, breaks=brks, right=F)
                                                                 ~^~
NO COPY: R/BWI3_HR.R:4338:3: warning: local variable 'D.k' assigned but may not be used
  D.k <- length(dkl.lab[!is.na(dkl.lab)])
  ^~~
NO COPY: R/BWI3_HR.R:4342:32: style: Put spaces around all infix operators.
  lk.v <- sum(baeume.vor$stfl1)/sum(baeume.vor$stfl1[baeume.vor$ba<998])
                              ~^~
NO COPY: R/BWI3_HR.R:4342:67: style: Put spaces around all infix operators.
  lk.v <- sum(baeume.vor$stfl1)/sum(baeume.vor$stfl1[baeume.vor$ba<998])
                                                                 ~^~
NO COPY: R/BWI3_HR.R:4343:33: style: Put spaces around all infix operators.
  lk.f <- sum(baeume.folg$stfl2)/sum(baeume.folg$stfl2[baeume.folg$ba<998])
                               ~^~
NO COPY: R/BWI3_HR.R:4343:70: style: Put spaces around all infix operators.
  lk.f <- sum(baeume.folg$stfl2)/sum(baeume.folg$stfl2[baeume.folg$ba<998])
                                                                    ~^~
NO COPY: R/BWI3_HR.R:4347:48: style: Put spaces around all infix operators.
  baf1.tnr <- stats::aggregate(baeume.vor$stfl1*lk.v/10000,
                                              ~^~
NO COPY: R/BWI3_HR.R:4347:53: style: Put spaces around all infix operators.
  baf1.tnr <- stats::aggregate(baeume.vor$stfl1*lk.v/10000,
                                                   ~^~
NO COPY: R/BWI3_HR.R:4348:7: style: Put spaces around all infix operators.
    by=list(baeume.vor$tnr,baeume.vor$bagr,baeume.vor$akl.pm,baeume.vor$dkl.pm),
     ~^~
NO COPY: R/BWI3_HR.R:4348:28: style: Commas should always have a space after.
    by=list(baeume.vor$tnr,baeume.vor$bagr,baeume.vor$akl.pm,baeume.vor$dkl.pm),
                           ^
NO COPY: R/BWI3_HR.R:4348:44: style: Commas should always have a space after.
    by=list(baeume.vor$tnr,baeume.vor$bagr,baeume.vor$akl.pm,baeume.vor$dkl.pm),
                                           ^
NO COPY: R/BWI3_HR.R:4348:62: style: Commas should always have a space after.
    by=list(baeume.vor$tnr,baeume.vor$bagr,baeume.vor$akl.pm,baeume.vor$dkl.pm),
                                                             ^
NO COPY: R/BWI3_HR.R:4350:30: style: Commas should always have a space after.
  names(baf1.tnr) <- c("tnr","bagr","akl.pm","dkl.pm","baf1")
                             ^
NO COPY: R/BWI3_HR.R:4350:37: style: Commas should always have a space after.
  names(baf1.tnr) <- c("tnr","bagr","akl.pm","dkl.pm","baf1")
                                    ^
NO COPY: R/BWI3_HR.R:4350:46: style: Commas should always have a space after.
  names(baf1.tnr) <- c("tnr","bagr","akl.pm","dkl.pm","baf1")
                                             ^
NO COPY: R/BWI3_HR.R:4350:55: style: Commas should always have a space after.
  names(baf1.tnr) <- c("tnr","bagr","akl.pm","dkl.pm","baf1")
                                                      ^
NO COPY: R/BWI3_HR.R:4351:49: style: Put spaces around all infix operators.
  baf2.tnr <- stats::aggregate(baeume.folg$stfl2*lk.f/10000,
                                               ~^~
NO COPY: R/BWI3_HR.R:4351:54: style: Put spaces around all infix operators.
  baf2.tnr <- stats::aggregate(baeume.folg$stfl2*lk.f/10000,
                                                    ~^~
NO COPY: R/BWI3_HR.R:4352:1: style: lines should not be more than 80 characters.
    by=list(baeume.folg$tnr,baeume.folg$bagr,baeume.folg$akl.pm,baeume.folg$dkl.pm),
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:4352:7: style: Put spaces around all infix operators.
    by=list(baeume.folg$tnr,baeume.folg$bagr,baeume.folg$akl.pm,baeume.folg$dkl.pm),
     ~^~
NO COPY: R/BWI3_HR.R:4352:29: style: Commas should always have a space after.
    by=list(baeume.folg$tnr,baeume.folg$bagr,baeume.folg$akl.pm,baeume.folg$dkl.pm),
                            ^
NO COPY: R/BWI3_HR.R:4352:46: style: Commas should always have a space after.
    by=list(baeume.folg$tnr,baeume.folg$bagr,baeume.folg$akl.pm,baeume.folg$dkl.pm),
                                             ^
NO COPY: R/BWI3_HR.R:4352:65: style: Commas should always have a space after.
    by=list(baeume.folg$tnr,baeume.folg$bagr,baeume.folg$akl.pm,baeume.folg$dkl.pm),
                                                                ^
NO COPY: R/BWI3_HR.R:4354:30: style: Commas should always have a space after.
  names(baf2.tnr) <- c("tnr","bagr","akl.pm","dkl.pm","baf2")
                             ^
NO COPY: R/BWI3_HR.R:4354:37: style: Commas should always have a space after.
  names(baf2.tnr) <- c("tnr","bagr","akl.pm","dkl.pm","baf2")
                                    ^
NO COPY: R/BWI3_HR.R:4354:46: style: Commas should always have a space after.
  names(baf2.tnr) <- c("tnr","bagr","akl.pm","dkl.pm","baf2")
                                             ^
NO COPY: R/BWI3_HR.R:4354:55: style: Commas should always have a space after.
  names(baf2.tnr) <- c("tnr","bagr","akl.pm","dkl.pm","baf2")
                                                      ^
NO COPY: R/BWI3_HR.R:4355:31: style: Commas should always have a space after.
  baf12.tnr <- merge(baf1.tnr,baf2.tnr,by=c("tnr","bagr","akl.pm","dkl.pm"),
                              ^
NO COPY: R/BWI3_HR.R:4355:40: style: Commas should always have a space after.
  baf12.tnr <- merge(baf1.tnr,baf2.tnr,by=c("tnr","bagr","akl.pm","dkl.pm"),
                                       ^
NO COPY: R/BWI3_HR.R:4355:42: style: Put spaces around all infix operators.
  baf12.tnr <- merge(baf1.tnr,baf2.tnr,by=c("tnr","bagr","akl.pm","dkl.pm"),
                                        ~^~
NO COPY: R/BWI3_HR.R:4355:51: style: Commas should always have a space after.
  baf12.tnr <- merge(baf1.tnr,baf2.tnr,by=c("tnr","bagr","akl.pm","dkl.pm"),
                                                  ^
NO COPY: R/BWI3_HR.R:4355:58: style: Commas should always have a space after.
  baf12.tnr <- merge(baf1.tnr,baf2.tnr,by=c("tnr","bagr","akl.pm","dkl.pm"),
                                                         ^
NO COPY: R/BWI3_HR.R:4355:67: style: Commas should always have a space after.
  baf12.tnr <- merge(baf1.tnr,baf2.tnr,by=c("tnr","bagr","akl.pm","dkl.pm"),
                                                                  ^
NO COPY: R/BWI3_HR.R:4356:22: style: Put spaces around all infix operators.
                all.x=T, all.y=T)
                    ~^~
NO COPY: R/BWI3_HR.R:4356:31: style: Put spaces around all infix operators.
                all.x=T, all.y=T)
                             ~^~
NO COPY: R/BWI3_HR.R:4361:36: style: Put spaces around all infix operators.
  baf12.tnr$mbaf <- (baf12.tnr$baf1+baf12.tnr$baf2)/2
                                  ~^~
NO COPY: R/BWI3_HR.R:4361:52: style: Put spaces around all infix operators.
  baf12.tnr$mbaf <- (baf12.tnr$baf1+baf12.tnr$baf2)/2
                                                  ~^~
NO COPY: R/BWI3_HR.R:4363:39: style: Put spaces around all infix operators.
  baf12.tnr$mbaf.hb <- (baf12.tnr$baf1/lk.v+baf12.tnr$baf2/lk.f)/2
                                     ~^~
NO COPY: R/BWI3_HR.R:4363:44: style: Put spaces around all infix operators.
  baf12.tnr$mbaf.hb <- (baf12.tnr$baf1/lk.v+baf12.tnr$baf2/lk.f)/2
                                          ~^~
NO COPY: R/BWI3_HR.R:4363:59: style: Put spaces around all infix operators.
  baf12.tnr$mbaf.hb <- (baf12.tnr$baf1/lk.v+baf12.tnr$baf2/lk.f)/2
                                                         ~^~
NO COPY: R/BWI3_HR.R:4363:65: style: Put spaces around all infix operators.
  baf12.tnr$mbaf.hb <- (baf12.tnr$baf1/lk.v+baf12.tnr$baf2/lk.f)/2
                                                               ~^~
NO COPY: R/BWI3_HR.R:4391:31: style: Commas should always have a space after.
r.variance.fun <- function(xy,n){
                              ^
NO COPY: R/BWI3_HR.R:4393:18: style: Commas should always have a space after.
  S.y <- sum(xy[,2]); S.x <- sum(xy[,1])
                 ^
NO COPY: R/BWI3_HR.R:4393:38: style: Commas should always have a space after.
  S.y <- sum(xy[,2]); S.x <- sum(xy[,1])
                                     ^
NO COPY: R/BWI3_HR.R:4394:14: style: Put spaces around all infix operators.
  R.xy <- S.y/S.x
            ~^~
NO COPY: R/BWI3_HR.R:4396:15: style: Put spaces around all infix operators.
  J.xy <- c(-n*S.y/S.x^2,n/S.x)
             ~^~
NO COPY: R/BWI3_HR.R:4396:19: style: Put spaces around all infix operators.
  J.xy <- c(-n*S.y/S.x^2,n/S.x)
                 ~^~
NO COPY: R/BWI3_HR.R:4396:23: style: Put spaces around all infix operators.
  J.xy <- c(-n*S.y/S.x^2,n/S.x)
                     ~^~
NO COPY: R/BWI3_HR.R:4396:26: style: Commas should always have a space after.
  J.xy <- c(-n*S.y/S.x^2,n/S.x)
                         ^
NO COPY: R/BWI3_HR.R:4396:27: style: Put spaces around all infix operators.
  J.xy <- c(-n*S.y/S.x^2,n/S.x)
                         ~^~
NO COPY: R/BWI3_HR.R:4399:18: style: Put spaces around all infix operators.
  VC.xy <- (t(xy)%*%xy)/n/(n-1)
                ~^~~~
NO COPY: R/BWI3_HR.R:4399:24: style: Put spaces around all infix operators.
  VC.xy <- (t(xy)%*%xy)/n/(n-1)
                      ~^~
NO COPY: R/BWI3_HR.R:4399:26: style: Put spaces around all infix operators.
  VC.xy <- (t(xy)%*%xy)/n/(n-1)
                        ~^~
NO COPY: R/BWI3_HR.R:4399:27: style: Place a space before left parenthesis, except in a function call.
  VC.xy <- (t(xy)%*%xy)/n/(n-1)
                          ^
NO COPY: R/BWI3_HR.R:4399:29: style: Put spaces around all infix operators.
  VC.xy <- (t(xy)%*%xy)/n/(n-1)
                           ~^~
NO COPY: R/BWI3_HR.R:4401:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  V.R.xy <- (t(J.xy)%*%VC.xy)%*%J.xy
  ^~~~~~
NO COPY: R/BWI3_HR.R:4401:21: style: Put spaces around all infix operators.
  V.R.xy <- (t(J.xy)%*%VC.xy)%*%J.xy
                   ~^~~~
NO COPY: R/BWI3_HR.R:4401:30: style: Put spaces around all infix operators.
  V.R.xy <- (t(J.xy)%*%VC.xy)%*%J.xy
                            ~^~~~
NO COPY: R/BWI3_HR.R:4402:34: style: Put spaces around all infix operators.
  return(list(R.xy = R.xy, V.R.xy=as.numeric(V.R.xy)))
                                ~^~
NO COPY: R/BWI3_HR.R:4402:46: style: Words within variable and function names should be separated by '_' rather than '.'.
  return(list(R.xy = R.xy, V.R.xy=as.numeric(V.R.xy)))
                                             ^~~~~~
NO COPY: R/BWI3_HR.R:4428:35: style: Commas should always have a space after.
r.xxy.variance.fun <- function(xy,n){
                                  ^
NO COPY: R/BWI3_HR.R:4429:4: style: Commented code should be removed.
  #n <- length(trakte[,1])
   ^~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:4430:4: style: Commented code should be removed.
  #n <- length(xy[,1])
   ^~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:4432:20: style: Commas should always have a space after.
  ti <- ifelse(xy[,2]>0,1,0)
                   ^
NO COPY: R/BWI3_HR.R:4432:22: style: Put spaces around all infix operators.
  ti <- ifelse(xy[,2]>0,1,0)
                    ~^~
NO COPY: R/BWI3_HR.R:4432:25: style: Commas should always have a space after.
  ti <- ifelse(xy[,2]>0,1,0)
                        ^
NO COPY: R/BWI3_HR.R:4432:27: style: Commas should always have a space after.
  ti <- ifelse(xy[,2]>0,1,0)
                          ^
NO COPY: R/BWI3_HR.R:4434:19: style: Commas should always have a space after.
  xy <- cbind(xy[,1:2],ti,y=xy[,3])    # TODO: use named index.
                  ^
NO COPY: R/BWI3_HR.R:4434:24: style: Commas should always have a space after.
  xy <- cbind(xy[,1:2],ti,y=xy[,3])    # TODO: use named index.
                       ^
NO COPY: R/BWI3_HR.R:4434:27: style: Commas should always have a space after.
  xy <- cbind(xy[,1:2],ti,y=xy[,3])    # TODO: use named index.
                          ^
NO COPY: R/BWI3_HR.R:4434:28: style: Put spaces around all infix operators.
  xy <- cbind(xy[,1:2],ti,y=xy[,3])    # TODO: use named index.
                          ~^~
NO COPY: R/BWI3_HR.R:4434:33: style: Commas should always have a space after.
  xy <- cbind(xy[,1:2],ti,y=xy[,3])    # TODO: use named index.
                                ^
NO COPY: R/BWI3_HR.R:4436:19: style: Commas should always have a space after.
  S.x1 <- sum(xy[,1]); S.x2 <- sum(xy[,2])
                  ^
NO COPY: R/BWI3_HR.R:4436:40: style: Commas should always have a space after.
  S.x1 <- sum(xy[,1]); S.x2 <- sum(xy[,2])
                                       ^
NO COPY: R/BWI3_HR.R:4437:19: style: Commas should always have a space after.
  S.ti <- sum(xy[,3]); S.y  <- sum(xy[,4])
                  ^
NO COPY: R/BWI3_HR.R:4437:40: style: Commas should always have a space after.
  S.ti <- sum(xy[,3]); S.y  <- sum(xy[,4])
                                       ^
NO COPY: R/BWI3_HR.R:4439:15: style: Put spaces around all infix operators.
  R.xxy <- S.y/S.x1*S.ti/S.x2
             ~^~
NO COPY: R/BWI3_HR.R:4439:20: style: Put spaces around all infix operators.
  R.xxy <- S.y/S.x1*S.ti/S.x2
                  ~^~
NO COPY: R/BWI3_HR.R:4439:25: style: Put spaces around all infix operators.
  R.xxy <- S.y/S.x1*S.ti/S.x2
                       ~^~
NO COPY: R/BWI3_HR.R:4446:13: style: Put spaces around all infix operators.
  J.xxy <- n*R.xxy*c(-1/S.x1,-1/S.x2,1/S.ti,1/S.y)
           ~^~
NO COPY: R/BWI3_HR.R:4446:19: style: Put spaces around all infix operators.
  J.xxy <- n*R.xxy*c(-1/S.x1,-1/S.x2,1/S.ti,1/S.y)
                 ~^~
NO COPY: R/BWI3_HR.R:4446:24: style: Put spaces around all infix operators.
  J.xxy <- n*R.xxy*c(-1/S.x1,-1/S.x2,1/S.ti,1/S.y)
                      ~^~
NO COPY: R/BWI3_HR.R:4446:30: style: Commas should always have a space after.
  J.xxy <- n*R.xxy*c(-1/S.x1,-1/S.x2,1/S.ti,1/S.y)
                             ^
NO COPY: R/BWI3_HR.R:4446:32: style: Put spaces around all infix operators.
  J.xxy <- n*R.xxy*c(-1/S.x1,-1/S.x2,1/S.ti,1/S.y)
                              ~^~
NO COPY: R/BWI3_HR.R:4446:38: style: Commas should always have a space after.
  J.xxy <- n*R.xxy*c(-1/S.x1,-1/S.x2,1/S.ti,1/S.y)
                                     ^
NO COPY: R/BWI3_HR.R:4446:39: style: Put spaces around all infix operators.
  J.xxy <- n*R.xxy*c(-1/S.x1,-1/S.x2,1/S.ti,1/S.y)
                                     ~^~
NO COPY: R/BWI3_HR.R:4446:45: style: Commas should always have a space after.
  J.xxy <- n*R.xxy*c(-1/S.x1,-1/S.x2,1/S.ti,1/S.y)
                                            ^
NO COPY: R/BWI3_HR.R:4446:46: style: Put spaces around all infix operators.
  J.xxy <- n*R.xxy*c(-1/S.x1,-1/S.x2,1/S.ti,1/S.y)
                                            ~^~
NO COPY: R/BWI3_HR.R:4449:19: style: Put spaces around all infix operators.
  VC.xxy <- (t(xy)%*%xy)/n/(n-1)
                 ~^~~~
NO COPY: R/BWI3_HR.R:4449:25: style: Put spaces around all infix operators.
  VC.xxy <- (t(xy)%*%xy)/n/(n-1)
                       ~^~
NO COPY: R/BWI3_HR.R:4449:27: style: Put spaces around all infix operators.
  VC.xxy <- (t(xy)%*%xy)/n/(n-1)
                         ~^~
NO COPY: R/BWI3_HR.R:4449:28: style: Place a space before left parenthesis, except in a function call.
  VC.xxy <- (t(xy)%*%xy)/n/(n-1)
                           ^
NO COPY: R/BWI3_HR.R:4449:30: style: Put spaces around all infix operators.
  VC.xxy <- (t(xy)%*%xy)/n/(n-1)
                            ~^~
NO COPY: R/BWI3_HR.R:4451:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  V.R.xxy <- (t(J.xxy)%*%VC.xxy)%*%J.xxy
  ^~~~~~~
NO COPY: R/BWI3_HR.R:4451:23: style: Put spaces around all infix operators.
  V.R.xxy <- (t(J.xxy)%*%VC.xxy)%*%J.xxy
                     ~^~~~
NO COPY: R/BWI3_HR.R:4451:33: style: Put spaces around all infix operators.
  V.R.xxy <- (t(J.xxy)%*%VC.xxy)%*%J.xxy
                               ~^~~~
NO COPY: R/BWI3_HR.R:4452:37: style: Put spaces around all infix operators.
  return(list(R.xxy = R.xxy, V.R.xxy=as.numeric(V.R.xxy)))
                                   ~^~
NO COPY: R/BWI3_HR.R:4452:49: style: Words within variable and function names should be separated by '_' rather than '.'.
  return(list(R.xxy = R.xxy, V.R.xxy=as.numeric(V.R.xxy)))
                                                ^~~~~~~
NO COPY: R/BWI3_HR.R:4481:52: style: Commas should always have a space after.
iVB.bilanz.bagr.akl.dkl.fun <- function(baeume.vor,baeume.folg,ecken){
                                                   ^
NO COPY: R/BWI3_HR.R:4481:64: style: Commas should always have a space after.
iVB.bilanz.bagr.akl.dkl.fun <- function(baeume.vor,baeume.folg,ecken){
                                                               ^
NO COPY: R/BWI3_HR.R:4484:77: style: Trailing whitespace is superfluous.
  baeume.ba <- baeume.folg[TRUE, c("TNr", "ENr", "STP", "BNr", "Pk", "BHD1", 
                                                                            ^
NO COPY: R/BWI3_HR.R:4485:74: style: Trailing whitespace is superfluous.
                                   "BHD2", "BaGr", "akl", "dkl", "VolV1", 
                                                                         ^
NO COPY: R/BWI3_HR.R:4486:78: style: Trailing whitespace is superfluous.
                                   "VolV2", "VolE1", "VolE2", "oiB1", "oiB2", 
                                                                             ^
NO COPY: R/BWI3_HR.R:4491:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.t <- stats::aggregate((baeume.ba$VolV2-baeume.ba$VolV1)*baeume.ba$NHa2
  ^~~~~~~
NO COPY: R/BWI3_HR.R:4491:31: style: Place a space before left parenthesis, except in a function call.
  iv.es.t <- stats::aggregate((baeume.ba$VolV2-baeume.ba$VolV1)*baeume.ba$NHa2
                              ^
NO COPY: R/BWI3_HR.R:4491:42: style: Variable and function names should be all lowercase.
  iv.es.t <- stats::aggregate((baeume.ba$VolV2-baeume.ba$VolV1)*baeume.ba$NHa2
                                         ^~~~~
NO COPY: R/BWI3_HR.R:4491:47: style: Put spaces around all infix operators.
  iv.es.t <- stats::aggregate((baeume.ba$VolV2-baeume.ba$VolV1)*baeume.ba$NHa2
                                             ~^~
NO COPY: R/BWI3_HR.R:4491:58: style: Variable and function names should be all lowercase.
  iv.es.t <- stats::aggregate((baeume.ba$VolV2-baeume.ba$VolV1)*baeume.ba$NHa2
                                                         ^~~~~
NO COPY: R/BWI3_HR.R:4491:64: style: Put spaces around all infix operators.
  iv.es.t <- stats::aggregate((baeume.ba$VolV2-baeume.ba$VolV1)*baeume.ba$NHa2
                                                              ~^~
NO COPY: R/BWI3_HR.R:4492:11: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk ==1,1,0),
          ^~
NO COPY: R/BWI3_HR.R:4492:32: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk ==1,1,0),
                               ^~~
NO COPY: R/BWI3_HR.R:4492:36: style: Commas should always have a space after.
          *ifelse(baeume.ba$Pk ==1,1,0),
                                   ^
NO COPY: R/BWI3_HR.R:4492:38: style: Commas should always have a space after.
          *ifelse(baeume.ba$Pk ==1,1,0),
                                     ^
NO COPY: R/BWI3_HR.R:4493:13: style: Put spaces around all infix operators.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)
           ~^~
NO COPY: R/BWI3_HR.R:4493:33: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)
                                ^
NO COPY: R/BWI3_HR.R:4493:43: style: Variable and function names should be all lowercase.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)
                                          ^~~~
NO COPY: R/BWI3_HR.R:4493:48: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)
                                               ^
NO COPY: R/BWI3_HR.R:4493:62: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)
                                                             ^
NO COPY: R/BWI3_HR.R:4493:77: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)
                                                                            ^
NO COPY: R/BWI3_HR.R:4495:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.t <- cbind(iv.es.t,
  ^~~~~~~
NO COPY: R/BWI3_HR.R:4495:20: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.t <- cbind(iv.es.t,
                   ^~~~~~~
NO COPY: R/BWI3_HR.R:4496:28: style: Place a space before left parenthesis, except in a function call.
          stats::aggregate((baeume.ba$VolV2-baeume.ba$VolV1)*baeume.ba$NHa2
                           ^
NO COPY: R/BWI3_HR.R:4496:39: style: Variable and function names should be all lowercase.
          stats::aggregate((baeume.ba$VolV2-baeume.ba$VolV1)*baeume.ba$NHa2
                                      ^~~~~
NO COPY: R/BWI3_HR.R:4496:44: style: Put spaces around all infix operators.
          stats::aggregate((baeume.ba$VolV2-baeume.ba$VolV1)*baeume.ba$NHa2
                                          ~^~
NO COPY: R/BWI3_HR.R:4496:55: style: Variable and function names should be all lowercase.
          stats::aggregate((baeume.ba$VolV2-baeume.ba$VolV1)*baeume.ba$NHa2
                                                      ^~~~~
NO COPY: R/BWI3_HR.R:4496:61: style: Put spaces around all infix operators.
          stats::aggregate((baeume.ba$VolV2-baeume.ba$VolV1)*baeume.ba$NHa2
                                                           ~^~
NO COPY: R/BWI3_HR.R:4497:11: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk ==1,1,0)* ifelse(baeume.ba$StFl2>0,1,0),
          ^~
NO COPY: R/BWI3_HR.R:4497:32: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk ==1,1,0)* ifelse(baeume.ba$StFl2>0,1,0),
                               ^~~
NO COPY: R/BWI3_HR.R:4497:36: style: Commas should always have a space after.
          *ifelse(baeume.ba$Pk ==1,1,0)* ifelse(baeume.ba$StFl2>0,1,0),
                                   ^
NO COPY: R/BWI3_HR.R:4497:38: style: Commas should always have a space after.
          *ifelse(baeume.ba$Pk ==1,1,0)* ifelse(baeume.ba$StFl2>0,1,0),
                                     ^
NO COPY: R/BWI3_HR.R:4497:40: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk ==1,1,0)* ifelse(baeume.ba$StFl2>0,1,0),
                                      ~^
NO COPY: R/BWI3_HR.R:4497:59: style: Variable and function names should be all lowercase.
          *ifelse(baeume.ba$Pk ==1,1,0)* ifelse(baeume.ba$StFl2>0,1,0),
                                                          ^~~~~
NO COPY: R/BWI3_HR.R:4497:64: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk ==1,1,0)* ifelse(baeume.ba$StFl2>0,1,0),
                                                              ~^~
NO COPY: R/BWI3_HR.R:4497:67: style: Commas should always have a space after.
          *ifelse(baeume.ba$Pk ==1,1,0)* ifelse(baeume.ba$StFl2>0,1,0),
                                                                  ^
NO COPY: R/BWI3_HR.R:4497:69: style: Commas should always have a space after.
          *ifelse(baeume.ba$Pk ==1,1,0)* ifelse(baeume.ba$StFl2>0,1,0),
                                                                    ^
NO COPY: R/BWI3_HR.R:4498:1: style: lines should not be more than 80 characters.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:4498:13: style: Put spaces around all infix operators.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
           ~^~
NO COPY: R/BWI3_HR.R:4498:33: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                ^
NO COPY: R/BWI3_HR.R:4498:43: style: Variable and function names should be all lowercase.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                          ^~~~
NO COPY: R/BWI3_HR.R:4498:48: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                               ^
NO COPY: R/BWI3_HR.R:4498:62: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                                             ^
NO COPY: R/BWI3_HR.R:4498:77: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                                                            ^
NO COPY: R/BWI3_HR.R:4500:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.t <- cbind(iv.es.t,
  ^~~~~~~
NO COPY: R/BWI3_HR.R:4500:20: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.t <- cbind(iv.es.t,
                   ^~~~~~~
NO COPY: R/BWI3_HR.R:4501:28: style: Place a space before left parenthesis, except in a function call.
          stats::aggregate((baeume.ba$VolE2-baeume.ba$VolE1)*baeume.ba$NHa2
                           ^
NO COPY: R/BWI3_HR.R:4501:39: style: Variable and function names should be all lowercase.
          stats::aggregate((baeume.ba$VolE2-baeume.ba$VolE1)*baeume.ba$NHa2
                                      ^~~~~
NO COPY: R/BWI3_HR.R:4501:44: style: Put spaces around all infix operators.
          stats::aggregate((baeume.ba$VolE2-baeume.ba$VolE1)*baeume.ba$NHa2
                                          ~^~
NO COPY: R/BWI3_HR.R:4501:55: style: Variable and function names should be all lowercase.
          stats::aggregate((baeume.ba$VolE2-baeume.ba$VolE1)*baeume.ba$NHa2
                                                      ^~~~~
NO COPY: R/BWI3_HR.R:4501:61: style: Put spaces around all infix operators.
          stats::aggregate((baeume.ba$VolE2-baeume.ba$VolE1)*baeume.ba$NHa2
                                                           ~^~
NO COPY: R/BWI3_HR.R:4502:11: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk ==1,1,0),
          ^~
NO COPY: R/BWI3_HR.R:4502:32: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk ==1,1,0),
                               ^~~
NO COPY: R/BWI3_HR.R:4502:36: style: Commas should always have a space after.
          *ifelse(baeume.ba$Pk ==1,1,0),
                                   ^
NO COPY: R/BWI3_HR.R:4502:38: style: Commas should always have a space after.
          *ifelse(baeume.ba$Pk ==1,1,0),
                                     ^
NO COPY: R/BWI3_HR.R:4503:1: style: lines should not be more than 80 characters.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:4503:13: style: Put spaces around all infix operators.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
           ~^~
NO COPY: R/BWI3_HR.R:4503:33: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                ^
NO COPY: R/BWI3_HR.R:4503:43: style: Variable and function names should be all lowercase.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                          ^~~~
NO COPY: R/BWI3_HR.R:4503:48: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                               ^
NO COPY: R/BWI3_HR.R:4503:62: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                                             ^
NO COPY: R/BWI3_HR.R:4503:77: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                                                            ^
NO COPY: R/BWI3_HR.R:4505:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.t <- cbind(iv.es.t,
  ^~~~~~~
NO COPY: R/BWI3_HR.R:4505:20: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.t <- cbind(iv.es.t,
                   ^~~~~~~
NO COPY: R/BWI3_HR.R:4506:28: style: Place a space before left parenthesis, except in a function call.
          stats::aggregate((baeume.ba$oiB2-baeume.ba$oiB1)*baeume.ba$NHa2
                           ^
NO COPY: R/BWI3_HR.R:4506:39: style: Variable and function names should be all lowercase.
          stats::aggregate((baeume.ba$oiB2-baeume.ba$oiB1)*baeume.ba$NHa2
                                      ^~~~
NO COPY: R/BWI3_HR.R:4506:43: style: Put spaces around all infix operators.
          stats::aggregate((baeume.ba$oiB2-baeume.ba$oiB1)*baeume.ba$NHa2
                                         ~^~
NO COPY: R/BWI3_HR.R:4506:54: style: Variable and function names should be all lowercase.
          stats::aggregate((baeume.ba$oiB2-baeume.ba$oiB1)*baeume.ba$NHa2
                                                     ^~~~
NO COPY: R/BWI3_HR.R:4506:59: style: Put spaces around all infix operators.
          stats::aggregate((baeume.ba$oiB2-baeume.ba$oiB1)*baeume.ba$NHa2
                                                         ~^~
NO COPY: R/BWI3_HR.R:4507:11: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk ==1,1,0),
          ^~
NO COPY: R/BWI3_HR.R:4507:32: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk ==1,1,0),
                               ^~~
NO COPY: R/BWI3_HR.R:4507:36: style: Commas should always have a space after.
          *ifelse(baeume.ba$Pk ==1,1,0),
                                   ^
NO COPY: R/BWI3_HR.R:4507:38: style: Commas should always have a space after.
          *ifelse(baeume.ba$Pk ==1,1,0),
                                     ^
NO COPY: R/BWI3_HR.R:4508:1: style: lines should not be more than 80 characters.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:4508:13: style: Put spaces around all infix operators.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
           ~^~
NO COPY: R/BWI3_HR.R:4508:33: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                ^
NO COPY: R/BWI3_HR.R:4508:43: style: Variable and function names should be all lowercase.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                          ^~~~
NO COPY: R/BWI3_HR.R:4508:48: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                               ^
NO COPY: R/BWI3_HR.R:4508:62: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                                             ^
NO COPY: R/BWI3_HR.R:4508:77: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                                                            ^
NO COPY: R/BWI3_HR.R:4511:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.t <- cbind(iv.es.t,
  ^~~~~~~
NO COPY: R/BWI3_HR.R:4511:20: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.t <- cbind(iv.es.t,
                   ^~~~~~~
NO COPY: R/BWI3_HR.R:4512:28: style: Place a space before left parenthesis, except in a function call.
          stats::aggregate((baeume.ba$VolV2-baeume.ba$VolV1)*baeume.ba$NHa2
                           ^
NO COPY: R/BWI3_HR.R:4512:39: style: Variable and function names should be all lowercase.
          stats::aggregate((baeume.ba$VolV2-baeume.ba$VolV1)*baeume.ba$NHa2
                                      ^~~~~
NO COPY: R/BWI3_HR.R:4512:44: style: Put spaces around all infix operators.
          stats::aggregate((baeume.ba$VolV2-baeume.ba$VolV1)*baeume.ba$NHa2
                                          ~^~
NO COPY: R/BWI3_HR.R:4512:55: style: Variable and function names should be all lowercase.
          stats::aggregate((baeume.ba$VolV2-baeume.ba$VolV1)*baeume.ba$NHa2
                                                      ^~~~~
NO COPY: R/BWI3_HR.R:4512:61: style: Put spaces around all infix operators.
          stats::aggregate((baeume.ba$VolV2-baeume.ba$VolV1)*baeume.ba$NHa2
                                                           ~^~
NO COPY: R/BWI3_HR.R:4513:11: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk==0&baeume.ba$BHD1>=7,1,0),
          ^~
NO COPY: R/BWI3_HR.R:4513:31: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk==0&baeume.ba$BHD1>=7,1,0),
                             ~^~~
NO COPY: R/BWI3_HR.R:4513:34: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk==0&baeume.ba$BHD1>=7,1,0),
                                ~^~
NO COPY: R/BWI3_HR.R:4513:49: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk==0&baeume.ba$BHD1>=7,1,0),
                                               ~^~~
NO COPY: R/BWI3_HR.R:4513:53: style: Commas should always have a space after.
          *ifelse(baeume.ba$Pk==0&baeume.ba$BHD1>=7,1,0),
                                                    ^
NO COPY: R/BWI3_HR.R:4513:55: style: Commas should always have a space after.
          *ifelse(baeume.ba$Pk==0&baeume.ba$BHD1>=7,1,0),
                                                      ^
NO COPY: R/BWI3_HR.R:4514:1: style: lines should not be more than 80 characters.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:4514:13: style: Put spaces around all infix operators.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
           ~^~
NO COPY: R/BWI3_HR.R:4514:33: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                ^
NO COPY: R/BWI3_HR.R:4514:43: style: Variable and function names should be all lowercase.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                          ^~~~
NO COPY: R/BWI3_HR.R:4514:48: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                               ^
NO COPY: R/BWI3_HR.R:4514:62: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                                             ^
NO COPY: R/BWI3_HR.R:4514:77: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                                                            ^
NO COPY: R/BWI3_HR.R:4516:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.t <- cbind(iv.es.t,
  ^~~~~~~
NO COPY: R/BWI3_HR.R:4516:20: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.t <- cbind(iv.es.t,
                   ^~~~~~~
NO COPY: R/BWI3_HR.R:4517:28: style: Place a space before left parenthesis, except in a function call.
          stats::aggregate((baeume.ba$VolV2-baeume.ba$VolV1)*baeume.ba$NHa2
                           ^
NO COPY: R/BWI3_HR.R:4517:39: style: Variable and function names should be all lowercase.
          stats::aggregate((baeume.ba$VolV2-baeume.ba$VolV1)*baeume.ba$NHa2
                                      ^~~~~
NO COPY: R/BWI3_HR.R:4517:44: style: Put spaces around all infix operators.
          stats::aggregate((baeume.ba$VolV2-baeume.ba$VolV1)*baeume.ba$NHa2
                                          ~^~
NO COPY: R/BWI3_HR.R:4517:55: style: Variable and function names should be all lowercase.
          stats::aggregate((baeume.ba$VolV2-baeume.ba$VolV1)*baeume.ba$NHa2
                                                      ^~~~~
NO COPY: R/BWI3_HR.R:4517:61: style: Put spaces around all infix operators.
          stats::aggregate((baeume.ba$VolV2-baeume.ba$VolV1)*baeume.ba$NHa2
                                                           ~^~
NO COPY: R/BWI3_HR.R:4518:1: style: lines should not be more than 80 characters.
          *ifelse(baeume.ba$Pk==0&baeume.ba$BHD1>=7,1,0)*ifelse(baeume.ba$StFl2>0,1,0),
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:4518:11: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk==0&baeume.ba$BHD1>=7,1,0)*ifelse(baeume.ba$StFl2>0,1,0),
          ^~
NO COPY: R/BWI3_HR.R:4518:31: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk==0&baeume.ba$BHD1>=7,1,0)*ifelse(baeume.ba$StFl2>0,1,0),
                             ~^~~
NO COPY: R/BWI3_HR.R:4518:34: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk==0&baeume.ba$BHD1>=7,1,0)*ifelse(baeume.ba$StFl2>0,1,0),
                                ~^~
NO COPY: R/BWI3_HR.R:4518:49: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk==0&baeume.ba$BHD1>=7,1,0)*ifelse(baeume.ba$StFl2>0,1,0),
                                               ~^~~
NO COPY: R/BWI3_HR.R:4518:53: style: Commas should always have a space after.
          *ifelse(baeume.ba$Pk==0&baeume.ba$BHD1>=7,1,0)*ifelse(baeume.ba$StFl2>0,1,0),
                                                    ^
NO COPY: R/BWI3_HR.R:4518:55: style: Commas should always have a space after.
          *ifelse(baeume.ba$Pk==0&baeume.ba$BHD1>=7,1,0)*ifelse(baeume.ba$StFl2>0,1,0),
                                                      ^
NO COPY: R/BWI3_HR.R:4518:57: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk==0&baeume.ba$BHD1>=7,1,0)*ifelse(baeume.ba$StFl2>0,1,0),
                                                       ~^~
NO COPY: R/BWI3_HR.R:4518:75: style: Variable and function names should be all lowercase.
          *ifelse(baeume.ba$Pk==0&baeume.ba$BHD1>=7,1,0)*ifelse(baeume.ba$StFl2>0,1,0),
                                                                          ^~~~~
NO COPY: R/BWI3_HR.R:4518:80: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk==0&baeume.ba$BHD1>=7,1,0)*ifelse(baeume.ba$StFl2>0,1,0),
                                                                              ~^~
NO COPY: R/BWI3_HR.R:4518:83: style: Commas should always have a space after.
          *ifelse(baeume.ba$Pk==0&baeume.ba$BHD1>=7,1,0)*ifelse(baeume.ba$StFl2>0,1,0),
                                                                                  ^
NO COPY: R/BWI3_HR.R:4518:85: style: Commas should always have a space after.
          *ifelse(baeume.ba$Pk==0&baeume.ba$BHD1>=7,1,0)*ifelse(baeume.ba$StFl2>0,1,0),
                                                                                    ^
NO COPY: R/BWI3_HR.R:4519:1: style: lines should not be more than 80 characters.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:4519:13: style: Put spaces around all infix operators.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
           ~^~
NO COPY: R/BWI3_HR.R:4519:33: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                ^
NO COPY: R/BWI3_HR.R:4519:43: style: Variable and function names should be all lowercase.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                          ^~~~
NO COPY: R/BWI3_HR.R:4519:48: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                               ^
NO COPY: R/BWI3_HR.R:4519:62: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                                             ^
NO COPY: R/BWI3_HR.R:4519:77: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                                                            ^
NO COPY: R/BWI3_HR.R:4521:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.t <- cbind(iv.es.t,
  ^~~~~~~
NO COPY: R/BWI3_HR.R:4521:20: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.t <- cbind(iv.es.t,
                   ^~~~~~~
NO COPY: R/BWI3_HR.R:4522:28: style: Place a space before left parenthesis, except in a function call.
          stats::aggregate((baeume.ba$VolE2-baeume.ba$VolE1)*baeume.ba$NHa2
                           ^
NO COPY: R/BWI3_HR.R:4522:39: style: Variable and function names should be all lowercase.
          stats::aggregate((baeume.ba$VolE2-baeume.ba$VolE1)*baeume.ba$NHa2
                                      ^~~~~
NO COPY: R/BWI3_HR.R:4522:44: style: Put spaces around all infix operators.
          stats::aggregate((baeume.ba$VolE2-baeume.ba$VolE1)*baeume.ba$NHa2
                                          ~^~
NO COPY: R/BWI3_HR.R:4522:55: style: Variable and function names should be all lowercase.
          stats::aggregate((baeume.ba$VolE2-baeume.ba$VolE1)*baeume.ba$NHa2
                                                      ^~~~~
NO COPY: R/BWI3_HR.R:4522:61: style: Put spaces around all infix operators.
          stats::aggregate((baeume.ba$VolE2-baeume.ba$VolE1)*baeume.ba$NHa2
                                                           ~^~
NO COPY: R/BWI3_HR.R:4523:11: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk==0&baeume.ba$BHD1>=7,1,0),
          ^~
NO COPY: R/BWI3_HR.R:4523:31: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk==0&baeume.ba$BHD1>=7,1,0),
                             ~^~~
NO COPY: R/BWI3_HR.R:4523:34: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk==0&baeume.ba$BHD1>=7,1,0),
                                ~^~
NO COPY: R/BWI3_HR.R:4523:49: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk==0&baeume.ba$BHD1>=7,1,0),
                                               ~^~~
NO COPY: R/BWI3_HR.R:4523:53: style: Commas should always have a space after.
          *ifelse(baeume.ba$Pk==0&baeume.ba$BHD1>=7,1,0),
                                                    ^
NO COPY: R/BWI3_HR.R:4523:55: style: Commas should always have a space after.
          *ifelse(baeume.ba$Pk==0&baeume.ba$BHD1>=7,1,0),
                                                      ^
NO COPY: R/BWI3_HR.R:4524:1: style: lines should not be more than 80 characters.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:4524:13: style: Put spaces around all infix operators.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
           ~^~
NO COPY: R/BWI3_HR.R:4524:33: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                ^
NO COPY: R/BWI3_HR.R:4524:43: style: Variable and function names should be all lowercase.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                          ^~~~
NO COPY: R/BWI3_HR.R:4524:48: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                               ^
NO COPY: R/BWI3_HR.R:4524:62: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                                             ^
NO COPY: R/BWI3_HR.R:4524:77: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                                                            ^
NO COPY: R/BWI3_HR.R:4526:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.t <- cbind(iv.es.t,
  ^~~~~~~
NO COPY: R/BWI3_HR.R:4526:20: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.t <- cbind(iv.es.t,
                   ^~~~~~~
NO COPY: R/BWI3_HR.R:4527:28: style: Place a space before left parenthesis, except in a function call.
          stats::aggregate((baeume.ba$oiB2-baeume.ba$oiB1)*baeume.ba$NHa2
                           ^
NO COPY: R/BWI3_HR.R:4527:39: style: Variable and function names should be all lowercase.
          stats::aggregate((baeume.ba$oiB2-baeume.ba$oiB1)*baeume.ba$NHa2
                                      ^~~~
NO COPY: R/BWI3_HR.R:4527:43: style: Put spaces around all infix operators.
          stats::aggregate((baeume.ba$oiB2-baeume.ba$oiB1)*baeume.ba$NHa2
                                         ~^~
NO COPY: R/BWI3_HR.R:4527:54: style: Variable and function names should be all lowercase.
          stats::aggregate((baeume.ba$oiB2-baeume.ba$oiB1)*baeume.ba$NHa2
                                                     ^~~~
NO COPY: R/BWI3_HR.R:4527:59: style: Put spaces around all infix operators.
          stats::aggregate((baeume.ba$oiB2-baeume.ba$oiB1)*baeume.ba$NHa2
                                                         ~^~
NO COPY: R/BWI3_HR.R:4528:11: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk==0&baeume.ba$BHD1>=7,1,0),
          ^~
NO COPY: R/BWI3_HR.R:4528:31: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk==0&baeume.ba$BHD1>=7,1,0),
                             ~^~~
NO COPY: R/BWI3_HR.R:4528:34: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk==0&baeume.ba$BHD1>=7,1,0),
                                ~^~
NO COPY: R/BWI3_HR.R:4528:49: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk==0&baeume.ba$BHD1>=7,1,0),
                                               ~^~~
NO COPY: R/BWI3_HR.R:4528:53: style: Commas should always have a space after.
          *ifelse(baeume.ba$Pk==0&baeume.ba$BHD1>=7,1,0),
                                                    ^
NO COPY: R/BWI3_HR.R:4528:55: style: Commas should always have a space after.
          *ifelse(baeume.ba$Pk==0&baeume.ba$BHD1>=7,1,0),
                                                      ^
NO COPY: R/BWI3_HR.R:4529:1: style: lines should not be more than 80 characters.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:4529:13: style: Put spaces around all infix operators.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
           ~^~
NO COPY: R/BWI3_HR.R:4529:33: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                ^
NO COPY: R/BWI3_HR.R:4529:43: style: Variable and function names should be all lowercase.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                          ^~~~
NO COPY: R/BWI3_HR.R:4529:48: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                               ^
NO COPY: R/BWI3_HR.R:4529:62: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                                             ^
NO COPY: R/BWI3_HR.R:4529:77: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                                                            ^
NO COPY: R/BWI3_HR.R:4532:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.t <- cbind(iv.es.t,
  ^~~~~~~
NO COPY: R/BWI3_HR.R:4532:20: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.t <- cbind(iv.es.t,
                   ^~~~~~~
NO COPY: R/BWI3_HR.R:4533:38: style: Variable and function names should be all lowercase.
          stats::aggregate(baeume.ba$VolV2*baeume.ba$NHa2
                                     ^~~~~
NO COPY: R/BWI3_HR.R:4533:43: style: Put spaces around all infix operators.
          stats::aggregate(baeume.ba$VolV2*baeume.ba$NHa2
                                         ~^~
NO COPY: R/BWI3_HR.R:4534:11: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk==0 & baeume.ba$BHD1<7,1,0),
          ^~
NO COPY: R/BWI3_HR.R:4534:31: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk==0 & baeume.ba$BHD1<7,1,0),
                             ~^~~
NO COPY: R/BWI3_HR.R:4534:51: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk==0 & baeume.ba$BHD1<7,1,0),
                                                 ~^~
NO COPY: R/BWI3_HR.R:4534:54: style: Commas should always have a space after.
          *ifelse(baeume.ba$Pk==0 & baeume.ba$BHD1<7,1,0),
                                                     ^
NO COPY: R/BWI3_HR.R:4534:56: style: Commas should always have a space after.
          *ifelse(baeume.ba$Pk==0 & baeume.ba$BHD1<7,1,0),
                                                       ^
NO COPY: R/BWI3_HR.R:4535:1: style: lines should not be more than 80 characters.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:4535:13: style: Put spaces around all infix operators.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
           ~^~
NO COPY: R/BWI3_HR.R:4535:33: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                ^
NO COPY: R/BWI3_HR.R:4535:43: style: Variable and function names should be all lowercase.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                          ^~~~
NO COPY: R/BWI3_HR.R:4535:48: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                               ^
NO COPY: R/BWI3_HR.R:4535:62: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                                             ^
NO COPY: R/BWI3_HR.R:4535:77: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                                                            ^
NO COPY: R/BWI3_HR.R:4537:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.t <- cbind(iv.es.t,
  ^~~~~~~
NO COPY: R/BWI3_HR.R:4537:20: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.t <- cbind(iv.es.t,
                   ^~~~~~~
NO COPY: R/BWI3_HR.R:4538:38: style: Variable and function names should be all lowercase.
          stats::aggregate(baeume.ba$VolV2*baeume.ba$NHa2
                                     ^~~~~
NO COPY: R/BWI3_HR.R:4538:43: style: Put spaces around all infix operators.
          stats::aggregate(baeume.ba$VolV2*baeume.ba$NHa2
                                         ~^~
NO COPY: R/BWI3_HR.R:4539:1: style: lines should not be more than 80 characters.
          *ifelse(baeume.ba$Pk==0 & baeume.ba$BHD1<7,1,0)*ifelse(baeume.ba$StFl2>0,1,0),
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:4539:11: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk==0 & baeume.ba$BHD1<7,1,0)*ifelse(baeume.ba$StFl2>0,1,0),
          ^~
NO COPY: R/BWI3_HR.R:4539:31: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk==0 & baeume.ba$BHD1<7,1,0)*ifelse(baeume.ba$StFl2>0,1,0),
                             ~^~~
NO COPY: R/BWI3_HR.R:4539:51: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk==0 & baeume.ba$BHD1<7,1,0)*ifelse(baeume.ba$StFl2>0,1,0),
                                                 ~^~
NO COPY: R/BWI3_HR.R:4539:54: style: Commas should always have a space after.
          *ifelse(baeume.ba$Pk==0 & baeume.ba$BHD1<7,1,0)*ifelse(baeume.ba$StFl2>0,1,0),
                                                     ^
NO COPY: R/BWI3_HR.R:4539:56: style: Commas should always have a space after.
          *ifelse(baeume.ba$Pk==0 & baeume.ba$BHD1<7,1,0)*ifelse(baeume.ba$StFl2>0,1,0),
                                                       ^
NO COPY: R/BWI3_HR.R:4539:58: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk==0 & baeume.ba$BHD1<7,1,0)*ifelse(baeume.ba$StFl2>0,1,0),
                                                        ~^~
NO COPY: R/BWI3_HR.R:4539:76: style: Variable and function names should be all lowercase.
          *ifelse(baeume.ba$Pk==0 & baeume.ba$BHD1<7,1,0)*ifelse(baeume.ba$StFl2>0,1,0),
                                                                           ^~~~~
NO COPY: R/BWI3_HR.R:4539:81: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk==0 & baeume.ba$BHD1<7,1,0)*ifelse(baeume.ba$StFl2>0,1,0),
                                                                               ~^~
NO COPY: R/BWI3_HR.R:4539:84: style: Commas should always have a space after.
          *ifelse(baeume.ba$Pk==0 & baeume.ba$BHD1<7,1,0)*ifelse(baeume.ba$StFl2>0,1,0),
                                                                                   ^
NO COPY: R/BWI3_HR.R:4539:86: style: Commas should always have a space after.
          *ifelse(baeume.ba$Pk==0 & baeume.ba$BHD1<7,1,0)*ifelse(baeume.ba$StFl2>0,1,0),
                                                                                     ^
NO COPY: R/BWI3_HR.R:4540:1: style: lines should not be more than 80 characters.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:4540:13: style: Put spaces around all infix operators.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
           ~^~
NO COPY: R/BWI3_HR.R:4540:33: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                ^
NO COPY: R/BWI3_HR.R:4540:43: style: Variable and function names should be all lowercase.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                          ^~~~
NO COPY: R/BWI3_HR.R:4540:48: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                               ^
NO COPY: R/BWI3_HR.R:4540:62: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                                             ^
NO COPY: R/BWI3_HR.R:4540:77: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                                                            ^
NO COPY: R/BWI3_HR.R:4542:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.t <- cbind(iv.es.t,
  ^~~~~~~
NO COPY: R/BWI3_HR.R:4542:20: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.t <- cbind(iv.es.t,
                   ^~~~~~~
NO COPY: R/BWI3_HR.R:4543:38: style: Variable and function names should be all lowercase.
          stats::aggregate(baeume.ba$VolE2*baeume.ba$NHa2
                                     ^~~~~
NO COPY: R/BWI3_HR.R:4543:43: style: Put spaces around all infix operators.
          stats::aggregate(baeume.ba$VolE2*baeume.ba$NHa2
                                         ~^~
NO COPY: R/BWI3_HR.R:4544:11: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk==0 & baeume.ba$BHD1<7,1,0),
          ^~
NO COPY: R/BWI3_HR.R:4544:31: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk==0 & baeume.ba$BHD1<7,1,0),
                             ~^~~
NO COPY: R/BWI3_HR.R:4544:51: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk==0 & baeume.ba$BHD1<7,1,0),
                                                 ~^~
NO COPY: R/BWI3_HR.R:4544:54: style: Commas should always have a space after.
          *ifelse(baeume.ba$Pk==0 & baeume.ba$BHD1<7,1,0),
                                                     ^
NO COPY: R/BWI3_HR.R:4544:56: style: Commas should always have a space after.
          *ifelse(baeume.ba$Pk==0 & baeume.ba$BHD1<7,1,0),
                                                       ^
NO COPY: R/BWI3_HR.R:4545:1: style: lines should not be more than 80 characters.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:4545:13: style: Put spaces around all infix operators.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
           ~^~
NO COPY: R/BWI3_HR.R:4545:33: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                ^
NO COPY: R/BWI3_HR.R:4545:43: style: Variable and function names should be all lowercase.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                          ^~~~
NO COPY: R/BWI3_HR.R:4545:48: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                               ^
NO COPY: R/BWI3_HR.R:4545:62: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                                             ^
NO COPY: R/BWI3_HR.R:4545:77: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                                                            ^
NO COPY: R/BWI3_HR.R:4547:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.t <- cbind(iv.es.t,
  ^~~~~~~
NO COPY: R/BWI3_HR.R:4547:20: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.t <- cbind(iv.es.t,
                   ^~~~~~~
NO COPY: R/BWI3_HR.R:4548:28: style: Place a space before left parenthesis, except in a function call.
          stats::aggregate((baeume.ba$oiB2-baeume.ba$oiB1)*baeume.ba$NHa2
                           ^
NO COPY: R/BWI3_HR.R:4548:39: style: Variable and function names should be all lowercase.
          stats::aggregate((baeume.ba$oiB2-baeume.ba$oiB1)*baeume.ba$NHa2
                                      ^~~~
NO COPY: R/BWI3_HR.R:4548:43: style: Put spaces around all infix operators.
          stats::aggregate((baeume.ba$oiB2-baeume.ba$oiB1)*baeume.ba$NHa2
                                         ~^~
NO COPY: R/BWI3_HR.R:4548:54: style: Variable and function names should be all lowercase.
          stats::aggregate((baeume.ba$oiB2-baeume.ba$oiB1)*baeume.ba$NHa2
                                                     ^~~~
NO COPY: R/BWI3_HR.R:4548:59: style: Put spaces around all infix operators.
          stats::aggregate((baeume.ba$oiB2-baeume.ba$oiB1)*baeume.ba$NHa2
                                                         ~^~
NO COPY: R/BWI3_HR.R:4549:11: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk==0 & baeume.ba$BHD1<7 & baeume.ba$BHD2>=7,1,0),
          ^~
NO COPY: R/BWI3_HR.R:4549:31: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk==0 & baeume.ba$BHD1<7 & baeume.ba$BHD2>=7,1,0),
                             ~^~~
NO COPY: R/BWI3_HR.R:4549:51: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk==0 & baeume.ba$BHD1<7 & baeume.ba$BHD2>=7,1,0),
                                                 ~^~
NO COPY: R/BWI3_HR.R:4549:70: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk==0 & baeume.ba$BHD1<7 & baeume.ba$BHD2>=7,1,0),
                                                                    ~^~~
NO COPY: R/BWI3_HR.R:4549:74: style: Commas should always have a space after.
          *ifelse(baeume.ba$Pk==0 & baeume.ba$BHD1<7 & baeume.ba$BHD2>=7,1,0),
                                                                         ^
NO COPY: R/BWI3_HR.R:4549:76: style: Commas should always have a space after.
          *ifelse(baeume.ba$Pk==0 & baeume.ba$BHD1<7 & baeume.ba$BHD2>=7,1,0),
                                                                           ^
NO COPY: R/BWI3_HR.R:4550:1: style: lines should not be more than 80 characters.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:4550:13: style: Put spaces around all infix operators.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
           ~^~
NO COPY: R/BWI3_HR.R:4550:33: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                ^
NO COPY: R/BWI3_HR.R:4550:43: style: Variable and function names should be all lowercase.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                          ^~~~
NO COPY: R/BWI3_HR.R:4550:48: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                               ^
NO COPY: R/BWI3_HR.R:4550:62: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                                             ^
NO COPY: R/BWI3_HR.R:4550:77: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                                                            ^
NO COPY: R/BWI3_HR.R:4552:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.t <- cbind(iv.es.t,
  ^~~~~~~
NO COPY: R/BWI3_HR.R:4552:20: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.t <- cbind(iv.es.t,
                   ^~~~~~~
NO COPY: R/BWI3_HR.R:4553:38: style: Variable and function names should be all lowercase.
          stats::aggregate(baeume.ba$StFl2,
                                     ^~~~~
NO COPY: R/BWI3_HR.R:4554:1: style: lines should not be more than 80 characters.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x/10000)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:4554:13: style: Put spaces around all infix operators.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x/10000)
           ~^~
NO COPY: R/BWI3_HR.R:4554:33: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x/10000)
                                ^
NO COPY: R/BWI3_HR.R:4554:43: style: Variable and function names should be all lowercase.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x/10000)
                                          ^~~~
NO COPY: R/BWI3_HR.R:4554:48: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x/10000)
                                               ^
NO COPY: R/BWI3_HR.R:4554:62: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x/10000)
                                                             ^
NO COPY: R/BWI3_HR.R:4554:77: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x/10000)
                                                                            ^
NO COPY: R/BWI3_HR.R:4554:83: style: Put spaces around all infix operators.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x/10000)
                                                                                 ~^~
NO COPY: R/BWI3_HR.R:4556:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.t <- cbind(iv.es.t,
  ^~~~~~~
NO COPY: R/BWI3_HR.R:4556:20: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.t <- cbind(iv.es.t,
                   ^~~~~~~
NO COPY: R/BWI3_HR.R:4557:38: style: Variable and function names should be all lowercase.
          stats::aggregate(baeume.ba$VolV2*baeume.ba$NHa2
                                     ^~~~~
NO COPY: R/BWI3_HR.R:4557:43: style: Put spaces around all infix operators.
          stats::aggregate(baeume.ba$VolV2*baeume.ba$NHa2
                                         ~^~
NO COPY: R/BWI3_HR.R:4558:11: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk<=1 & baeume.ba$BHD1>=7,1,0),
          ^~
NO COPY: R/BWI3_HR.R:4558:31: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk<=1 & baeume.ba$BHD1>=7,1,0),
                             ~^~~
NO COPY: R/BWI3_HR.R:4558:51: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk<=1 & baeume.ba$BHD1>=7,1,0),
                                                 ~^~~
NO COPY: R/BWI3_HR.R:4558:55: style: Commas should always have a space after.
          *ifelse(baeume.ba$Pk<=1 & baeume.ba$BHD1>=7,1,0),
                                                      ^
NO COPY: R/BWI3_HR.R:4558:57: style: Commas should always have a space after.
          *ifelse(baeume.ba$Pk<=1 & baeume.ba$BHD1>=7,1,0),
                                                        ^
NO COPY: R/BWI3_HR.R:4559:1: style: lines should not be more than 80 characters.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:4559:13: style: Put spaces around all infix operators.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
           ~^~
NO COPY: R/BWI3_HR.R:4559:33: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                ^
NO COPY: R/BWI3_HR.R:4559:43: style: Variable and function names should be all lowercase.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                          ^~~~
NO COPY: R/BWI3_HR.R:4559:48: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                               ^
NO COPY: R/BWI3_HR.R:4559:62: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                                             ^
NO COPY: R/BWI3_HR.R:4559:77: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                                                            ^
NO COPY: R/BWI3_HR.R:4561:9: style: Words within variable and function names should be separated by '_' rather than '.'.
  names(iv.es.t) <- c("TNr","BaGr","Akl","Dkl","iV.DhmR.S","iV.DhmR.HB.S",
        ^~~~~~~
NO COPY: R/BWI3_HR.R:4561:29: style: Commas should always have a space after.
  names(iv.es.t) <- c("TNr","BaGr","Akl","Dkl","iV.DhmR.S","iV.DhmR.HB.S",
                            ^
NO COPY: R/BWI3_HR.R:4561:36: style: Commas should always have a space after.
  names(iv.es.t) <- c("TNr","BaGr","Akl","Dkl","iV.DhmR.S","iV.DhmR.HB.S",
                                   ^
NO COPY: R/BWI3_HR.R:4561:42: style: Commas should always have a space after.
  names(iv.es.t) <- c("TNr","BaGr","Akl","Dkl","iV.DhmR.S","iV.DhmR.HB.S",
                                         ^
NO COPY: R/BWI3_HR.R:4561:48: style: Commas should always have a space after.
  names(iv.es.t) <- c("TNr","BaGr","Akl","Dkl","iV.DhmR.S","iV.DhmR.HB.S",
                                               ^
NO COPY: R/BWI3_HR.R:4561:60: style: Commas should always have a space after.
  names(iv.es.t) <- c("TNr","BaGr","Akl","Dkl","iV.DhmR.S","iV.DhmR.HB.S",
                                                           ^
NO COPY: R/BWI3_HR.R:4562:22: style: Commas should always have a space after.
          "iV.EoR.S","iB.S","iV.DhmR.Es","iV.DhmR.HB.Es","iV.EoR.Es",
                     ^
NO COPY: R/BWI3_HR.R:4562:29: style: Commas should always have a space after.
          "iV.EoR.S","iB.S","iV.DhmR.Es","iV.DhmR.HB.Es","iV.EoR.Es",
                            ^
NO COPY: R/BWI3_HR.R:4562:42: style: Commas should always have a space after.
          "iV.EoR.S","iB.S","iV.DhmR.Es","iV.DhmR.HB.Es","iV.EoR.Es",
                                         ^
NO COPY: R/BWI3_HR.R:4562:58: style: Commas should always have a space after.
          "iV.EoR.S","iB.S","iV.DhmR.Es","iV.DhmR.HB.Es","iV.EoR.Es",
                                                         ^
NO COPY: R/BWI3_HR.R:4563:1: style: lines should not be more than 80 characters.
          "iB.Es","V.DhmR.E","V.DhmR.HB.E","V.EoR.E","B.E","BAF2","V.DhmR.S2.Es")
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:4563:19: style: Commas should always have a space after.
          "iB.Es","V.DhmR.E","V.DhmR.HB.E","V.EoR.E","B.E","BAF2","V.DhmR.S2.Es")
                  ^
NO COPY: R/BWI3_HR.R:4563:30: style: Commas should always have a space after.
          "iB.Es","V.DhmR.E","V.DhmR.HB.E","V.EoR.E","B.E","BAF2","V.DhmR.S2.Es")
                             ^
NO COPY: R/BWI3_HR.R:4563:44: style: Commas should always have a space after.
          "iB.Es","V.DhmR.E","V.DhmR.HB.E","V.EoR.E","B.E","BAF2","V.DhmR.S2.Es")
                                           ^
NO COPY: R/BWI3_HR.R:4563:54: style: Commas should always have a space after.
          "iB.Es","V.DhmR.E","V.DhmR.HB.E","V.EoR.E","B.E","BAF2","V.DhmR.S2.Es")
                                                     ^
NO COPY: R/BWI3_HR.R:4563:60: style: Commas should always have a space after.
          "iB.Es","V.DhmR.E","V.DhmR.HB.E","V.EoR.E","B.E","BAF2","V.DhmR.S2.Es")
                                                           ^
NO COPY: R/BWI3_HR.R:4563:67: style: Commas should always have a space after.
          "iB.Es","V.DhmR.E","V.DhmR.HB.E","V.EoR.E","B.E","BAF2","V.DhmR.S2.Es")
                                                                  ^
NO COPY: R/BWI3_HR.R:4564:15: style: Words within variable and function names should be separated by '_' rather than '.'.
  utils::head(iv.es.t)
              ^~~~~~~
NO COPY: R/BWI3_HR.R:4567:76: style: Trailing whitespace is superfluous.
  baeume.ba <- baeume.vor[TRUE, c("TNr", "ENr", "STP", "BNr", "Pk", "BHD1", 
                                                                           ^
NO COPY: R/BWI3_HR.R:4568:73: style: Trailing whitespace is superfluous.
                                  "BHD2", "BaGr", "akl", "dkl", "VolV1", 
                                                                        ^
NO COPY: R/BWI3_HR.R:4569:77: style: Trailing whitespace is superfluous.
                                  "VolV2", "VolE1", "VolE2", "oiB1", "oiB2", 
                                                                            ^
NO COPY: R/BWI3_HR.R:4573:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.a.t <- stats::aggregate((baeume.ba$VolV2-baeume.ba$VolV1)*baeume.ba$NHa1
  ^~~~~~
NO COPY: R/BWI3_HR.R:4573:30: style: Place a space before left parenthesis, except in a function call.
  iv.a.t <- stats::aggregate((baeume.ba$VolV2-baeume.ba$VolV1)*baeume.ba$NHa1
                             ^
NO COPY: R/BWI3_HR.R:4573:41: style: Variable and function names should be all lowercase.
  iv.a.t <- stats::aggregate((baeume.ba$VolV2-baeume.ba$VolV1)*baeume.ba$NHa1
                                        ^~~~~
NO COPY: R/BWI3_HR.R:4573:46: style: Put spaces around all infix operators.
  iv.a.t <- stats::aggregate((baeume.ba$VolV2-baeume.ba$VolV1)*baeume.ba$NHa1
                                            ~^~
NO COPY: R/BWI3_HR.R:4573:57: style: Variable and function names should be all lowercase.
  iv.a.t <- stats::aggregate((baeume.ba$VolV2-baeume.ba$VolV1)*baeume.ba$NHa1
                                                        ^~~~~
NO COPY: R/BWI3_HR.R:4573:63: style: Put spaces around all infix operators.
  iv.a.t <- stats::aggregate((baeume.ba$VolV2-baeume.ba$VolV1)*baeume.ba$NHa1
                                                             ~^~
NO COPY: R/BWI3_HR.R:4574:11: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk %in%c(2:5,9),1,0),
          ^~
NO COPY: R/BWI3_HR.R:4574:32: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk %in%c(2:5,9),1,0),
                               ^~~~~
NO COPY: R/BWI3_HR.R:4574:42: style: Commas should always have a space after.
          *ifelse(baeume.ba$Pk %in%c(2:5,9),1,0),
                                         ^
NO COPY: R/BWI3_HR.R:4574:45: style: Commas should always have a space after.
          *ifelse(baeume.ba$Pk %in%c(2:5,9),1,0),
                                            ^
NO COPY: R/BWI3_HR.R:4574:47: style: Commas should always have a space after.
          *ifelse(baeume.ba$Pk %in%c(2:5,9),1,0),
                                              ^
NO COPY: R/BWI3_HR.R:4575:13: style: Put spaces around all infix operators.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)
           ~^~
NO COPY: R/BWI3_HR.R:4575:33: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)
                                ^
NO COPY: R/BWI3_HR.R:4575:43: style: Variable and function names should be all lowercase.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)
                                          ^~~~
NO COPY: R/BWI3_HR.R:4575:48: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)
                                               ^
NO COPY: R/BWI3_HR.R:4575:62: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)
                                                             ^
NO COPY: R/BWI3_HR.R:4575:77: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)
                                                                            ^
NO COPY: R/BWI3_HR.R:4577:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.a.t <- cbind(iv.a.t,
  ^~~~~~
NO COPY: R/BWI3_HR.R:4577:19: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.a.t <- cbind(iv.a.t,
                  ^~~~~~
NO COPY: R/BWI3_HR.R:4578:28: style: Place a space before left parenthesis, except in a function call.
          stats::aggregate((baeume.ba$VolV2-baeume.ba$VolV1)*baeume.ba$NHa1
                           ^
NO COPY: R/BWI3_HR.R:4578:39: style: Variable and function names should be all lowercase.
          stats::aggregate((baeume.ba$VolV2-baeume.ba$VolV1)*baeume.ba$NHa1
                                      ^~~~~
NO COPY: R/BWI3_HR.R:4578:44: style: Put spaces around all infix operators.
          stats::aggregate((baeume.ba$VolV2-baeume.ba$VolV1)*baeume.ba$NHa1
                                          ~^~
NO COPY: R/BWI3_HR.R:4578:55: style: Variable and function names should be all lowercase.
          stats::aggregate((baeume.ba$VolV2-baeume.ba$VolV1)*baeume.ba$NHa1
                                                      ^~~~~
NO COPY: R/BWI3_HR.R:4578:61: style: Put spaces around all infix operators.
          stats::aggregate((baeume.ba$VolV2-baeume.ba$VolV1)*baeume.ba$NHa1
                                                           ~^~
NO COPY: R/BWI3_HR.R:4579:11: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk %in%c(2:5,9),1,0)*ifelse(baeume.ba$StFl1>0,1,0),
          ^~
NO COPY: R/BWI3_HR.R:4579:32: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk %in%c(2:5,9),1,0)*ifelse(baeume.ba$StFl1>0,1,0),
                               ^~~~~
NO COPY: R/BWI3_HR.R:4579:42: style: Commas should always have a space after.
          *ifelse(baeume.ba$Pk %in%c(2:5,9),1,0)*ifelse(baeume.ba$StFl1>0,1,0),
                                         ^
NO COPY: R/BWI3_HR.R:4579:45: style: Commas should always have a space after.
          *ifelse(baeume.ba$Pk %in%c(2:5,9),1,0)*ifelse(baeume.ba$StFl1>0,1,0),
                                            ^
NO COPY: R/BWI3_HR.R:4579:47: style: Commas should always have a space after.
          *ifelse(baeume.ba$Pk %in%c(2:5,9),1,0)*ifelse(baeume.ba$StFl1>0,1,0),
                                              ^
NO COPY: R/BWI3_HR.R:4579:49: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk %in%c(2:5,9),1,0)*ifelse(baeume.ba$StFl1>0,1,0),
                                               ~^~
NO COPY: R/BWI3_HR.R:4579:67: style: Variable and function names should be all lowercase.
          *ifelse(baeume.ba$Pk %in%c(2:5,9),1,0)*ifelse(baeume.ba$StFl1>0,1,0),
                                                                  ^~~~~
NO COPY: R/BWI3_HR.R:4579:72: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk %in%c(2:5,9),1,0)*ifelse(baeume.ba$StFl1>0,1,0),
                                                                      ~^~
NO COPY: R/BWI3_HR.R:4579:75: style: Commas should always have a space after.
          *ifelse(baeume.ba$Pk %in%c(2:5,9),1,0)*ifelse(baeume.ba$StFl1>0,1,0),
                                                                          ^
NO COPY: R/BWI3_HR.R:4579:77: style: Commas should always have a space after.
          *ifelse(baeume.ba$Pk %in%c(2:5,9),1,0)*ifelse(baeume.ba$StFl1>0,1,0),
                                                                            ^
NO COPY: R/BWI3_HR.R:4580:1: style: lines should not be more than 80 characters.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:4580:13: style: Put spaces around all infix operators.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
           ~^~
NO COPY: R/BWI3_HR.R:4580:33: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                ^
NO COPY: R/BWI3_HR.R:4580:43: style: Variable and function names should be all lowercase.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                          ^~~~
NO COPY: R/BWI3_HR.R:4580:48: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                               ^
NO COPY: R/BWI3_HR.R:4580:62: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                                             ^
NO COPY: R/BWI3_HR.R:4580:77: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                                                            ^
NO COPY: R/BWI3_HR.R:4582:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.a.t <- cbind(iv.a.t,
  ^~~~~~
NO COPY: R/BWI3_HR.R:4582:19: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.a.t <- cbind(iv.a.t,
                  ^~~~~~
NO COPY: R/BWI3_HR.R:4583:38: style: Variable and function names should be all lowercase.
          stats::aggregate(baeume.ba$VolV2*baeume.ba$NHa1
                                     ^~~~~
NO COPY: R/BWI3_HR.R:4583:43: style: Put spaces around all infix operators.
          stats::aggregate(baeume.ba$VolV2*baeume.ba$NHa1
                                         ~^~
NO COPY: R/BWI3_HR.R:4584:11: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk %in%c(2:5,9),1,0),
          ^~
NO COPY: R/BWI3_HR.R:4584:32: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk %in%c(2:5,9),1,0),
                               ^~~~~
NO COPY: R/BWI3_HR.R:4584:42: style: Commas should always have a space after.
          *ifelse(baeume.ba$Pk %in%c(2:5,9),1,0),
                                         ^
NO COPY: R/BWI3_HR.R:4584:45: style: Commas should always have a space after.
          *ifelse(baeume.ba$Pk %in%c(2:5,9),1,0),
                                            ^
NO COPY: R/BWI3_HR.R:4584:47: style: Commas should always have a space after.
          *ifelse(baeume.ba$Pk %in%c(2:5,9),1,0),
                                              ^
NO COPY: R/BWI3_HR.R:4585:1: style: lines should not be more than 80 characters.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:4585:13: style: Put spaces around all infix operators.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
           ~^~
NO COPY: R/BWI3_HR.R:4585:33: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                ^
NO COPY: R/BWI3_HR.R:4585:43: style: Variable and function names should be all lowercase.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                          ^~~~
NO COPY: R/BWI3_HR.R:4585:48: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                               ^
NO COPY: R/BWI3_HR.R:4585:62: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                                             ^
NO COPY: R/BWI3_HR.R:4585:77: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                                                            ^
NO COPY: R/BWI3_HR.R:4586:1: style: lines should not be more than 80 characters.
  #(2.114) Derbholz m.R. im Hauptbestand ausgeschiedener Vorrat (insgesamt zur PM) 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:4586:83: style: Trailing whitespace is superfluous.
  #(2.114) Derbholz m.R. im Hauptbestand ausgeschiedener Vorrat (insgesamt zur PM) 
                                                                                  ^
NO COPY: R/BWI3_HR.R:4587:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.a.t <- cbind(iv.a.t,
  ^~~~~~
NO COPY: R/BWI3_HR.R:4587:19: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.a.t <- cbind(iv.a.t,
                  ^~~~~~
NO COPY: R/BWI3_HR.R:4588:38: style: Variable and function names should be all lowercase.
          stats::aggregate(baeume.ba$VolV2*baeume.ba$NHa1
                                     ^~~~~
NO COPY: R/BWI3_HR.R:4588:43: style: Put spaces around all infix operators.
          stats::aggregate(baeume.ba$VolV2*baeume.ba$NHa1
                                         ~^~
NO COPY: R/BWI3_HR.R:4589:11: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk %in%c(2:5,9),1,0)*ifelse(baeume.ba$StFl1>0,1,0),
          ^~
NO COPY: R/BWI3_HR.R:4589:32: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk %in%c(2:5,9),1,0)*ifelse(baeume.ba$StFl1>0,1,0),
                               ^~~~~
NO COPY: R/BWI3_HR.R:4589:42: style: Commas should always have a space after.
          *ifelse(baeume.ba$Pk %in%c(2:5,9),1,0)*ifelse(baeume.ba$StFl1>0,1,0),
                                         ^
NO COPY: R/BWI3_HR.R:4589:45: style: Commas should always have a space after.
          *ifelse(baeume.ba$Pk %in%c(2:5,9),1,0)*ifelse(baeume.ba$StFl1>0,1,0),
                                            ^
NO COPY: R/BWI3_HR.R:4589:47: style: Commas should always have a space after.
          *ifelse(baeume.ba$Pk %in%c(2:5,9),1,0)*ifelse(baeume.ba$StFl1>0,1,0),
                                              ^
NO COPY: R/BWI3_HR.R:4589:49: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk %in%c(2:5,9),1,0)*ifelse(baeume.ba$StFl1>0,1,0),
                                               ~^~
NO COPY: R/BWI3_HR.R:4589:67: style: Variable and function names should be all lowercase.
          *ifelse(baeume.ba$Pk %in%c(2:5,9),1,0)*ifelse(baeume.ba$StFl1>0,1,0),
                                                                  ^~~~~
NO COPY: R/BWI3_HR.R:4589:72: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk %in%c(2:5,9),1,0)*ifelse(baeume.ba$StFl1>0,1,0),
                                                                      ~^~
NO COPY: R/BWI3_HR.R:4589:75: style: Commas should always have a space after.
          *ifelse(baeume.ba$Pk %in%c(2:5,9),1,0)*ifelse(baeume.ba$StFl1>0,1,0),
                                                                          ^
NO COPY: R/BWI3_HR.R:4589:77: style: Commas should always have a space after.
          *ifelse(baeume.ba$Pk %in%c(2:5,9),1,0)*ifelse(baeume.ba$StFl1>0,1,0),
                                                                            ^
NO COPY: R/BWI3_HR.R:4590:1: style: lines should not be more than 80 characters.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:4590:13: style: Put spaces around all infix operators.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
           ~^~
NO COPY: R/BWI3_HR.R:4590:33: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                ^
NO COPY: R/BWI3_HR.R:4590:43: style: Variable and function names should be all lowercase.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                          ^~~~
NO COPY: R/BWI3_HR.R:4590:48: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                               ^
NO COPY: R/BWI3_HR.R:4590:62: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                                             ^
NO COPY: R/BWI3_HR.R:4590:77: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                                                            ^
NO COPY: R/BWI3_HR.R:4593:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.a.t <- cbind(iv.a.t,
  ^~~~~~
NO COPY: R/BWI3_HR.R:4593:19: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.a.t <- cbind(iv.a.t,
                  ^~~~~~
NO COPY: R/BWI3_HR.R:4594:28: style: Place a space before left parenthesis, except in a function call.
          stats::aggregate((baeume.ba$VolE2-baeume.ba$VolE1)*baeume.ba$NHa1
                           ^
NO COPY: R/BWI3_HR.R:4594:39: style: Variable and function names should be all lowercase.
          stats::aggregate((baeume.ba$VolE2-baeume.ba$VolE1)*baeume.ba$NHa1
                                      ^~~~~
NO COPY: R/BWI3_HR.R:4594:44: style: Put spaces around all infix operators.
          stats::aggregate((baeume.ba$VolE2-baeume.ba$VolE1)*baeume.ba$NHa1
                                          ~^~
NO COPY: R/BWI3_HR.R:4594:55: style: Variable and function names should be all lowercase.
          stats::aggregate((baeume.ba$VolE2-baeume.ba$VolE1)*baeume.ba$NHa1
                                                      ^~~~~
NO COPY: R/BWI3_HR.R:4594:61: style: Put spaces around all infix operators.
          stats::aggregate((baeume.ba$VolE2-baeume.ba$VolE1)*baeume.ba$NHa1
                                                           ~^~
NO COPY: R/BWI3_HR.R:4595:11: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk %in%c(2:5,9),1,0),
          ^~
NO COPY: R/BWI3_HR.R:4595:32: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk %in%c(2:5,9),1,0),
                               ^~~~~
NO COPY: R/BWI3_HR.R:4595:42: style: Commas should always have a space after.
          *ifelse(baeume.ba$Pk %in%c(2:5,9),1,0),
                                         ^
NO COPY: R/BWI3_HR.R:4595:45: style: Commas should always have a space after.
          *ifelse(baeume.ba$Pk %in%c(2:5,9),1,0),
                                            ^
NO COPY: R/BWI3_HR.R:4595:47: style: Commas should always have a space after.
          *ifelse(baeume.ba$Pk %in%c(2:5,9),1,0),
                                              ^
NO COPY: R/BWI3_HR.R:4596:1: style: lines should not be more than 80 characters.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:4596:13: style: Put spaces around all infix operators.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
           ~^~
NO COPY: R/BWI3_HR.R:4596:33: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                ^
NO COPY: R/BWI3_HR.R:4596:43: style: Variable and function names should be all lowercase.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                          ^~~~
NO COPY: R/BWI3_HR.R:4596:48: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                               ^
NO COPY: R/BWI3_HR.R:4596:62: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                                             ^
NO COPY: R/BWI3_HR.R:4596:77: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                                                            ^
NO COPY: R/BWI3_HR.R:4598:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.a.t <- cbind(iv.a.t,
  ^~~~~~
NO COPY: R/BWI3_HR.R:4598:19: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.a.t <- cbind(iv.a.t,
                  ^~~~~~
NO COPY: R/BWI3_HR.R:4599:38: style: Variable and function names should be all lowercase.
          stats::aggregate(baeume.ba$VolE2*baeume.ba$NHa1
                                     ^~~~~
NO COPY: R/BWI3_HR.R:4599:43: style: Put spaces around all infix operators.
          stats::aggregate(baeume.ba$VolE2*baeume.ba$NHa1
                                         ~^~
NO COPY: R/BWI3_HR.R:4600:11: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk %in%c(2:5,9),1,0),
          ^~
NO COPY: R/BWI3_HR.R:4600:32: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk %in%c(2:5,9),1,0),
                               ^~~~~
NO COPY: R/BWI3_HR.R:4600:42: style: Commas should always have a space after.
          *ifelse(baeume.ba$Pk %in%c(2:5,9),1,0),
                                         ^
NO COPY: R/BWI3_HR.R:4600:45: style: Commas should always have a space after.
          *ifelse(baeume.ba$Pk %in%c(2:5,9),1,0),
                                            ^
NO COPY: R/BWI3_HR.R:4600:47: style: Commas should always have a space after.
          *ifelse(baeume.ba$Pk %in%c(2:5,9),1,0),
                                              ^
NO COPY: R/BWI3_HR.R:4601:1: style: lines should not be more than 80 characters.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:4601:13: style: Put spaces around all infix operators.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
           ~^~
NO COPY: R/BWI3_HR.R:4601:33: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                ^
NO COPY: R/BWI3_HR.R:4601:43: style: Variable and function names should be all lowercase.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                          ^~~~
NO COPY: R/BWI3_HR.R:4601:48: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                               ^
NO COPY: R/BWI3_HR.R:4601:62: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                                             ^
NO COPY: R/BWI3_HR.R:4601:77: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                                                            ^
NO COPY: R/BWI3_HR.R:4603:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.a.t <- cbind(iv.a.t,
  ^~~~~~
NO COPY: R/BWI3_HR.R:4603:19: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.a.t <- cbind(iv.a.t,
                  ^~~~~~
NO COPY: R/BWI3_HR.R:4604:28: style: Place a space before left parenthesis, except in a function call.
          stats::aggregate((baeume.ba$oiB2-baeume.ba$oiB1)*baeume.ba$NHa1
                           ^
NO COPY: R/BWI3_HR.R:4604:39: style: Variable and function names should be all lowercase.
          stats::aggregate((baeume.ba$oiB2-baeume.ba$oiB1)*baeume.ba$NHa1
                                      ^~~~
NO COPY: R/BWI3_HR.R:4604:43: style: Put spaces around all infix operators.
          stats::aggregate((baeume.ba$oiB2-baeume.ba$oiB1)*baeume.ba$NHa1
                                         ~^~
NO COPY: R/BWI3_HR.R:4604:54: style: Variable and function names should be all lowercase.
          stats::aggregate((baeume.ba$oiB2-baeume.ba$oiB1)*baeume.ba$NHa1
                                                     ^~~~
NO COPY: R/BWI3_HR.R:4604:59: style: Put spaces around all infix operators.
          stats::aggregate((baeume.ba$oiB2-baeume.ba$oiB1)*baeume.ba$NHa1
                                                         ~^~
NO COPY: R/BWI3_HR.R:4605:11: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk %in%c(2:5,9),1,0),
          ^~
NO COPY: R/BWI3_HR.R:4605:32: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk %in%c(2:5,9),1,0),
                               ^~~~~
NO COPY: R/BWI3_HR.R:4605:42: style: Commas should always have a space after.
          *ifelse(baeume.ba$Pk %in%c(2:5,9),1,0),
                                         ^
NO COPY: R/BWI3_HR.R:4605:45: style: Commas should always have a space after.
          *ifelse(baeume.ba$Pk %in%c(2:5,9),1,0),
                                            ^
NO COPY: R/BWI3_HR.R:4605:47: style: Commas should always have a space after.
          *ifelse(baeume.ba$Pk %in%c(2:5,9),1,0),
                                              ^
NO COPY: R/BWI3_HR.R:4606:1: style: lines should not be more than 80 characters.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:4606:13: style: Put spaces around all infix operators.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
           ~^~
NO COPY: R/BWI3_HR.R:4606:33: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                ^
NO COPY: R/BWI3_HR.R:4606:43: style: Variable and function names should be all lowercase.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                          ^~~~
NO COPY: R/BWI3_HR.R:4606:48: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                               ^
NO COPY: R/BWI3_HR.R:4606:62: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                                             ^
NO COPY: R/BWI3_HR.R:4606:77: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                                                            ^
NO COPY: R/BWI3_HR.R:4608:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.a.t <- cbind(iv.a.t,
  ^~~~~~
NO COPY: R/BWI3_HR.R:4608:19: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.a.t <- cbind(iv.a.t,
                  ^~~~~~
NO COPY: R/BWI3_HR.R:4609:34: style: Variable and function names should be all lowercase.
      stats::aggregate(baeume.ba$oiB2*baeume.ba$NHa1
                                 ^~~~
NO COPY: R/BWI3_HR.R:4609:38: style: Put spaces around all infix operators.
      stats::aggregate(baeume.ba$oiB2*baeume.ba$NHa1
                                    ~^~
NO COPY: R/BWI3_HR.R:4610:7: style: Put spaces around all infix operators.
      *ifelse(baeume.ba$Pk %in%c(2:5,9),1,0),
      ^~
NO COPY: R/BWI3_HR.R:4610:28: style: Put spaces around all infix operators.
      *ifelse(baeume.ba$Pk %in%c(2:5,9),1,0),
                           ^~~~~
NO COPY: R/BWI3_HR.R:4610:38: style: Commas should always have a space after.
      *ifelse(baeume.ba$Pk %in%c(2:5,9),1,0),
                                     ^
NO COPY: R/BWI3_HR.R:4610:41: style: Commas should always have a space after.
      *ifelse(baeume.ba$Pk %in%c(2:5,9),1,0),
                                        ^
NO COPY: R/BWI3_HR.R:4610:43: style: Commas should always have a space after.
      *ifelse(baeume.ba$Pk %in%c(2:5,9),1,0),
                                          ^
NO COPY: R/BWI3_HR.R:4611:9: style: Put spaces around all infix operators.
      by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
       ~^~
NO COPY: R/BWI3_HR.R:4611:29: style: Commas should always have a space after.
      by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                            ^
NO COPY: R/BWI3_HR.R:4611:39: style: Variable and function names should be all lowercase.
      by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                      ^~~~
NO COPY: R/BWI3_HR.R:4611:44: style: Commas should always have a space after.
      by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                           ^
NO COPY: R/BWI3_HR.R:4611:58: style: Commas should always have a space after.
      by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                                         ^
NO COPY: R/BWI3_HR.R:4611:73: style: Commas should always have a space after.
      by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                                                        ^
NO COPY: R/BWI3_HR.R:4613:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.a.t <- cbind(iv.a.t,
  ^~~~~~
NO COPY: R/BWI3_HR.R:4613:19: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.a.t <- cbind(iv.a.t,
                  ^~~~~~
NO COPY: R/BWI3_HR.R:4614:34: style: Variable and function names should be all lowercase.
      stats::aggregate(baeume.ba$StFl1,
                                 ^~~~~
NO COPY: R/BWI3_HR.R:4615:1: style: lines should not be more than 80 characters.
      by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x/10000)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:4615:9: style: Put spaces around all infix operators.
      by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x/10000)
       ~^~
NO COPY: R/BWI3_HR.R:4615:29: style: Commas should always have a space after.
      by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x/10000)
                            ^
NO COPY: R/BWI3_HR.R:4615:39: style: Variable and function names should be all lowercase.
      by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x/10000)
                                      ^~~~
NO COPY: R/BWI3_HR.R:4615:44: style: Commas should always have a space after.
      by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x/10000)
                                           ^
NO COPY: R/BWI3_HR.R:4615:58: style: Commas should always have a space after.
      by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x/10000)
                                                         ^
NO COPY: R/BWI3_HR.R:4615:73: style: Commas should always have a space after.
      by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x/10000)
                                                                        ^
NO COPY: R/BWI3_HR.R:4615:79: style: Put spaces around all infix operators.
      by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x/10000)
                                                                             ~^~
NO COPY: R/BWI3_HR.R:4618:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.a.t <- cbind(iv.a.t,
  ^~~~~~
NO COPY: R/BWI3_HR.R:4618:19: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.a.t <- cbind(iv.a.t,
                  ^~~~~~
NO COPY: R/BWI3_HR.R:4619:1: style: lines should not be more than 80 characters.
      stats::aggregate(baeume.ba$VolV1*baeume.ba$NHa1*ifelse(baeume.ba$Pk==1,1,0),
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:4619:34: style: Variable and function names should be all lowercase.
      stats::aggregate(baeume.ba$VolV1*baeume.ba$NHa1*ifelse(baeume.ba$Pk==1,1,0),
                                 ^~~~~
NO COPY: R/BWI3_HR.R:4619:39: style: Put spaces around all infix operators.
      stats::aggregate(baeume.ba$VolV1*baeume.ba$NHa1*ifelse(baeume.ba$Pk==1,1,0),
                                     ~^~
NO COPY: R/BWI3_HR.R:4619:54: style: Put spaces around all infix operators.
      stats::aggregate(baeume.ba$VolV1*baeume.ba$NHa1*ifelse(baeume.ba$Pk==1,1,0),
                                                    ~^~
NO COPY: R/BWI3_HR.R:4619:74: style: Put spaces around all infix operators.
      stats::aggregate(baeume.ba$VolV1*baeume.ba$NHa1*ifelse(baeume.ba$Pk==1,1,0),
                                                                        ~^~~
NO COPY: R/BWI3_HR.R:4619:78: style: Commas should always have a space after.
      stats::aggregate(baeume.ba$VolV1*baeume.ba$NHa1*ifelse(baeume.ba$Pk==1,1,0),
                                                                             ^
NO COPY: R/BWI3_HR.R:4619:80: style: Commas should always have a space after.
      stats::aggregate(baeume.ba$VolV1*baeume.ba$NHa1*ifelse(baeume.ba$Pk==1,1,0),
                                                                               ^
NO COPY: R/BWI3_HR.R:4620:9: style: Put spaces around all infix operators.
      by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
       ~^~
NO COPY: R/BWI3_HR.R:4620:29: style: Commas should always have a space after.
      by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                            ^
NO COPY: R/BWI3_HR.R:4620:39: style: Variable and function names should be all lowercase.
      by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                      ^~~~
NO COPY: R/BWI3_HR.R:4620:44: style: Commas should always have a space after.
      by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                           ^
NO COPY: R/BWI3_HR.R:4620:58: style: Commas should always have a space after.
      by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                                         ^
NO COPY: R/BWI3_HR.R:4620:73: style: Commas should always have a space after.
      by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                                                        ^
NO COPY: R/BWI3_HR.R:4621:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.a.t <- cbind(iv.a.t,
  ^~~~~~
NO COPY: R/BWI3_HR.R:4621:19: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.a.t <- cbind(iv.a.t,
                  ^~~~~~
NO COPY: R/BWI3_HR.R:4622:34: style: Variable and function names should be all lowercase.
      stats::aggregate(baeume.ba$VolV1*baeume.ba$NHa1
                                 ^~~~~
NO COPY: R/BWI3_HR.R:4622:39: style: Put spaces around all infix operators.
      stats::aggregate(baeume.ba$VolV1*baeume.ba$NHa1
                                     ~^~
NO COPY: R/BWI3_HR.R:4623:7: style: Put spaces around all infix operators.
      *ifelse(baeume.ba$Pk%in%c(2:5,9),1,0),
      ^~
NO COPY: R/BWI3_HR.R:4623:27: style: Put spaces around all infix operators.
      *ifelse(baeume.ba$Pk%in%c(2:5,9),1,0),
                         ~^~~~~
NO COPY: R/BWI3_HR.R:4623:37: style: Commas should always have a space after.
      *ifelse(baeume.ba$Pk%in%c(2:5,9),1,0),
                                    ^
NO COPY: R/BWI3_HR.R:4623:40: style: Commas should always have a space after.
      *ifelse(baeume.ba$Pk%in%c(2:5,9),1,0),
                                       ^
NO COPY: R/BWI3_HR.R:4623:42: style: Commas should always have a space after.
      *ifelse(baeume.ba$Pk%in%c(2:5,9),1,0),
                                         ^
NO COPY: R/BWI3_HR.R:4624:9: style: Put spaces around all infix operators.
      by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
       ~^~
NO COPY: R/BWI3_HR.R:4624:29: style: Commas should always have a space after.
      by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                            ^
NO COPY: R/BWI3_HR.R:4624:39: style: Variable and function names should be all lowercase.
      by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                      ^~~~
NO COPY: R/BWI3_HR.R:4624:44: style: Commas should always have a space after.
      by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                           ^
NO COPY: R/BWI3_HR.R:4624:58: style: Commas should always have a space after.
      by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                                         ^
NO COPY: R/BWI3_HR.R:4624:73: style: Commas should always have a space after.
      by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                                                        ^
NO COPY: R/BWI3_HR.R:4627:9: style: Words within variable and function names should be separated by '_' rather than '.'.
  names(iv.a.t) <- c("TNr","BaGr","Akl","Dkl","iV.DhmR.A","iV.DhmR.HB.A",
        ^~~~~~
NO COPY: R/BWI3_HR.R:4627:28: style: Commas should always have a space after.
  names(iv.a.t) <- c("TNr","BaGr","Akl","Dkl","iV.DhmR.A","iV.DhmR.HB.A",
                           ^
NO COPY: R/BWI3_HR.R:4627:35: style: Commas should always have a space after.
  names(iv.a.t) <- c("TNr","BaGr","Akl","Dkl","iV.DhmR.A","iV.DhmR.HB.A",
                                  ^
NO COPY: R/BWI3_HR.R:4627:41: style: Commas should always have a space after.
  names(iv.a.t) <- c("TNr","BaGr","Akl","Dkl","iV.DhmR.A","iV.DhmR.HB.A",
                                        ^
NO COPY: R/BWI3_HR.R:4627:47: style: Commas should always have a space after.
  names(iv.a.t) <- c("TNr","BaGr","Akl","Dkl","iV.DhmR.A","iV.DhmR.HB.A",
                                              ^
NO COPY: R/BWI3_HR.R:4627:59: style: Commas should always have a space after.
  names(iv.a.t) <- c("TNr","BaGr","Akl","Dkl","iV.DhmR.A","iV.DhmR.HB.A",
                                                          ^
NO COPY: R/BWI3_HR.R:4628:16: style: Commas should always have a space after.
    "V.DhmR.A","V.DhmR.HB.A","iV.EoR.A","V.EoR.A", "iB.A","B.A","BAF1",
               ^
NO COPY: R/BWI3_HR.R:4628:30: style: Commas should always have a space after.
    "V.DhmR.A","V.DhmR.HB.A","iV.EoR.A","V.EoR.A", "iB.A","B.A","BAF1",
                             ^
NO COPY: R/BWI3_HR.R:4628:41: style: Commas should always have a space after.
    "V.DhmR.A","V.DhmR.HB.A","iV.EoR.A","V.EoR.A", "iB.A","B.A","BAF1",
                                        ^
NO COPY: R/BWI3_HR.R:4628:59: style: Commas should always have a space after.
    "V.DhmR.A","V.DhmR.HB.A","iV.EoR.A","V.EoR.A", "iB.A","B.A","BAF1",
                                                          ^
NO COPY: R/BWI3_HR.R:4628:65: style: Commas should always have a space after.
    "V.DhmR.A","V.DhmR.HB.A","iV.EoR.A","V.EoR.A", "iB.A","B.A","BAF1",
                                                                ^
NO COPY: R/BWI3_HR.R:4629:17: style: Commas should always have a space after.
    "V.DhmR.S1","V.DhmR.A1")
                ^
NO COPY: R/BWI3_HR.R:4630:15: style: Words within variable and function names should be separated by '_' rather than '.'.
  utils::head(iv.a.t)
              ^~~~~~
NO COPY: R/BWI3_HR.R:4632:1: style: lines should not be more than 80 characters.
  iv.es.a.t <- merge(iv.es.t,iv.a.t, by=c("TNr","BaGr","Akl","Dkl"),all.x=T,all.y=T)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:4632:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.a.t <- merge(iv.es.t,iv.a.t, by=c("TNr","BaGr","Akl","Dkl"),all.x=T,all.y=T)
  ^~~~~~~~~
NO COPY: R/BWI3_HR.R:4632:22: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.a.t <- merge(iv.es.t,iv.a.t, by=c("TNr","BaGr","Akl","Dkl"),all.x=T,all.y=T)
                     ^~~~~~~
NO COPY: R/BWI3_HR.R:4632:30: style: Commas should always have a space after.
  iv.es.a.t <- merge(iv.es.t,iv.a.t, by=c("TNr","BaGr","Akl","Dkl"),all.x=T,all.y=T)
                             ^
NO COPY: R/BWI3_HR.R:4632:30: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.a.t <- merge(iv.es.t,iv.a.t, by=c("TNr","BaGr","Akl","Dkl"),all.x=T,all.y=T)
                             ^~~~~~
NO COPY: R/BWI3_HR.R:4632:40: style: Put spaces around all infix operators.
  iv.es.a.t <- merge(iv.es.t,iv.a.t, by=c("TNr","BaGr","Akl","Dkl"),all.x=T,all.y=T)
                                      ~^~
NO COPY: R/BWI3_HR.R:4632:49: style: Commas should always have a space after.
  iv.es.a.t <- merge(iv.es.t,iv.a.t, by=c("TNr","BaGr","Akl","Dkl"),all.x=T,all.y=T)
                                                ^
NO COPY: R/BWI3_HR.R:4632:56: style: Commas should always have a space after.
  iv.es.a.t <- merge(iv.es.t,iv.a.t, by=c("TNr","BaGr","Akl","Dkl"),all.x=T,all.y=T)
                                                       ^
NO COPY: R/BWI3_HR.R:4632:62: style: Commas should always have a space after.
  iv.es.a.t <- merge(iv.es.t,iv.a.t, by=c("TNr","BaGr","Akl","Dkl"),all.x=T,all.y=T)
                                                             ^
NO COPY: R/BWI3_HR.R:4632:69: style: Commas should always have a space after.
  iv.es.a.t <- merge(iv.es.t,iv.a.t, by=c("TNr","BaGr","Akl","Dkl"),all.x=T,all.y=T)
                                                                    ^
NO COPY: R/BWI3_HR.R:4632:74: style: Put spaces around all infix operators.
  iv.es.a.t <- merge(iv.es.t,iv.a.t, by=c("TNr","BaGr","Akl","Dkl"),all.x=T,all.y=T)
                                                                        ~^~
NO COPY: R/BWI3_HR.R:4632:77: style: Commas should always have a space after.
  iv.es.a.t <- merge(iv.es.t,iv.a.t, by=c("TNr","BaGr","Akl","Dkl"),all.x=T,all.y=T)
                                                                            ^
NO COPY: R/BWI3_HR.R:4632:82: style: Put spaces around all infix operators.
  iv.es.a.t <- merge(iv.es.t,iv.a.t, by=c("TNr","BaGr","Akl","Dkl"),all.x=T,all.y=T)
                                                                                ~^~
NO COPY: R/BWI3_HR.R:4634:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.a.t[is.na(iv.es.a.t)] <- 0
  ^~~~~~~~~
NO COPY: R/BWI3_HR.R:4634:19: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.a.t[is.na(iv.es.a.t)] <- 0
                  ^~~~~~~~~
NO COPY: R/BWI3_HR.R:4635:10: style: Words within variable and function names should be separated by '_' rather than '.'.
  length(iv.es.a.t[,1])
         ^~~~~~~~~
NO COPY: R/BWI3_HR.R:4635:21: style: Commas should always have a space after.
  length(iv.es.a.t[,1])
                    ^
NO COPY: R/BWI3_HR.R:4636:1: style: Trailing whitespace is superfluous.
 
^
NO COPY: R/BWI3_HR.R:4638:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  nte.pl.t <- stats::aggregate(rep(1,length(ecken[,1])),by=list(ecken$TNr),sum)
  ^~~~~~~~
NO COPY: R/BWI3_HR.R:4638:38: style: Commas should always have a space after.
  nte.pl.t <- stats::aggregate(rep(1,length(ecken[,1])),by=list(ecken$TNr),sum)
                                     ^
NO COPY: R/BWI3_HR.R:4638:52: style: Commas should always have a space after.
  nte.pl.t <- stats::aggregate(rep(1,length(ecken[,1])),by=list(ecken$TNr),sum)
                                                   ^
NO COPY: R/BWI3_HR.R:4638:57: style: Commas should always have a space after.
  nte.pl.t <- stats::aggregate(rep(1,length(ecken[,1])),by=list(ecken$TNr),sum)
                                                        ^
NO COPY: R/BWI3_HR.R:4638:59: style: Put spaces around all infix operators.
  nte.pl.t <- stats::aggregate(rep(1,length(ecken[,1])),by=list(ecken$TNr),sum)
                                                         ~^~
NO COPY: R/BWI3_HR.R:4638:76: style: Commas should always have a space after.
  nte.pl.t <- stats::aggregate(rep(1,length(ecken[,1])),by=list(ecken$TNr),sum)
                                                                           ^
NO COPY: R/BWI3_HR.R:4639:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  nte.pl.t <- cbind(nte.pl.t,
  ^~~~~~~~
NO COPY: R/BWI3_HR.R:4639:21: style: Words within variable and function names should be separated by '_' rather than '.'.
  nte.pl.t <- cbind(nte.pl.t,
                    ^~~~~~~~
NO COPY: R/BWI3_HR.R:4640:48: style: Commas should always have a space after.
                     stats::aggregate(ecken$PL,by=list(ecken$TNr),mean)$x,
                                               ^
NO COPY: R/BWI3_HR.R:4640:50: style: Put spaces around all infix operators.
                     stats::aggregate(ecken$PL,by=list(ecken$TNr),mean)$x,
                                                ~^~
NO COPY: R/BWI3_HR.R:4640:67: style: Commas should always have a space after.
                     stats::aggregate(ecken$PL,by=list(ecken$TNr),mean)$x,
                                                                  ^
NO COPY: R/BWI3_HR.R:4641:51: style: Commas should always have a space after.
                     stats::aggregate(ecken$PLkal,by=list(ecken$TNr),mean)$x)
                                                  ^
NO COPY: R/BWI3_HR.R:4641:53: style: Put spaces around all infix operators.
                     stats::aggregate(ecken$PLkal,by=list(ecken$TNr),mean)$x)
                                                   ~^~
NO COPY: R/BWI3_HR.R:4641:70: style: Commas should always have a space after.
                     stats::aggregate(ecken$PLkal,by=list(ecken$TNr),mean)$x)
                                                                     ^
NO COPY: R/BWI3_HR.R:4642:9: style: Words within variable and function names should be separated by '_' rather than '.'.
  names(nte.pl.t) <- c("TNr","nTE","mPL","mPLkal")
        ^~~~~~~~
NO COPY: R/BWI3_HR.R:4642:30: style: Commas should always have a space after.
  names(nte.pl.t) <- c("TNr","nTE","mPL","mPLkal")
                             ^
NO COPY: R/BWI3_HR.R:4642:36: style: Commas should always have a space after.
  names(nte.pl.t) <- c("TNr","nTE","mPL","mPLkal")
                                   ^
NO COPY: R/BWI3_HR.R:4642:42: style: Commas should always have a space after.
  names(nte.pl.t) <- c("TNr","nTE","mPL","mPLkal")
                                         ^
NO COPY: R/BWI3_HR.R:4643:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.a.t <- merge(iv.es.a.t,nte.pl.t,by=c("TNr"),all.x=T)
  ^~~~~~~~~
NO COPY: R/BWI3_HR.R:4643:22: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.a.t <- merge(iv.es.a.t,nte.pl.t,by=c("TNr"),all.x=T)
                     ^~~~~~~~~
NO COPY: R/BWI3_HR.R:4643:32: style: Commas should always have a space after.
  iv.es.a.t <- merge(iv.es.a.t,nte.pl.t,by=c("TNr"),all.x=T)
                               ^
NO COPY: R/BWI3_HR.R:4643:32: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.a.t <- merge(iv.es.a.t,nte.pl.t,by=c("TNr"),all.x=T)
                               ^~~~~~~~
NO COPY: R/BWI3_HR.R:4643:41: style: Commas should always have a space after.
  iv.es.a.t <- merge(iv.es.a.t,nte.pl.t,by=c("TNr"),all.x=T)
                                        ^
NO COPY: R/BWI3_HR.R:4643:43: style: Put spaces around all infix operators.
  iv.es.a.t <- merge(iv.es.a.t,nte.pl.t,by=c("TNr"),all.x=T)
                                         ~^~
NO COPY: R/BWI3_HR.R:4643:53: style: Commas should always have a space after.
  iv.es.a.t <- merge(iv.es.a.t,nte.pl.t,by=c("TNr"),all.x=T)
                                                    ^
NO COPY: R/BWI3_HR.R:4643:58: style: Put spaces around all infix operators.
  iv.es.a.t <- merge(iv.es.a.t,nte.pl.t,by=c("TNr"),all.x=T)
                                                        ~^~
NO COPY: R/BWI3_HR.R:4648:6: style: Commented code should be removed.
  #  iv.es.a.t[is.na(iv.es.a.t)] <- 0
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:4649:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: R/BWI3_HR.R:4650:15: style: Words within variable and function names should be separated by '_' rather than '.'.
  utils::head(iv.es.a.t)
              ^~~~~~~~~
NO COPY: R/BWI3_HR.R:4653:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.a.t$iV.DhmR <-
  ^~~~~~~~~
NO COPY: R/BWI3_HR.R:4653:13: style: Variable and function names should be all lowercase.
  iv.es.a.t$iV.DhmR <-
            ^~~~~~~
NO COPY: R/BWI3_HR.R:4654:1: style: lines should not be more than 80 characters.
  iv.es.a.t$iV.DhmR.S+iv.es.a.t$iV.DhmR.Es+iv.es.a.t$V.DhmR.E+iv.es.a.t$iV.DhmR.A
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:4654:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.a.t$iV.DhmR.S+iv.es.a.t$iV.DhmR.Es+iv.es.a.t$V.DhmR.E+iv.es.a.t$iV.DhmR.A
  ^~~~~~~~~
NO COPY: R/BWI3_HR.R:4654:13: style: Variable and function names should be all lowercase.
  iv.es.a.t$iV.DhmR.S+iv.es.a.t$iV.DhmR.Es+iv.es.a.t$V.DhmR.E+iv.es.a.t$iV.DhmR.A
            ^~~~~~~~~
NO COPY: R/BWI3_HR.R:4654:13: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.a.t$iV.DhmR.S+iv.es.a.t$iV.DhmR.Es+iv.es.a.t$V.DhmR.E+iv.es.a.t$iV.DhmR.A
            ^~~~~~~~~
NO COPY: R/BWI3_HR.R:4654:22: style: Put spaces around all infix operators.
  iv.es.a.t$iV.DhmR.S+iv.es.a.t$iV.DhmR.Es+iv.es.a.t$V.DhmR.E+iv.es.a.t$iV.DhmR.A
                    ~^~
NO COPY: R/BWI3_HR.R:4654:23: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.a.t$iV.DhmR.S+iv.es.a.t$iV.DhmR.Es+iv.es.a.t$V.DhmR.E+iv.es.a.t$iV.DhmR.A
                      ^~~~~~~~~
NO COPY: R/BWI3_HR.R:4654:33: style: Variable and function names should be all lowercase.
  iv.es.a.t$iV.DhmR.S+iv.es.a.t$iV.DhmR.Es+iv.es.a.t$V.DhmR.E+iv.es.a.t$iV.DhmR.A
                                ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:4654:33: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.a.t$iV.DhmR.S+iv.es.a.t$iV.DhmR.Es+iv.es.a.t$V.DhmR.E+iv.es.a.t$iV.DhmR.A
                                ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:4654:43: style: Put spaces around all infix operators.
  iv.es.a.t$iV.DhmR.S+iv.es.a.t$iV.DhmR.Es+iv.es.a.t$V.DhmR.E+iv.es.a.t$iV.DhmR.A
                                         ~^~
NO COPY: R/BWI3_HR.R:4654:44: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.a.t$iV.DhmR.S+iv.es.a.t$iV.DhmR.Es+iv.es.a.t$V.DhmR.E+iv.es.a.t$iV.DhmR.A
                                           ^~~~~~~~~
NO COPY: R/BWI3_HR.R:4654:54: style: Variable and function names should be all lowercase.
  iv.es.a.t$iV.DhmR.S+iv.es.a.t$iV.DhmR.Es+iv.es.a.t$V.DhmR.E+iv.es.a.t$iV.DhmR.A
                                                     ^~~~~~~~
NO COPY: R/BWI3_HR.R:4654:54: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.a.t$iV.DhmR.S+iv.es.a.t$iV.DhmR.Es+iv.es.a.t$V.DhmR.E+iv.es.a.t$iV.DhmR.A
                                                     ^~~~~~~~
NO COPY: R/BWI3_HR.R:4654:62: style: Put spaces around all infix operators.
  iv.es.a.t$iV.DhmR.S+iv.es.a.t$iV.DhmR.Es+iv.es.a.t$V.DhmR.E+iv.es.a.t$iV.DhmR.A
                                                            ~^~
NO COPY: R/BWI3_HR.R:4654:63: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.a.t$iV.DhmR.S+iv.es.a.t$iV.DhmR.Es+iv.es.a.t$V.DhmR.E+iv.es.a.t$iV.DhmR.A
                                                              ^~~~~~~~~
NO COPY: R/BWI3_HR.R:4654:73: style: Variable and function names should be all lowercase.
  iv.es.a.t$iV.DhmR.S+iv.es.a.t$iV.DhmR.Es+iv.es.a.t$V.DhmR.E+iv.es.a.t$iV.DhmR.A
                                                                        ^~~~~~~~~
NO COPY: R/BWI3_HR.R:4654:73: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.a.t$iV.DhmR.S+iv.es.a.t$iV.DhmR.Es+iv.es.a.t$V.DhmR.E+iv.es.a.t$iV.DhmR.A
                                                                        ^~~~~~~~~
NO COPY: R/BWI3_HR.R:4655:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.a.t$iV.DhmR.HB <-
  ^~~~~~~~~
NO COPY: R/BWI3_HR.R:4655:13: style: Variable and function names should be all lowercase.
  iv.es.a.t$iV.DhmR.HB <-
            ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:4655:13: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.a.t$iV.DhmR.HB <-
            ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:4656:1: style: lines should not be more than 80 characters.
  iv.es.a.t$iV.DhmR.HB.S+iv.es.a.t$iV.DhmR.HB.Es+iv.es.a.t$V.DhmR.HB.E+iv.es.a.t$iV.DhmR.HB.A
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:4656:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.a.t$iV.DhmR.HB.S+iv.es.a.t$iV.DhmR.HB.Es+iv.es.a.t$V.DhmR.HB.E+iv.es.a.t$iV.DhmR.HB.A
  ^~~~~~~~~
NO COPY: R/BWI3_HR.R:4656:13: style: Variable and function names should be all lowercase.
  iv.es.a.t$iV.DhmR.HB.S+iv.es.a.t$iV.DhmR.HB.Es+iv.es.a.t$V.DhmR.HB.E+iv.es.a.t$iV.DhmR.HB.A
            ^~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:4656:13: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.a.t$iV.DhmR.HB.S+iv.es.a.t$iV.DhmR.HB.Es+iv.es.a.t$V.DhmR.HB.E+iv.es.a.t$iV.DhmR.HB.A
            ^~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:4656:25: style: Put spaces around all infix operators.
  iv.es.a.t$iV.DhmR.HB.S+iv.es.a.t$iV.DhmR.HB.Es+iv.es.a.t$V.DhmR.HB.E+iv.es.a.t$iV.DhmR.HB.A
                       ~^~
NO COPY: R/BWI3_HR.R:4656:26: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.a.t$iV.DhmR.HB.S+iv.es.a.t$iV.DhmR.HB.Es+iv.es.a.t$V.DhmR.HB.E+iv.es.a.t$iV.DhmR.HB.A
                         ^~~~~~~~~
NO COPY: R/BWI3_HR.R:4656:36: style: Variable and function names should be all lowercase.
  iv.es.a.t$iV.DhmR.HB.S+iv.es.a.t$iV.DhmR.HB.Es+iv.es.a.t$V.DhmR.HB.E+iv.es.a.t$iV.DhmR.HB.A
                                   ^~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:4656:36: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.a.t$iV.DhmR.HB.S+iv.es.a.t$iV.DhmR.HB.Es+iv.es.a.t$V.DhmR.HB.E+iv.es.a.t$iV.DhmR.HB.A
                                   ^~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:4656:49: style: Put spaces around all infix operators.
  iv.es.a.t$iV.DhmR.HB.S+iv.es.a.t$iV.DhmR.HB.Es+iv.es.a.t$V.DhmR.HB.E+iv.es.a.t$iV.DhmR.HB.A
                                               ~^~
NO COPY: R/BWI3_HR.R:4656:50: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.a.t$iV.DhmR.HB.S+iv.es.a.t$iV.DhmR.HB.Es+iv.es.a.t$V.DhmR.HB.E+iv.es.a.t$iV.DhmR.HB.A
                                                 ^~~~~~~~~
NO COPY: R/BWI3_HR.R:4656:60: style: Variable and function names should be all lowercase.
  iv.es.a.t$iV.DhmR.HB.S+iv.es.a.t$iV.DhmR.HB.Es+iv.es.a.t$V.DhmR.HB.E+iv.es.a.t$iV.DhmR.HB.A
                                                           ^~~~~~~~~~~
NO COPY: R/BWI3_HR.R:4656:60: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.a.t$iV.DhmR.HB.S+iv.es.a.t$iV.DhmR.HB.Es+iv.es.a.t$V.DhmR.HB.E+iv.es.a.t$iV.DhmR.HB.A
                                                           ^~~~~~~~~~~
NO COPY: R/BWI3_HR.R:4656:71: style: Put spaces around all infix operators.
  iv.es.a.t$iV.DhmR.HB.S+iv.es.a.t$iV.DhmR.HB.Es+iv.es.a.t$V.DhmR.HB.E+iv.es.a.t$iV.DhmR.HB.A
                                                                     ~^~
NO COPY: R/BWI3_HR.R:4656:72: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.a.t$iV.DhmR.HB.S+iv.es.a.t$iV.DhmR.HB.Es+iv.es.a.t$V.DhmR.HB.E+iv.es.a.t$iV.DhmR.HB.A
                                                                       ^~~~~~~~~
NO COPY: R/BWI3_HR.R:4656:82: style: Variable and function names should be all lowercase.
  iv.es.a.t$iV.DhmR.HB.S+iv.es.a.t$iV.DhmR.HB.Es+iv.es.a.t$V.DhmR.HB.E+iv.es.a.t$iV.DhmR.HB.A
                                                                                 ^~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:4656:82: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.a.t$iV.DhmR.HB.S+iv.es.a.t$iV.DhmR.HB.Es+iv.es.a.t$V.DhmR.HB.E+iv.es.a.t$iV.DhmR.HB.A
                                                                                 ^~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:4657:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.a.t$iV.EoR <-
  ^~~~~~~~~
NO COPY: R/BWI3_HR.R:4657:13: style: Variable and function names should be all lowercase.
  iv.es.a.t$iV.EoR <-
            ^~~~~~
NO COPY: R/BWI3_HR.R:4658:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.a.t$iV.EoR.S+iv.es.a.t$iV.EoR.Es+iv.es.a.t$V.EoR.E+iv.es.a.t$iV.EoR.A
  ^~~~~~~~~
NO COPY: R/BWI3_HR.R:4658:13: style: Variable and function names should be all lowercase.
  iv.es.a.t$iV.EoR.S+iv.es.a.t$iV.EoR.Es+iv.es.a.t$V.EoR.E+iv.es.a.t$iV.EoR.A
            ^~~~~~~~
NO COPY: R/BWI3_HR.R:4658:13: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.a.t$iV.EoR.S+iv.es.a.t$iV.EoR.Es+iv.es.a.t$V.EoR.E+iv.es.a.t$iV.EoR.A
            ^~~~~~~~
NO COPY: R/BWI3_HR.R:4658:21: style: Put spaces around all infix operators.
  iv.es.a.t$iV.EoR.S+iv.es.a.t$iV.EoR.Es+iv.es.a.t$V.EoR.E+iv.es.a.t$iV.EoR.A
                   ~^~
NO COPY: R/BWI3_HR.R:4658:22: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.a.t$iV.EoR.S+iv.es.a.t$iV.EoR.Es+iv.es.a.t$V.EoR.E+iv.es.a.t$iV.EoR.A
                     ^~~~~~~~~
NO COPY: R/BWI3_HR.R:4658:32: style: Variable and function names should be all lowercase.
  iv.es.a.t$iV.EoR.S+iv.es.a.t$iV.EoR.Es+iv.es.a.t$V.EoR.E+iv.es.a.t$iV.EoR.A
                               ^~~~~~~~~
NO COPY: R/BWI3_HR.R:4658:32: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.a.t$iV.EoR.S+iv.es.a.t$iV.EoR.Es+iv.es.a.t$V.EoR.E+iv.es.a.t$iV.EoR.A
                               ^~~~~~~~~
NO COPY: R/BWI3_HR.R:4658:41: style: Put spaces around all infix operators.
  iv.es.a.t$iV.EoR.S+iv.es.a.t$iV.EoR.Es+iv.es.a.t$V.EoR.E+iv.es.a.t$iV.EoR.A
                                       ~^~
NO COPY: R/BWI3_HR.R:4658:42: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.a.t$iV.EoR.S+iv.es.a.t$iV.EoR.Es+iv.es.a.t$V.EoR.E+iv.es.a.t$iV.EoR.A
                                         ^~~~~~~~~
NO COPY: R/BWI3_HR.R:4658:52: style: Variable and function names should be all lowercase.
  iv.es.a.t$iV.EoR.S+iv.es.a.t$iV.EoR.Es+iv.es.a.t$V.EoR.E+iv.es.a.t$iV.EoR.A
                                                   ^~~~~~~
NO COPY: R/BWI3_HR.R:4658:52: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.a.t$iV.EoR.S+iv.es.a.t$iV.EoR.Es+iv.es.a.t$V.EoR.E+iv.es.a.t$iV.EoR.A
                                                   ^~~~~~~
NO COPY: R/BWI3_HR.R:4658:59: style: Put spaces around all infix operators.
  iv.es.a.t$iV.EoR.S+iv.es.a.t$iV.EoR.Es+iv.es.a.t$V.EoR.E+iv.es.a.t$iV.EoR.A
                                                         ~^~
NO COPY: R/BWI3_HR.R:4658:60: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.a.t$iV.EoR.S+iv.es.a.t$iV.EoR.Es+iv.es.a.t$V.EoR.E+iv.es.a.t$iV.EoR.A
                                                           ^~~~~~~~~
NO COPY: R/BWI3_HR.R:4658:70: style: Variable and function names should be all lowercase.
  iv.es.a.t$iV.EoR.S+iv.es.a.t$iV.EoR.Es+iv.es.a.t$V.EoR.E+iv.es.a.t$iV.EoR.A
                                                                     ^~~~~~~~
NO COPY: R/BWI3_HR.R:4658:70: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.a.t$iV.EoR.S+iv.es.a.t$iV.EoR.Es+iv.es.a.t$V.EoR.E+iv.es.a.t$iV.EoR.A
                                                                     ^~~~~~~~
NO COPY: R/BWI3_HR.R:4660:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.a.t$iB <-
  ^~~~~~~~~
NO COPY: R/BWI3_HR.R:4660:13: style: Variable and function names should be all lowercase.
  iv.es.a.t$iB <-
            ^~
NO COPY: R/BWI3_HR.R:4661:4: style: Words within variable and function names should be separated by '_' rather than '.'.
  (iv.es.a.t$iB.S + iv.es.a.t$iB.Es + iv.es.a.t$B.E  + iv.es.a.t$iB.A)/1000
   ^~~~~~~~~
NO COPY: R/BWI3_HR.R:4661:14: style: Variable and function names should be all lowercase.
  (iv.es.a.t$iB.S + iv.es.a.t$iB.Es + iv.es.a.t$B.E  + iv.es.a.t$iB.A)/1000
             ^~~~
NO COPY: R/BWI3_HR.R:4661:21: style: Words within variable and function names should be separated by '_' rather than '.'.
  (iv.es.a.t$iB.S + iv.es.a.t$iB.Es + iv.es.a.t$B.E  + iv.es.a.t$iB.A)/1000
                    ^~~~~~~~~
NO COPY: R/BWI3_HR.R:4661:31: style: Variable and function names should be all lowercase.
  (iv.es.a.t$iB.S + iv.es.a.t$iB.Es + iv.es.a.t$B.E  + iv.es.a.t$iB.A)/1000
                              ^~~~~
NO COPY: R/BWI3_HR.R:4661:39: style: Words within variable and function names should be separated by '_' rather than '.'.
  (iv.es.a.t$iB.S + iv.es.a.t$iB.Es + iv.es.a.t$B.E  + iv.es.a.t$iB.A)/1000
                                      ^~~~~~~~~
NO COPY: R/BWI3_HR.R:4661:56: style: Words within variable and function names should be separated by '_' rather than '.'.
  (iv.es.a.t$iB.S + iv.es.a.t$iB.Es + iv.es.a.t$B.E  + iv.es.a.t$iB.A)/1000
                                                       ^~~~~~~~~
NO COPY: R/BWI3_HR.R:4661:66: style: Variable and function names should be all lowercase.
  (iv.es.a.t$iB.S + iv.es.a.t$iB.Es + iv.es.a.t$B.E  + iv.es.a.t$iB.A)/1000
                                                                 ^~~~
NO COPY: R/BWI3_HR.R:4661:71: style: Put spaces around all infix operators.
  (iv.es.a.t$iB.S + iv.es.a.t$iB.Es + iv.es.a.t$B.E  + iv.es.a.t$iB.A)/1000
                                                                     ~^~
NO COPY: R/BWI3_HR.R:4662:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.a.t$B.A <- iv.es.a.t$B.A/1000
  ^~~~~~~~~
NO COPY: R/BWI3_HR.R:4662:20: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.a.t$B.A <- iv.es.a.t$B.A/1000
                   ^~~~~~~~~
NO COPY: R/BWI3_HR.R:4662:33: style: Put spaces around all infix operators.
  iv.es.a.t$B.A <- iv.es.a.t$B.A/1000
                               ~^~
NO COPY: R/BWI3_HR.R:4665:24: style: Commas should always have a space after.
  hbf <- length(ecken[,1]) #ohne REF!!!
                       ^
NO COPY: R/BWI3_HR.R:4666:14: style: Put spaces around all infix operators.
  lk.2 <- hbf/sum(baeume.folg$StFl2[baeume.folg$Pk!=8])*10000
            ~^~
NO COPY: R/BWI3_HR.R:4666:31: style: Variable and function names should be all lowercase.
  lk.2 <- hbf/sum(baeume.folg$StFl2[baeume.folg$Pk!=8])*10000
                              ^~~~~
NO COPY: R/BWI3_HR.R:4666:51: style: Put spaces around all infix operators.
  lk.2 <- hbf/sum(baeume.folg$StFl2[baeume.folg$Pk!=8])*10000
                                                 ~^~~
NO COPY: R/BWI3_HR.R:4666:56: style: Put spaces around all infix operators.
  lk.2 <- hbf/sum(baeume.folg$StFl2[baeume.folg$Pk!=8])*10000
                                                      ~^~
NO COPY: R/BWI3_HR.R:4667:14: style: Put spaces around all infix operators.
  lk.1 <- hbf/sum(baeume.vor$StFl1[baeume.vor$Pk!=8])*10000
            ~^~
NO COPY: R/BWI3_HR.R:4667:30: style: Variable and function names should be all lowercase.
  lk.1 <- hbf/sum(baeume.vor$StFl1[baeume.vor$Pk!=8])*10000
                             ^~~~~
NO COPY: R/BWI3_HR.R:4667:49: style: Put spaces around all infix operators.
  lk.1 <- hbf/sum(baeume.vor$StFl1[baeume.vor$Pk!=8])*10000
                                               ~^~~
NO COPY: R/BWI3_HR.R:4667:54: style: Put spaces around all infix operators.
  lk.1 <- hbf/sum(baeume.vor$StFl1[baeume.vor$Pk!=8])*10000
                                                    ~^~
NO COPY: R/BWI3_HR.R:4668:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.a.t$mBAF <- (iv.es.a.t$BAF1*lk.1+iv.es.a.t$BAF2*lk.2)/2
  ^~~~~~~~~
NO COPY: R/BWI3_HR.R:4668:13: style: Variable and function names should be all lowercase.
  iv.es.a.t$mBAF <- (iv.es.a.t$BAF1*lk.1+iv.es.a.t$BAF2*lk.2)/2
            ^~~~
NO COPY: R/BWI3_HR.R:4668:22: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.a.t$mBAF <- (iv.es.a.t$BAF1*lk.1+iv.es.a.t$BAF2*lk.2)/2
                     ^~~~~~~~~
NO COPY: R/BWI3_HR.R:4668:36: style: Put spaces around all infix operators.
  iv.es.a.t$mBAF <- (iv.es.a.t$BAF1*lk.1+iv.es.a.t$BAF2*lk.2)/2
                                  ~^~
NO COPY: R/BWI3_HR.R:4668:41: style: Put spaces around all infix operators.
  iv.es.a.t$mBAF <- (iv.es.a.t$BAF1*lk.1+iv.es.a.t$BAF2*lk.2)/2
                                       ~^~
NO COPY: R/BWI3_HR.R:4668:42: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.a.t$mBAF <- (iv.es.a.t$BAF1*lk.1+iv.es.a.t$BAF2*lk.2)/2
                                         ^~~~~~~~~
NO COPY: R/BWI3_HR.R:4668:56: style: Put spaces around all infix operators.
  iv.es.a.t$mBAF <- (iv.es.a.t$BAF1*lk.1+iv.es.a.t$BAF2*lk.2)/2
                                                      ~^~
NO COPY: R/BWI3_HR.R:4668:62: style: Put spaces around all infix operators.
  iv.es.a.t$mBAF <- (iv.es.a.t$BAF1*lk.1+iv.es.a.t$BAF2*lk.2)/2
                                                            ~^~
NO COPY: R/BWI3_HR.R:4669:1: style: lines should not be more than 80 characters.
  #Mitt. Baumartenfl\u00e4che OHNE L\u00fcckenkorrektur (Bezugsfl\u00e4che f\u00fcr Hauptbestand)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:4670:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.a.t$mBAF.oLK <- 
  ^~~~~~~~~
NO COPY: R/BWI3_HR.R:4670:13: style: Variable and function names should be all lowercase.
  iv.es.a.t$mBAF.oLK <- 
            ^~~~~~~~
NO COPY: R/BWI3_HR.R:4670:24: style: Trailing whitespace is superfluous.
  iv.es.a.t$mBAF.oLK <- 
                       ^
NO COPY: R/BWI3_HR.R:4671:10: style: Words within variable and function names should be separated by '_' rather than '.'.
        (iv.es.a.t$BAF1+iv.es.a.t$BAF2)/2
         ^~~~~~~~~
NO COPY: R/BWI3_HR.R:4671:24: style: Put spaces around all infix operators.
        (iv.es.a.t$BAF1+iv.es.a.t$BAF2)/2
                      ~^~
NO COPY: R/BWI3_HR.R:4671:25: style: Words within variable and function names should be separated by '_' rather than '.'.
        (iv.es.a.t$BAF1+iv.es.a.t$BAF2)/2
                        ^~~~~~~~~
NO COPY: R/BWI3_HR.R:4671:40: style: Put spaces around all infix operators.
        (iv.es.a.t$BAF1+iv.es.a.t$BAF2)/2
                                      ~^~
NO COPY: R/BWI3_HR.R:4672:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: R/BWI3_HR.R:4673:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: R/BWI3_HR.R:4674:10: style: Words within variable and function names should be separated by '_' rather than '.'.
  return(iv.es.a.t)
         ^~~~~~~~~
NO COPY: R/BWI3_HR.R:4714:55: style: Commas should always have a space after.
iVB.bilanz.bagr.akl.dkl.fun.2g <- function(baeume.vor,baeume.folg,ecken){
                                                      ^
NO COPY: R/BWI3_HR.R:4714:67: style: Commas should always have a space after.
iVB.bilanz.bagr.akl.dkl.fun.2g <- function(baeume.vor,baeume.folg,ecken){
                                                                  ^
NO COPY: R/BWI3_HR.R:4717:77: style: Trailing whitespace is superfluous.
  baeume.ba <- baeume.folg[TRUE, c("TNr", "ENr", "STP", "BNr", "Pk", "BHD1", 
                                                                            ^
NO COPY: R/BWI3_HR.R:4718:75: style: Trailing whitespace is superfluous.
                                   "BHD2", "bhd.pm", "BaGr", "akl", "dkl", 
                                                                          ^
NO COPY: R/BWI3_HR.R:4719:79: style: Trailing whitespace is superfluous.
                                   "VolV1", "VolV2", "VolE1", "VolE2", "oiB1", 
                                                                              ^
NO COPY: R/BWI3_HR.R:4724:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.t <- stats::aggregate((baeume.ba$VolV2-baeume.ba$VolV1)*baeume.ba$NHa2
  ^~~~~~~
NO COPY: R/BWI3_HR.R:4724:31: style: Place a space before left parenthesis, except in a function call.
  iv.es.t <- stats::aggregate((baeume.ba$VolV2-baeume.ba$VolV1)*baeume.ba$NHa2
                              ^
NO COPY: R/BWI3_HR.R:4724:42: style: Variable and function names should be all lowercase.
  iv.es.t <- stats::aggregate((baeume.ba$VolV2-baeume.ba$VolV1)*baeume.ba$NHa2
                                         ^~~~~
NO COPY: R/BWI3_HR.R:4724:47: style: Put spaces around all infix operators.
  iv.es.t <- stats::aggregate((baeume.ba$VolV2-baeume.ba$VolV1)*baeume.ba$NHa2
                                             ~^~
NO COPY: R/BWI3_HR.R:4724:58: style: Variable and function names should be all lowercase.
  iv.es.t <- stats::aggregate((baeume.ba$VolV2-baeume.ba$VolV1)*baeume.ba$NHa2
                                                         ^~~~~
NO COPY: R/BWI3_HR.R:4724:64: style: Put spaces around all infix operators.
  iv.es.t <- stats::aggregate((baeume.ba$VolV2-baeume.ba$VolV1)*baeume.ba$NHa2
                                                              ~^~
NO COPY: R/BWI3_HR.R:4725:11: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk ==1,1,0),
          ^~
NO COPY: R/BWI3_HR.R:4725:32: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk ==1,1,0),
                               ^~~
NO COPY: R/BWI3_HR.R:4725:36: style: Commas should always have a space after.
          *ifelse(baeume.ba$Pk ==1,1,0),
                                   ^
NO COPY: R/BWI3_HR.R:4725:38: style: Commas should always have a space after.
          *ifelse(baeume.ba$Pk ==1,1,0),
                                     ^
NO COPY: R/BWI3_HR.R:4726:13: style: Put spaces around all infix operators.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)
           ~^~
NO COPY: R/BWI3_HR.R:4726:33: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)
                                ^
NO COPY: R/BWI3_HR.R:4726:43: style: Variable and function names should be all lowercase.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)
                                          ^~~~
NO COPY: R/BWI3_HR.R:4726:48: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)
                                               ^
NO COPY: R/BWI3_HR.R:4726:62: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)
                                                             ^
NO COPY: R/BWI3_HR.R:4726:77: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)
                                                                            ^
NO COPY: R/BWI3_HR.R:4728:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.t <- cbind(iv.es.t,
  ^~~~~~~
NO COPY: R/BWI3_HR.R:4728:20: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.t <- cbind(iv.es.t,
                   ^~~~~~~
NO COPY: R/BWI3_HR.R:4729:28: style: Place a space before left parenthesis, except in a function call.
          stats::aggregate((baeume.ba$VolV2-baeume.ba$VolV1)*baeume.ba$NHa2
                           ^
NO COPY: R/BWI3_HR.R:4729:39: style: Variable and function names should be all lowercase.
          stats::aggregate((baeume.ba$VolV2-baeume.ba$VolV1)*baeume.ba$NHa2
                                      ^~~~~
NO COPY: R/BWI3_HR.R:4729:44: style: Put spaces around all infix operators.
          stats::aggregate((baeume.ba$VolV2-baeume.ba$VolV1)*baeume.ba$NHa2
                                          ~^~
NO COPY: R/BWI3_HR.R:4729:55: style: Variable and function names should be all lowercase.
          stats::aggregate((baeume.ba$VolV2-baeume.ba$VolV1)*baeume.ba$NHa2
                                                      ^~~~~
NO COPY: R/BWI3_HR.R:4729:61: style: Put spaces around all infix operators.
          stats::aggregate((baeume.ba$VolV2-baeume.ba$VolV1)*baeume.ba$NHa2
                                                           ~^~
NO COPY: R/BWI3_HR.R:4730:11: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk ==1,1,0)* ifelse(baeume.ba$StFl2>0,1,0),
          ^~
NO COPY: R/BWI3_HR.R:4730:32: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk ==1,1,0)* ifelse(baeume.ba$StFl2>0,1,0),
                               ^~~
NO COPY: R/BWI3_HR.R:4730:36: style: Commas should always have a space after.
          *ifelse(baeume.ba$Pk ==1,1,0)* ifelse(baeume.ba$StFl2>0,1,0),
                                   ^
NO COPY: R/BWI3_HR.R:4730:38: style: Commas should always have a space after.
          *ifelse(baeume.ba$Pk ==1,1,0)* ifelse(baeume.ba$StFl2>0,1,0),
                                     ^
NO COPY: R/BWI3_HR.R:4730:40: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk ==1,1,0)* ifelse(baeume.ba$StFl2>0,1,0),
                                      ~^
NO COPY: R/BWI3_HR.R:4730:59: style: Variable and function names should be all lowercase.
          *ifelse(baeume.ba$Pk ==1,1,0)* ifelse(baeume.ba$StFl2>0,1,0),
                                                          ^~~~~
NO COPY: R/BWI3_HR.R:4730:64: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk ==1,1,0)* ifelse(baeume.ba$StFl2>0,1,0),
                                                              ~^~
NO COPY: R/BWI3_HR.R:4730:67: style: Commas should always have a space after.
          *ifelse(baeume.ba$Pk ==1,1,0)* ifelse(baeume.ba$StFl2>0,1,0),
                                                                  ^
NO COPY: R/BWI3_HR.R:4730:69: style: Commas should always have a space after.
          *ifelse(baeume.ba$Pk ==1,1,0)* ifelse(baeume.ba$StFl2>0,1,0),
                                                                    ^
NO COPY: R/BWI3_HR.R:4731:1: style: lines should not be more than 80 characters.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:4731:13: style: Put spaces around all infix operators.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
           ~^~
NO COPY: R/BWI3_HR.R:4731:33: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                ^
NO COPY: R/BWI3_HR.R:4731:43: style: Variable and function names should be all lowercase.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                          ^~~~
NO COPY: R/BWI3_HR.R:4731:48: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                               ^
NO COPY: R/BWI3_HR.R:4731:62: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                                             ^
NO COPY: R/BWI3_HR.R:4731:77: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                                                            ^
NO COPY: R/BWI3_HR.R:4733:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.t <- cbind(iv.es.t,
  ^~~~~~~
NO COPY: R/BWI3_HR.R:4733:20: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.t <- cbind(iv.es.t,
                   ^~~~~~~
NO COPY: R/BWI3_HR.R:4734:28: style: Place a space before left parenthesis, except in a function call.
          stats::aggregate((baeume.ba$VolE2-baeume.ba$VolE1)*baeume.ba$NHa2
                           ^
NO COPY: R/BWI3_HR.R:4734:39: style: Variable and function names should be all lowercase.
          stats::aggregate((baeume.ba$VolE2-baeume.ba$VolE1)*baeume.ba$NHa2
                                      ^~~~~
NO COPY: R/BWI3_HR.R:4734:44: style: Put spaces around all infix operators.
          stats::aggregate((baeume.ba$VolE2-baeume.ba$VolE1)*baeume.ba$NHa2
                                          ~^~
NO COPY: R/BWI3_HR.R:4734:55: style: Variable and function names should be all lowercase.
          stats::aggregate((baeume.ba$VolE2-baeume.ba$VolE1)*baeume.ba$NHa2
                                                      ^~~~~
NO COPY: R/BWI3_HR.R:4734:61: style: Put spaces around all infix operators.
          stats::aggregate((baeume.ba$VolE2-baeume.ba$VolE1)*baeume.ba$NHa2
                                                           ~^~
NO COPY: R/BWI3_HR.R:4735:11: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk ==1,1,0),
          ^~
NO COPY: R/BWI3_HR.R:4735:32: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk ==1,1,0),
                               ^~~
NO COPY: R/BWI3_HR.R:4735:36: style: Commas should always have a space after.
          *ifelse(baeume.ba$Pk ==1,1,0),
                                   ^
NO COPY: R/BWI3_HR.R:4735:38: style: Commas should always have a space after.
          *ifelse(baeume.ba$Pk ==1,1,0),
                                     ^
NO COPY: R/BWI3_HR.R:4736:1: style: lines should not be more than 80 characters.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:4736:13: style: Put spaces around all infix operators.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
           ~^~
NO COPY: R/BWI3_HR.R:4736:33: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                ^
NO COPY: R/BWI3_HR.R:4736:43: style: Variable and function names should be all lowercase.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                          ^~~~
NO COPY: R/BWI3_HR.R:4736:48: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                               ^
NO COPY: R/BWI3_HR.R:4736:62: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                                             ^
NO COPY: R/BWI3_HR.R:4736:77: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                                                            ^
NO COPY: R/BWI3_HR.R:4738:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.t <- cbind(iv.es.t,
  ^~~~~~~
NO COPY: R/BWI3_HR.R:4738:20: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.t <- cbind(iv.es.t,
                   ^~~~~~~
NO COPY: R/BWI3_HR.R:4739:28: style: Place a space before left parenthesis, except in a function call.
          stats::aggregate((baeume.ba$oiB2-baeume.ba$oiB1)*baeume.ba$NHa2
                           ^
NO COPY: R/BWI3_HR.R:4739:39: style: Variable and function names should be all lowercase.
          stats::aggregate((baeume.ba$oiB2-baeume.ba$oiB1)*baeume.ba$NHa2
                                      ^~~~
NO COPY: R/BWI3_HR.R:4739:43: style: Put spaces around all infix operators.
          stats::aggregate((baeume.ba$oiB2-baeume.ba$oiB1)*baeume.ba$NHa2
                                         ~^~
NO COPY: R/BWI3_HR.R:4739:54: style: Variable and function names should be all lowercase.
          stats::aggregate((baeume.ba$oiB2-baeume.ba$oiB1)*baeume.ba$NHa2
                                                     ^~~~
NO COPY: R/BWI3_HR.R:4739:59: style: Put spaces around all infix operators.
          stats::aggregate((baeume.ba$oiB2-baeume.ba$oiB1)*baeume.ba$NHa2
                                                         ~^~
NO COPY: R/BWI3_HR.R:4740:11: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk ==1,1,0),
          ^~
NO COPY: R/BWI3_HR.R:4740:32: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk ==1,1,0),
                               ^~~
NO COPY: R/BWI3_HR.R:4740:36: style: Commas should always have a space after.
          *ifelse(baeume.ba$Pk ==1,1,0),
                                   ^
NO COPY: R/BWI3_HR.R:4740:38: style: Commas should always have a space after.
          *ifelse(baeume.ba$Pk ==1,1,0),
                                     ^
NO COPY: R/BWI3_HR.R:4741:1: style: lines should not be more than 80 characters.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:4741:13: style: Put spaces around all infix operators.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
           ~^~
NO COPY: R/BWI3_HR.R:4741:33: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                ^
NO COPY: R/BWI3_HR.R:4741:43: style: Variable and function names should be all lowercase.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                          ^~~~
NO COPY: R/BWI3_HR.R:4741:48: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                               ^
NO COPY: R/BWI3_HR.R:4741:62: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                                             ^
NO COPY: R/BWI3_HR.R:4741:77: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                                                            ^
NO COPY: R/BWI3_HR.R:4744:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.t <- cbind(iv.es.t,
  ^~~~~~~
NO COPY: R/BWI3_HR.R:4744:20: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.t <- cbind(iv.es.t,
                   ^~~~~~~
NO COPY: R/BWI3_HR.R:4745:1: style: lines should not be more than 80 characters.
          stats::aggregate((baeume.ba$BHD2^2-baeume.ba$BHD1^2)*pi/40000*baeume.ba$NHa2
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:4745:28: style: Place a space before left parenthesis, except in a function call.
          stats::aggregate((baeume.ba$BHD2^2-baeume.ba$BHD1^2)*pi/40000*baeume.ba$NHa2
                           ^
NO COPY: R/BWI3_HR.R:4745:43: style: Put spaces around all infix operators.
          stats::aggregate((baeume.ba$BHD2^2-baeume.ba$BHD1^2)*pi/40000*baeume.ba$NHa2
                                         ~^~
NO COPY: R/BWI3_HR.R:4745:45: style: Put spaces around all infix operators.
          stats::aggregate((baeume.ba$BHD2^2-baeume.ba$BHD1^2)*pi/40000*baeume.ba$NHa2
                                           ~^~
NO COPY: R/BWI3_HR.R:4745:60: style: Put spaces around all infix operators.
          stats::aggregate((baeume.ba$BHD2^2-baeume.ba$BHD1^2)*pi/40000*baeume.ba$NHa2
                                                          ~^~
NO COPY: R/BWI3_HR.R:4745:63: style: Put spaces around all infix operators.
          stats::aggregate((baeume.ba$BHD2^2-baeume.ba$BHD1^2)*pi/40000*baeume.ba$NHa2
                                                             ~^~
NO COPY: R/BWI3_HR.R:4745:66: style: Put spaces around all infix operators.
          stats::aggregate((baeume.ba$BHD2^2-baeume.ba$BHD1^2)*pi/40000*baeume.ba$NHa2
                                                                ~^~
NO COPY: R/BWI3_HR.R:4745:72: style: Put spaces around all infix operators.
          stats::aggregate((baeume.ba$BHD2^2-baeume.ba$BHD1^2)*pi/40000*baeume.ba$NHa2
                                                                      ~^~
NO COPY: R/BWI3_HR.R:4746:11: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk ==1,1,0),
          ^~
NO COPY: R/BWI3_HR.R:4746:32: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk ==1,1,0),
                               ^~~
NO COPY: R/BWI3_HR.R:4746:36: style: Commas should always have a space after.
          *ifelse(baeume.ba$Pk ==1,1,0),
                                   ^
NO COPY: R/BWI3_HR.R:4746:38: style: Commas should always have a space after.
          *ifelse(baeume.ba$Pk ==1,1,0),
                                     ^
NO COPY: R/BWI3_HR.R:4747:1: style: lines should not be more than 80 characters.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:4747:13: style: Put spaces around all infix operators.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
           ~^~
NO COPY: R/BWI3_HR.R:4747:33: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                ^
NO COPY: R/BWI3_HR.R:4747:43: style: Variable and function names should be all lowercase.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                          ^~~~
NO COPY: R/BWI3_HR.R:4747:48: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                               ^
NO COPY: R/BWI3_HR.R:4747:62: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                                             ^
NO COPY: R/BWI3_HR.R:4747:77: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                                                            ^
NO COPY: R/BWI3_HR.R:4751:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.t <- cbind(iv.es.t,
  ^~~~~~~
NO COPY: R/BWI3_HR.R:4751:20: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.t <- cbind(iv.es.t,
                   ^~~~~~~
NO COPY: R/BWI3_HR.R:4752:28: style: Place a space before left parenthesis, except in a function call.
          stats::aggregate((baeume.ba$VolV2-baeume.ba$VolV1)*baeume.ba$NHa2
                           ^
NO COPY: R/BWI3_HR.R:4752:39: style: Variable and function names should be all lowercase.
          stats::aggregate((baeume.ba$VolV2-baeume.ba$VolV1)*baeume.ba$NHa2
                                      ^~~~~
NO COPY: R/BWI3_HR.R:4752:44: style: Put spaces around all infix operators.
          stats::aggregate((baeume.ba$VolV2-baeume.ba$VolV1)*baeume.ba$NHa2
                                          ~^~
NO COPY: R/BWI3_HR.R:4752:55: style: Variable and function names should be all lowercase.
          stats::aggregate((baeume.ba$VolV2-baeume.ba$VolV1)*baeume.ba$NHa2
                                                      ^~~~~
NO COPY: R/BWI3_HR.R:4752:61: style: Put spaces around all infix operators.
          stats::aggregate((baeume.ba$VolV2-baeume.ba$VolV1)*baeume.ba$NHa2
                                                           ~^~
NO COPY: R/BWI3_HR.R:4753:11: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk==0&baeume.ba$BHD1>=7,1,0),
          ^~
NO COPY: R/BWI3_HR.R:4753:31: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk==0&baeume.ba$BHD1>=7,1,0),
                             ~^~~
NO COPY: R/BWI3_HR.R:4753:34: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk==0&baeume.ba$BHD1>=7,1,0),
                                ~^~
NO COPY: R/BWI3_HR.R:4753:49: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk==0&baeume.ba$BHD1>=7,1,0),
                                               ~^~~
NO COPY: R/BWI3_HR.R:4753:53: style: Commas should always have a space after.
          *ifelse(baeume.ba$Pk==0&baeume.ba$BHD1>=7,1,0),
                                                    ^
NO COPY: R/BWI3_HR.R:4753:55: style: Commas should always have a space after.
          *ifelse(baeume.ba$Pk==0&baeume.ba$BHD1>=7,1,0),
                                                      ^
NO COPY: R/BWI3_HR.R:4754:1: style: lines should not be more than 80 characters.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:4754:13: style: Put spaces around all infix operators.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
           ~^~
NO COPY: R/BWI3_HR.R:4754:33: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                ^
NO COPY: R/BWI3_HR.R:4754:43: style: Variable and function names should be all lowercase.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                          ^~~~
NO COPY: R/BWI3_HR.R:4754:48: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                               ^
NO COPY: R/BWI3_HR.R:4754:62: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                                             ^
NO COPY: R/BWI3_HR.R:4754:77: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                                                            ^
NO COPY: R/BWI3_HR.R:4756:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.t <- cbind(iv.es.t,
  ^~~~~~~
NO COPY: R/BWI3_HR.R:4756:20: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.t <- cbind(iv.es.t,
                   ^~~~~~~
NO COPY: R/BWI3_HR.R:4757:28: style: Place a space before left parenthesis, except in a function call.
          stats::aggregate((baeume.ba$VolV2-baeume.ba$VolV1)*baeume.ba$NHa2
                           ^
NO COPY: R/BWI3_HR.R:4757:39: style: Variable and function names should be all lowercase.
          stats::aggregate((baeume.ba$VolV2-baeume.ba$VolV1)*baeume.ba$NHa2
                                      ^~~~~
NO COPY: R/BWI3_HR.R:4757:44: style: Put spaces around all infix operators.
          stats::aggregate((baeume.ba$VolV2-baeume.ba$VolV1)*baeume.ba$NHa2
                                          ~^~
NO COPY: R/BWI3_HR.R:4757:55: style: Variable and function names should be all lowercase.
          stats::aggregate((baeume.ba$VolV2-baeume.ba$VolV1)*baeume.ba$NHa2
                                                      ^~~~~
NO COPY: R/BWI3_HR.R:4757:61: style: Put spaces around all infix operators.
          stats::aggregate((baeume.ba$VolV2-baeume.ba$VolV1)*baeume.ba$NHa2
                                                           ~^~
NO COPY: R/BWI3_HR.R:4758:1: style: lines should not be more than 80 characters.
          *ifelse(baeume.ba$Pk==0&baeume.ba$BHD1>=7,1,0)*ifelse(baeume.ba$StFl2>0,1,0),
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:4758:11: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk==0&baeume.ba$BHD1>=7,1,0)*ifelse(baeume.ba$StFl2>0,1,0),
          ^~
NO COPY: R/BWI3_HR.R:4758:31: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk==0&baeume.ba$BHD1>=7,1,0)*ifelse(baeume.ba$StFl2>0,1,0),
                             ~^~~
NO COPY: R/BWI3_HR.R:4758:34: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk==0&baeume.ba$BHD1>=7,1,0)*ifelse(baeume.ba$StFl2>0,1,0),
                                ~^~
NO COPY: R/BWI3_HR.R:4758:49: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk==0&baeume.ba$BHD1>=7,1,0)*ifelse(baeume.ba$StFl2>0,1,0),
                                               ~^~~
NO COPY: R/BWI3_HR.R:4758:53: style: Commas should always have a space after.
          *ifelse(baeume.ba$Pk==0&baeume.ba$BHD1>=7,1,0)*ifelse(baeume.ba$StFl2>0,1,0),
                                                    ^
NO COPY: R/BWI3_HR.R:4758:55: style: Commas should always have a space after.
          *ifelse(baeume.ba$Pk==0&baeume.ba$BHD1>=7,1,0)*ifelse(baeume.ba$StFl2>0,1,0),
                                                      ^
NO COPY: R/BWI3_HR.R:4758:57: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk==0&baeume.ba$BHD1>=7,1,0)*ifelse(baeume.ba$StFl2>0,1,0),
                                                       ~^~
NO COPY: R/BWI3_HR.R:4758:75: style: Variable and function names should be all lowercase.
          *ifelse(baeume.ba$Pk==0&baeume.ba$BHD1>=7,1,0)*ifelse(baeume.ba$StFl2>0,1,0),
                                                                          ^~~~~
NO COPY: R/BWI3_HR.R:4758:80: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk==0&baeume.ba$BHD1>=7,1,0)*ifelse(baeume.ba$StFl2>0,1,0),
                                                                              ~^~
NO COPY: R/BWI3_HR.R:4758:83: style: Commas should always have a space after.
          *ifelse(baeume.ba$Pk==0&baeume.ba$BHD1>=7,1,0)*ifelse(baeume.ba$StFl2>0,1,0),
                                                                                  ^
NO COPY: R/BWI3_HR.R:4758:85: style: Commas should always have a space after.
          *ifelse(baeume.ba$Pk==0&baeume.ba$BHD1>=7,1,0)*ifelse(baeume.ba$StFl2>0,1,0),
                                                                                    ^
NO COPY: R/BWI3_HR.R:4759:1: style: lines should not be more than 80 characters.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:4759:13: style: Put spaces around all infix operators.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
           ~^~
NO COPY: R/BWI3_HR.R:4759:33: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                ^
NO COPY: R/BWI3_HR.R:4759:43: style: Variable and function names should be all lowercase.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                          ^~~~
NO COPY: R/BWI3_HR.R:4759:48: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                               ^
NO COPY: R/BWI3_HR.R:4759:62: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                                             ^
NO COPY: R/BWI3_HR.R:4759:77: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                                                            ^
NO COPY: R/BWI3_HR.R:4761:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.t <- cbind(iv.es.t,
  ^~~~~~~
NO COPY: R/BWI3_HR.R:4761:20: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.t <- cbind(iv.es.t,
                   ^~~~~~~
NO COPY: R/BWI3_HR.R:4762:28: style: Place a space before left parenthesis, except in a function call.
          stats::aggregate((baeume.ba$VolE2-baeume.ba$VolE1)*baeume.ba$NHa2
                           ^
NO COPY: R/BWI3_HR.R:4762:39: style: Variable and function names should be all lowercase.
          stats::aggregate((baeume.ba$VolE2-baeume.ba$VolE1)*baeume.ba$NHa2
                                      ^~~~~
NO COPY: R/BWI3_HR.R:4762:44: style: Put spaces around all infix operators.
          stats::aggregate((baeume.ba$VolE2-baeume.ba$VolE1)*baeume.ba$NHa2
                                          ~^~
NO COPY: R/BWI3_HR.R:4762:55: style: Variable and function names should be all lowercase.
          stats::aggregate((baeume.ba$VolE2-baeume.ba$VolE1)*baeume.ba$NHa2
                                                      ^~~~~
NO COPY: R/BWI3_HR.R:4762:61: style: Put spaces around all infix operators.
          stats::aggregate((baeume.ba$VolE2-baeume.ba$VolE1)*baeume.ba$NHa2
                                                           ~^~
NO COPY: R/BWI3_HR.R:4763:11: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk==0&baeume.ba$BHD1>=7,1,0),
          ^~
NO COPY: R/BWI3_HR.R:4763:31: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk==0&baeume.ba$BHD1>=7,1,0),
                             ~^~~
NO COPY: R/BWI3_HR.R:4763:34: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk==0&baeume.ba$BHD1>=7,1,0),
                                ~^~
NO COPY: R/BWI3_HR.R:4763:49: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk==0&baeume.ba$BHD1>=7,1,0),
                                               ~^~~
NO COPY: R/BWI3_HR.R:4763:53: style: Commas should always have a space after.
          *ifelse(baeume.ba$Pk==0&baeume.ba$BHD1>=7,1,0),
                                                    ^
NO COPY: R/BWI3_HR.R:4763:55: style: Commas should always have a space after.
          *ifelse(baeume.ba$Pk==0&baeume.ba$BHD1>=7,1,0),
                                                      ^
NO COPY: R/BWI3_HR.R:4764:1: style: lines should not be more than 80 characters.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:4764:13: style: Put spaces around all infix operators.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
           ~^~
NO COPY: R/BWI3_HR.R:4764:33: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                ^
NO COPY: R/BWI3_HR.R:4764:43: style: Variable and function names should be all lowercase.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                          ^~~~
NO COPY: R/BWI3_HR.R:4764:48: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                               ^
NO COPY: R/BWI3_HR.R:4764:62: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                                             ^
NO COPY: R/BWI3_HR.R:4764:77: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                                                            ^
NO COPY: R/BWI3_HR.R:4766:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.t <- cbind(iv.es.t,
  ^~~~~~~
NO COPY: R/BWI3_HR.R:4766:20: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.t <- cbind(iv.es.t,
                   ^~~~~~~
NO COPY: R/BWI3_HR.R:4767:28: style: Place a space before left parenthesis, except in a function call.
          stats::aggregate((baeume.ba$oiB2-baeume.ba$oiB1)*baeume.ba$NHa2
                           ^
NO COPY: R/BWI3_HR.R:4767:39: style: Variable and function names should be all lowercase.
          stats::aggregate((baeume.ba$oiB2-baeume.ba$oiB1)*baeume.ba$NHa2
                                      ^~~~
NO COPY: R/BWI3_HR.R:4767:43: style: Put spaces around all infix operators.
          stats::aggregate((baeume.ba$oiB2-baeume.ba$oiB1)*baeume.ba$NHa2
                                         ~^~
NO COPY: R/BWI3_HR.R:4767:54: style: Variable and function names should be all lowercase.
          stats::aggregate((baeume.ba$oiB2-baeume.ba$oiB1)*baeume.ba$NHa2
                                                     ^~~~
NO COPY: R/BWI3_HR.R:4767:59: style: Put spaces around all infix operators.
          stats::aggregate((baeume.ba$oiB2-baeume.ba$oiB1)*baeume.ba$NHa2
                                                         ~^~
NO COPY: R/BWI3_HR.R:4768:11: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk==0&baeume.ba$BHD1>=7,1,0),
          ^~
NO COPY: R/BWI3_HR.R:4768:31: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk==0&baeume.ba$BHD1>=7,1,0),
                             ~^~~
NO COPY: R/BWI3_HR.R:4768:34: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk==0&baeume.ba$BHD1>=7,1,0),
                                ~^~
NO COPY: R/BWI3_HR.R:4768:49: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk==0&baeume.ba$BHD1>=7,1,0),
                                               ~^~~
NO COPY: R/BWI3_HR.R:4768:53: style: Commas should always have a space after.
          *ifelse(baeume.ba$Pk==0&baeume.ba$BHD1>=7,1,0),
                                                    ^
NO COPY: R/BWI3_HR.R:4768:55: style: Commas should always have a space after.
          *ifelse(baeume.ba$Pk==0&baeume.ba$BHD1>=7,1,0),
                                                      ^
NO COPY: R/BWI3_HR.R:4769:1: style: lines should not be more than 80 characters.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:4769:13: style: Put spaces around all infix operators.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
           ~^~
NO COPY: R/BWI3_HR.R:4769:33: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                ^
NO COPY: R/BWI3_HR.R:4769:43: style: Variable and function names should be all lowercase.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                          ^~~~
NO COPY: R/BWI3_HR.R:4769:48: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                               ^
NO COPY: R/BWI3_HR.R:4769:62: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                                             ^
NO COPY: R/BWI3_HR.R:4769:77: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                                                            ^
NO COPY: R/BWI3_HR.R:4772:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.t <- cbind(iv.es.t,
  ^~~~~~~
NO COPY: R/BWI3_HR.R:4772:20: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.t <- cbind(iv.es.t,
                   ^~~~~~~
NO COPY: R/BWI3_HR.R:4773:1: style: lines should not be more than 80 characters.
          stats::aggregate((baeume.ba$BHD2^2-baeume.ba$BHD1^2)*pi/40000*baeume.ba$NHa2
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:4773:28: style: Place a space before left parenthesis, except in a function call.
          stats::aggregate((baeume.ba$BHD2^2-baeume.ba$BHD1^2)*pi/40000*baeume.ba$NHa2
                           ^
NO COPY: R/BWI3_HR.R:4773:43: style: Put spaces around all infix operators.
          stats::aggregate((baeume.ba$BHD2^2-baeume.ba$BHD1^2)*pi/40000*baeume.ba$NHa2
                                         ~^~
NO COPY: R/BWI3_HR.R:4773:45: style: Put spaces around all infix operators.
          stats::aggregate((baeume.ba$BHD2^2-baeume.ba$BHD1^2)*pi/40000*baeume.ba$NHa2
                                           ~^~
NO COPY: R/BWI3_HR.R:4773:60: style: Put spaces around all infix operators.
          stats::aggregate((baeume.ba$BHD2^2-baeume.ba$BHD1^2)*pi/40000*baeume.ba$NHa2
                                                          ~^~
NO COPY: R/BWI3_HR.R:4773:63: style: Put spaces around all infix operators.
          stats::aggregate((baeume.ba$BHD2^2-baeume.ba$BHD1^2)*pi/40000*baeume.ba$NHa2
                                                             ~^~
NO COPY: R/BWI3_HR.R:4773:66: style: Put spaces around all infix operators.
          stats::aggregate((baeume.ba$BHD2^2-baeume.ba$BHD1^2)*pi/40000*baeume.ba$NHa2
                                                                ~^~
NO COPY: R/BWI3_HR.R:4773:72: style: Put spaces around all infix operators.
          stats::aggregate((baeume.ba$BHD2^2-baeume.ba$BHD1^2)*pi/40000*baeume.ba$NHa2
                                                                      ~^~
NO COPY: R/BWI3_HR.R:4774:11: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk==0&baeume.ba$BHD1>=7,1,0),
          ^~
NO COPY: R/BWI3_HR.R:4774:31: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk==0&baeume.ba$BHD1>=7,1,0),
                             ~^~~
NO COPY: R/BWI3_HR.R:4774:34: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk==0&baeume.ba$BHD1>=7,1,0),
                                ~^~
NO COPY: R/BWI3_HR.R:4774:49: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk==0&baeume.ba$BHD1>=7,1,0),
                                               ~^~~
NO COPY: R/BWI3_HR.R:4774:53: style: Commas should always have a space after.
          *ifelse(baeume.ba$Pk==0&baeume.ba$BHD1>=7,1,0),
                                                    ^
NO COPY: R/BWI3_HR.R:4774:55: style: Commas should always have a space after.
          *ifelse(baeume.ba$Pk==0&baeume.ba$BHD1>=7,1,0),
                                                      ^
NO COPY: R/BWI3_HR.R:4775:1: style: lines should not be more than 80 characters.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:4775:13: style: Put spaces around all infix operators.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
           ~^~
NO COPY: R/BWI3_HR.R:4775:33: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                ^
NO COPY: R/BWI3_HR.R:4775:43: style: Variable and function names should be all lowercase.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                          ^~~~
NO COPY: R/BWI3_HR.R:4775:48: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                               ^
NO COPY: R/BWI3_HR.R:4775:62: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                                             ^
NO COPY: R/BWI3_HR.R:4775:77: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                                                            ^
NO COPY: R/BWI3_HR.R:4777:37: style: Trailing whitespace is superfluous.
  #(1.3) Ew-Baeume (echter Einwuchs)   
                                    ^~~
NO COPY: R/BWI3_HR.R:4778:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: R/BWI3_HR.R:4780:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.t <- cbind(iv.es.t,
  ^~~~~~~
NO COPY: R/BWI3_HR.R:4780:20: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.t <- cbind(iv.es.t,
                   ^~~~~~~
NO COPY: R/BWI3_HR.R:4781:38: style: Variable and function names should be all lowercase.
          stats::aggregate(baeume.ba$VolV2*baeume.ba$NHa2
                                     ^~~~~
NO COPY: R/BWI3_HR.R:4781:43: style: Put spaces around all infix operators.
          stats::aggregate(baeume.ba$VolV2*baeume.ba$NHa2
                                         ~^~
NO COPY: R/BWI3_HR.R:4782:11: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk==0 & baeume.ba$BHD1<7 & baeume.ba$BHD2 >=7,1,0),
          ^~
NO COPY: R/BWI3_HR.R:4782:31: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk==0 & baeume.ba$BHD1<7 & baeume.ba$BHD2 >=7,1,0),
                             ~^~~
NO COPY: R/BWI3_HR.R:4782:51: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk==0 & baeume.ba$BHD1<7 & baeume.ba$BHD2 >=7,1,0),
                                                 ~^~
NO COPY: R/BWI3_HR.R:4782:71: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk==0 & baeume.ba$BHD1<7 & baeume.ba$BHD2 >=7,1,0),
                                                                      ^~~
NO COPY: R/BWI3_HR.R:4782:75: style: Commas should always have a space after.
          *ifelse(baeume.ba$Pk==0 & baeume.ba$BHD1<7 & baeume.ba$BHD2 >=7,1,0),
                                                                          ^
NO COPY: R/BWI3_HR.R:4782:77: style: Commas should always have a space after.
          *ifelse(baeume.ba$Pk==0 & baeume.ba$BHD1<7 & baeume.ba$BHD2 >=7,1,0),
                                                                            ^
NO COPY: R/BWI3_HR.R:4783:1: style: lines should not be more than 80 characters.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:4783:13: style: Put spaces around all infix operators.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
           ~^~
NO COPY: R/BWI3_HR.R:4783:33: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                ^
NO COPY: R/BWI3_HR.R:4783:43: style: Variable and function names should be all lowercase.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                          ^~~~
NO COPY: R/BWI3_HR.R:4783:48: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                               ^
NO COPY: R/BWI3_HR.R:4783:62: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                                             ^
NO COPY: R/BWI3_HR.R:4783:77: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                                                            ^
NO COPY: R/BWI3_HR.R:4785:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.t <- cbind(iv.es.t,
  ^~~~~~~
NO COPY: R/BWI3_HR.R:4785:20: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.t <- cbind(iv.es.t,
                   ^~~~~~~
NO COPY: R/BWI3_HR.R:4786:38: style: Variable and function names should be all lowercase.
          stats::aggregate(baeume.ba$VolV2*baeume.ba$NHa2
                                     ^~~~~
NO COPY: R/BWI3_HR.R:4786:43: style: Put spaces around all infix operators.
          stats::aggregate(baeume.ba$VolV2*baeume.ba$NHa2
                                         ~^~
NO COPY: R/BWI3_HR.R:4787:11: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk==0 & baeume.ba$BHD1<7 & baeume.ba$BHD2 >=7,1,0)
          ^~
NO COPY: R/BWI3_HR.R:4787:31: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk==0 & baeume.ba$BHD1<7 & baeume.ba$BHD2 >=7,1,0)
                             ~^~~
NO COPY: R/BWI3_HR.R:4787:51: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk==0 & baeume.ba$BHD1<7 & baeume.ba$BHD2 >=7,1,0)
                                                 ~^~
NO COPY: R/BWI3_HR.R:4787:71: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk==0 & baeume.ba$BHD1<7 & baeume.ba$BHD2 >=7,1,0)
                                                                      ^~~
NO COPY: R/BWI3_HR.R:4787:75: style: Commas should always have a space after.
          *ifelse(baeume.ba$Pk==0 & baeume.ba$BHD1<7 & baeume.ba$BHD2 >=7,1,0)
                                                                          ^
NO COPY: R/BWI3_HR.R:4787:77: style: Commas should always have a space after.
          *ifelse(baeume.ba$Pk==0 & baeume.ba$BHD1<7 & baeume.ba$BHD2 >=7,1,0)
                                                                            ^
NO COPY: R/BWI3_HR.R:4788:11: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$StFl2>0,1,0),
          ^~
NO COPY: R/BWI3_HR.R:4788:29: style: Variable and function names should be all lowercase.
          *ifelse(baeume.ba$StFl2>0,1,0),
                            ^~~~~
NO COPY: R/BWI3_HR.R:4788:34: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$StFl2>0,1,0),
                                ~^~
NO COPY: R/BWI3_HR.R:4788:37: style: Commas should always have a space after.
          *ifelse(baeume.ba$StFl2>0,1,0),
                                    ^
NO COPY: R/BWI3_HR.R:4788:39: style: Commas should always have a space after.
          *ifelse(baeume.ba$StFl2>0,1,0),
                                      ^
NO COPY: R/BWI3_HR.R:4789:1: style: lines should not be more than 80 characters.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:4789:13: style: Put spaces around all infix operators.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
           ~^~
NO COPY: R/BWI3_HR.R:4789:33: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                ^
NO COPY: R/BWI3_HR.R:4789:43: style: Variable and function names should be all lowercase.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                          ^~~~
NO COPY: R/BWI3_HR.R:4789:48: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                               ^
NO COPY: R/BWI3_HR.R:4789:62: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                                             ^
NO COPY: R/BWI3_HR.R:4789:77: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                                                            ^
NO COPY: R/BWI3_HR.R:4791:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.t <- cbind(iv.es.t,
  ^~~~~~~
NO COPY: R/BWI3_HR.R:4791:20: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.t <- cbind(iv.es.t,
                   ^~~~~~~
NO COPY: R/BWI3_HR.R:4792:38: style: Variable and function names should be all lowercase.
          stats::aggregate(baeume.ba$VolE2*baeume.ba$NHa2
                                     ^~~~~
NO COPY: R/BWI3_HR.R:4792:43: style: Put spaces around all infix operators.
          stats::aggregate(baeume.ba$VolE2*baeume.ba$NHa2
                                         ~^~
NO COPY: R/BWI3_HR.R:4793:11: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk==0 & baeume.ba$BHD1<7 & baeume.ba$BHD2 >=7 ,1,0),
          ^~
NO COPY: R/BWI3_HR.R:4793:31: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk==0 & baeume.ba$BHD1<7 & baeume.ba$BHD2 >=7 ,1,0),
                             ~^~~
NO COPY: R/BWI3_HR.R:4793:51: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk==0 & baeume.ba$BHD1<7 & baeume.ba$BHD2 >=7 ,1,0),
                                                 ~^~
NO COPY: R/BWI3_HR.R:4793:71: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk==0 & baeume.ba$BHD1<7 & baeume.ba$BHD2 >=7 ,1,0),
                                                                      ^~~
NO COPY: R/BWI3_HR.R:4793:75: style: Commas should never have a space before.
          *ifelse(baeume.ba$Pk==0 & baeume.ba$BHD1<7 & baeume.ba$BHD2 >=7 ,1,0),
                                                                         ~^
NO COPY: R/BWI3_HR.R:4793:76: style: Commas should always have a space after.
          *ifelse(baeume.ba$Pk==0 & baeume.ba$BHD1<7 & baeume.ba$BHD2 >=7 ,1,0),
                                                                           ^
NO COPY: R/BWI3_HR.R:4793:78: style: Commas should always have a space after.
          *ifelse(baeume.ba$Pk==0 & baeume.ba$BHD1<7 & baeume.ba$BHD2 >=7 ,1,0),
                                                                             ^
NO COPY: R/BWI3_HR.R:4794:1: style: lines should not be more than 80 characters.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:4794:13: style: Put spaces around all infix operators.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
           ~^~
NO COPY: R/BWI3_HR.R:4794:33: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                ^
NO COPY: R/BWI3_HR.R:4794:43: style: Variable and function names should be all lowercase.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                          ^~~~
NO COPY: R/BWI3_HR.R:4794:48: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                               ^
NO COPY: R/BWI3_HR.R:4794:62: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                                             ^
NO COPY: R/BWI3_HR.R:4794:77: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                                                            ^
NO COPY: R/BWI3_HR.R:4796:1: style: lines should not be more than 80 characters.
  #k\u00e4/09.02.2015: hier wird die Differenz gebildet, da auch der Anfangswert mit
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:4799:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.t <- cbind(iv.es.t,
  ^~~~~~~
NO COPY: R/BWI3_HR.R:4799:20: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.t <- cbind(iv.es.t,
                   ^~~~~~~
NO COPY: R/BWI3_HR.R:4800:28: style: Place a space before left parenthesis, except in a function call.
          stats::aggregate((baeume.ba$oiB2-baeume.ba$oiB1)*baeume.ba$NHa2
                           ^
NO COPY: R/BWI3_HR.R:4800:39: style: Variable and function names should be all lowercase.
          stats::aggregate((baeume.ba$oiB2-baeume.ba$oiB1)*baeume.ba$NHa2
                                      ^~~~
NO COPY: R/BWI3_HR.R:4800:43: style: Put spaces around all infix operators.
          stats::aggregate((baeume.ba$oiB2-baeume.ba$oiB1)*baeume.ba$NHa2
                                         ~^~
NO COPY: R/BWI3_HR.R:4800:54: style: Variable and function names should be all lowercase.
          stats::aggregate((baeume.ba$oiB2-baeume.ba$oiB1)*baeume.ba$NHa2
                                                     ^~~~
NO COPY: R/BWI3_HR.R:4800:59: style: Put spaces around all infix operators.
          stats::aggregate((baeume.ba$oiB2-baeume.ba$oiB1)*baeume.ba$NHa2
                                                         ~^~
NO COPY: R/BWI3_HR.R:4801:11: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk==0 & baeume.ba$BHD1<7 & baeume.ba$BHD2>=7,1,0),
          ^~
NO COPY: R/BWI3_HR.R:4801:31: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk==0 & baeume.ba$BHD1<7 & baeume.ba$BHD2>=7,1,0),
                             ~^~~
NO COPY: R/BWI3_HR.R:4801:51: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk==0 & baeume.ba$BHD1<7 & baeume.ba$BHD2>=7,1,0),
                                                 ~^~
NO COPY: R/BWI3_HR.R:4801:70: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk==0 & baeume.ba$BHD1<7 & baeume.ba$BHD2>=7,1,0),
                                                                    ~^~~
NO COPY: R/BWI3_HR.R:4801:74: style: Commas should always have a space after.
          *ifelse(baeume.ba$Pk==0 & baeume.ba$BHD1<7 & baeume.ba$BHD2>=7,1,0),
                                                                         ^
NO COPY: R/BWI3_HR.R:4801:76: style: Commas should always have a space after.
          *ifelse(baeume.ba$Pk==0 & baeume.ba$BHD1<7 & baeume.ba$BHD2>=7,1,0),
                                                                           ^
NO COPY: R/BWI3_HR.R:4802:1: style: lines should not be more than 80 characters.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:4802:13: style: Put spaces around all infix operators.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
           ~^~
NO COPY: R/BWI3_HR.R:4802:33: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                ^
NO COPY: R/BWI3_HR.R:4802:43: style: Variable and function names should be all lowercase.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                          ^~~~
NO COPY: R/BWI3_HR.R:4802:48: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                               ^
NO COPY: R/BWI3_HR.R:4802:62: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                                             ^
NO COPY: R/BWI3_HR.R:4802:77: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                                                            ^
NO COPY: R/BWI3_HR.R:4804:1: style: lines should not be more than 80 characters.
  #(1.34) Grundfl\u00e4che (Derbholz) +k\u00e4/09.02.2015: Derbholz-Zuwachs: 7[cm]²abziehen!!  
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:4804:94: style: Trailing whitespace is superfluous.
  #(1.34) Grundfl\u00e4che (Derbholz) +k\u00e4/09.02.2015: Derbholz-Zuwachs: 7[cm]²abziehen!!  
                                                                                             ^~
NO COPY: R/BWI3_HR.R:4805:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.t <- cbind(iv.es.t,
  ^~~~~~~
NO COPY: R/BWI3_HR.R:4805:20: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.t <- cbind(iv.es.t,
                   ^~~~~~~
NO COPY: R/BWI3_HR.R:4806:28: style: Place a space before left parenthesis, except in a function call.
          stats::aggregate((baeume.ba$BHD2^2-7^2)*pi/40000*baeume.ba$NHa2
                           ^
NO COPY: R/BWI3_HR.R:4806:43: style: Put spaces around all infix operators.
          stats::aggregate((baeume.ba$BHD2^2-7^2)*pi/40000*baeume.ba$NHa2
                                         ~^~
NO COPY: R/BWI3_HR.R:4806:45: style: Put spaces around all infix operators.
          stats::aggregate((baeume.ba$BHD2^2-7^2)*pi/40000*baeume.ba$NHa2
                                           ~^~
NO COPY: R/BWI3_HR.R:4806:47: style: Put spaces around all infix operators.
          stats::aggregate((baeume.ba$BHD2^2-7^2)*pi/40000*baeume.ba$NHa2
                                             ~^~
NO COPY: R/BWI3_HR.R:4806:50: style: Put spaces around all infix operators.
          stats::aggregate((baeume.ba$BHD2^2-7^2)*pi/40000*baeume.ba$NHa2
                                                ~^~
NO COPY: R/BWI3_HR.R:4806:53: style: Put spaces around all infix operators.
          stats::aggregate((baeume.ba$BHD2^2-7^2)*pi/40000*baeume.ba$NHa2
                                                   ~^~
NO COPY: R/BWI3_HR.R:4806:59: style: Put spaces around all infix operators.
          stats::aggregate((baeume.ba$BHD2^2-7^2)*pi/40000*baeume.ba$NHa2
                                                         ~^~
NO COPY: R/BWI3_HR.R:4807:11: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk==0 & baeume.ba$BHD1<7 & baeume.ba$BHD2>=7,1,0),
          ^~
NO COPY: R/BWI3_HR.R:4807:31: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk==0 & baeume.ba$BHD1<7 & baeume.ba$BHD2>=7,1,0),
                             ~^~~
NO COPY: R/BWI3_HR.R:4807:51: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk==0 & baeume.ba$BHD1<7 & baeume.ba$BHD2>=7,1,0),
                                                 ~^~
NO COPY: R/BWI3_HR.R:4807:70: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk==0 & baeume.ba$BHD1<7 & baeume.ba$BHD2>=7,1,0),
                                                                    ~^~~
NO COPY: R/BWI3_HR.R:4807:74: style: Commas should always have a space after.
          *ifelse(baeume.ba$Pk==0 & baeume.ba$BHD1<7 & baeume.ba$BHD2>=7,1,0),
                                                                         ^
NO COPY: R/BWI3_HR.R:4807:76: style: Commas should always have a space after.
          *ifelse(baeume.ba$Pk==0 & baeume.ba$BHD1<7 & baeume.ba$BHD2>=7,1,0),
                                                                           ^
NO COPY: R/BWI3_HR.R:4808:1: style: lines should not be more than 80 characters.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:4808:13: style: Put spaces around all infix operators.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
           ~^~
NO COPY: R/BWI3_HR.R:4808:33: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                ^
NO COPY: R/BWI3_HR.R:4808:43: style: Variable and function names should be all lowercase.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                          ^~~~
NO COPY: R/BWI3_HR.R:4808:48: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                               ^
NO COPY: R/BWI3_HR.R:4808:62: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                                             ^
NO COPY: R/BWI3_HR.R:4808:77: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                                                            ^
NO COPY: R/BWI3_HR.R:4809:1: style: Trailing whitespace is superfluous.
          
^~~~~~~~~~
NO COPY: R/BWI3_HR.R:4811:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.t <- cbind(iv.es.t,
  ^~~~~~~
NO COPY: R/BWI3_HR.R:4811:20: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.t <- cbind(iv.es.t,
                   ^~~~~~~
NO COPY: R/BWI3_HR.R:4812:38: style: Variable and function names should be all lowercase.
          stats::aggregate(baeume.ba$StFl2,
                                     ^~~~~
NO COPY: R/BWI3_HR.R:4813:1: style: lines should not be more than 80 characters.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x/10000)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:4813:13: style: Put spaces around all infix operators.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x/10000)
           ~^~
NO COPY: R/BWI3_HR.R:4813:33: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x/10000)
                                ^
NO COPY: R/BWI3_HR.R:4813:43: style: Variable and function names should be all lowercase.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x/10000)
                                          ^~~~
NO COPY: R/BWI3_HR.R:4813:48: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x/10000)
                                               ^
NO COPY: R/BWI3_HR.R:4813:62: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x/10000)
                                                             ^
NO COPY: R/BWI3_HR.R:4813:77: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x/10000)
                                                                            ^
NO COPY: R/BWI3_HR.R:4813:83: style: Put spaces around all infix operators.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x/10000)
                                                                                 ~^~
NO COPY: R/BWI3_HR.R:4815:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.t <- cbind(iv.es.t,
  ^~~~~~~
NO COPY: R/BWI3_HR.R:4815:20: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.t <- cbind(iv.es.t,
                   ^~~~~~~
NO COPY: R/BWI3_HR.R:4816:38: style: Variable and function names should be all lowercase.
          stats::aggregate(baeume.ba$VolV2*baeume.ba$NHa2
                                     ^~~~~
NO COPY: R/BWI3_HR.R:4816:43: style: Put spaces around all infix operators.
          stats::aggregate(baeume.ba$VolV2*baeume.ba$NHa2
                                         ~^~
NO COPY: R/BWI3_HR.R:4817:11: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk<=1 & baeume.ba$BHD1>=7,1,0),
          ^~
NO COPY: R/BWI3_HR.R:4817:31: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk<=1 & baeume.ba$BHD1>=7,1,0),
                             ~^~~
NO COPY: R/BWI3_HR.R:4817:51: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk<=1 & baeume.ba$BHD1>=7,1,0),
                                                 ~^~~
NO COPY: R/BWI3_HR.R:4817:55: style: Commas should always have a space after.
          *ifelse(baeume.ba$Pk<=1 & baeume.ba$BHD1>=7,1,0),
                                                      ^
NO COPY: R/BWI3_HR.R:4817:57: style: Commas should always have a space after.
          *ifelse(baeume.ba$Pk<=1 & baeume.ba$BHD1>=7,1,0),
                                                        ^
NO COPY: R/BWI3_HR.R:4818:1: style: lines should not be more than 80 characters.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:4818:13: style: Put spaces around all infix operators.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
           ~^~
NO COPY: R/BWI3_HR.R:4818:33: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                ^
NO COPY: R/BWI3_HR.R:4818:43: style: Variable and function names should be all lowercase.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                          ^~~~
NO COPY: R/BWI3_HR.R:4818:48: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                               ^
NO COPY: R/BWI3_HR.R:4818:62: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                                             ^
NO COPY: R/BWI3_HR.R:4818:77: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                                                            ^
NO COPY: R/BWI3_HR.R:4820:9: style: Words within variable and function names should be separated by '_' rather than '.'.
  names(iv.es.t) <- c("TNr","BaGr","Akl","Dkl","iV.DhmR.S","iV.DhmR.HB.S",
        ^~~~~~~
NO COPY: R/BWI3_HR.R:4820:29: style: Commas should always have a space after.
  names(iv.es.t) <- c("TNr","BaGr","Akl","Dkl","iV.DhmR.S","iV.DhmR.HB.S",
                            ^
NO COPY: R/BWI3_HR.R:4820:36: style: Commas should always have a space after.
  names(iv.es.t) <- c("TNr","BaGr","Akl","Dkl","iV.DhmR.S","iV.DhmR.HB.S",
                                   ^
NO COPY: R/BWI3_HR.R:4820:42: style: Commas should always have a space after.
  names(iv.es.t) <- c("TNr","BaGr","Akl","Dkl","iV.DhmR.S","iV.DhmR.HB.S",
                                         ^
NO COPY: R/BWI3_HR.R:4820:48: style: Commas should always have a space after.
  names(iv.es.t) <- c("TNr","BaGr","Akl","Dkl","iV.DhmR.S","iV.DhmR.HB.S",
                                               ^
NO COPY: R/BWI3_HR.R:4820:60: style: Commas should always have a space after.
  names(iv.es.t) <- c("TNr","BaGr","Akl","Dkl","iV.DhmR.S","iV.DhmR.HB.S",
                                                           ^
NO COPY: R/BWI3_HR.R:4821:22: style: Commas should always have a space after.
          "iV.EoR.S","iB.S","iG.S","iV.DhmR.Es","iV.DhmR.HB.Es","iV.EoR.Es",
                     ^
NO COPY: R/BWI3_HR.R:4821:29: style: Commas should always have a space after.
          "iV.EoR.S","iB.S","iG.S","iV.DhmR.Es","iV.DhmR.HB.Es","iV.EoR.Es",
                            ^
NO COPY: R/BWI3_HR.R:4821:36: style: Commas should always have a space after.
          "iV.EoR.S","iB.S","iG.S","iV.DhmR.Es","iV.DhmR.HB.Es","iV.EoR.Es",
                                   ^
NO COPY: R/BWI3_HR.R:4821:49: style: Commas should always have a space after.
          "iV.EoR.S","iB.S","iG.S","iV.DhmR.Es","iV.DhmR.HB.Es","iV.EoR.Es",
                                                ^
NO COPY: R/BWI3_HR.R:4821:65: style: Commas should always have a space after.
          "iV.EoR.S","iB.S","iG.S","iV.DhmR.Es","iV.DhmR.HB.Es","iV.EoR.Es",
                                                                ^
NO COPY: R/BWI3_HR.R:4822:19: style: Commas should always have a space after.
          "iB.Es","iG.Es","V.DhmR.E","V.DhmR.HB.E","V.EoR.E","B.E","G.E","BAF2",
                  ^
NO COPY: R/BWI3_HR.R:4822:27: style: Commas should always have a space after.
          "iB.Es","iG.Es","V.DhmR.E","V.DhmR.HB.E","V.EoR.E","B.E","G.E","BAF2",
                          ^
NO COPY: R/BWI3_HR.R:4822:38: style: Commas should always have a space after.
          "iB.Es","iG.Es","V.DhmR.E","V.DhmR.HB.E","V.EoR.E","B.E","G.E","BAF2",
                                     ^
NO COPY: R/BWI3_HR.R:4822:52: style: Commas should always have a space after.
          "iB.Es","iG.Es","V.DhmR.E","V.DhmR.HB.E","V.EoR.E","B.E","G.E","BAF2",
                                                   ^
NO COPY: R/BWI3_HR.R:4822:62: style: Commas should always have a space after.
          "iB.Es","iG.Es","V.DhmR.E","V.DhmR.HB.E","V.EoR.E","B.E","G.E","BAF2",
                                                             ^
NO COPY: R/BWI3_HR.R:4822:68: style: Commas should always have a space after.
          "iB.Es","iG.Es","V.DhmR.E","V.DhmR.HB.E","V.EoR.E","B.E","G.E","BAF2",
                                                                   ^
NO COPY: R/BWI3_HR.R:4822:74: style: Commas should always have a space after.
          "iB.Es","iG.Es","V.DhmR.E","V.DhmR.HB.E","V.EoR.E","B.E","G.E","BAF2",
                                                                         ^
NO COPY: R/BWI3_HR.R:4824:15: style: Words within variable and function names should be separated by '_' rather than '.'.
  utils::head(iv.es.t)
              ^~~~~~~
NO COPY: R/BWI3_HR.R:4827:76: style: Trailing whitespace is superfluous.
  baeume.ba <- baeume.vor[TRUE, c("TNr", "ENr", "STP", "BNr", "Pk", "BHD1", 
                                                                           ^
NO COPY: R/BWI3_HR.R:4828:73: style: Trailing whitespace is superfluous.
                                  "BHD2", "BaGr", "akl", "dkl", "VolV1", 
                                                                        ^
NO COPY: R/BWI3_HR.R:4829:77: style: Trailing whitespace is superfluous.
                                  "VolV2", "VolE1", "VolE2", "oiB1", "oiB2", 
                                                                            ^
NO COPY: R/BWI3_HR.R:4833:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.a.t <- stats::aggregate((baeume.ba$VolV2-baeume.ba$VolV1)*baeume.ba$NHa1
  ^~~~~~
NO COPY: R/BWI3_HR.R:4833:30: style: Place a space before left parenthesis, except in a function call.
  iv.a.t <- stats::aggregate((baeume.ba$VolV2-baeume.ba$VolV1)*baeume.ba$NHa1
                             ^
NO COPY: R/BWI3_HR.R:4833:41: style: Variable and function names should be all lowercase.
  iv.a.t <- stats::aggregate((baeume.ba$VolV2-baeume.ba$VolV1)*baeume.ba$NHa1
                                        ^~~~~
NO COPY: R/BWI3_HR.R:4833:46: style: Put spaces around all infix operators.
  iv.a.t <- stats::aggregate((baeume.ba$VolV2-baeume.ba$VolV1)*baeume.ba$NHa1
                                            ~^~
NO COPY: R/BWI3_HR.R:4833:57: style: Variable and function names should be all lowercase.
  iv.a.t <- stats::aggregate((baeume.ba$VolV2-baeume.ba$VolV1)*baeume.ba$NHa1
                                                        ^~~~~
NO COPY: R/BWI3_HR.R:4833:63: style: Put spaces around all infix operators.
  iv.a.t <- stats::aggregate((baeume.ba$VolV2-baeume.ba$VolV1)*baeume.ba$NHa1
                                                             ~^~
NO COPY: R/BWI3_HR.R:4834:11: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk %in%c(2:5,9),1,0),
          ^~
NO COPY: R/BWI3_HR.R:4834:32: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk %in%c(2:5,9),1,0),
                               ^~~~~
NO COPY: R/BWI3_HR.R:4834:42: style: Commas should always have a space after.
          *ifelse(baeume.ba$Pk %in%c(2:5,9),1,0),
                                         ^
NO COPY: R/BWI3_HR.R:4834:45: style: Commas should always have a space after.
          *ifelse(baeume.ba$Pk %in%c(2:5,9),1,0),
                                            ^
NO COPY: R/BWI3_HR.R:4834:47: style: Commas should always have a space after.
          *ifelse(baeume.ba$Pk %in%c(2:5,9),1,0),
                                              ^
NO COPY: R/BWI3_HR.R:4835:13: style: Put spaces around all infix operators.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)
           ~^~
NO COPY: R/BWI3_HR.R:4835:33: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)
                                ^
NO COPY: R/BWI3_HR.R:4835:43: style: Variable and function names should be all lowercase.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)
                                          ^~~~
NO COPY: R/BWI3_HR.R:4835:48: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)
                                               ^
NO COPY: R/BWI3_HR.R:4835:62: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)
                                                             ^
NO COPY: R/BWI3_HR.R:4835:77: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)
                                                                            ^
NO COPY: R/BWI3_HR.R:4837:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.a.t <- cbind(iv.a.t,
  ^~~~~~
NO COPY: R/BWI3_HR.R:4837:19: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.a.t <- cbind(iv.a.t,
                  ^~~~~~
NO COPY: R/BWI3_HR.R:4838:28: style: Place a space before left parenthesis, except in a function call.
          stats::aggregate((baeume.ba$VolV2-baeume.ba$VolV1)*baeume.ba$NHa1
                           ^
NO COPY: R/BWI3_HR.R:4838:39: style: Variable and function names should be all lowercase.
          stats::aggregate((baeume.ba$VolV2-baeume.ba$VolV1)*baeume.ba$NHa1
                                      ^~~~~
NO COPY: R/BWI3_HR.R:4838:44: style: Put spaces around all infix operators.
          stats::aggregate((baeume.ba$VolV2-baeume.ba$VolV1)*baeume.ba$NHa1
                                          ~^~
NO COPY: R/BWI3_HR.R:4838:55: style: Variable and function names should be all lowercase.
          stats::aggregate((baeume.ba$VolV2-baeume.ba$VolV1)*baeume.ba$NHa1
                                                      ^~~~~
NO COPY: R/BWI3_HR.R:4838:61: style: Put spaces around all infix operators.
          stats::aggregate((baeume.ba$VolV2-baeume.ba$VolV1)*baeume.ba$NHa1
                                                           ~^~
NO COPY: R/BWI3_HR.R:4839:11: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk %in%c(2:5,9),1,0)*ifelse(baeume.ba$StFl1>0,1,0),
          ^~
NO COPY: R/BWI3_HR.R:4839:32: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk %in%c(2:5,9),1,0)*ifelse(baeume.ba$StFl1>0,1,0),
                               ^~~~~
NO COPY: R/BWI3_HR.R:4839:42: style: Commas should always have a space after.
          *ifelse(baeume.ba$Pk %in%c(2:5,9),1,0)*ifelse(baeume.ba$StFl1>0,1,0),
                                         ^
NO COPY: R/BWI3_HR.R:4839:45: style: Commas should always have a space after.
          *ifelse(baeume.ba$Pk %in%c(2:5,9),1,0)*ifelse(baeume.ba$StFl1>0,1,0),
                                            ^
NO COPY: R/BWI3_HR.R:4839:47: style: Commas should always have a space after.
          *ifelse(baeume.ba$Pk %in%c(2:5,9),1,0)*ifelse(baeume.ba$StFl1>0,1,0),
                                              ^
NO COPY: R/BWI3_HR.R:4839:49: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk %in%c(2:5,9),1,0)*ifelse(baeume.ba$StFl1>0,1,0),
                                               ~^~
NO COPY: R/BWI3_HR.R:4839:67: style: Variable and function names should be all lowercase.
          *ifelse(baeume.ba$Pk %in%c(2:5,9),1,0)*ifelse(baeume.ba$StFl1>0,1,0),
                                                                  ^~~~~
NO COPY: R/BWI3_HR.R:4839:72: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk %in%c(2:5,9),1,0)*ifelse(baeume.ba$StFl1>0,1,0),
                                                                      ~^~
NO COPY: R/BWI3_HR.R:4839:75: style: Commas should always have a space after.
          *ifelse(baeume.ba$Pk %in%c(2:5,9),1,0)*ifelse(baeume.ba$StFl1>0,1,0),
                                                                          ^
NO COPY: R/BWI3_HR.R:4839:77: style: Commas should always have a space after.
          *ifelse(baeume.ba$Pk %in%c(2:5,9),1,0)*ifelse(baeume.ba$StFl1>0,1,0),
                                                                            ^
NO COPY: R/BWI3_HR.R:4840:1: style: lines should not be more than 80 characters.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:4840:13: style: Put spaces around all infix operators.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
           ~^~
NO COPY: R/BWI3_HR.R:4840:33: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                ^
NO COPY: R/BWI3_HR.R:4840:43: style: Variable and function names should be all lowercase.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                          ^~~~
NO COPY: R/BWI3_HR.R:4840:48: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                               ^
NO COPY: R/BWI3_HR.R:4840:62: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                                             ^
NO COPY: R/BWI3_HR.R:4840:77: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                                                            ^
NO COPY: R/BWI3_HR.R:4842:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.a.t <- cbind(iv.a.t,
  ^~~~~~
NO COPY: R/BWI3_HR.R:4842:19: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.a.t <- cbind(iv.a.t,
                  ^~~~~~
NO COPY: R/BWI3_HR.R:4843:38: style: Variable and function names should be all lowercase.
          stats::aggregate(baeume.ba$VolV2*baeume.ba$NHa1
                                     ^~~~~
NO COPY: R/BWI3_HR.R:4843:43: style: Put spaces around all infix operators.
          stats::aggregate(baeume.ba$VolV2*baeume.ba$NHa1
                                         ~^~
NO COPY: R/BWI3_HR.R:4844:11: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk %in%c(2:5,9),1,0),
          ^~
NO COPY: R/BWI3_HR.R:4844:32: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk %in%c(2:5,9),1,0),
                               ^~~~~
NO COPY: R/BWI3_HR.R:4844:42: style: Commas should always have a space after.
          *ifelse(baeume.ba$Pk %in%c(2:5,9),1,0),
                                         ^
NO COPY: R/BWI3_HR.R:4844:45: style: Commas should always have a space after.
          *ifelse(baeume.ba$Pk %in%c(2:5,9),1,0),
                                            ^
NO COPY: R/BWI3_HR.R:4844:47: style: Commas should always have a space after.
          *ifelse(baeume.ba$Pk %in%c(2:5,9),1,0),
                                              ^
NO COPY: R/BWI3_HR.R:4845:1: style: lines should not be more than 80 characters.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:4845:13: style: Put spaces around all infix operators.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
           ~^~
NO COPY: R/BWI3_HR.R:4845:33: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                ^
NO COPY: R/BWI3_HR.R:4845:43: style: Variable and function names should be all lowercase.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                          ^~~~
NO COPY: R/BWI3_HR.R:4845:48: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                               ^
NO COPY: R/BWI3_HR.R:4845:62: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                                             ^
NO COPY: R/BWI3_HR.R:4845:77: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                                                            ^
NO COPY: R/BWI3_HR.R:4846:1: style: lines should not be more than 80 characters.
  #(2.114) Derbholz m.R. im Hauptbestand ausgeschiedener Vorrat (insgesamt zur PM)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:4847:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.a.t <- cbind(iv.a.t,
  ^~~~~~
NO COPY: R/BWI3_HR.R:4847:19: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.a.t <- cbind(iv.a.t,
                  ^~~~~~
NO COPY: R/BWI3_HR.R:4848:38: style: Variable and function names should be all lowercase.
          stats::aggregate(baeume.ba$VolV2*baeume.ba$NHa1
                                     ^~~~~
NO COPY: R/BWI3_HR.R:4848:43: style: Put spaces around all infix operators.
          stats::aggregate(baeume.ba$VolV2*baeume.ba$NHa1
                                         ~^~
NO COPY: R/BWI3_HR.R:4849:11: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk %in%c(2:5,9),1,0)*ifelse(baeume.ba$StFl1>0,1,0),
          ^~
NO COPY: R/BWI3_HR.R:4849:32: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk %in%c(2:5,9),1,0)*ifelse(baeume.ba$StFl1>0,1,0),
                               ^~~~~
NO COPY: R/BWI3_HR.R:4849:42: style: Commas should always have a space after.
          *ifelse(baeume.ba$Pk %in%c(2:5,9),1,0)*ifelse(baeume.ba$StFl1>0,1,0),
                                         ^
NO COPY: R/BWI3_HR.R:4849:45: style: Commas should always have a space after.
          *ifelse(baeume.ba$Pk %in%c(2:5,9),1,0)*ifelse(baeume.ba$StFl1>0,1,0),
                                            ^
NO COPY: R/BWI3_HR.R:4849:47: style: Commas should always have a space after.
          *ifelse(baeume.ba$Pk %in%c(2:5,9),1,0)*ifelse(baeume.ba$StFl1>0,1,0),
                                              ^
NO COPY: R/BWI3_HR.R:4849:49: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk %in%c(2:5,9),1,0)*ifelse(baeume.ba$StFl1>0,1,0),
                                               ~^~
NO COPY: R/BWI3_HR.R:4849:67: style: Variable and function names should be all lowercase.
          *ifelse(baeume.ba$Pk %in%c(2:5,9),1,0)*ifelse(baeume.ba$StFl1>0,1,0),
                                                                  ^~~~~
NO COPY: R/BWI3_HR.R:4849:72: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk %in%c(2:5,9),1,0)*ifelse(baeume.ba$StFl1>0,1,0),
                                                                      ~^~
NO COPY: R/BWI3_HR.R:4849:75: style: Commas should always have a space after.
          *ifelse(baeume.ba$Pk %in%c(2:5,9),1,0)*ifelse(baeume.ba$StFl1>0,1,0),
                                                                          ^
NO COPY: R/BWI3_HR.R:4849:77: style: Commas should always have a space after.
          *ifelse(baeume.ba$Pk %in%c(2:5,9),1,0)*ifelse(baeume.ba$StFl1>0,1,0),
                                                                            ^
NO COPY: R/BWI3_HR.R:4850:1: style: lines should not be more than 80 characters.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:4850:13: style: Put spaces around all infix operators.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
           ~^~
NO COPY: R/BWI3_HR.R:4850:33: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                ^
NO COPY: R/BWI3_HR.R:4850:43: style: Variable and function names should be all lowercase.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                          ^~~~
NO COPY: R/BWI3_HR.R:4850:48: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                               ^
NO COPY: R/BWI3_HR.R:4850:62: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                                             ^
NO COPY: R/BWI3_HR.R:4850:77: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                                                            ^
NO COPY: R/BWI3_HR.R:4853:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.a.t <- cbind(iv.a.t,
  ^~~~~~
NO COPY: R/BWI3_HR.R:4853:19: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.a.t <- cbind(iv.a.t,
                  ^~~~~~
NO COPY: R/BWI3_HR.R:4854:28: style: Place a space before left parenthesis, except in a function call.
          stats::aggregate((baeume.ba$VolE2-baeume.ba$VolE1)*baeume.ba$NHa1
                           ^
NO COPY: R/BWI3_HR.R:4854:39: style: Variable and function names should be all lowercase.
          stats::aggregate((baeume.ba$VolE2-baeume.ba$VolE1)*baeume.ba$NHa1
                                      ^~~~~
NO COPY: R/BWI3_HR.R:4854:44: style: Put spaces around all infix operators.
          stats::aggregate((baeume.ba$VolE2-baeume.ba$VolE1)*baeume.ba$NHa1
                                          ~^~
NO COPY: R/BWI3_HR.R:4854:55: style: Variable and function names should be all lowercase.
          stats::aggregate((baeume.ba$VolE2-baeume.ba$VolE1)*baeume.ba$NHa1
                                                      ^~~~~
NO COPY: R/BWI3_HR.R:4854:61: style: Put spaces around all infix operators.
          stats::aggregate((baeume.ba$VolE2-baeume.ba$VolE1)*baeume.ba$NHa1
                                                           ~^~
NO COPY: R/BWI3_HR.R:4855:11: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk %in%c(2:5,9),1,0),
          ^~
NO COPY: R/BWI3_HR.R:4855:32: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk %in%c(2:5,9),1,0),
                               ^~~~~
NO COPY: R/BWI3_HR.R:4855:42: style: Commas should always have a space after.
          *ifelse(baeume.ba$Pk %in%c(2:5,9),1,0),
                                         ^
NO COPY: R/BWI3_HR.R:4855:45: style: Commas should always have a space after.
          *ifelse(baeume.ba$Pk %in%c(2:5,9),1,0),
                                            ^
NO COPY: R/BWI3_HR.R:4855:47: style: Commas should always have a space after.
          *ifelse(baeume.ba$Pk %in%c(2:5,9),1,0),
                                              ^
NO COPY: R/BWI3_HR.R:4856:1: style: lines should not be more than 80 characters.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:4856:13: style: Put spaces around all infix operators.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
           ~^~
NO COPY: R/BWI3_HR.R:4856:33: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                ^
NO COPY: R/BWI3_HR.R:4856:43: style: Variable and function names should be all lowercase.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                          ^~~~
NO COPY: R/BWI3_HR.R:4856:48: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                               ^
NO COPY: R/BWI3_HR.R:4856:62: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                                             ^
NO COPY: R/BWI3_HR.R:4856:77: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                                                            ^
NO COPY: R/BWI3_HR.R:4858:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.a.t <- cbind(iv.a.t,
  ^~~~~~
NO COPY: R/BWI3_HR.R:4858:19: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.a.t <- cbind(iv.a.t,
                  ^~~~~~
NO COPY: R/BWI3_HR.R:4859:38: style: Variable and function names should be all lowercase.
          stats::aggregate(baeume.ba$VolE2*baeume.ba$NHa1
                                     ^~~~~
NO COPY: R/BWI3_HR.R:4859:43: style: Put spaces around all infix operators.
          stats::aggregate(baeume.ba$VolE2*baeume.ba$NHa1
                                         ~^~
NO COPY: R/BWI3_HR.R:4860:11: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk %in%c(2:5,9),1,0),
          ^~
NO COPY: R/BWI3_HR.R:4860:32: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk %in%c(2:5,9),1,0),
                               ^~~~~
NO COPY: R/BWI3_HR.R:4860:42: style: Commas should always have a space after.
          *ifelse(baeume.ba$Pk %in%c(2:5,9),1,0),
                                         ^
NO COPY: R/BWI3_HR.R:4860:45: style: Commas should always have a space after.
          *ifelse(baeume.ba$Pk %in%c(2:5,9),1,0),
                                            ^
NO COPY: R/BWI3_HR.R:4860:47: style: Commas should always have a space after.
          *ifelse(baeume.ba$Pk %in%c(2:5,9),1,0),
                                              ^
NO COPY: R/BWI3_HR.R:4861:1: style: lines should not be more than 80 characters.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:4861:13: style: Put spaces around all infix operators.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
           ~^~
NO COPY: R/BWI3_HR.R:4861:33: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                ^
NO COPY: R/BWI3_HR.R:4861:43: style: Variable and function names should be all lowercase.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                          ^~~~
NO COPY: R/BWI3_HR.R:4861:48: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                               ^
NO COPY: R/BWI3_HR.R:4861:62: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                                             ^
NO COPY: R/BWI3_HR.R:4861:77: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                                                            ^
NO COPY: R/BWI3_HR.R:4863:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.a.t <- cbind(iv.a.t,
  ^~~~~~
NO COPY: R/BWI3_HR.R:4863:19: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.a.t <- cbind(iv.a.t,
                  ^~~~~~
NO COPY: R/BWI3_HR.R:4864:28: style: Place a space before left parenthesis, except in a function call.
          stats::aggregate((baeume.ba$oiB2-baeume.ba$oiB1)*baeume.ba$NHa1
                           ^
NO COPY: R/BWI3_HR.R:4864:39: style: Variable and function names should be all lowercase.
          stats::aggregate((baeume.ba$oiB2-baeume.ba$oiB1)*baeume.ba$NHa1
                                      ^~~~
NO COPY: R/BWI3_HR.R:4864:43: style: Put spaces around all infix operators.
          stats::aggregate((baeume.ba$oiB2-baeume.ba$oiB1)*baeume.ba$NHa1
                                         ~^~
NO COPY: R/BWI3_HR.R:4864:54: style: Variable and function names should be all lowercase.
          stats::aggregate((baeume.ba$oiB2-baeume.ba$oiB1)*baeume.ba$NHa1
                                                     ^~~~
NO COPY: R/BWI3_HR.R:4864:59: style: Put spaces around all infix operators.
          stats::aggregate((baeume.ba$oiB2-baeume.ba$oiB1)*baeume.ba$NHa1
                                                         ~^~
NO COPY: R/BWI3_HR.R:4865:11: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk %in%c(2:5,9),1,0),
          ^~
NO COPY: R/BWI3_HR.R:4865:32: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk %in%c(2:5,9),1,0),
                               ^~~~~
NO COPY: R/BWI3_HR.R:4865:42: style: Commas should always have a space after.
          *ifelse(baeume.ba$Pk %in%c(2:5,9),1,0),
                                         ^
NO COPY: R/BWI3_HR.R:4865:45: style: Commas should always have a space after.
          *ifelse(baeume.ba$Pk %in%c(2:5,9),1,0),
                                            ^
NO COPY: R/BWI3_HR.R:4865:47: style: Commas should always have a space after.
          *ifelse(baeume.ba$Pk %in%c(2:5,9),1,0),
                                              ^
NO COPY: R/BWI3_HR.R:4866:1: style: lines should not be more than 80 characters.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:4866:13: style: Put spaces around all infix operators.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
           ~^~
NO COPY: R/BWI3_HR.R:4866:33: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                ^
NO COPY: R/BWI3_HR.R:4866:43: style: Variable and function names should be all lowercase.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                          ^~~~
NO COPY: R/BWI3_HR.R:4866:48: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                               ^
NO COPY: R/BWI3_HR.R:4866:62: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                                             ^
NO COPY: R/BWI3_HR.R:4866:77: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                                                            ^
NO COPY: R/BWI3_HR.R:4868:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.a.t <- cbind(iv.a.t,
  ^~~~~~
NO COPY: R/BWI3_HR.R:4868:19: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.a.t <- cbind(iv.a.t,
                  ^~~~~~
NO COPY: R/BWI3_HR.R:4869:34: style: Variable and function names should be all lowercase.
      stats::aggregate(baeume.ba$oiB2*baeume.ba$NHa1
                                 ^~~~
NO COPY: R/BWI3_HR.R:4869:38: style: Put spaces around all infix operators.
      stats::aggregate(baeume.ba$oiB2*baeume.ba$NHa1
                                    ~^~
NO COPY: R/BWI3_HR.R:4870:7: style: Put spaces around all infix operators.
      *ifelse(baeume.ba$Pk %in%c(2:5,9),1,0),
      ^~
NO COPY: R/BWI3_HR.R:4870:28: style: Put spaces around all infix operators.
      *ifelse(baeume.ba$Pk %in%c(2:5,9),1,0),
                           ^~~~~
NO COPY: R/BWI3_HR.R:4870:38: style: Commas should always have a space after.
      *ifelse(baeume.ba$Pk %in%c(2:5,9),1,0),
                                     ^
NO COPY: R/BWI3_HR.R:4870:41: style: Commas should always have a space after.
      *ifelse(baeume.ba$Pk %in%c(2:5,9),1,0),
                                        ^
NO COPY: R/BWI3_HR.R:4870:43: style: Commas should always have a space after.
      *ifelse(baeume.ba$Pk %in%c(2:5,9),1,0),
                                          ^
NO COPY: R/BWI3_HR.R:4871:9: style: Put spaces around all infix operators.
      by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
       ~^~
NO COPY: R/BWI3_HR.R:4871:29: style: Commas should always have a space after.
      by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                            ^
NO COPY: R/BWI3_HR.R:4871:39: style: Variable and function names should be all lowercase.
      by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                      ^~~~
NO COPY: R/BWI3_HR.R:4871:44: style: Commas should always have a space after.
      by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                           ^
NO COPY: R/BWI3_HR.R:4871:58: style: Commas should always have a space after.
      by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                                         ^
NO COPY: R/BWI3_HR.R:4871:73: style: Commas should always have a space after.
      by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                                                        ^
NO COPY: R/BWI3_HR.R:4874:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.a.t <- cbind(iv.a.t,
  ^~~~~~
NO COPY: R/BWI3_HR.R:4874:19: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.a.t <- cbind(iv.a.t,
                  ^~~~~~
NO COPY: R/BWI3_HR.R:4875:1: style: lines should not be more than 80 characters.
          stats::aggregate((baeume.ba$BHD2^2-baeume.ba$BHD1^2)*pi/40000*baeume.ba$NHa1
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:4875:28: style: Place a space before left parenthesis, except in a function call.
          stats::aggregate((baeume.ba$BHD2^2-baeume.ba$BHD1^2)*pi/40000*baeume.ba$NHa1
                           ^
NO COPY: R/BWI3_HR.R:4875:43: style: Put spaces around all infix operators.
          stats::aggregate((baeume.ba$BHD2^2-baeume.ba$BHD1^2)*pi/40000*baeume.ba$NHa1
                                         ~^~
NO COPY: R/BWI3_HR.R:4875:45: style: Put spaces around all infix operators.
          stats::aggregate((baeume.ba$BHD2^2-baeume.ba$BHD1^2)*pi/40000*baeume.ba$NHa1
                                           ~^~
NO COPY: R/BWI3_HR.R:4875:60: style: Put spaces around all infix operators.
          stats::aggregate((baeume.ba$BHD2^2-baeume.ba$BHD1^2)*pi/40000*baeume.ba$NHa1
                                                          ~^~
NO COPY: R/BWI3_HR.R:4875:63: style: Put spaces around all infix operators.
          stats::aggregate((baeume.ba$BHD2^2-baeume.ba$BHD1^2)*pi/40000*baeume.ba$NHa1
                                                             ~^~
NO COPY: R/BWI3_HR.R:4875:66: style: Put spaces around all infix operators.
          stats::aggregate((baeume.ba$BHD2^2-baeume.ba$BHD1^2)*pi/40000*baeume.ba$NHa1
                                                                ~^~
NO COPY: R/BWI3_HR.R:4875:72: style: Put spaces around all infix operators.
          stats::aggregate((baeume.ba$BHD2^2-baeume.ba$BHD1^2)*pi/40000*baeume.ba$NHa1
                                                                      ~^~
NO COPY: R/BWI3_HR.R:4876:11: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk %in%c(2:5,9),1,0),
          ^~
NO COPY: R/BWI3_HR.R:4876:32: style: Put spaces around all infix operators.
          *ifelse(baeume.ba$Pk %in%c(2:5,9),1,0),
                               ^~~~~
NO COPY: R/BWI3_HR.R:4876:42: style: Commas should always have a space after.
          *ifelse(baeume.ba$Pk %in%c(2:5,9),1,0),
                                         ^
NO COPY: R/BWI3_HR.R:4876:45: style: Commas should always have a space after.
          *ifelse(baeume.ba$Pk %in%c(2:5,9),1,0),
                                            ^
NO COPY: R/BWI3_HR.R:4876:47: style: Commas should always have a space after.
          *ifelse(baeume.ba$Pk %in%c(2:5,9),1,0),
                                              ^
NO COPY: R/BWI3_HR.R:4877:1: style: lines should not be more than 80 characters.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:4877:13: style: Put spaces around all infix operators.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
           ~^~
NO COPY: R/BWI3_HR.R:4877:33: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                ^
NO COPY: R/BWI3_HR.R:4877:43: style: Variable and function names should be all lowercase.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                          ^~~~
NO COPY: R/BWI3_HR.R:4877:48: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                               ^
NO COPY: R/BWI3_HR.R:4877:62: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                                             ^
NO COPY: R/BWI3_HR.R:4877:77: style: Commas should always have a space after.
          by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                                                            ^
NO COPY: R/BWI3_HR.R:4879:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.a.t <- cbind(iv.a.t,
  ^~~~~~
NO COPY: R/BWI3_HR.R:4879:19: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.a.t <- cbind(iv.a.t,
                  ^~~~~~
NO COPY: R/BWI3_HR.R:4880:38: style: Put spaces around all infix operators.
      stats::aggregate(baeume.ba$BHD2^2*pi/40000*baeume.ba$NHa1
                                    ~^~
NO COPY: R/BWI3_HR.R:4880:40: style: Put spaces around all infix operators.
      stats::aggregate(baeume.ba$BHD2^2*pi/40000*baeume.ba$NHa1
                                      ~^~
NO COPY: R/BWI3_HR.R:4880:43: style: Put spaces around all infix operators.
      stats::aggregate(baeume.ba$BHD2^2*pi/40000*baeume.ba$NHa1
                                         ~^~
NO COPY: R/BWI3_HR.R:4880:49: style: Put spaces around all infix operators.
      stats::aggregate(baeume.ba$BHD2^2*pi/40000*baeume.ba$NHa1
                                               ~^~
NO COPY: R/BWI3_HR.R:4881:7: style: Put spaces around all infix operators.
      *ifelse(baeume.ba$Pk %in%c(2:5,9),1,0),
      ^~
NO COPY: R/BWI3_HR.R:4881:28: style: Put spaces around all infix operators.
      *ifelse(baeume.ba$Pk %in%c(2:5,9),1,0),
                           ^~~~~
NO COPY: R/BWI3_HR.R:4881:38: style: Commas should always have a space after.
      *ifelse(baeume.ba$Pk %in%c(2:5,9),1,0),
                                     ^
NO COPY: R/BWI3_HR.R:4881:41: style: Commas should always have a space after.
      *ifelse(baeume.ba$Pk %in%c(2:5,9),1,0),
                                        ^
NO COPY: R/BWI3_HR.R:4881:43: style: Commas should always have a space after.
      *ifelse(baeume.ba$Pk %in%c(2:5,9),1,0),
                                          ^
NO COPY: R/BWI3_HR.R:4882:9: style: Put spaces around all infix operators.
      by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
       ~^~
NO COPY: R/BWI3_HR.R:4882:29: style: Commas should always have a space after.
      by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                            ^
NO COPY: R/BWI3_HR.R:4882:39: style: Variable and function names should be all lowercase.
      by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                      ^~~~
NO COPY: R/BWI3_HR.R:4882:44: style: Commas should always have a space after.
      by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                           ^
NO COPY: R/BWI3_HR.R:4882:58: style: Commas should always have a space after.
      by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                                         ^
NO COPY: R/BWI3_HR.R:4882:73: style: Commas should always have a space after.
      by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                                                        ^
NO COPY: R/BWI3_HR.R:4885:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.a.t <- cbind(iv.a.t,
  ^~~~~~
NO COPY: R/BWI3_HR.R:4885:19: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.a.t <- cbind(iv.a.t,
                  ^~~~~~
NO COPY: R/BWI3_HR.R:4886:34: style: Variable and function names should be all lowercase.
      stats::aggregate(baeume.ba$StFl1,
                                 ^~~~~
NO COPY: R/BWI3_HR.R:4887:1: style: lines should not be more than 80 characters.
      by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x/10000)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:4887:9: style: Put spaces around all infix operators.
      by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x/10000)
       ~^~
NO COPY: R/BWI3_HR.R:4887:29: style: Commas should always have a space after.
      by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x/10000)
                            ^
NO COPY: R/BWI3_HR.R:4887:39: style: Variable and function names should be all lowercase.
      by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x/10000)
                                      ^~~~
NO COPY: R/BWI3_HR.R:4887:44: style: Commas should always have a space after.
      by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x/10000)
                                           ^
NO COPY: R/BWI3_HR.R:4887:58: style: Commas should always have a space after.
      by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x/10000)
                                                         ^
NO COPY: R/BWI3_HR.R:4887:73: style: Commas should always have a space after.
      by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x/10000)
                                                                        ^
NO COPY: R/BWI3_HR.R:4887:79: style: Put spaces around all infix operators.
      by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x/10000)
                                                                             ~^~
NO COPY: R/BWI3_HR.R:4890:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.a.t <- cbind(iv.a.t,
  ^~~~~~
NO COPY: R/BWI3_HR.R:4890:19: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.a.t <- cbind(iv.a.t,
                  ^~~~~~
NO COPY: R/BWI3_HR.R:4891:1: style: lines should not be more than 80 characters.
      stats::aggregate(baeume.ba$VolV1*baeume.ba$NHa1*ifelse(baeume.ba$Pk==1,1,0),
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:4891:34: style: Variable and function names should be all lowercase.
      stats::aggregate(baeume.ba$VolV1*baeume.ba$NHa1*ifelse(baeume.ba$Pk==1,1,0),
                                 ^~~~~
NO COPY: R/BWI3_HR.R:4891:39: style: Put spaces around all infix operators.
      stats::aggregate(baeume.ba$VolV1*baeume.ba$NHa1*ifelse(baeume.ba$Pk==1,1,0),
                                     ~^~
NO COPY: R/BWI3_HR.R:4891:54: style: Put spaces around all infix operators.
      stats::aggregate(baeume.ba$VolV1*baeume.ba$NHa1*ifelse(baeume.ba$Pk==1,1,0),
                                                    ~^~
NO COPY: R/BWI3_HR.R:4891:74: style: Put spaces around all infix operators.
      stats::aggregate(baeume.ba$VolV1*baeume.ba$NHa1*ifelse(baeume.ba$Pk==1,1,0),
                                                                        ~^~~
NO COPY: R/BWI3_HR.R:4891:78: style: Commas should always have a space after.
      stats::aggregate(baeume.ba$VolV1*baeume.ba$NHa1*ifelse(baeume.ba$Pk==1,1,0),
                                                                             ^
NO COPY: R/BWI3_HR.R:4891:80: style: Commas should always have a space after.
      stats::aggregate(baeume.ba$VolV1*baeume.ba$NHa1*ifelse(baeume.ba$Pk==1,1,0),
                                                                               ^
NO COPY: R/BWI3_HR.R:4892:9: style: Put spaces around all infix operators.
      by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
       ~^~
NO COPY: R/BWI3_HR.R:4892:29: style: Commas should always have a space after.
      by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                            ^
NO COPY: R/BWI3_HR.R:4892:39: style: Variable and function names should be all lowercase.
      by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                      ^~~~
NO COPY: R/BWI3_HR.R:4892:44: style: Commas should always have a space after.
      by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                           ^
NO COPY: R/BWI3_HR.R:4892:58: style: Commas should always have a space after.
      by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                                         ^
NO COPY: R/BWI3_HR.R:4892:73: style: Commas should always have a space after.
      by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                                                        ^
NO COPY: R/BWI3_HR.R:4893:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.a.t <- cbind(iv.a.t,
  ^~~~~~
NO COPY: R/BWI3_HR.R:4893:19: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.a.t <- cbind(iv.a.t,
                  ^~~~~~
NO COPY: R/BWI3_HR.R:4894:34: style: Variable and function names should be all lowercase.
      stats::aggregate(baeume.ba$VolV1*baeume.ba$NHa1
                                 ^~~~~
NO COPY: R/BWI3_HR.R:4894:39: style: Put spaces around all infix operators.
      stats::aggregate(baeume.ba$VolV1*baeume.ba$NHa1
                                     ~^~
NO COPY: R/BWI3_HR.R:4895:7: style: Put spaces around all infix operators.
      *ifelse(baeume.ba$Pk%in%c(2:5,9),1,0),
      ^~
NO COPY: R/BWI3_HR.R:4895:27: style: Put spaces around all infix operators.
      *ifelse(baeume.ba$Pk%in%c(2:5,9),1,0),
                         ~^~~~~
NO COPY: R/BWI3_HR.R:4895:37: style: Commas should always have a space after.
      *ifelse(baeume.ba$Pk%in%c(2:5,9),1,0),
                                    ^
NO COPY: R/BWI3_HR.R:4895:40: style: Commas should always have a space after.
      *ifelse(baeume.ba$Pk%in%c(2:5,9),1,0),
                                       ^
NO COPY: R/BWI3_HR.R:4895:42: style: Commas should always have a space after.
      *ifelse(baeume.ba$Pk%in%c(2:5,9),1,0),
                                         ^
NO COPY: R/BWI3_HR.R:4896:9: style: Put spaces around all infix operators.
      by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
       ~^~
NO COPY: R/BWI3_HR.R:4896:29: style: Commas should always have a space after.
      by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                            ^
NO COPY: R/BWI3_HR.R:4896:39: style: Variable and function names should be all lowercase.
      by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                      ^~~~
NO COPY: R/BWI3_HR.R:4896:44: style: Commas should always have a space after.
      by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                           ^
NO COPY: R/BWI3_HR.R:4896:58: style: Commas should always have a space after.
      by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                                         ^
NO COPY: R/BWI3_HR.R:4896:73: style: Commas should always have a space after.
      by=list(baeume.ba$TNr,baeume.ba$BaGr,baeume.ba$akl,baeume.ba$dkl),sum)$x)
                                                                        ^
NO COPY: R/BWI3_HR.R:4899:9: style: Words within variable and function names should be separated by '_' rather than '.'.
  names(iv.a.t) <- c("TNr","BaGr","Akl","Dkl","iV.DhmR.A","iV.DhmR.HB.A",
        ^~~~~~
NO COPY: R/BWI3_HR.R:4899:28: style: Commas should always have a space after.
  names(iv.a.t) <- c("TNr","BaGr","Akl","Dkl","iV.DhmR.A","iV.DhmR.HB.A",
                           ^
NO COPY: R/BWI3_HR.R:4899:35: style: Commas should always have a space after.
  names(iv.a.t) <- c("TNr","BaGr","Akl","Dkl","iV.DhmR.A","iV.DhmR.HB.A",
                                  ^
NO COPY: R/BWI3_HR.R:4899:41: style: Commas should always have a space after.
  names(iv.a.t) <- c("TNr","BaGr","Akl","Dkl","iV.DhmR.A","iV.DhmR.HB.A",
                                        ^
NO COPY: R/BWI3_HR.R:4899:47: style: Commas should always have a space after.
  names(iv.a.t) <- c("TNr","BaGr","Akl","Dkl","iV.DhmR.A","iV.DhmR.HB.A",
                                              ^
NO COPY: R/BWI3_HR.R:4899:59: style: Commas should always have a space after.
  names(iv.a.t) <- c("TNr","BaGr","Akl","Dkl","iV.DhmR.A","iV.DhmR.HB.A",
                                                          ^
NO COPY: R/BWI3_HR.R:4900:16: style: Commas should always have a space after.
    "V.DhmR.A","V.DhmR.HB.A","iV.EoR.A","V.EoR.A", "iB.A","B.A","iG.A","G.A",
               ^
NO COPY: R/BWI3_HR.R:4900:30: style: Commas should always have a space after.
    "V.DhmR.A","V.DhmR.HB.A","iV.EoR.A","V.EoR.A", "iB.A","B.A","iG.A","G.A",
                             ^
NO COPY: R/BWI3_HR.R:4900:41: style: Commas should always have a space after.
    "V.DhmR.A","V.DhmR.HB.A","iV.EoR.A","V.EoR.A", "iB.A","B.A","iG.A","G.A",
                                        ^
NO COPY: R/BWI3_HR.R:4900:59: style: Commas should always have a space after.
    "V.DhmR.A","V.DhmR.HB.A","iV.EoR.A","V.EoR.A", "iB.A","B.A","iG.A","G.A",
                                                          ^
NO COPY: R/BWI3_HR.R:4900:65: style: Commas should always have a space after.
    "V.DhmR.A","V.DhmR.HB.A","iV.EoR.A","V.EoR.A", "iB.A","B.A","iG.A","G.A",
                                                                ^
NO COPY: R/BWI3_HR.R:4900:72: style: Commas should always have a space after.
    "V.DhmR.A","V.DhmR.HB.A","iV.EoR.A","V.EoR.A", "iB.A","B.A","iG.A","G.A",
                                                                       ^
NO COPY: R/BWI3_HR.R:4901:12: style: Commas should always have a space after.
    "BAF1","V.DhmR.S1","V.DhmR.A1")
           ^
NO COPY: R/BWI3_HR.R:4901:24: style: Commas should always have a space after.
    "BAF1","V.DhmR.S1","V.DhmR.A1")
                       ^
NO COPY: R/BWI3_HR.R:4902:15: style: Words within variable and function names should be separated by '_' rather than '.'.
  utils::head(iv.a.t)
              ^~~~~~
NO COPY: R/BWI3_HR.R:4904:1: style: lines should not be more than 80 characters.
  iv.es.a.t <- merge(iv.es.t,iv.a.t, by=c("TNr","BaGr","Akl","Dkl"),all.x=T,all.y=T)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:4904:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.a.t <- merge(iv.es.t,iv.a.t, by=c("TNr","BaGr","Akl","Dkl"),all.x=T,all.y=T)
  ^~~~~~~~~
NO COPY: R/BWI3_HR.R:4904:22: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.a.t <- merge(iv.es.t,iv.a.t, by=c("TNr","BaGr","Akl","Dkl"),all.x=T,all.y=T)
                     ^~~~~~~
NO COPY: R/BWI3_HR.R:4904:30: style: Commas should always have a space after.
  iv.es.a.t <- merge(iv.es.t,iv.a.t, by=c("TNr","BaGr","Akl","Dkl"),all.x=T,all.y=T)
                             ^
NO COPY: R/BWI3_HR.R:4904:30: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.a.t <- merge(iv.es.t,iv.a.t, by=c("TNr","BaGr","Akl","Dkl"),all.x=T,all.y=T)
                             ^~~~~~
NO COPY: R/BWI3_HR.R:4904:40: style: Put spaces around all infix operators.
  iv.es.a.t <- merge(iv.es.t,iv.a.t, by=c("TNr","BaGr","Akl","Dkl"),all.x=T,all.y=T)
                                      ~^~
NO COPY: R/BWI3_HR.R:4904:49: style: Commas should always have a space after.
  iv.es.a.t <- merge(iv.es.t,iv.a.t, by=c("TNr","BaGr","Akl","Dkl"),all.x=T,all.y=T)
                                                ^
NO COPY: R/BWI3_HR.R:4904:56: style: Commas should always have a space after.
  iv.es.a.t <- merge(iv.es.t,iv.a.t, by=c("TNr","BaGr","Akl","Dkl"),all.x=T,all.y=T)
                                                       ^
NO COPY: R/BWI3_HR.R:4904:62: style: Commas should always have a space after.
  iv.es.a.t <- merge(iv.es.t,iv.a.t, by=c("TNr","BaGr","Akl","Dkl"),all.x=T,all.y=T)
                                                             ^
NO COPY: R/BWI3_HR.R:4904:69: style: Commas should always have a space after.
  iv.es.a.t <- merge(iv.es.t,iv.a.t, by=c("TNr","BaGr","Akl","Dkl"),all.x=T,all.y=T)
                                                                    ^
NO COPY: R/BWI3_HR.R:4904:74: style: Put spaces around all infix operators.
  iv.es.a.t <- merge(iv.es.t,iv.a.t, by=c("TNr","BaGr","Akl","Dkl"),all.x=T,all.y=T)
                                                                        ~^~
NO COPY: R/BWI3_HR.R:4904:77: style: Commas should always have a space after.
  iv.es.a.t <- merge(iv.es.t,iv.a.t, by=c("TNr","BaGr","Akl","Dkl"),all.x=T,all.y=T)
                                                                            ^
NO COPY: R/BWI3_HR.R:4904:82: style: Put spaces around all infix operators.
  iv.es.a.t <- merge(iv.es.t,iv.a.t, by=c("TNr","BaGr","Akl","Dkl"),all.x=T,all.y=T)
                                                                                ~^~
NO COPY: R/BWI3_HR.R:4906:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.a.t[is.na(iv.es.a.t)] <- 0
  ^~~~~~~~~
NO COPY: R/BWI3_HR.R:4906:19: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.a.t[is.na(iv.es.a.t)] <- 0
                  ^~~~~~~~~
NO COPY: R/BWI3_HR.R:4907:10: style: Words within variable and function names should be separated by '_' rather than '.'.
  length(iv.es.a.t[,1])
         ^~~~~~~~~
NO COPY: R/BWI3_HR.R:4907:21: style: Commas should always have a space after.
  length(iv.es.a.t[,1])
                    ^
NO COPY: R/BWI3_HR.R:4910:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  nte.pl.t <- stats::aggregate(rep(1,length(ecken[,1])),by=list(ecken$TNr),sum)
  ^~~~~~~~
NO COPY: R/BWI3_HR.R:4910:38: style: Commas should always have a space after.
  nte.pl.t <- stats::aggregate(rep(1,length(ecken[,1])),by=list(ecken$TNr),sum)
                                     ^
NO COPY: R/BWI3_HR.R:4910:52: style: Commas should always have a space after.
  nte.pl.t <- stats::aggregate(rep(1,length(ecken[,1])),by=list(ecken$TNr),sum)
                                                   ^
NO COPY: R/BWI3_HR.R:4910:57: style: Commas should always have a space after.
  nte.pl.t <- stats::aggregate(rep(1,length(ecken[,1])),by=list(ecken$TNr),sum)
                                                        ^
NO COPY: R/BWI3_HR.R:4910:59: style: Put spaces around all infix operators.
  nte.pl.t <- stats::aggregate(rep(1,length(ecken[,1])),by=list(ecken$TNr),sum)
                                                         ~^~
NO COPY: R/BWI3_HR.R:4910:76: style: Commas should always have a space after.
  nte.pl.t <- stats::aggregate(rep(1,length(ecken[,1])),by=list(ecken$TNr),sum)
                                                                           ^
NO COPY: R/BWI3_HR.R:4911:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  nte.pl.t <- cbind(nte.pl.t,
  ^~~~~~~~
NO COPY: R/BWI3_HR.R:4911:21: style: Words within variable and function names should be separated by '_' rather than '.'.
  nte.pl.t <- cbind(nte.pl.t,
                    ^~~~~~~~
NO COPY: R/BWI3_HR.R:4912:48: style: Commas should always have a space after.
                     stats::aggregate(ecken$PL,by=list(ecken$TNr),mean)$x,
                                               ^
NO COPY: R/BWI3_HR.R:4912:50: style: Put spaces around all infix operators.
                     stats::aggregate(ecken$PL,by=list(ecken$TNr),mean)$x,
                                                ~^~
NO COPY: R/BWI3_HR.R:4912:67: style: Commas should always have a space after.
                     stats::aggregate(ecken$PL,by=list(ecken$TNr),mean)$x,
                                                                  ^
NO COPY: R/BWI3_HR.R:4913:51: style: Commas should always have a space after.
                     stats::aggregate(ecken$PLkal,by=list(ecken$TNr),mean)$x)
                                                  ^
NO COPY: R/BWI3_HR.R:4913:53: style: Put spaces around all infix operators.
                     stats::aggregate(ecken$PLkal,by=list(ecken$TNr),mean)$x)
                                                   ~^~
NO COPY: R/BWI3_HR.R:4913:70: style: Commas should always have a space after.
                     stats::aggregate(ecken$PLkal,by=list(ecken$TNr),mean)$x)
                                                                     ^
NO COPY: R/BWI3_HR.R:4914:9: style: Words within variable and function names should be separated by '_' rather than '.'.
  names(nte.pl.t) <- c("TNr","nTE","mPL","mPLkal")
        ^~~~~~~~
NO COPY: R/BWI3_HR.R:4914:30: style: Commas should always have a space after.
  names(nte.pl.t) <- c("TNr","nTE","mPL","mPLkal")
                             ^
NO COPY: R/BWI3_HR.R:4914:36: style: Commas should always have a space after.
  names(nte.pl.t) <- c("TNr","nTE","mPL","mPLkal")
                                   ^
NO COPY: R/BWI3_HR.R:4914:42: style: Commas should always have a space after.
  names(nte.pl.t) <- c("TNr","nTE","mPL","mPLkal")
                                         ^
NO COPY: R/BWI3_HR.R:4915:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.a.t <- merge(iv.es.a.t,nte.pl.t,by=c("TNr"),all.x=T)
  ^~~~~~~~~
NO COPY: R/BWI3_HR.R:4915:22: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.a.t <- merge(iv.es.a.t,nte.pl.t,by=c("TNr"),all.x=T)
                     ^~~~~~~~~
NO COPY: R/BWI3_HR.R:4915:32: style: Commas should always have a space after.
  iv.es.a.t <- merge(iv.es.a.t,nte.pl.t,by=c("TNr"),all.x=T)
                               ^
NO COPY: R/BWI3_HR.R:4915:32: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.a.t <- merge(iv.es.a.t,nte.pl.t,by=c("TNr"),all.x=T)
                               ^~~~~~~~
NO COPY: R/BWI3_HR.R:4915:41: style: Commas should always have a space after.
  iv.es.a.t <- merge(iv.es.a.t,nte.pl.t,by=c("TNr"),all.x=T)
                                        ^
NO COPY: R/BWI3_HR.R:4915:43: style: Put spaces around all infix operators.
  iv.es.a.t <- merge(iv.es.a.t,nte.pl.t,by=c("TNr"),all.x=T)
                                         ~^~
NO COPY: R/BWI3_HR.R:4915:53: style: Commas should always have a space after.
  iv.es.a.t <- merge(iv.es.a.t,nte.pl.t,by=c("TNr"),all.x=T)
                                                    ^
NO COPY: R/BWI3_HR.R:4915:58: style: Put spaces around all infix operators.
  iv.es.a.t <- merge(iv.es.a.t,nte.pl.t,by=c("TNr"),all.x=T)
                                                        ~^~
NO COPY: R/BWI3_HR.R:4920:6: style: Commented code should be removed.
  #  iv.es.a.t[is.na(iv.es.a.t)] <- 0
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:4922:15: style: Words within variable and function names should be separated by '_' rather than '.'.
  utils::head(iv.es.a.t)
              ^~~~~~~~~
NO COPY: R/BWI3_HR.R:4925:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.a.t$iV.DhmR <-
  ^~~~~~~~~
NO COPY: R/BWI3_HR.R:4925:13: style: Variable and function names should be all lowercase.
  iv.es.a.t$iV.DhmR <-
            ^~~~~~~
NO COPY: R/BWI3_HR.R:4926:1: style: lines should not be more than 80 characters.
  iv.es.a.t$iV.DhmR.S+iv.es.a.t$iV.DhmR.Es+iv.es.a.t$V.DhmR.E+iv.es.a.t$iV.DhmR.A
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:4926:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.a.t$iV.DhmR.S+iv.es.a.t$iV.DhmR.Es+iv.es.a.t$V.DhmR.E+iv.es.a.t$iV.DhmR.A
  ^~~~~~~~~
NO COPY: R/BWI3_HR.R:4926:13: style: Variable and function names should be all lowercase.
  iv.es.a.t$iV.DhmR.S+iv.es.a.t$iV.DhmR.Es+iv.es.a.t$V.DhmR.E+iv.es.a.t$iV.DhmR.A
            ^~~~~~~~~
NO COPY: R/BWI3_HR.R:4926:13: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.a.t$iV.DhmR.S+iv.es.a.t$iV.DhmR.Es+iv.es.a.t$V.DhmR.E+iv.es.a.t$iV.DhmR.A
            ^~~~~~~~~
NO COPY: R/BWI3_HR.R:4926:22: style: Put spaces around all infix operators.
  iv.es.a.t$iV.DhmR.S+iv.es.a.t$iV.DhmR.Es+iv.es.a.t$V.DhmR.E+iv.es.a.t$iV.DhmR.A
                    ~^~
NO COPY: R/BWI3_HR.R:4926:23: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.a.t$iV.DhmR.S+iv.es.a.t$iV.DhmR.Es+iv.es.a.t$V.DhmR.E+iv.es.a.t$iV.DhmR.A
                      ^~~~~~~~~
NO COPY: R/BWI3_HR.R:4926:33: style: Variable and function names should be all lowercase.
  iv.es.a.t$iV.DhmR.S+iv.es.a.t$iV.DhmR.Es+iv.es.a.t$V.DhmR.E+iv.es.a.t$iV.DhmR.A
                                ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:4926:33: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.a.t$iV.DhmR.S+iv.es.a.t$iV.DhmR.Es+iv.es.a.t$V.DhmR.E+iv.es.a.t$iV.DhmR.A
                                ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:4926:43: style: Put spaces around all infix operators.
  iv.es.a.t$iV.DhmR.S+iv.es.a.t$iV.DhmR.Es+iv.es.a.t$V.DhmR.E+iv.es.a.t$iV.DhmR.A
                                         ~^~
NO COPY: R/BWI3_HR.R:4926:44: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.a.t$iV.DhmR.S+iv.es.a.t$iV.DhmR.Es+iv.es.a.t$V.DhmR.E+iv.es.a.t$iV.DhmR.A
                                           ^~~~~~~~~
NO COPY: R/BWI3_HR.R:4926:54: style: Variable and function names should be all lowercase.
  iv.es.a.t$iV.DhmR.S+iv.es.a.t$iV.DhmR.Es+iv.es.a.t$V.DhmR.E+iv.es.a.t$iV.DhmR.A
                                                     ^~~~~~~~
NO COPY: R/BWI3_HR.R:4926:54: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.a.t$iV.DhmR.S+iv.es.a.t$iV.DhmR.Es+iv.es.a.t$V.DhmR.E+iv.es.a.t$iV.DhmR.A
                                                     ^~~~~~~~
NO COPY: R/BWI3_HR.R:4926:62: style: Put spaces around all infix operators.
  iv.es.a.t$iV.DhmR.S+iv.es.a.t$iV.DhmR.Es+iv.es.a.t$V.DhmR.E+iv.es.a.t$iV.DhmR.A
                                                            ~^~
NO COPY: R/BWI3_HR.R:4926:63: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.a.t$iV.DhmR.S+iv.es.a.t$iV.DhmR.Es+iv.es.a.t$V.DhmR.E+iv.es.a.t$iV.DhmR.A
                                                              ^~~~~~~~~
NO COPY: R/BWI3_HR.R:4926:73: style: Variable and function names should be all lowercase.
  iv.es.a.t$iV.DhmR.S+iv.es.a.t$iV.DhmR.Es+iv.es.a.t$V.DhmR.E+iv.es.a.t$iV.DhmR.A
                                                                        ^~~~~~~~~
NO COPY: R/BWI3_HR.R:4926:73: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.a.t$iV.DhmR.S+iv.es.a.t$iV.DhmR.Es+iv.es.a.t$V.DhmR.E+iv.es.a.t$iV.DhmR.A
                                                                        ^~~~~~~~~
NO COPY: R/BWI3_HR.R:4927:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.a.t$iV.DhmR.HB <-
  ^~~~~~~~~
NO COPY: R/BWI3_HR.R:4927:13: style: Variable and function names should be all lowercase.
  iv.es.a.t$iV.DhmR.HB <-
            ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:4927:13: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.a.t$iV.DhmR.HB <-
            ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:4928:1: style: lines should not be more than 80 characters.
  iv.es.a.t$iV.DhmR.HB.S+iv.es.a.t$iV.DhmR.HB.Es+iv.es.a.t$V.DhmR.HB.E+iv.es.a.t$iV.DhmR.HB.A
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:4928:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.a.t$iV.DhmR.HB.S+iv.es.a.t$iV.DhmR.HB.Es+iv.es.a.t$V.DhmR.HB.E+iv.es.a.t$iV.DhmR.HB.A
  ^~~~~~~~~
NO COPY: R/BWI3_HR.R:4928:13: style: Variable and function names should be all lowercase.
  iv.es.a.t$iV.DhmR.HB.S+iv.es.a.t$iV.DhmR.HB.Es+iv.es.a.t$V.DhmR.HB.E+iv.es.a.t$iV.DhmR.HB.A
            ^~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:4928:13: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.a.t$iV.DhmR.HB.S+iv.es.a.t$iV.DhmR.HB.Es+iv.es.a.t$V.DhmR.HB.E+iv.es.a.t$iV.DhmR.HB.A
            ^~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:4928:25: style: Put spaces around all infix operators.
  iv.es.a.t$iV.DhmR.HB.S+iv.es.a.t$iV.DhmR.HB.Es+iv.es.a.t$V.DhmR.HB.E+iv.es.a.t$iV.DhmR.HB.A
                       ~^~
NO COPY: R/BWI3_HR.R:4928:26: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.a.t$iV.DhmR.HB.S+iv.es.a.t$iV.DhmR.HB.Es+iv.es.a.t$V.DhmR.HB.E+iv.es.a.t$iV.DhmR.HB.A
                         ^~~~~~~~~
NO COPY: R/BWI3_HR.R:4928:36: style: Variable and function names should be all lowercase.
  iv.es.a.t$iV.DhmR.HB.S+iv.es.a.t$iV.DhmR.HB.Es+iv.es.a.t$V.DhmR.HB.E+iv.es.a.t$iV.DhmR.HB.A
                                   ^~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:4928:36: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.a.t$iV.DhmR.HB.S+iv.es.a.t$iV.DhmR.HB.Es+iv.es.a.t$V.DhmR.HB.E+iv.es.a.t$iV.DhmR.HB.A
                                   ^~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:4928:49: style: Put spaces around all infix operators.
  iv.es.a.t$iV.DhmR.HB.S+iv.es.a.t$iV.DhmR.HB.Es+iv.es.a.t$V.DhmR.HB.E+iv.es.a.t$iV.DhmR.HB.A
                                               ~^~
NO COPY: R/BWI3_HR.R:4928:50: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.a.t$iV.DhmR.HB.S+iv.es.a.t$iV.DhmR.HB.Es+iv.es.a.t$V.DhmR.HB.E+iv.es.a.t$iV.DhmR.HB.A
                                                 ^~~~~~~~~
NO COPY: R/BWI3_HR.R:4928:60: style: Variable and function names should be all lowercase.
  iv.es.a.t$iV.DhmR.HB.S+iv.es.a.t$iV.DhmR.HB.Es+iv.es.a.t$V.DhmR.HB.E+iv.es.a.t$iV.DhmR.HB.A
                                                           ^~~~~~~~~~~
NO COPY: R/BWI3_HR.R:4928:60: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.a.t$iV.DhmR.HB.S+iv.es.a.t$iV.DhmR.HB.Es+iv.es.a.t$V.DhmR.HB.E+iv.es.a.t$iV.DhmR.HB.A
                                                           ^~~~~~~~~~~
NO COPY: R/BWI3_HR.R:4928:71: style: Put spaces around all infix operators.
  iv.es.a.t$iV.DhmR.HB.S+iv.es.a.t$iV.DhmR.HB.Es+iv.es.a.t$V.DhmR.HB.E+iv.es.a.t$iV.DhmR.HB.A
                                                                     ~^~
NO COPY: R/BWI3_HR.R:4928:72: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.a.t$iV.DhmR.HB.S+iv.es.a.t$iV.DhmR.HB.Es+iv.es.a.t$V.DhmR.HB.E+iv.es.a.t$iV.DhmR.HB.A
                                                                       ^~~~~~~~~
NO COPY: R/BWI3_HR.R:4928:82: style: Variable and function names should be all lowercase.
  iv.es.a.t$iV.DhmR.HB.S+iv.es.a.t$iV.DhmR.HB.Es+iv.es.a.t$V.DhmR.HB.E+iv.es.a.t$iV.DhmR.HB.A
                                                                                 ^~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:4928:82: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.a.t$iV.DhmR.HB.S+iv.es.a.t$iV.DhmR.HB.Es+iv.es.a.t$V.DhmR.HB.E+iv.es.a.t$iV.DhmR.HB.A
                                                                                 ^~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:4929:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.a.t$iV.EoR <-
  ^~~~~~~~~
NO COPY: R/BWI3_HR.R:4929:13: style: Variable and function names should be all lowercase.
  iv.es.a.t$iV.EoR <-
            ^~~~~~
NO COPY: R/BWI3_HR.R:4930:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.a.t$iV.EoR.S+iv.es.a.t$iV.EoR.Es+iv.es.a.t$V.EoR.E+iv.es.a.t$iV.EoR.A
  ^~~~~~~~~
NO COPY: R/BWI3_HR.R:4930:13: style: Variable and function names should be all lowercase.
  iv.es.a.t$iV.EoR.S+iv.es.a.t$iV.EoR.Es+iv.es.a.t$V.EoR.E+iv.es.a.t$iV.EoR.A
            ^~~~~~~~
NO COPY: R/BWI3_HR.R:4930:13: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.a.t$iV.EoR.S+iv.es.a.t$iV.EoR.Es+iv.es.a.t$V.EoR.E+iv.es.a.t$iV.EoR.A
            ^~~~~~~~
NO COPY: R/BWI3_HR.R:4930:21: style: Put spaces around all infix operators.
  iv.es.a.t$iV.EoR.S+iv.es.a.t$iV.EoR.Es+iv.es.a.t$V.EoR.E+iv.es.a.t$iV.EoR.A
                   ~^~
NO COPY: R/BWI3_HR.R:4930:22: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.a.t$iV.EoR.S+iv.es.a.t$iV.EoR.Es+iv.es.a.t$V.EoR.E+iv.es.a.t$iV.EoR.A
                     ^~~~~~~~~
NO COPY: R/BWI3_HR.R:4930:32: style: Variable and function names should be all lowercase.
  iv.es.a.t$iV.EoR.S+iv.es.a.t$iV.EoR.Es+iv.es.a.t$V.EoR.E+iv.es.a.t$iV.EoR.A
                               ^~~~~~~~~
NO COPY: R/BWI3_HR.R:4930:32: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.a.t$iV.EoR.S+iv.es.a.t$iV.EoR.Es+iv.es.a.t$V.EoR.E+iv.es.a.t$iV.EoR.A
                               ^~~~~~~~~
NO COPY: R/BWI3_HR.R:4930:41: style: Put spaces around all infix operators.
  iv.es.a.t$iV.EoR.S+iv.es.a.t$iV.EoR.Es+iv.es.a.t$V.EoR.E+iv.es.a.t$iV.EoR.A
                                       ~^~
NO COPY: R/BWI3_HR.R:4930:42: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.a.t$iV.EoR.S+iv.es.a.t$iV.EoR.Es+iv.es.a.t$V.EoR.E+iv.es.a.t$iV.EoR.A
                                         ^~~~~~~~~
NO COPY: R/BWI3_HR.R:4930:52: style: Variable and function names should be all lowercase.
  iv.es.a.t$iV.EoR.S+iv.es.a.t$iV.EoR.Es+iv.es.a.t$V.EoR.E+iv.es.a.t$iV.EoR.A
                                                   ^~~~~~~
NO COPY: R/BWI3_HR.R:4930:52: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.a.t$iV.EoR.S+iv.es.a.t$iV.EoR.Es+iv.es.a.t$V.EoR.E+iv.es.a.t$iV.EoR.A
                                                   ^~~~~~~
NO COPY: R/BWI3_HR.R:4930:59: style: Put spaces around all infix operators.
  iv.es.a.t$iV.EoR.S+iv.es.a.t$iV.EoR.Es+iv.es.a.t$V.EoR.E+iv.es.a.t$iV.EoR.A
                                                         ~^~
NO COPY: R/BWI3_HR.R:4930:60: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.a.t$iV.EoR.S+iv.es.a.t$iV.EoR.Es+iv.es.a.t$V.EoR.E+iv.es.a.t$iV.EoR.A
                                                           ^~~~~~~~~
NO COPY: R/BWI3_HR.R:4930:70: style: Variable and function names should be all lowercase.
  iv.es.a.t$iV.EoR.S+iv.es.a.t$iV.EoR.Es+iv.es.a.t$V.EoR.E+iv.es.a.t$iV.EoR.A
                                                                     ^~~~~~~~
NO COPY: R/BWI3_HR.R:4930:70: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.a.t$iV.EoR.S+iv.es.a.t$iV.EoR.Es+iv.es.a.t$V.EoR.E+iv.es.a.t$iV.EoR.A
                                                                     ^~~~~~~~
NO COPY: R/BWI3_HR.R:4932:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.a.t$iB <-
  ^~~~~~~~~
NO COPY: R/BWI3_HR.R:4932:13: style: Variable and function names should be all lowercase.
  iv.es.a.t$iB <-
            ^~
NO COPY: R/BWI3_HR.R:4933:4: style: Words within variable and function names should be separated by '_' rather than '.'.
  (iv.es.a.t$iB.S + iv.es.a.t$iB.Es + iv.es.a.t$B.E  + iv.es.a.t$iB.A)/1000
   ^~~~~~~~~
NO COPY: R/BWI3_HR.R:4933:14: style: Variable and function names should be all lowercase.
  (iv.es.a.t$iB.S + iv.es.a.t$iB.Es + iv.es.a.t$B.E  + iv.es.a.t$iB.A)/1000
             ^~~~
NO COPY: R/BWI3_HR.R:4933:21: style: Words within variable and function names should be separated by '_' rather than '.'.
  (iv.es.a.t$iB.S + iv.es.a.t$iB.Es + iv.es.a.t$B.E  + iv.es.a.t$iB.A)/1000
                    ^~~~~~~~~
NO COPY: R/BWI3_HR.R:4933:31: style: Variable and function names should be all lowercase.
  (iv.es.a.t$iB.S + iv.es.a.t$iB.Es + iv.es.a.t$B.E  + iv.es.a.t$iB.A)/1000
                              ^~~~~
NO COPY: R/BWI3_HR.R:4933:39: style: Words within variable and function names should be separated by '_' rather than '.'.
  (iv.es.a.t$iB.S + iv.es.a.t$iB.Es + iv.es.a.t$B.E  + iv.es.a.t$iB.A)/1000
                                      ^~~~~~~~~
NO COPY: R/BWI3_HR.R:4933:56: style: Words within variable and function names should be separated by '_' rather than '.'.
  (iv.es.a.t$iB.S + iv.es.a.t$iB.Es + iv.es.a.t$B.E  + iv.es.a.t$iB.A)/1000
                                                       ^~~~~~~~~
NO COPY: R/BWI3_HR.R:4933:66: style: Variable and function names should be all lowercase.
  (iv.es.a.t$iB.S + iv.es.a.t$iB.Es + iv.es.a.t$B.E  + iv.es.a.t$iB.A)/1000
                                                                 ^~~~
NO COPY: R/BWI3_HR.R:4933:71: style: Put spaces around all infix operators.
  (iv.es.a.t$iB.S + iv.es.a.t$iB.Es + iv.es.a.t$B.E  + iv.es.a.t$iB.A)/1000
                                                                     ~^~
NO COPY: R/BWI3_HR.R:4934:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.a.t$B.A <- iv.es.a.t$B.A/1000
  ^~~~~~~~~
NO COPY: R/BWI3_HR.R:4934:20: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.a.t$B.A <- iv.es.a.t$B.A/1000
                   ^~~~~~~~~
NO COPY: R/BWI3_HR.R:4934:33: style: Put spaces around all infix operators.
  iv.es.a.t$B.A <- iv.es.a.t$B.A/1000
                               ~^~
NO COPY: R/BWI3_HR.R:4936:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.a.t$iG <-
  ^~~~~~~~~
NO COPY: R/BWI3_HR.R:4936:13: style: Variable and function names should be all lowercase.
  iv.es.a.t$iG <-
            ^~
NO COPY: R/BWI3_HR.R:4937:4: style: Words within variable and function names should be separated by '_' rather than '.'.
  (iv.es.a.t$iG.S + iv.es.a.t$iG.Es + iv.es.a.t$G.E  + iv.es.a.t$iG.A)
   ^~~~~~~~~
NO COPY: R/BWI3_HR.R:4937:14: style: Variable and function names should be all lowercase.
  (iv.es.a.t$iG.S + iv.es.a.t$iG.Es + iv.es.a.t$G.E  + iv.es.a.t$iG.A)
             ^~~~
NO COPY: R/BWI3_HR.R:4937:21: style: Words within variable and function names should be separated by '_' rather than '.'.
  (iv.es.a.t$iG.S + iv.es.a.t$iG.Es + iv.es.a.t$G.E  + iv.es.a.t$iG.A)
                    ^~~~~~~~~
NO COPY: R/BWI3_HR.R:4937:31: style: Variable and function names should be all lowercase.
  (iv.es.a.t$iG.S + iv.es.a.t$iG.Es + iv.es.a.t$G.E  + iv.es.a.t$iG.A)
                              ^~~~~
NO COPY: R/BWI3_HR.R:4937:39: style: Words within variable and function names should be separated by '_' rather than '.'.
  (iv.es.a.t$iG.S + iv.es.a.t$iG.Es + iv.es.a.t$G.E  + iv.es.a.t$iG.A)
                                      ^~~~~~~~~
NO COPY: R/BWI3_HR.R:4937:56: style: Words within variable and function names should be separated by '_' rather than '.'.
  (iv.es.a.t$iG.S + iv.es.a.t$iG.Es + iv.es.a.t$G.E  + iv.es.a.t$iG.A)
                                                       ^~~~~~~~~
NO COPY: R/BWI3_HR.R:4937:66: style: Variable and function names should be all lowercase.
  (iv.es.a.t$iG.S + iv.es.a.t$iG.Es + iv.es.a.t$G.E  + iv.es.a.t$iG.A)
                                                                 ^~~~
NO COPY: R/BWI3_HR.R:4940:24: style: Commas should always have a space after.
  hbf <- length(ecken[,1]) #ohne REF!!!
                       ^
NO COPY: R/BWI3_HR.R:4941:14: style: Put spaces around all infix operators.
  lk.2 <- hbf/sum(baeume.folg$StFl2[baeume.folg$Pk!=8])*10000
            ~^~
NO COPY: R/BWI3_HR.R:4941:31: style: Variable and function names should be all lowercase.
  lk.2 <- hbf/sum(baeume.folg$StFl2[baeume.folg$Pk!=8])*10000
                              ^~~~~
NO COPY: R/BWI3_HR.R:4941:51: style: Put spaces around all infix operators.
  lk.2 <- hbf/sum(baeume.folg$StFl2[baeume.folg$Pk!=8])*10000
                                                 ~^~~
NO COPY: R/BWI3_HR.R:4941:56: style: Put spaces around all infix operators.
  lk.2 <- hbf/sum(baeume.folg$StFl2[baeume.folg$Pk!=8])*10000
                                                      ~^~
NO COPY: R/BWI3_HR.R:4942:14: style: Put spaces around all infix operators.
  lk.1 <- hbf/sum(baeume.vor$StFl1[baeume.vor$Pk!=8])*10000
            ~^~
NO COPY: R/BWI3_HR.R:4942:30: style: Variable and function names should be all lowercase.
  lk.1 <- hbf/sum(baeume.vor$StFl1[baeume.vor$Pk!=8])*10000
                             ^~~~~
NO COPY: R/BWI3_HR.R:4942:49: style: Put spaces around all infix operators.
  lk.1 <- hbf/sum(baeume.vor$StFl1[baeume.vor$Pk!=8])*10000
                                               ~^~~
NO COPY: R/BWI3_HR.R:4942:54: style: Put spaces around all infix operators.
  lk.1 <- hbf/sum(baeume.vor$StFl1[baeume.vor$Pk!=8])*10000
                                                    ~^~
NO COPY: R/BWI3_HR.R:4943:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.a.t$mBAF <- (iv.es.a.t$BAF1*lk.1+iv.es.a.t$BAF2*lk.2)/2
  ^~~~~~~~~
NO COPY: R/BWI3_HR.R:4943:13: style: Variable and function names should be all lowercase.
  iv.es.a.t$mBAF <- (iv.es.a.t$BAF1*lk.1+iv.es.a.t$BAF2*lk.2)/2
            ^~~~
NO COPY: R/BWI3_HR.R:4943:22: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.a.t$mBAF <- (iv.es.a.t$BAF1*lk.1+iv.es.a.t$BAF2*lk.2)/2
                     ^~~~~~~~~
NO COPY: R/BWI3_HR.R:4943:36: style: Put spaces around all infix operators.
  iv.es.a.t$mBAF <- (iv.es.a.t$BAF1*lk.1+iv.es.a.t$BAF2*lk.2)/2
                                  ~^~
NO COPY: R/BWI3_HR.R:4943:41: style: Put spaces around all infix operators.
  iv.es.a.t$mBAF <- (iv.es.a.t$BAF1*lk.1+iv.es.a.t$BAF2*lk.2)/2
                                       ~^~
NO COPY: R/BWI3_HR.R:4943:42: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.a.t$mBAF <- (iv.es.a.t$BAF1*lk.1+iv.es.a.t$BAF2*lk.2)/2
                                         ^~~~~~~~~
NO COPY: R/BWI3_HR.R:4943:56: style: Put spaces around all infix operators.
  iv.es.a.t$mBAF <- (iv.es.a.t$BAF1*lk.1+iv.es.a.t$BAF2*lk.2)/2
                                                      ~^~
NO COPY: R/BWI3_HR.R:4943:62: style: Put spaces around all infix operators.
  iv.es.a.t$mBAF <- (iv.es.a.t$BAF1*lk.1+iv.es.a.t$BAF2*lk.2)/2
                                                            ~^~
NO COPY: R/BWI3_HR.R:4944:1: style: lines should not be more than 80 characters.
  #Mitt. Baumartenfl\u00e4che OHNE L\u00fcckenkorrektur (Bezugsfl\u00e4che f\u00fcr Hauptbestand)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:4945:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  iv.es.a.t$mBAF.oLK <-
  ^~~~~~~~~
NO COPY: R/BWI3_HR.R:4945:13: style: Variable and function names should be all lowercase.
  iv.es.a.t$mBAF.oLK <-
            ^~~~~~~~
NO COPY: R/BWI3_HR.R:4946:10: style: Words within variable and function names should be separated by '_' rather than '.'.
        (iv.es.a.t$BAF1+iv.es.a.t$BAF2)/2
         ^~~~~~~~~
NO COPY: R/BWI3_HR.R:4946:24: style: Put spaces around all infix operators.
        (iv.es.a.t$BAF1+iv.es.a.t$BAF2)/2
                      ~^~
NO COPY: R/BWI3_HR.R:4946:25: style: Words within variable and function names should be separated by '_' rather than '.'.
        (iv.es.a.t$BAF1+iv.es.a.t$BAF2)/2
                        ^~~~~~~~~
NO COPY: R/BWI3_HR.R:4946:40: style: Put spaces around all infix operators.
        (iv.es.a.t$BAF1+iv.es.a.t$BAF2)/2
                                      ~^~
NO COPY: R/BWI3_HR.R:4949:10: style: Words within variable and function names should be separated by '_' rather than '.'.
  return(iv.es.a.t)
         ^~~~~~~~~
NO COPY: R/BWI3_HR.R:4968:29: style: Commas should always have a space after.
ba.klass.fun <- function(ba,ba.klass){
                            ^
NO COPY: R/BWI3_HR.R:4971:11: style: Put spaces around all infix operators.
    i <- i+1
         ~^~
NO COPY: R/BWI3_HR.R:4972:16: style: Put spaces around all infix operators.
    ba.in <- ba%in%ba.klass[[i]]
              ~^~~~~
NO COPY: R/BWI3_HR.R:4973:7: style: Place a space before left parenthesis, except in a function call.
    if(ba.in) {break}
      ^
NO COPY: R/BWI3_HR.R:4973:15: style: Opening curly braces should never go on their own line and should always be followed by a new line.
    if(ba.in) {break}
              ^
NO COPY: R/BWI3_HR.R:4973:21: style: Closing curly-braces should always be on their own line, unless it's followed by an else.
    if(ba.in) {break}
                    ^
NO COPY: R/BWI3_HR.R:4975:23: style: Commas should always have a space after.
  return(ifelse(ba.in,i,NA))
                      ^
NO COPY: R/BWI3_HR.R:4975:25: style: Commas should always have a space after.
  return(ifelse(ba.in,i,NA))
                        ^
NO COPY: R/BWI3_HR.R:4994:34: style: Words within variable and function names should be separated by '_' rather than '.'.
ba.klass.lab.tab.fun <- function(ba.lab.klass, bacodes = get_data("bacode")){
                                 ^~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:4995:26: style: Commas should always have a space after.
   n <-  length(bacodes[,1])
                         ^
NO COPY: R/BWI3_HR.R:4996:4: style: Words within variable and function names should be separated by '_' rather than '.'.
   ba.klass.tab <- data.frame(ICode=bacodes$ICode,bagr.nr=rep(0,n))
   ^~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:4996:36: style: Put spaces around all infix operators.
   ba.klass.tab <- data.frame(ICode=bacodes$ICode,bagr.nr=rep(0,n))
                                  ~^~
NO COPY: R/BWI3_HR.R:4996:51: style: Commas should always have a space after.
   ba.klass.tab <- data.frame(ICode=bacodes$ICode,bagr.nr=rep(0,n))
                                                  ^
NO COPY: R/BWI3_HR.R:4996:58: style: Put spaces around all infix operators.
   ba.klass.tab <- data.frame(ICode=bacodes$ICode,bagr.nr=rep(0,n))
                                                        ~^~
NO COPY: R/BWI3_HR.R:4996:65: style: Commas should always have a space after.
   ba.klass.tab <- data.frame(ICode=bacodes$ICode,bagr.nr=rep(0,n))
                                                                ^
NO COPY: R/BWI3_HR.R:4998:1: style: lines should not be more than 80 characters.
      ba.klass.tab$bagr.nr[i] <- ba.klass.fun(ba.klass.tab$ICode[i],ba.lab.klass[[2]])
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:4998:7: style: Words within variable and function names should be separated by '_' rather than '.'.
      ba.klass.tab$bagr.nr[i] <- ba.klass.fun(ba.klass.tab$ICode[i],ba.lab.klass[[2]])
      ^~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:4998:47: style: Words within variable and function names should be separated by '_' rather than '.'.
      ba.klass.tab$bagr.nr[i] <- ba.klass.fun(ba.klass.tab$ICode[i],ba.lab.klass[[2]])
                                              ^~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:4998:69: style: Commas should always have a space after.
      ba.klass.tab$bagr.nr[i] <- ba.klass.fun(ba.klass.tab$ICode[i],ba.lab.klass[[2]])
                                                                    ^
NO COPY: R/BWI3_HR.R:4998:69: style: Words within variable and function names should be separated by '_' rather than '.'.
      ba.klass.tab$bagr.nr[i] <- ba.klass.fun(ba.klass.tab$ICode[i],ba.lab.klass[[2]])
                                                                    ^~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:4999:1: style: lines should not be more than 80 characters.
      ba.klass.tab$bagr[i] <- as.character(ba.lab.klass[[1]][ba.klass.tab$bagr.nr[i]])
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:4999:7: style: Words within variable and function names should be separated by '_' rather than '.'.
      ba.klass.tab$bagr[i] <- as.character(ba.lab.klass[[1]][ba.klass.tab$bagr.nr[i]])
      ^~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:4999:44: style: Words within variable and function names should be separated by '_' rather than '.'.
      ba.klass.tab$bagr[i] <- as.character(ba.lab.klass[[1]][ba.klass.tab$bagr.nr[i]])
                                           ^~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:4999:62: style: Words within variable and function names should be separated by '_' rather than '.'.
      ba.klass.tab$bagr[i] <- as.character(ba.lab.klass[[1]][ba.klass.tab$bagr.nr[i]])
                                                             ^~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:5002:11: style: Words within variable and function names should be separated by '_' rather than '.'.
   return(ba.klass.tab)
          ^~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:5020:33: style: Commas should always have a space after.
dkl.lab.fun <- function(D.klass,D.k){
                                ^
NO COPY: R/BWI3_HR.R:5021:20: style: Commas should always have a space after.
  dkl.lab <- rep(0,D.k)
                   ^
NO COPY: R/BWI3_HR.R:5025:32: style: Commas should always have a space after.
      dkl.lab[2] <- paste("7-",D.klass[[3]]-0.1,sep="")
                               ^
NO COPY: R/BWI3_HR.R:5025:44: style: Put spaces around all infix operators.
      dkl.lab[2] <- paste("7-",D.klass[[3]]-0.1,sep="")
                                          ~^~
NO COPY: R/BWI3_HR.R:5025:49: style: Commas should always have a space after.
      dkl.lab[2] <- paste("7-",D.klass[[3]]-0.1,sep="")
                                                ^
NO COPY: R/BWI3_HR.R:5025:52: style: Put spaces around all infix operators.
      dkl.lab[2] <- paste("7-",D.klass[[3]]-0.1,sep="")
                                                  ~^~
NO COPY: R/BWI3_HR.R:5026:24: style: Put spaces around all infix operators.
      for (ii in 3:(D.k-1)){
                      ~^~
NO COPY: R/BWI3_HR.R:5027:30: style: Place a space before left parenthesis, except in a function call.
        dkl.lab[ii] <- paste((ii-2)*D.klass[[3]],"-",(ii-1)*D.klass[[3]]-0.1,
                             ^
NO COPY: R/BWI3_HR.R:5027:33: style: Put spaces around all infix operators.
        dkl.lab[ii] <- paste((ii-2)*D.klass[[3]],"-",(ii-1)*D.klass[[3]]-0.1,
                               ~^~
NO COPY: R/BWI3_HR.R:5027:36: style: Put spaces around all infix operators.
        dkl.lab[ii] <- paste((ii-2)*D.klass[[3]],"-",(ii-1)*D.klass[[3]]-0.1,
                                  ~^~
NO COPY: R/BWI3_HR.R:5027:50: style: Commas should always have a space after.
        dkl.lab[ii] <- paste((ii-2)*D.klass[[3]],"-",(ii-1)*D.klass[[3]]-0.1,
                                                 ^
NO COPY: R/BWI3_HR.R:5027:54: style: Commas should always have a space after.
        dkl.lab[ii] <- paste((ii-2)*D.klass[[3]],"-",(ii-1)*D.klass[[3]]-0.1,
                                                     ^
NO COPY: R/BWI3_HR.R:5027:54: style: Place a space before left parenthesis, except in a function call.
        dkl.lab[ii] <- paste((ii-2)*D.klass[[3]],"-",(ii-1)*D.klass[[3]]-0.1,
                                                     ^
NO COPY: R/BWI3_HR.R:5027:57: style: Put spaces around all infix operators.
        dkl.lab[ii] <- paste((ii-2)*D.klass[[3]],"-",(ii-1)*D.klass[[3]]-0.1,
                                                       ~^~
NO COPY: R/BWI3_HR.R:5027:60: style: Put spaces around all infix operators.
        dkl.lab[ii] <- paste((ii-2)*D.klass[[3]],"-",(ii-1)*D.klass[[3]]-0.1,
                                                          ~^~
NO COPY: R/BWI3_HR.R:5027:73: style: Put spaces around all infix operators.
        dkl.lab[ii] <- paste((ii-2)*D.klass[[3]],"-",(ii-1)*D.klass[[3]]-0.1,
                                                                       ~^~
NO COPY: R/BWI3_HR.R:5028:20: style: Put spaces around all infix operators.
                sep="")
                  ~^~
NO COPY: R/BWI3_HR.R:5031:24: style: Put spaces around all infix operators.
      for (ii in 1:(D.k-1)){
                      ~^~
NO COPY: R/BWI3_HR.R:5032:1: style: lines should not be more than 80 characters.
          dkl.lab[ii] <- paste(D.klass[[3]]*(ii-1),"-",D.klass[[3]]*ii-0.1,sep="")
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:5032:44: style: Put spaces around all infix operators.
          dkl.lab[ii] <- paste(D.klass[[3]]*(ii-1),"-",D.klass[[3]]*ii-0.1,sep="")
                                          ~^~
NO COPY: R/BWI3_HR.R:5032:45: style: Place a space before left parenthesis, except in a function call.
          dkl.lab[ii] <- paste(D.klass[[3]]*(ii-1),"-",D.klass[[3]]*ii-0.1,sep="")
                                            ^
NO COPY: R/BWI3_HR.R:5032:48: style: Put spaces around all infix operators.
          dkl.lab[ii] <- paste(D.klass[[3]]*(ii-1),"-",D.klass[[3]]*ii-0.1,sep="")
                                              ~^~
NO COPY: R/BWI3_HR.R:5032:52: style: Commas should always have a space after.
          dkl.lab[ii] <- paste(D.klass[[3]]*(ii-1),"-",D.klass[[3]]*ii-0.1,sep="")
                                                   ^
NO COPY: R/BWI3_HR.R:5032:56: style: Commas should always have a space after.
          dkl.lab[ii] <- paste(D.klass[[3]]*(ii-1),"-",D.klass[[3]]*ii-0.1,sep="")
                                                       ^
NO COPY: R/BWI3_HR.R:5032:68: style: Put spaces around all infix operators.
          dkl.lab[ii] <- paste(D.klass[[3]]*(ii-1),"-",D.klass[[3]]*ii-0.1,sep="")
                                                                  ~^~
NO COPY: R/BWI3_HR.R:5032:71: style: Put spaces around all infix operators.
          dkl.lab[ii] <- paste(D.klass[[3]]*(ii-1),"-",D.klass[[3]]*ii-0.1,sep="")
                                                                     ~^~
NO COPY: R/BWI3_HR.R:5032:76: style: Commas should always have a space after.
          dkl.lab[ii] <- paste(D.klass[[3]]*(ii-1),"-",D.klass[[3]]*ii-0.1,sep="")
                                                                           ^
NO COPY: R/BWI3_HR.R:5032:79: style: Put spaces around all infix operators.
          dkl.lab[ii] <- paste(D.klass[[3]]*(ii-1),"-",D.klass[[3]]*ii-0.1,sep="")
                                                                             ~^~
NO COPY: R/BWI3_HR.R:5034:35: style: Commas should always have a space after.
        dkl.lab[D.k] <- paste(">",D.klass[[1]],sep="")
                                  ^
NO COPY: R/BWI3_HR.R:5034:48: style: Commas should always have a space after.
        dkl.lab[D.k] <- paste(">",D.klass[[1]],sep="")
                                               ^
NO COPY: R/BWI3_HR.R:5034:51: style: Put spaces around all infix operators.
        dkl.lab[D.k] <- paste(">",D.klass[[1]],sep="")
                                                 ~^~
NO COPY: R/BWI3_HR.R:5036:32: style: Commas should always have a space after.
    dkl.lab[D.k] <- paste(">=",D.klass[[2]],sep="")
                               ^
NO COPY: R/BWI3_HR.R:5036:45: style: Commas should always have a space after.
    dkl.lab[D.k] <- paste(">=",D.klass[[2]],sep="")
                                            ^
NO COPY: R/BWI3_HR.R:5036:48: style: Put spaces around all infix operators.
    dkl.lab[D.k] <- paste(">=",D.klass[[2]],sep="")
                                              ~^~
NO COPY: R/BWI3_HR.R:5038:1: style: lines should not be more than 80 characters.
  {dkl.lab[D.k] <- paste(D.klass[[1]],"-",D.klass[[2]],sep="")} #k\u00e4/07.02.2015
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:5038:3: style: Opening curly braces should never go on their own line and should always be followed by a new line.
  {dkl.lab[D.k] <- paste(D.klass[[1]],"-",D.klass[[2]],sep="")} #k\u00e4/07.02.2015
  ^
NO COPY: R/BWI3_HR.R:5038:39: style: Commas should always have a space after.
  {dkl.lab[D.k] <- paste(D.klass[[1]],"-",D.klass[[2]],sep="")} #k\u00e4/07.02.2015
                                      ^
NO COPY: R/BWI3_HR.R:5038:43: style: Commas should always have a space after.
  {dkl.lab[D.k] <- paste(D.klass[[1]],"-",D.klass[[2]],sep="")} #k\u00e4/07.02.2015
                                          ^
NO COPY: R/BWI3_HR.R:5038:56: style: Commas should always have a space after.
  {dkl.lab[D.k] <- paste(D.klass[[1]],"-",D.klass[[2]],sep="")} #k\u00e4/07.02.2015
                                                       ^
NO COPY: R/BWI3_HR.R:5038:59: style: Put spaces around all infix operators.
  {dkl.lab[D.k] <- paste(D.klass[[1]],"-",D.klass[[2]],sep="")} #k\u00e4/07.02.2015
                                                         ~^~
NO COPY: R/BWI3_HR.R:5038:63: style: Closing curly-braces should always be on their own line, unless it's followed by an else.
  {dkl.lab[D.k] <- paste(D.klass[[1]],"-",D.klass[[2]],sep="")} #k\u00e4/07.02.2015
                                                              ^
NO COPY: R/BWI3_HR.R:5039:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: R/BWI3_HR.R:5056:33: style: Commas should always have a space after.
akl.lab.fun <- function(A.klass,A.k){
                                ^
NO COPY: R/BWI3_HR.R:5057:20: style: Commas should always have a space after.
  akl.lab <- rep(0,A.k)
                   ^
NO COPY: R/BWI3_HR.R:5059:22: style: Put spaces around all infix operators.
    for (ii in 1:(A.k-1)){
                    ~^~
NO COPY: R/BWI3_HR.R:5060:40: style: Put spaces around all infix operators.
      akl.lab[ii] <- paste(A.klass[[2]]*(ii-1)+1,"-",A.klass[[2]]*ii,sep="")
                                      ~^~
NO COPY: R/BWI3_HR.R:5060:41: style: Place a space before left parenthesis, except in a function call.
      akl.lab[ii] <- paste(A.klass[[2]]*(ii-1)+1,"-",A.klass[[2]]*ii,sep="")
                                        ^
NO COPY: R/BWI3_HR.R:5060:44: style: Put spaces around all infix operators.
      akl.lab[ii] <- paste(A.klass[[2]]*(ii-1)+1,"-",A.klass[[2]]*ii,sep="")
                                          ~^~
NO COPY: R/BWI3_HR.R:5060:47: style: Put spaces around all infix operators.
      akl.lab[ii] <- paste(A.klass[[2]]*(ii-1)+1,"-",A.klass[[2]]*ii,sep="")
                                             ~^~
NO COPY: R/BWI3_HR.R:5060:50: style: Commas should always have a space after.
      akl.lab[ii] <- paste(A.klass[[2]]*(ii-1)+1,"-",A.klass[[2]]*ii,sep="")
                                                 ^
NO COPY: R/BWI3_HR.R:5060:54: style: Commas should always have a space after.
      akl.lab[ii] <- paste(A.klass[[2]]*(ii-1)+1,"-",A.klass[[2]]*ii,sep="")
                                                     ^
NO COPY: R/BWI3_HR.R:5060:66: style: Put spaces around all infix operators.
      akl.lab[ii] <- paste(A.klass[[2]]*(ii-1)+1,"-",A.klass[[2]]*ii,sep="")
                                                                ~^~
NO COPY: R/BWI3_HR.R:5060:70: style: Commas should always have a space after.
      akl.lab[ii] <- paste(A.klass[[2]]*(ii-1)+1,"-",A.klass[[2]]*ii,sep="")
                                                                     ^
NO COPY: R/BWI3_HR.R:5060:73: style: Put spaces around all infix operators.
      akl.lab[ii] <- paste(A.klass[[2]]*(ii-1)+1,"-",A.klass[[2]]*ii,sep="")
                                                                       ~^~
NO COPY: R/BWI3_HR.R:5062:31: style: Commas should always have a space after.
    akl.lab[A.k] <- paste(">",A.klass[[1]],sep="")
                              ^
NO COPY: R/BWI3_HR.R:5062:44: style: Commas should always have a space after.
    akl.lab[A.k] <- paste(">",A.klass[[1]],sep="")
                                           ^
NO COPY: R/BWI3_HR.R:5062:47: style: Put spaces around all infix operators.
    akl.lab[A.k] <- paste(">",A.klass[[1]],sep="")
                                             ~^~
NO COPY: R/BWI3_HR.R:5063:9: style: Opening curly braces should never go on their own line and should always be followed by a new line.
  } else{akl.lab[A.k] <- paste("0-",A.klass[[1]],sep="")}
        ^
NO COPY: R/BWI3_HR.R:5063:37: style: Commas should always have a space after.
  } else{akl.lab[A.k] <- paste("0-",A.klass[[1]],sep="")}
                                    ^
NO COPY: R/BWI3_HR.R:5063:50: style: Commas should always have a space after.
  } else{akl.lab[A.k] <- paste("0-",A.klass[[1]],sep="")}
                                                 ^
NO COPY: R/BWI3_HR.R:5063:53: style: Put spaces around all infix operators.
  } else{akl.lab[A.k] <- paste("0-",A.klass[[1]],sep="")}
                                                   ~^~
NO COPY: R/BWI3_HR.R:5063:57: style: Closing curly-braces should always be on their own line, unless it's followed by an else.
  } else{akl.lab[A.k] <- paste("0-",A.klass[[1]],sep="")}
                                                        ^
NO COPY: R/BWI3_HR.R:5064:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: R/BWI3_HR.R:5083:25: style: Put spaces around all infix operators.
  return(data.frame(BAGR=c(vj.tab$BAGR,"Alle"),
                       ~^~
NO COPY: R/BWI3_HR.R:5083:40: style: Commas should always have a space after.
  return(data.frame(BAGR=c(vj.tab$BAGR,"Alle"),
                                       ^
NO COPY: R/BWI3_HR.R:5084:30: style: Put spaces around all infix operators.
    "St\u00fcckzahl_Verj_Mio"=round(vj.tab$n.Verjg.BAGR[1,1,]/1e6,3),
                            ~^~
NO COPY: R/BWI3_HR.R:5084:44: style: Words within variable and function names should be separated by '_' rather than '.'.
    "St\u00fcckzahl_Verj_Mio"=round(vj.tab$n.Verjg.BAGR[1,1,]/1e6,3),
                                           ^~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:5084:59: style: Commas should always have a space after.
    "St\u00fcckzahl_Verj_Mio"=round(vj.tab$n.Verjg.BAGR[1,1,]/1e6,3),
                                                          ^
NO COPY: R/BWI3_HR.R:5084:61: style: Commas should always have a space after.
    "St\u00fcckzahl_Verj_Mio"=round(vj.tab$n.Verjg.BAGR[1,1,]/1e6,3),
                                                            ^
NO COPY: R/BWI3_HR.R:5084:62: style: Put spaces around all infix operators.
    "St\u00fcckzahl_Verj_Mio"=round(vj.tab$n.Verjg.BAGR[1,1,]/1e6,3),
                                                            ~^~
NO COPY: R/BWI3_HR.R:5084:67: style: Commas should always have a space after.
    "St\u00fcckzahl_Verj_Mio"=round(vj.tab$n.Verjg.BAGR[1,1,]/1e6,3),
                                                                  ^
NO COPY: R/BWI3_HR.R:5085:33: style: Put spaces around all infix operators.
    "SE_St\u00fcckzahl_Verj_Mio"=round(vj.tab$n.Verjg.BAGR[1,2,]/1e6,3),
                               ~^~
NO COPY: R/BWI3_HR.R:5085:47: style: Words within variable and function names should be separated by '_' rather than '.'.
    "SE_St\u00fcckzahl_Verj_Mio"=round(vj.tab$n.Verjg.BAGR[1,2,]/1e6,3),
                                              ^~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:5085:62: style: Commas should always have a space after.
    "SE_St\u00fcckzahl_Verj_Mio"=round(vj.tab$n.Verjg.BAGR[1,2,]/1e6,3),
                                                             ^
NO COPY: R/BWI3_HR.R:5085:64: style: Commas should always have a space after.
    "SE_St\u00fcckzahl_Verj_Mio"=round(vj.tab$n.Verjg.BAGR[1,2,]/1e6,3),
                                                               ^
NO COPY: R/BWI3_HR.R:5085:65: style: Put spaces around all infix operators.
    "SE_St\u00fcckzahl_Verj_Mio"=round(vj.tab$n.Verjg.BAGR[1,2,]/1e6,3),
                                                               ~^~
NO COPY: R/BWI3_HR.R:5085:70: style: Commas should always have a space after.
    "SE_St\u00fcckzahl_Verj_Mio"=round(vj.tab$n.Verjg.BAGR[1,2,]/1e6,3),
                                                                     ^
NO COPY: R/BWI3_HR.R:5086:32: style: Words within variable and function names should be separated by '_' rather than '.'.
    Anteil_Proz = round(vj.tab$n.Verjg.BAGR[2,1,],1),
                               ^~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:5086:47: style: Commas should always have a space after.
    Anteil_Proz = round(vj.tab$n.Verjg.BAGR[2,1,],1),
                                              ^
NO COPY: R/BWI3_HR.R:5086:49: style: Commas should always have a space after.
    Anteil_Proz = round(vj.tab$n.Verjg.BAGR[2,1,],1),
                                                ^
NO COPY: R/BWI3_HR.R:5086:51: style: Commas should always have a space after.
    Anteil_Proz = round(vj.tab$n.Verjg.BAGR[2,1,],1),
                                                  ^
NO COPY: R/BWI3_HR.R:5087:35: style: Words within variable and function names should be separated by '_' rather than '.'.
    SE_Anteil_Proz = round(vj.tab$n.Verjg.BAGR[2,2,],2) ))
                                  ^~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:5087:50: style: Commas should always have a space after.
    SE_Anteil_Proz = round(vj.tab$n.Verjg.BAGR[2,2,],2) ))
                                                 ^
NO COPY: R/BWI3_HR.R:5087:52: style: Commas should always have a space after.
    SE_Anteil_Proz = round(vj.tab$n.Verjg.BAGR[2,2,],2) ))
                                                   ^
NO COPY: R/BWI3_HR.R:5087:54: style: Commas should always have a space after.
    SE_Anteil_Proz = round(vj.tab$n.Verjg.BAGR[2,2,],2) ))
                                                     ^
NO COPY: R/BWI3_HR.R:5129:55: style: Commas should always have a space after.
stamm.merkmale.bagr.akl.fun <- function(wzp4.merkmale,baeume,ecken,trakte,A,
                                                      ^
NO COPY: R/BWI3_HR.R:5129:62: style: Commas should always have a space after.
stamm.merkmale.bagr.akl.fun <- function(wzp4.merkmale,baeume,ecken,trakte,A,
                                                             ^
NO COPY: R/BWI3_HR.R:5129:68: style: Commas should always have a space after.
stamm.merkmale.bagr.akl.fun <- function(wzp4.merkmale,baeume,ecken,trakte,A,
                                                                   ^
NO COPY: R/BWI3_HR.R:5129:75: style: Commas should always have a space after.
stamm.merkmale.bagr.akl.fun <- function(wzp4.merkmale,baeume,ecken,trakte,A,
                                                                          ^
NO COPY: R/BWI3_HR.R:5130:45: style: Commas should always have a space after.
                                    auswahl,merkmale,ba.grupp,A.klass,
                                            ^
NO COPY: R/BWI3_HR.R:5130:54: style: Commas should always have a space after.
                                    auswahl,merkmale,ba.grupp,A.klass,
                                                     ^
NO COPY: R/BWI3_HR.R:5130:63: style: Commas should always have a space after.
                                    auswahl,merkmale,ba.grupp,A.klass,
                                                              ^
NO COPY: R/BWI3_HR.R:5133:1: style: Opening curly braces should never go on their own line and should always be followed by a new line.
{
^
NO COPY: R/BWI3_HR.R:5138:34: style: Commas should always have a space after.
  stratum <- stratum.fun(auswahl,ecken)
                                 ^
NO COPY: R/BWI3_HR.R:5144:1: style: lines should not be more than 80 characters.
  #"Neutralisierung" der ben\u00f6tigten Attributnamen in <baeume>: <2> entfernen
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:5145:26: style: Commas should always have a space after.
  names(baeume) <- sub(2,names(baeume),replacement="")
                         ^
NO COPY: R/BWI3_HR.R:5145:40: style: Commas should always have a space after.
  names(baeume) <- sub(2,names(baeume),replacement="")
                                       ^
NO COPY: R/BWI3_HR.R:5145:51: style: Put spaces around all infix operators.
  names(baeume) <- sub(2,names(baeume),replacement="")
                                                 ~^~
NO COPY: R/BWI3_HR.R:5146:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: R/BWI3_HR.R:5149:25: style: Commas should always have a space after.
  ast.pos <- grep("Ast",names(wzp4.merkmale))
                        ^
NO COPY: R/BWI3_HR.R:5150:22: style: Put spaces around all infix operators.
  if (length(ast.pos)>0)
                    ~^~
NO COPY: R/BWI3_HR.R:5151:3: style: Opening curly braces should never go on their own line and should always be followed by a new line.
  {
  ^
NO COPY: R/BWI3_HR.R:5154:1: style: lines should not be more than 80 characters.
  #(2) Merkmal-DS <wzp4.merkmale> mit Attribut-Auswahl aus <baeume> verkn\u00fcpfen
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:5156:75: style: Trailing whitespace is superfluous.
                                c("tnr", "enr", "bnr", "ba", "alt", "bhd", 
                                                                          ^
NO COPY: R/BWI3_HR.R:5158:43: style: Put spaces around all infix operators.
                         wzp4.merkmale, by=c("tnr","enr","bnr"),all.x=T)
                                         ~^~
NO COPY: R/BWI3_HR.R:5158:52: style: Commas should always have a space after.
                         wzp4.merkmale, by=c("tnr","enr","bnr"),all.x=T)
                                                   ^
NO COPY: R/BWI3_HR.R:5158:58: style: Commas should always have a space after.
                         wzp4.merkmale, by=c("tnr","enr","bnr"),all.x=T)
                                                         ^
NO COPY: R/BWI3_HR.R:5158:65: style: Commas should always have a space after.
                         wzp4.merkmale, by=c("tnr","enr","bnr"),all.x=T)
                                                                ^
NO COPY: R/BWI3_HR.R:5158:70: style: Put spaces around all infix operators.
                         wzp4.merkmale, by=c("tnr","enr","bnr"),all.x=T)
                                                                    ~^~
NO COPY: R/BWI3_HR.R:5160:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: R/BWI3_HR.R:5164:19: style: Commas should always have a space after.
  mm.pos <- rep(0,k)
                  ^
NO COPY: R/BWI3_HR.R:5167:36: style: Commas should always have a space after.
  wzp4.merkmale$merkmal.s <- rep(0,length(wzp4.merkmale[,1]))
                                   ^
NO COPY: R/BWI3_HR.R:5167:58: style: Commas should always have a space after.
  wzp4.merkmale$merkmal.s <- rep(0,length(wzp4.merkmale[,1]))
                                                         ^
NO COPY: R/BWI3_HR.R:5169:3: style: Opening curly braces should never go on their own line and should always be followed by a new line.
  {
  ^
NO COPY: R/BWI3_HR.R:5170:44: style: Commas should always have a space after.
    mm.pos[i] <- grep(toupper(merkmale[i]),toupper(names(wzp4.merkmale)))
                                           ^
NO COPY: R/BWI3_HR.R:5171:1: style: lines should not be more than 80 characters.
    wzp4.merkmale$merkmal.s <- wzp4.merkmale$merkmal.s+ wzp4.merkmale[,mm.pos[i]]
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:5171:55: style: Put spaces around all infix operators.
    wzp4.merkmale$merkmal.s <- wzp4.merkmale$merkmal.s+ wzp4.merkmale[,mm.pos[i]]
                                                     ~^
NO COPY: R/BWI3_HR.R:5171:72: style: Commas should always have a space after.
    wzp4.merkmale$merkmal.s <- wzp4.merkmale$merkmal.s+ wzp4.merkmale[,mm.pos[i]]
                                                                       ^
NO COPY: R/BWI3_HR.R:5173:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  mm.s.pos <- length(wzp4.merkmale)
  ^~~~~~~~
NO COPY: R/BWI3_HR.R:5174:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  wzp4.merkmale.s <- merge(
  ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:5175:1: style: lines should not be more than 80 characters.
                           wzp4.merkmale[TRUE, c(1:3,12,mm.pos,mm.s.pos,4:11)], # TODO: use names, not index numbers!
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:5175:54: style: Commas should always have a space after.
                           wzp4.merkmale[TRUE, c(1:3,12,mm.pos,mm.s.pos,4:11)], # TODO: use names, not index numbers!
                                                     ^
NO COPY: R/BWI3_HR.R:5175:57: style: Commas should always have a space after.
                           wzp4.merkmale[TRUE, c(1:3,12,mm.pos,mm.s.pos,4:11)], # TODO: use names, not index numbers!
                                                        ^
NO COPY: R/BWI3_HR.R:5175:64: style: Commas should always have a space after.
                           wzp4.merkmale[TRUE, c(1:3,12,mm.pos,mm.s.pos,4:11)], # TODO: use names, not index numbers!
                                                               ^
NO COPY: R/BWI3_HR.R:5175:64: style: Words within variable and function names should be separated by '_' rather than '.'.
                           wzp4.merkmale[TRUE, c(1:3,12,mm.pos,mm.s.pos,4:11)], # TODO: use names, not index numbers!
                                                               ^~~~~~~~
NO COPY: R/BWI3_HR.R:5175:73: style: Commas should always have a space after.
                           wzp4.merkmale[TRUE, c(1:3,12,mm.pos,mm.s.pos,4:11)], # TODO: use names, not index numbers!
                                                                        ^
NO COPY: R/BWI3_HR.R:5177:30: style: Put spaces around all infix operators.
                           by=c("tnr","enr"),all.y=T)
                            ~^~
NO COPY: R/BWI3_HR.R:5177:39: style: Commas should always have a space after.
                           by=c("tnr","enr"),all.y=T)
                                      ^
NO COPY: R/BWI3_HR.R:5177:46: style: Commas should always have a space after.
                           by=c("tnr","enr"),all.y=T)
                                             ^
NO COPY: R/BWI3_HR.R:5177:51: style: Put spaces around all infix operators.
                           by=c("tnr","enr"),all.y=T)
                                                 ~^~
NO COPY: R/BWI3_HR.R:5178:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  wzp4.merkmale.s[is.na(wzp4.merkmale.s)] <- 0 
  ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:5178:25: style: Words within variable and function names should be separated by '_' rather than '.'.
  wzp4.merkmale.s[is.na(wzp4.merkmale.s)] <- 0 
                        ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:5178:47: style: Trailing whitespace is superfluous.
  wzp4.merkmale.s[is.na(wzp4.merkmale.s)] <- 0 
                                              ^
NO COPY: R/BWI3_HR.R:5179:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: R/BWI3_HR.R:5183:24: style: Commas should always have a space after.
  nT <- length(trakte[,1])
                       ^
NO COPY: R/BWI3_HR.R:5185:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  n.te.s <- length(stratum[,1])
  ^~~~~~
NO COPY: R/BWI3_HR.R:5185:29: style: Commas should always have a space after.
  n.te.s <- length(stratum[,1])
                            ^
NO COPY: R/BWI3_HR.R:5188:32: style: Commas should always have a space after.
  xy <- stats::aggregate(rep(1,length(stratum[,1])),by=list(stratum$tnr),sum)
                               ^
NO COPY: R/BWI3_HR.R:5188:48: style: Commas should always have a space after.
  xy <- stats::aggregate(rep(1,length(stratum[,1])),by=list(stratum$tnr),sum)
                                               ^
NO COPY: R/BWI3_HR.R:5188:53: style: Commas should always have a space after.
  xy <- stats::aggregate(rep(1,length(stratum[,1])),by=list(stratum$tnr),sum)
                                                    ^
NO COPY: R/BWI3_HR.R:5188:55: style: Put spaces around all infix operators.
  xy <- stats::aggregate(rep(1,length(stratum[,1])),by=list(stratum$tnr),sum)
                                                     ~^~
NO COPY: R/BWI3_HR.R:5188:74: style: Commas should always have a space after.
  xy <- stats::aggregate(rep(1,length(stratum[,1])),by=list(stratum$tnr),sum)
                                                                         ^
NO COPY: R/BWI3_HR.R:5190:18: style: Commas should always have a space after.
  xy <- cbind(xy,stats::aggregate(ifelse(
                 ^
NO COPY: R/BWI3_HR.R:5191:5: style: Words within variable and function names should be separated by '_' rather than '.'.
    wzp4.merkmale.s$ba==999,wzp4.merkmale.s$stfl/10000,0),
    ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:5191:23: style: Put spaces around all infix operators.
    wzp4.merkmale.s$ba==999,wzp4.merkmale.s$stfl/10000,0),
                     ~^~~
NO COPY: R/BWI3_HR.R:5191:29: style: Commas should always have a space after.
    wzp4.merkmale.s$ba==999,wzp4.merkmale.s$stfl/10000,0),
                            ^
NO COPY: R/BWI3_HR.R:5191:29: style: Words within variable and function names should be separated by '_' rather than '.'.
    wzp4.merkmale.s$ba==999,wzp4.merkmale.s$stfl/10000,0),
                            ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:5191:49: style: Put spaces around all infix operators.
    wzp4.merkmale.s$ba==999,wzp4.merkmale.s$stfl/10000,0),
                                               ~^~
NO COPY: R/BWI3_HR.R:5191:56: style: Commas should always have a space after.
    wzp4.merkmale.s$ba==999,wzp4.merkmale.s$stfl/10000,0),
                                                       ^
NO COPY: R/BWI3_HR.R:5192:7: style: Put spaces around all infix operators.
    by=list(wzp4.merkmale.s$tnr),sum)$x)
     ~^~
NO COPY: R/BWI3_HR.R:5192:13: style: Words within variable and function names should be separated by '_' rather than '.'.
    by=list(wzp4.merkmale.s$tnr),sum)$x)
            ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:5192:34: style: Commas should always have a space after.
    by=list(wzp4.merkmale.s$tnr),sum)$x)
                                 ^
NO COPY: R/BWI3_HR.R:5193:1: style: lines should not be more than 80 characters.
  xy <- cbind(xy,stats::aggregate(ifelse(wzp4.merkmale.s$ba==998,wzp4.merkmale.s$stfl,0),
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:5193:18: style: Commas should always have a space after.
  xy <- cbind(xy,stats::aggregate(ifelse(wzp4.merkmale.s$ba==998,wzp4.merkmale.s$stfl,0),
                 ^
NO COPY: R/BWI3_HR.R:5193:42: style: Words within variable and function names should be separated by '_' rather than '.'.
  xy <- cbind(xy,stats::aggregate(ifelse(wzp4.merkmale.s$ba==998,wzp4.merkmale.s$stfl,0),
                                         ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:5193:60: style: Put spaces around all infix operators.
  xy <- cbind(xy,stats::aggregate(ifelse(wzp4.merkmale.s$ba==998,wzp4.merkmale.s$stfl,0),
                                                          ~^~~
NO COPY: R/BWI3_HR.R:5193:66: style: Commas should always have a space after.
  xy <- cbind(xy,stats::aggregate(ifelse(wzp4.merkmale.s$ba==998,wzp4.merkmale.s$stfl,0),
                                                                 ^
NO COPY: R/BWI3_HR.R:5193:66: style: Words within variable and function names should be separated by '_' rather than '.'.
  xy <- cbind(xy,stats::aggregate(ifelse(wzp4.merkmale.s$ba==998,wzp4.merkmale.s$stfl,0),
                                                                 ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:5193:87: style: Commas should always have a space after.
  xy <- cbind(xy,stats::aggregate(ifelse(wzp4.merkmale.s$ba==998,wzp4.merkmale.s$stfl,0),
                                                                                      ^
NO COPY: R/BWI3_HR.R:5194:30: style: Put spaces around all infix operators.
                           by=list(wzp4.merkmale.s$tnr),sum)$x/10000)
                            ~^~
NO COPY: R/BWI3_HR.R:5194:36: style: Words within variable and function names should be separated by '_' rather than '.'.
                           by=list(wzp4.merkmale.s$tnr),sum)$x/10000)
                                   ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:5194:57: style: Commas should always have a space after.
                           by=list(wzp4.merkmale.s$tnr),sum)$x/10000)
                                                        ^
NO COPY: R/BWI3_HR.R:5194:63: style: Put spaces around all infix operators.
                           by=list(wzp4.merkmale.s$tnr),sum)$x/10000)
                                                             ~^~
NO COPY: R/BWI3_HR.R:5195:24: style: Commas should always have a space after.
  names(xy) <- c("tnr","hbf","bl","ibl")
                       ^
NO COPY: R/BWI3_HR.R:5195:30: style: Commas should always have a space after.
  names(xy) <- c("tnr","hbf","bl","ibl")
                             ^
NO COPY: R/BWI3_HR.R:5195:35: style: Commas should always have a space after.
  names(xy) <- c("tnr","hbf","bl","ibl")
                                  ^
NO COPY: R/BWI3_HR.R:5196:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  n.t.s <- length(xy[,1])
  ^~~~~
NO COPY: R/BWI3_HR.R:5196:3: warning: local variable 'n.t.s' assigned but may not be used
  n.t.s <- length(xy[,1])
  ^~~~~
NO COPY: R/BWI3_HR.R:5196:23: style: Commas should always have a space after.
  n.t.s <- length(xy[,1])
                      ^
NO COPY: R/BWI3_HR.R:5197:43: style: Commas should always have a space after.
  xy <- merge(trakte[TRUE, c("tnr", "m")],xy,by=c("tnr"),all.x=T)
                                          ^
NO COPY: R/BWI3_HR.R:5197:46: style: Commas should always have a space after.
  xy <- merge(trakte[TRUE, c("tnr", "m")],xy,by=c("tnr"),all.x=T)
                                             ^
NO COPY: R/BWI3_HR.R:5197:48: style: Put spaces around all infix operators.
  xy <- merge(trakte[TRUE, c("tnr", "m")],xy,by=c("tnr"),all.x=T)
                                              ~^~
NO COPY: R/BWI3_HR.R:5197:58: style: Commas should always have a space after.
  xy <- merge(trakte[TRUE, c("tnr", "m")],xy,by=c("tnr"),all.x=T)
                                                         ^
NO COPY: R/BWI3_HR.R:5197:63: style: Put spaces around all infix operators.
  xy <- merge(trakte[TRUE, c("tnr", "m")],xy,by=c("tnr"),all.x=T)
                                                             ~^~
NO COPY: R/BWI3_HR.R:5200:22: style: Put spaces around all infix operators.
  xy$hbf.ba <- xy$hbf-xy$bl-xy$ibl
                    ~^~
NO COPY: R/BWI3_HR.R:5200:28: style: Put spaces around all infix operators.
  xy$hbf.ba <- xy$hbf-xy$bl-xy$ibl
                          ~^~
NO COPY: R/BWI3_HR.R:5201:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: R/BWI3_HR.R:5202:4: style: Commented code should be removed.
  #HBFl. [ha]
   ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:5203:9: style: Use <-, not =, for assignment.
  r.list= r.variance.fun(xy[TRUE, c("m", "hbf")],nT)
        ^
NO COPY: R/BWI3_HR.R:5203:9: style: Put spaces around all infix operators.
  r.list= r.variance.fun(xy[TRUE, c("m", "hbf")],nT)
       ~^
NO COPY: R/BWI3_HR.R:5203:50: style: Commas should always have a space after.
  r.list= r.variance.fun(xy[TRUE, c("m", "hbf")],nT)
                                                 ^
NO COPY: R/BWI3_HR.R:5204:23: style: Put spaces around all infix operators.
  T.hbf <- r.list$R.xy*A
                     ~^~
NO COPY: R/BWI3_HR.R:5205:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  se.T.hbf <- sqrt(r.list$V.R.xy)*A
  ^~~~~~~~
NO COPY: R/BWI3_HR.R:5205:27: style: Words within variable and function names should be separated by '_' rather than '.'.
  se.T.hbf <- sqrt(r.list$V.R.xy)*A
                          ^~~~~~
NO COPY: R/BWI3_HR.R:5205:34: style: Put spaces around all infix operators.
  se.T.hbf <- sqrt(r.list$V.R.xy)*A
                                ~^~
NO COPY: R/BWI3_HR.R:5207:51: style: Commas should always have a space after.
  r.list <- r.variance.fun(xy[TRUE, c("m", "bl")],nT)
                                                  ^
NO COPY: R/BWI3_HR.R:5208:22: style: Put spaces around all infix operators.
  T.bl <- r.list$R.xy*A
                    ~^~
NO COPY: R/BWI3_HR.R:5209:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  se.T.bl <- sqrt(r.list$V.R.xy)*A
  ^~~~~~~
NO COPY: R/BWI3_HR.R:5209:26: style: Words within variable and function names should be separated by '_' rather than '.'.
  se.T.bl <- sqrt(r.list$V.R.xy)*A
                         ^~~~~~
NO COPY: R/BWI3_HR.R:5209:33: style: Put spaces around all infix operators.
  se.T.bl <- sqrt(r.list$V.R.xy)*A
                               ~^~
NO COPY: R/BWI3_HR.R:5211:52: style: Commas should always have a space after.
  r.list <- r.variance.fun(xy[TRUE, c("m", "ibl")],nT)
                                                   ^
NO COPY: R/BWI3_HR.R:5212:23: style: Put spaces around all infix operators.
  T.ibl <- r.list$R.xy*A
                     ~^~
NO COPY: R/BWI3_HR.R:5213:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  se.T.ibl <- sqrt(r.list$V.R.xy)*A
  ^~~~~~~~
NO COPY: R/BWI3_HR.R:5213:27: style: Words within variable and function names should be separated by '_' rather than '.'.
  se.T.ibl <- sqrt(r.list$V.R.xy)*A
                          ^~~~~~
NO COPY: R/BWI3_HR.R:5213:34: style: Put spaces around all infix operators.
  se.T.ibl <- sqrt(r.list$V.R.xy)*A
                                ~^~
NO COPY: R/BWI3_HR.R:5215:57: style: Commas should always have a space after.
  r.list <- r.variance.fun(xy[TRUE, c("hbf.ba", "hbf")],nT)
                                                        ^
NO COPY: R/BWI3_HR.R:5217:24: style: Words within variable and function names should be separated by '_' rather than '.'.
  se.lk <- sqrt(r.list$V.R.xy)
                       ^~~~~~
NO COPY: R/BWI3_HR.R:5218:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: R/BWI3_HR.R:5220:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: R/BWI3_HR.R:5223:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  wzp4.merkmale.s$akl <- as.integer(cut(wzp4.merkmale.s$alt,
  ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:5223:41: style: Words within variable and function names should be separated by '_' rather than '.'.
  wzp4.merkmale.s$akl <- as.integer(cut(wzp4.merkmale.s$alt,
                                        ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:5224:1: style: lines should not be more than 80 characters.
                                 breaks=c(seq(0,A.klass[[1]],A.klass[[2]]),A.max),right=T))
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:5224:40: style: Put spaces around all infix operators.
                                 breaks=c(seq(0,A.klass[[1]],A.klass[[2]]),A.max),right=T))
                                      ~^~
NO COPY: R/BWI3_HR.R:5224:49: style: Commas should always have a space after.
                                 breaks=c(seq(0,A.klass[[1]],A.klass[[2]]),A.max),right=T))
                                                ^
NO COPY: R/BWI3_HR.R:5224:62: style: Commas should always have a space after.
                                 breaks=c(seq(0,A.klass[[1]],A.klass[[2]]),A.max),right=T))
                                                             ^
NO COPY: R/BWI3_HR.R:5224:76: style: Commas should always have a space after.
                                 breaks=c(seq(0,A.klass[[1]],A.klass[[2]]),A.max),right=T))
                                                                           ^
NO COPY: R/BWI3_HR.R:5224:83: style: Commas should always have a space after.
                                 breaks=c(seq(0,A.klass[[1]],A.klass[[2]]),A.max),right=T))
                                                                                  ^
NO COPY: R/BWI3_HR.R:5224:88: style: Put spaces around all infix operators.
                                 breaks=c(seq(0,A.klass[[1]],A.klass[[2]]),A.max),right=T))
                                                                                      ~^~
NO COPY: R/BWI3_HR.R:5225:21: style: Words within variable and function names should be separated by '_' rather than '.'.
  akl.lab <- unique(wzp4.merkmale.s$akl)
                    ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:5230:5: style: Place a space before left parenthesis, except in a function call.
  if(A.klass[[1]]>A.klass[[2]])
    ^
NO COPY: R/BWI3_HR.R:5230:18: style: Put spaces around all infix operators.
  if(A.klass[[1]]>A.klass[[2]])
                ~^~
NO COPY: R/BWI3_HR.R:5231:3: style: Opening curly braces should never go on their own line and should always be followed by a new line.
  {
  ^
NO COPY: R/BWI3_HR.R:5232:5: style: Words within variable and function names should be separated by '_' rather than '.'.
    max.A.k <- A.klass[[1]]/A.klass[[2]] + 1
    ^~~~~~~
NO COPY: R/BWI3_HR.R:5232:28: style: Put spaces around all infix operators.
    max.A.k <- A.klass[[1]]/A.klass[[2]] + 1
                          ~^~
NO COPY: R/BWI3_HR.R:5233:15: style: Words within variable and function names should be separated by '_' rather than '.'.
    if (A.k < max.A.k) {A.k <- max.A.k }
              ^~~~~~~
NO COPY: R/BWI3_HR.R:5233:24: style: Opening curly braces should never go on their own line and should always be followed by a new line.
    if (A.k < max.A.k) {A.k <- max.A.k }
                       ^
NO COPY: R/BWI3_HR.R:5233:32: style: Words within variable and function names should be separated by '_' rather than '.'.
    if (A.k < max.A.k) {A.k <- max.A.k }
                               ^~~~~~~
NO COPY: R/BWI3_HR.R:5233:40: style: Closing curly-braces should always be on their own line, unless it's followed by an else.
    if (A.k < max.A.k) {A.k <- max.A.k }
                                       ^
NO COPY: R/BWI3_HR.R:5235:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: R/BWI3_HR.R:5236:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: R/BWI3_HR.R:5238:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: R/BWI3_HR.R:5240:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: R/BWI3_HR.R:5241:12: style: Use <-, not =, for assignment.
  Kennwerte=c("Gesamtzahl","Zahl_je_ha","Vorrat_m3_mR",
           ^
NO COPY: R/BWI3_HR.R:5241:12: style: Put spaces around all infix operators.
  Kennwerte=c("Gesamtzahl","Zahl_je_ha","Vorrat_m3_mR",
          ~^~
NO COPY: R/BWI3_HR.R:5241:28: style: Commas should always have a space after.
  Kennwerte=c("Gesamtzahl","Zahl_je_ha","Vorrat_m3_mR",
                           ^
NO COPY: R/BWI3_HR.R:5241:41: style: Commas should always have a space after.
  Kennwerte=c("Gesamtzahl","Zahl_je_ha","Vorrat_m3_mR",
                                        ^
NO COPY: R/BWI3_HR.R:5242:36: style: Commas should always have a space after.
              "Vorrat_m3_mR_je_ha","Stueckvolumen_m3_mR","oi_Biom_t",
                                   ^
NO COPY: R/BWI3_HR.R:5242:58: style: Commas should always have a space after.
              "Vorrat_m3_mR_je_ha","Stueckvolumen_m3_mR","oi_Biom_t",
                                                         ^
NO COPY: R/BWI3_HR.R:5243:33: style: Commas should always have a space after.
              "oi_Biom_t_je_ha","Anteil_Gesamtzahl_Proz",
                                ^
NO COPY: R/BWI3_HR.R:5248:19: style: Put spaces around all infix operators.
  n.bagr <- n.bagr+1
                 ~^~
NO COPY: R/BWI3_HR.R:5252:1: style: lines should not be more than 80 characters.
  #Array  f\u00fcr Ergebnisse je  BAGR und AKL (Dimension 2 steht f\u00fcr Wert und Standardfehler)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:5253:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  attr.bagr.akl.tab <- array(dim=c(n.kw,2,n.bagr,A.k))
  ^~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:5253:33: style: Put spaces around all infix operators.
  attr.bagr.akl.tab <- array(dim=c(n.kw,2,n.bagr,A.k))
                               ~^~
NO COPY: R/BWI3_HR.R:5253:41: style: Commas should always have a space after.
  attr.bagr.akl.tab <- array(dim=c(n.kw,2,n.bagr,A.k))
                                        ^
NO COPY: R/BWI3_HR.R:5253:43: style: Commas should always have a space after.
  attr.bagr.akl.tab <- array(dim=c(n.kw,2,n.bagr,A.k))
                                          ^
NO COPY: R/BWI3_HR.R:5253:50: style: Commas should always have a space after.
  attr.bagr.akl.tab <- array(dim=c(n.kw,2,n.bagr,A.k))
                                                 ^
NO COPY: R/BWI3_HR.R:5254:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: R/BWI3_HR.R:5256:3: style: Opening curly braces should never go on their own line and should always be followed by a new line.
  {
  ^
NO COPY: R/BWI3_HR.R:5258:5: style: Opening curly braces should never go on their own line and should always be followed by a new line.
    {
    ^
NO COPY: R/BWI3_HR.R:5260:9: style: Words within variable and function names should be separated by '_' rather than '.'.
        wzp4.merkmale.s$merkmal.s>0&wzp4.merkmale.s$pk<=1&wzp4.merkmale.s$ba 
        ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:5260:34: style: Put spaces around all infix operators.
        wzp4.merkmale.s$merkmal.s>0&wzp4.merkmale.s$pk<=1&wzp4.merkmale.s$ba 
                                ~^~
NO COPY: R/BWI3_HR.R:5260:36: style: Put spaces around all infix operators.
        wzp4.merkmale.s$merkmal.s>0&wzp4.merkmale.s$pk<=1&wzp4.merkmale.s$ba 
                                  ~^~
NO COPY: R/BWI3_HR.R:5260:37: style: Words within variable and function names should be separated by '_' rather than '.'.
        wzp4.merkmale.s$merkmal.s>0&wzp4.merkmale.s$pk<=1&wzp4.merkmale.s$ba 
                                    ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:5260:55: style: Put spaces around all infix operators.
        wzp4.merkmale.s$merkmal.s>0&wzp4.merkmale.s$pk<=1&wzp4.merkmale.s$ba 
                                                     ~^~~
NO COPY: R/BWI3_HR.R:5260:58: style: Put spaces around all infix operators.
        wzp4.merkmale.s$merkmal.s>0&wzp4.merkmale.s$pk<=1&wzp4.merkmale.s$ba 
                                                        ~^~
NO COPY: R/BWI3_HR.R:5260:59: style: Words within variable and function names should be separated by '_' rather than '.'.
        wzp4.merkmale.s$merkmal.s>0&wzp4.merkmale.s$pk<=1&wzp4.merkmale.s$ba 
                                                          ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:5260:77: style: Trailing whitespace is superfluous.
        wzp4.merkmale.s$merkmal.s>0&wzp4.merkmale.s$pk<=1&wzp4.merkmale.s$ba 
                                                                            ^
NO COPY: R/BWI3_HR.R:5261:1: style: lines should not be more than 80 characters.
        %in% ba.grupp$ba.grupp[[i]]&wzp4.merkmale.s$akl==j,wzp4.merkmale.s$nha,0),
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:5261:36: style: Put spaces around all infix operators.
        %in% ba.grupp$ba.grupp[[i]]&wzp4.merkmale.s$akl==j,wzp4.merkmale.s$nha,0),
                                  ~^~
NO COPY: R/BWI3_HR.R:5261:37: style: Words within variable and function names should be separated by '_' rather than '.'.
        %in% ba.grupp$ba.grupp[[i]]&wzp4.merkmale.s$akl==j,wzp4.merkmale.s$nha,0),
                                    ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:5261:56: style: Put spaces around all infix operators.
        %in% ba.grupp$ba.grupp[[i]]&wzp4.merkmale.s$akl==j,wzp4.merkmale.s$nha,0),
                                                      ~^~~
NO COPY: R/BWI3_HR.R:5261:60: style: Commas should always have a space after.
        %in% ba.grupp$ba.grupp[[i]]&wzp4.merkmale.s$akl==j,wzp4.merkmale.s$nha,0),
                                                           ^
NO COPY: R/BWI3_HR.R:5261:60: style: Words within variable and function names should be separated by '_' rather than '.'.
        %in% ba.grupp$ba.grupp[[i]]&wzp4.merkmale.s$akl==j,wzp4.merkmale.s$nha,0),
                                                           ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:5261:80: style: Commas should always have a space after.
        %in% ba.grupp$ba.grupp[[i]]&wzp4.merkmale.s$akl==j,wzp4.merkmale.s$nha,0),
                                                                               ^
NO COPY: R/BWI3_HR.R:5262:11: style: Put spaces around all infix operators.
        by=list(wzp4.merkmale.s$tnr),sum)
         ~^~
NO COPY: R/BWI3_HR.R:5262:17: style: Words within variable and function names should be separated by '_' rather than '.'.
        by=list(wzp4.merkmale.s$tnr),sum)
                ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:5262:38: style: Commas should always have a space after.
        by=list(wzp4.merkmale.s$tnr),sum)
                                     ^
NO COPY: R/BWI3_HR.R:5264:36: style: Commas should always have a space after.
      merkmal.t <- cbind(merkmal.t,stats::aggregate(ifelse(
                                   ^
NO COPY: R/BWI3_HR.R:5265:19: style: Words within variable and function names should be separated by '_' rather than '.'.
                  wzp4.merkmale.s$merkmal.s>0
                  ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:5265:44: style: Put spaces around all infix operators.
                  wzp4.merkmale.s$merkmal.s>0
                                          ~^~
NO COPY: R/BWI3_HR.R:5266:1: style: lines should not be more than 80 characters.
                  &wzp4.merkmale.s$pk<=1&wzp4.merkmale.s$ba %in% ba.grupp$ba.grupp[[i]]&wzp4.merkmale.s$akl==j,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:5266:19: style: Put spaces around all infix operators.
                  &wzp4.merkmale.s$pk<=1&wzp4.merkmale.s$ba %in% ba.grupp$ba.grupp[[i]]&wzp4.merkmale.s$akl==j,
                  ^~
NO COPY: R/BWI3_HR.R:5266:20: style: Words within variable and function names should be separated by '_' rather than '.'.
                  &wzp4.merkmale.s$pk<=1&wzp4.merkmale.s$ba %in% ba.grupp$ba.grupp[[i]]&wzp4.merkmale.s$akl==j,
                   ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:5266:38: style: Put spaces around all infix operators.
                  &wzp4.merkmale.s$pk<=1&wzp4.merkmale.s$ba %in% ba.grupp$ba.grupp[[i]]&wzp4.merkmale.s$akl==j,
                                    ~^~~
NO COPY: R/BWI3_HR.R:5266:41: style: Put spaces around all infix operators.
                  &wzp4.merkmale.s$pk<=1&wzp4.merkmale.s$ba %in% ba.grupp$ba.grupp[[i]]&wzp4.merkmale.s$akl==j,
                                       ~^~
NO COPY: R/BWI3_HR.R:5266:42: style: Words within variable and function names should be separated by '_' rather than '.'.
                  &wzp4.merkmale.s$pk<=1&wzp4.merkmale.s$ba %in% ba.grupp$ba.grupp[[i]]&wzp4.merkmale.s$akl==j,
                                         ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:5266:88: style: Put spaces around all infix operators.
                  &wzp4.merkmale.s$pk<=1&wzp4.merkmale.s$ba %in% ba.grupp$ba.grupp[[i]]&wzp4.merkmale.s$akl==j,
                                                                                      ~^~
NO COPY: R/BWI3_HR.R:5266:89: style: Words within variable and function names should be separated by '_' rather than '.'.
                  &wzp4.merkmale.s$pk<=1&wzp4.merkmale.s$ba %in% ba.grupp$ba.grupp[[i]]&wzp4.merkmale.s$akl==j,
                                                                                        ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:5266:108: style: Put spaces around all infix operators.
                  &wzp4.merkmale.s$pk<=1&wzp4.merkmale.s$ba %in% ba.grupp$ba.grupp[[i]]&wzp4.merkmale.s$akl==j,
                                                                                                          ~^~~
NO COPY: R/BWI3_HR.R:5267:19: style: Words within variable and function names should be separated by '_' rather than '.'.
                  wzp4.merkmale.s$nha*wzp4.merkmale.s$volv,0),
                  ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:5267:38: style: Put spaces around all infix operators.
                  wzp4.merkmale.s$nha*wzp4.merkmale.s$volv,0),
                                    ~^~
NO COPY: R/BWI3_HR.R:5267:39: style: Words within variable and function names should be separated by '_' rather than '.'.
                  wzp4.merkmale.s$nha*wzp4.merkmale.s$volv,0),
                                      ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:5267:60: style: Commas should always have a space after.
                  wzp4.merkmale.s$nha*wzp4.merkmale.s$volv,0),
                                                           ^
NO COPY: R/BWI3_HR.R:5268:21: style: Put spaces around all infix operators.
                  by=list(wzp4.merkmale.s$tnr),sum)$x)
                   ~^~
NO COPY: R/BWI3_HR.R:5268:27: style: Words within variable and function names should be separated by '_' rather than '.'.
                  by=list(wzp4.merkmale.s$tnr),sum)$x)
                          ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:5268:48: style: Commas should always have a space after.
                  by=list(wzp4.merkmale.s$tnr),sum)$x)
                                               ^
NO COPY: R/BWI3_HR.R:5269:1: style: Trailing whitespace is superfluous.
      
^~~~~~
NO COPY: R/BWI3_HR.R:5271:36: style: Commas should always have a space after.
      merkmal.t <- cbind(merkmal.t,stats::aggregate(ifelse(
                                   ^
NO COPY: R/BWI3_HR.R:5272:19: style: Words within variable and function names should be separated by '_' rather than '.'.
                  wzp4.merkmale.s$merkmal.s>0
                  ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:5272:44: style: Put spaces around all infix operators.
                  wzp4.merkmale.s$merkmal.s>0
                                          ~^~
NO COPY: R/BWI3_HR.R:5273:1: style: lines should not be more than 80 characters.
                  &wzp4.merkmale.s$pk<=1&wzp4.merkmale.s$ba %in% ba.grupp$ba.grupp[[i]]&wzp4.merkmale.s$akl==j,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:5273:19: style: Put spaces around all infix operators.
                  &wzp4.merkmale.s$pk<=1&wzp4.merkmale.s$ba %in% ba.grupp$ba.grupp[[i]]&wzp4.merkmale.s$akl==j,
                  ^~
NO COPY: R/BWI3_HR.R:5273:20: style: Words within variable and function names should be separated by '_' rather than '.'.
                  &wzp4.merkmale.s$pk<=1&wzp4.merkmale.s$ba %in% ba.grupp$ba.grupp[[i]]&wzp4.merkmale.s$akl==j,
                   ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:5273:38: style: Put spaces around all infix operators.
                  &wzp4.merkmale.s$pk<=1&wzp4.merkmale.s$ba %in% ba.grupp$ba.grupp[[i]]&wzp4.merkmale.s$akl==j,
                                    ~^~~
NO COPY: R/BWI3_HR.R:5273:41: style: Put spaces around all infix operators.
                  &wzp4.merkmale.s$pk<=1&wzp4.merkmale.s$ba %in% ba.grupp$ba.grupp[[i]]&wzp4.merkmale.s$akl==j,
                                       ~^~
NO COPY: R/BWI3_HR.R:5273:42: style: Words within variable and function names should be separated by '_' rather than '.'.
                  &wzp4.merkmale.s$pk<=1&wzp4.merkmale.s$ba %in% ba.grupp$ba.grupp[[i]]&wzp4.merkmale.s$akl==j,
                                         ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:5273:88: style: Put spaces around all infix operators.
                  &wzp4.merkmale.s$pk<=1&wzp4.merkmale.s$ba %in% ba.grupp$ba.grupp[[i]]&wzp4.merkmale.s$akl==j,
                                                                                      ~^~
NO COPY: R/BWI3_HR.R:5273:89: style: Words within variable and function names should be separated by '_' rather than '.'.
                  &wzp4.merkmale.s$pk<=1&wzp4.merkmale.s$ba %in% ba.grupp$ba.grupp[[i]]&wzp4.merkmale.s$akl==j,
                                                                                        ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:5273:108: style: Put spaces around all infix operators.
                  &wzp4.merkmale.s$pk<=1&wzp4.merkmale.s$ba %in% ba.grupp$ba.grupp[[i]]&wzp4.merkmale.s$akl==j,
                                                                                                          ~^~~
NO COPY: R/BWI3_HR.R:5274:19: style: Words within variable and function names should be separated by '_' rather than '.'.
                  wzp4.merkmale.s$nha*wzp4.merkmale.s$oib,0),
                  ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:5274:38: style: Put spaces around all infix operators.
                  wzp4.merkmale.s$nha*wzp4.merkmale.s$oib,0),
                                    ~^~
NO COPY: R/BWI3_HR.R:5274:39: style: Words within variable and function names should be separated by '_' rather than '.'.
                  wzp4.merkmale.s$nha*wzp4.merkmale.s$oib,0),
                                      ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:5274:59: style: Commas should always have a space after.
                  wzp4.merkmale.s$nha*wzp4.merkmale.s$oib,0),
                                                          ^
NO COPY: R/BWI3_HR.R:5275:21: style: Put spaces around all infix operators.
                  by=list(wzp4.merkmale.s$tnr),sum)$x)
                   ~^~
NO COPY: R/BWI3_HR.R:5275:27: style: Words within variable and function names should be separated by '_' rather than '.'.
                  by=list(wzp4.merkmale.s$tnr),sum)$x)
                          ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:5275:48: style: Commas should always have a space after.
                  by=list(wzp4.merkmale.s$tnr),sum)$x)
                                               ^
NO COPY: R/BWI3_HR.R:5276:1: style: Trailing whitespace is superfluous.
      
^~~~~~
NO COPY: R/BWI3_HR.R:5278:36: style: Commas should always have a space after.
      merkmal.t <- cbind(merkmal.t,stats::aggregate(ifelse(
                                   ^
NO COPY: R/BWI3_HR.R:5279:9: style: Words within variable and function names should be separated by '_' rather than '.'.
        wzp4.merkmale.s$merkmal.s>0&wzp4.merkmale.s$bhd>=50
        ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:5279:34: style: Put spaces around all infix operators.
        wzp4.merkmale.s$merkmal.s>0&wzp4.merkmale.s$bhd>=50
                                ~^~
NO COPY: R/BWI3_HR.R:5279:36: style: Put spaces around all infix operators.
        wzp4.merkmale.s$merkmal.s>0&wzp4.merkmale.s$bhd>=50
                                  ~^~
NO COPY: R/BWI3_HR.R:5279:37: style: Words within variable and function names should be separated by '_' rather than '.'.
        wzp4.merkmale.s$merkmal.s>0&wzp4.merkmale.s$bhd>=50
                                    ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:5279:56: style: Put spaces around all infix operators.
        wzp4.merkmale.s$merkmal.s>0&wzp4.merkmale.s$bhd>=50
                                                      ~^~~
NO COPY: R/BWI3_HR.R:5280:1: style: lines should not be more than 80 characters.
        &wzp4.merkmale.s$pk<=1&wzp4.merkmale.s$ba %in% ba.grupp$ba.grupp[[i]]&wzp4.merkmale.s$akl==j,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:5280:9: style: Put spaces around all infix operators.
        &wzp4.merkmale.s$pk<=1&wzp4.merkmale.s$ba %in% ba.grupp$ba.grupp[[i]]&wzp4.merkmale.s$akl==j,
        ^~
NO COPY: R/BWI3_HR.R:5280:10: style: Words within variable and function names should be separated by '_' rather than '.'.
        &wzp4.merkmale.s$pk<=1&wzp4.merkmale.s$ba %in% ba.grupp$ba.grupp[[i]]&wzp4.merkmale.s$akl==j,
         ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:5280:28: style: Put spaces around all infix operators.
        &wzp4.merkmale.s$pk<=1&wzp4.merkmale.s$ba %in% ba.grupp$ba.grupp[[i]]&wzp4.merkmale.s$akl==j,
                          ~^~~
NO COPY: R/BWI3_HR.R:5280:31: style: Put spaces around all infix operators.
        &wzp4.merkmale.s$pk<=1&wzp4.merkmale.s$ba %in% ba.grupp$ba.grupp[[i]]&wzp4.merkmale.s$akl==j,
                             ~^~
NO COPY: R/BWI3_HR.R:5280:32: style: Words within variable and function names should be separated by '_' rather than '.'.
        &wzp4.merkmale.s$pk<=1&wzp4.merkmale.s$ba %in% ba.grupp$ba.grupp[[i]]&wzp4.merkmale.s$akl==j,
                               ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:5280:78: style: Put spaces around all infix operators.
        &wzp4.merkmale.s$pk<=1&wzp4.merkmale.s$ba %in% ba.grupp$ba.grupp[[i]]&wzp4.merkmale.s$akl==j,
                                                                            ~^~
NO COPY: R/BWI3_HR.R:5280:79: style: Words within variable and function names should be separated by '_' rather than '.'.
        &wzp4.merkmale.s$pk<=1&wzp4.merkmale.s$ba %in% ba.grupp$ba.grupp[[i]]&wzp4.merkmale.s$akl==j,
                                                                              ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:5280:98: style: Put spaces around all infix operators.
        &wzp4.merkmale.s$pk<=1&wzp4.merkmale.s$ba %in% ba.grupp$ba.grupp[[i]]&wzp4.merkmale.s$akl==j,
                                                                                                ~^~~
NO COPY: R/BWI3_HR.R:5281:9: style: Words within variable and function names should be separated by '_' rather than '.'.
        wzp4.merkmale.s$nha*wzp4.merkmale.s$volv,0),
        ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:5281:28: style: Put spaces around all infix operators.
        wzp4.merkmale.s$nha*wzp4.merkmale.s$volv,0),
                          ~^~
NO COPY: R/BWI3_HR.R:5281:29: style: Words within variable and function names should be separated by '_' rather than '.'.
        wzp4.merkmale.s$nha*wzp4.merkmale.s$volv,0),
                            ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:5281:50: style: Commas should always have a space after.
        wzp4.merkmale.s$nha*wzp4.merkmale.s$volv,0),
                                                 ^
NO COPY: R/BWI3_HR.R:5282:11: style: Put spaces around all infix operators.
        by=list(wzp4.merkmale.s$tnr),sum)$x)
         ~^~
NO COPY: R/BWI3_HR.R:5282:17: style: Words within variable and function names should be separated by '_' rather than '.'.
        by=list(wzp4.merkmale.s$tnr),sum)$x)
                ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:5282:38: style: Commas should always have a space after.
        by=list(wzp4.merkmale.s$tnr),sum)$x)
                                     ^
NO COPY: R/BWI3_HR.R:5283:1: style: Trailing whitespace is superfluous.
      
^~~~~~
NO COPY: R/BWI3_HR.R:5284:18: style: Trailing whitespace is superfluous.
      #Gesamtzahl 
                 ^
NO COPY: R/BWI3_HR.R:5285:36: style: Commas should always have a space after.
      merkmal.t <- cbind(merkmal.t,stats::aggregate(ifelse(
                                   ^
NO COPY: R/BWI3_HR.R:5286:1: style: lines should not be more than 80 characters.
        wzp4.merkmale.s$pk<=1&wzp4.merkmale.s$ba %in% ba.grupp$ba.grupp[[i]]&wzp4.merkmale.s$akl==j,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:5286:9: style: Words within variable and function names should be separated by '_' rather than '.'.
        wzp4.merkmale.s$pk<=1&wzp4.merkmale.s$ba %in% ba.grupp$ba.grupp[[i]]&wzp4.merkmale.s$akl==j,
        ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:5286:27: style: Put spaces around all infix operators.
        wzp4.merkmale.s$pk<=1&wzp4.merkmale.s$ba %in% ba.grupp$ba.grupp[[i]]&wzp4.merkmale.s$akl==j,
                         ~^~~
NO COPY: R/BWI3_HR.R:5286:30: style: Put spaces around all infix operators.
        wzp4.merkmale.s$pk<=1&wzp4.merkmale.s$ba %in% ba.grupp$ba.grupp[[i]]&wzp4.merkmale.s$akl==j,
                            ~^~
NO COPY: R/BWI3_HR.R:5286:31: style: Words within variable and function names should be separated by '_' rather than '.'.
        wzp4.merkmale.s$pk<=1&wzp4.merkmale.s$ba %in% ba.grupp$ba.grupp[[i]]&wzp4.merkmale.s$akl==j,
                              ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:5286:77: style: Put spaces around all infix operators.
        wzp4.merkmale.s$pk<=1&wzp4.merkmale.s$ba %in% ba.grupp$ba.grupp[[i]]&wzp4.merkmale.s$akl==j,
                                                                           ~^~
NO COPY: R/BWI3_HR.R:5286:78: style: Words within variable and function names should be separated by '_' rather than '.'.
        wzp4.merkmale.s$pk<=1&wzp4.merkmale.s$ba %in% ba.grupp$ba.grupp[[i]]&wzp4.merkmale.s$akl==j,
                                                                             ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:5286:97: style: Put spaces around all infix operators.
        wzp4.merkmale.s$pk<=1&wzp4.merkmale.s$ba %in% ba.grupp$ba.grupp[[i]]&wzp4.merkmale.s$akl==j,
                                                                                               ~^~~
NO COPY: R/BWI3_HR.R:5287:9: style: Words within variable and function names should be separated by '_' rather than '.'.
        wzp4.merkmale.s$nha,0), by=list(wzp4.merkmale.s$tnr),sum)$x)
        ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:5287:29: style: Commas should always have a space after.
        wzp4.merkmale.s$nha,0), by=list(wzp4.merkmale.s$tnr),sum)$x)
                            ^
NO COPY: R/BWI3_HR.R:5287:35: style: Put spaces around all infix operators.
        wzp4.merkmale.s$nha,0), by=list(wzp4.merkmale.s$tnr),sum)$x)
                                 ~^~
NO COPY: R/BWI3_HR.R:5287:41: style: Words within variable and function names should be separated by '_' rather than '.'.
        wzp4.merkmale.s$nha,0), by=list(wzp4.merkmale.s$tnr),sum)$x)
                                        ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:5287:62: style: Commas should always have a space after.
        wzp4.merkmale.s$nha,0), by=list(wzp4.merkmale.s$tnr),sum)$x)
                                                             ^
NO COPY: R/BWI3_HR.R:5288:1: style: Trailing whitespace is superfluous.
      
^~~~~~
NO COPY: R/BWI3_HR.R:5289:20: style: Trailing whitespace is superfluous.
      #Gesamtvorrat 
                   ^
NO COPY: R/BWI3_HR.R:5290:36: style: Commas should always have a space after.
      merkmal.t <- cbind(merkmal.t,stats::aggregate(ifelse(
                                   ^
NO COPY: R/BWI3_HR.R:5291:1: style: lines should not be more than 80 characters.
        wzp4.merkmale.s$pk<=1&wzp4.merkmale.s$ba %in% ba.grupp$ba.grupp[[i]]&wzp4.merkmale.s$akl==j,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:5291:9: style: Words within variable and function names should be separated by '_' rather than '.'.
        wzp4.merkmale.s$pk<=1&wzp4.merkmale.s$ba %in% ba.grupp$ba.grupp[[i]]&wzp4.merkmale.s$akl==j,
        ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:5291:27: style: Put spaces around all infix operators.
        wzp4.merkmale.s$pk<=1&wzp4.merkmale.s$ba %in% ba.grupp$ba.grupp[[i]]&wzp4.merkmale.s$akl==j,
                         ~^~~
NO COPY: R/BWI3_HR.R:5291:30: style: Put spaces around all infix operators.
        wzp4.merkmale.s$pk<=1&wzp4.merkmale.s$ba %in% ba.grupp$ba.grupp[[i]]&wzp4.merkmale.s$akl==j,
                            ~^~
NO COPY: R/BWI3_HR.R:5291:31: style: Words within variable and function names should be separated by '_' rather than '.'.
        wzp4.merkmale.s$pk<=1&wzp4.merkmale.s$ba %in% ba.grupp$ba.grupp[[i]]&wzp4.merkmale.s$akl==j,
                              ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:5291:77: style: Put spaces around all infix operators.
        wzp4.merkmale.s$pk<=1&wzp4.merkmale.s$ba %in% ba.grupp$ba.grupp[[i]]&wzp4.merkmale.s$akl==j,
                                                                           ~^~
NO COPY: R/BWI3_HR.R:5291:78: style: Words within variable and function names should be separated by '_' rather than '.'.
        wzp4.merkmale.s$pk<=1&wzp4.merkmale.s$ba %in% ba.grupp$ba.grupp[[i]]&wzp4.merkmale.s$akl==j,
                                                                             ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:5291:97: style: Put spaces around all infix operators.
        wzp4.merkmale.s$pk<=1&wzp4.merkmale.s$ba %in% ba.grupp$ba.grupp[[i]]&wzp4.merkmale.s$akl==j,
                                                                                               ~^~~
NO COPY: R/BWI3_HR.R:5292:9: style: Words within variable and function names should be separated by '_' rather than '.'.
        wzp4.merkmale.s$nha*wzp4.merkmale.s$volv,0),
        ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:5292:28: style: Put spaces around all infix operators.
        wzp4.merkmale.s$nha*wzp4.merkmale.s$volv,0),
                          ~^~
NO COPY: R/BWI3_HR.R:5292:29: style: Words within variable and function names should be separated by '_' rather than '.'.
        wzp4.merkmale.s$nha*wzp4.merkmale.s$volv,0),
                            ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:5292:50: style: Commas should always have a space after.
        wzp4.merkmale.s$nha*wzp4.merkmale.s$volv,0),
                                                 ^
NO COPY: R/BWI3_HR.R:5293:11: style: Put spaces around all infix operators.
        by=list(wzp4.merkmale.s$tnr),sum)$x)
         ~^~
NO COPY: R/BWI3_HR.R:5293:17: style: Words within variable and function names should be separated by '_' rather than '.'.
        by=list(wzp4.merkmale.s$tnr),sum)$x)
                ^~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:5293:38: style: Commas should always have a space after.
        by=list(wzp4.merkmale.s$tnr),sum)$x)
                                     ^
NO COPY: R/BWI3_HR.R:5294:1: style: Trailing whitespace is superfluous.
      
^~~~~~
NO COPY: R/BWI3_HR.R:5295:1: style: Trailing whitespace is superfluous.
      
^~~~~~
NO COPY: R/BWI3_HR.R:5296:1: style: Trailing whitespace is superfluous.
      
^~~~~~
NO COPY: R/BWI3_HR.R:5297:1: style: lines should not be more than 80 characters.
      names(merkmal.t) <- c("tnr","N.MM","V.MM","oiB.MM","SthV.MM","N.ges","V.ges")
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:5297:35: style: Commas should always have a space after.
      names(merkmal.t) <- c("tnr","N.MM","V.MM","oiB.MM","SthV.MM","N.ges","V.ges")
                                  ^
NO COPY: R/BWI3_HR.R:5297:42: style: Commas should always have a space after.
      names(merkmal.t) <- c("tnr","N.MM","V.MM","oiB.MM","SthV.MM","N.ges","V.ges")
                                         ^
NO COPY: R/BWI3_HR.R:5297:49: style: Commas should always have a space after.
      names(merkmal.t) <- c("tnr","N.MM","V.MM","oiB.MM","SthV.MM","N.ges","V.ges")
                                                ^
NO COPY: R/BWI3_HR.R:5297:58: style: Commas should always have a space after.
      names(merkmal.t) <- c("tnr","N.MM","V.MM","oiB.MM","SthV.MM","N.ges","V.ges")
                                                         ^
NO COPY: R/BWI3_HR.R:5297:68: style: Commas should always have a space after.
      names(merkmal.t) <- c("tnr","N.MM","V.MM","oiB.MM","SthV.MM","N.ges","V.ges")
                                                                   ^
NO COPY: R/BWI3_HR.R:5297:76: style: Commas should always have a space after.
      names(merkmal.t) <- c("tnr","N.MM","V.MM","oiB.MM","SthV.MM","N.ges","V.ges")
                                                                           ^
NO COPY: R/BWI3_HR.R:5299:1: style: Trailing whitespace is superfluous.
      
^~~~~~
NO COPY: R/BWI3_HR.R:5300:57: style: Commas should always have a space after.
      merkmal.t <- merge(xy[TRUE, c("tnr", "m", "hbf")],merkmal.t,by="tnr",
                                                        ^
NO COPY: R/BWI3_HR.R:5300:67: style: Commas should always have a space after.
      merkmal.t <- merge(xy[TRUE, c("tnr", "m", "hbf")],merkmal.t,by="tnr",
                                                                  ^
NO COPY: R/BWI3_HR.R:5300:69: style: Put spaces around all infix operators.
      merkmal.t <- merge(xy[TRUE, c("tnr", "m", "hbf")],merkmal.t,by="tnr",
                                                                   ~^~
NO COPY: R/BWI3_HR.R:5301:31: style: Put spaces around all infix operators.
                         all.x=T)
                             ~^~
NO COPY: R/BWI3_HR.R:5303:1: style: Trailing whitespace is superfluous.
      
^~~~~~
NO COPY: R/BWI3_HR.R:5304:1: style: lines should not be more than 80 characters.
      n <- length(trakte.3[,1])# TODO: is trakte.3 really the one? Is this a bug?
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:5304:29: style: Commas should always have a space after.
      n <- length(trakte.3[,1])# TODO: is trakte.3 really the one? Is this a bug?
                            ^
NO COPY: R/BWI3_HR.R:5306:48: style: Commas should always have a space after.
      R.xy <- r.variance.fun(cbind(merkmal.t$m,merkmal.t$N.MM),n)
                                               ^
NO COPY: R/BWI3_HR.R:5306:64: style: Commas should always have a space after.
      R.xy <- r.variance.fun(cbind(merkmal.t$m,merkmal.t$N.MM),n)
                                                               ^
NO COPY: R/BWI3_HR.R:5307:8: style: Words within variable and function names should be separated by '_' rather than '.'.
      (T.N.MM <- R.xy$R.xy*A)
       ^~~~~~
NO COPY: R/BWI3_HR.R:5307:27: style: Put spaces around all infix operators.
      (T.N.MM <- R.xy$R.xy*A)
                         ~^~
NO COPY: R/BWI3_HR.R:5308:8: style: Words within variable and function names should be separated by '_' rather than '.'.
      (se.T.N.MM <- R.xy$V.R.xy^0.5*A)
       ^~~~~~~~~
NO COPY: R/BWI3_HR.R:5308:26: style: Words within variable and function names should be separated by '_' rather than '.'.
      (se.T.N.MM <- R.xy$V.R.xy^0.5*A)
                         ^~~~~~
NO COPY: R/BWI3_HR.R:5308:32: style: Put spaces around all infix operators.
      (se.T.N.MM <- R.xy$V.R.xy^0.5*A)
                              ~^~
NO COPY: R/BWI3_HR.R:5308:36: style: Put spaces around all infix operators.
      (se.T.N.MM <- R.xy$V.R.xy^0.5*A)
                                  ~^~
NO COPY: R/BWI3_HR.R:5309:1: style: Trailing whitespace is superfluous.
      
^~~~~~
NO COPY: R/BWI3_HR.R:5311:50: style: Commas should always have a space after.
      R.xy <- r.variance.fun(cbind(merkmal.t$hbf,merkmal.t$N.MM),n)
                                                 ^
NO COPY: R/BWI3_HR.R:5311:66: style: Commas should always have a space after.
      R.xy <- r.variance.fun(cbind(merkmal.t$hbf,merkmal.t$N.MM),n)
                                                                 ^
NO COPY: R/BWI3_HR.R:5312:8: style: Words within variable and function names should be separated by '_' rather than '.'.
      (N.MM.ha <- R.xy$R.xy)
       ^~~~~~~
NO COPY: R/BWI3_HR.R:5313:8: style: Words within variable and function names should be separated by '_' rather than '.'.
      (se.N.MM.ha <- R.xy$V.R.xy^0.5)
       ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:5313:27: style: Words within variable and function names should be separated by '_' rather than '.'.
      (se.N.MM.ha <- R.xy$V.R.xy^0.5)
                          ^~~~~~
NO COPY: R/BWI3_HR.R:5313:33: style: Put spaces around all infix operators.
      (se.N.MM.ha <- R.xy$V.R.xy^0.5)
                               ~^~
NO COPY: R/BWI3_HR.R:5314:1: style: Trailing whitespace is superfluous.
      
^~~~~~
NO COPY: R/BWI3_HR.R:5316:48: style: Commas should always have a space after.
      R.xy <- r.variance.fun(cbind(merkmal.t$m,merkmal.t$V.MM),n)
                                               ^
NO COPY: R/BWI3_HR.R:5316:64: style: Commas should always have a space after.
      R.xy <- r.variance.fun(cbind(merkmal.t$m,merkmal.t$V.MM),n)
                                                               ^
NO COPY: R/BWI3_HR.R:5317:8: style: Words within variable and function names should be separated by '_' rather than '.'.
      (T.V.MM <- R.xy$R.xy*A)
       ^~~~~~
NO COPY: R/BWI3_HR.R:5317:27: style: Put spaces around all infix operators.
      (T.V.MM <- R.xy$R.xy*A)
                         ~^~
NO COPY: R/BWI3_HR.R:5318:8: style: Words within variable and function names should be separated by '_' rather than '.'.
      (se.T.V.MM <- R.xy$V.R.xy^0.5*A)
       ^~~~~~~~~
NO COPY: R/BWI3_HR.R:5318:26: style: Words within variable and function names should be separated by '_' rather than '.'.
      (se.T.V.MM <- R.xy$V.R.xy^0.5*A)
                         ^~~~~~
NO COPY: R/BWI3_HR.R:5318:32: style: Put spaces around all infix operators.
      (se.T.V.MM <- R.xy$V.R.xy^0.5*A)
                              ~^~
NO COPY: R/BWI3_HR.R:5318:36: style: Put spaces around all infix operators.
      (se.T.V.MM <- R.xy$V.R.xy^0.5*A)
                                  ~^~
NO COPY: R/BWI3_HR.R:5319:1: style: Trailing whitespace is superfluous.
      
^~~~~~
NO COPY: R/BWI3_HR.R:5321:50: style: Commas should always have a space after.
      R.xy <- r.variance.fun(cbind(merkmal.t$hbf,merkmal.t$V.MM),n)
                                                 ^
NO COPY: R/BWI3_HR.R:5321:66: style: Commas should always have a space after.
      R.xy <- r.variance.fun(cbind(merkmal.t$hbf,merkmal.t$V.MM),n)
                                                                 ^
NO COPY: R/BWI3_HR.R:5322:8: style: Words within variable and function names should be separated by '_' rather than '.'.
      (V.MM.ha <- R.xy$R.xy)
       ^~~~~~~
NO COPY: R/BWI3_HR.R:5323:8: style: Words within variable and function names should be separated by '_' rather than '.'.
      (se.V.MM.ha <- R.xy$V.R.xy^0.5)
       ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:5323:27: style: Words within variable and function names should be separated by '_' rather than '.'.
      (se.V.MM.ha <- R.xy$V.R.xy^0.5)
                          ^~~~~~
NO COPY: R/BWI3_HR.R:5323:33: style: Put spaces around all infix operators.
      (se.V.MM.ha <- R.xy$V.R.xy^0.5)
                               ~^~
NO COPY: R/BWI3_HR.R:5324:1: style: Trailing whitespace is superfluous.
      
^~~~~~
NO COPY: R/BWI3_HR.R:5326:51: style: Commas should always have a space after.
      R.xy <- r.variance.fun(cbind(merkmal.t$N.MM,merkmal.t$V.MM),n)
                                                  ^
NO COPY: R/BWI3_HR.R:5326:67: style: Commas should always have a space after.
      R.xy <- r.variance.fun(cbind(merkmal.t$N.MM,merkmal.t$V.MM),n)
                                                                  ^
NO COPY: R/BWI3_HR.R:5327:8: style: Words within variable and function names should be separated by '_' rather than '.'.
      (V.MM.Stck <- R.xy$R.xy)
       ^~~~~~~~~
NO COPY: R/BWI3_HR.R:5328:8: style: Words within variable and function names should be separated by '_' rather than '.'.
      (se.V.MM.Stck <- R.xy$V.R.xy^0.5)
       ^~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:5328:29: style: Words within variable and function names should be separated by '_' rather than '.'.
      (se.V.MM.Stck <- R.xy$V.R.xy^0.5)
                            ^~~~~~
NO COPY: R/BWI3_HR.R:5328:35: style: Put spaces around all infix operators.
      (se.V.MM.Stck <- R.xy$V.R.xy^0.5)
                                 ~^~
NO COPY: R/BWI3_HR.R:5329:1: style: Trailing whitespace is superfluous.
      
^~~~~~
NO COPY: R/BWI3_HR.R:5331:48: style: Commas should always have a space after.
      R.xy <- r.variance.fun(cbind(merkmal.t$m,merkmal.t$oiB.MM),n)
                                               ^
NO COPY: R/BWI3_HR.R:5331:58: style: Variable and function names should be all lowercase.
      R.xy <- r.variance.fun(cbind(merkmal.t$m,merkmal.t$oiB.MM),n)
                                                         ^~~~~~
NO COPY: R/BWI3_HR.R:5331:66: style: Commas should always have a space after.
      R.xy <- r.variance.fun(cbind(merkmal.t$m,merkmal.t$oiB.MM),n)
                                                                 ^
NO COPY: R/BWI3_HR.R:5332:8: style: Variable and function names should be all lowercase.
      (T.oiB.MM <- R.xy$R.xy*A/1000)
       ^~~~~~~~
NO COPY: R/BWI3_HR.R:5332:8: style: Words within variable and function names should be separated by '_' rather than '.'.
      (T.oiB.MM <- R.xy$R.xy*A/1000)
       ^~~~~~~~
NO COPY: R/BWI3_HR.R:5332:29: style: Put spaces around all infix operators.
      (T.oiB.MM <- R.xy$R.xy*A/1000)
                           ~^~
NO COPY: R/BWI3_HR.R:5332:31: style: Put spaces around all infix operators.
      (T.oiB.MM <- R.xy$R.xy*A/1000)
                             ~^~
NO COPY: R/BWI3_HR.R:5333:8: style: Variable and function names should be all lowercase.
      (se.T.oiB.MM <- R.xy$V.R.xy^0.5*A/1000)
       ^~~~~~~~~~~
NO COPY: R/BWI3_HR.R:5333:8: style: Words within variable and function names should be separated by '_' rather than '.'.
      (se.T.oiB.MM <- R.xy$V.R.xy^0.5*A/1000)
       ^~~~~~~~~~~
NO COPY: R/BWI3_HR.R:5333:28: style: Words within variable and function names should be separated by '_' rather than '.'.
      (se.T.oiB.MM <- R.xy$V.R.xy^0.5*A/1000)
                           ^~~~~~
NO COPY: R/BWI3_HR.R:5333:34: style: Put spaces around all infix operators.
      (se.T.oiB.MM <- R.xy$V.R.xy^0.5*A/1000)
                                ~^~
NO COPY: R/BWI3_HR.R:5333:38: style: Put spaces around all infix operators.
      (se.T.oiB.MM <- R.xy$V.R.xy^0.5*A/1000)
                                    ~^~
NO COPY: R/BWI3_HR.R:5333:40: style: Put spaces around all infix operators.
      (se.T.oiB.MM <- R.xy$V.R.xy^0.5*A/1000)
                                      ~^~
NO COPY: R/BWI3_HR.R:5334:1: style: Trailing whitespace is superfluous.
      
^~~~~~
NO COPY: R/BWI3_HR.R:5336:50: style: Commas should always have a space after.
      R.xy <- r.variance.fun(cbind(merkmal.t$hbf,merkmal.t$oiB.MM),n)
                                                 ^
NO COPY: R/BWI3_HR.R:5336:60: style: Variable and function names should be all lowercase.
      R.xy <- r.variance.fun(cbind(merkmal.t$hbf,merkmal.t$oiB.MM),n)
                                                           ^~~~~~
NO COPY: R/BWI3_HR.R:5336:68: style: Commas should always have a space after.
      R.xy <- r.variance.fun(cbind(merkmal.t$hbf,merkmal.t$oiB.MM),n)
                                                                   ^
NO COPY: R/BWI3_HR.R:5337:8: style: Variable and function names should be all lowercase.
      (oiB.MM.ha <- R.xy$R.xy/1000)
       ^~~~~~~~~
NO COPY: R/BWI3_HR.R:5337:8: style: Words within variable and function names should be separated by '_' rather than '.'.
      (oiB.MM.ha <- R.xy$R.xy/1000)
       ^~~~~~~~~
NO COPY: R/BWI3_HR.R:5337:30: style: Put spaces around all infix operators.
      (oiB.MM.ha <- R.xy$R.xy/1000)
                            ~^~
NO COPY: R/BWI3_HR.R:5338:8: style: Variable and function names should be all lowercase.
      (se.oiB.MM.ha <- R.xy$V.R.xy^0.5/1000)
       ^~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:5338:8: style: Words within variable and function names should be separated by '_' rather than '.'.
      (se.oiB.MM.ha <- R.xy$V.R.xy^0.5/1000)
       ^~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:5338:29: style: Words within variable and function names should be separated by '_' rather than '.'.
      (se.oiB.MM.ha <- R.xy$V.R.xy^0.5/1000)
                            ^~~~~~
NO COPY: R/BWI3_HR.R:5338:35: style: Put spaces around all infix operators.
      (se.oiB.MM.ha <- R.xy$V.R.xy^0.5/1000)
                                 ~^~
NO COPY: R/BWI3_HR.R:5338:39: style: Put spaces around all infix operators.
      (se.oiB.MM.ha <- R.xy$V.R.xy^0.5/1000)
                                     ~^~
NO COPY: R/BWI3_HR.R:5339:1: style: Trailing whitespace is superfluous.
      
^~~~~~
NO COPY: R/BWI3_HR.R:5341:52: style: Commas should always have a space after.
      R.xy <- r.variance.fun(cbind(merkmal.t$N.ges,merkmal.t$N.MM),n)
                                                   ^
NO COPY: R/BWI3_HR.R:5341:68: style: Commas should always have a space after.
      R.xy <- r.variance.fun(cbind(merkmal.t$N.ges,merkmal.t$N.MM),n)
                                                                   ^
NO COPY: R/BWI3_HR.R:5342:8: style: Words within variable and function names should be separated by '_' rather than '.'.
      (Anteil.MM.N <- R.xy$R.xy)
       ^~~~~~~~~~~
NO COPY: R/BWI3_HR.R:5343:8: style: Words within variable and function names should be separated by '_' rather than '.'.
      (se.Anteil.MM.N <- R.xy$V.R.xy^0.5)
       ^~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:5343:31: style: Words within variable and function names should be separated by '_' rather than '.'.
      (se.Anteil.MM.N <- R.xy$V.R.xy^0.5)
                              ^~~~~~
NO COPY: R/BWI3_HR.R:5343:37: style: Put spaces around all infix operators.
      (se.Anteil.MM.N <- R.xy$V.R.xy^0.5)
                                   ~^~
NO COPY: R/BWI3_HR.R:5344:1: style: Trailing whitespace is superfluous.
      
^~~~~~
NO COPY: R/BWI3_HR.R:5346:52: style: Commas should always have a space after.
      R.xy <- r.variance.fun(cbind(merkmal.t$V.ges,merkmal.t$V.MM),n)
                                                   ^
NO COPY: R/BWI3_HR.R:5346:68: style: Commas should always have a space after.
      R.xy <- r.variance.fun(cbind(merkmal.t$V.ges,merkmal.t$V.MM),n)
                                                                   ^
NO COPY: R/BWI3_HR.R:5347:8: style: Words within variable and function names should be separated by '_' rather than '.'.
      (Anteil.MM.V <- R.xy$R.xy)
       ^~~~~~~~~~~
NO COPY: R/BWI3_HR.R:5348:8: style: Words within variable and function names should be separated by '_' rather than '.'.
      (se.Anteil.MM.V <- R.xy$V.R.xy^0.5)
       ^~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:5348:31: style: Words within variable and function names should be separated by '_' rather than '.'.
      (se.Anteil.MM.V <- R.xy$V.R.xy^0.5)
                              ^~~~~~
NO COPY: R/BWI3_HR.R:5348:37: style: Put spaces around all infix operators.
      (se.Anteil.MM.V <- R.xy$V.R.xy^0.5)
                                   ~^~
NO COPY: R/BWI3_HR.R:5349:1: style: Trailing whitespace is superfluous.
      
^~~~~~
NO COPY: R/BWI3_HR.R:5350:1: style: Trailing whitespace is superfluous.
      
^~~~~~
NO COPY: R/BWI3_HR.R:5352:7: style: Words within variable and function names should be separated by '_' rather than '.'.
      attr.bagr.akl.tab[,1,i,j] <- 
      ^~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:5352:26: style: Commas should always have a space after.
      attr.bagr.akl.tab[,1,i,j] <- 
                         ^
NO COPY: R/BWI3_HR.R:5352:28: style: Commas should always have a space after.
      attr.bagr.akl.tab[,1,i,j] <- 
                           ^
NO COPY: R/BWI3_HR.R:5352:30: style: Commas should always have a space after.
      attr.bagr.akl.tab[,1,i,j] <- 
                             ^
NO COPY: R/BWI3_HR.R:5352:35: style: Trailing whitespace is superfluous.
      attr.bagr.akl.tab[,1,i,j] <- 
                                  ^
NO COPY: R/BWI3_HR.R:5353:11: style: Words within variable and function names should be separated by '_' rather than '.'.
        c(T.N.MM,N.MM.ha,T.V.MM,V.MM.ha,V.MM.Stck,T.oiB.MM,oiB.MM.ha,
          ^~~~~~
NO COPY: R/BWI3_HR.R:5353:18: style: Commas should always have a space after.
        c(T.N.MM,N.MM.ha,T.V.MM,V.MM.ha,V.MM.Stck,T.oiB.MM,oiB.MM.ha,
                 ^
NO COPY: R/BWI3_HR.R:5353:18: style: Words within variable and function names should be separated by '_' rather than '.'.
        c(T.N.MM,N.MM.ha,T.V.MM,V.MM.ha,V.MM.Stck,T.oiB.MM,oiB.MM.ha,
                 ^~~~~~~
NO COPY: R/BWI3_HR.R:5353:26: style: Commas should always have a space after.
        c(T.N.MM,N.MM.ha,T.V.MM,V.MM.ha,V.MM.Stck,T.oiB.MM,oiB.MM.ha,
                         ^
NO COPY: R/BWI3_HR.R:5353:26: style: Words within variable and function names should be separated by '_' rather than '.'.
        c(T.N.MM,N.MM.ha,T.V.MM,V.MM.ha,V.MM.Stck,T.oiB.MM,oiB.MM.ha,
                         ^~~~~~
NO COPY: R/BWI3_HR.R:5353:33: style: Commas should always have a space after.
        c(T.N.MM,N.MM.ha,T.V.MM,V.MM.ha,V.MM.Stck,T.oiB.MM,oiB.MM.ha,
                                ^
NO COPY: R/BWI3_HR.R:5353:33: style: Words within variable and function names should be separated by '_' rather than '.'.
        c(T.N.MM,N.MM.ha,T.V.MM,V.MM.ha,V.MM.Stck,T.oiB.MM,oiB.MM.ha,
                                ^~~~~~~
NO COPY: R/BWI3_HR.R:5353:41: style: Commas should always have a space after.
        c(T.N.MM,N.MM.ha,T.V.MM,V.MM.ha,V.MM.Stck,T.oiB.MM,oiB.MM.ha,
                                        ^
NO COPY: R/BWI3_HR.R:5353:41: style: Words within variable and function names should be separated by '_' rather than '.'.
        c(T.N.MM,N.MM.ha,T.V.MM,V.MM.ha,V.MM.Stck,T.oiB.MM,oiB.MM.ha,
                                        ^~~~~~~~~
NO COPY: R/BWI3_HR.R:5353:51: style: Commas should always have a space after.
        c(T.N.MM,N.MM.ha,T.V.MM,V.MM.ha,V.MM.Stck,T.oiB.MM,oiB.MM.ha,
                                                  ^
NO COPY: R/BWI3_HR.R:5353:51: style: Variable and function names should be all lowercase.
        c(T.N.MM,N.MM.ha,T.V.MM,V.MM.ha,V.MM.Stck,T.oiB.MM,oiB.MM.ha,
                                                  ^~~~~~~~
NO COPY: R/BWI3_HR.R:5353:51: style: Words within variable and function names should be separated by '_' rather than '.'.
        c(T.N.MM,N.MM.ha,T.V.MM,V.MM.ha,V.MM.Stck,T.oiB.MM,oiB.MM.ha,
                                                  ^~~~~~~~
NO COPY: R/BWI3_HR.R:5353:60: style: Commas should always have a space after.
        c(T.N.MM,N.MM.ha,T.V.MM,V.MM.ha,V.MM.Stck,T.oiB.MM,oiB.MM.ha,
                                                           ^
NO COPY: R/BWI3_HR.R:5353:60: style: Variable and function names should be all lowercase.
        c(T.N.MM,N.MM.ha,T.V.MM,V.MM.ha,V.MM.Stck,T.oiB.MM,oiB.MM.ha,
                                                           ^~~~~~~~~
NO COPY: R/BWI3_HR.R:5353:60: style: Words within variable and function names should be separated by '_' rather than '.'.
        c(T.N.MM,N.MM.ha,T.V.MM,V.MM.ha,V.MM.Stck,T.oiB.MM,oiB.MM.ha,
                                                           ^~~~~~~~~
NO COPY: R/BWI3_HR.R:5354:11: style: Words within variable and function names should be separated by '_' rather than '.'.
          Anteil.MM.N*100,Anteil.MM.V*100)
          ^~~~~~~~~~~
NO COPY: R/BWI3_HR.R:5354:22: style: Put spaces around all infix operators.
          Anteil.MM.N*100,Anteil.MM.V*100)
                    ~^~
NO COPY: R/BWI3_HR.R:5354:27: style: Commas should always have a space after.
          Anteil.MM.N*100,Anteil.MM.V*100)
                          ^
NO COPY: R/BWI3_HR.R:5354:27: style: Words within variable and function names should be separated by '_' rather than '.'.
          Anteil.MM.N*100,Anteil.MM.V*100)
                          ^~~~~~~~~~~
NO COPY: R/BWI3_HR.R:5354:38: style: Put spaces around all infix operators.
          Anteil.MM.N*100,Anteil.MM.V*100)
                                    ~^~
NO COPY: R/BWI3_HR.R:5355:1: style: lines should not be more than 80 characters.
      attr.bagr.akl.tab[,2,i,j] <- c(se.T.N.MM,se.N.MM.ha,se.T.V.MM,se.V.MM.ha,se.V.MM.Stck,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:5355:7: style: Words within variable and function names should be separated by '_' rather than '.'.
      attr.bagr.akl.tab[,2,i,j] <- c(se.T.N.MM,se.N.MM.ha,se.T.V.MM,se.V.MM.ha,se.V.MM.Stck,
      ^~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:5355:26: style: Commas should always have a space after.
      attr.bagr.akl.tab[,2,i,j] <- c(se.T.N.MM,se.N.MM.ha,se.T.V.MM,se.V.MM.ha,se.V.MM.Stck,
                         ^
NO COPY: R/BWI3_HR.R:5355:28: style: Commas should always have a space after.
      attr.bagr.akl.tab[,2,i,j] <- c(se.T.N.MM,se.N.MM.ha,se.T.V.MM,se.V.MM.ha,se.V.MM.Stck,
                           ^
NO COPY: R/BWI3_HR.R:5355:30: style: Commas should always have a space after.
      attr.bagr.akl.tab[,2,i,j] <- c(se.T.N.MM,se.N.MM.ha,se.T.V.MM,se.V.MM.ha,se.V.MM.Stck,
                             ^
NO COPY: R/BWI3_HR.R:5355:38: style: Words within variable and function names should be separated by '_' rather than '.'.
      attr.bagr.akl.tab[,2,i,j] <- c(se.T.N.MM,se.N.MM.ha,se.T.V.MM,se.V.MM.ha,se.V.MM.Stck,
                                     ^~~~~~~~~
NO COPY: R/BWI3_HR.R:5355:48: style: Commas should always have a space after.
      attr.bagr.akl.tab[,2,i,j] <- c(se.T.N.MM,se.N.MM.ha,se.T.V.MM,se.V.MM.ha,se.V.MM.Stck,
                                               ^
NO COPY: R/BWI3_HR.R:5355:48: style: Words within variable and function names should be separated by '_' rather than '.'.
      attr.bagr.akl.tab[,2,i,j] <- c(se.T.N.MM,se.N.MM.ha,se.T.V.MM,se.V.MM.ha,se.V.MM.Stck,
                                               ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:5355:59: style: Commas should always have a space after.
      attr.bagr.akl.tab[,2,i,j] <- c(se.T.N.MM,se.N.MM.ha,se.T.V.MM,se.V.MM.ha,se.V.MM.Stck,
                                                          ^
NO COPY: R/BWI3_HR.R:5355:59: style: Words within variable and function names should be separated by '_' rather than '.'.
      attr.bagr.akl.tab[,2,i,j] <- c(se.T.N.MM,se.N.MM.ha,se.T.V.MM,se.V.MM.ha,se.V.MM.Stck,
                                                          ^~~~~~~~~
NO COPY: R/BWI3_HR.R:5355:69: style: Commas should always have a space after.
      attr.bagr.akl.tab[,2,i,j] <- c(se.T.N.MM,se.N.MM.ha,se.T.V.MM,se.V.MM.ha,se.V.MM.Stck,
                                                                    ^
NO COPY: R/BWI3_HR.R:5355:69: style: Words within variable and function names should be separated by '_' rather than '.'.
      attr.bagr.akl.tab[,2,i,j] <- c(se.T.N.MM,se.N.MM.ha,se.T.V.MM,se.V.MM.ha,se.V.MM.Stck,
                                                                    ^~~~~~~~~~
NO COPY: R/BWI3_HR.R:5355:80: style: Commas should always have a space after.
      attr.bagr.akl.tab[,2,i,j] <- c(se.T.N.MM,se.N.MM.ha,se.T.V.MM,se.V.MM.ha,se.V.MM.Stck,
                                                                               ^
NO COPY: R/BWI3_HR.R:5355:80: style: Words within variable and function names should be separated by '_' rather than '.'.
      attr.bagr.akl.tab[,2,i,j] <- c(se.T.N.MM,se.N.MM.ha,se.T.V.MM,se.V.MM.ha,se.V.MM.Stck,
                                                                               ^~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:5356:1: style: lines should not be more than 80 characters.
                               se.T.oiB.MM,se.oiB.MM.ha,se.Anteil.MM.N*100,se.Anteil.MM.V*100)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:5356:32: style: Variable and function names should be all lowercase.
                               se.T.oiB.MM,se.oiB.MM.ha,se.Anteil.MM.N*100,se.Anteil.MM.V*100)
                               ^~~~~~~~~~~
NO COPY: R/BWI3_HR.R:5356:32: style: Words within variable and function names should be separated by '_' rather than '.'.
                               se.T.oiB.MM,se.oiB.MM.ha,se.Anteil.MM.N*100,se.Anteil.MM.V*100)
                               ^~~~~~~~~~~
NO COPY: R/BWI3_HR.R:5356:44: style: Commas should always have a space after.
                               se.T.oiB.MM,se.oiB.MM.ha,se.Anteil.MM.N*100,se.Anteil.MM.V*100)
                                           ^
NO COPY: R/BWI3_HR.R:5356:44: style: Variable and function names should be all lowercase.
                               se.T.oiB.MM,se.oiB.MM.ha,se.Anteil.MM.N*100,se.Anteil.MM.V*100)
                                           ^~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:5356:44: style: Words within variable and function names should be separated by '_' rather than '.'.
                               se.T.oiB.MM,se.oiB.MM.ha,se.Anteil.MM.N*100,se.Anteil.MM.V*100)
                                           ^~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:5356:57: style: Commas should always have a space after.
                               se.T.oiB.MM,se.oiB.MM.ha,se.Anteil.MM.N*100,se.Anteil.MM.V*100)
                                                        ^
NO COPY: R/BWI3_HR.R:5356:57: style: Words within variable and function names should be separated by '_' rather than '.'.
                               se.T.oiB.MM,se.oiB.MM.ha,se.Anteil.MM.N*100,se.Anteil.MM.V*100)
                                                        ^~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:5356:71: style: Put spaces around all infix operators.
                               se.T.oiB.MM,se.oiB.MM.ha,se.Anteil.MM.N*100,se.Anteil.MM.V*100)
                                                                     ~^~
NO COPY: R/BWI3_HR.R:5356:76: style: Commas should always have a space after.
                               se.T.oiB.MM,se.oiB.MM.ha,se.Anteil.MM.N*100,se.Anteil.MM.V*100)
                                                                           ^
NO COPY: R/BWI3_HR.R:5356:76: style: Words within variable and function names should be separated by '_' rather than '.'.
                               se.T.oiB.MM,se.oiB.MM.ha,se.Anteil.MM.N*100,se.Anteil.MM.V*100)
                                                                           ^~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:5356:90: style: Put spaces around all infix operators.
                               se.T.oiB.MM,se.oiB.MM.ha,se.Anteil.MM.N*100,se.Anteil.MM.V*100)
                                                                                        ~^~
NO COPY: R/BWI3_HR.R:5357:6: style: Trailing whitespace is superfluous.
    } 
     ^
NO COPY: R/BWI3_HR.R:5359:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: R/BWI3_HR.R:5361:20: style: Commas should always have a space after.
  a <- regexpr("/",baeume$bemerk[baeume$stp==0][1],fixed=T)
                   ^
NO COPY: R/BWI3_HR.R:5361:44: style: Put spaces around all infix operators.
  a <- regexpr("/",baeume$bemerk[baeume$stp==0][1],fixed=T)
                                          ~^~~
NO COPY: R/BWI3_HR.R:5361:52: style: Commas should always have a space after.
  a <- regexpr("/",baeume$bemerk[baeume$stp==0][1],fixed=T)
                                                   ^
NO COPY: R/BWI3_HR.R:5361:57: style: Put spaces around all infix operators.
  a <- regexpr("/",baeume$bemerk[baeume$stp==0][1],fixed=T)
                                                       ~^~
NO COPY: R/BWI3_HR.R:5362:51: style: Put spaces around all infix operators.
  b <- nchar(as.character(baeume$bemerk[baeume$stp==0][1]))
                                                 ~^~~
NO COPY: R/BWI3_HR.R:5363:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  version.baeume.b  <- substr(as.character(baeume$bemerk[baeume$stp==0][1]),a,b)
  ^~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:5363:3: warning: local variable 'version.baeume.b' assigned but may not be used
  version.baeume.b  <- substr(as.character(baeume$bemerk[baeume$stp==0][1]),a,b)
  ^~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:5363:68: style: Put spaces around all infix operators.
  version.baeume.b  <- substr(as.character(baeume$bemerk[baeume$stp==0][1]),a,b)
                                                                  ~^~~
NO COPY: R/BWI3_HR.R:5363:77: style: Commas should always have a space after.
  version.baeume.b  <- substr(as.character(baeume$bemerk[baeume$stp==0][1]),a,b)
                                                                            ^
NO COPY: R/BWI3_HR.R:5363:79: style: Commas should always have a space after.
  version.baeume.b  <- substr(as.character(baeume$bemerk[baeume$stp==0][1]),a,b)
                                                                              ^
NO COPY: R/BWI3_HR.R:5364:20: style: Put spaces around all infix operators.
  Log <- list(Datum=Sys.time(),
                  ~^~
NO COPY: R/BWI3_HR.R:5365:1: style: lines should not be more than 80 characters.
              Version.baeume.b=substr(as.character(baeume$bemerk[baeume$stp==0][1]),a,b))
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:5365:31: style: Put spaces around all infix operators.
              Version.baeume.b=substr(as.character(baeume$bemerk[baeume$stp==0][1]),a,b))
                             ~^~
NO COPY: R/BWI3_HR.R:5365:76: style: Put spaces around all infix operators.
              Version.baeume.b=substr(as.character(baeume$bemerk[baeume$stp==0][1]),a,b))
                                                                          ~^~~
NO COPY: R/BWI3_HR.R:5365:85: style: Commas should always have a space after.
              Version.baeume.b=substr(as.character(baeume$bemerk[baeume$stp==0][1]),a,b))
                                                                                    ^
NO COPY: R/BWI3_HR.R:5365:87: style: Commas should always have a space after.
              Version.baeume.b=substr(as.character(baeume$bemerk[baeume$stp==0][1]),a,b))
                                                                                      ^
NO COPY: R/BWI3_HR.R:5366:34: style: Commas should always have a space after.
  akl.lab <- akl.lab.fun(A.klass,A.k)
                                 ^
NO COPY: R/BWI3_HR.R:5367:19: style: Put spaces around all infix operators.
  return( list(Log=Log, Stratum=auswahl, nTE=n.te.s, HBF=T.hbf, se.HBF=se.T.hbf,
                 ~^~
NO COPY: R/BWI3_HR.R:5367:32: style: Put spaces around all infix operators.
  return( list(Log=Log, Stratum=auswahl, nTE=n.te.s, HBF=T.hbf, se.HBF=se.T.hbf,
                              ~^~
NO COPY: R/BWI3_HR.R:5367:45: style: Put spaces around all infix operators.
  return( list(Log=Log, Stratum=auswahl, nTE=n.te.s, HBF=T.hbf, se.HBF=se.T.hbf,
                                           ~^~
NO COPY: R/BWI3_HR.R:5367:46: style: Words within variable and function names should be separated by '_' rather than '.'.
  return( list(Log=Log, Stratum=auswahl, nTE=n.te.s, HBF=T.hbf, se.HBF=se.T.hbf,
                                             ^~~~~~
NO COPY: R/BWI3_HR.R:5367:57: style: Put spaces around all infix operators.
  return( list(Log=Log, Stratum=auswahl, nTE=n.te.s, HBF=T.hbf, se.HBF=se.T.hbf,
                                                       ~^~
NO COPY: R/BWI3_HR.R:5367:71: style: Put spaces around all infix operators.
  return( list(Log=Log, Stratum=auswahl, nTE=n.te.s, HBF=T.hbf, se.HBF=se.T.hbf,
                                                                     ~^~
NO COPY: R/BWI3_HR.R:5367:72: style: Words within variable and function names should be separated by '_' rather than '.'.
  return( list(Log=Log, Stratum=auswahl, nTE=n.te.s, HBF=T.hbf, se.HBF=se.T.hbf,
                                                                       ^~~~~~~~
NO COPY: R/BWI3_HR.R:5368:1: style: lines should not be more than 80 characters.
               BL=T.bl,se.BL=se.T.bl,iBL=T.ibl,se.iBL=se.T.ibl,LK=lk,se.LK=se.lk,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:5368:18: style: Put spaces around all infix operators.
               BL=T.bl,se.BL=se.T.bl,iBL=T.ibl,se.iBL=se.T.ibl,LK=lk,se.LK=se.lk,
                ~^~
NO COPY: R/BWI3_HR.R:5368:24: style: Commas should always have a space after.
               BL=T.bl,se.BL=se.T.bl,iBL=T.ibl,se.iBL=se.T.ibl,LK=lk,se.LK=se.lk,
                       ^
NO COPY: R/BWI3_HR.R:5368:29: style: Put spaces around all infix operators.
               BL=T.bl,se.BL=se.T.bl,iBL=T.ibl,se.iBL=se.T.ibl,LK=lk,se.LK=se.lk,
                           ~^~
NO COPY: R/BWI3_HR.R:5368:30: style: Words within variable and function names should be separated by '_' rather than '.'.
               BL=T.bl,se.BL=se.T.bl,iBL=T.ibl,se.iBL=se.T.ibl,LK=lk,se.LK=se.lk,
                             ^~~~~~~
NO COPY: R/BWI3_HR.R:5368:38: style: Commas should always have a space after.
               BL=T.bl,se.BL=se.T.bl,iBL=T.ibl,se.iBL=se.T.ibl,LK=lk,se.LK=se.lk,
                                     ^
NO COPY: R/BWI3_HR.R:5368:41: style: Put spaces around all infix operators.
               BL=T.bl,se.BL=se.T.bl,iBL=T.ibl,se.iBL=se.T.ibl,LK=lk,se.LK=se.lk,
                                       ~^~
NO COPY: R/BWI3_HR.R:5368:48: style: Commas should always have a space after.
               BL=T.bl,se.BL=se.T.bl,iBL=T.ibl,se.iBL=se.T.ibl,LK=lk,se.LK=se.lk,
                                               ^
NO COPY: R/BWI3_HR.R:5368:54: style: Put spaces around all infix operators.
               BL=T.bl,se.BL=se.T.bl,iBL=T.ibl,se.iBL=se.T.ibl,LK=lk,se.LK=se.lk,
                                                    ~^~
NO COPY: R/BWI3_HR.R:5368:55: style: Words within variable and function names should be separated by '_' rather than '.'.
               BL=T.bl,se.BL=se.T.bl,iBL=T.ibl,se.iBL=se.T.ibl,LK=lk,se.LK=se.lk,
                                                      ^~~~~~~~
NO COPY: R/BWI3_HR.R:5368:64: style: Commas should always have a space after.
               BL=T.bl,se.BL=se.T.bl,iBL=T.ibl,se.iBL=se.T.ibl,LK=lk,se.LK=se.lk,
                                                               ^
NO COPY: R/BWI3_HR.R:5368:66: style: Put spaces around all infix operators.
               BL=T.bl,se.BL=se.T.bl,iBL=T.ibl,se.iBL=se.T.ibl,LK=lk,se.LK=se.lk,
                                                                ~^~
NO COPY: R/BWI3_HR.R:5368:70: style: Commas should always have a space after.
               BL=T.bl,se.BL=se.T.bl,iBL=T.ibl,se.iBL=se.T.ibl,LK=lk,se.LK=se.lk,
                                                                     ^
NO COPY: R/BWI3_HR.R:5368:75: style: Put spaces around all infix operators.
               BL=T.bl,se.BL=se.T.bl,iBL=T.ibl,se.iBL=se.T.ibl,LK=lk,se.LK=se.lk,
                                                                         ~^~
NO COPY: R/BWI3_HR.R:5369:24: style: Put spaces around all infix operators.
               Merkmale=merkmale,BAGR=ba.grupp$bagr.lab, AKL = akl.lab,
                      ~^~
NO COPY: R/BWI3_HR.R:5369:34: style: Commas should always have a space after.
               Merkmale=merkmale,BAGR=ba.grupp$bagr.lab, AKL = akl.lab,
                                 ^
NO COPY: R/BWI3_HR.R:5369:38: style: Put spaces around all infix operators.
               Merkmale=merkmale,BAGR=ba.grupp$bagr.lab, AKL = akl.lab,
                                    ~^~
NO COPY: R/BWI3_HR.R:5370:25: style: Put spaces around all infix operators.
               Kennwerte=Kennwerte,
                       ~^~
NO COPY: R/BWI3_HR.R:5371:37: style: Put spaces around all infix operators.
               Kennwert_Tabelle_BAGR=attr.bagr.akl.tab))
                                   ~^~
NO COPY: R/BWI3_HR.R:5371:38: style: Words within variable and function names should be separated by '_' rather than '.'.
               Kennwert_Tabelle_BAGR=attr.bagr.akl.tab))
                                     ^~~~~~~~~~~~~~~~~
NO COPY: R/BWI3_HR.R:5372:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: R/deadwood.R:17:1: style: lines should not be more than 80 characters.
        # Mittendurchmesser wird bei Bruchst\u00fccken (mit 2 Durchmessern als mittlerer
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/deadwood.R:20:41: style: Trailing whitespace is superfluous.
                             round(200 * 
                                        ^
NO COPY: R/deadwood.R:27:31: style: Commas should always have a space after.
        deadwood$anz <- rep(1,length(deadwood[,1]))
                              ^
NO COPY: R/deadwood.R:27:48: style: Commas should always have a space after.
        deadwood$anz <- rep(1,length(deadwood[,1]))
                                               ^
NO COPY: R/deadwood.R:42:11: style: Put spaces around all infix operators.
    index <-totholz[["tart"]] != 4 & totholz[["tbd"]] >= 20 | 
          ^~~
NO COPY: R/deadwood.R:42:62: style: Trailing whitespace is superfluous.
    index <-totholz[["tart"]] != 4 & totholz[["tbd"]] >= 20 | 
                                                             ^
NO COPY: R/deadwood.R:43:67: style: Trailing whitespace is superfluous.
                totholz[["tart"]] == 4 & (totholz[["tbd"]] >= 60 | 
                                                                  ^
NO COPY: R/deadwood.R:44:68: style: Trailing whitespace is superfluous.
                                           totholz[["lge"]] >= 0.5) 
                                                                   ^
NO COPY: R/deadwood.R:61:33: style: Trailing whitespace is superfluous.
    totholz <- totholz[, needed] 
                                ^
NO COPY: R/deadwood.R:77:51: style: Trailing whitespace is superfluous.
deadwood <- function(totholz, v = c("tnr", "enr"), 
                                                  ^
NO COPY: R/deadwood.R:89:25: style: Put spaces around all infix operators.
    l <- eval(parse(text=paste0("list(", 
                       ~^~
NO COPY: R/deadwood.R:89:41: style: Trailing whitespace is superfluous.
    l <- eval(parse(text=paste0("list(", 
                                        ^
NO COPY: R/deadwood.R:92:68: style: Trailing whitespace is superfluous.
    t <- stats::aggregate(totholz$tvol * totholz$thf * totholz$anz, 
                                                                   ^
NO COPY: R/deadwood.R:93:22: style: Put spaces around all infix operators.
                   by=l,
                    ~^~
NO COPY: R/deadwood.R:94:23: style: Put spaces around all infix operators.
                   FUN=sum)
                     ~^~
NO COPY: R/figures_and_tables.R:2:1: style: Use two spaces to indent, never tabs.
			    label_prefix = "total") {
^~~
NO COPY: R/figures_and_tables.R:3:1: style: Use two spaces to indent, never tabs.
	   ggplot2::theme(axis.title =  ggplot2::element_text(colour = "black", size = 20),
^
NO COPY: R/figures_and_tables.R:3:1: style: Use two spaces to indent, never tabs.
	   ggplot2::theme(legend.title = ggplot2::element_text(colour = "black", size = 16),
^
NO COPY: R/figures_and_tables.R:3:1: style: Use two spaces to indent, never tabs.
	   ggplot2::theme(plot.title = ggplot2::element_text(colour = "black", size = 20))
^
NO COPY: R/figures_and_tables.R:3:1: style: Use two spaces to indent, never tabs.
	 ggplot2::theme(strip.text.y = ggplot2::element_text(size=12))
^
NO COPY: R/figures_and_tables.R:3:1: style: Use two spaces to indent, never tabs.
	   ggplot2::ggplot(data = data,
^
NO COPY: R/figures_and_tables.R:3:1: style: Use two spaces to indent, never tabs.
	   ggplot2::ggplot(subset(data, eval(parse(text = subs))),
^
NO COPY: R/figures_and_tables.R:4:1: style: Use two spaces to indent, never tabs.
		 axis.text =  ggplot2::element_text(colour = "black", size = 20))
^~
NO COPY: R/figures_and_tables.R:4:1: style: Use two spaces to indent, never tabs.
		 legend.text = ggplot2::element_text(colour = "black", size = 16)
^~
NO COPY: R/figures_and_tables.R:4:1: style: Use two spaces to indent, never tabs.
	   )
^
NO COPY: R/figures_and_tables.R:4:1: style: Use two spaces to indent, never tabs.
	 )
^
NO COPY: R/figures_and_tables.R:4:1: style: Use two spaces to indent, never tabs.
		  ggplot2::aes_string(y = "prediction",
^~
NO COPY: R/figures_and_tables.R:4:1: style: Use two spaces to indent, never tabs.
		  ggplot2::aes_string(y = "prediction",
^~
NO COPY: R/figures_and_tables.R:5:1: style: Use two spaces to indent, never tabs.
	   )
^
NO COPY: R/figures_and_tables.R:5:1: style: Use two spaces to indent, never tabs.
		 )
^~
NO COPY: R/figures_and_tables.R:5:1: style: Use two spaces to indent, never tabs.
		      x = "group",
^~
NO COPY: R/figures_and_tables.R:5:1: style: Use two spaces to indent, never tabs.
			     x = x, #deparse(substitute(g)),
^~~
NO COPY: R/figures_and_tables.R:6:1: style: Use two spaces to indent, never tabs.
	   )
^
NO COPY: R/figures_and_tables.R:6:1: style: Use two spaces to indent, never tabs.
		      fill = factor("bwi")
^~
NO COPY: R/figures_and_tables.R:6:1: style: Use two spaces to indent, never tabs.
			     fill = "factor(bwi)"
^~~
NO COPY: R/figures_and_tables.R:7:1: style: Use two spaces to indent, never tabs.
	species_index <- which(species == bwi1$BAGR)  
^
NO COPY: R/figures_and_tables.R:7:1: style: Use two spaces to indent, never tabs.
		      ), 
^~
NO COPY: R/figures_and_tables.R:7:1: style: Use two spaces to indent, never tabs.
			     ), 
^~~
NO COPY: R/figures_and_tables.R:7:1: style: Use two spaces to indent, never tabs.
				  measure.vars = c("prediction", 
^~~~
NO COPY: R/figures_and_tables.R:8:1: style: Use two spaces to indent, never tabs.
		  group = "group") +
^~
NO COPY: R/figures_and_tables.R:8:1: style: Use two spaces to indent, never tabs.
	index <- which(abbreviation == bwi1$Attribute1)  
^
NO COPY: R/figures_and_tables.R:8:1: style: Use two spaces to indent, never tabs.
		  group = deparse(substitute(x))) +
^~
NO COPY: R/figures_and_tables.R:8:1: style: Use two spaces to indent, never tabs.
						   "standard_error"
^~~~~~
NO COPY: R/figures_and_tables.R:9:1: style: Use two spaces to indent, never tabs.
	throw(cat("got unkown species", species, ". Should be one of",
^
NO COPY: R/figures_and_tables.R:9:1: style: Use two spaces to indent, never tabs.
	   ggplot2::geom_bar(stat = "identity", position =  ggplot2::position_dodge()) +
^
NO COPY: R/figures_and_tables.R:9:1: style: Use two spaces to indent, never tabs.
	statistics_array  <-  "T.FVBN.Bagr.Akl.Dkl"
^
NO COPY: R/figures_and_tables.R:9:1: style: Use two spaces to indent, never tabs.
	   ggplot2::geom_bar(stat = "identity", position = ggplot2::position_dodge()) +
^
NO COPY: R/figures_and_tables.R:9:1: style: Use two spaces to indent, never tabs.
						   )
^~~~~~
NO COPY: R/figures_and_tables.R:10:1: style: Use two spaces to indent, never tabs.
		 bwi1$BAGR, "."
^~
NO COPY: R/figures_and_tables.R:10:1: style: Use two spaces to indent, never tabs.
	   ggplot2::geom_errorbar(ggplot2::aes(ymin = "prediction" - "standard_error",
^
NO COPY: R/figures_and_tables.R:10:1: style: Use two spaces to indent, never tabs.
	   ggplot2::geom_errorbar(ggplot2::aes_string(ymin = "prediction" - "standard_error",
^
NO COPY: R/figures_and_tables.R:10:1: style: Use two spaces to indent, never tabs.
				  )
^~~~
NO COPY: R/figures_and_tables.R:11:1: style: lines should not be more than 80 characters.
	   ggplot2::theme(axis.title =  ggplot2::element_text(colour = "black", size = 20),
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/figures_and_tables.R:11:1: style: Use two spaces to indent, never tabs.
		 )
^~
NO COPY: R/figures_and_tables.R:11:1: style: Use two spaces to indent, never tabs.
			     ymax = "prediction" + "standard_error"
^~~
NO COPY: R/figures_and_tables.R:11:1: style: Use two spaces to indent, never tabs.
	index <- which(abbreviation == bwi1$Attribute2)  
^
NO COPY: R/figures_and_tables.R:11:1: style: Use two spaces to indent, never tabs.
			     ymax = "prediction" + "standard_error"
^~~
NO COPY: R/figures_and_tables.R:11:38: style: Put spaces around all infix operators.
	   ggplot2::theme(axis.title =  ggplot2::element_text(colour = "black", size = 20),
                                    ~^~
NO COPY: R/figures_and_tables.R:11:70: style: Put spaces around all infix operators.
	   ggplot2::theme(axis.title =  ggplot2::element_text(colour = "black", size = 20),
                                                                    ~^~
NO COPY: R/figures_and_tables.R:12:1: style: Use two spaces to indent, never tabs.
	)
^
NO COPY: R/figures_and_tables.R:12:1: style: Use two spaces to indent, never tabs.
			     ),
^~~
NO COPY: R/figures_and_tables.R:12:1: style: Use two spaces to indent, never tabs.
	statistics_array  <-  "FVBN.ha.Bagr.Akl.Dkl"
^
NO COPY: R/figures_and_tables.R:12:1: style: Use two spaces to indent, never tabs.
			     ),
^~~
NO COPY: R/figures_and_tables.R:12:28: style: Put spaces around all infix operators.
		 axis.text =  ggplot2::element_text(colour = "black", size = 20))
                          ~^~
NO COPY: R/figures_and_tables.R:12:60: style: Put spaces around all infix operators.
		 axis.text =  ggplot2::element_text(colour = "black", size = 20))
                                                          ~^
NO COPY: R/figures_and_tables.R:13:1: style: Use two spaces to indent, never tabs.
			 width = .3,
^~~
NO COPY: R/figures_and_tables.R:13:1: style: Use two spaces to indent, never tabs.
			 width = .3,
^~~
NO COPY: R/figures_and_tables.R:14:1: style: Use two spaces to indent, never tabs.
			 position = ggplot2::position_dodge(width=0.9)
^~~
NO COPY: R/figures_and_tables.R:14:1: style: Use two spaces to indent, never tabs.
			 position = ggplot2::position_dodge(width=0.9)
^~~
NO COPY: R/figures_and_tables.R:14:1: style: Use two spaces to indent, never tabs.
			 grouping ~ bwi )
^~~
NO COPY: R/figures_and_tables.R:15:1: style: Use two spaces to indent, never tabs.
	attribute_index <- which(abbreviation == bwi1$Attribute1)  
^
NO COPY: R/figures_and_tables.R:15:1: style: Use two spaces to indent, never tabs.
			 ) +
^~~
NO COPY: R/figures_and_tables.R:15:1: style: Use two spaces to indent, never tabs.
	Reduce(function(...) merge(..., all = T), 
^
NO COPY: R/figures_and_tables.R:15:1: style: Use two spaces to indent, never tabs.
			 ) +
^~~
NO COPY: R/figures_and_tables.R:16:1: style: Use two spaces to indent, never tabs.
	array_containing_statistics  <-  "T.FVBN.Bagr.Akl.Dkl"
^
NO COPY: R/figures_and_tables.R:16:1: style: Use two spaces to indent, never tabs.
	   ggplot2::scale_fill_manual(values = get_data("colors_bwi"), name = "BWI") +
^
NO COPY: R/figures_and_tables.R:16:1: style: Use two spaces to indent, never tabs.
	       list(
^
NO COPY: R/figures_and_tables.R:16:1: style: Use two spaces to indent, never tabs.
	   ggplot2::scale_fill_manual(values = get_data("colors_bwi"), name = "BWI") +
^
NO COPY: R/figures_and_tables.R:17:1: style: Use two spaces to indent, never tabs.
	   ggplot2::theme(axis.text.x  = ggplot2::element_text(size = 8)) +
^
NO COPY: R/figures_and_tables.R:17:1: style: Use two spaces to indent, never tabs.
		    data.frame(bwi = "1987",
^~
NO COPY: R/figures_and_tables.R:17:1: style: Use two spaces to indent, never tabs.
	   ggplot2::scale_y_continuous(labels = scales::comma) +
^
NO COPY: R/figures_and_tables.R:18:1: style: Use two spaces to indent, never tabs.
	attribute_index <- which(abbreviation == bwi1$Attribute2)  
^
NO COPY: R/figures_and_tables.R:18:1: style: Use two spaces to indent, never tabs.
	   ggplot2::xlab(get_label_for_abbreviation(as.character(unique(data$grouping_variable)),
^
NO COPY: R/figures_and_tables.R:18:1: style: Use two spaces to indent, never tabs.
			       Baumartengruppe = factor(bwi1$BAGR, 
^~~
NO COPY: R/figures_and_tables.R:18:1: style: Use two spaces to indent, never tabs.
	   ggplot2::xlab(x) +
^
NO COPY: R/figures_and_tables.R:19:1: style: Use two spaces to indent, never tabs.
	array_containing_statistics  <-  "FVBN.ha.Bagr.Akl.Dkl"
^
NO COPY: R/figures_and_tables.R:19:1: style: Use two spaces to indent, never tabs.
					  "text_label")) + 
^~~~~
NO COPY: R/figures_and_tables.R:19:1: style: Use two spaces to indent, never tabs.
							levels = bwi1$BAGR),
^~~~~~~
NO COPY: R/figures_and_tables.R:19:1: style: Use two spaces to indent, never tabs.
	   ggplot2::ylab(get_label_for_abbreviation(unique(data$abbreviation), "axis_label")) +
^
NO COPY: R/figures_and_tables.R:20:1: style: Use two spaces to indent, never tabs.
	   ggplot2::scale_y_continuous(labels = scales::comma) +
^
NO COPY: R/figures_and_tables.R:20:1: style: Use two spaces to indent, never tabs.
			       prediction = get(statistics_array,
^~~
NO COPY: R/figures_and_tables.R:20:1: style: Use two spaces to indent, never tabs.
	   ggplot2::ggtitle(gsub("[^A-z ]","", subs))
^
NO COPY: R/figures_and_tables.R:21:1: style: Use two spaces to indent, never tabs.
	   ggplot2::ylab(get_label_for_abbreviation(as.character(unique(data$abbreviation)),
^
NO COPY: R/figures_and_tables.R:21:1: style: Use two spaces to indent, never tabs.
						bwi1)[index, 1, , , ],
^~~~~~
NO COPY: R/figures_and_tables.R:21:1: style: Use two spaces to indent, never tabs.
	   )
^
NO COPY: R/figures_and_tables.R:21:1: style: Use two spaces to indent, never tabs.
			  label = paste("tab", label_prefix,
^~~
NO COPY: R/figures_and_tables.R:22:1: style: Use two spaces to indent, never tabs.
					  "axis_label")) + 
^~~~~
NO COPY: R/figures_and_tables.R:22:1: style: Use two spaces to indent, never tabs.
			       standard_error = get(statistics_array,
^~~
NO COPY: R/figures_and_tables.R:22:1: style: Use two spaces to indent, never tabs.
					unique(data_received$abbreviation), sep = ":"), 
^~~~~
NO COPY: R/figures_and_tables.R:23:1: style: Use two spaces to indent, never tabs.
						   bwi1)[attribute_index,
^~~~~~
NO COPY: R/figures_and_tables.R:23:1: style: Use two spaces to indent, never tabs.
	   ggplot2::ggtitle(paste("Baumartengruppe", unique(data$species), "im" ,
^
NO COPY: R/figures_and_tables.R:23:1: style: Use two spaces to indent, never tabs.
						    bwi1)[index, 2, , , ]
^~~~~~
NO COPY: R/figures_and_tables.R:23:1: style: Use two spaces to indent, never tabs.
			  caption = get_text_label_for_abbreviation(unique(data_received$abbreviation)),
^~~
NO COPY: R/figures_and_tables.R:24:1: style: Use two spaces to indent, never tabs.
				  1, species_index,
^~~~
NO COPY: R/figures_and_tables.R:24:1: style: Use two spaces to indent, never tabs.
			 unique(data$ownership)))
^~~
NO COPY: R/figures_and_tables.R:24:1: style: Use two spaces to indent, never tabs.
			       ),
^~~
NO COPY: R/figures_and_tables.R:24:1: style: Use two spaces to indent, never tabs.
			  ) 
^~~
NO COPY: R/figures_and_tables.R:25:1: style: Use two spaces to indent, never tabs.
				  , ],
^~~~
NO COPY: R/figures_and_tables.R:25:1: style: Use two spaces to indent, never tabs.
	   )
^
NO COPY: R/figures_and_tables.R:25:1: style: Use two spaces to indent, never tabs.
		    data.frame(bwi = "2002",
^~
NO COPY: R/figures_and_tables.R:26:1: style: lines should not be more than 80 characters.
	   ggplot2::theme(legend.title = ggplot2::element_text(colour = "black", size = 16),
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/figures_and_tables.R:26:1: style: Use two spaces to indent, never tabs.
			       Baumartengruppe = factor(bwi2$BAGR, 
^~~
NO COPY: R/figures_and_tables.R:26:40: style: Put spaces around all infix operators.
	   ggplot2::theme(legend.title = ggplot2::element_text(colour = "black", size = 16),
                                      ~^~
NO COPY: R/figures_and_tables.R:26:71: style: Put spaces around all infix operators.
	   ggplot2::theme(legend.title = ggplot2::element_text(colour = "black", size = 16),
                                                                     ~^~
NO COPY: R/figures_and_tables.R:27:1: style: Use two spaces to indent, never tabs.
				  2, species_index,
^~~~
NO COPY: R/figures_and_tables.R:27:1: style: Use two spaces to indent, never tabs.
							levels = bwi2$BAGR),
^~~~~~~
NO COPY: R/figures_and_tables.R:27:30: style: Put spaces around all infix operators.
		 legend.text = ggplot2::element_text(colour = "black", size = 16)
                            ~^~
NO COPY: R/figures_and_tables.R:27:61: style: Put spaces around all infix operators.
		 legend.text = ggplot2::element_text(colour = "black", size = 16)
                                                           ~^
NO COPY: R/figures_and_tables.R:28:1: style: Use two spaces to indent, never tabs.
				  , ],
^~~~
NO COPY: R/figures_and_tables.R:28:1: style: Use two spaces to indent, never tabs.
			       prediction = get(statistics_array,
^~~
NO COPY: R/figures_and_tables.R:29:1: style: Use two spaces to indent, never tabs.
						bwi2)[index, 1, , , ],
^~~~~~
NO COPY: R/figures_and_tables.R:30:1: style: Use two spaces to indent, never tabs.
			       standard_error = get(statistics_array,
^~~
NO COPY: R/figures_and_tables.R:31:1: style: Use two spaces to indent, never tabs.
						    bwi2)[index, 2, , , ]
^~~~~~
NO COPY: R/figures_and_tables.R:32:1: style: Use two spaces to indent, never tabs.
			       ),
^~~
NO COPY: R/figures_and_tables.R:33:1: style: Use two spaces to indent, never tabs.
				  1, species_index,
^~~~
NO COPY: R/figures_and_tables.R:33:1: style: Use two spaces to indent, never tabs.
		    data.frame(bwi = "2012",
^~
NO COPY: R/figures_and_tables.R:34:1: style: Use two spaces to indent, never tabs.
				  , ],
^~~~
NO COPY: R/figures_and_tables.R:34:1: style: Use two spaces to indent, never tabs.
			       Baumartengruppe = factor(bwi3$BAGR, 
^~~
NO COPY: R/figures_and_tables.R:35:1: style: Use two spaces to indent, never tabs.
							levels = bwi3$BAGR),
^~~~~~~
NO COPY: R/figures_and_tables.R:36:1: style: Use two spaces to indent, never tabs.
				  2, species_index,
^~~~
NO COPY: R/figures_and_tables.R:36:1: style: Use two spaces to indent, never tabs.
			       prediction = get(statistics_array,
^~~
NO COPY: R/figures_and_tables.R:37:1: style: Use two spaces to indent, never tabs.
				  , ],
^~~~
NO COPY: R/figures_and_tables.R:37:1: style: Use two spaces to indent, never tabs.
						bwi3)[index, 1, , , ],
^~~~~~
NO COPY: R/figures_and_tables.R:38:1: style: Use two spaces to indent, never tabs.
			       standard_error = get(statistics_array,
^~~
NO COPY: R/figures_and_tables.R:39:1: style: Use two spaces to indent, never tabs.
						    bwi3)[index, 2, , , ]
^~~~~~
NO COPY: R/figures_and_tables.R:40:1: style: Use two spaces to indent, never tabs.
			       )
^~~
NO COPY: R/figures_and_tables.R:41:1: style: Use two spaces to indent, never tabs.
		    )
^~
NO COPY: R/figures_and_tables.R:42:1: style: lines should not be more than 80 characters.
	   ggplot2::theme(plot.title = ggplot2::element_text(colour = "black", size = 20))
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/figures_and_tables.R:42:1: style: Use two spaces to indent, never tabs.
				  1, species_index,
^~~~
NO COPY: R/figures_and_tables.R:42:1: style: Use two spaces to indent, never tabs.
	       )
^
NO COPY: R/figures_and_tables.R:42:38: style: Put spaces around all infix operators.
	   ggplot2::theme(plot.title = ggplot2::element_text(colour = "black", size = 20))
                                    ~^~
NO COPY: R/figures_and_tables.R:42:69: style: Put spaces around all infix operators.
	   ggplot2::theme(plot.title = ggplot2::element_text(colour = "black", size = 20))
                                                                   ~^~
NO COPY: R/figures_and_tables.R:43:1: style: Use two spaces to indent, never tabs.
				  , ],
^~~~
NO COPY: R/figures_and_tables.R:45:1: style: Use two spaces to indent, never tabs.
				  2, species_index,
^~~~
NO COPY: R/figures_and_tables.R:46:1: style: Use two spaces to indent, never tabs.
				  , ],
^~~~
NO COPY: R/figures_and_tables.R:55:1: style: Use two spaces to indent, never tabs.
						      "text_label")
^~~~~~
NO COPY: R/figures_and_tables.R:57:1: style: lines should not be more than 80 characters.
    graphics::plot(obj + theme_bold_axes() + theme_bold_title() + theme_bold_legend() +
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/figures_and_tables.R:58:38: style: Put spaces around all infix operators.
	 ggplot2::theme(strip.text.y = ggplot2::element_text(size=12))
                                    ~^~
NO COPY: R/figures_and_tables.R:87:23: style: Put spaces around all infix operators.
	species_index <- which(species == bwi1$BAGR)  
                     ~^~~
NO COPY: R/figures_and_tables.R:87:40: style: Put spaces around all infix operators.
	species_index <- which(species == bwi1$BAGR)  
                                      ~^~~
NO COPY: R/figures_and_tables.R:87:46: style: Trailing whitespace is superfluous.
	species_index <- which(species == bwi1$BAGR)  
                                             ^~
NO COPY: R/figures_and_tables.R:94:44: style: Opening curly braces should never go on their own line and should always be followed by a new line.
    if (abbreviation %in% bwi1$Attribute1) {## Totals
                                           ^
NO COPY: R/figures_and_tables.R:95:25: style: Put spaces around all infix operators.
	attribute_index <- which(abbreviation == bwi1$Attribute1)  
                       ~^~~
NO COPY: R/figures_and_tables.R:95:47: style: Put spaces around all infix operators.
	attribute_index <- which(abbreviation == bwi1$Attribute1)  
                                             ~^~~
NO COPY: R/figures_and_tables.R:95:59: style: Trailing whitespace is superfluous.
	attribute_index <- which(abbreviation == bwi1$Attribute1)  
                                                          ^~
NO COPY: R/figures_and_tables.R:96:38: style: Put spaces around all infix operators.
	array_containing_statistics  <-  "T.FVBN.Bagr.Akl.Dkl"
                                    ~^~~
NO COPY: R/figures_and_tables.R:97:12: style: Opening curly braces should never go on their own line and should always be followed by a new line.
    } else {## per hectar
           ^
NO COPY: R/figures_and_tables.R:98:25: style: Put spaces around all infix operators.
	attribute_index <- which(abbreviation == bwi1$Attribute2)  
                       ~^~~
NO COPY: R/figures_and_tables.R:98:47: style: Put spaces around all infix operators.
	attribute_index <- which(abbreviation == bwi1$Attribute2)  
                                             ~^~~
NO COPY: R/figures_and_tables.R:98:59: style: Trailing whitespace is superfluous.
	attribute_index <- which(abbreviation == bwi1$Attribute2)  
                                                          ^~
NO COPY: R/figures_and_tables.R:99:38: style: Put spaces around all infix operators.
	array_containing_statistics  <-  "FVBN.ha.Bagr.Akl.Dkl"
                                    ~^~~
NO COPY: R/figures_and_tables.R:102:80: style: Trailing whitespace is superfluous.
    bwi1_statistics <- data.frame(prediction = get(array_containing_statistics, 
                                                                               ^
NO COPY: R/figures_and_tables.R:110:17: style: Trailing whitespace is superfluous.
    bwi = "1987" 
                ^
NO COPY: R/figures_and_tables.R:112:1: style: lines should not be more than 80 characters.
    bwi2_statistics <- data.frame(prediction = get(array_containing_statistics, bwi2)[attribute_index,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/figures_and_tables.R:119:17: style: Trailing whitespace is superfluous.
    bwi = "2002" 
                ^
NO COPY: R/figures_and_tables.R:121:1: style: lines should not be more than 80 characters.
    bwi3_statistics <- data.frame(prediction = get(array_containing_statistics, bwi3)[attribute_index,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/figures_and_tables.R:128:17: style: Trailing whitespace is superfluous.
    bwi = "2012" 
                ^
NO COPY: R/figures_and_tables.R:132:1: style: lines should not be more than 80 characters.
    data_frame$species <- get_data("bagr.bwi")$ba.text[which(get_data("bagr.bwi")$bagr.lab == species)]
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/figures_and_tables.R:155:33: style: Put spaces around all infix operators.
	   ggplot2::ggplot(data = data,
                               ~^~
NO COPY: R/figures_and_tables.R:156:41: style: Put spaces around all infix operators.
		  ggplot2::aes_string(y = "prediction",
                                       ~^~
NO COPY: R/figures_and_tables.R:158:28: style: Put spaces around all infix operators.
		      fill = factor("bwi")
                          ~^~
NO COPY: R/figures_and_tables.R:159:11: style: Trailing whitespace is superfluous.
		      ), 
          ^
NO COPY: R/figures_and_tables.R:161:1: style: lines should not be more than 80 characters.
	   ggplot2::geom_bar(stat = "identity", position =  ggplot2::position_dodge()) +
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/figures_and_tables.R:161:35: style: Put spaces around all infix operators.
	   ggplot2::geom_bar(stat = "identity", position =  ggplot2::position_dodge()) +
                                 ~^~
NO COPY: R/figures_and_tables.R:161:58: style: Put spaces around all infix operators.
	   ggplot2::geom_bar(stat = "identity", position =  ggplot2::position_dodge()) +
                                                        ~^~
NO COPY: R/figures_and_tables.R:162:53: style: Put spaces around all infix operators.
	   ggplot2::geom_errorbar(ggplot2::aes(ymin = "prediction" - "standard_error",
                                                   ~^~
NO COPY: R/figures_and_tables.R:162:68: style: Put spaces around all infix operators.
	   ggplot2::geom_errorbar(ggplot2::aes(ymin = "prediction" - "standard_error",
                                                                  ~^~
NO COPY: R/figures_and_tables.R:163:35: style: Put spaces around all infix operators.
			     ymax = "prediction" + "standard_error"
                                 ~^~
NO COPY: R/figures_and_tables.R:166:35: style: Put spaces around all infix operators.
			 position = ggplot2::position_dodge(width=0.9)
                                 ~^~
NO COPY: R/figures_and_tables.R:168:46: style: Put spaces around all infix operators.
	   ggplot2::scale_fill_manual(values = get_data("colors_bwi"), name = "BWI") +
                                            ~^~
NO COPY: R/figures_and_tables.R:168:77: style: Put spaces around all infix operators.
	   ggplot2::scale_fill_manual(values = get_data("colors_bwi"), name = "BWI") +
                                                                           ~^
NO COPY: R/figures_and_tables.R:169:40: style: Put spaces around all infix operators.
	   ggplot2::theme(axis.text.x  = ggplot2::element_text(size = 8)) +
                                      ~^~
NO COPY: R/figures_and_tables.R:169:69: style: Put spaces around all infix operators.
	   ggplot2::theme(axis.text.x  = ggplot2::element_text(size = 8)) +
                                                                   ~^~
NO COPY: R/figures_and_tables.R:170:1: style: lines should not be more than 80 characters.
	   ggplot2::xlab(get_label_for_abbreviation(as.character(unique(data$grouping_variable)),
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/figures_and_tables.R:171:24: style: Trailing whitespace is superfluous.
					  "text_label")) + 
                       ^
NO COPY: R/figures_and_tables.R:172:47: style: Put spaces around all infix operators.
	   ggplot2::scale_y_continuous(labels = scales::comma) +
                                             ~^~
NO COPY: R/figures_and_tables.R:173:1: style: lines should not be more than 80 characters.
	   ggplot2::ylab(get_label_for_abbreviation(as.character(unique(data$abbreviation)),
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/figures_and_tables.R:174:24: style: Trailing whitespace is superfluous.
					  "axis_label")) + 
                       ^
NO COPY: R/figures_and_tables.R:175:74: style: Commas should never have a space before.
	   ggplot2::ggtitle(paste("Baumartengruppe", unique(data$species), "im" ,
                                                                        ~^
NO COPY: R/figures_and_tables.R:196:44: style: Opening curly braces should never go on their own line and should always be followed by a new line.
    if (abbreviation %in% bwi1$Attribute1) {## Totals
                                           ^
NO COPY: R/figures_and_tables.R:197:15: style: Put spaces around all infix operators.
	index <- which(abbreviation == bwi1$Attribute1)  
             ~^~~
NO COPY: R/figures_and_tables.R:197:37: style: Put spaces around all infix operators.
	index <- which(abbreviation == bwi1$Attribute1)  
                                   ~^~~
NO COPY: R/figures_and_tables.R:197:49: style: Trailing whitespace is superfluous.
	index <- which(abbreviation == bwi1$Attribute1)  
                                                ^~
NO COPY: R/figures_and_tables.R:198:27: style: Put spaces around all infix operators.
	statistics_array  <-  "T.FVBN.Bagr.Akl.Dkl"
                         ~^~~
NO COPY: R/figures_and_tables.R:199:12: style: Opening curly braces should never go on their own line and should always be followed by a new line.
    } else {## per hectar
           ^
NO COPY: R/figures_and_tables.R:200:15: style: Put spaces around all infix operators.
	index <- which(abbreviation == bwi1$Attribute2)  
             ~^~~
NO COPY: R/figures_and_tables.R:200:37: style: Put spaces around all infix operators.
	index <- which(abbreviation == bwi1$Attribute2)  
                                   ~^~~
NO COPY: R/figures_and_tables.R:200:49: style: Trailing whitespace is superfluous.
	index <- which(abbreviation == bwi1$Attribute2)  
                                                ^~
NO COPY: R/figures_and_tables.R:201:27: style: Put spaces around all infix operators.
	statistics_array  <-  "FVBN.ha.Bagr.Akl.Dkl"
                         ~^~~
NO COPY: R/figures_and_tables.R:203:18: style: Trailing whitespace is superfluous.
    data_frame <- 
                 ^
NO COPY: R/figures_and_tables.R:204:43: style: Trailing whitespace is superfluous.
	Reduce(function(...) merge(..., all = T), 
                                          ^
NO COPY: R/figures_and_tables.R:207:46: style: Trailing whitespace is superfluous.
			       Baumartengruppe = factor(bwi1$BAGR, 
                                             ^
NO COPY: R/figures_and_tables.R:209:43: style: Put spaces around all infix operators.
			       prediction = get(statistics_array,
                                         ~^~
NO COPY: R/figures_and_tables.R:211:47: style: Put spaces around all infix operators.
			       standard_error = get(statistics_array,
                                             ~^~
NO COPY: R/figures_and_tables.R:215:46: style: Trailing whitespace is superfluous.
			       Baumartengruppe = factor(bwi2$BAGR, 
                                             ^
NO COPY: R/figures_and_tables.R:217:43: style: Put spaces around all infix operators.
			       prediction = get(statistics_array,
                                         ~^~
NO COPY: R/figures_and_tables.R:219:47: style: Put spaces around all infix operators.
			       standard_error = get(statistics_array,
                                             ~^~
NO COPY: R/figures_and_tables.R:223:46: style: Trailing whitespace is superfluous.
			       Baumartengruppe = factor(bwi3$BAGR, 
                                             ^
NO COPY: R/figures_and_tables.R:225:43: style: Put spaces around all infix operators.
			       prediction = get(statistics_array,
                                         ~^~
NO COPY: R/figures_and_tables.R:227:47: style: Put spaces around all infix operators.
			       standard_error = get(statistics_array,
                                             ~^~
NO COPY: R/figures_and_tables.R:233:1: style: lines should not be more than 80 characters.
    data_frame$abbreviation <- get_label_for_abbreviation(abbreviation, "text_label")
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/figures_and_tables.R:273:57: style: Put spaces around all infix operators.
	   ggplot2::ggplot(subset(data, eval(parse(text = subs))),
                                                       ~^~
NO COPY: R/figures_and_tables.R:274:41: style: Put spaces around all infix operators.
		  ggplot2::aes_string(y = "prediction",
                                       ~^~
NO COPY: R/figures_and_tables.R:275:32: style: Put spaces around all infix operators.
			     x = x, #deparse(substitute(g)),
                              ~^~
NO COPY: R/figures_and_tables.R:277:11: style: Trailing whitespace is superfluous.
			     ), 
          ^
NO COPY: R/figures_and_tables.R:278:25: style: Put spaces around all infix operators.
		  group = deparse(substitute(x))) +
                       ~^~
NO COPY: R/figures_and_tables.R:279:35: style: Put spaces around all infix operators.
	   ggplot2::geom_bar(stat = "identity", position = ggplot2::position_dodge()) +
                                 ~^~
NO COPY: R/figures_and_tables.R:279:58: style: Put spaces around all infix operators.
	   ggplot2::geom_bar(stat = "identity", position = ggplot2::position_dodge()) +
                                                        ~^~
NO COPY: R/figures_and_tables.R:280:1: style: lines should not be more than 80 characters.
	   ggplot2::geom_errorbar(ggplot2::aes_string(ymin = "prediction" - "standard_error",
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/figures_and_tables.R:280:60: style: Put spaces around all infix operators.
	   ggplot2::geom_errorbar(ggplot2::aes_string(ymin = "prediction" - "standard_error",
                                                          ~^~
NO COPY: R/figures_and_tables.R:280:75: style: Put spaces around all infix operators.
	   ggplot2::geom_errorbar(ggplot2::aes_string(ymin = "prediction" - "standard_error",
                                                                         ~^~
NO COPY: R/figures_and_tables.R:281:35: style: Put spaces around all infix operators.
			     ymax = "prediction" + "standard_error"
                                 ~^~
NO COPY: R/figures_and_tables.R:284:35: style: Put spaces around all infix operators.
			 position = ggplot2::position_dodge(width=0.9)
                                 ~^~
NO COPY: R/figures_and_tables.R:286:46: style: Put spaces around all infix operators.
	   ggplot2::scale_fill_manual(values = get_data("colors_bwi"), name = "BWI") +
                                            ~^~
NO COPY: R/figures_and_tables.R:286:77: style: Put spaces around all infix operators.
	   ggplot2::scale_fill_manual(values = get_data("colors_bwi"), name = "BWI") +
                                                                           ~^
NO COPY: R/figures_and_tables.R:287:47: style: Put spaces around all infix operators.
	   ggplot2::scale_y_continuous(labels = scales::comma) +
                                             ~^~
NO COPY: R/figures_and_tables.R:289:1: style: lines should not be more than 80 characters.
	   ggplot2::ylab(get_label_for_abbreviation(unique(data$abbreviation), "axis_label")) +
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/figures_and_tables.R:312:49: style: Trailing whitespace is superfluous.
    data_molten <- reshape2::melt(data_received, 
                                                ^
NO COPY: R/figures_and_tables.R:313:37: style: Trailing whitespace is superfluous.
				  measure.vars = c("prediction", 
                                    ^
NO COPY: R/figures_and_tables.R:318:1: style: lines should not be more than 80 characters.
    data_casted <- reshape2::dcast(data_molten[data_molten[["variable"]] == "prediction", TRUE], 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/figures_and_tables.R:318:97: style: Trailing whitespace is superfluous.
    data_casted <- reshape2::dcast(data_molten[data_molten[["variable"]] == "prediction", TRUE], 
                                                                                                ^
NO COPY: R/figures_and_tables.R:322:66: style: Commas should never have a space before.
    data_casted <- rbind(data_casted, c(NA, colSums(data_casted[ , -1])))
                                                                ~^
NO COPY: R/figures_and_tables.R:323:1: style: lines should not be more than 80 characters.
    data_casted$"1987 - 2002" <- (data_casted[, 3]-data_casted[, 2]) / data_casted[, 2] * 100
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/figures_and_tables.R:323:51: style: Put spaces around all infix operators.
    data_casted$"1987 - 2002" <- (data_casted[, 3]-data_casted[, 2]) / data_casted[, 2] * 100
                                                 ~^~
NO COPY: R/figures_and_tables.R:324:1: style: lines should not be more than 80 characters.
    data_casted$"2002 - 2012" <-(data_casted[, 4]-data_casted[, 3]) / data_casted[, 3] * 100
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/figures_and_tables.R:324:31: style: Put spaces around all infix operators.
    data_casted$"2002 - 2012" <-(data_casted[, 4]-data_casted[, 3]) / data_casted[, 3] * 100
                              ^~~
NO COPY: R/figures_and_tables.R:324:33: style: Place a space before left parenthesis, except in a function call.
    data_casted$"2002 - 2012" <-(data_casted[, 4]-data_casted[, 3]) / data_casted[, 3] * 100
                                ^
NO COPY: R/figures_and_tables.R:324:50: style: Put spaces around all infix operators.
    data_casted$"2002 - 2012" <-(data_casted[, 4]-data_casted[, 3]) / data_casted[, 3] * 100
                                                ~^~
NO COPY: R/figures_and_tables.R:325:1: style: lines should not be more than 80 characters.
    data_casted$"1987 - 2012" <-(data_casted[, 4]-data_casted[, 2]) / data_casted[, 2] * 100
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/figures_and_tables.R:325:31: style: Put spaces around all infix operators.
    data_casted$"1987 - 2012" <-(data_casted[, 4]-data_casted[, 2]) / data_casted[, 2] * 100
                              ^~~
NO COPY: R/figures_and_tables.R:325:33: style: Place a space before left parenthesis, except in a function call.
    data_casted$"1987 - 2012" <-(data_casted[, 4]-data_casted[, 2]) / data_casted[, 2] * 100
                                ^
NO COPY: R/figures_and_tables.R:325:50: style: Put spaces around all infix operators.
    data_casted$"1987 - 2012" <-(data_casted[, 4]-data_casted[, 2]) / data_casted[, 2] * 100
                                                ~^~
NO COPY: R/figures_and_tables.R:327:33: style: Put spaces around all infix operators.
			  label = paste("tab", label_prefix,
                               ~^~
NO COPY: R/figures_and_tables.R:328:53: style: Trailing whitespace is superfluous.
					unique(data_received$abbreviation), sep = ":"), 
                                                    ^
NO COPY: R/figures_and_tables.R:329:1: style: lines should not be more than 80 characters.
			  caption = get_text_label_for_abbreviation(unique(data_received$abbreviation)),
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/figures_and_tables.R:329:35: style: Put spaces around all infix operators.
			  caption = get_text_label_for_abbreviation(unique(data_received$abbreviation)),
                                 ~^~
NO COPY: R/figures_and_tables.R:330:7: style: Trailing whitespace is superfluous.
			  ) 
      ^
NO COPY: R/figures_and_tables.R:335:1: style: Trailing blank lines are superfluous.

^
NO COPY: R/fvbn2a.R:4:27: style: Commas should always have a space after.
          function(baeume,ecken,trakte,A,inv,BA.grupp,A.klass,D.klass,auswahl){
                          ^
NO COPY: R/fvbn2a.R:4:33: style: Commas should always have a space after.
          function(baeume,ecken,trakte,A,inv,BA.grupp,A.klass,D.klass,auswahl){
                                ^
NO COPY: R/fvbn2a.R:4:40: style: Commas should always have a space after.
          function(baeume,ecken,trakte,A,inv,BA.grupp,A.klass,D.klass,auswahl){
                                       ^
NO COPY: R/fvbn2a.R:4:42: style: Commas should always have a space after.
          function(baeume,ecken,trakte,A,inv,BA.grupp,A.klass,D.klass,auswahl){
                                         ^
NO COPY: R/fvbn2a.R:4:46: style: Commas should always have a space after.
          function(baeume,ecken,trakte,A,inv,BA.grupp,A.klass,D.klass,auswahl){
                                             ^
NO COPY: R/fvbn2a.R:4:55: style: Commas should always have a space after.
          function(baeume,ecken,trakte,A,inv,BA.grupp,A.klass,D.klass,auswahl){
                                                      ^
NO COPY: R/fvbn2a.R:4:63: style: Commas should always have a space after.
          function(baeume,ecken,trakte,A,inv,BA.grupp,A.klass,D.klass,auswahl){
                                                              ^
NO COPY: R/fvbn2a.R:4:71: style: Commas should always have a space after.
          function(baeume,ecken,trakte,A,inv,BA.grupp,A.klass,D.klass,auswahl){
                                                                      ^
NO COPY: R/fvbn2a.R:5:34: style: Commas should always have a space after.
  stratum <- stratum.fun(auswahl,ecken)
                                 ^
NO COPY: R/fvbn2a.R:12:28: style: Commas should always have a space after.
  names(baeume) <- sub(inv,names(baeume),replacement="")
                           ^
NO COPY: R/fvbn2a.R:12:42: style: Commas should always have a space after.
  names(baeume) <- sub(inv,names(baeume),replacement="")
                                         ^
NO COPY: R/fvbn2a.R:12:53: style: Put spaces around all infix operators.
  names(baeume) <- sub(inv,names(baeume),replacement="")
                                                   ~^~
NO COPY: R/fvbn2a.R:14:1: style: lines should not be more than 80 characters.
  baeume.s <- merge(baeume[TRUE, c("tnr", "enr", "ba", "alt", "bhd", "volv", "oib", "nha", "stfl")],
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2a.R:15:52: style: Commas should always have a space after.
                    stratum[TRUE, c("tnr", "enr")],by=c("tnr","enr"),all.y=T)
                                                   ^
NO COPY: R/fvbn2a.R:15:54: style: Put spaces around all infix operators.
                    stratum[TRUE, c("tnr", "enr")],by=c("tnr","enr"),all.y=T)
                                                    ~^~
NO COPY: R/fvbn2a.R:15:63: style: Commas should always have a space after.
                    stratum[TRUE, c("tnr", "enr")],by=c("tnr","enr"),all.y=T)
                                                              ^
NO COPY: R/fvbn2a.R:15:70: style: Commas should always have a space after.
                    stratum[TRUE, c("tnr", "enr")],by=c("tnr","enr"),all.y=T)
                                                                     ^
NO COPY: R/fvbn2a.R:15:75: style: Put spaces around all infix operators.
                    stratum[TRUE, c("tnr", "enr")],by=c("tnr","enr"),all.y=T)
                                                                         ~^~
NO COPY: R/fvbn2a.R:22:30: style: Commas should always have a space after.
  baeume.s <- merge(baeume.s,bagr.tab[TRUE, c("ICode", "bagr")],
                             ^
NO COPY: R/fvbn2a.R:23:39: style: Put spaces around all infix operators.
                                  by.x="ba",by.y="ICode",all.x=T)
                                     ~^~
NO COPY: R/fvbn2a.R:23:45: style: Commas should always have a space after.
                                  by.x="ba",by.y="ICode",all.x=T)
                                            ^
NO COPY: R/fvbn2a.R:23:49: style: Put spaces around all infix operators.
                                  by.x="ba",by.y="ICode",all.x=T)
                                               ~^~
NO COPY: R/fvbn2a.R:23:58: style: Commas should always have a space after.
                                  by.x="ba",by.y="ICode",all.x=T)
                                                         ^
NO COPY: R/fvbn2a.R:23:63: style: Put spaces around all infix operators.
                                  by.x="ba",by.y="ICode",all.x=T)
                                                             ~^~
NO COPY: R/fvbn2a.R:30:24: style: Commas should always have a space after.
  nT <- length(trakte[,1])
                       ^
NO COPY: R/fvbn2a.R:32:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  n.te.s <- length(stratum[,1])
  ^~~~~~
NO COPY: R/fvbn2a.R:32:29: style: Commas should always have a space after.
  n.te.s <- length(stratum[,1])
                            ^
NO COPY: R/fvbn2a.R:37:32: style: Commas should always have a space after.
  xy <- stats::aggregate(rep(1,length(stratum[,1])),by=list(stratum$tnr),sum)
                               ^
NO COPY: R/fvbn2a.R:37:48: style: Commas should always have a space after.
  xy <- stats::aggregate(rep(1,length(stratum[,1])),by=list(stratum$tnr),sum)
                                               ^
NO COPY: R/fvbn2a.R:37:53: style: Commas should always have a space after.
  xy <- stats::aggregate(rep(1,length(stratum[,1])),by=list(stratum$tnr),sum)
                                                    ^
NO COPY: R/fvbn2a.R:37:55: style: Put spaces around all infix operators.
  xy <- stats::aggregate(rep(1,length(stratum[,1])),by=list(stratum$tnr),sum)
                                                     ~^~
NO COPY: R/fvbn2a.R:37:74: style: Commas should always have a space after.
  xy <- stats::aggregate(rep(1,length(stratum[,1])),by=list(stratum$tnr),sum)
                                                                         ^
NO COPY: R/fvbn2a.R:39:1: style: lines should not be more than 80 characters.
  xy <- cbind(xy,stats::aggregate(ifelse(baeume.s$ba==999,baeume.s$stfl/10000,0),
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2a.R:39:18: style: Commas should always have a space after.
  xy <- cbind(xy,stats::aggregate(ifelse(baeume.s$ba==999,baeume.s$stfl/10000,0),
                 ^
NO COPY: R/fvbn2a.R:39:53: style: Put spaces around all infix operators.
  xy <- cbind(xy,stats::aggregate(ifelse(baeume.s$ba==999,baeume.s$stfl/10000,0),
                                                   ~^~~
NO COPY: R/fvbn2a.R:39:59: style: Commas should always have a space after.
  xy <- cbind(xy,stats::aggregate(ifelse(baeume.s$ba==999,baeume.s$stfl/10000,0),
                                                          ^
NO COPY: R/fvbn2a.R:39:72: style: Put spaces around all infix operators.
  xy <- cbind(xy,stats::aggregate(ifelse(baeume.s$ba==999,baeume.s$stfl/10000,0),
                                                                      ~^~
NO COPY: R/fvbn2a.R:39:79: style: Commas should always have a space after.
  xy <- cbind(xy,stats::aggregate(ifelse(baeume.s$ba==999,baeume.s$stfl/10000,0),
                                                                              ^
NO COPY: R/fvbn2a.R:40:21: style: Put spaces around all infix operators.
                  by=list(baeume.s$tnr),sum)$x)
                   ~^~
NO COPY: R/fvbn2a.R:40:41: style: Commas should always have a space after.
                  by=list(baeume.s$tnr),sum)$x)
                                        ^
NO COPY: R/fvbn2a.R:41:18: style: Commas should always have a space after.
  xy <- cbind(xy,stats::aggregate(ifelse(baeume.s$ba==998,baeume.s$stfl,0),
                 ^
NO COPY: R/fvbn2a.R:41:53: style: Put spaces around all infix operators.
  xy <- cbind(xy,stats::aggregate(ifelse(baeume.s$ba==998,baeume.s$stfl,0),
                                                   ~^~~
NO COPY: R/fvbn2a.R:41:59: style: Commas should always have a space after.
  xy <- cbind(xy,stats::aggregate(ifelse(baeume.s$ba==998,baeume.s$stfl,0),
                                                          ^
NO COPY: R/fvbn2a.R:41:73: style: Commas should always have a space after.
  xy <- cbind(xy,stats::aggregate(ifelse(baeume.s$ba==998,baeume.s$stfl,0),
                                                                        ^
NO COPY: R/fvbn2a.R:42:21: style: Put spaces around all infix operators.
                  by=list(baeume.s$tnr),sum)$x/10000)
                   ~^~
NO COPY: R/fvbn2a.R:42:41: style: Commas should always have a space after.
                  by=list(baeume.s$tnr),sum)$x/10000)
                                        ^
NO COPY: R/fvbn2a.R:42:47: style: Put spaces around all infix operators.
                  by=list(baeume.s$tnr),sum)$x/10000)
                                             ~^~
NO COPY: R/fvbn2a.R:43:24: style: Commas should always have a space after.
  names(xy) <- c("tnr","hbf","bl","ibl")
                       ^
NO COPY: R/fvbn2a.R:43:30: style: Commas should always have a space after.
  names(xy) <- c("tnr","hbf","bl","ibl")
                             ^
NO COPY: R/fvbn2a.R:43:35: style: Commas should always have a space after.
  names(xy) <- c("tnr","hbf","bl","ibl")
                                  ^
NO COPY: R/fvbn2a.R:44:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  n.t.s <- length(xy[,1])
  ^~~~~
NO COPY: R/fvbn2a.R:44:3: warning: local variable 'n.t.s' assigned but may not be used
  n.t.s <- length(xy[,1])
  ^~~~~
NO COPY: R/fvbn2a.R:44:23: style: Commas should always have a space after.
  n.t.s <- length(xy[,1])
                      ^
NO COPY: R/fvbn2a.R:45:43: style: Commas should always have a space after.
  xy <- merge(trakte[TRUE, c("tnr", "m")],xy,by=c("tnr"),all.x=T)
                                          ^
NO COPY: R/fvbn2a.R:45:46: style: Commas should always have a space after.
  xy <- merge(trakte[TRUE, c("tnr", "m")],xy,by=c("tnr"),all.x=T)
                                             ^
NO COPY: R/fvbn2a.R:45:48: style: Put spaces around all infix operators.
  xy <- merge(trakte[TRUE, c("tnr", "m")],xy,by=c("tnr"),all.x=T)
                                              ~^~
NO COPY: R/fvbn2a.R:45:58: style: Commas should always have a space after.
  xy <- merge(trakte[TRUE, c("tnr", "m")],xy,by=c("tnr"),all.x=T)
                                                         ^
NO COPY: R/fvbn2a.R:45:63: style: Put spaces around all infix operators.
  xy <- merge(trakte[TRUE, c("tnr", "m")],xy,by=c("tnr"),all.x=T)
                                                             ~^~
NO COPY: R/fvbn2a.R:48:22: style: Put spaces around all infix operators.
  xy$hbf.ba <- xy$hbf-xy$bl-xy$ibl
                    ~^~
NO COPY: R/fvbn2a.R:48:28: style: Put spaces around all infix operators.
  xy$hbf.ba <- xy$hbf-xy$bl-xy$ibl
                          ~^~
NO COPY: R/fvbn2a.R:50:4: style: Commented code should be removed.
  #HBFl. [ha]
   ^~~~~~~~~~
NO COPY: R/fvbn2a.R:51:9: style: Use <-, not =, for assignment.
  r.list= r.variance.fun(xy[TRUE, c("m", "hbf")],nT)
        ^
NO COPY: R/fvbn2a.R:51:9: style: Put spaces around all infix operators.
  r.list= r.variance.fun(xy[TRUE, c("m", "hbf")],nT)
       ~^
NO COPY: R/fvbn2a.R:51:50: style: Commas should always have a space after.
  r.list= r.variance.fun(xy[TRUE, c("m", "hbf")],nT)
                                                 ^
NO COPY: R/fvbn2a.R:52:23: style: Put spaces around all infix operators.
  T.hbf <- r.list$R.xy*A
                     ~^~
NO COPY: R/fvbn2a.R:53:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  se.T.hbf <- sqrt(r.list$V.R.xy)*A
  ^~~~~~~~
NO COPY: R/fvbn2a.R:53:27: style: Words within variable and function names should be separated by '_' rather than '.'.
  se.T.hbf <- sqrt(r.list$V.R.xy)*A
                          ^~~~~~
NO COPY: R/fvbn2a.R:53:34: style: Put spaces around all infix operators.
  se.T.hbf <- sqrt(r.list$V.R.xy)*A
                                ~^~
NO COPY: R/fvbn2a.R:55:51: style: Commas should always have a space after.
  r.list <- r.variance.fun(xy[TRUE, c("m", "bl")],nT)
                                                  ^
NO COPY: R/fvbn2a.R:56:22: style: Put spaces around all infix operators.
  T.bl <- r.list$R.xy*A
                    ~^~
NO COPY: R/fvbn2a.R:57:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  se.T.bl <- sqrt(r.list$V.R.xy)*A
  ^~~~~~~
NO COPY: R/fvbn2a.R:57:26: style: Words within variable and function names should be separated by '_' rather than '.'.
  se.T.bl <- sqrt(r.list$V.R.xy)*A
                         ^~~~~~
NO COPY: R/fvbn2a.R:57:33: style: Put spaces around all infix operators.
  se.T.bl <- sqrt(r.list$V.R.xy)*A
                               ~^~
NO COPY: R/fvbn2a.R:59:52: style: Commas should always have a space after.
  r.list <- r.variance.fun(xy[TRUE, c("m", "ibl")],nT)
                                                   ^
NO COPY: R/fvbn2a.R:60:23: style: Put spaces around all infix operators.
  T.ibl <- r.list$R.xy*A
                     ~^~
NO COPY: R/fvbn2a.R:61:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  se.T.ibl <- sqrt(r.list$V.R.xy)*A
  ^~~~~~~~
NO COPY: R/fvbn2a.R:61:27: style: Words within variable and function names should be separated by '_' rather than '.'.
  se.T.ibl <- sqrt(r.list$V.R.xy)*A
                          ^~~~~~
NO COPY: R/fvbn2a.R:61:34: style: Put spaces around all infix operators.
  se.T.ibl <- sqrt(r.list$V.R.xy)*A
                                ~^~
NO COPY: R/fvbn2a.R:63:57: style: Commas should always have a space after.
  r.list <- r.variance.fun(xy[TRUE, c("hbf.ba", "hbf")],nT)
                                                        ^
NO COPY: R/fvbn2a.R:65:24: style: Words within variable and function names should be separated by '_' rather than '.'.
  se.lk <- sqrt(r.list$V.R.xy)
                       ^~~~~~
NO COPY: R/fvbn2a.R:71:29: style: Put spaces around all infix operators.
                      breaks=c(seq(0,A.klass[[1]],A.klass[[2]]),A.max),right=T))
                           ~^~
NO COPY: R/fvbn2a.R:71:38: style: Commas should always have a space after.
                      breaks=c(seq(0,A.klass[[1]],A.klass[[2]]),A.max),right=T))
                                     ^
NO COPY: R/fvbn2a.R:71:51: style: Commas should always have a space after.
                      breaks=c(seq(0,A.klass[[1]],A.klass[[2]]),A.max),right=T))
                                                  ^
NO COPY: R/fvbn2a.R:71:65: style: Commas should always have a space after.
                      breaks=c(seq(0,A.klass[[1]],A.klass[[2]]),A.max),right=T))
                                                                ^
NO COPY: R/fvbn2a.R:71:72: style: Commas should always have a space after.
                      breaks=c(seq(0,A.klass[[1]],A.klass[[2]]),A.max),right=T))
                                                                       ^
NO COPY: R/fvbn2a.R:71:77: style: Put spaces around all infix operators.
                      breaks=c(seq(0,A.klass[[1]],A.klass[[2]]),A.max),right=T))
                                                                           ~^~
NO COPY: R/fvbn2a.R:77:5: style: Place a space before left parenthesis, except in a function call.
  if(A.klass[[1]]>A.klass[[2]])
    ^
NO COPY: R/fvbn2a.R:77:18: style: Put spaces around all infix operators.
  if(A.klass[[1]]>A.klass[[2]])
                ~^~
NO COPY: R/fvbn2a.R:78:3: style: Opening curly braces should never go on their own line and should always be followed by a new line.
  {
  ^
NO COPY: R/fvbn2a.R:79:5: style: Words within variable and function names should be separated by '_' rather than '.'.
    max.A.k <- A.klass[[1]]/A.klass[[2]] + 1
    ^~~~~~~
NO COPY: R/fvbn2a.R:79:28: style: Put spaces around all infix operators.
    max.A.k <- A.klass[[1]]/A.klass[[2]] + 1
                          ~^~
NO COPY: R/fvbn2a.R:80:15: style: Words within variable and function names should be separated by '_' rather than '.'.
    if (A.k < max.A.k) {A.k <- max.A.k }
              ^~~~~~~
NO COPY: R/fvbn2a.R:80:24: style: Opening curly braces should never go on their own line and should always be followed by a new line.
    if (A.k < max.A.k) {A.k <- max.A.k }
                       ^
NO COPY: R/fvbn2a.R:80:32: style: Words within variable and function names should be separated by '_' rather than '.'.
    if (A.k < max.A.k) {A.k <- max.A.k }
                               ^~~~~~~
NO COPY: R/fvbn2a.R:80:40: style: Closing curly-braces should always be on their own line, unless it's followed by an else.
    if (A.k < max.A.k) {A.k <- max.A.k }
                                       ^
NO COPY: R/fvbn2a.R:87:3: style: Opening curly braces should never go on their own line and should always be followed by a new line.
  {
  ^
NO COPY: R/fvbn2a.R:88:1: style: lines should not be more than 80 characters.
    brks <- c(0,7,seq(D.klass[[1]]+D.klass[[3]],D.klass[[2]],D.klass[[3]]),D.max)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2a.R:88:17: style: Commas should always have a space after.
    brks <- c(0,7,seq(D.klass[[1]]+D.klass[[3]],D.klass[[2]],D.klass[[3]]),D.max)
                ^
NO COPY: R/fvbn2a.R:88:19: style: Commas should always have a space after.
    brks <- c(0,7,seq(D.klass[[1]]+D.klass[[3]],D.klass[[2]],D.klass[[3]]),D.max)
                  ^
NO COPY: R/fvbn2a.R:88:35: style: Put spaces around all infix operators.
    brks <- c(0,7,seq(D.klass[[1]]+D.klass[[3]],D.klass[[2]],D.klass[[3]]),D.max)
                                 ~^~
NO COPY: R/fvbn2a.R:88:49: style: Commas should always have a space after.
    brks <- c(0,7,seq(D.klass[[1]]+D.klass[[3]],D.klass[[2]],D.klass[[3]]),D.max)
                                                ^
NO COPY: R/fvbn2a.R:88:62: style: Commas should always have a space after.
    brks <- c(0,7,seq(D.klass[[1]]+D.klass[[3]],D.klass[[2]],D.klass[[3]]),D.max)
                                                             ^
NO COPY: R/fvbn2a.R:88:76: style: Commas should always have a space after.
    brks <- c(0,7,seq(D.klass[[1]]+D.klass[[3]],D.klass[[2]],D.klass[[3]]),D.max)
                                                                           ^
NO COPY: R/fvbn2a.R:90:3: style: Opening curly braces should never go on their own line and should always be followed by a new line.
  {
  ^
NO COPY: R/fvbn2a.R:91:32: style: Commas should always have a space after.
    brks <- c(seq(D.klass[[1]],D.klass[[2]],D.klass[[3]]),D.max)
                               ^
NO COPY: R/fvbn2a.R:91:45: style: Commas should always have a space after.
    brks <- c(seq(D.klass[[1]],D.klass[[2]],D.klass[[3]]),D.max)
                                            ^
NO COPY: R/fvbn2a.R:91:59: style: Commas should always have a space after.
    brks <- c(seq(D.klass[[1]],D.klass[[2]],D.klass[[3]]),D.max)
                                                          ^
NO COPY: R/fvbn2a.R:93:43: style: Put spaces around all infix operators.
  baeume.s$dkl <- cut(baeume.s$bhd, breaks=brks, right=F)
                                         ~^~
NO COPY: R/fvbn2a.R:93:55: style: Put spaces around all infix operators.
  baeume.s$dkl <- cut(baeume.s$bhd, breaks=brks, right=F)
                                                     ~^~
NO COPY: R/fvbn2a.R:99:5: style: Place a space before left parenthesis, except in a function call.
  if(D.klass[[2]]>D.klass[[3]])
    ^
NO COPY: R/fvbn2a.R:99:18: style: Put spaces around all infix operators.
  if(D.klass[[2]]>D.klass[[3]])
                ~^~
NO COPY: R/fvbn2a.R:100:3: style: Opening curly braces should never go on their own line and should always be followed by a new line.
  {
  ^
NO COPY: R/fvbn2a.R:101:5: style: Words within variable and function names should be separated by '_' rather than '.'.
    max.D.k <- (D.klass[[2]]-D.klass[[1]])/D.klass[[2]] + 2
    ^~~~~~~
NO COPY: R/fvbn2a.R:101:29: style: Put spaces around all infix operators.
    max.D.k <- (D.klass[[2]]-D.klass[[1]])/D.klass[[2]] + 2
                           ~^~
NO COPY: R/fvbn2a.R:101:43: style: Put spaces around all infix operators.
    max.D.k <- (D.klass[[2]]-D.klass[[1]])/D.klass[[2]] + 2
                                         ~^~
NO COPY: R/fvbn2a.R:102:15: style: Words within variable and function names should be separated by '_' rather than '.'.
    if (D.k < max.D.k) {D.k <- max.D.k }
              ^~~~~~~
NO COPY: R/fvbn2a.R:102:24: style: Opening curly braces should never go on their own line and should always be followed by a new line.
    if (D.k < max.D.k) {D.k <- max.D.k }
                       ^
NO COPY: R/fvbn2a.R:102:32: style: Words within variable and function names should be separated by '_' rather than '.'.
    if (D.k < max.D.k) {D.k <- max.D.k }
                               ^~~~~~~
NO COPY: R/fvbn2a.R:102:40: style: Closing curly-braces should always be on their own line, unless it's followed by an else.
    if (D.k < max.D.k) {D.k <- max.D.k }
                                       ^
NO COPY: R/fvbn2a.R:107:1: style: lines should not be more than 80 characters.
  #Es gibt 6 Zielgr\u00f6\u00dfen <Y>: BAF [ha], V [m^3Dh mR], VHb (nur Hauptbestand)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2a.R:110:1: style: lines should not be more than 80 characters.
  #F\u00fcr diese 6 "Gr\u00f6\u00dfen" werden jeweils der Gesamtwert ("Total") und der
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2a.R:111:1: style: lines should not be more than 80 characters.
  #Stichprobenfehler (SE) berechnet, und zwar jeweils f\u00fcr die 9 Baumartengruppen
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2a.R:113:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  Y.bagr.akl.dkl    <- array(dim=c(6,2,n.bagr,A.k,D.k))
  ^~~~~~~~~~~~~~
NO COPY: R/fvbn2a.R:113:33: style: Put spaces around all infix operators.
  Y.bagr.akl.dkl    <- array(dim=c(6,2,n.bagr,A.k,D.k))
                               ~^~
NO COPY: R/fvbn2a.R:113:38: style: Commas should always have a space after.
  Y.bagr.akl.dkl    <- array(dim=c(6,2,n.bagr,A.k,D.k))
                                     ^
NO COPY: R/fvbn2a.R:113:40: style: Commas should always have a space after.
  Y.bagr.akl.dkl    <- array(dim=c(6,2,n.bagr,A.k,D.k))
                                       ^
NO COPY: R/fvbn2a.R:113:47: style: Commas should always have a space after.
  Y.bagr.akl.dkl    <- array(dim=c(6,2,n.bagr,A.k,D.k))
                                              ^
NO COPY: R/fvbn2a.R:113:51: style: Commas should always have a space after.
  Y.bagr.akl.dkl    <- array(dim=c(6,2,n.bagr,A.k,D.k))
                                                  ^
NO COPY: R/fvbn2a.R:114:3: style: Variable and function names should be all lowercase.
  nT.bagr.akl.dkl   <- array(dim=c(n.bagr,A.k,D.k))
  ^~~~~~~~~~~~~~~
NO COPY: R/fvbn2a.R:114:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  nT.bagr.akl.dkl   <- array(dim=c(n.bagr,A.k,D.k))
  ^~~~~~~~~~~~~~~
NO COPY: R/fvbn2a.R:114:33: style: Put spaces around all infix operators.
  nT.bagr.akl.dkl   <- array(dim=c(n.bagr,A.k,D.k))
                               ~^~
NO COPY: R/fvbn2a.R:114:43: style: Commas should always have a space after.
  nT.bagr.akl.dkl   <- array(dim=c(n.bagr,A.k,D.k))
                                          ^
NO COPY: R/fvbn2a.R:114:47: style: Commas should always have a space after.
  nT.bagr.akl.dkl   <- array(dim=c(n.bagr,A.k,D.k))
                                              ^
NO COPY: R/fvbn2a.R:115:1: style: lines should not be more than 80 characters.
  #Hektarbezogene Kennwerte. 5 Zielgr\u00f6\u00dfen:  Vha, VHbha, Bha, Nha, NDhha
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2a.R:116:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  Yha.bagr.akl.dkl  <- array(dim=c(5,2,n.bagr,A.k,D.k))
  ^~~~~~~~~~~~~~~~
NO COPY: R/fvbn2a.R:116:33: style: Put spaces around all infix operators.
  Yha.bagr.akl.dkl  <- array(dim=c(5,2,n.bagr,A.k,D.k))
                               ~^~
NO COPY: R/fvbn2a.R:116:38: style: Commas should always have a space after.
  Yha.bagr.akl.dkl  <- array(dim=c(5,2,n.bagr,A.k,D.k))
                                     ^
NO COPY: R/fvbn2a.R:116:40: style: Commas should always have a space after.
  Yha.bagr.akl.dkl  <- array(dim=c(5,2,n.bagr,A.k,D.k))
                                       ^
NO COPY: R/fvbn2a.R:116:47: style: Commas should always have a space after.
  Yha.bagr.akl.dkl  <- array(dim=c(5,2,n.bagr,A.k,D.k))
                                              ^
NO COPY: R/fvbn2a.R:116:51: style: Commas should always have a space after.
  Yha.bagr.akl.dkl  <- array(dim=c(5,2,n.bagr,A.k,D.k))
                                                  ^
NO COPY: R/fvbn2a.R:120:3: style: Opening curly braces should never go on their own line and should always be followed by a new line.
  {
  ^
NO COPY: R/fvbn2a.R:122:5: style: Opening curly braces should never go on their own line and should always be followed by a new line.
    {
    ^
NO COPY: R/fvbn2a.R:124:7: style: Opening curly braces should never go on their own line and should always be followed by a new line.
      {
      ^
NO COPY: R/fvbn2a.R:126:1: style: lines should not be more than 80 characters.
                      baeume.s[["bagr"]]==bagr.list[i]&baeume.s[["akl"]]==akl.lab[j]&baeume.s[["dkl"]]==dkl.lab[k],
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2a.R:126:41: style: Put spaces around all infix operators.
                      baeume.s[["bagr"]]==bagr.list[i]&baeume.s[["akl"]]==akl.lab[j]&baeume.s[["dkl"]]==dkl.lab[k],
                                       ~^~~
NO COPY: R/fvbn2a.R:126:55: style: Put spaces around all infix operators.
                      baeume.s[["bagr"]]==bagr.list[i]&baeume.s[["akl"]]==akl.lab[j]&baeume.s[["dkl"]]==dkl.lab[k],
                                                     ~^~
NO COPY: R/fvbn2a.R:126:73: style: Put spaces around all infix operators.
                      baeume.s[["bagr"]]==bagr.list[i]&baeume.s[["akl"]]==akl.lab[j]&baeume.s[["dkl"]]==dkl.lab[k],
                                                                       ~^~~
NO COPY: R/fvbn2a.R:126:85: style: Put spaces around all infix operators.
                      baeume.s[["bagr"]]==bagr.list[i]&baeume.s[["akl"]]==akl.lab[j]&baeume.s[["dkl"]]==dkl.lab[k],
                                                                                   ~^~
NO COPY: R/fvbn2a.R:126:103: style: Put spaces around all infix operators.
                      baeume.s[["bagr"]]==bagr.list[i]&baeume.s[["akl"]]==akl.lab[j]&baeume.s[["dkl"]]==dkl.lab[k],
                                                                                                     ~^~~
NO COPY: R/fvbn2a.R:127:1: style: lines should not be more than 80 characters.
                      c("tnr", "enr", "bhd", "dkl", "volv", "oib", "nha", "stfl")]
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2a.R:128:31: style: Commas should always have a space after.
        if (length(baeume.ba[,1])== 0)
                              ^
NO COPY: R/fvbn2a.R:128:34: style: Put spaces around all infix operators.
        if (length(baeume.ba[,1])== 0)
                                ~^
NO COPY: R/fvbn2a.R:129:9: style: Opening curly braces should never go on their own line and should always be followed by a new line.
        {
        ^
NO COPY: R/fvbn2a.R:130:1: style: lines should not be more than 80 characters.
           Y.bagr.akl.dkl[1:6,1,i,j,k]    <- rep(0,6)  #Zielgr\u00f6\u00dfe Total
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2a.R:130:12: style: Words within variable and function names should be separated by '_' rather than '.'.
           Y.bagr.akl.dkl[1:6,1,i,j,k]    <- rep(0,6)  #Zielgr\u00f6\u00dfe Total
           ^~~~~~~~~~~~~~
NO COPY: R/fvbn2a.R:130:31: style: Commas should always have a space after.
           Y.bagr.akl.dkl[1:6,1,i,j,k]    <- rep(0,6)  #Zielgr\u00f6\u00dfe Total
                              ^
NO COPY: R/fvbn2a.R:130:33: style: Commas should always have a space after.
           Y.bagr.akl.dkl[1:6,1,i,j,k]    <- rep(0,6)  #Zielgr\u00f6\u00dfe Total
                                ^
NO COPY: R/fvbn2a.R:130:35: style: Commas should always have a space after.
           Y.bagr.akl.dkl[1:6,1,i,j,k]    <- rep(0,6)  #Zielgr\u00f6\u00dfe Total
                                  ^
NO COPY: R/fvbn2a.R:130:37: style: Commas should always have a space after.
           Y.bagr.akl.dkl[1:6,1,i,j,k]    <- rep(0,6)  #Zielgr\u00f6\u00dfe Total
                                    ^
NO COPY: R/fvbn2a.R:130:52: style: Commas should always have a space after.
           Y.bagr.akl.dkl[1:6,1,i,j,k]    <- rep(0,6)  #Zielgr\u00f6\u00dfe Total
                                                   ^
NO COPY: R/fvbn2a.R:131:12: style: Words within variable and function names should be separated by '_' rather than '.'.
           Y.bagr.akl.dkl[1:6,2,i,j,k]    <- rep(0,6)  #Stichprobenfehler (SE)
           ^~~~~~~~~~~~~~
NO COPY: R/fvbn2a.R:131:31: style: Commas should always have a space after.
           Y.bagr.akl.dkl[1:6,2,i,j,k]    <- rep(0,6)  #Stichprobenfehler (SE)
                              ^
NO COPY: R/fvbn2a.R:131:33: style: Commas should always have a space after.
           Y.bagr.akl.dkl[1:6,2,i,j,k]    <- rep(0,6)  #Stichprobenfehler (SE)
                                ^
NO COPY: R/fvbn2a.R:131:35: style: Commas should always have a space after.
           Y.bagr.akl.dkl[1:6,2,i,j,k]    <- rep(0,6)  #Stichprobenfehler (SE)
                                  ^
NO COPY: R/fvbn2a.R:131:37: style: Commas should always have a space after.
           Y.bagr.akl.dkl[1:6,2,i,j,k]    <- rep(0,6)  #Stichprobenfehler (SE)
                                    ^
NO COPY: R/fvbn2a.R:131:52: style: Commas should always have a space after.
           Y.bagr.akl.dkl[1:6,2,i,j,k]    <- rep(0,6)  #Stichprobenfehler (SE)
                                                   ^
NO COPY: R/fvbn2a.R:132:12: style: Words within variable and function names should be separated by '_' rather than '.'.
           Yha.bagr.akl.dkl[1:5,1,i,j,k]  <- rep(0,5)
           ^~~~~~~~~~~~~~~~
NO COPY: R/fvbn2a.R:132:33: style: Commas should always have a space after.
           Yha.bagr.akl.dkl[1:5,1,i,j,k]  <- rep(0,5)
                                ^
NO COPY: R/fvbn2a.R:132:35: style: Commas should always have a space after.
           Yha.bagr.akl.dkl[1:5,1,i,j,k]  <- rep(0,5)
                                  ^
NO COPY: R/fvbn2a.R:132:37: style: Commas should always have a space after.
           Yha.bagr.akl.dkl[1:5,1,i,j,k]  <- rep(0,5)
                                    ^
NO COPY: R/fvbn2a.R:132:39: style: Commas should always have a space after.
           Yha.bagr.akl.dkl[1:5,1,i,j,k]  <- rep(0,5)
                                      ^
NO COPY: R/fvbn2a.R:132:52: style: Commas should always have a space after.
           Yha.bagr.akl.dkl[1:5,1,i,j,k]  <- rep(0,5)
                                                   ^
NO COPY: R/fvbn2a.R:133:12: style: Words within variable and function names should be separated by '_' rather than '.'.
           Yha.bagr.akl.dkl[1:5,1,i,j,k]  <- rep(0,5)
           ^~~~~~~~~~~~~~~~
NO COPY: R/fvbn2a.R:133:33: style: Commas should always have a space after.
           Yha.bagr.akl.dkl[1:5,1,i,j,k]  <- rep(0,5)
                                ^
NO COPY: R/fvbn2a.R:133:35: style: Commas should always have a space after.
           Yha.bagr.akl.dkl[1:5,1,i,j,k]  <- rep(0,5)
                                  ^
NO COPY: R/fvbn2a.R:133:37: style: Commas should always have a space after.
           Yha.bagr.akl.dkl[1:5,1,i,j,k]  <- rep(0,5)
                                    ^
NO COPY: R/fvbn2a.R:133:39: style: Commas should always have a space after.
           Yha.bagr.akl.dkl[1:5,1,i,j,k]  <- rep(0,5)
                                      ^
NO COPY: R/fvbn2a.R:133:52: style: Commas should always have a space after.
           Yha.bagr.akl.dkl[1:5,1,i,j,k]  <- rep(0,5)
                                                   ^
NO COPY: R/fvbn2a.R:134:12: style: Variable and function names should be all lowercase.
           nT.bagr.akl.dkl[i,j,k]    <- 0  #n PSU (Trakte)
           ^~~~~~~~~~~~~~~
NO COPY: R/fvbn2a.R:134:12: style: Words within variable and function names should be separated by '_' rather than '.'.
           nT.bagr.akl.dkl[i,j,k]    <- 0  #n PSU (Trakte)
           ^~~~~~~~~~~~~~~
NO COPY: R/fvbn2a.R:134:30: style: Commas should always have a space after.
           nT.bagr.akl.dkl[i,j,k]    <- 0  #n PSU (Trakte)
                             ^
NO COPY: R/fvbn2a.R:134:32: style: Commas should always have a space after.
           nT.bagr.akl.dkl[i,j,k]    <- 0  #n PSU (Trakte)
                               ^
NO COPY: R/fvbn2a.R:136:9: style: Opening curly braces should never go on their own line and should always be followed by a new line.
        {
        ^
NO COPY: R/fvbn2a.R:139:49: style: Commas should always have a space after.
          xy <- stats::aggregate(baeume.ba$stfl,by=list(baeume.ba$tnr),sum)
                                                ^
NO COPY: R/fvbn2a.R:139:51: style: Put spaces around all infix operators.
          xy <- stats::aggregate(baeume.ba$stfl,by=list(baeume.ba$tnr),sum)
                                                 ~^~
NO COPY: R/fvbn2a.R:139:72: style: Commas should always have a space after.
          xy <- stats::aggregate(baeume.ba$stfl,by=list(baeume.ba$tnr),sum)
                                                                       ^
NO COPY: R/fvbn2a.R:140:32: style: Commas should always have a space after.
          names(xy) <- c("tnr","x")
                               ^
NO COPY: R/fvbn2a.R:141:23: style: Put spaces around all infix operators.
          xy$x <- xy$x/10000*lk  #Umrechnung in ha  und L\u00fcckenkorrektur
                     ~^~
NO COPY: R/fvbn2a.R:141:29: style: Put spaces around all infix operators.
          xy$x <- xy$x/10000*lk  #Umrechnung in ha  und L\u00fcckenkorrektur
                           ~^~
NO COPY: R/fvbn2a.R:143:26: style: Commas should always have a space after.
          xy <- cbind(xy,stats::aggregate(baeume.ba$volv*baeume.ba$nha,
                         ^
NO COPY: R/fvbn2a.R:143:57: style: Put spaces around all infix operators.
          xy <- cbind(xy,stats::aggregate(baeume.ba$volv*baeume.ba$nha,
                                                       ~^~
NO COPY: R/fvbn2a.R:144:47: style: Put spaces around all infix operators.
                                            by=list(baeume.ba$tnr),sum)$x )
                                             ~^~
NO COPY: R/fvbn2a.R:144:68: style: Commas should always have a space after.
                                            by=list(baeume.ba$tnr),sum)$x )
                                                                   ^
NO COPY: R/fvbn2a.R:148:1: style: lines should not be more than 80 characters.
            stats::aggregate(baeume.ba$volv*baeume.ba$nha*ifelse(baeume.ba$stfl>0,1,0),
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2a.R:148:44: style: Put spaces around all infix operators.
            stats::aggregate(baeume.ba$volv*baeume.ba$nha*ifelse(baeume.ba$stfl>0,1,0),
                                          ~^~
NO COPY: R/fvbn2a.R:148:58: style: Put spaces around all infix operators.
            stats::aggregate(baeume.ba$volv*baeume.ba$nha*ifelse(baeume.ba$stfl>0,1,0),
                                                        ~^~
NO COPY: R/fvbn2a.R:148:80: style: Put spaces around all infix operators.
            stats::aggregate(baeume.ba$volv*baeume.ba$nha*ifelse(baeume.ba$stfl>0,1,0),
                                                                              ~^~
NO COPY: R/fvbn2a.R:148:83: style: Commas should always have a space after.
            stats::aggregate(baeume.ba$volv*baeume.ba$nha*ifelse(baeume.ba$stfl>0,1,0),
                                                                                  ^
NO COPY: R/fvbn2a.R:148:85: style: Commas should always have a space after.
            stats::aggregate(baeume.ba$volv*baeume.ba$nha*ifelse(baeume.ba$stfl>0,1,0),
                                                                                    ^
NO COPY: R/fvbn2a.R:149:47: style: Put spaces around all infix operators.
                                            by=list(baeume.ba$tnr),sum)$x )
                                             ~^~
NO COPY: R/fvbn2a.R:149:68: style: Commas should always have a space after.
                                            by=list(baeume.ba$tnr),sum)$x )
                                                                   ^
NO COPY: R/fvbn2a.R:152:26: style: Commas should always have a space after.
          xy <- cbind(xy,stats::aggregate(baeume.ba$oib*baeume.ba$nha,
                         ^
NO COPY: R/fvbn2a.R:152:56: style: Put spaces around all infix operators.
          xy <- cbind(xy,stats::aggregate(baeume.ba$oib*baeume.ba$nha,
                                                      ~^~
NO COPY: R/fvbn2a.R:153:47: style: Put spaces around all infix operators.
                                            by=list(baeume.ba$tnr),sum)$x/1000)
                                             ~^~
NO COPY: R/fvbn2a.R:153:68: style: Commas should always have a space after.
                                            by=list(baeume.ba$tnr),sum)$x/1000)
                                                                   ^
NO COPY: R/fvbn2a.R:153:74: style: Put spaces around all infix operators.
                                            by=list(baeume.ba$tnr),sum)$x/1000)
                                                                        ~^~
NO COPY: R/fvbn2a.R:156:1: style: lines should not be more than 80 characters.
          xy <- cbind(xy,stats::aggregate(baeume.ba$nha,by=list(baeume.ba$tnr),sum)$x)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2a.R:156:26: style: Commas should always have a space after.
          xy <- cbind(xy,stats::aggregate(baeume.ba$nha,by=list(baeume.ba$tnr),sum)$x)
                         ^
NO COPY: R/fvbn2a.R:156:57: style: Commas should always have a space after.
          xy <- cbind(xy,stats::aggregate(baeume.ba$nha,by=list(baeume.ba$tnr),sum)$x)
                                                        ^
NO COPY: R/fvbn2a.R:156:59: style: Put spaces around all infix operators.
          xy <- cbind(xy,stats::aggregate(baeume.ba$nha,by=list(baeume.ba$tnr),sum)$x)
                                                         ~^~
NO COPY: R/fvbn2a.R:156:80: style: Commas should always have a space after.
          xy <- cbind(xy,stats::aggregate(baeume.ba$nha,by=list(baeume.ba$tnr),sum)$x)
                                                                               ^
NO COPY: R/fvbn2a.R:160:1: style: lines should not be more than 80 characters.
          x.ndh <- try(stats::aggregate(baeume.ba$nha*ifelse(baeume.ba$bhd>=7,1,0),
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2a.R:160:54: style: Put spaces around all infix operators.
          x.ndh <- try(stats::aggregate(baeume.ba$nha*ifelse(baeume.ba$bhd>=7,1,0),
                                                    ~^~
NO COPY: R/fvbn2a.R:160:75: style: Put spaces around all infix operators.
          x.ndh <- try(stats::aggregate(baeume.ba$nha*ifelse(baeume.ba$bhd>=7,1,0),
                                                                         ~^~~
NO COPY: R/fvbn2a.R:160:79: style: Commas should always have a space after.
          x.ndh <- try(stats::aggregate(baeume.ba$nha*ifelse(baeume.ba$bhd>=7,1,0),
                                                                              ^
NO COPY: R/fvbn2a.R:160:81: style: Commas should always have a space after.
          x.ndh <- try(stats::aggregate(baeume.ba$nha*ifelse(baeume.ba$bhd>=7,1,0),
                                                                                ^
NO COPY: R/fvbn2a.R:161:17: style: Put spaces around all infix operators.
              by=list(baeume.ba$tnr),sum)$x, silent=T )
               ~^~
NO COPY: R/fvbn2a.R:161:38: style: Commas should always have a space after.
              by=list(baeume.ba$tnr),sum)$x, silent=T )
                                     ^
NO COPY: R/fvbn2a.R:161:52: style: Put spaces around all infix operators.
              by=list(baeume.ba$tnr),sum)$x, silent=T )
                                                  ~^~
NO COPY: R/fvbn2a.R:162:32: style: Commas should always have a space after.
          if (length(grep("7)",dkl.lab[k]))>0)
                               ^
NO COPY: R/fvbn2a.R:162:44: style: Put spaces around all infix operators.
          if (length(grep("7)",dkl.lab[k]))>0)
                                          ~^~
NO COPY: R/fvbn2a.R:163:11: style: Opening curly braces should never go on their own line and should always be followed by a new line.
          {
          ^
NO COPY: R/fvbn2a.R:164:28: style: Commas should always have a space after.
            x.ndh <- rep(0,length(xy[,1]))
                           ^
NO COPY: R/fvbn2a.R:164:39: style: Commas should always have a space after.
            x.ndh <- rep(0,length(xy[,1]))
                                      ^
NO COPY: R/fvbn2a.R:166:26: style: Commas should always have a space after.
          xy <- cbind(xy,x.ndh)
                         ^
NO COPY: R/fvbn2a.R:172:11: style: Variable and function names should be all lowercase.
          nT.bagr.akl.dkl[i,j,k] <- length(xy[,1])
          ^~~~~~~~~~~~~~~
NO COPY: R/fvbn2a.R:172:11: style: Words within variable and function names should be separated by '_' rather than '.'.
          nT.bagr.akl.dkl[i,j,k] <- length(xy[,1])
          ^~~~~~~~~~~~~~~
NO COPY: R/fvbn2a.R:172:29: style: Commas should always have a space after.
          nT.bagr.akl.dkl[i,j,k] <- length(xy[,1])
                            ^
NO COPY: R/fvbn2a.R:172:31: style: Commas should always have a space after.
          nT.bagr.akl.dkl[i,j,k] <- length(xy[,1])
                              ^
NO COPY: R/fvbn2a.R:172:48: style: Commas should always have a space after.
          nT.bagr.akl.dkl[i,j,k] <- length(xy[,1])
                                               ^
NO COPY: R/fvbn2a.R:174:51: style: Commas should always have a space after.
          xy <- merge(trakte[TRUE, c("tnr", "m")],xy,by=c("tnr"),all.x=T)
                                                  ^
NO COPY: R/fvbn2a.R:174:54: style: Commas should always have a space after.
          xy <- merge(trakte[TRUE, c("tnr", "m")],xy,by=c("tnr"),all.x=T)
                                                     ^
NO COPY: R/fvbn2a.R:174:56: style: Put spaces around all infix operators.
          xy <- merge(trakte[TRUE, c("tnr", "m")],xy,by=c("tnr"),all.x=T)
                                                      ~^~
NO COPY: R/fvbn2a.R:174:66: style: Commas should always have a space after.
          xy <- merge(trakte[TRUE, c("tnr", "m")],xy,by=c("tnr"),all.x=T)
                                                                 ^
NO COPY: R/fvbn2a.R:174:71: style: Put spaces around all infix operators.
          xy <- merge(trakte[TRUE, c("tnr", "m")],xy,by=c("tnr"),all.x=T)
                                                                     ~^~
NO COPY: R/fvbn2a.R:175:12: style: Commented code should be removed.
          #for(ii in 3:8) {xy[is.na(xy[,ii]),ii] <- 0}
           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2a.R:179:11: style: Opening curly braces should never go on their own line and should always be followed by a new line.
          {
          ^
NO COPY: R/fvbn2a.R:181:49: style: Commas should always have a space after.
            R.list <- r.variance.fun(cbind(xy$m,xy[,(2+l)]),nT)
                                                ^
NO COPY: R/fvbn2a.R:181:53: style: Commas should always have a space after.
            R.list <- r.variance.fun(cbind(xy$m,xy[,(2+l)]),nT)
                                                    ^
NO COPY: R/fvbn2a.R:181:53: style: Place a space before left parenthesis, except in a function call.
            R.list <- r.variance.fun(cbind(xy$m,xy[,(2+l)]),nT)
                                                    ^
NO COPY: R/fvbn2a.R:181:55: style: Put spaces around all infix operators.
            R.list <- r.variance.fun(cbind(xy$m,xy[,(2+l)]),nT)
                                                     ~^~
NO COPY: R/fvbn2a.R:181:61: style: Commas should always have a space after.
            R.list <- r.variance.fun(cbind(xy$m,xy[,(2+l)]),nT)
                                                            ^
NO COPY: R/fvbn2a.R:183:13: style: Words within variable and function names should be separated by '_' rather than '.'.
            Y.bagr.akl.dkl[l,1,i,j,k] <- R.list$R.xy*A
            ^~~~~~~~~~~~~~
NO COPY: R/fvbn2a.R:183:30: style: Commas should always have a space after.
            Y.bagr.akl.dkl[l,1,i,j,k] <- R.list$R.xy*A
                             ^
NO COPY: R/fvbn2a.R:183:32: style: Commas should always have a space after.
            Y.bagr.akl.dkl[l,1,i,j,k] <- R.list$R.xy*A
                               ^
NO COPY: R/fvbn2a.R:183:34: style: Commas should always have a space after.
            Y.bagr.akl.dkl[l,1,i,j,k] <- R.list$R.xy*A
                                 ^
NO COPY: R/fvbn2a.R:183:36: style: Commas should always have a space after.
            Y.bagr.akl.dkl[l,1,i,j,k] <- R.list$R.xy*A
                                   ^
NO COPY: R/fvbn2a.R:183:53: style: Put spaces around all infix operators.
            Y.bagr.akl.dkl[l,1,i,j,k] <- R.list$R.xy*A
                                                   ~^~
NO COPY: R/fvbn2a.R:184:14: style: Commented code should be removed.
            #sum(xy[,(1+l)])/sum(x)*A *ifelse(l==1,lk,1)
             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2a.R:185:1: style: lines should not be more than 80 characters.
                                      #L\u00fcckenkorrektur bei BAF bereits erfolgt
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2a.R:187:13: style: Words within variable and function names should be separated by '_' rather than '.'.
            Y.bagr.akl.dkl[l,2,i,j,k] <- sqrt(R.list$V.R.xy)*A
            ^~~~~~~~~~~~~~
NO COPY: R/fvbn2a.R:187:30: style: Commas should always have a space after.
            Y.bagr.akl.dkl[l,2,i,j,k] <- sqrt(R.list$V.R.xy)*A
                             ^
NO COPY: R/fvbn2a.R:187:32: style: Commas should always have a space after.
            Y.bagr.akl.dkl[l,2,i,j,k] <- sqrt(R.list$V.R.xy)*A
                               ^
NO COPY: R/fvbn2a.R:187:34: style: Commas should always have a space after.
            Y.bagr.akl.dkl[l,2,i,j,k] <- sqrt(R.list$V.R.xy)*A
                                 ^
NO COPY: R/fvbn2a.R:187:36: style: Commas should always have a space after.
            Y.bagr.akl.dkl[l,2,i,j,k] <- sqrt(R.list$V.R.xy)*A
                                   ^
NO COPY: R/fvbn2a.R:187:54: style: Words within variable and function names should be separated by '_' rather than '.'.
            Y.bagr.akl.dkl[l,2,i,j,k] <- sqrt(R.list$V.R.xy)*A
                                                     ^~~~~~
NO COPY: R/fvbn2a.R:187:61: style: Put spaces around all infix operators.
            Y.bagr.akl.dkl[l,2,i,j,k] <- sqrt(R.list$V.R.xy)*A
                                                           ~^~
NO COPY: R/fvbn2a.R:190:1: style: lines should not be more than 80 characters.
            if (l > 1)    #Hinweis: l+1 = Spalte der Zielgr\u00f6\u00dfe in xy; Spalte 2
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2a.R:191:1: style: lines should not be more than 80 characters.
                          #ist BA-Fl\u00e4che (HB) als Bezugsfl\u00e4che (= xy$x)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2a.R:192:13: style: Opening curly braces should never go on their own line and should always be followed by a new line.
            {
            ^
NO COPY: R/fvbn2a.R:193:1: style: lines should not be more than 80 characters.
              #Bei Ha-Vorrat Hauptbestand muss Fl\u00e4chenbezug die Fl\u00e4che OHNE
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2a.R:196:1: style: lines should not be more than 80 characters.
              lk.c <- ifelse(l==3,lk,1) #lk.c macht bei HB-Vorrat L\u00fcckenkorrektur
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2a.R:196:31: style: Put spaces around all infix operators.
              lk.c <- ifelse(l==3,lk,1) #lk.c macht bei HB-Vorrat L\u00fcckenkorrektur
                             ~^~~
NO COPY: R/fvbn2a.R:196:35: style: Commas should always have a space after.
              lk.c <- ifelse(l==3,lk,1) #lk.c macht bei HB-Vorrat L\u00fcckenkorrektur
                                  ^
NO COPY: R/fvbn2a.R:196:38: style: Commas should always have a space after.
              lk.c <- ifelse(l==3,lk,1) #lk.c macht bei HB-Vorrat L\u00fcckenkorrektur
                                     ^
NO COPY: R/fvbn2a.R:198:50: style: Put spaces around all infix operators.
              R.list <- r.variance.fun(cbind(xy$x/lk.c,xy[,(2+l)]),nT)
                                                ~^~
NO COPY: R/fvbn2a.R:198:56: style: Commas should always have a space after.
              R.list <- r.variance.fun(cbind(xy$x/lk.c,xy[,(2+l)]),nT)
                                                       ^
NO COPY: R/fvbn2a.R:198:60: style: Commas should always have a space after.
              R.list <- r.variance.fun(cbind(xy$x/lk.c,xy[,(2+l)]),nT)
                                                           ^
NO COPY: R/fvbn2a.R:198:60: style: Place a space before left parenthesis, except in a function call.
              R.list <- r.variance.fun(cbind(xy$x/lk.c,xy[,(2+l)]),nT)
                                                           ^
NO COPY: R/fvbn2a.R:198:62: style: Put spaces around all infix operators.
              R.list <- r.variance.fun(cbind(xy$x/lk.c,xy[,(2+l)]),nT)
                                                            ~^~
NO COPY: R/fvbn2a.R:198:68: style: Commas should always have a space after.
              R.list <- r.variance.fun(cbind(xy$x/lk.c,xy[,(2+l)]),nT)
                                                                   ^
NO COPY: R/fvbn2a.R:199:24: style: Put spaces around all infix operators.
              l.ha <- l-1
                      ~^~
NO COPY: R/fvbn2a.R:200:15: style: Words within variable and function names should be separated by '_' rather than '.'.
              Yha.bagr.akl.dkl[l.ha,1,i,j,k] <- R.list$R.xy
              ^~~~~~~~~~~~~~~~
NO COPY: R/fvbn2a.R:200:37: style: Commas should always have a space after.
              Yha.bagr.akl.dkl[l.ha,1,i,j,k] <- R.list$R.xy
                                    ^
NO COPY: R/fvbn2a.R:200:39: style: Commas should always have a space after.
              Yha.bagr.akl.dkl[l.ha,1,i,j,k] <- R.list$R.xy
                                      ^
NO COPY: R/fvbn2a.R:200:41: style: Commas should always have a space after.
              Yha.bagr.akl.dkl[l.ha,1,i,j,k] <- R.list$R.xy
                                        ^
NO COPY: R/fvbn2a.R:200:43: style: Commas should always have a space after.
              Yha.bagr.akl.dkl[l.ha,1,i,j,k] <- R.list$R.xy
                                          ^
NO COPY: R/fvbn2a.R:201:30: style: Commented code should be removed.
              #              Y.bagr.akl.dkl[l,1,i,j,k]/Y.bagr.akl.dkl[1,1,i,j,k]
                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2a.R:202:15: style: Words within variable and function names should be separated by '_' rather than '.'.
              Yha.bagr.akl.dkl[l.ha,2,i,j,k] <- sqrt(R.list$V.R.xy)
              ^~~~~~~~~~~~~~~~
NO COPY: R/fvbn2a.R:202:37: style: Commas should always have a space after.
              Yha.bagr.akl.dkl[l.ha,2,i,j,k] <- sqrt(R.list$V.R.xy)
                                    ^
NO COPY: R/fvbn2a.R:202:39: style: Commas should always have a space after.
              Yha.bagr.akl.dkl[l.ha,2,i,j,k] <- sqrt(R.list$V.R.xy)
                                      ^
NO COPY: R/fvbn2a.R:202:41: style: Commas should always have a space after.
              Yha.bagr.akl.dkl[l.ha,2,i,j,k] <- sqrt(R.list$V.R.xy)
                                        ^
NO COPY: R/fvbn2a.R:202:43: style: Commas should always have a space after.
              Yha.bagr.akl.dkl[l.ha,2,i,j,k] <- sqrt(R.list$V.R.xy)
                                          ^
NO COPY: R/fvbn2a.R:202:61: style: Words within variable and function names should be separated by '_' rather than '.'.
              Yha.bagr.akl.dkl[l.ha,2,i,j,k] <- sqrt(R.list$V.R.xy)
                                                            ^~~~~~
NO COPY: R/fvbn2a.R:212:4: style: Commented code should be removed.
  #AKL-Labels
   ^~~~~~~~~~
NO COPY: R/fvbn2a.R:213:34: style: Commas should always have a space after.
  akl.lab <- akl.lab.fun(A.klass,A.k) #k\u00e4/16.07.14
                                 ^
NO COPY: R/fvbn2a.R:216:34: style: Commas should always have a space after.
  dkl.lab <- dkl.lab.fun(D.klass,D.k) #k\u00e4/16.07.14
                                 ^
NO COPY: R/fvbn2a.R:219:20: style: Commas should always have a space after.
  a <- regexpr("/",baeume$bemerk[baeume$stp==0][1],fixed=T)
                   ^
NO COPY: R/fvbn2a.R:219:44: style: Put spaces around all infix operators.
  a <- regexpr("/",baeume$bemerk[baeume$stp==0][1],fixed=T)
                                          ~^~~
NO COPY: R/fvbn2a.R:219:52: style: Commas should always have a space after.
  a <- regexpr("/",baeume$bemerk[baeume$stp==0][1],fixed=T)
                                                   ^
NO COPY: R/fvbn2a.R:219:57: style: Put spaces around all infix operators.
  a <- regexpr("/",baeume$bemerk[baeume$stp==0][1],fixed=T)
                                                       ~^~
NO COPY: R/fvbn2a.R:220:51: style: Put spaces around all infix operators.
  b <- nchar(as.character(baeume$bemerk[baeume$stp==0][1]))
                                                 ~^~~
NO COPY: R/fvbn2a.R:221:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  version.baeume.b  <- substr(as.character(baeume$bemerk[baeume$stp==0][1]),a,b)
  ^~~~~~~~~~~~~~~~
NO COPY: R/fvbn2a.R:221:3: warning: local variable 'version.baeume.b' assigned but may not be used
  version.baeume.b  <- substr(as.character(baeume$bemerk[baeume$stp==0][1]),a,b)
  ^~~~~~~~~~~~~~~~
NO COPY: R/fvbn2a.R:221:68: style: Put spaces around all infix operators.
  version.baeume.b  <- substr(as.character(baeume$bemerk[baeume$stp==0][1]),a,b)
                                                                  ~^~~
NO COPY: R/fvbn2a.R:221:77: style: Commas should always have a space after.
  version.baeume.b  <- substr(as.character(baeume$bemerk[baeume$stp==0][1]),a,b)
                                                                            ^
NO COPY: R/fvbn2a.R:221:79: style: Commas should always have a space after.
  version.baeume.b  <- substr(as.character(baeume$bemerk[baeume$stp==0][1]),a,b)
                                                                              ^
NO COPY: R/fvbn2a.R:222:20: style: Put spaces around all infix operators.
  Log <- list(Datum=Sys.time(),
                  ~^~
NO COPY: R/fvbn2a.R:223:1: style: lines should not be more than 80 characters.
      Version.baeume.b=substr(as.character(baeume$bemerk[baeume$stp==0][1]),a,b))
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2a.R:223:23: style: Put spaces around all infix operators.
      Version.baeume.b=substr(as.character(baeume$bemerk[baeume$stp==0][1]),a,b))
                     ~^~
NO COPY: R/fvbn2a.R:223:68: style: Put spaces around all infix operators.
      Version.baeume.b=substr(as.character(baeume$bemerk[baeume$stp==0][1]),a,b))
                                                                  ~^~~
NO COPY: R/fvbn2a.R:223:77: style: Commas should always have a space after.
      Version.baeume.b=substr(as.character(baeume$bemerk[baeume$stp==0][1]),a,b))
                                                                            ^
NO COPY: R/fvbn2a.R:223:79: style: Commas should always have a space after.
      Version.baeume.b=substr(as.character(baeume$bemerk[baeume$stp==0][1]),a,b))
                                                                              ^
NO COPY: R/fvbn2a.R:225:18: style: Put spaces around all infix operators.
  return(list(Log=Log, Stratum=auswahl, nTE=n.te.s, HBF=T.hbf, se.HBF=se.T.hbf,
                ~^~
NO COPY: R/fvbn2a.R:225:31: style: Put spaces around all infix operators.
  return(list(Log=Log, Stratum=auswahl, nTE=n.te.s, HBF=T.hbf, se.HBF=se.T.hbf,
                             ~^~
NO COPY: R/fvbn2a.R:225:44: style: Put spaces around all infix operators.
  return(list(Log=Log, Stratum=auswahl, nTE=n.te.s, HBF=T.hbf, se.HBF=se.T.hbf,
                                          ~^~
NO COPY: R/fvbn2a.R:225:45: style: Words within variable and function names should be separated by '_' rather than '.'.
  return(list(Log=Log, Stratum=auswahl, nTE=n.te.s, HBF=T.hbf, se.HBF=se.T.hbf,
                                            ^~~~~~
NO COPY: R/fvbn2a.R:225:56: style: Put spaces around all infix operators.
  return(list(Log=Log, Stratum=auswahl, nTE=n.te.s, HBF=T.hbf, se.HBF=se.T.hbf,
                                                      ~^~
NO COPY: R/fvbn2a.R:225:70: style: Put spaces around all infix operators.
  return(list(Log=Log, Stratum=auswahl, nTE=n.te.s, HBF=T.hbf, se.HBF=se.T.hbf,
                                                                    ~^~
NO COPY: R/fvbn2a.R:225:71: style: Words within variable and function names should be separated by '_' rather than '.'.
  return(list(Log=Log, Stratum=auswahl, nTE=n.te.s, HBF=T.hbf, se.HBF=se.T.hbf,
                                                                      ^~~~~~~~
NO COPY: R/fvbn2a.R:226:17: style: Put spaces around all infix operators.
              BL=T.bl,se.BL=se.T.bl,iBL=T.ibl,se.iBL=se.T.ibl,LK=lk,se.LK=se.lk,
               ~^~
NO COPY: R/fvbn2a.R:226:23: style: Commas should always have a space after.
              BL=T.bl,se.BL=se.T.bl,iBL=T.ibl,se.iBL=se.T.ibl,LK=lk,se.LK=se.lk,
                      ^
NO COPY: R/fvbn2a.R:226:28: style: Put spaces around all infix operators.
              BL=T.bl,se.BL=se.T.bl,iBL=T.ibl,se.iBL=se.T.ibl,LK=lk,se.LK=se.lk,
                          ~^~
NO COPY: R/fvbn2a.R:226:29: style: Words within variable and function names should be separated by '_' rather than '.'.
              BL=T.bl,se.BL=se.T.bl,iBL=T.ibl,se.iBL=se.T.ibl,LK=lk,se.LK=se.lk,
                            ^~~~~~~
NO COPY: R/fvbn2a.R:226:37: style: Commas should always have a space after.
              BL=T.bl,se.BL=se.T.bl,iBL=T.ibl,se.iBL=se.T.ibl,LK=lk,se.LK=se.lk,
                                    ^
NO COPY: R/fvbn2a.R:226:40: style: Put spaces around all infix operators.
              BL=T.bl,se.BL=se.T.bl,iBL=T.ibl,se.iBL=se.T.ibl,LK=lk,se.LK=se.lk,
                                      ~^~
NO COPY: R/fvbn2a.R:226:47: style: Commas should always have a space after.
              BL=T.bl,se.BL=se.T.bl,iBL=T.ibl,se.iBL=se.T.ibl,LK=lk,se.LK=se.lk,
                                              ^
NO COPY: R/fvbn2a.R:226:53: style: Put spaces around all infix operators.
              BL=T.bl,se.BL=se.T.bl,iBL=T.ibl,se.iBL=se.T.ibl,LK=lk,se.LK=se.lk,
                                                   ~^~
NO COPY: R/fvbn2a.R:226:54: style: Words within variable and function names should be separated by '_' rather than '.'.
              BL=T.bl,se.BL=se.T.bl,iBL=T.ibl,se.iBL=se.T.ibl,LK=lk,se.LK=se.lk,
                                                     ^~~~~~~~
NO COPY: R/fvbn2a.R:226:63: style: Commas should always have a space after.
              BL=T.bl,se.BL=se.T.bl,iBL=T.ibl,se.iBL=se.T.ibl,LK=lk,se.LK=se.lk,
                                                              ^
NO COPY: R/fvbn2a.R:226:65: style: Put spaces around all infix operators.
              BL=T.bl,se.BL=se.T.bl,iBL=T.ibl,se.iBL=se.T.ibl,LK=lk,se.LK=se.lk,
                                                               ~^~
NO COPY: R/fvbn2a.R:226:69: style: Commas should always have a space after.
              BL=T.bl,se.BL=se.T.bl,iBL=T.ibl,se.iBL=se.T.ibl,LK=lk,se.LK=se.lk,
                                                                    ^
NO COPY: R/fvbn2a.R:226:74: style: Put spaces around all infix operators.
              BL=T.bl,se.BL=se.T.bl,iBL=T.ibl,se.iBL=se.T.ibl,LK=lk,se.LK=se.lk,
                                                                        ~^~
NO COPY: R/fvbn2a.R:227:25: style: Put spaces around all infix operators.
              Attribute1=c("BAF", "V_DhmR","V_DhmR_HB", "oiB", "N", "N_Dh"),
                       ~^~
NO COPY: R/fvbn2a.R:227:44: style: Commas should always have a space after.
              Attribute1=c("BAF", "V_DhmR","V_DhmR_HB", "oiB", "N", "N_Dh"),
                                           ^
NO COPY: R/fvbn2a.R:228:1: style: lines should not be more than 80 characters.
              Attribute2=c("V_DhmR/ha","V_DhmR_HB/ha","oiB/ha","N/ha","N_Dh/ha"),
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2a.R:228:25: style: Put spaces around all infix operators.
              Attribute2=c("V_DhmR/ha","V_DhmR_HB/ha","oiB/ha","N/ha","N_Dh/ha"),
                       ~^~
NO COPY: R/fvbn2a.R:228:40: style: Commas should always have a space after.
              Attribute2=c("V_DhmR/ha","V_DhmR_HB/ha","oiB/ha","N/ha","N_Dh/ha"),
                                       ^
NO COPY: R/fvbn2a.R:228:55: style: Commas should always have a space after.
              Attribute2=c("V_DhmR/ha","V_DhmR_HB/ha","oiB/ha","N/ha","N_Dh/ha"),
                                                      ^
NO COPY: R/fvbn2a.R:228:64: style: Commas should always have a space after.
              Attribute2=c("V_DhmR/ha","V_DhmR_HB/ha","oiB/ha","N/ha","N_Dh/ha"),
                                                               ^
NO COPY: R/fvbn2a.R:228:71: style: Commas should always have a space after.
              Attribute2=c("V_DhmR/ha","V_DhmR_HB/ha","oiB/ha","N/ha","N_Dh/ha"),
                                                                      ^
NO COPY: R/fvbn2a.R:229:45: style: Commas should always have a space after.
              "Gr\u00f6\u00dfen" = c("Wert","Standardfehler"),
                                            ^
NO COPY: R/fvbn2a.R:230:19: style: Put spaces around all infix operators.
              BAGR=bagr.list,AKL = akl.lab[1:A.k], DKL = dkl.lab,
                 ~^~
NO COPY: R/fvbn2a.R:230:30: style: Commas should always have a space after.
              BAGR=bagr.list,AKL = akl.lab[1:A.k], DKL = dkl.lab,
                             ^
NO COPY: R/fvbn2a.R:231:34: style: Put spaces around all infix operators.
              T.FVBN.Bagr.Akl.Dkl=Y.bagr.akl.dkl,
                                ~^~
NO COPY: R/fvbn2a.R:231:35: style: Words within variable and function names should be separated by '_' rather than '.'.
              T.FVBN.Bagr.Akl.Dkl=Y.bagr.akl.dkl,
                                  ^~~~~~~~~~~~~~
NO COPY: R/fvbn2a.R:232:35: style: Put spaces around all infix operators.
              FVBN.ha.Bagr.Akl.Dkl=Yha.bagr.akl.dkl,
                                 ~^~
NO COPY: R/fvbn2a.R:232:36: style: Words within variable and function names should be separated by '_' rather than '.'.
              FVBN.ha.Bagr.Akl.Dkl=Yha.bagr.akl.dkl,
                                   ^~~~~~~~~~~~~~~~
NO COPY: R/fvbn2a.R:233:30: style: Put spaces around all infix operators.
              nT.Bagr.Akl.Dkl=nT.bagr.akl.dkl))
                            ~^~
NO COPY: R/fvbn2a.R:233:31: style: Variable and function names should be all lowercase.
              nT.Bagr.Akl.Dkl=nT.bagr.akl.dkl))
                              ^~~~~~~~~~~~~~~
NO COPY: R/fvbn2a.R:233:31: style: Words within variable and function names should be separated by '_' rather than '.'.
              nT.Bagr.Akl.Dkl=nT.bagr.akl.dkl))
                              ^~~~~~~~~~~~~~~
NO COPY: R/fvbn2a.R:235:1: style: Trailing blank lines are superfluous.

^
NO COPY: R/fvbn2b.R:4:27: style: Commas should always have a space after.
          function(baeume,ecken,trakte,A,inv,BA.grupp,A.klass,D.klass,auswahl){
                          ^
NO COPY: R/fvbn2b.R:4:33: style: Commas should always have a space after.
          function(baeume,ecken,trakte,A,inv,BA.grupp,A.klass,D.klass,auswahl){
                                ^
NO COPY: R/fvbn2b.R:4:40: style: Commas should always have a space after.
          function(baeume,ecken,trakte,A,inv,BA.grupp,A.klass,D.klass,auswahl){
                                       ^
NO COPY: R/fvbn2b.R:4:42: style: Commas should always have a space after.
          function(baeume,ecken,trakte,A,inv,BA.grupp,A.klass,D.klass,auswahl){
                                         ^
NO COPY: R/fvbn2b.R:4:46: style: Commas should always have a space after.
          function(baeume,ecken,trakte,A,inv,BA.grupp,A.klass,D.klass,auswahl){
                                             ^
NO COPY: R/fvbn2b.R:4:55: style: Commas should always have a space after.
          function(baeume,ecken,trakte,A,inv,BA.grupp,A.klass,D.klass,auswahl){
                                                      ^
NO COPY: R/fvbn2b.R:4:63: style: Commas should always have a space after.
          function(baeume,ecken,trakte,A,inv,BA.grupp,A.klass,D.klass,auswahl){
                                                              ^
NO COPY: R/fvbn2b.R:4:71: style: Commas should always have a space after.
          function(baeume,ecken,trakte,A,inv,BA.grupp,A.klass,D.klass,auswahl){
                                                                      ^
NO COPY: R/fvbn2b.R:5:34: style: Commas should always have a space after.
  stratum <- stratum.fun(auswahl,ecken)
                                 ^
NO COPY: R/fvbn2b.R:12:28: style: Commas should always have a space after.
  names(baeume) <- sub(inv,names(baeume),replacement="")
                           ^
NO COPY: R/fvbn2b.R:12:42: style: Commas should always have a space after.
  names(baeume) <- sub(inv,names(baeume),replacement="")
                                         ^
NO COPY: R/fvbn2b.R:12:53: style: Put spaces around all infix operators.
  names(baeume) <- sub(inv,names(baeume),replacement="")
                                                   ~^~
NO COPY: R/fvbn2b.R:14:1: style: lines should not be more than 80 characters.
  baeume.s <- merge(baeume[TRUE, c("tnr", "enr", "ba", "alt", "bhd", "volv", "oib", "nha", "stfl")],
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2b.R:15:52: style: Commas should always have a space after.
                    stratum[TRUE, c("tnr", "enr")],by=c("tnr","enr"),all.y=T)
                                                   ^
NO COPY: R/fvbn2b.R:15:54: style: Put spaces around all infix operators.
                    stratum[TRUE, c("tnr", "enr")],by=c("tnr","enr"),all.y=T)
                                                    ~^~
NO COPY: R/fvbn2b.R:15:63: style: Commas should always have a space after.
                    stratum[TRUE, c("tnr", "enr")],by=c("tnr","enr"),all.y=T)
                                                              ^
NO COPY: R/fvbn2b.R:15:70: style: Commas should always have a space after.
                    stratum[TRUE, c("tnr", "enr")],by=c("tnr","enr"),all.y=T)
                                                                     ^
NO COPY: R/fvbn2b.R:15:75: style: Put spaces around all infix operators.
                    stratum[TRUE, c("tnr", "enr")],by=c("tnr","enr"),all.y=T)
                                                                         ~^~
NO COPY: R/fvbn2b.R:22:30: style: Commas should always have a space after.
  baeume.s <- merge(baeume.s,bagr.tab[TRUE, c("ICode", "bagr")],
                             ^
NO COPY: R/fvbn2b.R:23:39: style: Put spaces around all infix operators.
                                  by.x="ba",by.y="ICode",all.x=T)
                                     ~^~
NO COPY: R/fvbn2b.R:23:45: style: Commas should always have a space after.
                                  by.x="ba",by.y="ICode",all.x=T)
                                            ^
NO COPY: R/fvbn2b.R:23:49: style: Put spaces around all infix operators.
                                  by.x="ba",by.y="ICode",all.x=T)
                                               ~^~
NO COPY: R/fvbn2b.R:23:58: style: Commas should always have a space after.
                                  by.x="ba",by.y="ICode",all.x=T)
                                                         ^
NO COPY: R/fvbn2b.R:23:63: style: Put spaces around all infix operators.
                                  by.x="ba",by.y="ICode",all.x=T)
                                                             ~^~
NO COPY: R/fvbn2b.R:30:24: style: Commas should always have a space after.
  nT <- length(trakte[,1])
                       ^
NO COPY: R/fvbn2b.R:32:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  n.te.s <- length(stratum[,1])
  ^~~~~~
NO COPY: R/fvbn2b.R:32:29: style: Commas should always have a space after.
  n.te.s <- length(stratum[,1])
                            ^
NO COPY: R/fvbn2b.R:37:32: style: Commas should always have a space after.
  xy <- stats::aggregate(rep(1,length(stratum[,1])),by=list(stratum$tnr),sum)
                               ^
NO COPY: R/fvbn2b.R:37:48: style: Commas should always have a space after.
  xy <- stats::aggregate(rep(1,length(stratum[,1])),by=list(stratum$tnr),sum)
                                               ^
NO COPY: R/fvbn2b.R:37:53: style: Commas should always have a space after.
  xy <- stats::aggregate(rep(1,length(stratum[,1])),by=list(stratum$tnr),sum)
                                                    ^
NO COPY: R/fvbn2b.R:37:55: style: Put spaces around all infix operators.
  xy <- stats::aggregate(rep(1,length(stratum[,1])),by=list(stratum$tnr),sum)
                                                     ~^~
NO COPY: R/fvbn2b.R:37:74: style: Commas should always have a space after.
  xy <- stats::aggregate(rep(1,length(stratum[,1])),by=list(stratum$tnr),sum)
                                                                         ^
NO COPY: R/fvbn2b.R:39:1: style: lines should not be more than 80 characters.
  xy <- cbind(xy,stats::aggregate(ifelse(baeume.s$ba==999,baeume.s$stfl/10000,0),
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2b.R:39:18: style: Commas should always have a space after.
  xy <- cbind(xy,stats::aggregate(ifelse(baeume.s$ba==999,baeume.s$stfl/10000,0),
                 ^
NO COPY: R/fvbn2b.R:39:53: style: Put spaces around all infix operators.
  xy <- cbind(xy,stats::aggregate(ifelse(baeume.s$ba==999,baeume.s$stfl/10000,0),
                                                   ~^~~
NO COPY: R/fvbn2b.R:39:59: style: Commas should always have a space after.
  xy <- cbind(xy,stats::aggregate(ifelse(baeume.s$ba==999,baeume.s$stfl/10000,0),
                                                          ^
NO COPY: R/fvbn2b.R:39:72: style: Put spaces around all infix operators.
  xy <- cbind(xy,stats::aggregate(ifelse(baeume.s$ba==999,baeume.s$stfl/10000,0),
                                                                      ~^~
NO COPY: R/fvbn2b.R:39:79: style: Commas should always have a space after.
  xy <- cbind(xy,stats::aggregate(ifelse(baeume.s$ba==999,baeume.s$stfl/10000,0),
                                                                              ^
NO COPY: R/fvbn2b.R:40:21: style: Put spaces around all infix operators.
                  by=list(baeume.s$tnr),sum)$x)
                   ~^~
NO COPY: R/fvbn2b.R:40:41: style: Commas should always have a space after.
                  by=list(baeume.s$tnr),sum)$x)
                                        ^
NO COPY: R/fvbn2b.R:41:18: style: Commas should always have a space after.
  xy <- cbind(xy,stats::aggregate(ifelse(baeume.s$ba==998,baeume.s$stfl,0),
                 ^
NO COPY: R/fvbn2b.R:41:53: style: Put spaces around all infix operators.
  xy <- cbind(xy,stats::aggregate(ifelse(baeume.s$ba==998,baeume.s$stfl,0),
                                                   ~^~~
NO COPY: R/fvbn2b.R:41:59: style: Commas should always have a space after.
  xy <- cbind(xy,stats::aggregate(ifelse(baeume.s$ba==998,baeume.s$stfl,0),
                                                          ^
NO COPY: R/fvbn2b.R:41:73: style: Commas should always have a space after.
  xy <- cbind(xy,stats::aggregate(ifelse(baeume.s$ba==998,baeume.s$stfl,0),
                                                                        ^
NO COPY: R/fvbn2b.R:42:21: style: Put spaces around all infix operators.
                  by=list(baeume.s$tnr),sum)$x/10000)
                   ~^~
NO COPY: R/fvbn2b.R:42:41: style: Commas should always have a space after.
                  by=list(baeume.s$tnr),sum)$x/10000)
                                        ^
NO COPY: R/fvbn2b.R:42:47: style: Put spaces around all infix operators.
                  by=list(baeume.s$tnr),sum)$x/10000)
                                             ~^~
NO COPY: R/fvbn2b.R:43:24: style: Commas should always have a space after.
  names(xy) <- c("tnr","hbf","bl","ibl")
                       ^
NO COPY: R/fvbn2b.R:43:30: style: Commas should always have a space after.
  names(xy) <- c("tnr","hbf","bl","ibl")
                             ^
NO COPY: R/fvbn2b.R:43:35: style: Commas should always have a space after.
  names(xy) <- c("tnr","hbf","bl","ibl")
                                  ^
NO COPY: R/fvbn2b.R:44:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  n.t.s <- length(xy[,1])
  ^~~~~
NO COPY: R/fvbn2b.R:44:3: warning: local variable 'n.t.s' assigned but may not be used
  n.t.s <- length(xy[,1])
  ^~~~~
NO COPY: R/fvbn2b.R:44:23: style: Commas should always have a space after.
  n.t.s <- length(xy[,1])
                      ^
NO COPY: R/fvbn2b.R:45:43: style: Commas should always have a space after.
  xy <- merge(trakte[TRUE, c("tnr", "m")],xy,by=c("tnr"),all.x=T)
                                          ^
NO COPY: R/fvbn2b.R:45:46: style: Commas should always have a space after.
  xy <- merge(trakte[TRUE, c("tnr", "m")],xy,by=c("tnr"),all.x=T)
                                             ^
NO COPY: R/fvbn2b.R:45:48: style: Put spaces around all infix operators.
  xy <- merge(trakte[TRUE, c("tnr", "m")],xy,by=c("tnr"),all.x=T)
                                              ~^~
NO COPY: R/fvbn2b.R:45:58: style: Commas should always have a space after.
  xy <- merge(trakte[TRUE, c("tnr", "m")],xy,by=c("tnr"),all.x=T)
                                                         ^
NO COPY: R/fvbn2b.R:45:63: style: Put spaces around all infix operators.
  xy <- merge(trakte[TRUE, c("tnr", "m")],xy,by=c("tnr"),all.x=T)
                                                             ~^~
NO COPY: R/fvbn2b.R:48:22: style: Put spaces around all infix operators.
  xy$hbf.ba <- xy$hbf-xy$bl-xy$ibl
                    ~^~
NO COPY: R/fvbn2b.R:48:28: style: Put spaces around all infix operators.
  xy$hbf.ba <- xy$hbf-xy$bl-xy$ibl
                          ~^~
NO COPY: R/fvbn2b.R:49:1: style: lines should not be more than 80 characters.
  #k\u00e4/11.10.2014  wegen BA-Anteilen muss hbf je Trakt im Stratum erhalten bleiben
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2b.R:52:4: style: Commented code should be removed.
  #HBFl. [ha]
   ^~~~~~~~~~
NO COPY: R/fvbn2b.R:53:9: style: Use <-, not =, for assignment.
  r.list= r.variance.fun(xy[TRUE, c("m", "hbf")],nT)
        ^
NO COPY: R/fvbn2b.R:53:9: style: Put spaces around all infix operators.
  r.list= r.variance.fun(xy[TRUE, c("m", "hbf")],nT)
       ~^
NO COPY: R/fvbn2b.R:53:50: style: Commas should always have a space after.
  r.list= r.variance.fun(xy[TRUE, c("m", "hbf")],nT)
                                                 ^
NO COPY: R/fvbn2b.R:54:23: style: Put spaces around all infix operators.
  T.hbf <- r.list$R.xy*A
                     ~^~
NO COPY: R/fvbn2b.R:55:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  se.T.hbf <- sqrt(r.list$V.R.xy)*A
  ^~~~~~~~
NO COPY: R/fvbn2b.R:55:27: style: Words within variable and function names should be separated by '_' rather than '.'.
  se.T.hbf <- sqrt(r.list$V.R.xy)*A
                          ^~~~~~
NO COPY: R/fvbn2b.R:55:34: style: Put spaces around all infix operators.
  se.T.hbf <- sqrt(r.list$V.R.xy)*A
                                ~^~
NO COPY: R/fvbn2b.R:57:51: style: Commas should always have a space after.
  r.list <- r.variance.fun(xy[TRUE, c("m", "bl")],nT)
                                                  ^
NO COPY: R/fvbn2b.R:58:22: style: Put spaces around all infix operators.
  T.bl <- r.list$R.xy*A
                    ~^~
NO COPY: R/fvbn2b.R:59:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  se.T.bl <- sqrt(r.list$V.R.xy)*A
  ^~~~~~~
NO COPY: R/fvbn2b.R:59:26: style: Words within variable and function names should be separated by '_' rather than '.'.
  se.T.bl <- sqrt(r.list$V.R.xy)*A
                         ^~~~~~
NO COPY: R/fvbn2b.R:59:33: style: Put spaces around all infix operators.
  se.T.bl <- sqrt(r.list$V.R.xy)*A
                               ~^~
NO COPY: R/fvbn2b.R:61:52: style: Commas should always have a space after.
  r.list <- r.variance.fun(xy[TRUE, c("m", "ibl")],nT)
                                                   ^
NO COPY: R/fvbn2b.R:62:23: style: Put spaces around all infix operators.
  T.ibl <- r.list$R.xy*A
                     ~^~
NO COPY: R/fvbn2b.R:63:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  se.T.ibl <- sqrt(r.list$V.R.xy)*A
  ^~~~~~~~
NO COPY: R/fvbn2b.R:63:27: style: Words within variable and function names should be separated by '_' rather than '.'.
  se.T.ibl <- sqrt(r.list$V.R.xy)*A
                          ^~~~~~
NO COPY: R/fvbn2b.R:63:34: style: Put spaces around all infix operators.
  se.T.ibl <- sqrt(r.list$V.R.xy)*A
                                ~^~
NO COPY: R/fvbn2b.R:65:57: style: Commas should always have a space after.
  r.list <- r.variance.fun(xy[TRUE, c("hbf.ba", "hbf")],nT)
                                                        ^
NO COPY: R/fvbn2b.R:67:24: style: Words within variable and function names should be separated by '_' rather than '.'.
  se.lk <- sqrt(r.list$V.R.xy)
                       ^~~~~~
NO COPY: R/fvbn2b.R:73:29: style: Put spaces around all infix operators.
                      breaks=c(seq(0,A.klass[[1]],A.klass[[2]]),A.max),right=T))
                           ~^~
NO COPY: R/fvbn2b.R:73:38: style: Commas should always have a space after.
                      breaks=c(seq(0,A.klass[[1]],A.klass[[2]]),A.max),right=T))
                                     ^
NO COPY: R/fvbn2b.R:73:51: style: Commas should always have a space after.
                      breaks=c(seq(0,A.klass[[1]],A.klass[[2]]),A.max),right=T))
                                                  ^
NO COPY: R/fvbn2b.R:73:65: style: Commas should always have a space after.
                      breaks=c(seq(0,A.klass[[1]],A.klass[[2]]),A.max),right=T))
                                                                ^
NO COPY: R/fvbn2b.R:73:72: style: Commas should always have a space after.
                      breaks=c(seq(0,A.klass[[1]],A.klass[[2]]),A.max),right=T))
                                                                       ^
NO COPY: R/fvbn2b.R:73:77: style: Put spaces around all infix operators.
                      breaks=c(seq(0,A.klass[[1]],A.klass[[2]]),A.max),right=T))
                                                                           ~^~
NO COPY: R/fvbn2b.R:79:5: style: Place a space before left parenthesis, except in a function call.
  if(A.klass[[1]]>A.klass[[2]])
    ^
NO COPY: R/fvbn2b.R:79:18: style: Put spaces around all infix operators.
  if(A.klass[[1]]>A.klass[[2]])
                ~^~
NO COPY: R/fvbn2b.R:80:3: style: Opening curly braces should never go on their own line and should always be followed by a new line.
  {
  ^
NO COPY: R/fvbn2b.R:81:5: style: Words within variable and function names should be separated by '_' rather than '.'.
    max.A.k <- A.klass[[1]]/A.klass[[2]] + 1
    ^~~~~~~
NO COPY: R/fvbn2b.R:81:28: style: Put spaces around all infix operators.
    max.A.k <- A.klass[[1]]/A.klass[[2]] + 1
                          ~^~
NO COPY: R/fvbn2b.R:82:15: style: Words within variable and function names should be separated by '_' rather than '.'.
    if (A.k < max.A.k) {A.k <- max.A.k }
              ^~~~~~~
NO COPY: R/fvbn2b.R:82:24: style: Opening curly braces should never go on their own line and should always be followed by a new line.
    if (A.k < max.A.k) {A.k <- max.A.k }
                       ^
NO COPY: R/fvbn2b.R:82:32: style: Words within variable and function names should be separated by '_' rather than '.'.
    if (A.k < max.A.k) {A.k <- max.A.k }
                               ^~~~~~~
NO COPY: R/fvbn2b.R:82:40: style: Closing curly-braces should always be on their own line, unless it's followed by an else.
    if (A.k < max.A.k) {A.k <- max.A.k }
                                       ^
NO COPY: R/fvbn2b.R:89:3: style: Opening curly braces should never go on their own line and should always be followed by a new line.
  {
  ^
NO COPY: R/fvbn2b.R:90:1: style: lines should not be more than 80 characters.
    brks <- c(0,7,seq(D.klass[[1]]+D.klass[[3]],D.klass[[2]],D.klass[[3]]),D.max)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2b.R:90:17: style: Commas should always have a space after.
    brks <- c(0,7,seq(D.klass[[1]]+D.klass[[3]],D.klass[[2]],D.klass[[3]]),D.max)
                ^
NO COPY: R/fvbn2b.R:90:19: style: Commas should always have a space after.
    brks <- c(0,7,seq(D.klass[[1]]+D.klass[[3]],D.klass[[2]],D.klass[[3]]),D.max)
                  ^
NO COPY: R/fvbn2b.R:90:35: style: Put spaces around all infix operators.
    brks <- c(0,7,seq(D.klass[[1]]+D.klass[[3]],D.klass[[2]],D.klass[[3]]),D.max)
                                 ~^~
NO COPY: R/fvbn2b.R:90:49: style: Commas should always have a space after.
    brks <- c(0,7,seq(D.klass[[1]]+D.klass[[3]],D.klass[[2]],D.klass[[3]]),D.max)
                                                ^
NO COPY: R/fvbn2b.R:90:62: style: Commas should always have a space after.
    brks <- c(0,7,seq(D.klass[[1]]+D.klass[[3]],D.klass[[2]],D.klass[[3]]),D.max)
                                                             ^
NO COPY: R/fvbn2b.R:90:76: style: Commas should always have a space after.
    brks <- c(0,7,seq(D.klass[[1]]+D.klass[[3]],D.klass[[2]],D.klass[[3]]),D.max)
                                                                           ^
NO COPY: R/fvbn2b.R:92:3: style: Opening curly braces should never go on their own line and should always be followed by a new line.
  {
  ^
NO COPY: R/fvbn2b.R:93:32: style: Commas should always have a space after.
    brks <- c(seq(D.klass[[1]],D.klass[[2]],D.klass[[3]]),D.max)
                               ^
NO COPY: R/fvbn2b.R:93:45: style: Commas should always have a space after.
    brks <- c(seq(D.klass[[1]],D.klass[[2]],D.klass[[3]]),D.max)
                                            ^
NO COPY: R/fvbn2b.R:93:59: style: Commas should always have a space after.
    brks <- c(seq(D.klass[[1]],D.klass[[2]],D.klass[[3]]),D.max)
                                                          ^
NO COPY: R/fvbn2b.R:95:43: style: Put spaces around all infix operators.
  baeume.s$dkl <- cut(baeume.s$bhd, breaks=brks, right=F)
                                         ~^~
NO COPY: R/fvbn2b.R:95:55: style: Put spaces around all infix operators.
  baeume.s$dkl <- cut(baeume.s$bhd, breaks=brks, right=F)
                                                     ~^~
NO COPY: R/fvbn2b.R:101:5: style: Place a space before left parenthesis, except in a function call.
  if(D.klass[[2]]>D.klass[[3]])
    ^
NO COPY: R/fvbn2b.R:101:18: style: Put spaces around all infix operators.
  if(D.klass[[2]]>D.klass[[3]])
                ~^~
NO COPY: R/fvbn2b.R:102:3: style: Opening curly braces should never go on their own line and should always be followed by a new line.
  {
  ^
NO COPY: R/fvbn2b.R:103:5: style: Words within variable and function names should be separated by '_' rather than '.'.
    max.D.k <- (D.klass[[2]]-D.klass[[1]])/D.klass[[2]] + 2
    ^~~~~~~
NO COPY: R/fvbn2b.R:103:29: style: Put spaces around all infix operators.
    max.D.k <- (D.klass[[2]]-D.klass[[1]])/D.klass[[2]] + 2
                           ~^~
NO COPY: R/fvbn2b.R:103:43: style: Put spaces around all infix operators.
    max.D.k <- (D.klass[[2]]-D.klass[[1]])/D.klass[[2]] + 2
                                         ~^~
NO COPY: R/fvbn2b.R:104:15: style: Words within variable and function names should be separated by '_' rather than '.'.
    if (D.k < max.D.k) {D.k <- max.D.k }
              ^~~~~~~
NO COPY: R/fvbn2b.R:104:24: style: Opening curly braces should never go on their own line and should always be followed by a new line.
    if (D.k < max.D.k) {D.k <- max.D.k }
                       ^
NO COPY: R/fvbn2b.R:104:32: style: Words within variable and function names should be separated by '_' rather than '.'.
    if (D.k < max.D.k) {D.k <- max.D.k }
                               ^~~~~~~
NO COPY: R/fvbn2b.R:104:40: style: Closing curly-braces should always be on their own line, unless it's followed by an else.
    if (D.k < max.D.k) {D.k <- max.D.k }
                                       ^
NO COPY: R/fvbn2b.R:109:1: style: lines should not be more than 80 characters.
  #Es gibt 6 Zielgr\u00f6\u00dfen <Y>: BAF [ha], V [m^3Dh mR], VHb (nur Hauptbestand)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2b.R:112:1: style: lines should not be more than 80 characters.
  #F\u00fcr diese 6 "Gr\u00f6\u00dfen" werden jeweils der Gesamtwert ("Total") und der
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2b.R:113:1: style: lines should not be more than 80 characters.
  #Stichprobenfehler (SE) berechnet, und zwar jeweils f\u00fcr die 9 Baumartengruppen
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2b.R:115:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  Y.bagr.akl.dkl    <- array(dim=c(6,2,n.bagr,A.k,D.k))
  ^~~~~~~~~~~~~~
NO COPY: R/fvbn2b.R:115:33: style: Put spaces around all infix operators.
  Y.bagr.akl.dkl    <- array(dim=c(6,2,n.bagr,A.k,D.k))
                               ~^~
NO COPY: R/fvbn2b.R:115:38: style: Commas should always have a space after.
  Y.bagr.akl.dkl    <- array(dim=c(6,2,n.bagr,A.k,D.k))
                                     ^
NO COPY: R/fvbn2b.R:115:40: style: Commas should always have a space after.
  Y.bagr.akl.dkl    <- array(dim=c(6,2,n.bagr,A.k,D.k))
                                       ^
NO COPY: R/fvbn2b.R:115:47: style: Commas should always have a space after.
  Y.bagr.akl.dkl    <- array(dim=c(6,2,n.bagr,A.k,D.k))
                                              ^
NO COPY: R/fvbn2b.R:115:51: style: Commas should always have a space after.
  Y.bagr.akl.dkl    <- array(dim=c(6,2,n.bagr,A.k,D.k))
                                                  ^
NO COPY: R/fvbn2b.R:116:3: style: Variable and function names should be all lowercase.
  nT.bagr.akl.dkl   <- array(dim=c(n.bagr,A.k,D.k))
  ^~~~~~~~~~~~~~~
NO COPY: R/fvbn2b.R:116:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  nT.bagr.akl.dkl   <- array(dim=c(n.bagr,A.k,D.k))
  ^~~~~~~~~~~~~~~
NO COPY: R/fvbn2b.R:116:33: style: Put spaces around all infix operators.
  nT.bagr.akl.dkl   <- array(dim=c(n.bagr,A.k,D.k))
                               ~^~
NO COPY: R/fvbn2b.R:116:43: style: Commas should always have a space after.
  nT.bagr.akl.dkl   <- array(dim=c(n.bagr,A.k,D.k))
                                          ^
NO COPY: R/fvbn2b.R:116:47: style: Commas should always have a space after.
  nT.bagr.akl.dkl   <- array(dim=c(n.bagr,A.k,D.k))
                                              ^
NO COPY: R/fvbn2b.R:117:1: style: lines should not be more than 80 characters.
  #Hektarbezogene Kennwerte. urspr. 5 Zielgr\u00f6\u00dfen: Vha, VHbha, Bha, Nha, NDhha
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2b.R:120:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  Yha.bagr.akl.dkl  <- array(dim=c(6,2,n.bagr,A.k,D.k))
  ^~~~~~~~~~~~~~~~
NO COPY: R/fvbn2b.R:120:33: style: Put spaces around all infix operators.
  Yha.bagr.akl.dkl  <- array(dim=c(6,2,n.bagr,A.k,D.k))
                               ~^~
NO COPY: R/fvbn2b.R:120:38: style: Commas should always have a space after.
  Yha.bagr.akl.dkl  <- array(dim=c(6,2,n.bagr,A.k,D.k))
                                     ^
NO COPY: R/fvbn2b.R:120:40: style: Commas should always have a space after.
  Yha.bagr.akl.dkl  <- array(dim=c(6,2,n.bagr,A.k,D.k))
                                       ^
NO COPY: R/fvbn2b.R:120:47: style: Commas should always have a space after.
  Yha.bagr.akl.dkl  <- array(dim=c(6,2,n.bagr,A.k,D.k))
                                              ^
NO COPY: R/fvbn2b.R:120:51: style: Commas should always have a space after.
  Yha.bagr.akl.dkl  <- array(dim=c(6,2,n.bagr,A.k,D.k))
                                                  ^
NO COPY: R/fvbn2b.R:122:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  ant.bagr.akl.dkl  <- array(dim=c(2,A.k,D.k))
  ^~~~~~~~~~~~~~~~
NO COPY: R/fvbn2b.R:122:3: warning: local variable 'ant.bagr.akl.dkl' assigned but may not be used
  ant.bagr.akl.dkl  <- array(dim=c(2,A.k,D.k))
  ^~~~~~~~~~~~~~~~
NO COPY: R/fvbn2b.R:122:33: style: Put spaces around all infix operators.
  ant.bagr.akl.dkl  <- array(dim=c(2,A.k,D.k))
                               ~^~
NO COPY: R/fvbn2b.R:122:38: style: Commas should always have a space after.
  ant.bagr.akl.dkl  <- array(dim=c(2,A.k,D.k))
                                     ^
NO COPY: R/fvbn2b.R:122:42: style: Commas should always have a space after.
  ant.bagr.akl.dkl  <- array(dim=c(2,A.k,D.k))
                                         ^
NO COPY: R/fvbn2b.R:127:3: style: Opening curly braces should never go on their own line and should always be followed by a new line.
  {
  ^
NO COPY: R/fvbn2b.R:129:5: style: Opening curly braces should never go on their own line and should always be followed by a new line.
    {
    ^
NO COPY: R/fvbn2b.R:131:7: style: Opening curly braces should never go on their own line and should always be followed by a new line.
      {
      ^
NO COPY: R/fvbn2b.R:133:1: style: lines should not be more than 80 characters.
                      baeume.s[["bagr"]]==bagr.list[i]&baeume.s[["akl"]]==akl.lab[j]&baeume.s[["dkl"]]==dkl.lab[k],
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2b.R:133:41: style: Put spaces around all infix operators.
                      baeume.s[["bagr"]]==bagr.list[i]&baeume.s[["akl"]]==akl.lab[j]&baeume.s[["dkl"]]==dkl.lab[k],
                                       ~^~~
NO COPY: R/fvbn2b.R:133:55: style: Put spaces around all infix operators.
                      baeume.s[["bagr"]]==bagr.list[i]&baeume.s[["akl"]]==akl.lab[j]&baeume.s[["dkl"]]==dkl.lab[k],
                                                     ~^~
NO COPY: R/fvbn2b.R:133:73: style: Put spaces around all infix operators.
                      baeume.s[["bagr"]]==bagr.list[i]&baeume.s[["akl"]]==akl.lab[j]&baeume.s[["dkl"]]==dkl.lab[k],
                                                                       ~^~~
NO COPY: R/fvbn2b.R:133:85: style: Put spaces around all infix operators.
                      baeume.s[["bagr"]]==bagr.list[i]&baeume.s[["akl"]]==akl.lab[j]&baeume.s[["dkl"]]==dkl.lab[k],
                                                                                   ~^~
NO COPY: R/fvbn2b.R:133:103: style: Put spaces around all infix operators.
                      baeume.s[["bagr"]]==bagr.list[i]&baeume.s[["akl"]]==akl.lab[j]&baeume.s[["dkl"]]==dkl.lab[k],
                                                                                                     ~^~~
NO COPY: R/fvbn2b.R:134:1: style: lines should not be more than 80 characters.
                      c("tnr", "enr", "bhd", "dkl", "volv", "oib", "nha", "stfl")]
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2b.R:135:31: style: Commas should always have a space after.
        if (length(baeume.ba[,1])== 0)
                              ^
NO COPY: R/fvbn2b.R:135:34: style: Put spaces around all infix operators.
        if (length(baeume.ba[,1])== 0)
                                ~^
NO COPY: R/fvbn2b.R:136:9: style: Opening curly braces should never go on their own line and should always be followed by a new line.
        {
        ^
NO COPY: R/fvbn2b.R:137:1: style: lines should not be more than 80 characters.
           Y.bagr.akl.dkl[1:6,1,i,j,k]    <- rep(0,6)  #Zielgr\u00f6\u00dfe Total
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2b.R:137:12: style: Words within variable and function names should be separated by '_' rather than '.'.
           Y.bagr.akl.dkl[1:6,1,i,j,k]    <- rep(0,6)  #Zielgr\u00f6\u00dfe Total
           ^~~~~~~~~~~~~~
NO COPY: R/fvbn2b.R:137:31: style: Commas should always have a space after.
           Y.bagr.akl.dkl[1:6,1,i,j,k]    <- rep(0,6)  #Zielgr\u00f6\u00dfe Total
                              ^
NO COPY: R/fvbn2b.R:137:33: style: Commas should always have a space after.
           Y.bagr.akl.dkl[1:6,1,i,j,k]    <- rep(0,6)  #Zielgr\u00f6\u00dfe Total
                                ^
NO COPY: R/fvbn2b.R:137:35: style: Commas should always have a space after.
           Y.bagr.akl.dkl[1:6,1,i,j,k]    <- rep(0,6)  #Zielgr\u00f6\u00dfe Total
                                  ^
NO COPY: R/fvbn2b.R:137:37: style: Commas should always have a space after.
           Y.bagr.akl.dkl[1:6,1,i,j,k]    <- rep(0,6)  #Zielgr\u00f6\u00dfe Total
                                    ^
NO COPY: R/fvbn2b.R:137:52: style: Commas should always have a space after.
           Y.bagr.akl.dkl[1:6,1,i,j,k]    <- rep(0,6)  #Zielgr\u00f6\u00dfe Total
                                                   ^
NO COPY: R/fvbn2b.R:138:12: style: Words within variable and function names should be separated by '_' rather than '.'.
           Y.bagr.akl.dkl[1:6,2,i,j,k]    <- rep(0,6)  #Stichprobenfehler (SE)
           ^~~~~~~~~~~~~~
NO COPY: R/fvbn2b.R:138:31: style: Commas should always have a space after.
           Y.bagr.akl.dkl[1:6,2,i,j,k]    <- rep(0,6)  #Stichprobenfehler (SE)
                              ^
NO COPY: R/fvbn2b.R:138:33: style: Commas should always have a space after.
           Y.bagr.akl.dkl[1:6,2,i,j,k]    <- rep(0,6)  #Stichprobenfehler (SE)
                                ^
NO COPY: R/fvbn2b.R:138:35: style: Commas should always have a space after.
           Y.bagr.akl.dkl[1:6,2,i,j,k]    <- rep(0,6)  #Stichprobenfehler (SE)
                                  ^
NO COPY: R/fvbn2b.R:138:37: style: Commas should always have a space after.
           Y.bagr.akl.dkl[1:6,2,i,j,k]    <- rep(0,6)  #Stichprobenfehler (SE)
                                    ^
NO COPY: R/fvbn2b.R:138:52: style: Commas should always have a space after.
           Y.bagr.akl.dkl[1:6,2,i,j,k]    <- rep(0,6)  #Stichprobenfehler (SE)
                                                   ^
NO COPY: R/fvbn2b.R:139:12: style: Words within variable and function names should be separated by '_' rather than '.'.
           Yha.bagr.akl.dkl[1:5,1,i,j,k]  <- rep(0,5)
           ^~~~~~~~~~~~~~~~
NO COPY: R/fvbn2b.R:139:33: style: Commas should always have a space after.
           Yha.bagr.akl.dkl[1:5,1,i,j,k]  <- rep(0,5)
                                ^
NO COPY: R/fvbn2b.R:139:35: style: Commas should always have a space after.
           Yha.bagr.akl.dkl[1:5,1,i,j,k]  <- rep(0,5)
                                  ^
NO COPY: R/fvbn2b.R:139:37: style: Commas should always have a space after.
           Yha.bagr.akl.dkl[1:5,1,i,j,k]  <- rep(0,5)
                                    ^
NO COPY: R/fvbn2b.R:139:39: style: Commas should always have a space after.
           Yha.bagr.akl.dkl[1:5,1,i,j,k]  <- rep(0,5)
                                      ^
NO COPY: R/fvbn2b.R:139:52: style: Commas should always have a space after.
           Yha.bagr.akl.dkl[1:5,1,i,j,k]  <- rep(0,5)
                                                   ^
NO COPY: R/fvbn2b.R:140:12: style: Words within variable and function names should be separated by '_' rather than '.'.
           Yha.bagr.akl.dkl[1:5,1,i,j,k]  <- rep(0,5)
           ^~~~~~~~~~~~~~~~
NO COPY: R/fvbn2b.R:140:33: style: Commas should always have a space after.
           Yha.bagr.akl.dkl[1:5,1,i,j,k]  <- rep(0,5)
                                ^
NO COPY: R/fvbn2b.R:140:35: style: Commas should always have a space after.
           Yha.bagr.akl.dkl[1:5,1,i,j,k]  <- rep(0,5)
                                  ^
NO COPY: R/fvbn2b.R:140:37: style: Commas should always have a space after.
           Yha.bagr.akl.dkl[1:5,1,i,j,k]  <- rep(0,5)
                                    ^
NO COPY: R/fvbn2b.R:140:39: style: Commas should always have a space after.
           Yha.bagr.akl.dkl[1:5,1,i,j,k]  <- rep(0,5)
                                      ^
NO COPY: R/fvbn2b.R:140:52: style: Commas should always have a space after.
           Yha.bagr.akl.dkl[1:5,1,i,j,k]  <- rep(0,5)
                                                   ^
NO COPY: R/fvbn2b.R:141:12: style: Variable and function names should be all lowercase.
           nT.bagr.akl.dkl[i,j,k]    <- 0  #n PSU (Trakte)
           ^~~~~~~~~~~~~~~
NO COPY: R/fvbn2b.R:141:12: style: Words within variable and function names should be separated by '_' rather than '.'.
           nT.bagr.akl.dkl[i,j,k]    <- 0  #n PSU (Trakte)
           ^~~~~~~~~~~~~~~
NO COPY: R/fvbn2b.R:141:30: style: Commas should always have a space after.
           nT.bagr.akl.dkl[i,j,k]    <- 0  #n PSU (Trakte)
                             ^
NO COPY: R/fvbn2b.R:141:32: style: Commas should always have a space after.
           nT.bagr.akl.dkl[i,j,k]    <- 0  #n PSU (Trakte)
                               ^
NO COPY: R/fvbn2b.R:143:9: style: Opening curly braces should never go on their own line and should always be followed by a new line.
        {
        ^
NO COPY: R/fvbn2b.R:146:49: style: Commas should always have a space after.
          xy <- stats::aggregate(baeume.ba$stfl,by=list(baeume.ba$tnr),sum)
                                                ^
NO COPY: R/fvbn2b.R:146:51: style: Put spaces around all infix operators.
          xy <- stats::aggregate(baeume.ba$stfl,by=list(baeume.ba$tnr),sum)
                                                 ~^~
NO COPY: R/fvbn2b.R:146:72: style: Commas should always have a space after.
          xy <- stats::aggregate(baeume.ba$stfl,by=list(baeume.ba$tnr),sum)
                                                                       ^
NO COPY: R/fvbn2b.R:147:32: style: Commas should always have a space after.
          names(xy) <- c("tnr","x")
                               ^
NO COPY: R/fvbn2b.R:148:23: style: Put spaces around all infix operators.
          xy$x <- xy$x/10000*lk  #Umrechnung in ha  und L\u00fcckenkorrektur
                     ~^~
NO COPY: R/fvbn2b.R:148:29: style: Put spaces around all infix operators.
          xy$x <- xy$x/10000*lk  #Umrechnung in ha  und L\u00fcckenkorrektur
                           ~^~
NO COPY: R/fvbn2b.R:150:26: style: Commas should always have a space after.
          xy <- cbind(xy,stats::aggregate(baeume.ba$volv*baeume.ba$nha,
                         ^
NO COPY: R/fvbn2b.R:150:57: style: Put spaces around all infix operators.
          xy <- cbind(xy,stats::aggregate(baeume.ba$volv*baeume.ba$nha,
                                                       ~^~
NO COPY: R/fvbn2b.R:151:47: style: Put spaces around all infix operators.
                                            by=list(baeume.ba$tnr),sum)$x )
                                             ~^~
NO COPY: R/fvbn2b.R:151:68: style: Commas should always have a space after.
                                            by=list(baeume.ba$tnr),sum)$x )
                                                                   ^
NO COPY: R/fvbn2b.R:155:1: style: lines should not be more than 80 characters.
            stats::aggregate(baeume.ba$volv*baeume.ba$nha*ifelse(baeume.ba$stfl>0,1,0),
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2b.R:155:44: style: Put spaces around all infix operators.
            stats::aggregate(baeume.ba$volv*baeume.ba$nha*ifelse(baeume.ba$stfl>0,1,0),
                                          ~^~
NO COPY: R/fvbn2b.R:155:58: style: Put spaces around all infix operators.
            stats::aggregate(baeume.ba$volv*baeume.ba$nha*ifelse(baeume.ba$stfl>0,1,0),
                                                        ~^~
NO COPY: R/fvbn2b.R:155:80: style: Put spaces around all infix operators.
            stats::aggregate(baeume.ba$volv*baeume.ba$nha*ifelse(baeume.ba$stfl>0,1,0),
                                                                              ~^~
NO COPY: R/fvbn2b.R:155:83: style: Commas should always have a space after.
            stats::aggregate(baeume.ba$volv*baeume.ba$nha*ifelse(baeume.ba$stfl>0,1,0),
                                                                                  ^
NO COPY: R/fvbn2b.R:155:85: style: Commas should always have a space after.
            stats::aggregate(baeume.ba$volv*baeume.ba$nha*ifelse(baeume.ba$stfl>0,1,0),
                                                                                    ^
NO COPY: R/fvbn2b.R:156:47: style: Put spaces around all infix operators.
                                            by=list(baeume.ba$tnr),sum)$x )
                                             ~^~
NO COPY: R/fvbn2b.R:156:68: style: Commas should always have a space after.
                                            by=list(baeume.ba$tnr),sum)$x )
                                                                   ^
NO COPY: R/fvbn2b.R:159:26: style: Commas should always have a space after.
          xy <- cbind(xy,stats::aggregate(baeume.ba$oib*baeume.ba$nha,
                         ^
NO COPY: R/fvbn2b.R:159:56: style: Put spaces around all infix operators.
          xy <- cbind(xy,stats::aggregate(baeume.ba$oib*baeume.ba$nha,
                                                      ~^~
NO COPY: R/fvbn2b.R:160:47: style: Put spaces around all infix operators.
                                            by=list(baeume.ba$tnr),sum)$x/1000)
                                             ~^~
NO COPY: R/fvbn2b.R:160:68: style: Commas should always have a space after.
                                            by=list(baeume.ba$tnr),sum)$x/1000)
                                                                   ^
NO COPY: R/fvbn2b.R:160:74: style: Put spaces around all infix operators.
                                            by=list(baeume.ba$tnr),sum)$x/1000)
                                                                        ~^~
NO COPY: R/fvbn2b.R:163:1: style: lines should not be more than 80 characters.
          xy <- cbind(xy,stats::aggregate(baeume.ba$nha,by=list(baeume.ba$tnr),sum)$x)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2b.R:163:26: style: Commas should always have a space after.
          xy <- cbind(xy,stats::aggregate(baeume.ba$nha,by=list(baeume.ba$tnr),sum)$x)
                         ^
NO COPY: R/fvbn2b.R:163:57: style: Commas should always have a space after.
          xy <- cbind(xy,stats::aggregate(baeume.ba$nha,by=list(baeume.ba$tnr),sum)$x)
                                                        ^
NO COPY: R/fvbn2b.R:163:59: style: Put spaces around all infix operators.
          xy <- cbind(xy,stats::aggregate(baeume.ba$nha,by=list(baeume.ba$tnr),sum)$x)
                                                         ~^~
NO COPY: R/fvbn2b.R:163:80: style: Commas should always have a space after.
          xy <- cbind(xy,stats::aggregate(baeume.ba$nha,by=list(baeume.ba$tnr),sum)$x)
                                                                               ^
NO COPY: R/fvbn2b.R:167:1: style: lines should not be more than 80 characters.
          x.ndh <- try(stats::aggregate(baeume.ba$nha*ifelse(baeume.ba$bhd>=7,1,0),
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2b.R:167:54: style: Put spaces around all infix operators.
          x.ndh <- try(stats::aggregate(baeume.ba$nha*ifelse(baeume.ba$bhd>=7,1,0),
                                                    ~^~
NO COPY: R/fvbn2b.R:167:75: style: Put spaces around all infix operators.
          x.ndh <- try(stats::aggregate(baeume.ba$nha*ifelse(baeume.ba$bhd>=7,1,0),
                                                                         ~^~~
NO COPY: R/fvbn2b.R:167:79: style: Commas should always have a space after.
          x.ndh <- try(stats::aggregate(baeume.ba$nha*ifelse(baeume.ba$bhd>=7,1,0),
                                                                              ^
NO COPY: R/fvbn2b.R:167:81: style: Commas should always have a space after.
          x.ndh <- try(stats::aggregate(baeume.ba$nha*ifelse(baeume.ba$bhd>=7,1,0),
                                                                                ^
NO COPY: R/fvbn2b.R:168:17: style: Put spaces around all infix operators.
              by=list(baeume.ba$tnr),sum)$x, silent=T )
               ~^~
NO COPY: R/fvbn2b.R:168:38: style: Commas should always have a space after.
              by=list(baeume.ba$tnr),sum)$x, silent=T )
                                     ^
NO COPY: R/fvbn2b.R:168:52: style: Put spaces around all infix operators.
              by=list(baeume.ba$tnr),sum)$x, silent=T )
                                                  ~^~
NO COPY: R/fvbn2b.R:169:32: style: Commas should always have a space after.
          if (length(grep("7)",dkl.lab[k]))>0)
                               ^
NO COPY: R/fvbn2b.R:169:44: style: Put spaces around all infix operators.
          if (length(grep("7)",dkl.lab[k]))>0)
                                          ~^~
NO COPY: R/fvbn2b.R:170:11: style: Opening curly braces should never go on their own line and should always be followed by a new line.
          {
          ^
NO COPY: R/fvbn2b.R:171:28: style: Commas should always have a space after.
            x.ndh <- rep(0,length(xy[,1]))
                           ^
NO COPY: R/fvbn2b.R:171:39: style: Commas should always have a space after.
            x.ndh <- rep(0,length(xy[,1]))
                                      ^
NO COPY: R/fvbn2b.R:173:26: style: Commas should always have a space after.
          xy <- cbind(xy,x.ndh)
                         ^
NO COPY: R/fvbn2b.R:179:11: style: Variable and function names should be all lowercase.
          nT.bagr.akl.dkl[i,j,k] <- length(xy[,1])
          ^~~~~~~~~~~~~~~
NO COPY: R/fvbn2b.R:179:11: style: Words within variable and function names should be separated by '_' rather than '.'.
          nT.bagr.akl.dkl[i,j,k] <- length(xy[,1])
          ^~~~~~~~~~~~~~~
NO COPY: R/fvbn2b.R:179:29: style: Commas should always have a space after.
          nT.bagr.akl.dkl[i,j,k] <- length(xy[,1])
                            ^
NO COPY: R/fvbn2b.R:179:31: style: Commas should always have a space after.
          nT.bagr.akl.dkl[i,j,k] <- length(xy[,1])
                              ^
NO COPY: R/fvbn2b.R:179:48: style: Commas should always have a space after.
          nT.bagr.akl.dkl[i,j,k] <- length(xy[,1])
                                               ^
NO COPY: R/fvbn2b.R:180:1: style: lines should not be more than 80 characters.
          #---  Erg\u00e4nzug 11.10. <m_bhb>    Hinweis: Offset f\u00fcr Indizierung ange-
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2b.R:182:78: style: Trailing whitespace is superfluous.
          #des Weiteren merge mit <xy.s> wegen <hbf> (begehbare HBF) f\u00fcr 
                                                                             ^
NO COPY: R/fvbn2b.R:184:56: style: Commas should always have a space after.
          xy <- merge(xy.s[TRUE, c("tnr", "m", "hbf")],xy,by=c("tnr"),all.x=T)
                                                       ^
NO COPY: R/fvbn2b.R:184:59: style: Commas should always have a space after.
          xy <- merge(xy.s[TRUE, c("tnr", "m", "hbf")],xy,by=c("tnr"),all.x=T)
                                                          ^
NO COPY: R/fvbn2b.R:184:61: style: Put spaces around all infix operators.
          xy <- merge(xy.s[TRUE, c("tnr", "m", "hbf")],xy,by=c("tnr"),all.x=T)
                                                           ~^~
NO COPY: R/fvbn2b.R:184:71: style: Commas should always have a space after.
          xy <- merge(xy.s[TRUE, c("tnr", "m", "hbf")],xy,by=c("tnr"),all.x=T)
                                                                      ^
NO COPY: R/fvbn2b.R:184:76: style: Put spaces around all infix operators.
          xy <- merge(xy.s[TRUE, c("tnr", "m", "hbf")],xy,by=c("tnr"),all.x=T)
                                                                          ~^~
NO COPY: R/fvbn2b.R:185:12: style: Commented code should be removed.
          #xy <- merge(trakte[TRUE, c("tnr", "m,m_bhb")],xy,by=c("tnr"),all.x=T)
           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2b.R:189:11: style: Opening curly braces should never go on their own line and should always be followed by a new line.
          {
          ^
NO COPY: R/fvbn2b.R:190:1: style: lines should not be more than 80 characters.
            #Zielgr\u00f6\u00dfen Y {BAF,V,VHb,B,N,NDh)   (Offset von (2+l) auf (3+l)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2b.R:191:1: style: lines should not be more than 80 characters.
            #wegen zus\u00e4tzlichem Attribut <m_bhb> ge\u00e4ndert (k\u00e4/11.10.14)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2b.R:192:49: style: Commas should always have a space after.
            R.list <- r.variance.fun(cbind(xy$m,xy[,(3+l)]),nT)
                                                ^
NO COPY: R/fvbn2b.R:192:53: style: Commas should always have a space after.
            R.list <- r.variance.fun(cbind(xy$m,xy[,(3+l)]),nT)
                                                    ^
NO COPY: R/fvbn2b.R:192:53: style: Place a space before left parenthesis, except in a function call.
            R.list <- r.variance.fun(cbind(xy$m,xy[,(3+l)]),nT)
                                                    ^
NO COPY: R/fvbn2b.R:192:55: style: Put spaces around all infix operators.
            R.list <- r.variance.fun(cbind(xy$m,xy[,(3+l)]),nT)
                                                     ~^~
NO COPY: R/fvbn2b.R:192:61: style: Commas should always have a space after.
            R.list <- r.variance.fun(cbind(xy$m,xy[,(3+l)]),nT)
                                                            ^
NO COPY: R/fvbn2b.R:194:13: style: Words within variable and function names should be separated by '_' rather than '.'.
            Y.bagr.akl.dkl[l,1,i,j,k] <- R.list$R.xy*A
            ^~~~~~~~~~~~~~
NO COPY: R/fvbn2b.R:194:30: style: Commas should always have a space after.
            Y.bagr.akl.dkl[l,1,i,j,k] <- R.list$R.xy*A
                             ^
NO COPY: R/fvbn2b.R:194:32: style: Commas should always have a space after.
            Y.bagr.akl.dkl[l,1,i,j,k] <- R.list$R.xy*A
                               ^
NO COPY: R/fvbn2b.R:194:34: style: Commas should always have a space after.
            Y.bagr.akl.dkl[l,1,i,j,k] <- R.list$R.xy*A
                                 ^
NO COPY: R/fvbn2b.R:194:36: style: Commas should always have a space after.
            Y.bagr.akl.dkl[l,1,i,j,k] <- R.list$R.xy*A
                                   ^
NO COPY: R/fvbn2b.R:194:53: style: Put spaces around all infix operators.
            Y.bagr.akl.dkl[l,1,i,j,k] <- R.list$R.xy*A
                                                   ~^~
NO COPY: R/fvbn2b.R:195:14: style: Commented code should be removed.
            #sum(xy[,(1+l)])/sum(x)*A *ifelse(l==1,lk,1)
             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2b.R:196:1: style: lines should not be more than 80 characters.
                                      #L\u00fcckenkorrektur bei BAF bereits erfolgt
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2b.R:198:13: style: Words within variable and function names should be separated by '_' rather than '.'.
            Y.bagr.akl.dkl[l,2,i,j,k] <- sqrt(R.list$V.R.xy)*A
            ^~~~~~~~~~~~~~
NO COPY: R/fvbn2b.R:198:30: style: Commas should always have a space after.
            Y.bagr.akl.dkl[l,2,i,j,k] <- sqrt(R.list$V.R.xy)*A
                             ^
NO COPY: R/fvbn2b.R:198:32: style: Commas should always have a space after.
            Y.bagr.akl.dkl[l,2,i,j,k] <- sqrt(R.list$V.R.xy)*A
                               ^
NO COPY: R/fvbn2b.R:198:34: style: Commas should always have a space after.
            Y.bagr.akl.dkl[l,2,i,j,k] <- sqrt(R.list$V.R.xy)*A
                                 ^
NO COPY: R/fvbn2b.R:198:36: style: Commas should always have a space after.
            Y.bagr.akl.dkl[l,2,i,j,k] <- sqrt(R.list$V.R.xy)*A
                                   ^
NO COPY: R/fvbn2b.R:198:54: style: Words within variable and function names should be separated by '_' rather than '.'.
            Y.bagr.akl.dkl[l,2,i,j,k] <- sqrt(R.list$V.R.xy)*A
                                                     ^~~~~~
NO COPY: R/fvbn2b.R:198:61: style: Put spaces around all infix operators.
            Y.bagr.akl.dkl[l,2,i,j,k] <- sqrt(R.list$V.R.xy)*A
                                                           ~^~
NO COPY: R/fvbn2b.R:202:1: style: lines should not be more than 80 characters.
            #if (l > 1)    #Hinweis: l+1 = Spalte der Zielgr\u00f6\u00dfe in xy; Spalte 2
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2b.R:203:1: style: lines should not be more than 80 characters.
                          #ist BA-Fl\u00e4che (HB) als Bezugsfl\u00e4che (= xy$x)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2b.R:205:13: style: Opening curly braces should never go on their own line and should always be followed by a new line.
            {
            ^
NO COPY: R/fvbn2b.R:206:53: style: Commas should always have a space after.
              R.list <- r.variance.fun(cbind(xy$hbf,xy[,(3+l)]),nT)
                                                    ^
NO COPY: R/fvbn2b.R:206:57: style: Commas should always have a space after.
              R.list <- r.variance.fun(cbind(xy$hbf,xy[,(3+l)]),nT)
                                                        ^
NO COPY: R/fvbn2b.R:206:57: style: Place a space before left parenthesis, except in a function call.
              R.list <- r.variance.fun(cbind(xy$hbf,xy[,(3+l)]),nT)
                                                        ^
NO COPY: R/fvbn2b.R:206:59: style: Put spaces around all infix operators.
              R.list <- r.variance.fun(cbind(xy$hbf,xy[,(3+l)]),nT)
                                                         ~^~
NO COPY: R/fvbn2b.R:206:65: style: Commas should always have a space after.
              R.list <- r.variance.fun(cbind(xy$hbf,xy[,(3+l)]),nT)
                                                                ^
NO COPY: R/fvbn2b.R:208:41: style: Put spaces around all infix operators.
              R.list$R.xy <- R.list$R.xy*100
                                       ~^~
NO COPY: R/fvbn2b.R:209:22: style: Words within variable and function names should be separated by '_' rather than '.'.
              R.list$V.R.xy <- R.list$V.R.xy*10000
                     ^~~~~~
NO COPY: R/fvbn2b.R:209:39: style: Words within variable and function names should be separated by '_' rather than '.'.
              R.list$V.R.xy <- R.list$V.R.xy*10000
                                      ^~~~~~
NO COPY: R/fvbn2b.R:209:45: style: Put spaces around all infix operators.
              R.list$V.R.xy <- R.list$V.R.xy*10000
                                           ~^~
NO COPY: R/fvbn2b.R:211:13: style: Opening curly braces should never go on their own line and should always be followed by a new line.
            {  
            ^
NO COPY: R/fvbn2b.R:211:14: style: Trailing whitespace is superfluous.
            {  
             ^~
NO COPY: R/fvbn2b.R:212:1: style: lines should not be more than 80 characters.
              #Bei Ha-Vorrat Hauptbestand (l==3) muss Fl\u00e4chenbezug die Fl\u00e4che 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2b.R:212:88: style: Trailing whitespace is superfluous.
              #Bei Ha-Vorrat Hauptbestand (l==3) muss Fl\u00e4chenbezug die Fl\u00e4che 
                                                                                       ^
NO COPY: R/fvbn2b.R:215:1: style: lines should not be more than 80 characters.
              lk.c <- ifelse(l==3,lk,1) #lk.c macht bei HB-Vorrat L\u00fcckenkorrektur
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2b.R:215:31: style: Put spaces around all infix operators.
              lk.c <- ifelse(l==3,lk,1) #lk.c macht bei HB-Vorrat L\u00fcckenkorrektur
                             ~^~~
NO COPY: R/fvbn2b.R:215:35: style: Commas should always have a space after.
              lk.c <- ifelse(l==3,lk,1) #lk.c macht bei HB-Vorrat L\u00fcckenkorrektur
                                  ^
NO COPY: R/fvbn2b.R:215:38: style: Commas should always have a space after.
              lk.c <- ifelse(l==3,lk,1) #lk.c macht bei HB-Vorrat L\u00fcckenkorrektur
                                     ^
NO COPY: R/fvbn2b.R:217:1: style: lines should not be more than 80 characters.
              #wegen zus\u00e4tzlichem Attribut <m_bhb> ge\u00e4ndert (k\u00e4/11.10.14)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2b.R:218:50: style: Put spaces around all infix operators.
              R.list <- r.variance.fun(cbind(xy$x/lk.c,xy[,(3+l)]),nT)
                                                ~^~
NO COPY: R/fvbn2b.R:218:56: style: Commas should always have a space after.
              R.list <- r.variance.fun(cbind(xy$x/lk.c,xy[,(3+l)]),nT)
                                                       ^
NO COPY: R/fvbn2b.R:218:60: style: Commas should always have a space after.
              R.list <- r.variance.fun(cbind(xy$x/lk.c,xy[,(3+l)]),nT)
                                                           ^
NO COPY: R/fvbn2b.R:218:60: style: Place a space before left parenthesis, except in a function call.
              R.list <- r.variance.fun(cbind(xy$x/lk.c,xy[,(3+l)]),nT)
                                                           ^
NO COPY: R/fvbn2b.R:218:62: style: Put spaces around all infix operators.
              R.list <- r.variance.fun(cbind(xy$x/lk.c,xy[,(3+l)]),nT)
                                                            ~^~
NO COPY: R/fvbn2b.R:218:68: style: Commas should always have a space after.
              R.list <- r.variance.fun(cbind(xy$x/lk.c,xy[,(3+l)]),nT)
                                                                   ^
NO COPY: R/fvbn2b.R:222:13: style: Words within variable and function names should be separated by '_' rather than '.'.
            Yha.bagr.akl.dkl[l.ha,1,i,j,k] <- R.list$R.xy
            ^~~~~~~~~~~~~~~~
NO COPY: R/fvbn2b.R:222:35: style: Commas should always have a space after.
            Yha.bagr.akl.dkl[l.ha,1,i,j,k] <- R.list$R.xy
                                  ^
NO COPY: R/fvbn2b.R:222:37: style: Commas should always have a space after.
            Yha.bagr.akl.dkl[l.ha,1,i,j,k] <- R.list$R.xy
                                    ^
NO COPY: R/fvbn2b.R:222:39: style: Commas should always have a space after.
            Yha.bagr.akl.dkl[l.ha,1,i,j,k] <- R.list$R.xy
                                      ^
NO COPY: R/fvbn2b.R:222:41: style: Commas should always have a space after.
            Yha.bagr.akl.dkl[l.ha,1,i,j,k] <- R.list$R.xy
                                        ^
NO COPY: R/fvbn2b.R:223:30: style: Commented code should be removed.
              #              Y.bagr.akl.dkl[l,1,i,j,k]/Y.bagr.akl.dkl[1,1,i,j,k]
                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2b.R:224:13: style: Words within variable and function names should be separated by '_' rather than '.'.
            Yha.bagr.akl.dkl[l.ha,2,i,j,k] <- sqrt(R.list$V.R.xy)
            ^~~~~~~~~~~~~~~~
NO COPY: R/fvbn2b.R:224:35: style: Commas should always have a space after.
            Yha.bagr.akl.dkl[l.ha,2,i,j,k] <- sqrt(R.list$V.R.xy)
                                  ^
NO COPY: R/fvbn2b.R:224:37: style: Commas should always have a space after.
            Yha.bagr.akl.dkl[l.ha,2,i,j,k] <- sqrt(R.list$V.R.xy)
                                    ^
NO COPY: R/fvbn2b.R:224:39: style: Commas should always have a space after.
            Yha.bagr.akl.dkl[l.ha,2,i,j,k] <- sqrt(R.list$V.R.xy)
                                      ^
NO COPY: R/fvbn2b.R:224:41: style: Commas should always have a space after.
            Yha.bagr.akl.dkl[l.ha,2,i,j,k] <- sqrt(R.list$V.R.xy)
                                        ^
NO COPY: R/fvbn2b.R:224:59: style: Words within variable and function names should be separated by '_' rather than '.'.
            Yha.bagr.akl.dkl[l.ha,2,i,j,k] <- sqrt(R.list$V.R.xy)
                                                          ^~~~~~
NO COPY: R/fvbn2b.R:225:1: style: Trailing whitespace is superfluous.
            
^~~~~~~~~~~~
NO COPY: R/fvbn2b.R:227:26: style: Trailing whitespace is superfluous.
        }#End if ... else 
                         ^
NO COPY: R/fvbn2b.R:234:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: R/fvbn2b.R:235:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: R/fvbn2b.R:239:4: style: Commented code should be removed.
  #AKL-Labels
   ^~~~~~~~~~
NO COPY: R/fvbn2b.R:240:34: style: Commas should always have a space after.
  akl.lab <- akl.lab.fun(A.klass,A.k) #k\u00e4/16.07.14
                                 ^
NO COPY: R/fvbn2b.R:243:34: style: Commas should always have a space after.
  dkl.lab <- dkl.lab.fun(D.klass,D.k) #k\u00e4/16.07.14
                                 ^
NO COPY: R/fvbn2b.R:246:20: style: Commas should always have a space after.
  a <- regexpr("/",baeume$bemerk[baeume$stp==0][1],fixed=T)
                   ^
NO COPY: R/fvbn2b.R:246:44: style: Put spaces around all infix operators.
  a <- regexpr("/",baeume$bemerk[baeume$stp==0][1],fixed=T)
                                          ~^~~
NO COPY: R/fvbn2b.R:246:52: style: Commas should always have a space after.
  a <- regexpr("/",baeume$bemerk[baeume$stp==0][1],fixed=T)
                                                   ^
NO COPY: R/fvbn2b.R:246:57: style: Put spaces around all infix operators.
  a <- regexpr("/",baeume$bemerk[baeume$stp==0][1],fixed=T)
                                                       ~^~
NO COPY: R/fvbn2b.R:247:51: style: Put spaces around all infix operators.
  b <- nchar(as.character(baeume$bemerk[baeume$stp==0][1]))
                                                 ~^~~
NO COPY: R/fvbn2b.R:248:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  version.baeume.b  <- substr(as.character(baeume$bemerk[baeume$stp==0][1]),a,b)
  ^~~~~~~~~~~~~~~~
NO COPY: R/fvbn2b.R:248:3: warning: local variable 'version.baeume.b' assigned but may not be used
  version.baeume.b  <- substr(as.character(baeume$bemerk[baeume$stp==0][1]),a,b)
  ^~~~~~~~~~~~~~~~
NO COPY: R/fvbn2b.R:248:68: style: Put spaces around all infix operators.
  version.baeume.b  <- substr(as.character(baeume$bemerk[baeume$stp==0][1]),a,b)
                                                                  ~^~~
NO COPY: R/fvbn2b.R:248:77: style: Commas should always have a space after.
  version.baeume.b  <- substr(as.character(baeume$bemerk[baeume$stp==0][1]),a,b)
                                                                            ^
NO COPY: R/fvbn2b.R:248:79: style: Commas should always have a space after.
  version.baeume.b  <- substr(as.character(baeume$bemerk[baeume$stp==0][1]),a,b)
                                                                              ^
NO COPY: R/fvbn2b.R:249:20: style: Put spaces around all infix operators.
  Log <- list(Datum=Sys.time(),
                  ~^~
NO COPY: R/fvbn2b.R:250:1: style: lines should not be more than 80 characters.
      Version.baeume.b=substr(as.character(baeume$bemerk[baeume$stp==0][1]),a,b))
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2b.R:250:23: style: Put spaces around all infix operators.
      Version.baeume.b=substr(as.character(baeume$bemerk[baeume$stp==0][1]),a,b))
                     ~^~
NO COPY: R/fvbn2b.R:250:68: style: Put spaces around all infix operators.
      Version.baeume.b=substr(as.character(baeume$bemerk[baeume$stp==0][1]),a,b))
                                                                  ~^~~
NO COPY: R/fvbn2b.R:250:77: style: Commas should always have a space after.
      Version.baeume.b=substr(as.character(baeume$bemerk[baeume$stp==0][1]),a,b))
                                                                            ^
NO COPY: R/fvbn2b.R:250:79: style: Commas should always have a space after.
      Version.baeume.b=substr(as.character(baeume$bemerk[baeume$stp==0][1]),a,b))
                                                                              ^
NO COPY: R/fvbn2b.R:252:18: style: Put spaces around all infix operators.
  return(list(Log=Log, Stratum=auswahl, nTE=n.te.s, HBF=T.hbf, se.HBF=se.T.hbf,
                ~^~
NO COPY: R/fvbn2b.R:252:31: style: Put spaces around all infix operators.
  return(list(Log=Log, Stratum=auswahl, nTE=n.te.s, HBF=T.hbf, se.HBF=se.T.hbf,
                             ~^~
NO COPY: R/fvbn2b.R:252:44: style: Put spaces around all infix operators.
  return(list(Log=Log, Stratum=auswahl, nTE=n.te.s, HBF=T.hbf, se.HBF=se.T.hbf,
                                          ~^~
NO COPY: R/fvbn2b.R:252:45: style: Words within variable and function names should be separated by '_' rather than '.'.
  return(list(Log=Log, Stratum=auswahl, nTE=n.te.s, HBF=T.hbf, se.HBF=se.T.hbf,
                                            ^~~~~~
NO COPY: R/fvbn2b.R:252:56: style: Put spaces around all infix operators.
  return(list(Log=Log, Stratum=auswahl, nTE=n.te.s, HBF=T.hbf, se.HBF=se.T.hbf,
                                                      ~^~
NO COPY: R/fvbn2b.R:252:70: style: Put spaces around all infix operators.
  return(list(Log=Log, Stratum=auswahl, nTE=n.te.s, HBF=T.hbf, se.HBF=se.T.hbf,
                                                                    ~^~
NO COPY: R/fvbn2b.R:252:71: style: Words within variable and function names should be separated by '_' rather than '.'.
  return(list(Log=Log, Stratum=auswahl, nTE=n.te.s, HBF=T.hbf, se.HBF=se.T.hbf,
                                                                      ^~~~~~~~
NO COPY: R/fvbn2b.R:253:17: style: Put spaces around all infix operators.
              BL=T.bl,se.BL=se.T.bl,iBL=T.ibl,se.iBL=se.T.ibl,LK=lk,se.LK=se.lk,
               ~^~
NO COPY: R/fvbn2b.R:253:23: style: Commas should always have a space after.
              BL=T.bl,se.BL=se.T.bl,iBL=T.ibl,se.iBL=se.T.ibl,LK=lk,se.LK=se.lk,
                      ^
NO COPY: R/fvbn2b.R:253:28: style: Put spaces around all infix operators.
              BL=T.bl,se.BL=se.T.bl,iBL=T.ibl,se.iBL=se.T.ibl,LK=lk,se.LK=se.lk,
                          ~^~
NO COPY: R/fvbn2b.R:253:29: style: Words within variable and function names should be separated by '_' rather than '.'.
              BL=T.bl,se.BL=se.T.bl,iBL=T.ibl,se.iBL=se.T.ibl,LK=lk,se.LK=se.lk,
                            ^~~~~~~
NO COPY: R/fvbn2b.R:253:37: style: Commas should always have a space after.
              BL=T.bl,se.BL=se.T.bl,iBL=T.ibl,se.iBL=se.T.ibl,LK=lk,se.LK=se.lk,
                                    ^
NO COPY: R/fvbn2b.R:253:40: style: Put spaces around all infix operators.
              BL=T.bl,se.BL=se.T.bl,iBL=T.ibl,se.iBL=se.T.ibl,LK=lk,se.LK=se.lk,
                                      ~^~
NO COPY: R/fvbn2b.R:253:47: style: Commas should always have a space after.
              BL=T.bl,se.BL=se.T.bl,iBL=T.ibl,se.iBL=se.T.ibl,LK=lk,se.LK=se.lk,
                                              ^
NO COPY: R/fvbn2b.R:253:53: style: Put spaces around all infix operators.
              BL=T.bl,se.BL=se.T.bl,iBL=T.ibl,se.iBL=se.T.ibl,LK=lk,se.LK=se.lk,
                                                   ~^~
NO COPY: R/fvbn2b.R:253:54: style: Words within variable and function names should be separated by '_' rather than '.'.
              BL=T.bl,se.BL=se.T.bl,iBL=T.ibl,se.iBL=se.T.ibl,LK=lk,se.LK=se.lk,
                                                     ^~~~~~~~
NO COPY: R/fvbn2b.R:253:63: style: Commas should always have a space after.
              BL=T.bl,se.BL=se.T.bl,iBL=T.ibl,se.iBL=se.T.ibl,LK=lk,se.LK=se.lk,
                                                              ^
NO COPY: R/fvbn2b.R:253:65: style: Put spaces around all infix operators.
              BL=T.bl,se.BL=se.T.bl,iBL=T.ibl,se.iBL=se.T.ibl,LK=lk,se.LK=se.lk,
                                                               ~^~
NO COPY: R/fvbn2b.R:253:69: style: Commas should always have a space after.
              BL=T.bl,se.BL=se.T.bl,iBL=T.ibl,se.iBL=se.T.ibl,LK=lk,se.LK=se.lk,
                                                                    ^
NO COPY: R/fvbn2b.R:253:74: style: Put spaces around all infix operators.
              BL=T.bl,se.BL=se.T.bl,iBL=T.ibl,se.iBL=se.T.ibl,LK=lk,se.LK=se.lk,
                                                                        ~^~
NO COPY: R/fvbn2b.R:254:25: style: Put spaces around all infix operators.
              Attribute1=c("BAF", "V_DhmR","V_DhmR_HB", "oiB", "N", "N_Dh"),
                       ~^~
NO COPY: R/fvbn2b.R:254:44: style: Commas should always have a space after.
              Attribute1=c("BAF", "V_DhmR","V_DhmR_HB", "oiB", "N", "N_Dh"),
                                           ^
NO COPY: R/fvbn2b.R:256:25: style: Put spaces around all infix operators.
              Attribute2=c("BA_Proz","V_DhmR/ha","V_DhmR_HB/ha","oiB/ha","N/ha",
                       ~^~
NO COPY: R/fvbn2b.R:256:38: style: Commas should always have a space after.
              Attribute2=c("BA_Proz","V_DhmR/ha","V_DhmR_HB/ha","oiB/ha","N/ha",
                                     ^
NO COPY: R/fvbn2b.R:256:50: style: Commas should always have a space after.
              Attribute2=c("BA_Proz","V_DhmR/ha","V_DhmR_HB/ha","oiB/ha","N/ha",
                                                 ^
NO COPY: R/fvbn2b.R:256:65: style: Commas should always have a space after.
              Attribute2=c("BA_Proz","V_DhmR/ha","V_DhmR_HB/ha","oiB/ha","N/ha",
                                                                ^
NO COPY: R/fvbn2b.R:256:74: style: Commas should always have a space after.
              Attribute2=c("BA_Proz","V_DhmR/ha","V_DhmR_HB/ha","oiB/ha","N/ha",
                                                                         ^
NO COPY: R/fvbn2b.R:258:45: style: Commas should always have a space after.
              "Gr\u00f6\u00dfen" = c("Wert","Standardfehler"),
                                            ^
NO COPY: R/fvbn2b.R:259:19: style: Put spaces around all infix operators.
              BAGR=bagr.list,AKL = akl.lab[1:A.k], DKL = dkl.lab,
                 ~^~
NO COPY: R/fvbn2b.R:259:30: style: Commas should always have a space after.
              BAGR=bagr.list,AKL = akl.lab[1:A.k], DKL = dkl.lab,
                             ^
NO COPY: R/fvbn2b.R:260:34: style: Put spaces around all infix operators.
              T.FVBN.Bagr.Akl.Dkl=Y.bagr.akl.dkl,
                                ~^~
NO COPY: R/fvbn2b.R:260:35: style: Words within variable and function names should be separated by '_' rather than '.'.
              T.FVBN.Bagr.Akl.Dkl=Y.bagr.akl.dkl,
                                  ^~~~~~~~~~~~~~
NO COPY: R/fvbn2b.R:261:35: style: Put spaces around all infix operators.
              FVBN.ha.Bagr.Akl.Dkl=Yha.bagr.akl.dkl,
                                 ~^~
NO COPY: R/fvbn2b.R:261:36: style: Words within variable and function names should be separated by '_' rather than '.'.
              FVBN.ha.Bagr.Akl.Dkl=Yha.bagr.akl.dkl,
                                   ^~~~~~~~~~~~~~~~
NO COPY: R/fvbn2b.R:262:30: style: Put spaces around all infix operators.
              nT.Bagr.Akl.Dkl=nT.bagr.akl.dkl))
                            ~^~
NO COPY: R/fvbn2b.R:262:31: style: Variable and function names should be all lowercase.
              nT.Bagr.Akl.Dkl=nT.bagr.akl.dkl))
                              ^~~~~~~~~~~~~~~
NO COPY: R/fvbn2b.R:262:31: style: Words within variable and function names should be separated by '_' rather than '.'.
              nT.Bagr.Akl.Dkl=nT.bagr.akl.dkl))
                              ^~~~~~~~~~~~~~~
NO COPY: R/fvbn2b.R:264:1: style: Trailing blank lines are superfluous.

^
NO COPY: R/fvbn2c.R:4:27: style: Commas should always have a space after.
          function(baeume,ecken,trakte,A,inv,BA.grupp,A.klass,D.klass,auswahl){
                          ^
NO COPY: R/fvbn2c.R:4:33: style: Commas should always have a space after.
          function(baeume,ecken,trakte,A,inv,BA.grupp,A.klass,D.klass,auswahl){
                                ^
NO COPY: R/fvbn2c.R:4:40: style: Commas should always have a space after.
          function(baeume,ecken,trakte,A,inv,BA.grupp,A.klass,D.klass,auswahl){
                                       ^
NO COPY: R/fvbn2c.R:4:42: style: Commas should always have a space after.
          function(baeume,ecken,trakte,A,inv,BA.grupp,A.klass,D.klass,auswahl){
                                         ^
NO COPY: R/fvbn2c.R:4:46: style: Commas should always have a space after.
          function(baeume,ecken,trakte,A,inv,BA.grupp,A.klass,D.klass,auswahl){
                                             ^
NO COPY: R/fvbn2c.R:4:55: style: Commas should always have a space after.
          function(baeume,ecken,trakte,A,inv,BA.grupp,A.klass,D.klass,auswahl){
                                                      ^
NO COPY: R/fvbn2c.R:4:63: style: Commas should always have a space after.
          function(baeume,ecken,trakte,A,inv,BA.grupp,A.klass,D.klass,auswahl){
                                                              ^
NO COPY: R/fvbn2c.R:4:71: style: Commas should always have a space after.
          function(baeume,ecken,trakte,A,inv,BA.grupp,A.klass,D.klass,auswahl){
                                                                      ^
NO COPY: R/fvbn2c.R:5:34: style: Commas should always have a space after.
  stratum <- stratum.fun(auswahl,ecken)
                                 ^
NO COPY: R/fvbn2c.R:12:28: style: Commas should always have a space after.
  names(baeume) <- sub(inv,names(baeume),replacement="")
                           ^
NO COPY: R/fvbn2c.R:12:42: style: Commas should always have a space after.
  names(baeume) <- sub(inv,names(baeume),replacement="")
                                         ^
NO COPY: R/fvbn2c.R:12:53: style: Put spaces around all infix operators.
  names(baeume) <- sub(inv,names(baeume),replacement="")
                                                   ~^~
NO COPY: R/fvbn2c.R:14:1: style: lines should not be more than 80 characters.
  baeume.s <- merge(baeume[TRUE, c("tnr", "enr", "ba", "alt", "bhd", "volv", "oib", "nha", "stfl")],
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2c.R:15:52: style: Commas should always have a space after.
                    stratum[TRUE, c("tnr", "enr")],by=c("tnr","enr"),all.y=T)
                                                   ^
NO COPY: R/fvbn2c.R:15:54: style: Put spaces around all infix operators.
                    stratum[TRUE, c("tnr", "enr")],by=c("tnr","enr"),all.y=T)
                                                    ~^~
NO COPY: R/fvbn2c.R:15:63: style: Commas should always have a space after.
                    stratum[TRUE, c("tnr", "enr")],by=c("tnr","enr"),all.y=T)
                                                              ^
NO COPY: R/fvbn2c.R:15:70: style: Commas should always have a space after.
                    stratum[TRUE, c("tnr", "enr")],by=c("tnr","enr"),all.y=T)
                                                                     ^
NO COPY: R/fvbn2c.R:15:75: style: Put spaces around all infix operators.
                    stratum[TRUE, c("tnr", "enr")],by=c("tnr","enr"),all.y=T)
                                                                         ~^~
NO COPY: R/fvbn2c.R:22:30: style: Commas should always have a space after.
  baeume.s <- merge(baeume.s,bagr.tab[TRUE, c("ICode", "bagr")],
                             ^
NO COPY: R/fvbn2c.R:23:39: style: Put spaces around all infix operators.
                                  by.x="ba",by.y="ICode",all.x=T)
                                     ~^~
NO COPY: R/fvbn2c.R:23:45: style: Commas should always have a space after.
                                  by.x="ba",by.y="ICode",all.x=T)
                                            ^
NO COPY: R/fvbn2c.R:23:49: style: Put spaces around all infix operators.
                                  by.x="ba",by.y="ICode",all.x=T)
                                               ~^~
NO COPY: R/fvbn2c.R:23:58: style: Commas should always have a space after.
                                  by.x="ba",by.y="ICode",all.x=T)
                                                         ^
NO COPY: R/fvbn2c.R:23:63: style: Put spaces around all infix operators.
                                  by.x="ba",by.y="ICode",all.x=T)
                                                             ~^~
NO COPY: R/fvbn2c.R:30:24: style: Commas should always have a space after.
  nT <- length(trakte[,1])
                       ^
NO COPY: R/fvbn2c.R:32:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  n.te.s <- length(stratum[,1])
  ^~~~~~
NO COPY: R/fvbn2c.R:32:29: style: Commas should always have a space after.
  n.te.s <- length(stratum[,1])
                            ^
NO COPY: R/fvbn2c.R:37:32: style: Commas should always have a space after.
  xy <- stats::aggregate(rep(1,length(stratum[,1])),by=list(stratum$tnr),sum)
                               ^
NO COPY: R/fvbn2c.R:37:48: style: Commas should always have a space after.
  xy <- stats::aggregate(rep(1,length(stratum[,1])),by=list(stratum$tnr),sum)
                                               ^
NO COPY: R/fvbn2c.R:37:53: style: Commas should always have a space after.
  xy <- stats::aggregate(rep(1,length(stratum[,1])),by=list(stratum$tnr),sum)
                                                    ^
NO COPY: R/fvbn2c.R:37:55: style: Put spaces around all infix operators.
  xy <- stats::aggregate(rep(1,length(stratum[,1])),by=list(stratum$tnr),sum)
                                                     ~^~
NO COPY: R/fvbn2c.R:37:74: style: Commas should always have a space after.
  xy <- stats::aggregate(rep(1,length(stratum[,1])),by=list(stratum$tnr),sum)
                                                                         ^
NO COPY: R/fvbn2c.R:39:1: style: lines should not be more than 80 characters.
  xy <- cbind(xy,stats::aggregate(ifelse(baeume.s$ba==999,baeume.s$stfl/10000,0),
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2c.R:39:18: style: Commas should always have a space after.
  xy <- cbind(xy,stats::aggregate(ifelse(baeume.s$ba==999,baeume.s$stfl/10000,0),
                 ^
NO COPY: R/fvbn2c.R:39:53: style: Put spaces around all infix operators.
  xy <- cbind(xy,stats::aggregate(ifelse(baeume.s$ba==999,baeume.s$stfl/10000,0),
                                                   ~^~~
NO COPY: R/fvbn2c.R:39:59: style: Commas should always have a space after.
  xy <- cbind(xy,stats::aggregate(ifelse(baeume.s$ba==999,baeume.s$stfl/10000,0),
                                                          ^
NO COPY: R/fvbn2c.R:39:72: style: Put spaces around all infix operators.
  xy <- cbind(xy,stats::aggregate(ifelse(baeume.s$ba==999,baeume.s$stfl/10000,0),
                                                                      ~^~
NO COPY: R/fvbn2c.R:39:79: style: Commas should always have a space after.
  xy <- cbind(xy,stats::aggregate(ifelse(baeume.s$ba==999,baeume.s$stfl/10000,0),
                                                                              ^
NO COPY: R/fvbn2c.R:40:21: style: Put spaces around all infix operators.
                  by=list(baeume.s$tnr),sum)$x)
                   ~^~
NO COPY: R/fvbn2c.R:40:41: style: Commas should always have a space after.
                  by=list(baeume.s$tnr),sum)$x)
                                        ^
NO COPY: R/fvbn2c.R:41:18: style: Commas should always have a space after.
  xy <- cbind(xy,stats::aggregate(ifelse(baeume.s$ba==998,baeume.s$stfl,0),
                 ^
NO COPY: R/fvbn2c.R:41:53: style: Put spaces around all infix operators.
  xy <- cbind(xy,stats::aggregate(ifelse(baeume.s$ba==998,baeume.s$stfl,0),
                                                   ~^~~
NO COPY: R/fvbn2c.R:41:59: style: Commas should always have a space after.
  xy <- cbind(xy,stats::aggregate(ifelse(baeume.s$ba==998,baeume.s$stfl,0),
                                                          ^
NO COPY: R/fvbn2c.R:41:73: style: Commas should always have a space after.
  xy <- cbind(xy,stats::aggregate(ifelse(baeume.s$ba==998,baeume.s$stfl,0),
                                                                        ^
NO COPY: R/fvbn2c.R:42:21: style: Put spaces around all infix operators.
                  by=list(baeume.s$tnr),sum)$x/10000)
                   ~^~
NO COPY: R/fvbn2c.R:42:41: style: Commas should always have a space after.
                  by=list(baeume.s$tnr),sum)$x/10000)
                                        ^
NO COPY: R/fvbn2c.R:42:47: style: Put spaces around all infix operators.
                  by=list(baeume.s$tnr),sum)$x/10000)
                                             ~^~
NO COPY: R/fvbn2c.R:43:24: style: Commas should always have a space after.
  names(xy) <- c("tnr","hbf","bl","ibl")
                       ^
NO COPY: R/fvbn2c.R:43:30: style: Commas should always have a space after.
  names(xy) <- c("tnr","hbf","bl","ibl")
                             ^
NO COPY: R/fvbn2c.R:43:35: style: Commas should always have a space after.
  names(xy) <- c("tnr","hbf","bl","ibl")
                                  ^
NO COPY: R/fvbn2c.R:44:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  n.t.s <- length(xy[,1])
  ^~~~~
NO COPY: R/fvbn2c.R:44:3: warning: local variable 'n.t.s' assigned but may not be used
  n.t.s <- length(xy[,1])
  ^~~~~
NO COPY: R/fvbn2c.R:44:23: style: Commas should always have a space after.
  n.t.s <- length(xy[,1])
                      ^
NO COPY: R/fvbn2c.R:45:43: style: Commas should always have a space after.
  xy <- merge(trakte[TRUE, c("tnr", "m")],xy,by=c("tnr"),all.x=T)
                                          ^
NO COPY: R/fvbn2c.R:45:46: style: Commas should always have a space after.
  xy <- merge(trakte[TRUE, c("tnr", "m")],xy,by=c("tnr"),all.x=T)
                                             ^
NO COPY: R/fvbn2c.R:45:48: style: Put spaces around all infix operators.
  xy <- merge(trakte[TRUE, c("tnr", "m")],xy,by=c("tnr"),all.x=T)
                                              ~^~
NO COPY: R/fvbn2c.R:45:58: style: Commas should always have a space after.
  xy <- merge(trakte[TRUE, c("tnr", "m")],xy,by=c("tnr"),all.x=T)
                                                         ^
NO COPY: R/fvbn2c.R:45:63: style: Put spaces around all infix operators.
  xy <- merge(trakte[TRUE, c("tnr", "m")],xy,by=c("tnr"),all.x=T)
                                                             ~^~
NO COPY: R/fvbn2c.R:48:22: style: Put spaces around all infix operators.
  xy$hbf.ba <- xy$hbf-xy$bl-xy$ibl
                    ~^~
NO COPY: R/fvbn2c.R:48:28: style: Put spaces around all infix operators.
  xy$hbf.ba <- xy$hbf-xy$bl-xy$ibl
                          ~^~
NO COPY: R/fvbn2c.R:49:1: style: lines should not be more than 80 characters.
  #k\u00e4/11.10.2014  wegen BA-Anteilen muss hbf je Trakt im Stratum erhalten bleiben
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2c.R:52:4: style: Commented code should be removed.
  #HBFl. [ha]
   ^~~~~~~~~~
NO COPY: R/fvbn2c.R:53:9: style: Use <-, not =, for assignment.
  r.list= r.variance.fun(xy[TRUE, c("m", "hbf")],nT)
        ^
NO COPY: R/fvbn2c.R:53:9: style: Put spaces around all infix operators.
  r.list= r.variance.fun(xy[TRUE, c("m", "hbf")],nT)
       ~^
NO COPY: R/fvbn2c.R:53:50: style: Commas should always have a space after.
  r.list= r.variance.fun(xy[TRUE, c("m", "hbf")],nT)
                                                 ^
NO COPY: R/fvbn2c.R:54:23: style: Put spaces around all infix operators.
  T.hbf <- r.list$R.xy*A
                     ~^~
NO COPY: R/fvbn2c.R:55:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  se.T.hbf <- sqrt(r.list$V.R.xy)*A
  ^~~~~~~~
NO COPY: R/fvbn2c.R:55:27: style: Words within variable and function names should be separated by '_' rather than '.'.
  se.T.hbf <- sqrt(r.list$V.R.xy)*A
                          ^~~~~~
NO COPY: R/fvbn2c.R:55:34: style: Put spaces around all infix operators.
  se.T.hbf <- sqrt(r.list$V.R.xy)*A
                                ~^~
NO COPY: R/fvbn2c.R:57:51: style: Commas should always have a space after.
  r.list <- r.variance.fun(xy[TRUE, c("m", "bl")],nT)
                                                  ^
NO COPY: R/fvbn2c.R:58:22: style: Put spaces around all infix operators.
  T.bl <- r.list$R.xy*A
                    ~^~
NO COPY: R/fvbn2c.R:59:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  se.T.bl <- sqrt(r.list$V.R.xy)*A
  ^~~~~~~
NO COPY: R/fvbn2c.R:59:26: style: Words within variable and function names should be separated by '_' rather than '.'.
  se.T.bl <- sqrt(r.list$V.R.xy)*A
                         ^~~~~~
NO COPY: R/fvbn2c.R:59:33: style: Put spaces around all infix operators.
  se.T.bl <- sqrt(r.list$V.R.xy)*A
                               ~^~
NO COPY: R/fvbn2c.R:61:52: style: Commas should always have a space after.
  r.list <- r.variance.fun(xy[TRUE, c("m", "ibl")],nT)
                                                   ^
NO COPY: R/fvbn2c.R:62:23: style: Put spaces around all infix operators.
  T.ibl <- r.list$R.xy*A
                     ~^~
NO COPY: R/fvbn2c.R:63:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  se.T.ibl <- sqrt(r.list$V.R.xy)*A
  ^~~~~~~~
NO COPY: R/fvbn2c.R:63:27: style: Words within variable and function names should be separated by '_' rather than '.'.
  se.T.ibl <- sqrt(r.list$V.R.xy)*A
                          ^~~~~~
NO COPY: R/fvbn2c.R:63:34: style: Put spaces around all infix operators.
  se.T.ibl <- sqrt(r.list$V.R.xy)*A
                                ~^~
NO COPY: R/fvbn2c.R:65:57: style: Commas should always have a space after.
  r.list <- r.variance.fun(xy[TRUE, c("hbf.ba", "hbf")],nT)
                                                        ^
NO COPY: R/fvbn2c.R:67:24: style: Words within variable and function names should be separated by '_' rather than '.'.
  se.lk <- sqrt(r.list$V.R.xy)
                       ^~~~~~
NO COPY: R/fvbn2c.R:73:29: style: Put spaces around all infix operators.
                      breaks=c(seq(0,A.klass[[1]],A.klass[[2]]),A.max),right=T))
                           ~^~
NO COPY: R/fvbn2c.R:73:38: style: Commas should always have a space after.
                      breaks=c(seq(0,A.klass[[1]],A.klass[[2]]),A.max),right=T))
                                     ^
NO COPY: R/fvbn2c.R:73:51: style: Commas should always have a space after.
                      breaks=c(seq(0,A.klass[[1]],A.klass[[2]]),A.max),right=T))
                                                  ^
NO COPY: R/fvbn2c.R:73:65: style: Commas should always have a space after.
                      breaks=c(seq(0,A.klass[[1]],A.klass[[2]]),A.max),right=T))
                                                                ^
NO COPY: R/fvbn2c.R:73:72: style: Commas should always have a space after.
                      breaks=c(seq(0,A.klass[[1]],A.klass[[2]]),A.max),right=T))
                                                                       ^
NO COPY: R/fvbn2c.R:73:77: style: Put spaces around all infix operators.
                      breaks=c(seq(0,A.klass[[1]],A.klass[[2]]),A.max),right=T))
                                                                           ~^~
NO COPY: R/fvbn2c.R:79:5: style: Place a space before left parenthesis, except in a function call.
  if(A.klass[[1]]>A.klass[[2]])
    ^
NO COPY: R/fvbn2c.R:79:18: style: Put spaces around all infix operators.
  if(A.klass[[1]]>A.klass[[2]])
                ~^~
NO COPY: R/fvbn2c.R:80:3: style: Opening curly braces should never go on their own line and should always be followed by a new line.
  {
  ^
NO COPY: R/fvbn2c.R:81:5: style: Words within variable and function names should be separated by '_' rather than '.'.
    max.A.k <- A.klass[[1]]/A.klass[[2]] + 1
    ^~~~~~~
NO COPY: R/fvbn2c.R:81:28: style: Put spaces around all infix operators.
    max.A.k <- A.klass[[1]]/A.klass[[2]] + 1
                          ~^~
NO COPY: R/fvbn2c.R:82:15: style: Words within variable and function names should be separated by '_' rather than '.'.
    if (A.k < max.A.k) {A.k <- max.A.k }
              ^~~~~~~
NO COPY: R/fvbn2c.R:82:24: style: Opening curly braces should never go on their own line and should always be followed by a new line.
    if (A.k < max.A.k) {A.k <- max.A.k }
                       ^
NO COPY: R/fvbn2c.R:82:32: style: Words within variable and function names should be separated by '_' rather than '.'.
    if (A.k < max.A.k) {A.k <- max.A.k }
                               ^~~~~~~
NO COPY: R/fvbn2c.R:82:40: style: Closing curly-braces should always be on their own line, unless it's followed by an else.
    if (A.k < max.A.k) {A.k <- max.A.k }
                                       ^
NO COPY: R/fvbn2c.R:89:3: style: Opening curly braces should never go on their own line and should always be followed by a new line.
  {
  ^
NO COPY: R/fvbn2c.R:90:1: style: lines should not be more than 80 characters.
    brks <- c(0,7,seq(D.klass[[1]]+D.klass[[3]],D.klass[[2]],D.klass[[3]]),D.max)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2c.R:90:17: style: Commas should always have a space after.
    brks <- c(0,7,seq(D.klass[[1]]+D.klass[[3]],D.klass[[2]],D.klass[[3]]),D.max)
                ^
NO COPY: R/fvbn2c.R:90:19: style: Commas should always have a space after.
    brks <- c(0,7,seq(D.klass[[1]]+D.klass[[3]],D.klass[[2]],D.klass[[3]]),D.max)
                  ^
NO COPY: R/fvbn2c.R:90:35: style: Put spaces around all infix operators.
    brks <- c(0,7,seq(D.klass[[1]]+D.klass[[3]],D.klass[[2]],D.klass[[3]]),D.max)
                                 ~^~
NO COPY: R/fvbn2c.R:90:49: style: Commas should always have a space after.
    brks <- c(0,7,seq(D.klass[[1]]+D.klass[[3]],D.klass[[2]],D.klass[[3]]),D.max)
                                                ^
NO COPY: R/fvbn2c.R:90:62: style: Commas should always have a space after.
    brks <- c(0,7,seq(D.klass[[1]]+D.klass[[3]],D.klass[[2]],D.klass[[3]]),D.max)
                                                             ^
NO COPY: R/fvbn2c.R:90:76: style: Commas should always have a space after.
    brks <- c(0,7,seq(D.klass[[1]]+D.klass[[3]],D.klass[[2]],D.klass[[3]]),D.max)
                                                                           ^
NO COPY: R/fvbn2c.R:92:3: style: Opening curly braces should never go on their own line and should always be followed by a new line.
  {
  ^
NO COPY: R/fvbn2c.R:93:32: style: Commas should always have a space after.
    brks <- c(seq(D.klass[[1]],D.klass[[2]],D.klass[[3]]),D.max)
                               ^
NO COPY: R/fvbn2c.R:93:45: style: Commas should always have a space after.
    brks <- c(seq(D.klass[[1]],D.klass[[2]],D.klass[[3]]),D.max)
                                            ^
NO COPY: R/fvbn2c.R:93:59: style: Commas should always have a space after.
    brks <- c(seq(D.klass[[1]],D.klass[[2]],D.klass[[3]]),D.max)
                                                          ^
NO COPY: R/fvbn2c.R:95:43: style: Put spaces around all infix operators.
  baeume.s$dkl <- cut(baeume.s$bhd, breaks=brks, right=F)
                                         ~^~
NO COPY: R/fvbn2c.R:95:55: style: Put spaces around all infix operators.
  baeume.s$dkl <- cut(baeume.s$bhd, breaks=brks, right=F)
                                                     ~^~
NO COPY: R/fvbn2c.R:101:5: style: Place a space before left parenthesis, except in a function call.
  if(D.klass[[2]]>D.klass[[3]])
    ^
NO COPY: R/fvbn2c.R:101:18: style: Put spaces around all infix operators.
  if(D.klass[[2]]>D.klass[[3]])
                ~^~
NO COPY: R/fvbn2c.R:102:3: style: Opening curly braces should never go on their own line and should always be followed by a new line.
  {
  ^
NO COPY: R/fvbn2c.R:103:5: style: Words within variable and function names should be separated by '_' rather than '.'.
    max.D.k <- (D.klass[[2]]-D.klass[[1]])/D.klass[[2]] + 2
    ^~~~~~~
NO COPY: R/fvbn2c.R:103:29: style: Put spaces around all infix operators.
    max.D.k <- (D.klass[[2]]-D.klass[[1]])/D.klass[[2]] + 2
                           ~^~
NO COPY: R/fvbn2c.R:103:43: style: Put spaces around all infix operators.
    max.D.k <- (D.klass[[2]]-D.klass[[1]])/D.klass[[2]] + 2
                                         ~^~
NO COPY: R/fvbn2c.R:104:15: style: Words within variable and function names should be separated by '_' rather than '.'.
    if (D.k < max.D.k) {D.k <- max.D.k }
              ^~~~~~~
NO COPY: R/fvbn2c.R:104:24: style: Opening curly braces should never go on their own line and should always be followed by a new line.
    if (D.k < max.D.k) {D.k <- max.D.k }
                       ^
NO COPY: R/fvbn2c.R:104:32: style: Words within variable and function names should be separated by '_' rather than '.'.
    if (D.k < max.D.k) {D.k <- max.D.k }
                               ^~~~~~~
NO COPY: R/fvbn2c.R:104:40: style: Closing curly-braces should always be on their own line, unless it's followed by an else.
    if (D.k < max.D.k) {D.k <- max.D.k }
                                       ^
NO COPY: R/fvbn2c.R:110:1: style: lines should not be more than 80 characters.
  #Es gibt 7 Zielgr\u00f6\u00dfen <Y>: BAF [ha], V [m^3Dh mR], VHb (nur Hauptbestand)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2c.R:114:1: style: lines should not be more than 80 characters.
  #F\u00fcr diese 7 "Gr\u00f6\u00dfen" werden jeweils der Gesamtwert ("Total") und der
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2c.R:115:1: style: lines should not be more than 80 characters.
  #Stichprobenfehler (SE) berechnet, und zwar jeweils f\u00fcr die 9 Baumartengruppen
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2c.R:117:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  Y.bagr.akl.dkl    <- array(dim=c(7,2,n.bagr,A.k,D.k))
  ^~~~~~~~~~~~~~
NO COPY: R/fvbn2c.R:117:33: style: Put spaces around all infix operators.
  Y.bagr.akl.dkl    <- array(dim=c(7,2,n.bagr,A.k,D.k))
                               ~^~
NO COPY: R/fvbn2c.R:117:38: style: Commas should always have a space after.
  Y.bagr.akl.dkl    <- array(dim=c(7,2,n.bagr,A.k,D.k))
                                     ^
NO COPY: R/fvbn2c.R:117:40: style: Commas should always have a space after.
  Y.bagr.akl.dkl    <- array(dim=c(7,2,n.bagr,A.k,D.k))
                                       ^
NO COPY: R/fvbn2c.R:117:47: style: Commas should always have a space after.
  Y.bagr.akl.dkl    <- array(dim=c(7,2,n.bagr,A.k,D.k))
                                              ^
NO COPY: R/fvbn2c.R:117:51: style: Commas should always have a space after.
  Y.bagr.akl.dkl    <- array(dim=c(7,2,n.bagr,A.k,D.k))
                                                  ^
NO COPY: R/fvbn2c.R:118:3: style: Variable and function names should be all lowercase.
  nT.bagr.akl.dkl   <- array(dim=c(n.bagr,A.k,D.k))
  ^~~~~~~~~~~~~~~
NO COPY: R/fvbn2c.R:118:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  nT.bagr.akl.dkl   <- array(dim=c(n.bagr,A.k,D.k))
  ^~~~~~~~~~~~~~~
NO COPY: R/fvbn2c.R:118:33: style: Put spaces around all infix operators.
  nT.bagr.akl.dkl   <- array(dim=c(n.bagr,A.k,D.k))
                               ~^~
NO COPY: R/fvbn2c.R:118:43: style: Commas should always have a space after.
  nT.bagr.akl.dkl   <- array(dim=c(n.bagr,A.k,D.k))
                                          ^
NO COPY: R/fvbn2c.R:118:47: style: Commas should always have a space after.
  nT.bagr.akl.dkl   <- array(dim=c(n.bagr,A.k,D.k))
                                              ^
NO COPY: R/fvbn2c.R:119:1: style: lines should not be more than 80 characters.
  #Hektarbezogene Kennwerte. urspr. 5 Zielgr\u00f6\u00dfen: Vha, VHbha, Bha, Nha, NDhha
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2c.R:122:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  Yha.bagr.akl.dkl  <- array(dim=c(7,2,n.bagr,A.k,D.k))
  ^~~~~~~~~~~~~~~~
NO COPY: R/fvbn2c.R:122:33: style: Put spaces around all infix operators.
  Yha.bagr.akl.dkl  <- array(dim=c(7,2,n.bagr,A.k,D.k))
                               ~^~
NO COPY: R/fvbn2c.R:122:38: style: Commas should always have a space after.
  Yha.bagr.akl.dkl  <- array(dim=c(7,2,n.bagr,A.k,D.k))
                                     ^
NO COPY: R/fvbn2c.R:122:40: style: Commas should always have a space after.
  Yha.bagr.akl.dkl  <- array(dim=c(7,2,n.bagr,A.k,D.k))
                                       ^
NO COPY: R/fvbn2c.R:122:47: style: Commas should always have a space after.
  Yha.bagr.akl.dkl  <- array(dim=c(7,2,n.bagr,A.k,D.k))
                                              ^
NO COPY: R/fvbn2c.R:122:51: style: Commas should always have a space after.
  Yha.bagr.akl.dkl  <- array(dim=c(7,2,n.bagr,A.k,D.k))
                                                  ^
NO COPY: R/fvbn2c.R:124:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  ant.bagr.akl.dkl  <- array(dim=c(2,A.k,D.k))
  ^~~~~~~~~~~~~~~~
NO COPY: R/fvbn2c.R:124:3: warning: local variable 'ant.bagr.akl.dkl' assigned but may not be used
  ant.bagr.akl.dkl  <- array(dim=c(2,A.k,D.k))
  ^~~~~~~~~~~~~~~~
NO COPY: R/fvbn2c.R:124:33: style: Put spaces around all infix operators.
  ant.bagr.akl.dkl  <- array(dim=c(2,A.k,D.k))
                               ~^~
NO COPY: R/fvbn2c.R:124:38: style: Commas should always have a space after.
  ant.bagr.akl.dkl  <- array(dim=c(2,A.k,D.k))
                                     ^
NO COPY: R/fvbn2c.R:124:42: style: Commas should always have a space after.
  ant.bagr.akl.dkl  <- array(dim=c(2,A.k,D.k))
                                         ^
NO COPY: R/fvbn2c.R:129:3: style: Opening curly braces should never go on their own line and should always be followed by a new line.
  {
  ^
NO COPY: R/fvbn2c.R:131:5: style: Opening curly braces should never go on their own line and should always be followed by a new line.
    {
    ^
NO COPY: R/fvbn2c.R:133:7: style: Opening curly braces should never go on their own line and should always be followed by a new line.
      {
      ^
NO COPY: R/fvbn2c.R:135:1: style: lines should not be more than 80 characters.
                      baeume.s[["bagr"]]==bagr.list[i]&baeume.s[["akl"]]==akl.lab[j]&baeume.s[["dkl"]]==dkl.lab[k],
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2c.R:135:41: style: Put spaces around all infix operators.
                      baeume.s[["bagr"]]==bagr.list[i]&baeume.s[["akl"]]==akl.lab[j]&baeume.s[["dkl"]]==dkl.lab[k],
                                       ~^~~
NO COPY: R/fvbn2c.R:135:55: style: Put spaces around all infix operators.
                      baeume.s[["bagr"]]==bagr.list[i]&baeume.s[["akl"]]==akl.lab[j]&baeume.s[["dkl"]]==dkl.lab[k],
                                                     ~^~
NO COPY: R/fvbn2c.R:135:73: style: Put spaces around all infix operators.
                      baeume.s[["bagr"]]==bagr.list[i]&baeume.s[["akl"]]==akl.lab[j]&baeume.s[["dkl"]]==dkl.lab[k],
                                                                       ~^~~
NO COPY: R/fvbn2c.R:135:85: style: Put spaces around all infix operators.
                      baeume.s[["bagr"]]==bagr.list[i]&baeume.s[["akl"]]==akl.lab[j]&baeume.s[["dkl"]]==dkl.lab[k],
                                                                                   ~^~
NO COPY: R/fvbn2c.R:135:103: style: Put spaces around all infix operators.
                      baeume.s[["bagr"]]==bagr.list[i]&baeume.s[["akl"]]==akl.lab[j]&baeume.s[["dkl"]]==dkl.lab[k],
                                                                                                     ~^~~
NO COPY: R/fvbn2c.R:136:1: style: lines should not be more than 80 characters.
                      c("tnr", "enr", "bhd", "dkl", "volv", "oib", "nha", "stfl")]
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2c.R:137:31: style: Commas should always have a space after.
        if (length(baeume.ba[,1])== 0)
                              ^
NO COPY: R/fvbn2c.R:137:34: style: Put spaces around all infix operators.
        if (length(baeume.ba[,1])== 0)
                                ~^
NO COPY: R/fvbn2c.R:138:9: style: Opening curly braces should never go on their own line and should always be followed by a new line.
        {
        ^
NO COPY: R/fvbn2c.R:139:1: style: lines should not be more than 80 characters.
           Y.bagr.akl.dkl[1:6,1,i,j,k]    <- rep(0,6)  #Zielgr\u00f6\u00dfe Total
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2c.R:139:12: style: Words within variable and function names should be separated by '_' rather than '.'.
           Y.bagr.akl.dkl[1:6,1,i,j,k]    <- rep(0,6)  #Zielgr\u00f6\u00dfe Total
           ^~~~~~~~~~~~~~
NO COPY: R/fvbn2c.R:139:31: style: Commas should always have a space after.
           Y.bagr.akl.dkl[1:6,1,i,j,k]    <- rep(0,6)  #Zielgr\u00f6\u00dfe Total
                              ^
NO COPY: R/fvbn2c.R:139:33: style: Commas should always have a space after.
           Y.bagr.akl.dkl[1:6,1,i,j,k]    <- rep(0,6)  #Zielgr\u00f6\u00dfe Total
                                ^
NO COPY: R/fvbn2c.R:139:35: style: Commas should always have a space after.
           Y.bagr.akl.dkl[1:6,1,i,j,k]    <- rep(0,6)  #Zielgr\u00f6\u00dfe Total
                                  ^
NO COPY: R/fvbn2c.R:139:37: style: Commas should always have a space after.
           Y.bagr.akl.dkl[1:6,1,i,j,k]    <- rep(0,6)  #Zielgr\u00f6\u00dfe Total
                                    ^
NO COPY: R/fvbn2c.R:139:52: style: Commas should always have a space after.
           Y.bagr.akl.dkl[1:6,1,i,j,k]    <- rep(0,6)  #Zielgr\u00f6\u00dfe Total
                                                   ^
NO COPY: R/fvbn2c.R:140:12: style: Words within variable and function names should be separated by '_' rather than '.'.
           Y.bagr.akl.dkl[1:6,2,i,j,k]    <- rep(0,6)  #Stichprobenfehler (SE)
           ^~~~~~~~~~~~~~
NO COPY: R/fvbn2c.R:140:31: style: Commas should always have a space after.
           Y.bagr.akl.dkl[1:6,2,i,j,k]    <- rep(0,6)  #Stichprobenfehler (SE)
                              ^
NO COPY: R/fvbn2c.R:140:33: style: Commas should always have a space after.
           Y.bagr.akl.dkl[1:6,2,i,j,k]    <- rep(0,6)  #Stichprobenfehler (SE)
                                ^
NO COPY: R/fvbn2c.R:140:35: style: Commas should always have a space after.
           Y.bagr.akl.dkl[1:6,2,i,j,k]    <- rep(0,6)  #Stichprobenfehler (SE)
                                  ^
NO COPY: R/fvbn2c.R:140:37: style: Commas should always have a space after.
           Y.bagr.akl.dkl[1:6,2,i,j,k]    <- rep(0,6)  #Stichprobenfehler (SE)
                                    ^
NO COPY: R/fvbn2c.R:140:52: style: Commas should always have a space after.
           Y.bagr.akl.dkl[1:6,2,i,j,k]    <- rep(0,6)  #Stichprobenfehler (SE)
                                                   ^
NO COPY: R/fvbn2c.R:141:12: style: Words within variable and function names should be separated by '_' rather than '.'.
           Yha.bagr.akl.dkl[1:5,1,i,j,k]  <- rep(0,5)
           ^~~~~~~~~~~~~~~~
NO COPY: R/fvbn2c.R:141:33: style: Commas should always have a space after.
           Yha.bagr.akl.dkl[1:5,1,i,j,k]  <- rep(0,5)
                                ^
NO COPY: R/fvbn2c.R:141:35: style: Commas should always have a space after.
           Yha.bagr.akl.dkl[1:5,1,i,j,k]  <- rep(0,5)
                                  ^
NO COPY: R/fvbn2c.R:141:37: style: Commas should always have a space after.
           Yha.bagr.akl.dkl[1:5,1,i,j,k]  <- rep(0,5)
                                    ^
NO COPY: R/fvbn2c.R:141:39: style: Commas should always have a space after.
           Yha.bagr.akl.dkl[1:5,1,i,j,k]  <- rep(0,5)
                                      ^
NO COPY: R/fvbn2c.R:141:52: style: Commas should always have a space after.
           Yha.bagr.akl.dkl[1:5,1,i,j,k]  <- rep(0,5)
                                                   ^
NO COPY: R/fvbn2c.R:142:12: style: Words within variable and function names should be separated by '_' rather than '.'.
           Yha.bagr.akl.dkl[1:5,1,i,j,k]  <- rep(0,5)
           ^~~~~~~~~~~~~~~~
NO COPY: R/fvbn2c.R:142:33: style: Commas should always have a space after.
           Yha.bagr.akl.dkl[1:5,1,i,j,k]  <- rep(0,5)
                                ^
NO COPY: R/fvbn2c.R:142:35: style: Commas should always have a space after.
           Yha.bagr.akl.dkl[1:5,1,i,j,k]  <- rep(0,5)
                                  ^
NO COPY: R/fvbn2c.R:142:37: style: Commas should always have a space after.
           Yha.bagr.akl.dkl[1:5,1,i,j,k]  <- rep(0,5)
                                    ^
NO COPY: R/fvbn2c.R:142:39: style: Commas should always have a space after.
           Yha.bagr.akl.dkl[1:5,1,i,j,k]  <- rep(0,5)
                                      ^
NO COPY: R/fvbn2c.R:142:52: style: Commas should always have a space after.
           Yha.bagr.akl.dkl[1:5,1,i,j,k]  <- rep(0,5)
                                                   ^
NO COPY: R/fvbn2c.R:143:12: style: Variable and function names should be all lowercase.
           nT.bagr.akl.dkl[i,j,k]    <- 0  #n PSU (Trakte)
           ^~~~~~~~~~~~~~~
NO COPY: R/fvbn2c.R:143:12: style: Words within variable and function names should be separated by '_' rather than '.'.
           nT.bagr.akl.dkl[i,j,k]    <- 0  #n PSU (Trakte)
           ^~~~~~~~~~~~~~~
NO COPY: R/fvbn2c.R:143:30: style: Commas should always have a space after.
           nT.bagr.akl.dkl[i,j,k]    <- 0  #n PSU (Trakte)
                             ^
NO COPY: R/fvbn2c.R:143:32: style: Commas should always have a space after.
           nT.bagr.akl.dkl[i,j,k]    <- 0  #n PSU (Trakte)
                               ^
NO COPY: R/fvbn2c.R:145:9: style: Opening curly braces should never go on their own line and should always be followed by a new line.
        {
        ^
NO COPY: R/fvbn2c.R:148:49: style: Commas should always have a space after.
          xy <- stats::aggregate(baeume.ba$stfl,by=list(baeume.ba$tnr),sum)
                                                ^
NO COPY: R/fvbn2c.R:148:51: style: Put spaces around all infix operators.
          xy <- stats::aggregate(baeume.ba$stfl,by=list(baeume.ba$tnr),sum)
                                                 ~^~
NO COPY: R/fvbn2c.R:148:72: style: Commas should always have a space after.
          xy <- stats::aggregate(baeume.ba$stfl,by=list(baeume.ba$tnr),sum)
                                                                       ^
NO COPY: R/fvbn2c.R:149:32: style: Commas should always have a space after.
          names(xy) <- c("tnr","x")
                               ^
NO COPY: R/fvbn2c.R:150:23: style: Put spaces around all infix operators.
          xy$x <- xy$x/10000*lk  #Umrechnung in ha  und L\u00fcckenkorrektur
                     ~^~
NO COPY: R/fvbn2c.R:150:29: style: Put spaces around all infix operators.
          xy$x <- xy$x/10000*lk  #Umrechnung in ha  und L\u00fcckenkorrektur
                           ~^~
NO COPY: R/fvbn2c.R:152:26: style: Commas should always have a space after.
          xy <- cbind(xy,stats::aggregate(baeume.ba$volv*baeume.ba$nha,
                         ^
NO COPY: R/fvbn2c.R:152:57: style: Put spaces around all infix operators.
          xy <- cbind(xy,stats::aggregate(baeume.ba$volv*baeume.ba$nha,
                                                       ~^~
NO COPY: R/fvbn2c.R:153:47: style: Put spaces around all infix operators.
                                            by=list(baeume.ba$tnr),sum)$x )
                                             ~^~
NO COPY: R/fvbn2c.R:153:68: style: Commas should always have a space after.
                                            by=list(baeume.ba$tnr),sum)$x )
                                                                   ^
NO COPY: R/fvbn2c.R:157:1: style: lines should not be more than 80 characters.
            stats::aggregate(baeume.ba$volv*baeume.ba$nha*ifelse(baeume.ba$stfl>0,1,0),
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2c.R:157:44: style: Put spaces around all infix operators.
            stats::aggregate(baeume.ba$volv*baeume.ba$nha*ifelse(baeume.ba$stfl>0,1,0),
                                          ~^~
NO COPY: R/fvbn2c.R:157:58: style: Put spaces around all infix operators.
            stats::aggregate(baeume.ba$volv*baeume.ba$nha*ifelse(baeume.ba$stfl>0,1,0),
                                                        ~^~
NO COPY: R/fvbn2c.R:157:80: style: Put spaces around all infix operators.
            stats::aggregate(baeume.ba$volv*baeume.ba$nha*ifelse(baeume.ba$stfl>0,1,0),
                                                                              ~^~
NO COPY: R/fvbn2c.R:157:83: style: Commas should always have a space after.
            stats::aggregate(baeume.ba$volv*baeume.ba$nha*ifelse(baeume.ba$stfl>0,1,0),
                                                                                  ^
NO COPY: R/fvbn2c.R:157:85: style: Commas should always have a space after.
            stats::aggregate(baeume.ba$volv*baeume.ba$nha*ifelse(baeume.ba$stfl>0,1,0),
                                                                                    ^
NO COPY: R/fvbn2c.R:158:47: style: Put spaces around all infix operators.
                                            by=list(baeume.ba$tnr),sum)$x )
                                             ~^~
NO COPY: R/fvbn2c.R:158:68: style: Commas should always have a space after.
                                            by=list(baeume.ba$tnr),sum)$x )
                                                                   ^
NO COPY: R/fvbn2c.R:161:26: style: Commas should always have a space after.
          xy <- cbind(xy,stats::aggregate(baeume.ba$oib*baeume.ba$nha,
                         ^
NO COPY: R/fvbn2c.R:161:56: style: Put spaces around all infix operators.
          xy <- cbind(xy,stats::aggregate(baeume.ba$oib*baeume.ba$nha,
                                                      ~^~
NO COPY: R/fvbn2c.R:162:47: style: Put spaces around all infix operators.
                                            by=list(baeume.ba$tnr),sum)$x/1000)
                                             ~^~
NO COPY: R/fvbn2c.R:162:68: style: Commas should always have a space after.
                                            by=list(baeume.ba$tnr),sum)$x/1000)
                                                                   ^
NO COPY: R/fvbn2c.R:162:74: style: Put spaces around all infix operators.
                                            by=list(baeume.ba$tnr),sum)$x/1000)
                                                                        ~^~
NO COPY: R/fvbn2c.R:165:1: style: lines should not be more than 80 characters.
          xy <- cbind(xy,stats::aggregate(baeume.ba$nha,by=list(baeume.ba$tnr),sum)$x)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2c.R:165:26: style: Commas should always have a space after.
          xy <- cbind(xy,stats::aggregate(baeume.ba$nha,by=list(baeume.ba$tnr),sum)$x)
                         ^
NO COPY: R/fvbn2c.R:165:57: style: Commas should always have a space after.
          xy <- cbind(xy,stats::aggregate(baeume.ba$nha,by=list(baeume.ba$tnr),sum)$x)
                                                        ^
NO COPY: R/fvbn2c.R:165:59: style: Put spaces around all infix operators.
          xy <- cbind(xy,stats::aggregate(baeume.ba$nha,by=list(baeume.ba$tnr),sum)$x)
                                                         ~^~
NO COPY: R/fvbn2c.R:165:80: style: Commas should always have a space after.
          xy <- cbind(xy,stats::aggregate(baeume.ba$nha,by=list(baeume.ba$tnr),sum)$x)
                                                                               ^
NO COPY: R/fvbn2c.R:169:1: style: lines should not be more than 80 characters.
          x.ndh <- try(stats::aggregate(baeume.ba$nha*ifelse(baeume.ba$bhd>=7,1,0),
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2c.R:169:54: style: Put spaces around all infix operators.
          x.ndh <- try(stats::aggregate(baeume.ba$nha*ifelse(baeume.ba$bhd>=7,1,0),
                                                    ~^~
NO COPY: R/fvbn2c.R:169:75: style: Put spaces around all infix operators.
          x.ndh <- try(stats::aggregate(baeume.ba$nha*ifelse(baeume.ba$bhd>=7,1,0),
                                                                         ~^~~
NO COPY: R/fvbn2c.R:169:79: style: Commas should always have a space after.
          x.ndh <- try(stats::aggregate(baeume.ba$nha*ifelse(baeume.ba$bhd>=7,1,0),
                                                                              ^
NO COPY: R/fvbn2c.R:169:81: style: Commas should always have a space after.
          x.ndh <- try(stats::aggregate(baeume.ba$nha*ifelse(baeume.ba$bhd>=7,1,0),
                                                                                ^
NO COPY: R/fvbn2c.R:170:17: style: Put spaces around all infix operators.
              by=list(baeume.ba$tnr),sum)$x, silent=T )
               ~^~
NO COPY: R/fvbn2c.R:170:38: style: Commas should always have a space after.
              by=list(baeume.ba$tnr),sum)$x, silent=T )
                                     ^
NO COPY: R/fvbn2c.R:170:52: style: Put spaces around all infix operators.
              by=list(baeume.ba$tnr),sum)$x, silent=T )
                                                  ~^~
NO COPY: R/fvbn2c.R:171:32: style: Commas should always have a space after.
          if (length(grep("7)",dkl.lab[k]))>0)
                               ^
NO COPY: R/fvbn2c.R:171:44: style: Put spaces around all infix operators.
          if (length(grep("7)",dkl.lab[k]))>0)
                                          ~^~
NO COPY: R/fvbn2c.R:172:11: style: Opening curly braces should never go on their own line and should always be followed by a new line.
          {
          ^
NO COPY: R/fvbn2c.R:173:28: style: Commas should always have a space after.
            x.ndh <- rep(0,length(xy[,1]))
                           ^
NO COPY: R/fvbn2c.R:173:39: style: Commas should always have a space after.
            x.ndh <- rep(0,length(xy[,1]))
                                      ^
NO COPY: R/fvbn2c.R:175:26: style: Commas should always have a space after.
          xy <- cbind(xy,x.ndh)
                         ^
NO COPY: R/fvbn2c.R:177:11: style: Words within variable and function names should be separated by '_' rather than '.'.
          x.ndh.hb <- try(stats::aggregate(baeume.ba$nha*ifelse(
          ^~~~~~~~
NO COPY: R/fvbn2c.R:177:57: style: Put spaces around all infix operators.
          x.ndh.hb <- try(stats::aggregate(baeume.ba$nha*ifelse(
                                                       ~^~
NO COPY: R/fvbn2c.R:178:28: style: Put spaces around all infix operators.
              baeume.ba$bhd>=7 & baeume.ba$stfl>0,1,0),
                          ~^~~
NO COPY: R/fvbn2c.R:178:48: style: Put spaces around all infix operators.
              baeume.ba$bhd>=7 & baeume.ba$stfl>0,1,0),
                                              ~^~
NO COPY: R/fvbn2c.R:178:51: style: Commas should always have a space after.
              baeume.ba$bhd>=7 & baeume.ba$stfl>0,1,0),
                                                  ^
NO COPY: R/fvbn2c.R:178:53: style: Commas should always have a space after.
              baeume.ba$bhd>=7 & baeume.ba$stfl>0,1,0),
                                                    ^
NO COPY: R/fvbn2c.R:179:17: style: Put spaces around all infix operators.
              by=list(baeume.ba$tnr),sum)$x, silent=T )
               ~^~
NO COPY: R/fvbn2c.R:179:38: style: Commas should always have a space after.
              by=list(baeume.ba$tnr),sum)$x, silent=T )
                                     ^
NO COPY: R/fvbn2c.R:179:52: style: Put spaces around all infix operators.
              by=list(baeume.ba$tnr),sum)$x, silent=T )
                                                  ~^~
NO COPY: R/fvbn2c.R:180:32: style: Commas should always have a space after.
          if (length(grep("7)",dkl.lab[k]))>0)
                               ^
NO COPY: R/fvbn2c.R:180:44: style: Put spaces around all infix operators.
          if (length(grep("7)",dkl.lab[k]))>0)
                                          ~^~
NO COPY: R/fvbn2c.R:181:11: style: Opening curly braces should never go on their own line and should always be followed by a new line.
          {
          ^
NO COPY: R/fvbn2c.R:182:13: style: Words within variable and function names should be separated by '_' rather than '.'.
            x.ndh.hb <- rep(0,length(xy[,1]))
            ^~~~~~~~
NO COPY: R/fvbn2c.R:182:31: style: Commas should always have a space after.
            x.ndh.hb <- rep(0,length(xy[,1]))
                              ^
NO COPY: R/fvbn2c.R:182:42: style: Commas should always have a space after.
            x.ndh.hb <- rep(0,length(xy[,1]))
                                         ^
NO COPY: R/fvbn2c.R:184:26: style: Commas should always have a space after.
          xy <- cbind(xy,x.ndh.hb)
                         ^
NO COPY: R/fvbn2c.R:184:26: style: Words within variable and function names should be separated by '_' rather than '.'.
          xy <- cbind(xy,x.ndh.hb)
                         ^~~~~~~~
NO COPY: R/fvbn2c.R:190:11: style: Variable and function names should be all lowercase.
          nT.bagr.akl.dkl[i,j,k] <- length(xy[,1])
          ^~~~~~~~~~~~~~~
NO COPY: R/fvbn2c.R:190:11: style: Words within variable and function names should be separated by '_' rather than '.'.
          nT.bagr.akl.dkl[i,j,k] <- length(xy[,1])
          ^~~~~~~~~~~~~~~
NO COPY: R/fvbn2c.R:190:29: style: Commas should always have a space after.
          nT.bagr.akl.dkl[i,j,k] <- length(xy[,1])
                            ^
NO COPY: R/fvbn2c.R:190:31: style: Commas should always have a space after.
          nT.bagr.akl.dkl[i,j,k] <- length(xy[,1])
                              ^
NO COPY: R/fvbn2c.R:190:48: style: Commas should always have a space after.
          nT.bagr.akl.dkl[i,j,k] <- length(xy[,1])
                                               ^
NO COPY: R/fvbn2c.R:191:1: style: lines should not be more than 80 characters.
          #---  Erg\u00e4nzug 11.10. <m_bhb>    Hinweis: Offset f\u00fcr Indizierung ange-
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2c.R:195:56: style: Commas should always have a space after.
          xy <- merge(xy.s[TRUE, c("tnr", "m", "hbf")],xy,by=c("tnr"),all.x=T)
                                                       ^
NO COPY: R/fvbn2c.R:195:59: style: Commas should always have a space after.
          xy <- merge(xy.s[TRUE, c("tnr", "m", "hbf")],xy,by=c("tnr"),all.x=T)
                                                          ^
NO COPY: R/fvbn2c.R:195:61: style: Put spaces around all infix operators.
          xy <- merge(xy.s[TRUE, c("tnr", "m", "hbf")],xy,by=c("tnr"),all.x=T)
                                                           ~^~
NO COPY: R/fvbn2c.R:195:71: style: Commas should always have a space after.
          xy <- merge(xy.s[TRUE, c("tnr", "m", "hbf")],xy,by=c("tnr"),all.x=T)
                                                                      ^
NO COPY: R/fvbn2c.R:195:76: style: Put spaces around all infix operators.
          xy <- merge(xy.s[TRUE, c("tnr", "m", "hbf")],xy,by=c("tnr"),all.x=T)
                                                                          ~^~
NO COPY: R/fvbn2c.R:196:12: style: Commented code should be removed.
          #xy <- merge(trakte[TRUE, c("tnr", "m,m_bhb")],xy,by=c("tnr"),all.x=T)
           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2c.R:200:11: style: Opening curly braces should never go on their own line and should always be followed by a new line.
          {
          ^
NO COPY: R/fvbn2c.R:201:1: style: lines should not be more than 80 characters.
            #Zielgr\u00f6\u00dfen Y {BAF,V,VHb,B,N,NDh,NDhHb)   (Offset von (2+l) auf (3+l)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2c.R:202:1: style: lines should not be more than 80 characters.
            #wegen zus\u00e4tzlichem Attribut <m_bhb> ge\u00e4ndert (k\u00e4/11.10.14)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2c.R:203:49: style: Commas should always have a space after.
            R.list <- r.variance.fun(cbind(xy$m,xy[,(3+l)]),nT)
                                                ^
NO COPY: R/fvbn2c.R:203:53: style: Commas should always have a space after.
            R.list <- r.variance.fun(cbind(xy$m,xy[,(3+l)]),nT)
                                                    ^
NO COPY: R/fvbn2c.R:203:53: style: Place a space before left parenthesis, except in a function call.
            R.list <- r.variance.fun(cbind(xy$m,xy[,(3+l)]),nT)
                                                    ^
NO COPY: R/fvbn2c.R:203:55: style: Put spaces around all infix operators.
            R.list <- r.variance.fun(cbind(xy$m,xy[,(3+l)]),nT)
                                                     ~^~
NO COPY: R/fvbn2c.R:203:61: style: Commas should always have a space after.
            R.list <- r.variance.fun(cbind(xy$m,xy[,(3+l)]),nT)
                                                            ^
NO COPY: R/fvbn2c.R:205:13: style: Words within variable and function names should be separated by '_' rather than '.'.
            Y.bagr.akl.dkl[l,1,i,j,k] <- R.list$R.xy*A
            ^~~~~~~~~~~~~~
NO COPY: R/fvbn2c.R:205:30: style: Commas should always have a space after.
            Y.bagr.akl.dkl[l,1,i,j,k] <- R.list$R.xy*A
                             ^
NO COPY: R/fvbn2c.R:205:32: style: Commas should always have a space after.
            Y.bagr.akl.dkl[l,1,i,j,k] <- R.list$R.xy*A
                               ^
NO COPY: R/fvbn2c.R:205:34: style: Commas should always have a space after.
            Y.bagr.akl.dkl[l,1,i,j,k] <- R.list$R.xy*A
                                 ^
NO COPY: R/fvbn2c.R:205:36: style: Commas should always have a space after.
            Y.bagr.akl.dkl[l,1,i,j,k] <- R.list$R.xy*A
                                   ^
NO COPY: R/fvbn2c.R:205:53: style: Put spaces around all infix operators.
            Y.bagr.akl.dkl[l,1,i,j,k] <- R.list$R.xy*A
                                                   ~^~
NO COPY: R/fvbn2c.R:206:14: style: Commented code should be removed.
            #sum(xy[,(1+l)])/sum(x)*A *ifelse(l==1,lk,1)
             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2c.R:207:1: style: lines should not be more than 80 characters.
                                      #L\u00fcckenkorrektur bei BAF bereits erfolgt
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2c.R:209:13: style: Words within variable and function names should be separated by '_' rather than '.'.
            Y.bagr.akl.dkl[l,2,i,j,k] <- sqrt(R.list$V.R.xy)*A
            ^~~~~~~~~~~~~~
NO COPY: R/fvbn2c.R:209:30: style: Commas should always have a space after.
            Y.bagr.akl.dkl[l,2,i,j,k] <- sqrt(R.list$V.R.xy)*A
                             ^
NO COPY: R/fvbn2c.R:209:32: style: Commas should always have a space after.
            Y.bagr.akl.dkl[l,2,i,j,k] <- sqrt(R.list$V.R.xy)*A
                               ^
NO COPY: R/fvbn2c.R:209:34: style: Commas should always have a space after.
            Y.bagr.akl.dkl[l,2,i,j,k] <- sqrt(R.list$V.R.xy)*A
                                 ^
NO COPY: R/fvbn2c.R:209:36: style: Commas should always have a space after.
            Y.bagr.akl.dkl[l,2,i,j,k] <- sqrt(R.list$V.R.xy)*A
                                   ^
NO COPY: R/fvbn2c.R:209:54: style: Words within variable and function names should be separated by '_' rather than '.'.
            Y.bagr.akl.dkl[l,2,i,j,k] <- sqrt(R.list$V.R.xy)*A
                                                     ^~~~~~
NO COPY: R/fvbn2c.R:209:61: style: Put spaces around all infix operators.
            Y.bagr.akl.dkl[l,2,i,j,k] <- sqrt(R.list$V.R.xy)*A
                                                           ~^~
NO COPY: R/fvbn2c.R:213:1: style: lines should not be more than 80 characters.
            #if (l > 1)    #Hinweis: l+1 = Spalte der Zielgr\u00f6\u00dfe in xy; Spalte 2
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2c.R:214:1: style: lines should not be more than 80 characters.
                          #ist BA-Fl\u00e4che (HB) als Bezugsfl\u00e4che (= xy$x)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2c.R:216:13: style: Opening curly braces should never go on their own line and should always be followed by a new line.
            {
            ^
NO COPY: R/fvbn2c.R:217:53: style: Commas should always have a space after.
              R.list <- r.variance.fun(cbind(xy$hbf,xy[,(3+l)]),nT)
                                                    ^
NO COPY: R/fvbn2c.R:217:57: style: Commas should always have a space after.
              R.list <- r.variance.fun(cbind(xy$hbf,xy[,(3+l)]),nT)
                                                        ^
NO COPY: R/fvbn2c.R:217:57: style: Place a space before left parenthesis, except in a function call.
              R.list <- r.variance.fun(cbind(xy$hbf,xy[,(3+l)]),nT)
                                                        ^
NO COPY: R/fvbn2c.R:217:59: style: Put spaces around all infix operators.
              R.list <- r.variance.fun(cbind(xy$hbf,xy[,(3+l)]),nT)
                                                         ~^~
NO COPY: R/fvbn2c.R:217:65: style: Commas should always have a space after.
              R.list <- r.variance.fun(cbind(xy$hbf,xy[,(3+l)]),nT)
                                                                ^
NO COPY: R/fvbn2c.R:219:41: style: Put spaces around all infix operators.
              R.list$R.xy <- R.list$R.xy*100
                                       ~^~
NO COPY: R/fvbn2c.R:220:22: style: Words within variable and function names should be separated by '_' rather than '.'.
              R.list$V.R.xy <- R.list$V.R.xy*10000
                     ^~~~~~
NO COPY: R/fvbn2c.R:220:39: style: Words within variable and function names should be separated by '_' rather than '.'.
              R.list$V.R.xy <- R.list$V.R.xy*10000
                                      ^~~~~~
NO COPY: R/fvbn2c.R:220:45: style: Put spaces around all infix operators.
              R.list$V.R.xy <- R.list$V.R.xy*10000
                                           ~^~
NO COPY: R/fvbn2c.R:222:13: style: Opening curly braces should never go on their own line and should always be followed by a new line.
            {
            ^
NO COPY: R/fvbn2c.R:227:41: style: Commas should always have a space after.
              lk.c <- ifelse(l %in% c(3,7) ,lk,1) #lk.c macht bei HB-Vorrat
                                        ^
NO COPY: R/fvbn2c.R:227:44: style: Commas should never have a space before.
              lk.c <- ifelse(l %in% c(3,7) ,lk,1) #lk.c macht bei HB-Vorrat
                                          ~^
NO COPY: R/fvbn2c.R:227:45: style: Commas should always have a space after.
              lk.c <- ifelse(l %in% c(3,7) ,lk,1) #lk.c macht bei HB-Vorrat
                                            ^
NO COPY: R/fvbn2c.R:227:48: style: Commas should always have a space after.
              lk.c <- ifelse(l %in% c(3,7) ,lk,1) #lk.c macht bei HB-Vorrat
                                               ^
NO COPY: R/fvbn2c.R:228:1: style: lines should not be more than 80 characters.
              #L\u00fcckenkorrektur r\u00fcckg\u00e4ngig Hinweis: Offset von (2+l) auf (3+l)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2c.R:229:1: style: lines should not be more than 80 characters.
              #wegen zus\u00e4tzlichem Attribut <m_bhb> ge\u00e4ndert (k\u00e4/11.10.14)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2c.R:230:50: style: Put spaces around all infix operators.
              R.list <- r.variance.fun(cbind(xy$x/lk.c,xy[,(3+l)]),nT)
                                                ~^~
NO COPY: R/fvbn2c.R:230:56: style: Commas should always have a space after.
              R.list <- r.variance.fun(cbind(xy$x/lk.c,xy[,(3+l)]),nT)
                                                       ^
NO COPY: R/fvbn2c.R:230:60: style: Commas should always have a space after.
              R.list <- r.variance.fun(cbind(xy$x/lk.c,xy[,(3+l)]),nT)
                                                           ^
NO COPY: R/fvbn2c.R:230:60: style: Place a space before left parenthesis, except in a function call.
              R.list <- r.variance.fun(cbind(xy$x/lk.c,xy[,(3+l)]),nT)
                                                           ^
NO COPY: R/fvbn2c.R:230:62: style: Put spaces around all infix operators.
              R.list <- r.variance.fun(cbind(xy$x/lk.c,xy[,(3+l)]),nT)
                                                            ~^~
NO COPY: R/fvbn2c.R:230:68: style: Commas should always have a space after.
              R.list <- r.variance.fun(cbind(xy$x/lk.c,xy[,(3+l)]),nT)
                                                                   ^
NO COPY: R/fvbn2c.R:234:13: style: Words within variable and function names should be separated by '_' rather than '.'.
            Yha.bagr.akl.dkl[l.ha,1,i,j,k] <- R.list$R.xy
            ^~~~~~~~~~~~~~~~
NO COPY: R/fvbn2c.R:234:35: style: Commas should always have a space after.
            Yha.bagr.akl.dkl[l.ha,1,i,j,k] <- R.list$R.xy
                                  ^
NO COPY: R/fvbn2c.R:234:37: style: Commas should always have a space after.
            Yha.bagr.akl.dkl[l.ha,1,i,j,k] <- R.list$R.xy
                                    ^
NO COPY: R/fvbn2c.R:234:39: style: Commas should always have a space after.
            Yha.bagr.akl.dkl[l.ha,1,i,j,k] <- R.list$R.xy
                                      ^
NO COPY: R/fvbn2c.R:234:41: style: Commas should always have a space after.
            Yha.bagr.akl.dkl[l.ha,1,i,j,k] <- R.list$R.xy
                                        ^
NO COPY: R/fvbn2c.R:235:30: style: Commented code should be removed.
              #              Y.bagr.akl.dkl[l,1,i,j,k]/Y.bagr.akl.dkl[1,1,i,j,k]
                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2c.R:236:13: style: Words within variable and function names should be separated by '_' rather than '.'.
            Yha.bagr.akl.dkl[l.ha,2,i,j,k] <- sqrt(R.list$V.R.xy)
            ^~~~~~~~~~~~~~~~
NO COPY: R/fvbn2c.R:236:35: style: Commas should always have a space after.
            Yha.bagr.akl.dkl[l.ha,2,i,j,k] <- sqrt(R.list$V.R.xy)
                                  ^
NO COPY: R/fvbn2c.R:236:37: style: Commas should always have a space after.
            Yha.bagr.akl.dkl[l.ha,2,i,j,k] <- sqrt(R.list$V.R.xy)
                                    ^
NO COPY: R/fvbn2c.R:236:39: style: Commas should always have a space after.
            Yha.bagr.akl.dkl[l.ha,2,i,j,k] <- sqrt(R.list$V.R.xy)
                                      ^
NO COPY: R/fvbn2c.R:236:41: style: Commas should always have a space after.
            Yha.bagr.akl.dkl[l.ha,2,i,j,k] <- sqrt(R.list$V.R.xy)
                                        ^
NO COPY: R/fvbn2c.R:236:59: style: Words within variable and function names should be separated by '_' rather than '.'.
            Yha.bagr.akl.dkl[l.ha,2,i,j,k] <- sqrt(R.list$V.R.xy)
                                                          ^~~~~~
NO COPY: R/fvbn2c.R:251:4: style: Commented code should be removed.
  #AKL-Labels
   ^~~~~~~~~~
NO COPY: R/fvbn2c.R:252:34: style: Commas should always have a space after.
  akl.lab <- akl.lab.fun(A.klass,A.k) #k\u00e4/16.07.14
                                 ^
NO COPY: R/fvbn2c.R:255:34: style: Commas should always have a space after.
  dkl.lab <- dkl.lab.fun(D.klass,D.k) #k\u00e4/16.07.14
                                 ^
NO COPY: R/fvbn2c.R:258:20: style: Commas should always have a space after.
  a <- regexpr("/",baeume$bemerk[baeume$stp==0][1],fixed=T)
                   ^
NO COPY: R/fvbn2c.R:258:44: style: Put spaces around all infix operators.
  a <- regexpr("/",baeume$bemerk[baeume$stp==0][1],fixed=T)
                                          ~^~~
NO COPY: R/fvbn2c.R:258:52: style: Commas should always have a space after.
  a <- regexpr("/",baeume$bemerk[baeume$stp==0][1],fixed=T)
                                                   ^
NO COPY: R/fvbn2c.R:258:57: style: Put spaces around all infix operators.
  a <- regexpr("/",baeume$bemerk[baeume$stp==0][1],fixed=T)
                                                       ~^~
NO COPY: R/fvbn2c.R:259:51: style: Put spaces around all infix operators.
  b <- nchar(as.character(baeume$bemerk[baeume$stp==0][1]))
                                                 ~^~~
NO COPY: R/fvbn2c.R:260:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  version.baeume.b  <- substr(as.character(baeume$bemerk[baeume$stp==0][1]),a,b)
  ^~~~~~~~~~~~~~~~
NO COPY: R/fvbn2c.R:260:3: warning: local variable 'version.baeume.b' assigned but may not be used
  version.baeume.b  <- substr(as.character(baeume$bemerk[baeume$stp==0][1]),a,b)
  ^~~~~~~~~~~~~~~~
NO COPY: R/fvbn2c.R:260:68: style: Put spaces around all infix operators.
  version.baeume.b  <- substr(as.character(baeume$bemerk[baeume$stp==0][1]),a,b)
                                                                  ~^~~
NO COPY: R/fvbn2c.R:260:77: style: Commas should always have a space after.
  version.baeume.b  <- substr(as.character(baeume$bemerk[baeume$stp==0][1]),a,b)
                                                                            ^
NO COPY: R/fvbn2c.R:260:79: style: Commas should always have a space after.
  version.baeume.b  <- substr(as.character(baeume$bemerk[baeume$stp==0][1]),a,b)
                                                                              ^
NO COPY: R/fvbn2c.R:261:20: style: Put spaces around all infix operators.
  Log <- list(Datum=Sys.time(),
                  ~^~
NO COPY: R/fvbn2c.R:262:1: style: lines should not be more than 80 characters.
      Version.baeume.b=substr(as.character(baeume$bemerk[baeume$stp==0][1]),a,b))
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2c.R:262:23: style: Put spaces around all infix operators.
      Version.baeume.b=substr(as.character(baeume$bemerk[baeume$stp==0][1]),a,b))
                     ~^~
NO COPY: R/fvbn2c.R:262:68: style: Put spaces around all infix operators.
      Version.baeume.b=substr(as.character(baeume$bemerk[baeume$stp==0][1]),a,b))
                                                                  ~^~~
NO COPY: R/fvbn2c.R:262:77: style: Commas should always have a space after.
      Version.baeume.b=substr(as.character(baeume$bemerk[baeume$stp==0][1]),a,b))
                                                                            ^
NO COPY: R/fvbn2c.R:262:79: style: Commas should always have a space after.
      Version.baeume.b=substr(as.character(baeume$bemerk[baeume$stp==0][1]),a,b))
                                                                              ^
NO COPY: R/fvbn2c.R:264:18: style: Put spaces around all infix operators.
  return(list(Log=Log, Stratum=auswahl, nTE=n.te.s, HBF=T.hbf, se.HBF=se.T.hbf,
                ~^~
NO COPY: R/fvbn2c.R:264:31: style: Put spaces around all infix operators.
  return(list(Log=Log, Stratum=auswahl, nTE=n.te.s, HBF=T.hbf, se.HBF=se.T.hbf,
                             ~^~
NO COPY: R/fvbn2c.R:264:44: style: Put spaces around all infix operators.
  return(list(Log=Log, Stratum=auswahl, nTE=n.te.s, HBF=T.hbf, se.HBF=se.T.hbf,
                                          ~^~
NO COPY: R/fvbn2c.R:264:45: style: Words within variable and function names should be separated by '_' rather than '.'.
  return(list(Log=Log, Stratum=auswahl, nTE=n.te.s, HBF=T.hbf, se.HBF=se.T.hbf,
                                            ^~~~~~
NO COPY: R/fvbn2c.R:264:56: style: Put spaces around all infix operators.
  return(list(Log=Log, Stratum=auswahl, nTE=n.te.s, HBF=T.hbf, se.HBF=se.T.hbf,
                                                      ~^~
NO COPY: R/fvbn2c.R:264:70: style: Put spaces around all infix operators.
  return(list(Log=Log, Stratum=auswahl, nTE=n.te.s, HBF=T.hbf, se.HBF=se.T.hbf,
                                                                    ~^~
NO COPY: R/fvbn2c.R:264:71: style: Words within variable and function names should be separated by '_' rather than '.'.
  return(list(Log=Log, Stratum=auswahl, nTE=n.te.s, HBF=T.hbf, se.HBF=se.T.hbf,
                                                                      ^~~~~~~~
NO COPY: R/fvbn2c.R:265:17: style: Put spaces around all infix operators.
              BL=T.bl,se.BL=se.T.bl,iBL=T.ibl,se.iBL=se.T.ibl,LK=lk,se.LK=se.lk,
               ~^~
NO COPY: R/fvbn2c.R:265:23: style: Commas should always have a space after.
              BL=T.bl,se.BL=se.T.bl,iBL=T.ibl,se.iBL=se.T.ibl,LK=lk,se.LK=se.lk,
                      ^
NO COPY: R/fvbn2c.R:265:28: style: Put spaces around all infix operators.
              BL=T.bl,se.BL=se.T.bl,iBL=T.ibl,se.iBL=se.T.ibl,LK=lk,se.LK=se.lk,
                          ~^~
NO COPY: R/fvbn2c.R:265:29: style: Words within variable and function names should be separated by '_' rather than '.'.
              BL=T.bl,se.BL=se.T.bl,iBL=T.ibl,se.iBL=se.T.ibl,LK=lk,se.LK=se.lk,
                            ^~~~~~~
NO COPY: R/fvbn2c.R:265:37: style: Commas should always have a space after.
              BL=T.bl,se.BL=se.T.bl,iBL=T.ibl,se.iBL=se.T.ibl,LK=lk,se.LK=se.lk,
                                    ^
NO COPY: R/fvbn2c.R:265:40: style: Put spaces around all infix operators.
              BL=T.bl,se.BL=se.T.bl,iBL=T.ibl,se.iBL=se.T.ibl,LK=lk,se.LK=se.lk,
                                      ~^~
NO COPY: R/fvbn2c.R:265:47: style: Commas should always have a space after.
              BL=T.bl,se.BL=se.T.bl,iBL=T.ibl,se.iBL=se.T.ibl,LK=lk,se.LK=se.lk,
                                              ^
NO COPY: R/fvbn2c.R:265:53: style: Put spaces around all infix operators.
              BL=T.bl,se.BL=se.T.bl,iBL=T.ibl,se.iBL=se.T.ibl,LK=lk,se.LK=se.lk,
                                                   ~^~
NO COPY: R/fvbn2c.R:265:54: style: Words within variable and function names should be separated by '_' rather than '.'.
              BL=T.bl,se.BL=se.T.bl,iBL=T.ibl,se.iBL=se.T.ibl,LK=lk,se.LK=se.lk,
                                                     ^~~~~~~~
NO COPY: R/fvbn2c.R:265:63: style: Commas should always have a space after.
              BL=T.bl,se.BL=se.T.bl,iBL=T.ibl,se.iBL=se.T.ibl,LK=lk,se.LK=se.lk,
                                                              ^
NO COPY: R/fvbn2c.R:265:65: style: Put spaces around all infix operators.
              BL=T.bl,se.BL=se.T.bl,iBL=T.ibl,se.iBL=se.T.ibl,LK=lk,se.LK=se.lk,
                                                               ~^~
NO COPY: R/fvbn2c.R:265:69: style: Commas should always have a space after.
              BL=T.bl,se.BL=se.T.bl,iBL=T.ibl,se.iBL=se.T.ibl,LK=lk,se.LK=se.lk,
                                                                    ^
NO COPY: R/fvbn2c.R:265:74: style: Put spaces around all infix operators.
              BL=T.bl,se.BL=se.T.bl,iBL=T.ibl,se.iBL=se.T.ibl,LK=lk,se.LK=se.lk,
                                                                        ~^~
NO COPY: R/fvbn2c.R:266:1: style: lines should not be more than 80 characters.
              Attribute1=c("BAF", "V_DhmR","V_DhmR_HB", "oiB", "N", "N_Dh", "N_Dh_HB"),
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2c.R:266:25: style: Put spaces around all infix operators.
              Attribute1=c("BAF", "V_DhmR","V_DhmR_HB", "oiB", "N", "N_Dh", "N_Dh_HB"),
                       ~^~
NO COPY: R/fvbn2c.R:266:44: style: Commas should always have a space after.
              Attribute1=c("BAF", "V_DhmR","V_DhmR_HB", "oiB", "N", "N_Dh", "N_Dh_HB"),
                                           ^
NO COPY: R/fvbn2c.R:268:25: style: Put spaces around all infix operators.
              Attribute2=c("BA_Proz","V_DhmR/ha","V_DhmR_HB/ha","oiB/ha","N/ha",
                       ~^~
NO COPY: R/fvbn2c.R:268:38: style: Commas should always have a space after.
              Attribute2=c("BA_Proz","V_DhmR/ha","V_DhmR_HB/ha","oiB/ha","N/ha",
                                     ^
NO COPY: R/fvbn2c.R:268:50: style: Commas should always have a space after.
              Attribute2=c("BA_Proz","V_DhmR/ha","V_DhmR_HB/ha","oiB/ha","N/ha",
                                                 ^
NO COPY: R/fvbn2c.R:268:65: style: Commas should always have a space after.
              Attribute2=c("BA_Proz","V_DhmR/ha","V_DhmR_HB/ha","oiB/ha","N/ha",
                                                                ^
NO COPY: R/fvbn2c.R:268:74: style: Commas should always have a space after.
              Attribute2=c("BA_Proz","V_DhmR/ha","V_DhmR_HB/ha","oiB/ha","N/ha",
                                                                         ^
NO COPY: R/fvbn2c.R:270:45: style: Commas should always have a space after.
              "Gr\u00f6\u00dfen" = c("Wert","Standardfehler"),
                                            ^
NO COPY: R/fvbn2c.R:271:19: style: Put spaces around all infix operators.
              BAGR=bagr.list,AKL = akl.lab[1:A.k], DKL = dkl.lab,
                 ~^~
NO COPY: R/fvbn2c.R:271:30: style: Commas should always have a space after.
              BAGR=bagr.list,AKL = akl.lab[1:A.k], DKL = dkl.lab,
                             ^
NO COPY: R/fvbn2c.R:272:34: style: Put spaces around all infix operators.
              T.FVBN.Bagr.Akl.Dkl=Y.bagr.akl.dkl,
                                ~^~
NO COPY: R/fvbn2c.R:272:35: style: Words within variable and function names should be separated by '_' rather than '.'.
              T.FVBN.Bagr.Akl.Dkl=Y.bagr.akl.dkl,
                                  ^~~~~~~~~~~~~~
NO COPY: R/fvbn2c.R:273:35: style: Put spaces around all infix operators.
              FVBN.ha.Bagr.Akl.Dkl=Yha.bagr.akl.dkl,
                                 ~^~
NO COPY: R/fvbn2c.R:273:36: style: Words within variable and function names should be separated by '_' rather than '.'.
              FVBN.ha.Bagr.Akl.Dkl=Yha.bagr.akl.dkl,
                                   ^~~~~~~~~~~~~~~~
NO COPY: R/fvbn2c.R:274:30: style: Put spaces around all infix operators.
              nT.Bagr.Akl.Dkl=nT.bagr.akl.dkl))
                            ~^~
NO COPY: R/fvbn2c.R:274:31: style: Variable and function names should be all lowercase.
              nT.Bagr.Akl.Dkl=nT.bagr.akl.dkl))
                              ^~~~~~~~~~~~~~~
NO COPY: R/fvbn2c.R:274:31: style: Words within variable and function names should be separated by '_' rather than '.'.
              nT.Bagr.Akl.Dkl=nT.bagr.akl.dkl))
                              ^~~~~~~~~~~~~~~
NO COPY: R/fvbn2c.R:276:1: style: Trailing blank lines are superfluous.

^
NO COPY: R/fvbn2d.R:4:27: style: Commas should always have a space after.
          function(baeume,ecken,trakte,A,inv,BA.grupp,A.klass,D.klass,auswahl){
                          ^
NO COPY: R/fvbn2d.R:4:33: style: Commas should always have a space after.
          function(baeume,ecken,trakte,A,inv,BA.grupp,A.klass,D.klass,auswahl){
                                ^
NO COPY: R/fvbn2d.R:4:40: style: Commas should always have a space after.
          function(baeume,ecken,trakte,A,inv,BA.grupp,A.klass,D.klass,auswahl){
                                       ^
NO COPY: R/fvbn2d.R:4:42: style: Commas should always have a space after.
          function(baeume,ecken,trakte,A,inv,BA.grupp,A.klass,D.klass,auswahl){
                                         ^
NO COPY: R/fvbn2d.R:4:46: style: Commas should always have a space after.
          function(baeume,ecken,trakte,A,inv,BA.grupp,A.klass,D.klass,auswahl){
                                             ^
NO COPY: R/fvbn2d.R:4:55: style: Commas should always have a space after.
          function(baeume,ecken,trakte,A,inv,BA.grupp,A.klass,D.klass,auswahl){
                                                      ^
NO COPY: R/fvbn2d.R:4:63: style: Commas should always have a space after.
          function(baeume,ecken,trakte,A,inv,BA.grupp,A.klass,D.klass,auswahl){
                                                              ^
NO COPY: R/fvbn2d.R:4:71: style: Commas should always have a space after.
          function(baeume,ecken,trakte,A,inv,BA.grupp,A.klass,D.klass,auswahl){
                                                                      ^
NO COPY: R/fvbn2d.R:5:34: style: Commas should always have a space after.
  stratum <- stratum.fun(auswahl,ecken)
                                 ^
NO COPY: R/fvbn2d.R:12:28: style: Commas should always have a space after.
  names(baeume) <- sub(inv,names(baeume),replacement="")
                           ^
NO COPY: R/fvbn2d.R:12:42: style: Commas should always have a space after.
  names(baeume) <- sub(inv,names(baeume),replacement="")
                                         ^
NO COPY: R/fvbn2d.R:12:53: style: Put spaces around all infix operators.
  names(baeume) <- sub(inv,names(baeume),replacement="")
                                                   ~^~
NO COPY: R/fvbn2d.R:14:1: style: lines should not be more than 80 characters.
  baeume.s <- merge(baeume[TRUE, c("tnr", "enr", "ba", "alt", "bhd", "volv", "oib", "nha", "stfl")],
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2d.R:15:52: style: Commas should always have a space after.
                    stratum[TRUE, c("tnr", "enr")],by=c("tnr","enr"),all.y=T)
                                                   ^
NO COPY: R/fvbn2d.R:15:54: style: Put spaces around all infix operators.
                    stratum[TRUE, c("tnr", "enr")],by=c("tnr","enr"),all.y=T)
                                                    ~^~
NO COPY: R/fvbn2d.R:15:63: style: Commas should always have a space after.
                    stratum[TRUE, c("tnr", "enr")],by=c("tnr","enr"),all.y=T)
                                                              ^
NO COPY: R/fvbn2d.R:15:70: style: Commas should always have a space after.
                    stratum[TRUE, c("tnr", "enr")],by=c("tnr","enr"),all.y=T)
                                                                     ^
NO COPY: R/fvbn2d.R:15:75: style: Put spaces around all infix operators.
                    stratum[TRUE, c("tnr", "enr")],by=c("tnr","enr"),all.y=T)
                                                                         ~^~
NO COPY: R/fvbn2d.R:22:30: style: Commas should always have a space after.
  baeume.s <- merge(baeume.s,bagr.tab[TRUE, c("ICode", "bagr")],
                             ^
NO COPY: R/fvbn2d.R:23:39: style: Put spaces around all infix operators.
                                  by.x="ba",by.y="ICode",all.x=T)
                                     ~^~
NO COPY: R/fvbn2d.R:23:45: style: Commas should always have a space after.
                                  by.x="ba",by.y="ICode",all.x=T)
                                            ^
NO COPY: R/fvbn2d.R:23:49: style: Put spaces around all infix operators.
                                  by.x="ba",by.y="ICode",all.x=T)
                                               ~^~
NO COPY: R/fvbn2d.R:23:58: style: Commas should always have a space after.
                                  by.x="ba",by.y="ICode",all.x=T)
                                                         ^
NO COPY: R/fvbn2d.R:23:63: style: Put spaces around all infix operators.
                                  by.x="ba",by.y="ICode",all.x=T)
                                                             ~^~
NO COPY: R/fvbn2d.R:30:24: style: Commas should always have a space after.
  nT <- length(trakte[,1])
                       ^
NO COPY: R/fvbn2d.R:32:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  n.te.s <- length(stratum[,1])
  ^~~~~~
NO COPY: R/fvbn2d.R:32:29: style: Commas should always have a space after.
  n.te.s <- length(stratum[,1])
                            ^
NO COPY: R/fvbn2d.R:37:32: style: Commas should always have a space after.
  xy <- stats::aggregate(rep(1,length(stratum[,1])),by=list(stratum$tnr),sum)
                               ^
NO COPY: R/fvbn2d.R:37:48: style: Commas should always have a space after.
  xy <- stats::aggregate(rep(1,length(stratum[,1])),by=list(stratum$tnr),sum)
                                               ^
NO COPY: R/fvbn2d.R:37:53: style: Commas should always have a space after.
  xy <- stats::aggregate(rep(1,length(stratum[,1])),by=list(stratum$tnr),sum)
                                                    ^
NO COPY: R/fvbn2d.R:37:55: style: Put spaces around all infix operators.
  xy <- stats::aggregate(rep(1,length(stratum[,1])),by=list(stratum$tnr),sum)
                                                     ~^~
NO COPY: R/fvbn2d.R:37:74: style: Commas should always have a space after.
  xy <- stats::aggregate(rep(1,length(stratum[,1])),by=list(stratum$tnr),sum)
                                                                         ^
NO COPY: R/fvbn2d.R:39:1: style: lines should not be more than 80 characters.
  xy <- cbind(xy,stats::aggregate(ifelse(baeume.s$ba==999,baeume.s$stfl/10000,0),
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2d.R:39:18: style: Commas should always have a space after.
  xy <- cbind(xy,stats::aggregate(ifelse(baeume.s$ba==999,baeume.s$stfl/10000,0),
                 ^
NO COPY: R/fvbn2d.R:39:53: style: Put spaces around all infix operators.
  xy <- cbind(xy,stats::aggregate(ifelse(baeume.s$ba==999,baeume.s$stfl/10000,0),
                                                   ~^~~
NO COPY: R/fvbn2d.R:39:59: style: Commas should always have a space after.
  xy <- cbind(xy,stats::aggregate(ifelse(baeume.s$ba==999,baeume.s$stfl/10000,0),
                                                          ^
NO COPY: R/fvbn2d.R:39:72: style: Put spaces around all infix operators.
  xy <- cbind(xy,stats::aggregate(ifelse(baeume.s$ba==999,baeume.s$stfl/10000,0),
                                                                      ~^~
NO COPY: R/fvbn2d.R:39:79: style: Commas should always have a space after.
  xy <- cbind(xy,stats::aggregate(ifelse(baeume.s$ba==999,baeume.s$stfl/10000,0),
                                                                              ^
NO COPY: R/fvbn2d.R:40:21: style: Put spaces around all infix operators.
                  by=list(baeume.s$tnr),sum)$x)
                   ~^~
NO COPY: R/fvbn2d.R:40:41: style: Commas should always have a space after.
                  by=list(baeume.s$tnr),sum)$x)
                                        ^
NO COPY: R/fvbn2d.R:41:18: style: Commas should always have a space after.
  xy <- cbind(xy,stats::aggregate(ifelse(baeume.s$ba==998,baeume.s$stfl,0),
                 ^
NO COPY: R/fvbn2d.R:41:53: style: Put spaces around all infix operators.
  xy <- cbind(xy,stats::aggregate(ifelse(baeume.s$ba==998,baeume.s$stfl,0),
                                                   ~^~~
NO COPY: R/fvbn2d.R:41:59: style: Commas should always have a space after.
  xy <- cbind(xy,stats::aggregate(ifelse(baeume.s$ba==998,baeume.s$stfl,0),
                                                          ^
NO COPY: R/fvbn2d.R:41:73: style: Commas should always have a space after.
  xy <- cbind(xy,stats::aggregate(ifelse(baeume.s$ba==998,baeume.s$stfl,0),
                                                                        ^
NO COPY: R/fvbn2d.R:42:21: style: Put spaces around all infix operators.
                  by=list(baeume.s$tnr),sum)$x/10000)
                   ~^~
NO COPY: R/fvbn2d.R:42:41: style: Commas should always have a space after.
                  by=list(baeume.s$tnr),sum)$x/10000)
                                        ^
NO COPY: R/fvbn2d.R:42:47: style: Put spaces around all infix operators.
                  by=list(baeume.s$tnr),sum)$x/10000)
                                             ~^~
NO COPY: R/fvbn2d.R:43:24: style: Commas should always have a space after.
  names(xy) <- c("tnr","hbf","bl","ibl")
                       ^
NO COPY: R/fvbn2d.R:43:30: style: Commas should always have a space after.
  names(xy) <- c("tnr","hbf","bl","ibl")
                             ^
NO COPY: R/fvbn2d.R:43:35: style: Commas should always have a space after.
  names(xy) <- c("tnr","hbf","bl","ibl")
                                  ^
NO COPY: R/fvbn2d.R:44:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  n.t.s <- length(xy[,1])
  ^~~~~
NO COPY: R/fvbn2d.R:44:3: warning: local variable 'n.t.s' assigned but may not be used
  n.t.s <- length(xy[,1])
  ^~~~~
NO COPY: R/fvbn2d.R:44:23: style: Commas should always have a space after.
  n.t.s <- length(xy[,1])
                      ^
NO COPY: R/fvbn2d.R:45:43: style: Commas should always have a space after.
  xy <- merge(trakte[TRUE, c("tnr", "m")],xy,by=c("tnr"),all.x=T)
                                          ^
NO COPY: R/fvbn2d.R:45:46: style: Commas should always have a space after.
  xy <- merge(trakte[TRUE, c("tnr", "m")],xy,by=c("tnr"),all.x=T)
                                             ^
NO COPY: R/fvbn2d.R:45:48: style: Put spaces around all infix operators.
  xy <- merge(trakte[TRUE, c("tnr", "m")],xy,by=c("tnr"),all.x=T)
                                              ~^~
NO COPY: R/fvbn2d.R:45:58: style: Commas should always have a space after.
  xy <- merge(trakte[TRUE, c("tnr", "m")],xy,by=c("tnr"),all.x=T)
                                                         ^
NO COPY: R/fvbn2d.R:45:63: style: Put spaces around all infix operators.
  xy <- merge(trakte[TRUE, c("tnr", "m")],xy,by=c("tnr"),all.x=T)
                                                             ~^~
NO COPY: R/fvbn2d.R:48:22: style: Put spaces around all infix operators.
  xy$hbf.ba <- xy$hbf-xy$bl-xy$ibl
                    ~^~
NO COPY: R/fvbn2d.R:48:28: style: Put spaces around all infix operators.
  xy$hbf.ba <- xy$hbf-xy$bl-xy$ibl
                          ~^~
NO COPY: R/fvbn2d.R:49:1: style: lines should not be more than 80 characters.
  #k\u00e4/11.10.2014  wegen BA-Anteilen muss hbf je Trakt im Stratum erhalten bleiben
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2d.R:52:4: style: Commented code should be removed.
  #HBFl. [ha]
   ^~~~~~~~~~
NO COPY: R/fvbn2d.R:53:9: style: Use <-, not =, for assignment.
  r.list= r.variance.fun(xy[TRUE, c("m", "hbf")],nT)
        ^
NO COPY: R/fvbn2d.R:53:9: style: Put spaces around all infix operators.
  r.list= r.variance.fun(xy[TRUE, c("m", "hbf")],nT)
       ~^
NO COPY: R/fvbn2d.R:53:50: style: Commas should always have a space after.
  r.list= r.variance.fun(xy[TRUE, c("m", "hbf")],nT)
                                                 ^
NO COPY: R/fvbn2d.R:54:23: style: Put spaces around all infix operators.
  T.hbf <- r.list$R.xy*A
                     ~^~
NO COPY: R/fvbn2d.R:55:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  se.T.hbf <- sqrt(r.list$V.R.xy)*A
  ^~~~~~~~
NO COPY: R/fvbn2d.R:55:27: style: Words within variable and function names should be separated by '_' rather than '.'.
  se.T.hbf <- sqrt(r.list$V.R.xy)*A
                          ^~~~~~
NO COPY: R/fvbn2d.R:55:34: style: Put spaces around all infix operators.
  se.T.hbf <- sqrt(r.list$V.R.xy)*A
                                ~^~
NO COPY: R/fvbn2d.R:57:51: style: Commas should always have a space after.
  r.list <- r.variance.fun(xy[TRUE, c("m", "bl")],nT)
                                                  ^
NO COPY: R/fvbn2d.R:58:22: style: Put spaces around all infix operators.
  T.bl <- r.list$R.xy*A
                    ~^~
NO COPY: R/fvbn2d.R:59:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  se.T.bl <- sqrt(r.list$V.R.xy)*A
  ^~~~~~~
NO COPY: R/fvbn2d.R:59:26: style: Words within variable and function names should be separated by '_' rather than '.'.
  se.T.bl <- sqrt(r.list$V.R.xy)*A
                         ^~~~~~
NO COPY: R/fvbn2d.R:59:33: style: Put spaces around all infix operators.
  se.T.bl <- sqrt(r.list$V.R.xy)*A
                               ~^~
NO COPY: R/fvbn2d.R:61:52: style: Commas should always have a space after.
  r.list <- r.variance.fun(xy[TRUE, c("m", "ibl")],nT)
                                                   ^
NO COPY: R/fvbn2d.R:62:23: style: Put spaces around all infix operators.
  T.ibl <- r.list$R.xy*A
                     ~^~
NO COPY: R/fvbn2d.R:63:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  se.T.ibl <- sqrt(r.list$V.R.xy)*A
  ^~~~~~~~
NO COPY: R/fvbn2d.R:63:27: style: Words within variable and function names should be separated by '_' rather than '.'.
  se.T.ibl <- sqrt(r.list$V.R.xy)*A
                          ^~~~~~
NO COPY: R/fvbn2d.R:63:34: style: Put spaces around all infix operators.
  se.T.ibl <- sqrt(r.list$V.R.xy)*A
                                ~^~
NO COPY: R/fvbn2d.R:65:57: style: Commas should always have a space after.
  r.list <- r.variance.fun(xy[TRUE, c("hbf.ba", "hbf")],nT)
                                                        ^
NO COPY: R/fvbn2d.R:67:24: style: Words within variable and function names should be separated by '_' rather than '.'.
  se.lk <- sqrt(r.list$V.R.xy)
                       ^~~~~~
NO COPY: R/fvbn2d.R:73:29: style: Put spaces around all infix operators.
                      breaks=c(seq(0,A.klass[[1]],A.klass[[2]]),A.max),right=T))
                           ~^~
NO COPY: R/fvbn2d.R:73:38: style: Commas should always have a space after.
                      breaks=c(seq(0,A.klass[[1]],A.klass[[2]]),A.max),right=T))
                                     ^
NO COPY: R/fvbn2d.R:73:51: style: Commas should always have a space after.
                      breaks=c(seq(0,A.klass[[1]],A.klass[[2]]),A.max),right=T))
                                                  ^
NO COPY: R/fvbn2d.R:73:65: style: Commas should always have a space after.
                      breaks=c(seq(0,A.klass[[1]],A.klass[[2]]),A.max),right=T))
                                                                ^
NO COPY: R/fvbn2d.R:73:72: style: Commas should always have a space after.
                      breaks=c(seq(0,A.klass[[1]],A.klass[[2]]),A.max),right=T))
                                                                       ^
NO COPY: R/fvbn2d.R:73:77: style: Put spaces around all infix operators.
                      breaks=c(seq(0,A.klass[[1]],A.klass[[2]]),A.max),right=T))
                                                                           ~^~
NO COPY: R/fvbn2d.R:79:5: style: Place a space before left parenthesis, except in a function call.
  if(A.klass[[1]]>A.klass[[2]])
    ^
NO COPY: R/fvbn2d.R:79:18: style: Put spaces around all infix operators.
  if(A.klass[[1]]>A.klass[[2]])
                ~^~
NO COPY: R/fvbn2d.R:80:3: style: Opening curly braces should never go on their own line and should always be followed by a new line.
  {
  ^
NO COPY: R/fvbn2d.R:81:5: style: Words within variable and function names should be separated by '_' rather than '.'.
    max.A.k <- A.klass[[1]]/A.klass[[2]] + 1
    ^~~~~~~
NO COPY: R/fvbn2d.R:81:28: style: Put spaces around all infix operators.
    max.A.k <- A.klass[[1]]/A.klass[[2]] + 1
                          ~^~
NO COPY: R/fvbn2d.R:82:15: style: Words within variable and function names should be separated by '_' rather than '.'.
    if (A.k < max.A.k) {A.k <- max.A.k }
              ^~~~~~~
NO COPY: R/fvbn2d.R:82:24: style: Opening curly braces should never go on their own line and should always be followed by a new line.
    if (A.k < max.A.k) {A.k <- max.A.k }
                       ^
NO COPY: R/fvbn2d.R:82:32: style: Words within variable and function names should be separated by '_' rather than '.'.
    if (A.k < max.A.k) {A.k <- max.A.k }
                               ^~~~~~~
NO COPY: R/fvbn2d.R:82:40: style: Closing curly-braces should always be on their own line, unless it's followed by an else.
    if (A.k < max.A.k) {A.k <- max.A.k }
                                       ^
NO COPY: R/fvbn2d.R:89:3: style: Opening curly braces should never go on their own line and should always be followed by a new line.
  {
  ^
NO COPY: R/fvbn2d.R:90:1: style: lines should not be more than 80 characters.
    brks <- c(0,7,seq(D.klass[[1]]+D.klass[[3]],D.klass[[2]],D.klass[[3]]),D.max)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2d.R:90:17: style: Commas should always have a space after.
    brks <- c(0,7,seq(D.klass[[1]]+D.klass[[3]],D.klass[[2]],D.klass[[3]]),D.max)
                ^
NO COPY: R/fvbn2d.R:90:19: style: Commas should always have a space after.
    brks <- c(0,7,seq(D.klass[[1]]+D.klass[[3]],D.klass[[2]],D.klass[[3]]),D.max)
                  ^
NO COPY: R/fvbn2d.R:90:35: style: Put spaces around all infix operators.
    brks <- c(0,7,seq(D.klass[[1]]+D.klass[[3]],D.klass[[2]],D.klass[[3]]),D.max)
                                 ~^~
NO COPY: R/fvbn2d.R:90:49: style: Commas should always have a space after.
    brks <- c(0,7,seq(D.klass[[1]]+D.klass[[3]],D.klass[[2]],D.klass[[3]]),D.max)
                                                ^
NO COPY: R/fvbn2d.R:90:62: style: Commas should always have a space after.
    brks <- c(0,7,seq(D.klass[[1]]+D.klass[[3]],D.klass[[2]],D.klass[[3]]),D.max)
                                                             ^
NO COPY: R/fvbn2d.R:90:76: style: Commas should always have a space after.
    brks <- c(0,7,seq(D.klass[[1]]+D.klass[[3]],D.klass[[2]],D.klass[[3]]),D.max)
                                                                           ^
NO COPY: R/fvbn2d.R:92:3: style: Opening curly braces should never go on their own line and should always be followed by a new line.
  {
  ^
NO COPY: R/fvbn2d.R:93:32: style: Commas should always have a space after.
    brks <- c(seq(D.klass[[1]],D.klass[[2]],D.klass[[3]]),D.max)
                               ^
NO COPY: R/fvbn2d.R:93:45: style: Commas should always have a space after.
    brks <- c(seq(D.klass[[1]],D.klass[[2]],D.klass[[3]]),D.max)
                                            ^
NO COPY: R/fvbn2d.R:93:59: style: Commas should always have a space after.
    brks <- c(seq(D.klass[[1]],D.klass[[2]],D.klass[[3]]),D.max)
                                                          ^
NO COPY: R/fvbn2d.R:95:43: style: Put spaces around all infix operators.
  baeume.s$dkl <- cut(baeume.s$bhd, breaks=brks, right=F)
                                         ~^~
NO COPY: R/fvbn2d.R:95:55: style: Put spaces around all infix operators.
  baeume.s$dkl <- cut(baeume.s$bhd, breaks=brks, right=F)
                                                     ~^~
NO COPY: R/fvbn2d.R:101:5: style: Place a space before left parenthesis, except in a function call.
  if(D.klass[[2]]>D.klass[[3]])
    ^
NO COPY: R/fvbn2d.R:101:18: style: Put spaces around all infix operators.
  if(D.klass[[2]]>D.klass[[3]])
                ~^~
NO COPY: R/fvbn2d.R:102:3: style: Opening curly braces should never go on their own line and should always be followed by a new line.
  {
  ^
NO COPY: R/fvbn2d.R:103:5: style: Words within variable and function names should be separated by '_' rather than '.'.
    max.D.k <- (D.klass[[2]]-D.klass[[1]])/D.klass[[2]] + 2
    ^~~~~~~
NO COPY: R/fvbn2d.R:103:29: style: Put spaces around all infix operators.
    max.D.k <- (D.klass[[2]]-D.klass[[1]])/D.klass[[2]] + 2
                           ~^~
NO COPY: R/fvbn2d.R:103:43: style: Put spaces around all infix operators.
    max.D.k <- (D.klass[[2]]-D.klass[[1]])/D.klass[[2]] + 2
                                         ~^~
NO COPY: R/fvbn2d.R:104:15: style: Words within variable and function names should be separated by '_' rather than '.'.
    if (D.k < max.D.k) {D.k <- max.D.k }
              ^~~~~~~
NO COPY: R/fvbn2d.R:104:24: style: Opening curly braces should never go on their own line and should always be followed by a new line.
    if (D.k < max.D.k) {D.k <- max.D.k }
                       ^
NO COPY: R/fvbn2d.R:104:32: style: Words within variable and function names should be separated by '_' rather than '.'.
    if (D.k < max.D.k) {D.k <- max.D.k }
                               ^~~~~~~
NO COPY: R/fvbn2d.R:104:40: style: Closing curly-braces should always be on their own line, unless it's followed by an else.
    if (D.k < max.D.k) {D.k <- max.D.k }
                                       ^
NO COPY: R/fvbn2d.R:110:1: style: lines should not be more than 80 characters.
  #Es gibt 7 Zielgr\u00f6\u00dfen <Y>: BAF [ha], V [m^3Dh mR], VHb (nur Hauptbestand)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2d.R:114:1: style: lines should not be more than 80 characters.
  #F\u00fcr diese 7 "Gr\u00f6\u00dfen" werden jeweils der Gesamtwert ("Total") und der
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2d.R:115:1: style: lines should not be more than 80 characters.
  #Stichprobenfehler (SE) berechnet, und zwar jeweils f\u00fcr die 9 Baumartengruppen
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2d.R:117:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  Y.bagr.akl.dkl    <- array(dim=c(7,2,n.bagr,A.k,D.k))
  ^~~~~~~~~~~~~~
NO COPY: R/fvbn2d.R:117:33: style: Put spaces around all infix operators.
  Y.bagr.akl.dkl    <- array(dim=c(7,2,n.bagr,A.k,D.k))
                               ~^~
NO COPY: R/fvbn2d.R:117:38: style: Commas should always have a space after.
  Y.bagr.akl.dkl    <- array(dim=c(7,2,n.bagr,A.k,D.k))
                                     ^
NO COPY: R/fvbn2d.R:117:40: style: Commas should always have a space after.
  Y.bagr.akl.dkl    <- array(dim=c(7,2,n.bagr,A.k,D.k))
                                       ^
NO COPY: R/fvbn2d.R:117:47: style: Commas should always have a space after.
  Y.bagr.akl.dkl    <- array(dim=c(7,2,n.bagr,A.k,D.k))
                                              ^
NO COPY: R/fvbn2d.R:117:51: style: Commas should always have a space after.
  Y.bagr.akl.dkl    <- array(dim=c(7,2,n.bagr,A.k,D.k))
                                                  ^
NO COPY: R/fvbn2d.R:118:3: style: Variable and function names should be all lowercase.
  nT.bagr.akl.dkl   <- array(dim=c(n.bagr,A.k,D.k))
  ^~~~~~~~~~~~~~~
NO COPY: R/fvbn2d.R:118:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  nT.bagr.akl.dkl   <- array(dim=c(n.bagr,A.k,D.k))
  ^~~~~~~~~~~~~~~
NO COPY: R/fvbn2d.R:118:33: style: Put spaces around all infix operators.
  nT.bagr.akl.dkl   <- array(dim=c(n.bagr,A.k,D.k))
                               ~^~
NO COPY: R/fvbn2d.R:118:43: style: Commas should always have a space after.
  nT.bagr.akl.dkl   <- array(dim=c(n.bagr,A.k,D.k))
                                          ^
NO COPY: R/fvbn2d.R:118:47: style: Commas should always have a space after.
  nT.bagr.akl.dkl   <- array(dim=c(n.bagr,A.k,D.k))
                                              ^
NO COPY: R/fvbn2d.R:119:1: style: lines should not be more than 80 characters.
  #Hektarbezogene Kennwerte. urspr. 5 Zielgr\u00f6\u00dfen: Vha, VHbha, Bha, Nha, NDhha
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2d.R:122:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  Yha.bagr.akl.dkl  <- array(dim=c(7,2,n.bagr,A.k,D.k))
  ^~~~~~~~~~~~~~~~
NO COPY: R/fvbn2d.R:122:33: style: Put spaces around all infix operators.
  Yha.bagr.akl.dkl  <- array(dim=c(7,2,n.bagr,A.k,D.k))
                               ~^~
NO COPY: R/fvbn2d.R:122:38: style: Commas should always have a space after.
  Yha.bagr.akl.dkl  <- array(dim=c(7,2,n.bagr,A.k,D.k))
                                     ^
NO COPY: R/fvbn2d.R:122:40: style: Commas should always have a space after.
  Yha.bagr.akl.dkl  <- array(dim=c(7,2,n.bagr,A.k,D.k))
                                       ^
NO COPY: R/fvbn2d.R:122:47: style: Commas should always have a space after.
  Yha.bagr.akl.dkl  <- array(dim=c(7,2,n.bagr,A.k,D.k))
                                              ^
NO COPY: R/fvbn2d.R:122:51: style: Commas should always have a space after.
  Yha.bagr.akl.dkl  <- array(dim=c(7,2,n.bagr,A.k,D.k))
                                                  ^
NO COPY: R/fvbn2d.R:124:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  ant.bagr.akl.dkl  <- array(dim=c(2,A.k,D.k))
  ^~~~~~~~~~~~~~~~
NO COPY: R/fvbn2d.R:124:3: warning: local variable 'ant.bagr.akl.dkl' assigned but may not be used
  ant.bagr.akl.dkl  <- array(dim=c(2,A.k,D.k))
  ^~~~~~~~~~~~~~~~
NO COPY: R/fvbn2d.R:124:33: style: Put spaces around all infix operators.
  ant.bagr.akl.dkl  <- array(dim=c(2,A.k,D.k))
                               ~^~
NO COPY: R/fvbn2d.R:124:38: style: Commas should always have a space after.
  ant.bagr.akl.dkl  <- array(dim=c(2,A.k,D.k))
                                     ^
NO COPY: R/fvbn2d.R:124:42: style: Commas should always have a space after.
  ant.bagr.akl.dkl  <- array(dim=c(2,A.k,D.k))
                                         ^
NO COPY: R/fvbn2d.R:129:3: style: Opening curly braces should never go on their own line and should always be followed by a new line.
  {
  ^
NO COPY: R/fvbn2d.R:131:5: style: Opening curly braces should never go on their own line and should always be followed by a new line.
    {
    ^
NO COPY: R/fvbn2d.R:133:7: style: Opening curly braces should never go on their own line and should always be followed by a new line.
      {
      ^
NO COPY: R/fvbn2d.R:135:1: style: lines should not be more than 80 characters.
                      baeume.s[["bagr"]]==bagr.list[i]&baeume.s[["akl"]]==akl.lab[j]&baeume.s[["dkl"]]==dkl.lab[k],
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2d.R:135:41: style: Put spaces around all infix operators.
                      baeume.s[["bagr"]]==bagr.list[i]&baeume.s[["akl"]]==akl.lab[j]&baeume.s[["dkl"]]==dkl.lab[k],
                                       ~^~~
NO COPY: R/fvbn2d.R:135:55: style: Put spaces around all infix operators.
                      baeume.s[["bagr"]]==bagr.list[i]&baeume.s[["akl"]]==akl.lab[j]&baeume.s[["dkl"]]==dkl.lab[k],
                                                     ~^~
NO COPY: R/fvbn2d.R:135:73: style: Put spaces around all infix operators.
                      baeume.s[["bagr"]]==bagr.list[i]&baeume.s[["akl"]]==akl.lab[j]&baeume.s[["dkl"]]==dkl.lab[k],
                                                                       ~^~~
NO COPY: R/fvbn2d.R:135:85: style: Put spaces around all infix operators.
                      baeume.s[["bagr"]]==bagr.list[i]&baeume.s[["akl"]]==akl.lab[j]&baeume.s[["dkl"]]==dkl.lab[k],
                                                                                   ~^~
NO COPY: R/fvbn2d.R:135:103: style: Put spaces around all infix operators.
                      baeume.s[["bagr"]]==bagr.list[i]&baeume.s[["akl"]]==akl.lab[j]&baeume.s[["dkl"]]==dkl.lab[k],
                                                                                                     ~^~~
NO COPY: R/fvbn2d.R:136:1: style: lines should not be more than 80 characters.
                      c("tnr", "enr", "bhd", "dkl", "volv", "oib", "nha", "stfl")]
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2d.R:137:31: style: Commas should always have a space after.
        if (length(baeume.ba[,1])== 0)
                              ^
NO COPY: R/fvbn2d.R:137:34: style: Put spaces around all infix operators.
        if (length(baeume.ba[,1])== 0)
                                ~^
NO COPY: R/fvbn2d.R:138:9: style: Opening curly braces should never go on their own line and should always be followed by a new line.
        {
        ^
NO COPY: R/fvbn2d.R:139:1: style: lines should not be more than 80 characters.
           Y.bagr.akl.dkl[1:6,1,i,j,k]    <- rep(0,6)  #Zielgr\u00f6\u00dfe Total
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2d.R:139:12: style: Words within variable and function names should be separated by '_' rather than '.'.
           Y.bagr.akl.dkl[1:6,1,i,j,k]    <- rep(0,6)  #Zielgr\u00f6\u00dfe Total
           ^~~~~~~~~~~~~~
NO COPY: R/fvbn2d.R:139:31: style: Commas should always have a space after.
           Y.bagr.akl.dkl[1:6,1,i,j,k]    <- rep(0,6)  #Zielgr\u00f6\u00dfe Total
                              ^
NO COPY: R/fvbn2d.R:139:33: style: Commas should always have a space after.
           Y.bagr.akl.dkl[1:6,1,i,j,k]    <- rep(0,6)  #Zielgr\u00f6\u00dfe Total
                                ^
NO COPY: R/fvbn2d.R:139:35: style: Commas should always have a space after.
           Y.bagr.akl.dkl[1:6,1,i,j,k]    <- rep(0,6)  #Zielgr\u00f6\u00dfe Total
                                  ^
NO COPY: R/fvbn2d.R:139:37: style: Commas should always have a space after.
           Y.bagr.akl.dkl[1:6,1,i,j,k]    <- rep(0,6)  #Zielgr\u00f6\u00dfe Total
                                    ^
NO COPY: R/fvbn2d.R:139:52: style: Commas should always have a space after.
           Y.bagr.akl.dkl[1:6,1,i,j,k]    <- rep(0,6)  #Zielgr\u00f6\u00dfe Total
                                                   ^
NO COPY: R/fvbn2d.R:140:12: style: Words within variable and function names should be separated by '_' rather than '.'.
           Y.bagr.akl.dkl[1:6,2,i,j,k]    <- rep(0,6)  #Stichprobenfehler (SE)
           ^~~~~~~~~~~~~~
NO COPY: R/fvbn2d.R:140:31: style: Commas should always have a space after.
           Y.bagr.akl.dkl[1:6,2,i,j,k]    <- rep(0,6)  #Stichprobenfehler (SE)
                              ^
NO COPY: R/fvbn2d.R:140:33: style: Commas should always have a space after.
           Y.bagr.akl.dkl[1:6,2,i,j,k]    <- rep(0,6)  #Stichprobenfehler (SE)
                                ^
NO COPY: R/fvbn2d.R:140:35: style: Commas should always have a space after.
           Y.bagr.akl.dkl[1:6,2,i,j,k]    <- rep(0,6)  #Stichprobenfehler (SE)
                                  ^
NO COPY: R/fvbn2d.R:140:37: style: Commas should always have a space after.
           Y.bagr.akl.dkl[1:6,2,i,j,k]    <- rep(0,6)  #Stichprobenfehler (SE)
                                    ^
NO COPY: R/fvbn2d.R:140:52: style: Commas should always have a space after.
           Y.bagr.akl.dkl[1:6,2,i,j,k]    <- rep(0,6)  #Stichprobenfehler (SE)
                                                   ^
NO COPY: R/fvbn2d.R:141:12: style: Words within variable and function names should be separated by '_' rather than '.'.
           Yha.bagr.akl.dkl[1:5,1,i,j,k]  <- rep(0,5)
           ^~~~~~~~~~~~~~~~
NO COPY: R/fvbn2d.R:141:33: style: Commas should always have a space after.
           Yha.bagr.akl.dkl[1:5,1,i,j,k]  <- rep(0,5)
                                ^
NO COPY: R/fvbn2d.R:141:35: style: Commas should always have a space after.
           Yha.bagr.akl.dkl[1:5,1,i,j,k]  <- rep(0,5)
                                  ^
NO COPY: R/fvbn2d.R:141:37: style: Commas should always have a space after.
           Yha.bagr.akl.dkl[1:5,1,i,j,k]  <- rep(0,5)
                                    ^
NO COPY: R/fvbn2d.R:141:39: style: Commas should always have a space after.
           Yha.bagr.akl.dkl[1:5,1,i,j,k]  <- rep(0,5)
                                      ^
NO COPY: R/fvbn2d.R:141:52: style: Commas should always have a space after.
           Yha.bagr.akl.dkl[1:5,1,i,j,k]  <- rep(0,5)
                                                   ^
NO COPY: R/fvbn2d.R:142:12: style: Words within variable and function names should be separated by '_' rather than '.'.
           Yha.bagr.akl.dkl[1:5,1,i,j,k]  <- rep(0,5)
           ^~~~~~~~~~~~~~~~
NO COPY: R/fvbn2d.R:142:33: style: Commas should always have a space after.
           Yha.bagr.akl.dkl[1:5,1,i,j,k]  <- rep(0,5)
                                ^
NO COPY: R/fvbn2d.R:142:35: style: Commas should always have a space after.
           Yha.bagr.akl.dkl[1:5,1,i,j,k]  <- rep(0,5)
                                  ^
NO COPY: R/fvbn2d.R:142:37: style: Commas should always have a space after.
           Yha.bagr.akl.dkl[1:5,1,i,j,k]  <- rep(0,5)
                                    ^
NO COPY: R/fvbn2d.R:142:39: style: Commas should always have a space after.
           Yha.bagr.akl.dkl[1:5,1,i,j,k]  <- rep(0,5)
                                      ^
NO COPY: R/fvbn2d.R:142:52: style: Commas should always have a space after.
           Yha.bagr.akl.dkl[1:5,1,i,j,k]  <- rep(0,5)
                                                   ^
NO COPY: R/fvbn2d.R:143:12: style: Variable and function names should be all lowercase.
           nT.bagr.akl.dkl[i,j,k]    <- 0  #n PSU (Trakte)
           ^~~~~~~~~~~~~~~
NO COPY: R/fvbn2d.R:143:12: style: Words within variable and function names should be separated by '_' rather than '.'.
           nT.bagr.akl.dkl[i,j,k]    <- 0  #n PSU (Trakte)
           ^~~~~~~~~~~~~~~
NO COPY: R/fvbn2d.R:143:30: style: Commas should always have a space after.
           nT.bagr.akl.dkl[i,j,k]    <- 0  #n PSU (Trakte)
                             ^
NO COPY: R/fvbn2d.R:143:32: style: Commas should always have a space after.
           nT.bagr.akl.dkl[i,j,k]    <- 0  #n PSU (Trakte)
                               ^
NO COPY: R/fvbn2d.R:145:9: style: Opening curly braces should never go on their own line and should always be followed by a new line.
        {
        ^
NO COPY: R/fvbn2d.R:148:49: style: Commas should always have a space after.
          xy <- stats::aggregate(baeume.ba$stfl,by=list(baeume.ba$tnr),sum)
                                                ^
NO COPY: R/fvbn2d.R:148:51: style: Put spaces around all infix operators.
          xy <- stats::aggregate(baeume.ba$stfl,by=list(baeume.ba$tnr),sum)
                                                 ~^~
NO COPY: R/fvbn2d.R:148:72: style: Commas should always have a space after.
          xy <- stats::aggregate(baeume.ba$stfl,by=list(baeume.ba$tnr),sum)
                                                                       ^
NO COPY: R/fvbn2d.R:149:32: style: Commas should always have a space after.
          names(xy) <- c("tnr","x")
                               ^
NO COPY: R/fvbn2d.R:150:23: style: Put spaces around all infix operators.
          xy$x <- xy$x/10000*lk  #Umrechnung in ha  und L\u00fcckenkorrektur
                     ~^~
NO COPY: R/fvbn2d.R:150:29: style: Put spaces around all infix operators.
          xy$x <- xy$x/10000*lk  #Umrechnung in ha  und L\u00fcckenkorrektur
                           ~^~
NO COPY: R/fvbn2d.R:152:26: style: Commas should always have a space after.
          xy <- cbind(xy,stats::aggregate(baeume.ba$volv*baeume.ba$nha,
                         ^
NO COPY: R/fvbn2d.R:152:57: style: Put spaces around all infix operators.
          xy <- cbind(xy,stats::aggregate(baeume.ba$volv*baeume.ba$nha,
                                                       ~^~
NO COPY: R/fvbn2d.R:153:47: style: Put spaces around all infix operators.
                                            by=list(baeume.ba$tnr),sum)$x )
                                             ~^~
NO COPY: R/fvbn2d.R:153:68: style: Commas should always have a space after.
                                            by=list(baeume.ba$tnr),sum)$x )
                                                                   ^
NO COPY: R/fvbn2d.R:157:1: style: lines should not be more than 80 characters.
            stats::aggregate(baeume.ba$volv*baeume.ba$nha*ifelse(baeume.ba$stfl>0,1,0),
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2d.R:157:44: style: Put spaces around all infix operators.
            stats::aggregate(baeume.ba$volv*baeume.ba$nha*ifelse(baeume.ba$stfl>0,1,0),
                                          ~^~
NO COPY: R/fvbn2d.R:157:58: style: Put spaces around all infix operators.
            stats::aggregate(baeume.ba$volv*baeume.ba$nha*ifelse(baeume.ba$stfl>0,1,0),
                                                        ~^~
NO COPY: R/fvbn2d.R:157:80: style: Put spaces around all infix operators.
            stats::aggregate(baeume.ba$volv*baeume.ba$nha*ifelse(baeume.ba$stfl>0,1,0),
                                                                              ~^~
NO COPY: R/fvbn2d.R:157:83: style: Commas should always have a space after.
            stats::aggregate(baeume.ba$volv*baeume.ba$nha*ifelse(baeume.ba$stfl>0,1,0),
                                                                                  ^
NO COPY: R/fvbn2d.R:157:85: style: Commas should always have a space after.
            stats::aggregate(baeume.ba$volv*baeume.ba$nha*ifelse(baeume.ba$stfl>0,1,0),
                                                                                    ^
NO COPY: R/fvbn2d.R:158:47: style: Put spaces around all infix operators.
                                            by=list(baeume.ba$tnr),sum)$x )
                                             ~^~
NO COPY: R/fvbn2d.R:158:68: style: Commas should always have a space after.
                                            by=list(baeume.ba$tnr),sum)$x )
                                                                   ^
NO COPY: R/fvbn2d.R:161:26: style: Commas should always have a space after.
          xy <- cbind(xy,stats::aggregate(baeume.ba$oib*baeume.ba$nha,
                         ^
NO COPY: R/fvbn2d.R:161:56: style: Put spaces around all infix operators.
          xy <- cbind(xy,stats::aggregate(baeume.ba$oib*baeume.ba$nha,
                                                      ~^~
NO COPY: R/fvbn2d.R:162:47: style: Put spaces around all infix operators.
                                            by=list(baeume.ba$tnr),sum)$x/1000)
                                             ~^~
NO COPY: R/fvbn2d.R:162:68: style: Commas should always have a space after.
                                            by=list(baeume.ba$tnr),sum)$x/1000)
                                                                   ^
NO COPY: R/fvbn2d.R:162:74: style: Put spaces around all infix operators.
                                            by=list(baeume.ba$tnr),sum)$x/1000)
                                                                        ~^~
NO COPY: R/fvbn2d.R:165:1: style: lines should not be more than 80 characters.
          xy <- cbind(xy,stats::aggregate(baeume.ba$nha,by=list(baeume.ba$tnr),sum)$x)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2d.R:165:26: style: Commas should always have a space after.
          xy <- cbind(xy,stats::aggregate(baeume.ba$nha,by=list(baeume.ba$tnr),sum)$x)
                         ^
NO COPY: R/fvbn2d.R:165:57: style: Commas should always have a space after.
          xy <- cbind(xy,stats::aggregate(baeume.ba$nha,by=list(baeume.ba$tnr),sum)$x)
                                                        ^
NO COPY: R/fvbn2d.R:165:59: style: Put spaces around all infix operators.
          xy <- cbind(xy,stats::aggregate(baeume.ba$nha,by=list(baeume.ba$tnr),sum)$x)
                                                         ~^~
NO COPY: R/fvbn2d.R:165:80: style: Commas should always have a space after.
          xy <- cbind(xy,stats::aggregate(baeume.ba$nha,by=list(baeume.ba$tnr),sum)$x)
                                                                               ^
NO COPY: R/fvbn2d.R:169:1: style: lines should not be more than 80 characters.
          x.ndh <- try(stats::aggregate(baeume.ba$nha*ifelse(baeume.ba$bhd>=7,1,0),
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2d.R:169:54: style: Put spaces around all infix operators.
          x.ndh <- try(stats::aggregate(baeume.ba$nha*ifelse(baeume.ba$bhd>=7,1,0),
                                                    ~^~
NO COPY: R/fvbn2d.R:169:75: style: Put spaces around all infix operators.
          x.ndh <- try(stats::aggregate(baeume.ba$nha*ifelse(baeume.ba$bhd>=7,1,0),
                                                                         ~^~~
NO COPY: R/fvbn2d.R:169:79: style: Commas should always have a space after.
          x.ndh <- try(stats::aggregate(baeume.ba$nha*ifelse(baeume.ba$bhd>=7,1,0),
                                                                              ^
NO COPY: R/fvbn2d.R:169:81: style: Commas should always have a space after.
          x.ndh <- try(stats::aggregate(baeume.ba$nha*ifelse(baeume.ba$bhd>=7,1,0),
                                                                                ^
NO COPY: R/fvbn2d.R:170:17: style: Put spaces around all infix operators.
              by=list(baeume.ba$tnr),sum)$x, silent=T )
               ~^~
NO COPY: R/fvbn2d.R:170:38: style: Commas should always have a space after.
              by=list(baeume.ba$tnr),sum)$x, silent=T )
                                     ^
NO COPY: R/fvbn2d.R:170:52: style: Put spaces around all infix operators.
              by=list(baeume.ba$tnr),sum)$x, silent=T )
                                                  ~^~
NO COPY: R/fvbn2d.R:171:32: style: Commas should always have a space after.
          if (length(grep("7)",dkl.lab[k]))>0)
                               ^
NO COPY: R/fvbn2d.R:171:44: style: Put spaces around all infix operators.
          if (length(grep("7)",dkl.lab[k]))>0)
                                          ~^~
NO COPY: R/fvbn2d.R:172:11: style: Opening curly braces should never go on their own line and should always be followed by a new line.
          {
          ^
NO COPY: R/fvbn2d.R:173:28: style: Commas should always have a space after.
            x.ndh <- rep(0,length(xy[,1]))
                           ^
NO COPY: R/fvbn2d.R:173:39: style: Commas should always have a space after.
            x.ndh <- rep(0,length(xy[,1]))
                                      ^
NO COPY: R/fvbn2d.R:175:26: style: Commas should always have a space after.
          xy <- cbind(xy,x.ndh)
                         ^
NO COPY: R/fvbn2d.R:177:11: style: Words within variable and function names should be separated by '_' rather than '.'.
          x.ndh.hb <- try(stats::aggregate(baeume.ba$nha*ifelse(
          ^~~~~~~~
NO COPY: R/fvbn2d.R:177:57: style: Put spaces around all infix operators.
          x.ndh.hb <- try(stats::aggregate(baeume.ba$nha*ifelse(
                                                       ~^~
NO COPY: R/fvbn2d.R:178:28: style: Put spaces around all infix operators.
              baeume.ba$bhd>=7 & baeume.ba$stfl>0,1,0),
                          ~^~~
NO COPY: R/fvbn2d.R:178:48: style: Put spaces around all infix operators.
              baeume.ba$bhd>=7 & baeume.ba$stfl>0,1,0),
                                              ~^~
NO COPY: R/fvbn2d.R:178:51: style: Commas should always have a space after.
              baeume.ba$bhd>=7 & baeume.ba$stfl>0,1,0),
                                                  ^
NO COPY: R/fvbn2d.R:178:53: style: Commas should always have a space after.
              baeume.ba$bhd>=7 & baeume.ba$stfl>0,1,0),
                                                    ^
NO COPY: R/fvbn2d.R:179:17: style: Put spaces around all infix operators.
              by=list(baeume.ba$tnr),sum)$x, silent=T )
               ~^~
NO COPY: R/fvbn2d.R:179:38: style: Commas should always have a space after.
              by=list(baeume.ba$tnr),sum)$x, silent=T )
                                     ^
NO COPY: R/fvbn2d.R:179:52: style: Put spaces around all infix operators.
              by=list(baeume.ba$tnr),sum)$x, silent=T )
                                                  ~^~
NO COPY: R/fvbn2d.R:180:32: style: Commas should always have a space after.
          if (length(grep("7)",dkl.lab[k]))>0)
                               ^
NO COPY: R/fvbn2d.R:180:44: style: Put spaces around all infix operators.
          if (length(grep("7)",dkl.lab[k]))>0)
                                          ~^~
NO COPY: R/fvbn2d.R:181:11: style: Opening curly braces should never go on their own line and should always be followed by a new line.
          {
          ^
NO COPY: R/fvbn2d.R:182:13: style: Words within variable and function names should be separated by '_' rather than '.'.
            x.ndh.hb <- rep(0,length(xy[,1]))
            ^~~~~~~~
NO COPY: R/fvbn2d.R:182:31: style: Commas should always have a space after.
            x.ndh.hb <- rep(0,length(xy[,1]))
                              ^
NO COPY: R/fvbn2d.R:182:42: style: Commas should always have a space after.
            x.ndh.hb <- rep(0,length(xy[,1]))
                                         ^
NO COPY: R/fvbn2d.R:184:26: style: Commas should always have a space after.
          xy <- cbind(xy,x.ndh.hb)
                         ^
NO COPY: R/fvbn2d.R:184:26: style: Words within variable and function names should be separated by '_' rather than '.'.
          xy <- cbind(xy,x.ndh.hb)
                         ^~~~~~~~
NO COPY: R/fvbn2d.R:190:11: style: Variable and function names should be all lowercase.
          nT.bagr.akl.dkl[i,j,k] <- length(xy[,1])
          ^~~~~~~~~~~~~~~
NO COPY: R/fvbn2d.R:190:11: style: Words within variable and function names should be separated by '_' rather than '.'.
          nT.bagr.akl.dkl[i,j,k] <- length(xy[,1])
          ^~~~~~~~~~~~~~~
NO COPY: R/fvbn2d.R:190:29: style: Commas should always have a space after.
          nT.bagr.akl.dkl[i,j,k] <- length(xy[,1])
                            ^
NO COPY: R/fvbn2d.R:190:31: style: Commas should always have a space after.
          nT.bagr.akl.dkl[i,j,k] <- length(xy[,1])
                              ^
NO COPY: R/fvbn2d.R:190:48: style: Commas should always have a space after.
          nT.bagr.akl.dkl[i,j,k] <- length(xy[,1])
                                               ^
NO COPY: R/fvbn2d.R:191:1: style: lines should not be more than 80 characters.
          #---  Erg\u00e4nzug 11.10. <m_bhb>    Hinweis: Offset f\u00fcr Indizierung ange-
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2d.R:195:56: style: Commas should always have a space after.
          xy <- merge(xy.s[TRUE, c("tnr", "m", "hbf")],xy,by=c("tnr"),all.x=T)
                                                       ^
NO COPY: R/fvbn2d.R:195:59: style: Commas should always have a space after.
          xy <- merge(xy.s[TRUE, c("tnr", "m", "hbf")],xy,by=c("tnr"),all.x=T)
                                                          ^
NO COPY: R/fvbn2d.R:195:61: style: Put spaces around all infix operators.
          xy <- merge(xy.s[TRUE, c("tnr", "m", "hbf")],xy,by=c("tnr"),all.x=T)
                                                           ~^~
NO COPY: R/fvbn2d.R:195:71: style: Commas should always have a space after.
          xy <- merge(xy.s[TRUE, c("tnr", "m", "hbf")],xy,by=c("tnr"),all.x=T)
                                                                      ^
NO COPY: R/fvbn2d.R:195:76: style: Put spaces around all infix operators.
          xy <- merge(xy.s[TRUE, c("tnr", "m", "hbf")],xy,by=c("tnr"),all.x=T)
                                                                          ~^~
NO COPY: R/fvbn2d.R:196:12: style: Commented code should be removed.
          #xy <- merge(trakte[TRUE, c("tnr", "m,m_bhb")],xy,by=c("tnr"),all.x=T)
           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2d.R:200:11: style: Opening curly braces should never go on their own line and should always be followed by a new line.
          {
          ^
NO COPY: R/fvbn2d.R:201:1: style: lines should not be more than 80 characters.
            #Zielgr\u00f6\u00dfen Y {BAF,V,VHb,B,N,NDh,NDhHb)   (Offset von (2+l) auf (3+l)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2d.R:202:1: style: lines should not be more than 80 characters.
            #wegen zus\u00e4tzlichem Attribut <m_bhb> ge\u00e4ndert (k\u00e4/11.10.14)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2d.R:203:49: style: Commas should always have a space after.
            R.list <- r.variance.fun(cbind(xy$m,xy[,(3+l)]),nT)
                                                ^
NO COPY: R/fvbn2d.R:203:53: style: Commas should always have a space after.
            R.list <- r.variance.fun(cbind(xy$m,xy[,(3+l)]),nT)
                                                    ^
NO COPY: R/fvbn2d.R:203:53: style: Place a space before left parenthesis, except in a function call.
            R.list <- r.variance.fun(cbind(xy$m,xy[,(3+l)]),nT)
                                                    ^
NO COPY: R/fvbn2d.R:203:55: style: Put spaces around all infix operators.
            R.list <- r.variance.fun(cbind(xy$m,xy[,(3+l)]),nT)
                                                     ~^~
NO COPY: R/fvbn2d.R:203:61: style: Commas should always have a space after.
            R.list <- r.variance.fun(cbind(xy$m,xy[,(3+l)]),nT)
                                                            ^
NO COPY: R/fvbn2d.R:205:13: style: Words within variable and function names should be separated by '_' rather than '.'.
            Y.bagr.akl.dkl[l,1,i,j,k] <- R.list$R.xy*A
            ^~~~~~~~~~~~~~
NO COPY: R/fvbn2d.R:205:30: style: Commas should always have a space after.
            Y.bagr.akl.dkl[l,1,i,j,k] <- R.list$R.xy*A
                             ^
NO COPY: R/fvbn2d.R:205:32: style: Commas should always have a space after.
            Y.bagr.akl.dkl[l,1,i,j,k] <- R.list$R.xy*A
                               ^
NO COPY: R/fvbn2d.R:205:34: style: Commas should always have a space after.
            Y.bagr.akl.dkl[l,1,i,j,k] <- R.list$R.xy*A
                                 ^
NO COPY: R/fvbn2d.R:205:36: style: Commas should always have a space after.
            Y.bagr.akl.dkl[l,1,i,j,k] <- R.list$R.xy*A
                                   ^
NO COPY: R/fvbn2d.R:205:53: style: Put spaces around all infix operators.
            Y.bagr.akl.dkl[l,1,i,j,k] <- R.list$R.xy*A
                                                   ~^~
NO COPY: R/fvbn2d.R:206:14: style: Commented code should be removed.
            #sum(xy[,(1+l)])/sum(x)*A *ifelse(l==1,lk,1)
             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2d.R:207:1: style: lines should not be more than 80 characters.
                                      #L\u00fcckenkorrektur bei BAF bereits erfolgt
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2d.R:209:13: style: Words within variable and function names should be separated by '_' rather than '.'.
            Y.bagr.akl.dkl[l,2,i,j,k] <- sqrt(R.list$V.R.xy)*A
            ^~~~~~~~~~~~~~
NO COPY: R/fvbn2d.R:209:30: style: Commas should always have a space after.
            Y.bagr.akl.dkl[l,2,i,j,k] <- sqrt(R.list$V.R.xy)*A
                             ^
NO COPY: R/fvbn2d.R:209:32: style: Commas should always have a space after.
            Y.bagr.akl.dkl[l,2,i,j,k] <- sqrt(R.list$V.R.xy)*A
                               ^
NO COPY: R/fvbn2d.R:209:34: style: Commas should always have a space after.
            Y.bagr.akl.dkl[l,2,i,j,k] <- sqrt(R.list$V.R.xy)*A
                                 ^
NO COPY: R/fvbn2d.R:209:36: style: Commas should always have a space after.
            Y.bagr.akl.dkl[l,2,i,j,k] <- sqrt(R.list$V.R.xy)*A
                                   ^
NO COPY: R/fvbn2d.R:209:54: style: Words within variable and function names should be separated by '_' rather than '.'.
            Y.bagr.akl.dkl[l,2,i,j,k] <- sqrt(R.list$V.R.xy)*A
                                                     ^~~~~~
NO COPY: R/fvbn2d.R:209:61: style: Put spaces around all infix operators.
            Y.bagr.akl.dkl[l,2,i,j,k] <- sqrt(R.list$V.R.xy)*A
                                                           ~^~
NO COPY: R/fvbn2d.R:213:1: style: lines should not be more than 80 characters.
            #if (l > 1)    #Hinweis: l+1 = Spalte der Zielgr\u00f6\u00dfe in xy; Spalte 2
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2d.R:214:1: style: lines should not be more than 80 characters.
                          #ist BA-Fl\u00e4che (HB) als Bezugsfl\u00e4che (= xy$x)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2d.R:216:13: style: Opening curly braces should never go on their own line and should always be followed by a new line.
            {
            ^
NO COPY: R/fvbn2d.R:217:53: style: Commas should always have a space after.
              R.list <- r.variance.fun(cbind(xy$hbf,xy[,(3+l)]),nT)
                                                    ^
NO COPY: R/fvbn2d.R:217:57: style: Commas should always have a space after.
              R.list <- r.variance.fun(cbind(xy$hbf,xy[,(3+l)]),nT)
                                                        ^
NO COPY: R/fvbn2d.R:217:57: style: Place a space before left parenthesis, except in a function call.
              R.list <- r.variance.fun(cbind(xy$hbf,xy[,(3+l)]),nT)
                                                        ^
NO COPY: R/fvbn2d.R:217:59: style: Put spaces around all infix operators.
              R.list <- r.variance.fun(cbind(xy$hbf,xy[,(3+l)]),nT)
                                                         ~^~
NO COPY: R/fvbn2d.R:217:65: style: Commas should always have a space after.
              R.list <- r.variance.fun(cbind(xy$hbf,xy[,(3+l)]),nT)
                                                                ^
NO COPY: R/fvbn2d.R:219:41: style: Put spaces around all infix operators.
              R.list$R.xy <- R.list$R.xy*100
                                       ~^~
NO COPY: R/fvbn2d.R:220:22: style: Words within variable and function names should be separated by '_' rather than '.'.
              R.list$V.R.xy <- R.list$V.R.xy*10000
                     ^~~~~~
NO COPY: R/fvbn2d.R:220:39: style: Words within variable and function names should be separated by '_' rather than '.'.
              R.list$V.R.xy <- R.list$V.R.xy*10000
                                      ^~~~~~
NO COPY: R/fvbn2d.R:220:45: style: Put spaces around all infix operators.
              R.list$V.R.xy <- R.list$V.R.xy*10000
                                           ~^~
NO COPY: R/fvbn2d.R:222:13: style: Opening curly braces should never go on their own line and should always be followed by a new line.
            {
            ^
NO COPY: R/fvbn2d.R:227:41: style: Commas should always have a space after.
              lk.c <- ifelse(l %in% c(3,7) ,lk,1) #lk.c macht bei HB-Vorrat
                                        ^
NO COPY: R/fvbn2d.R:227:44: style: Commas should never have a space before.
              lk.c <- ifelse(l %in% c(3,7) ,lk,1) #lk.c macht bei HB-Vorrat
                                          ~^
NO COPY: R/fvbn2d.R:227:45: style: Commas should always have a space after.
              lk.c <- ifelse(l %in% c(3,7) ,lk,1) #lk.c macht bei HB-Vorrat
                                            ^
NO COPY: R/fvbn2d.R:227:48: style: Commas should always have a space after.
              lk.c <- ifelse(l %in% c(3,7) ,lk,1) #lk.c macht bei HB-Vorrat
                                               ^
NO COPY: R/fvbn2d.R:228:1: style: lines should not be more than 80 characters.
              #L\u00fcckenkorrektur r\u00fcckg\u00e4ngig Hinweis: Offset von (2+l) auf (3+l)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2d.R:229:1: style: lines should not be more than 80 characters.
              #wegen zus\u00e4tzlichem Attribut <m_bhb> ge\u00e4ndert (k\u00e4/11.10.14)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2d.R:230:50: style: Put spaces around all infix operators.
              R.list <- r.variance.fun(cbind(xy$x/lk.c,xy[,(3+l)]),nT)
                                                ~^~
NO COPY: R/fvbn2d.R:230:56: style: Commas should always have a space after.
              R.list <- r.variance.fun(cbind(xy$x/lk.c,xy[,(3+l)]),nT)
                                                       ^
NO COPY: R/fvbn2d.R:230:60: style: Commas should always have a space after.
              R.list <- r.variance.fun(cbind(xy$x/lk.c,xy[,(3+l)]),nT)
                                                           ^
NO COPY: R/fvbn2d.R:230:60: style: Place a space before left parenthesis, except in a function call.
              R.list <- r.variance.fun(cbind(xy$x/lk.c,xy[,(3+l)]),nT)
                                                           ^
NO COPY: R/fvbn2d.R:230:62: style: Put spaces around all infix operators.
              R.list <- r.variance.fun(cbind(xy$x/lk.c,xy[,(3+l)]),nT)
                                                            ~^~
NO COPY: R/fvbn2d.R:230:68: style: Commas should always have a space after.
              R.list <- r.variance.fun(cbind(xy$x/lk.c,xy[,(3+l)]),nT)
                                                                   ^
NO COPY: R/fvbn2d.R:234:13: style: Words within variable and function names should be separated by '_' rather than '.'.
            Yha.bagr.akl.dkl[l.ha,1,i,j,k] <- R.list$R.xy
            ^~~~~~~~~~~~~~~~
NO COPY: R/fvbn2d.R:234:35: style: Commas should always have a space after.
            Yha.bagr.akl.dkl[l.ha,1,i,j,k] <- R.list$R.xy
                                  ^
NO COPY: R/fvbn2d.R:234:37: style: Commas should always have a space after.
            Yha.bagr.akl.dkl[l.ha,1,i,j,k] <- R.list$R.xy
                                    ^
NO COPY: R/fvbn2d.R:234:39: style: Commas should always have a space after.
            Yha.bagr.akl.dkl[l.ha,1,i,j,k] <- R.list$R.xy
                                      ^
NO COPY: R/fvbn2d.R:234:41: style: Commas should always have a space after.
            Yha.bagr.akl.dkl[l.ha,1,i,j,k] <- R.list$R.xy
                                        ^
NO COPY: R/fvbn2d.R:235:30: style: Commented code should be removed.
              #              Y.bagr.akl.dkl[l,1,i,j,k]/Y.bagr.akl.dkl[1,1,i,j,k]
                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2d.R:236:13: style: Words within variable and function names should be separated by '_' rather than '.'.
            Yha.bagr.akl.dkl[l.ha,2,i,j,k] <- sqrt(R.list$V.R.xy)
            ^~~~~~~~~~~~~~~~
NO COPY: R/fvbn2d.R:236:35: style: Commas should always have a space after.
            Yha.bagr.akl.dkl[l.ha,2,i,j,k] <- sqrt(R.list$V.R.xy)
                                  ^
NO COPY: R/fvbn2d.R:236:37: style: Commas should always have a space after.
            Yha.bagr.akl.dkl[l.ha,2,i,j,k] <- sqrt(R.list$V.R.xy)
                                    ^
NO COPY: R/fvbn2d.R:236:39: style: Commas should always have a space after.
            Yha.bagr.akl.dkl[l.ha,2,i,j,k] <- sqrt(R.list$V.R.xy)
                                      ^
NO COPY: R/fvbn2d.R:236:41: style: Commas should always have a space after.
            Yha.bagr.akl.dkl[l.ha,2,i,j,k] <- sqrt(R.list$V.R.xy)
                                        ^
NO COPY: R/fvbn2d.R:236:59: style: Words within variable and function names should be separated by '_' rather than '.'.
            Yha.bagr.akl.dkl[l.ha,2,i,j,k] <- sqrt(R.list$V.R.xy)
                                                          ^~~~~~
NO COPY: R/fvbn2d.R:247:5: style: Place a space before left parenthesis, except in a function call.
  if(n.bagr > 1)
    ^
NO COPY: R/fvbn2d.R:248:3: style: Opening curly braces should never go on their own line and should always be followed by a new line.
  {
  ^
NO COPY: R/fvbn2d.R:250:14: style: Commas should always have a space after.
      baeume,ecken,trakte,A,inv,
             ^
NO COPY: R/fvbn2d.R:250:20: style: Commas should always have a space after.
      baeume,ecken,trakte,A,inv,
                   ^
NO COPY: R/fvbn2d.R:250:27: style: Commas should always have a space after.
      baeume,ecken,trakte,A,inv,
                          ^
NO COPY: R/fvbn2d.R:250:29: style: Commas should always have a space after.
      baeume,ecken,trakte,A,inv,
                            ^
NO COPY: R/fvbn2d.R:251:43: style: Commas should always have a space after.
      list(bagr.lab = c("Alle Baumarten"),ba.grupp =list(c(10:299))),
                                          ^
NO COPY: R/fvbn2d.R:251:52: style: Put spaces around all infix operators.
      list(bagr.lab = c("Alle Baumarten"),ba.grupp =list(c(10:299))),
                                                   ^~
NO COPY: R/fvbn2d.R:252:15: style: Commas should always have a space after.
      A.klass,D.klass,auswahl)
              ^
NO COPY: R/fvbn2d.R:252:23: style: Commas should always have a space after.
      A.klass,D.klass,auswahl)
                      ^
NO COPY: R/fvbn2d.R:253:25: style: Put spaces around all infix operators.
    t.fvbn  <- array(dim=c(7,2,(n.bagr+1),A.k,D.k))
                       ~^~
NO COPY: R/fvbn2d.R:253:30: style: Commas should always have a space after.
    t.fvbn  <- array(dim=c(7,2,(n.bagr+1),A.k,D.k))
                             ^
NO COPY: R/fvbn2d.R:253:32: style: Commas should always have a space after.
    t.fvbn  <- array(dim=c(7,2,(n.bagr+1),A.k,D.k))
                               ^
NO COPY: R/fvbn2d.R:253:32: style: Place a space before left parenthesis, except in a function call.
    t.fvbn  <- array(dim=c(7,2,(n.bagr+1),A.k,D.k))
                               ^
NO COPY: R/fvbn2d.R:253:39: style: Put spaces around all infix operators.
    t.fvbn  <- array(dim=c(7,2,(n.bagr+1),A.k,D.k))
                                     ~^~
NO COPY: R/fvbn2d.R:253:43: style: Commas should always have a space after.
    t.fvbn  <- array(dim=c(7,2,(n.bagr+1),A.k,D.k))
                                          ^
NO COPY: R/fvbn2d.R:253:47: style: Commas should always have a space after.
    t.fvbn  <- array(dim=c(7,2,(n.bagr+1),A.k,D.k))
                                              ^
NO COPY: R/fvbn2d.R:254:25: style: Put spaces around all infix operators.
    fvbn.ha <- array(dim=c(7,2,(n.bagr+1),A.k,D.k))
                       ~^~
NO COPY: R/fvbn2d.R:254:30: style: Commas should always have a space after.
    fvbn.ha <- array(dim=c(7,2,(n.bagr+1),A.k,D.k))
                             ^
NO COPY: R/fvbn2d.R:254:32: style: Commas should always have a space after.
    fvbn.ha <- array(dim=c(7,2,(n.bagr+1),A.k,D.k))
                               ^
NO COPY: R/fvbn2d.R:254:32: style: Place a space before left parenthesis, except in a function call.
    fvbn.ha <- array(dim=c(7,2,(n.bagr+1),A.k,D.k))
                               ^
NO COPY: R/fvbn2d.R:254:39: style: Put spaces around all infix operators.
    fvbn.ha <- array(dim=c(7,2,(n.bagr+1),A.k,D.k))
                                     ~^~
NO COPY: R/fvbn2d.R:254:43: style: Commas should always have a space after.
    fvbn.ha <- array(dim=c(7,2,(n.bagr+1),A.k,D.k))
                                          ^
NO COPY: R/fvbn2d.R:254:47: style: Commas should always have a space after.
    fvbn.ha <- array(dim=c(7,2,(n.bagr+1),A.k,D.k))
                                              ^
NO COPY: R/fvbn2d.R:255:25: style: Put spaces around all infix operators.
    nt      <- array(dim=c((n.bagr+1),A.k,D.k))
                       ~^~
NO COPY: R/fvbn2d.R:255:28: style: Place a space before left parenthesis, except in a function call.
    nt      <- array(dim=c((n.bagr+1),A.k,D.k))
                           ^
NO COPY: R/fvbn2d.R:255:35: style: Put spaces around all infix operators.
    nt      <- array(dim=c((n.bagr+1),A.k,D.k))
                                 ~^~
NO COPY: R/fvbn2d.R:255:39: style: Commas should always have a space after.
    nt      <- array(dim=c((n.bagr+1),A.k,D.k))
                                      ^
NO COPY: R/fvbn2d.R:255:43: style: Commas should always have a space after.
    nt      <- array(dim=c((n.bagr+1),A.k,D.k))
                                          ^
NO COPY: R/fvbn2d.R:256:13: style: Commas should always have a space after.
    t.fvbn[,,1:n.bagr,,] <- Y.bagr.akl.dkl
            ^
NO COPY: R/fvbn2d.R:256:23: style: Commas should always have a space after.
    t.fvbn[,,1:n.bagr,,] <- Y.bagr.akl.dkl
                      ^
NO COPY: R/fvbn2d.R:256:29: style: Words within variable and function names should be separated by '_' rather than '.'.
    t.fvbn[,,1:n.bagr,,] <- Y.bagr.akl.dkl
                            ^~~~~~~~~~~~~~
NO COPY: R/fvbn2d.R:257:14: style: Commas should always have a space after.
    fvbn.ha[,,1:n.bagr,,]<- Yha.bagr.akl.dkl
             ^
NO COPY: R/fvbn2d.R:257:24: style: Commas should always have a space after.
    fvbn.ha[,,1:n.bagr,,]<- Yha.bagr.akl.dkl
                       ^
NO COPY: R/fvbn2d.R:257:26: style: Put spaces around all infix operators.
    fvbn.ha[,,1:n.bagr,,]<- Yha.bagr.akl.dkl
                        ~^
NO COPY: R/fvbn2d.R:257:29: style: Words within variable and function names should be separated by '_' rather than '.'.
    fvbn.ha[,,1:n.bagr,,]<- Yha.bagr.akl.dkl
                            ^~~~~~~~~~~~~~~~
NO COPY: R/fvbn2d.R:258:17: style: Commas should always have a space after.
    nt[1:n.bagr,,]       <- nT.bagr.akl.dkl
                ^
NO COPY: R/fvbn2d.R:258:29: style: Variable and function names should be all lowercase.
    nt[1:n.bagr,,]       <- nT.bagr.akl.dkl
                            ^~~~~~~~~~~~~~~
NO COPY: R/fvbn2d.R:258:29: style: Words within variable and function names should be separated by '_' rather than '.'.
    nt[1:n.bagr,,]       <- nT.bagr.akl.dkl
                            ^~~~~~~~~~~~~~~
NO COPY: R/fvbn2d.R:259:13: style: Commas should always have a space after.
    t.fvbn[,,(n.bagr+1),,]   <- fvbn.alleba$T.FVBN.Bagr.Akl.Dkl
            ^
NO COPY: R/fvbn2d.R:259:14: style: Place a space before left parenthesis, except in a function call.
    t.fvbn[,,(n.bagr+1),,]   <- fvbn.alleba$T.FVBN.Bagr.Akl.Dkl
             ^
NO COPY: R/fvbn2d.R:259:21: style: Put spaces around all infix operators.
    t.fvbn[,,(n.bagr+1),,]   <- fvbn.alleba$T.FVBN.Bagr.Akl.Dkl
                   ~^~
NO COPY: R/fvbn2d.R:259:25: style: Commas should always have a space after.
    t.fvbn[,,(n.bagr+1),,]   <- fvbn.alleba$T.FVBN.Bagr.Akl.Dkl
                        ^
NO COPY: R/fvbn2d.R:259:45: style: Words within variable and function names should be separated by '_' rather than '.'.
    t.fvbn[,,(n.bagr+1),,]   <- fvbn.alleba$T.FVBN.Bagr.Akl.Dkl
                                            ^~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2d.R:260:14: style: Commas should always have a space after.
    fvbn.ha[,,(n.bagr+1),,]  <- fvbn.alleba$FVBN.ha.Bagr.Akl.Dkl
             ^
NO COPY: R/fvbn2d.R:260:15: style: Place a space before left parenthesis, except in a function call.
    fvbn.ha[,,(n.bagr+1),,]  <- fvbn.alleba$FVBN.ha.Bagr.Akl.Dkl
              ^
NO COPY: R/fvbn2d.R:260:22: style: Put spaces around all infix operators.
    fvbn.ha[,,(n.bagr+1),,]  <- fvbn.alleba$FVBN.ha.Bagr.Akl.Dkl
                    ~^~
NO COPY: R/fvbn2d.R:260:26: style: Commas should always have a space after.
    fvbn.ha[,,(n.bagr+1),,]  <- fvbn.alleba$FVBN.ha.Bagr.Akl.Dkl
                         ^
NO COPY: R/fvbn2d.R:260:45: style: Words within variable and function names should be separated by '_' rather than '.'.
    fvbn.ha[,,(n.bagr+1),,]  <- fvbn.alleba$FVBN.ha.Bagr.Akl.Dkl
                                            ^~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2d.R:261:15: style: Put spaces around all infix operators.
    nt[(n.bagr+1),,]         <- fvbn.alleba$nT.Bagr.Akl.Dkl
             ~^~
NO COPY: R/fvbn2d.R:261:19: style: Commas should always have a space after.
    nt[(n.bagr+1),,]         <- fvbn.alleba$nT.Bagr.Akl.Dkl
                  ^
NO COPY: R/fvbn2d.R:261:45: style: Variable and function names should be all lowercase.
    nt[(n.bagr+1),,]         <- fvbn.alleba$nT.Bagr.Akl.Dkl
                                            ^~~~~~~~~~~~~~~
NO COPY: R/fvbn2d.R:261:45: style: Words within variable and function names should be separated by '_' rather than '.'.
    nt[(n.bagr+1),,]         <- fvbn.alleba$nT.Bagr.Akl.Dkl
                                            ^~~~~~~~~~~~~~~
NO COPY: R/fvbn2d.R:262:5: style: Words within variable and function names should be separated by '_' rather than '.'.
    Y.bagr.akl.dkl       <- t.fvbn
    ^~~~~~~~~~~~~~
NO COPY: R/fvbn2d.R:263:5: style: Words within variable and function names should be separated by '_' rather than '.'.
    Yha.bagr.akl.dkl     <- fvbn.ha
    ^~~~~~~~~~~~~~~~
NO COPY: R/fvbn2d.R:264:5: style: Variable and function names should be all lowercase.
    nT.bagr.akl.dkl      <- nt 
    ^~~~~~~~~~~~~~~
NO COPY: R/fvbn2d.R:264:5: style: Words within variable and function names should be separated by '_' rather than '.'.
    nT.bagr.akl.dkl      <- nt 
    ^~~~~~~~~~~~~~~
NO COPY: R/fvbn2d.R:264:31: style: Trailing whitespace is superfluous.
    nT.bagr.akl.dkl      <- nt 
                              ^
NO COPY: R/fvbn2d.R:265:41: style: Commas should always have a space after.
    bagr.list            <- c(bagr.list,"Alle BA")
                                        ^
NO COPY: R/fvbn2d.R:270:4: style: Commented code should be removed.
  #AKL-Labels
   ^~~~~~~~~~
NO COPY: R/fvbn2d.R:271:34: style: Commas should always have a space after.
  akl.lab <- akl.lab.fun(A.klass,A.k) #k\u00e4/16.07.14
                                 ^
NO COPY: R/fvbn2d.R:274:34: style: Commas should always have a space after.
  dkl.lab <- dkl.lab.fun(D.klass,D.k) #k\u00e4/16.07.14
                                 ^
NO COPY: R/fvbn2d.R:277:20: style: Commas should always have a space after.
  a <- regexpr("/",baeume$bemerk[baeume$stp==0][1],fixed=T)
                   ^
NO COPY: R/fvbn2d.R:277:44: style: Put spaces around all infix operators.
  a <- regexpr("/",baeume$bemerk[baeume$stp==0][1],fixed=T)
                                          ~^~~
NO COPY: R/fvbn2d.R:277:52: style: Commas should always have a space after.
  a <- regexpr("/",baeume$bemerk[baeume$stp==0][1],fixed=T)
                                                   ^
NO COPY: R/fvbn2d.R:277:57: style: Put spaces around all infix operators.
  a <- regexpr("/",baeume$bemerk[baeume$stp==0][1],fixed=T)
                                                       ~^~
NO COPY: R/fvbn2d.R:278:51: style: Put spaces around all infix operators.
  b <- nchar(as.character(baeume$bemerk[baeume$stp==0][1]))
                                                 ~^~~
NO COPY: R/fvbn2d.R:279:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  version.baeume.b  <- substr(as.character(baeume$bemerk[baeume$stp==0][1]),a,b)
  ^~~~~~~~~~~~~~~~
NO COPY: R/fvbn2d.R:279:3: warning: local variable 'version.baeume.b' assigned but may not be used
  version.baeume.b  <- substr(as.character(baeume$bemerk[baeume$stp==0][1]),a,b)
  ^~~~~~~~~~~~~~~~
NO COPY: R/fvbn2d.R:279:68: style: Put spaces around all infix operators.
  version.baeume.b  <- substr(as.character(baeume$bemerk[baeume$stp==0][1]),a,b)
                                                                  ~^~~
NO COPY: R/fvbn2d.R:279:77: style: Commas should always have a space after.
  version.baeume.b  <- substr(as.character(baeume$bemerk[baeume$stp==0][1]),a,b)
                                                                            ^
NO COPY: R/fvbn2d.R:279:79: style: Commas should always have a space after.
  version.baeume.b  <- substr(as.character(baeume$bemerk[baeume$stp==0][1]),a,b)
                                                                              ^
NO COPY: R/fvbn2d.R:280:20: style: Put spaces around all infix operators.
  Log <- list(Datum=Sys.time(),
                  ~^~
NO COPY: R/fvbn2d.R:281:1: style: lines should not be more than 80 characters.
      Version.baeume.b=substr(as.character(baeume$bemerk[baeume$stp==0][1]),a,b))
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2d.R:281:23: style: Put spaces around all infix operators.
      Version.baeume.b=substr(as.character(baeume$bemerk[baeume$stp==0][1]),a,b))
                     ~^~
NO COPY: R/fvbn2d.R:281:68: style: Put spaces around all infix operators.
      Version.baeume.b=substr(as.character(baeume$bemerk[baeume$stp==0][1]),a,b))
                                                                  ~^~~
NO COPY: R/fvbn2d.R:281:77: style: Commas should always have a space after.
      Version.baeume.b=substr(as.character(baeume$bemerk[baeume$stp==0][1]),a,b))
                                                                            ^
NO COPY: R/fvbn2d.R:281:79: style: Commas should always have a space after.
      Version.baeume.b=substr(as.character(baeume$bemerk[baeume$stp==0][1]),a,b))
                                                                              ^
NO COPY: R/fvbn2d.R:283:18: style: Put spaces around all infix operators.
  return(list(Log=Log, Stratum=auswahl, nTE=n.te.s, HBF=T.hbf, se.HBF=se.T.hbf,
                ~^~
NO COPY: R/fvbn2d.R:283:31: style: Put spaces around all infix operators.
  return(list(Log=Log, Stratum=auswahl, nTE=n.te.s, HBF=T.hbf, se.HBF=se.T.hbf,
                             ~^~
NO COPY: R/fvbn2d.R:283:44: style: Put spaces around all infix operators.
  return(list(Log=Log, Stratum=auswahl, nTE=n.te.s, HBF=T.hbf, se.HBF=se.T.hbf,
                                          ~^~
NO COPY: R/fvbn2d.R:283:45: style: Words within variable and function names should be separated by '_' rather than '.'.
  return(list(Log=Log, Stratum=auswahl, nTE=n.te.s, HBF=T.hbf, se.HBF=se.T.hbf,
                                            ^~~~~~
NO COPY: R/fvbn2d.R:283:56: style: Put spaces around all infix operators.
  return(list(Log=Log, Stratum=auswahl, nTE=n.te.s, HBF=T.hbf, se.HBF=se.T.hbf,
                                                      ~^~
NO COPY: R/fvbn2d.R:283:70: style: Put spaces around all infix operators.
  return(list(Log=Log, Stratum=auswahl, nTE=n.te.s, HBF=T.hbf, se.HBF=se.T.hbf,
                                                                    ~^~
NO COPY: R/fvbn2d.R:283:71: style: Words within variable and function names should be separated by '_' rather than '.'.
  return(list(Log=Log, Stratum=auswahl, nTE=n.te.s, HBF=T.hbf, se.HBF=se.T.hbf,
                                                                      ^~~~~~~~
NO COPY: R/fvbn2d.R:284:17: style: Put spaces around all infix operators.
              BL=T.bl,se.BL=se.T.bl,iBL=T.ibl,se.iBL=se.T.ibl,LK=lk,se.LK=se.lk,
               ~^~
NO COPY: R/fvbn2d.R:284:23: style: Commas should always have a space after.
              BL=T.bl,se.BL=se.T.bl,iBL=T.ibl,se.iBL=se.T.ibl,LK=lk,se.LK=se.lk,
                      ^
NO COPY: R/fvbn2d.R:284:28: style: Put spaces around all infix operators.
              BL=T.bl,se.BL=se.T.bl,iBL=T.ibl,se.iBL=se.T.ibl,LK=lk,se.LK=se.lk,
                          ~^~
NO COPY: R/fvbn2d.R:284:29: style: Words within variable and function names should be separated by '_' rather than '.'.
              BL=T.bl,se.BL=se.T.bl,iBL=T.ibl,se.iBL=se.T.ibl,LK=lk,se.LK=se.lk,
                            ^~~~~~~
NO COPY: R/fvbn2d.R:284:37: style: Commas should always have a space after.
              BL=T.bl,se.BL=se.T.bl,iBL=T.ibl,se.iBL=se.T.ibl,LK=lk,se.LK=se.lk,
                                    ^
NO COPY: R/fvbn2d.R:284:40: style: Put spaces around all infix operators.
              BL=T.bl,se.BL=se.T.bl,iBL=T.ibl,se.iBL=se.T.ibl,LK=lk,se.LK=se.lk,
                                      ~^~
NO COPY: R/fvbn2d.R:284:47: style: Commas should always have a space after.
              BL=T.bl,se.BL=se.T.bl,iBL=T.ibl,se.iBL=se.T.ibl,LK=lk,se.LK=se.lk,
                                              ^
NO COPY: R/fvbn2d.R:284:53: style: Put spaces around all infix operators.
              BL=T.bl,se.BL=se.T.bl,iBL=T.ibl,se.iBL=se.T.ibl,LK=lk,se.LK=se.lk,
                                                   ~^~
NO COPY: R/fvbn2d.R:284:54: style: Words within variable and function names should be separated by '_' rather than '.'.
              BL=T.bl,se.BL=se.T.bl,iBL=T.ibl,se.iBL=se.T.ibl,LK=lk,se.LK=se.lk,
                                                     ^~~~~~~~
NO COPY: R/fvbn2d.R:284:63: style: Commas should always have a space after.
              BL=T.bl,se.BL=se.T.bl,iBL=T.ibl,se.iBL=se.T.ibl,LK=lk,se.LK=se.lk,
                                                              ^
NO COPY: R/fvbn2d.R:284:65: style: Put spaces around all infix operators.
              BL=T.bl,se.BL=se.T.bl,iBL=T.ibl,se.iBL=se.T.ibl,LK=lk,se.LK=se.lk,
                                                               ~^~
NO COPY: R/fvbn2d.R:284:69: style: Commas should always have a space after.
              BL=T.bl,se.BL=se.T.bl,iBL=T.ibl,se.iBL=se.T.ibl,LK=lk,se.LK=se.lk,
                                                                    ^
NO COPY: R/fvbn2d.R:284:74: style: Put spaces around all infix operators.
              BL=T.bl,se.BL=se.T.bl,iBL=T.ibl,se.iBL=se.T.ibl,LK=lk,se.LK=se.lk,
                                                                        ~^~
NO COPY: R/fvbn2d.R:285:1: style: lines should not be more than 80 characters.
              Attribute1=c("BAF", "V_DhmR","V_DhmR_HB", "oiB", "N", "N_Dh", "N_Dh_HB"),
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2d.R:285:25: style: Put spaces around all infix operators.
              Attribute1=c("BAF", "V_DhmR","V_DhmR_HB", "oiB", "N", "N_Dh", "N_Dh_HB"),
                       ~^~
NO COPY: R/fvbn2d.R:285:44: style: Commas should always have a space after.
              Attribute1=c("BAF", "V_DhmR","V_DhmR_HB", "oiB", "N", "N_Dh", "N_Dh_HB"),
                                           ^
NO COPY: R/fvbn2d.R:287:25: style: Put spaces around all infix operators.
              Attribute2=c("BA_Proz","V_DhmR/ha","V_DhmR_HB/ha","oiB/ha","N/ha",
                       ~^~
NO COPY: R/fvbn2d.R:287:38: style: Commas should always have a space after.
              Attribute2=c("BA_Proz","V_DhmR/ha","V_DhmR_HB/ha","oiB/ha","N/ha",
                                     ^
NO COPY: R/fvbn2d.R:287:50: style: Commas should always have a space after.
              Attribute2=c("BA_Proz","V_DhmR/ha","V_DhmR_HB/ha","oiB/ha","N/ha",
                                                 ^
NO COPY: R/fvbn2d.R:287:65: style: Commas should always have a space after.
              Attribute2=c("BA_Proz","V_DhmR/ha","V_DhmR_HB/ha","oiB/ha","N/ha",
                                                                ^
NO COPY: R/fvbn2d.R:287:74: style: Commas should always have a space after.
              Attribute2=c("BA_Proz","V_DhmR/ha","V_DhmR_HB/ha","oiB/ha","N/ha",
                                                                         ^
NO COPY: R/fvbn2d.R:289:45: style: Commas should always have a space after.
              "Gr\u00f6\u00dfen" = c("Wert","Standardfehler"),
                                            ^
NO COPY: R/fvbn2d.R:290:19: style: Put spaces around all infix operators.
              BAGR=bagr.list,AKL = akl.lab[1:A.k], DKL = dkl.lab,
                 ~^~
NO COPY: R/fvbn2d.R:290:30: style: Commas should always have a space after.
              BAGR=bagr.list,AKL = akl.lab[1:A.k], DKL = dkl.lab,
                             ^
NO COPY: R/fvbn2d.R:291:34: style: Put spaces around all infix operators.
              T.FVBN.Bagr.Akl.Dkl=Y.bagr.akl.dkl,
                                ~^~
NO COPY: R/fvbn2d.R:291:35: style: Words within variable and function names should be separated by '_' rather than '.'.
              T.FVBN.Bagr.Akl.Dkl=Y.bagr.akl.dkl,
                                  ^~~~~~~~~~~~~~
NO COPY: R/fvbn2d.R:292:35: style: Put spaces around all infix operators.
              FVBN.ha.Bagr.Akl.Dkl=Yha.bagr.akl.dkl,
                                 ~^~
NO COPY: R/fvbn2d.R:292:36: style: Words within variable and function names should be separated by '_' rather than '.'.
              FVBN.ha.Bagr.Akl.Dkl=Yha.bagr.akl.dkl,
                                   ^~~~~~~~~~~~~~~~
NO COPY: R/fvbn2d.R:293:30: style: Put spaces around all infix operators.
              nT.Bagr.Akl.Dkl=nT.bagr.akl.dkl))
                            ~^~
NO COPY: R/fvbn2d.R:293:31: style: Variable and function names should be all lowercase.
              nT.Bagr.Akl.Dkl=nT.bagr.akl.dkl))
                              ^~~~~~~~~~~~~~~
NO COPY: R/fvbn2d.R:293:31: style: Words within variable and function names should be separated by '_' rather than '.'.
              nT.Bagr.Akl.Dkl=nT.bagr.akl.dkl))
                              ^~~~~~~~~~~~~~~
NO COPY: R/fvbn2d.R:295:1: style: Trailing blank lines are superfluous.

^
NO COPY: R/fvbn2e.R:83:19: style: Commas should always have a space after.
  function(baeume,ecken,trakte,A,inv,BA.grupp,A.klass,D.klass,auswahl){
                  ^
NO COPY: R/fvbn2e.R:83:25: style: Commas should always have a space after.
  function(baeume,ecken,trakte,A,inv,BA.grupp,A.klass,D.klass,auswahl){
                        ^
NO COPY: R/fvbn2e.R:83:32: style: Commas should always have a space after.
  function(baeume,ecken,trakte,A,inv,BA.grupp,A.klass,D.klass,auswahl){
                               ^
NO COPY: R/fvbn2e.R:83:34: style: Commas should always have a space after.
  function(baeume,ecken,trakte,A,inv,BA.grupp,A.klass,D.klass,auswahl){
                                 ^
NO COPY: R/fvbn2e.R:83:38: style: Commas should always have a space after.
  function(baeume,ecken,trakte,A,inv,BA.grupp,A.klass,D.klass,auswahl){
                                     ^
NO COPY: R/fvbn2e.R:83:47: style: Commas should always have a space after.
  function(baeume,ecken,trakte,A,inv,BA.grupp,A.klass,D.klass,auswahl){
                                              ^
NO COPY: R/fvbn2e.R:83:55: style: Commas should always have a space after.
  function(baeume,ecken,trakte,A,inv,BA.grupp,A.klass,D.klass,auswahl){
                                                      ^
NO COPY: R/fvbn2e.R:83:63: style: Commas should always have a space after.
  function(baeume,ecken,trakte,A,inv,BA.grupp,A.klass,D.klass,auswahl){
                                                              ^
NO COPY: R/fvbn2e.R:84:34: style: Commas should always have a space after.
  stratum <- stratum.fun(auswahl,ecken)
                                 ^
NO COPY: R/fvbn2e.R:91:28: style: Commas should always have a space after.
  names(baeume) <- sub(inv,names(baeume),replacement="")
                           ^
NO COPY: R/fvbn2e.R:91:42: style: Commas should always have a space after.
  names(baeume) <- sub(inv,names(baeume),replacement="")
                                         ^
NO COPY: R/fvbn2e.R:91:53: style: Put spaces around all infix operators.
  names(baeume) <- sub(inv,names(baeume),replacement="")
                                                   ~^~
NO COPY: R/fvbn2e.R:93:1: style: lines should not be more than 80 characters.
  baeume.s <- merge(baeume[TRUE, c("tnr", "enr", "ba", "alt", "bhd", "volv", "oib", "nha", "stfl")],
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2e.R:94:52: style: Commas should always have a space after.
                    stratum[TRUE, c("tnr", "enr")],by=c("tnr","enr"),all.y=T)
                                                   ^
NO COPY: R/fvbn2e.R:94:54: style: Put spaces around all infix operators.
                    stratum[TRUE, c("tnr", "enr")],by=c("tnr","enr"),all.y=T)
                                                    ~^~
NO COPY: R/fvbn2e.R:94:63: style: Commas should always have a space after.
                    stratum[TRUE, c("tnr", "enr")],by=c("tnr","enr"),all.y=T)
                                                              ^
NO COPY: R/fvbn2e.R:94:70: style: Commas should always have a space after.
                    stratum[TRUE, c("tnr", "enr")],by=c("tnr","enr"),all.y=T)
                                                                     ^
NO COPY: R/fvbn2e.R:94:75: style: Put spaces around all infix operators.
                    stratum[TRUE, c("tnr", "enr")],by=c("tnr","enr"),all.y=T)
                                                                         ~^~
NO COPY: R/fvbn2e.R:95:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: R/fvbn2e.R:102:25: style: Put spaces around all infix operators.
                    by.x="ba",by.y="ICode",all.x=T)
                       ~^~
NO COPY: R/fvbn2e.R:102:31: style: Commas should always have a space after.
                    by.x="ba",by.y="ICode",all.x=T)
                              ^
NO COPY: R/fvbn2e.R:102:35: style: Put spaces around all infix operators.
                    by.x="ba",by.y="ICode",all.x=T)
                                 ~^~
NO COPY: R/fvbn2e.R:102:44: style: Commas should always have a space after.
                    by.x="ba",by.y="ICode",all.x=T)
                                           ^
NO COPY: R/fvbn2e.R:102:49: style: Put spaces around all infix operators.
                    by.x="ba",by.y="ICode",all.x=T)
                                               ~^~
NO COPY: R/fvbn2e.R:106:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: R/fvbn2e.R:109:24: style: Commas should always have a space after.
  nT <- length(trakte[,1])
                       ^
NO COPY: R/fvbn2e.R:111:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  n.te.s <- length(stratum[,1])
  ^~~~~~
NO COPY: R/fvbn2e.R:111:29: style: Commas should always have a space after.
  n.te.s <- length(stratum[,1])
                            ^
NO COPY: R/fvbn2e.R:112:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: R/fvbn2e.R:116:32: style: Commas should always have a space after.
  xy <- stats::aggregate(rep(1,length(stratum[,1])),by=list(stratum$tnr),sum)
                               ^
NO COPY: R/fvbn2e.R:116:48: style: Commas should always have a space after.
  xy <- stats::aggregate(rep(1,length(stratum[,1])),by=list(stratum$tnr),sum)
                                               ^
NO COPY: R/fvbn2e.R:116:53: style: Commas should always have a space after.
  xy <- stats::aggregate(rep(1,length(stratum[,1])),by=list(stratum$tnr),sum)
                                                    ^
NO COPY: R/fvbn2e.R:116:55: style: Put spaces around all infix operators.
  xy <- stats::aggregate(rep(1,length(stratum[,1])),by=list(stratum$tnr),sum)
                                                     ~^~
NO COPY: R/fvbn2e.R:116:74: style: Commas should always have a space after.
  xy <- stats::aggregate(rep(1,length(stratum[,1])),by=list(stratum$tnr),sum)
                                                                         ^
NO COPY: R/fvbn2e.R:118:1: style: lines should not be more than 80 characters.
  xy <- cbind(xy,stats::aggregate(ifelse(baeume.s$ba==999,baeume.s$stfl/10000,0),
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2e.R:118:18: style: Commas should always have a space after.
  xy <- cbind(xy,stats::aggregate(ifelse(baeume.s$ba==999,baeume.s$stfl/10000,0),
                 ^
NO COPY: R/fvbn2e.R:118:53: style: Put spaces around all infix operators.
  xy <- cbind(xy,stats::aggregate(ifelse(baeume.s$ba==999,baeume.s$stfl/10000,0),
                                                   ~^~~
NO COPY: R/fvbn2e.R:118:59: style: Commas should always have a space after.
  xy <- cbind(xy,stats::aggregate(ifelse(baeume.s$ba==999,baeume.s$stfl/10000,0),
                                                          ^
NO COPY: R/fvbn2e.R:118:72: style: Put spaces around all infix operators.
  xy <- cbind(xy,stats::aggregate(ifelse(baeume.s$ba==999,baeume.s$stfl/10000,0),
                                                                      ~^~
NO COPY: R/fvbn2e.R:118:79: style: Commas should always have a space after.
  xy <- cbind(xy,stats::aggregate(ifelse(baeume.s$ba==999,baeume.s$stfl/10000,0),
                                                                              ^
NO COPY: R/fvbn2e.R:119:30: style: Put spaces around all infix operators.
                           by=list(baeume.s$tnr),sum)$x)
                            ~^~
NO COPY: R/fvbn2e.R:119:50: style: Commas should always have a space after.
                           by=list(baeume.s$tnr),sum)$x)
                                                 ^
NO COPY: R/fvbn2e.R:120:18: style: Commas should always have a space after.
  xy <- cbind(xy,stats::aggregate(ifelse(baeume.s$ba==998,baeume.s$stfl,0),
                 ^
NO COPY: R/fvbn2e.R:120:53: style: Put spaces around all infix operators.
  xy <- cbind(xy,stats::aggregate(ifelse(baeume.s$ba==998,baeume.s$stfl,0),
                                                   ~^~~
NO COPY: R/fvbn2e.R:120:59: style: Commas should always have a space after.
  xy <- cbind(xy,stats::aggregate(ifelse(baeume.s$ba==998,baeume.s$stfl,0),
                                                          ^
NO COPY: R/fvbn2e.R:120:73: style: Commas should always have a space after.
  xy <- cbind(xy,stats::aggregate(ifelse(baeume.s$ba==998,baeume.s$stfl,0),
                                                                        ^
NO COPY: R/fvbn2e.R:121:30: style: Put spaces around all infix operators.
                           by=list(baeume.s$tnr),sum)$x/10000)
                            ~^~
NO COPY: R/fvbn2e.R:121:50: style: Commas should always have a space after.
                           by=list(baeume.s$tnr),sum)$x/10000)
                                                 ^
NO COPY: R/fvbn2e.R:121:56: style: Put spaces around all infix operators.
                           by=list(baeume.s$tnr),sum)$x/10000)
                                                      ~^~
NO COPY: R/fvbn2e.R:122:24: style: Commas should always have a space after.
  names(xy) <- c("tnr","hbf","bl","ibl")
                       ^
NO COPY: R/fvbn2e.R:122:30: style: Commas should always have a space after.
  names(xy) <- c("tnr","hbf","bl","ibl")
                             ^
NO COPY: R/fvbn2e.R:122:35: style: Commas should always have a space after.
  names(xy) <- c("tnr","hbf","bl","ibl")
                                  ^
NO COPY: R/fvbn2e.R:123:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  n.t.s <- length(xy[,1])
  ^~~~~
NO COPY: R/fvbn2e.R:123:3: warning: local variable 'n.t.s' assigned but may not be used
  n.t.s <- length(xy[,1])
  ^~~~~
NO COPY: R/fvbn2e.R:123:23: style: Commas should always have a space after.
  n.t.s <- length(xy[,1])
                      ^
NO COPY: R/fvbn2e.R:124:43: style: Commas should always have a space after.
  xy <- merge(trakte[TRUE, c("tnr", "m")],xy,by=c("tnr"),all.x=T)
                                          ^
NO COPY: R/fvbn2e.R:124:46: style: Commas should always have a space after.
  xy <- merge(trakte[TRUE, c("tnr", "m")],xy,by=c("tnr"),all.x=T)
                                             ^
NO COPY: R/fvbn2e.R:124:48: style: Put spaces around all infix operators.
  xy <- merge(trakte[TRUE, c("tnr", "m")],xy,by=c("tnr"),all.x=T)
                                              ~^~
NO COPY: R/fvbn2e.R:124:58: style: Commas should always have a space after.
  xy <- merge(trakte[TRUE, c("tnr", "m")],xy,by=c("tnr"),all.x=T)
                                                         ^
NO COPY: R/fvbn2e.R:124:63: style: Put spaces around all infix operators.
  xy <- merge(trakte[TRUE, c("tnr", "m")],xy,by=c("tnr"),all.x=T)
                                                             ~^~
NO COPY: R/fvbn2e.R:127:22: style: Put spaces around all infix operators.
  xy$hbf.ba <- xy$hbf-xy$bl-xy$ibl
                    ~^~
NO COPY: R/fvbn2e.R:127:28: style: Put spaces around all infix operators.
  xy$hbf.ba <- xy$hbf-xy$bl-xy$ibl
                          ~^~
NO COPY: R/fvbn2e.R:128:1: style: lines should not be more than 80 characters.
  #k\u00e4/11.10.2014  wegen BA-Anteilen muss hbf je Trakt im Stratum erhalten bleiben
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2e.R:131:4: style: Commented code should be removed.
  #HBFl. [ha]
   ^~~~~~~~~~
NO COPY: R/fvbn2e.R:132:9: style: Use <-, not =, for assignment.
  r.list= r.variance.fun(xy[TRUE, c("m", "hbf")],nT)
        ^
NO COPY: R/fvbn2e.R:132:9: style: Put spaces around all infix operators.
  r.list= r.variance.fun(xy[TRUE, c("m", "hbf")],nT)
       ~^
NO COPY: R/fvbn2e.R:132:50: style: Commas should always have a space after.
  r.list= r.variance.fun(xy[TRUE, c("m", "hbf")],nT)
                                                 ^
NO COPY: R/fvbn2e.R:133:23: style: Put spaces around all infix operators.
  T.hbf <- r.list$R.xy*A
                     ~^~
NO COPY: R/fvbn2e.R:134:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  se.T.hbf <- sqrt(r.list$V.R.xy)*A
  ^~~~~~~~
NO COPY: R/fvbn2e.R:134:27: style: Words within variable and function names should be separated by '_' rather than '.'.
  se.T.hbf <- sqrt(r.list$V.R.xy)*A
                          ^~~~~~
NO COPY: R/fvbn2e.R:134:34: style: Put spaces around all infix operators.
  se.T.hbf <- sqrt(r.list$V.R.xy)*A
                                ~^~
NO COPY: R/fvbn2e.R:136:51: style: Commas should always have a space after.
  r.list <- r.variance.fun(xy[TRUE, c("m", "bl")],nT)
                                                  ^
NO COPY: R/fvbn2e.R:137:22: style: Put spaces around all infix operators.
  T.bl <- r.list$R.xy*A
                    ~^~
NO COPY: R/fvbn2e.R:138:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  se.T.bl <- sqrt(r.list$V.R.xy)*A
  ^~~~~~~
NO COPY: R/fvbn2e.R:138:26: style: Words within variable and function names should be separated by '_' rather than '.'.
  se.T.bl <- sqrt(r.list$V.R.xy)*A
                         ^~~~~~
NO COPY: R/fvbn2e.R:138:33: style: Put spaces around all infix operators.
  se.T.bl <- sqrt(r.list$V.R.xy)*A
                               ~^~
NO COPY: R/fvbn2e.R:140:52: style: Commas should always have a space after.
  r.list <- r.variance.fun(xy[TRUE, c("m", "ibl")],nT)
                                                   ^
NO COPY: R/fvbn2e.R:141:23: style: Put spaces around all infix operators.
  T.ibl <- r.list$R.xy*A
                     ~^~
NO COPY: R/fvbn2e.R:142:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  se.T.ibl <- sqrt(r.list$V.R.xy)*A
  ^~~~~~~~
NO COPY: R/fvbn2e.R:142:27: style: Words within variable and function names should be separated by '_' rather than '.'.
  se.T.ibl <- sqrt(r.list$V.R.xy)*A
                          ^~~~~~
NO COPY: R/fvbn2e.R:142:34: style: Put spaces around all infix operators.
  se.T.ibl <- sqrt(r.list$V.R.xy)*A
                                ~^~
NO COPY: R/fvbn2e.R:144:57: style: Commas should always have a space after.
  r.list <- r.variance.fun(xy[TRUE, c("hbf.ba", "hbf")],nT)
                                                        ^
NO COPY: R/fvbn2e.R:146:24: style: Words within variable and function names should be separated by '_' rather than '.'.
  se.lk <- sqrt(r.list$V.R.xy)
                       ^~~~~~
NO COPY: R/fvbn2e.R:152:1: style: lines should not be more than 80 characters.
                                 breaks=c(seq(0,A.klass[[1]],A.klass[[2]]),A.max),right=T))
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2e.R:152:40: style: Put spaces around all infix operators.
                                 breaks=c(seq(0,A.klass[[1]],A.klass[[2]]),A.max),right=T))
                                      ~^~
NO COPY: R/fvbn2e.R:152:49: style: Commas should always have a space after.
                                 breaks=c(seq(0,A.klass[[1]],A.klass[[2]]),A.max),right=T))
                                                ^
NO COPY: R/fvbn2e.R:152:62: style: Commas should always have a space after.
                                 breaks=c(seq(0,A.klass[[1]],A.klass[[2]]),A.max),right=T))
                                                             ^
NO COPY: R/fvbn2e.R:152:76: style: Commas should always have a space after.
                                 breaks=c(seq(0,A.klass[[1]],A.klass[[2]]),A.max),right=T))
                                                                           ^
NO COPY: R/fvbn2e.R:152:83: style: Commas should always have a space after.
                                 breaks=c(seq(0,A.klass[[1]],A.klass[[2]]),A.max),right=T))
                                                                                  ^
NO COPY: R/fvbn2e.R:152:88: style: Put spaces around all infix operators.
                                 breaks=c(seq(0,A.klass[[1]],A.klass[[2]]),A.max),right=T))
                                                                                      ~^~
NO COPY: R/fvbn2e.R:158:5: style: Place a space before left parenthesis, except in a function call.
  if(A.klass[[1]]>A.klass[[2]])
    ^
NO COPY: R/fvbn2e.R:158:18: style: Put spaces around all infix operators.
  if(A.klass[[1]]>A.klass[[2]])
                ~^~
NO COPY: R/fvbn2e.R:159:3: style: Opening curly braces should never go on their own line and should always be followed by a new line.
  {
  ^
NO COPY: R/fvbn2e.R:160:5: style: Words within variable and function names should be separated by '_' rather than '.'.
    max.A.k <- A.klass[[1]]/A.klass[[2]] + 1
    ^~~~~~~
NO COPY: R/fvbn2e.R:160:28: style: Put spaces around all infix operators.
    max.A.k <- A.klass[[1]]/A.klass[[2]] + 1
                          ~^~
NO COPY: R/fvbn2e.R:161:15: style: Words within variable and function names should be separated by '_' rather than '.'.
    if (A.k < max.A.k) {A.k <- max.A.k }
              ^~~~~~~
NO COPY: R/fvbn2e.R:161:24: style: Opening curly braces should never go on their own line and should always be followed by a new line.
    if (A.k < max.A.k) {A.k <- max.A.k }
                       ^
NO COPY: R/fvbn2e.R:161:32: style: Words within variable and function names should be separated by '_' rather than '.'.
    if (A.k < max.A.k) {A.k <- max.A.k }
                               ^~~~~~~
NO COPY: R/fvbn2e.R:161:40: style: Closing curly-braces should always be on their own line, unless it's followed by an else.
    if (A.k < max.A.k) {A.k <- max.A.k }
                                       ^
NO COPY: R/fvbn2e.R:166:16: style: Opening curly braces should never go on their own line and should always be followed by a new line.
  if (A.k > 1) {A.k <- A.k + 1}
               ^
NO COPY: R/fvbn2e.R:166:31: style: Closing curly-braces should always be on their own line, unless it's followed by an else.
  if (A.k > 1) {A.k <- A.k + 1}
                              ^
NO COPY: R/fvbn2e.R:171:3: style: Opening curly braces should never go on their own line and should always be followed by a new line.
  {
  ^
NO COPY: R/fvbn2e.R:172:1: style: lines should not be more than 80 characters.
    brks <- c(0,7,seq(D.klass[[1]]+D.klass[[3]],D.klass[[2]],D.klass[[3]]),D.max)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2e.R:172:17: style: Commas should always have a space after.
    brks <- c(0,7,seq(D.klass[[1]]+D.klass[[3]],D.klass[[2]],D.klass[[3]]),D.max)
                ^
NO COPY: R/fvbn2e.R:172:19: style: Commas should always have a space after.
    brks <- c(0,7,seq(D.klass[[1]]+D.klass[[3]],D.klass[[2]],D.klass[[3]]),D.max)
                  ^
NO COPY: R/fvbn2e.R:172:35: style: Put spaces around all infix operators.
    brks <- c(0,7,seq(D.klass[[1]]+D.klass[[3]],D.klass[[2]],D.klass[[3]]),D.max)
                                 ~^~
NO COPY: R/fvbn2e.R:172:49: style: Commas should always have a space after.
    brks <- c(0,7,seq(D.klass[[1]]+D.klass[[3]],D.klass[[2]],D.klass[[3]]),D.max)
                                                ^
NO COPY: R/fvbn2e.R:172:62: style: Commas should always have a space after.
    brks <- c(0,7,seq(D.klass[[1]]+D.klass[[3]],D.klass[[2]],D.klass[[3]]),D.max)
                                                             ^
NO COPY: R/fvbn2e.R:172:76: style: Commas should always have a space after.
    brks <- c(0,7,seq(D.klass[[1]]+D.klass[[3]],D.klass[[2]],D.klass[[3]]),D.max)
                                                                           ^
NO COPY: R/fvbn2e.R:174:3: style: Opening curly braces should never go on their own line and should always be followed by a new line.
  {
  ^
NO COPY: R/fvbn2e.R:175:32: style: Commas should always have a space after.
    brks <- c(seq(D.klass[[1]],D.klass[[2]],D.klass[[3]]),D.max)
                               ^
NO COPY: R/fvbn2e.R:175:45: style: Commas should always have a space after.
    brks <- c(seq(D.klass[[1]],D.klass[[2]],D.klass[[3]]),D.max)
                                            ^
NO COPY: R/fvbn2e.R:175:59: style: Commas should always have a space after.
    brks <- c(seq(D.klass[[1]],D.klass[[2]],D.klass[[3]]),D.max)
                                                          ^
NO COPY: R/fvbn2e.R:177:43: style: Put spaces around all infix operators.
  baeume.s$dkl <- cut(baeume.s$bhd, breaks=brks, right=F)
                                         ~^~
NO COPY: R/fvbn2e.R:177:55: style: Put spaces around all infix operators.
  baeume.s$dkl <- cut(baeume.s$bhd, breaks=brks, right=F)
                                                     ~^~
NO COPY: R/fvbn2e.R:183:5: style: Place a space before left parenthesis, except in a function call.
  if(D.klass[[2]]>D.klass[[3]])
    ^
NO COPY: R/fvbn2e.R:183:18: style: Put spaces around all infix operators.
  if(D.klass[[2]]>D.klass[[3]])
                ~^~
NO COPY: R/fvbn2e.R:184:3: style: Opening curly braces should never go on their own line and should always be followed by a new line.
  {
  ^
NO COPY: R/fvbn2e.R:185:5: style: Words within variable and function names should be separated by '_' rather than '.'.
    max.D.k <- (D.klass[[2]]-D.klass[[1]])/D.klass[[2]] + 2
    ^~~~~~~
NO COPY: R/fvbn2e.R:185:29: style: Put spaces around all infix operators.
    max.D.k <- (D.klass[[2]]-D.klass[[1]])/D.klass[[2]] + 2
                           ~^~
NO COPY: R/fvbn2e.R:185:43: style: Put spaces around all infix operators.
    max.D.k <- (D.klass[[2]]-D.klass[[1]])/D.klass[[2]] + 2
                                         ~^~
NO COPY: R/fvbn2e.R:186:15: style: Words within variable and function names should be separated by '_' rather than '.'.
    if (D.k < max.D.k) {D.k <- max.D.k }
              ^~~~~~~
NO COPY: R/fvbn2e.R:186:24: style: Opening curly braces should never go on their own line and should always be followed by a new line.
    if (D.k < max.D.k) {D.k <- max.D.k }
                       ^
NO COPY: R/fvbn2e.R:186:32: style: Words within variable and function names should be separated by '_' rather than '.'.
    if (D.k < max.D.k) {D.k <- max.D.k }
                               ^~~~~~~
NO COPY: R/fvbn2e.R:186:40: style: Closing curly-braces should always be on their own line, unless it's followed by an else.
    if (D.k < max.D.k) {D.k <- max.D.k }
                                       ^
NO COPY: R/fvbn2e.R:191:16: style: Opening curly braces should never go on their own line and should always be followed by a new line.
  if (D.k > 1) {D.k <- D.k + 1}
               ^
NO COPY: R/fvbn2e.R:191:31: style: Closing curly-braces should always be on their own line, unless it's followed by an else.
  if (D.k > 1) {D.k <- D.k + 1}
                              ^
NO COPY: R/fvbn2e.R:195:1: style: lines should not be more than 80 characters.
  #Es gibt 7 Zielgr\u00f6\u00dfen <Y>: BAF [ha], V [m^3Dh mR], VHb (nur Hauptbestand)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2e.R:199:1: style: lines should not be more than 80 characters.
  #F\u00fcr diese 7 "Gr\u00f6\u00dfen" werden jeweils der Gesamtwert ("Total") und der
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2e.R:200:1: style: lines should not be more than 80 characters.
  #Stichprobenfehler (SE) berechnet, und zwar jeweils f\u00fcr die 9 Baumartengruppen
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2e.R:202:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  Y.bagr.akl.dkl    <- array(dim=c(7,2,n.bagr,A.k,D.k))
  ^~~~~~~~~~~~~~
NO COPY: R/fvbn2e.R:202:33: style: Put spaces around all infix operators.
  Y.bagr.akl.dkl    <- array(dim=c(7,2,n.bagr,A.k,D.k))
                               ~^~
NO COPY: R/fvbn2e.R:202:38: style: Commas should always have a space after.
  Y.bagr.akl.dkl    <- array(dim=c(7,2,n.bagr,A.k,D.k))
                                     ^
NO COPY: R/fvbn2e.R:202:40: style: Commas should always have a space after.
  Y.bagr.akl.dkl    <- array(dim=c(7,2,n.bagr,A.k,D.k))
                                       ^
NO COPY: R/fvbn2e.R:202:47: style: Commas should always have a space after.
  Y.bagr.akl.dkl    <- array(dim=c(7,2,n.bagr,A.k,D.k))
                                              ^
NO COPY: R/fvbn2e.R:202:51: style: Commas should always have a space after.
  Y.bagr.akl.dkl    <- array(dim=c(7,2,n.bagr,A.k,D.k))
                                                  ^
NO COPY: R/fvbn2e.R:203:3: style: Variable and function names should be all lowercase.
  nT.bagr.akl.dkl   <- array(dim=c(n.bagr,A.k,D.k))
  ^~~~~~~~~~~~~~~
NO COPY: R/fvbn2e.R:203:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  nT.bagr.akl.dkl   <- array(dim=c(n.bagr,A.k,D.k))
  ^~~~~~~~~~~~~~~
NO COPY: R/fvbn2e.R:203:33: style: Put spaces around all infix operators.
  nT.bagr.akl.dkl   <- array(dim=c(n.bagr,A.k,D.k))
                               ~^~
NO COPY: R/fvbn2e.R:203:43: style: Commas should always have a space after.
  nT.bagr.akl.dkl   <- array(dim=c(n.bagr,A.k,D.k))
                                          ^
NO COPY: R/fvbn2e.R:203:47: style: Commas should always have a space after.
  nT.bagr.akl.dkl   <- array(dim=c(n.bagr,A.k,D.k))
                                              ^
NO COPY: R/fvbn2e.R:204:1: style: lines should not be more than 80 characters.
  #Hektarbezogene Kennwerte. urspr. 5 Zielgr\u00f6\u00dfen: Vha, VHbha, Bha, Nha, NDhha
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2e.R:207:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  Yha.bagr.akl.dkl  <- array(dim=c(7,2,n.bagr,A.k,D.k))
  ^~~~~~~~~~~~~~~~
NO COPY: R/fvbn2e.R:207:33: style: Put spaces around all infix operators.
  Yha.bagr.akl.dkl  <- array(dim=c(7,2,n.bagr,A.k,D.k))
                               ~^~
NO COPY: R/fvbn2e.R:207:38: style: Commas should always have a space after.
  Yha.bagr.akl.dkl  <- array(dim=c(7,2,n.bagr,A.k,D.k))
                                     ^
NO COPY: R/fvbn2e.R:207:40: style: Commas should always have a space after.
  Yha.bagr.akl.dkl  <- array(dim=c(7,2,n.bagr,A.k,D.k))
                                       ^
NO COPY: R/fvbn2e.R:207:47: style: Commas should always have a space after.
  Yha.bagr.akl.dkl  <- array(dim=c(7,2,n.bagr,A.k,D.k))
                                              ^
NO COPY: R/fvbn2e.R:207:51: style: Commas should always have a space after.
  Yha.bagr.akl.dkl  <- array(dim=c(7,2,n.bagr,A.k,D.k))
                                                  ^
NO COPY: R/fvbn2e.R:209:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  ant.bagr.akl.dkl  <- array(dim=c(2,A.k,D.k))
  ^~~~~~~~~~~~~~~~
NO COPY: R/fvbn2e.R:209:3: warning: local variable 'ant.bagr.akl.dkl' assigned but may not be used
  ant.bagr.akl.dkl  <- array(dim=c(2,A.k,D.k))
  ^~~~~~~~~~~~~~~~
NO COPY: R/fvbn2e.R:209:33: style: Put spaces around all infix operators.
  ant.bagr.akl.dkl  <- array(dim=c(2,A.k,D.k))
                               ~^~
NO COPY: R/fvbn2e.R:209:38: style: Commas should always have a space after.
  ant.bagr.akl.dkl  <- array(dim=c(2,A.k,D.k))
                                     ^
NO COPY: R/fvbn2e.R:209:42: style: Commas should always have a space after.
  ant.bagr.akl.dkl  <- array(dim=c(2,A.k,D.k))
                                         ^
NO COPY: R/fvbn2e.R:212:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: R/fvbn2e.R:214:3: style: Opening curly braces should never go on their own line and should always be followed by a new line.
  {
  ^
NO COPY: R/fvbn2e.R:216:5: style: Opening curly braces should never go on their own line and should always be followed by a new line.
    {
    ^
NO COPY: R/fvbn2e.R:218:7: style: Opening curly braces should never go on their own line and should always be followed by a new line.
      {
      ^
NO COPY: R/fvbn2e.R:220:9: style: Opening curly braces should never go on their own line and should always be followed by a new line.
        {
        ^
NO COPY: R/fvbn2e.R:222:11: style: Opening curly braces should never go on their own line and should always be followed by a new line.
          {
          ^
NO COPY: R/fvbn2e.R:224:1: style: lines should not be more than 80 characters.
                                  c("tnr", "enr", "bhd", "dkl", "volv", "oib", "nha", "stfl")]
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2e.R:226:11: style: Opening curly braces should never go on their own line and should always be followed by a new line.
          {
          ^
NO COPY: R/fvbn2e.R:227:1: style: lines should not be more than 80 characters.
            baeume.ba <- baeume.s[baeume.s[["bagr"]] == bagr.list[i] & baeume.s[["dkl"]] == dkl.lab[k],
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2e.R:228:1: style: lines should not be more than 80 characters.
                                  c("tnr", "enr", "bhd", "dkl", "volv", "oib", "nha", "stfl")]
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2e.R:231:9: style: Opening curly braces should never go on their own line and should always be followed by a new line.
        {
        ^
NO COPY: R/fvbn2e.R:233:11: style: Opening curly braces should never go on their own line and should always be followed by a new line.
          {
          ^
NO COPY: R/fvbn2e.R:234:1: style: lines should not be more than 80 characters.
            baeume.ba <- baeume.s[baeume.s[["bagr"]] == bagr.list[i] & baeume.s[["akl"]] == akl.lab[j],
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2e.R:235:1: style: lines should not be more than 80 characters.
                                  c("tnr", "enr", "bhd", "dkl", "volv", "oib", "nha", "stfl")]
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2e.R:237:11: style: Opening curly braces should never go on their own line and should always be followed by a new line.
          {
          ^
NO COPY: R/fvbn2e.R:238:1: style: lines should not be more than 80 characters.
            baeume.ba <- baeume.s[baeume.s[["bagr"]] == bagr.list[i] & baeume.s[["akl"]] == akl.lab[j] & baeume.s[["dkl"]] == dkl.lab[k],
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2e.R:239:1: style: lines should not be more than 80 characters.
                                  c("tnr", "enr", "bhd", "dkl", "volv", "oib", "nha", "stfl")]
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2e.R:242:31: style: Commas should always have a space after.
        if (length(baeume.ba[,1])== 0)
                              ^
NO COPY: R/fvbn2e.R:242:34: style: Put spaces around all infix operators.
        if (length(baeume.ba[,1])== 0)
                                ~^
NO COPY: R/fvbn2e.R:243:9: style: Opening curly braces should never go on their own line and should always be followed by a new line.
        {
        ^
NO COPY: R/fvbn2e.R:244:11: style: Words within variable and function names should be separated by '_' rather than '.'.
          Y.bagr.akl.dkl[1:6,1,i,j,k]    <- rep(0,6)  #Zielgr\u00f6\u00dfe Total
          ^~~~~~~~~~~~~~
NO COPY: R/fvbn2e.R:244:30: style: Commas should always have a space after.
          Y.bagr.akl.dkl[1:6,1,i,j,k]    <- rep(0,6)  #Zielgr\u00f6\u00dfe Total
                             ^
NO COPY: R/fvbn2e.R:244:32: style: Commas should always have a space after.
          Y.bagr.akl.dkl[1:6,1,i,j,k]    <- rep(0,6)  #Zielgr\u00f6\u00dfe Total
                               ^
NO COPY: R/fvbn2e.R:244:34: style: Commas should always have a space after.
          Y.bagr.akl.dkl[1:6,1,i,j,k]    <- rep(0,6)  #Zielgr\u00f6\u00dfe Total
                                 ^
NO COPY: R/fvbn2e.R:244:36: style: Commas should always have a space after.
          Y.bagr.akl.dkl[1:6,1,i,j,k]    <- rep(0,6)  #Zielgr\u00f6\u00dfe Total
                                   ^
NO COPY: R/fvbn2e.R:244:51: style: Commas should always have a space after.
          Y.bagr.akl.dkl[1:6,1,i,j,k]    <- rep(0,6)  #Zielgr\u00f6\u00dfe Total
                                                  ^
NO COPY: R/fvbn2e.R:245:11: style: Words within variable and function names should be separated by '_' rather than '.'.
          Y.bagr.akl.dkl[1:6,2,i,j,k]    <- rep(0,6)  #Stichprobenfehler (SE)
          ^~~~~~~~~~~~~~
NO COPY: R/fvbn2e.R:245:30: style: Commas should always have a space after.
          Y.bagr.akl.dkl[1:6,2,i,j,k]    <- rep(0,6)  #Stichprobenfehler (SE)
                             ^
NO COPY: R/fvbn2e.R:245:32: style: Commas should always have a space after.
          Y.bagr.akl.dkl[1:6,2,i,j,k]    <- rep(0,6)  #Stichprobenfehler (SE)
                               ^
NO COPY: R/fvbn2e.R:245:34: style: Commas should always have a space after.
          Y.bagr.akl.dkl[1:6,2,i,j,k]    <- rep(0,6)  #Stichprobenfehler (SE)
                                 ^
NO COPY: R/fvbn2e.R:245:36: style: Commas should always have a space after.
          Y.bagr.akl.dkl[1:6,2,i,j,k]    <- rep(0,6)  #Stichprobenfehler (SE)
                                   ^
NO COPY: R/fvbn2e.R:245:51: style: Commas should always have a space after.
          Y.bagr.akl.dkl[1:6,2,i,j,k]    <- rep(0,6)  #Stichprobenfehler (SE)
                                                  ^
NO COPY: R/fvbn2e.R:246:11: style: Words within variable and function names should be separated by '_' rather than '.'.
          Yha.bagr.akl.dkl[1:5,1,i,j,k]  <- rep(0,5)
          ^~~~~~~~~~~~~~~~
NO COPY: R/fvbn2e.R:246:32: style: Commas should always have a space after.
          Yha.bagr.akl.dkl[1:5,1,i,j,k]  <- rep(0,5)
                               ^
NO COPY: R/fvbn2e.R:246:34: style: Commas should always have a space after.
          Yha.bagr.akl.dkl[1:5,1,i,j,k]  <- rep(0,5)
                                 ^
NO COPY: R/fvbn2e.R:246:36: style: Commas should always have a space after.
          Yha.bagr.akl.dkl[1:5,1,i,j,k]  <- rep(0,5)
                                   ^
NO COPY: R/fvbn2e.R:246:38: style: Commas should always have a space after.
          Yha.bagr.akl.dkl[1:5,1,i,j,k]  <- rep(0,5)
                                     ^
NO COPY: R/fvbn2e.R:246:51: style: Commas should always have a space after.
          Yha.bagr.akl.dkl[1:5,1,i,j,k]  <- rep(0,5)
                                                  ^
NO COPY: R/fvbn2e.R:247:11: style: Words within variable and function names should be separated by '_' rather than '.'.
          Yha.bagr.akl.dkl[1:5,1,i,j,k]  <- rep(0,5)
          ^~~~~~~~~~~~~~~~
NO COPY: R/fvbn2e.R:247:32: style: Commas should always have a space after.
          Yha.bagr.akl.dkl[1:5,1,i,j,k]  <- rep(0,5)
                               ^
NO COPY: R/fvbn2e.R:247:34: style: Commas should always have a space after.
          Yha.bagr.akl.dkl[1:5,1,i,j,k]  <- rep(0,5)
                                 ^
NO COPY: R/fvbn2e.R:247:36: style: Commas should always have a space after.
          Yha.bagr.akl.dkl[1:5,1,i,j,k]  <- rep(0,5)
                                   ^
NO COPY: R/fvbn2e.R:247:38: style: Commas should always have a space after.
          Yha.bagr.akl.dkl[1:5,1,i,j,k]  <- rep(0,5)
                                     ^
NO COPY: R/fvbn2e.R:247:51: style: Commas should always have a space after.
          Yha.bagr.akl.dkl[1:5,1,i,j,k]  <- rep(0,5)
                                                  ^
NO COPY: R/fvbn2e.R:248:11: style: Variable and function names should be all lowercase.
          nT.bagr.akl.dkl[i,j,k]    <- 0  #n PSU (Trakte)
          ^~~~~~~~~~~~~~~
NO COPY: R/fvbn2e.R:248:11: style: Words within variable and function names should be separated by '_' rather than '.'.
          nT.bagr.akl.dkl[i,j,k]    <- 0  #n PSU (Trakte)
          ^~~~~~~~~~~~~~~
NO COPY: R/fvbn2e.R:248:29: style: Commas should always have a space after.
          nT.bagr.akl.dkl[i,j,k]    <- 0  #n PSU (Trakte)
                            ^
NO COPY: R/fvbn2e.R:248:31: style: Commas should always have a space after.
          nT.bagr.akl.dkl[i,j,k]    <- 0  #n PSU (Trakte)
                              ^
NO COPY: R/fvbn2e.R:250:9: style: Opening curly braces should never go on their own line and should always be followed by a new line.
        {
        ^
NO COPY: R/fvbn2e.R:253:49: style: Commas should always have a space after.
          xy <- stats::aggregate(baeume.ba$stfl,by=list(baeume.ba$tnr),sum)
                                                ^
NO COPY: R/fvbn2e.R:253:51: style: Put spaces around all infix operators.
          xy <- stats::aggregate(baeume.ba$stfl,by=list(baeume.ba$tnr),sum)
                                                 ~^~
NO COPY: R/fvbn2e.R:253:72: style: Commas should always have a space after.
          xy <- stats::aggregate(baeume.ba$stfl,by=list(baeume.ba$tnr),sum)
                                                                       ^
NO COPY: R/fvbn2e.R:254:32: style: Commas should always have a space after.
          names(xy) <- c("tnr","x")
                               ^
NO COPY: R/fvbn2e.R:255:23: style: Put spaces around all infix operators.
          xy$x <- xy$x/10000*lk  #Umrechnung in ha  und L\u00fcckenkorrektur
                     ~^~
NO COPY: R/fvbn2e.R:255:29: style: Put spaces around all infix operators.
          xy$x <- xy$x/10000*lk  #Umrechnung in ha  und L\u00fcckenkorrektur
                           ~^~
NO COPY: R/fvbn2e.R:257:26: style: Commas should always have a space after.
          xy <- cbind(xy,stats::aggregate(baeume.ba$volv*baeume.ba$nha,
                         ^
NO COPY: R/fvbn2e.R:257:57: style: Put spaces around all infix operators.
          xy <- cbind(xy,stats::aggregate(baeume.ba$volv*baeume.ba$nha,
                                                       ~^~
NO COPY: R/fvbn2e.R:258:38: style: Put spaces around all infix operators.
                                   by=list(baeume.ba$tnr),sum)$x )
                                    ~^~
NO COPY: R/fvbn2e.R:258:59: style: Commas should always have a space after.
                                   by=list(baeume.ba$tnr),sum)$x )
                                                          ^
NO COPY: R/fvbn2e.R:262:1: style: lines should not be more than 80 characters.
                      stats::aggregate(baeume.ba$volv*baeume.ba$nha*ifelse(baeume.ba$stfl>0,1,0),
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2e.R:262:54: style: Put spaces around all infix operators.
                      stats::aggregate(baeume.ba$volv*baeume.ba$nha*ifelse(baeume.ba$stfl>0,1,0),
                                                    ~^~
NO COPY: R/fvbn2e.R:262:68: style: Put spaces around all infix operators.
                      stats::aggregate(baeume.ba$volv*baeume.ba$nha*ifelse(baeume.ba$stfl>0,1,0),
                                                                  ~^~
NO COPY: R/fvbn2e.R:262:90: style: Put spaces around all infix operators.
                      stats::aggregate(baeume.ba$volv*baeume.ba$nha*ifelse(baeume.ba$stfl>0,1,0),
                                                                                        ~^~
NO COPY: R/fvbn2e.R:262:93: style: Commas should always have a space after.
                      stats::aggregate(baeume.ba$volv*baeume.ba$nha*ifelse(baeume.ba$stfl>0,1,0),
                                                                                            ^
NO COPY: R/fvbn2e.R:262:95: style: Commas should always have a space after.
                      stats::aggregate(baeume.ba$volv*baeume.ba$nha*ifelse(baeume.ba$stfl>0,1,0),
                                                                                              ^
NO COPY: R/fvbn2e.R:263:35: style: Put spaces around all infix operators.
                                by=list(baeume.ba$tnr),sum)$x )
                                 ~^~
NO COPY: R/fvbn2e.R:263:56: style: Commas should always have a space after.
                                by=list(baeume.ba$tnr),sum)$x )
                                                       ^
NO COPY: R/fvbn2e.R:266:26: style: Commas should always have a space after.
          xy <- cbind(xy,stats::aggregate(baeume.ba$oib*baeume.ba$nha,
                         ^
NO COPY: R/fvbn2e.R:266:56: style: Put spaces around all infix operators.
          xy <- cbind(xy,stats::aggregate(baeume.ba$oib*baeume.ba$nha,
                                                      ~^~
NO COPY: R/fvbn2e.R:267:38: style: Put spaces around all infix operators.
                                   by=list(baeume.ba$tnr),sum)$x/1000)
                                    ~^~
NO COPY: R/fvbn2e.R:267:59: style: Commas should always have a space after.
                                   by=list(baeume.ba$tnr),sum)$x/1000)
                                                          ^
NO COPY: R/fvbn2e.R:267:65: style: Put spaces around all infix operators.
                                   by=list(baeume.ba$tnr),sum)$x/1000)
                                                               ~^~
NO COPY: R/fvbn2e.R:270:1: style: lines should not be more than 80 characters.
          xy <- cbind(xy,stats::aggregate(baeume.ba$nha,by=list(baeume.ba$tnr),sum)$x)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2e.R:270:26: style: Commas should always have a space after.
          xy <- cbind(xy,stats::aggregate(baeume.ba$nha,by=list(baeume.ba$tnr),sum)$x)
                         ^
NO COPY: R/fvbn2e.R:270:57: style: Commas should always have a space after.
          xy <- cbind(xy,stats::aggregate(baeume.ba$nha,by=list(baeume.ba$tnr),sum)$x)
                                                        ^
NO COPY: R/fvbn2e.R:270:59: style: Put spaces around all infix operators.
          xy <- cbind(xy,stats::aggregate(baeume.ba$nha,by=list(baeume.ba$tnr),sum)$x)
                                                         ~^~
NO COPY: R/fvbn2e.R:270:80: style: Commas should always have a space after.
          xy <- cbind(xy,stats::aggregate(baeume.ba$nha,by=list(baeume.ba$tnr),sum)$x)
                                                                               ^
NO COPY: R/fvbn2e.R:274:1: style: lines should not be more than 80 characters.
          x.ndh <- try(stats::aggregate(baeume.ba$nha*ifelse(baeume.ba$bhd>=7,1,0),
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2e.R:274:54: style: Put spaces around all infix operators.
          x.ndh <- try(stats::aggregate(baeume.ba$nha*ifelse(baeume.ba$bhd>=7,1,0),
                                                    ~^~
NO COPY: R/fvbn2e.R:274:75: style: Put spaces around all infix operators.
          x.ndh <- try(stats::aggregate(baeume.ba$nha*ifelse(baeume.ba$bhd>=7,1,0),
                                                                         ~^~~
NO COPY: R/fvbn2e.R:274:79: style: Commas should always have a space after.
          x.ndh <- try(stats::aggregate(baeume.ba$nha*ifelse(baeume.ba$bhd>=7,1,0),
                                                                              ^
NO COPY: R/fvbn2e.R:274:81: style: Commas should always have a space after.
          x.ndh <- try(stats::aggregate(baeume.ba$nha*ifelse(baeume.ba$bhd>=7,1,0),
                                                                                ^
NO COPY: R/fvbn2e.R:275:36: style: Put spaces around all infix operators.
                                 by=list(baeume.ba$tnr),sum)$x, silent=T )
                                  ~^~
NO COPY: R/fvbn2e.R:275:57: style: Commas should always have a space after.
                                 by=list(baeume.ba$tnr),sum)$x, silent=T )
                                                        ^
NO COPY: R/fvbn2e.R:275:71: style: Put spaces around all infix operators.
                                 by=list(baeume.ba$tnr),sum)$x, silent=T )
                                                                     ~^~
NO COPY: R/fvbn2e.R:276:32: style: Commas should always have a space after.
          if (length(grep("7)",dkl.lab[k]))>0)
                               ^
NO COPY: R/fvbn2e.R:276:44: style: Put spaces around all infix operators.
          if (length(grep("7)",dkl.lab[k]))>0)
                                          ~^~
NO COPY: R/fvbn2e.R:277:11: style: Opening curly braces should never go on their own line and should always be followed by a new line.
          {
          ^
NO COPY: R/fvbn2e.R:278:28: style: Commas should always have a space after.
            x.ndh <- rep(0,length(xy[,1]))
                           ^
NO COPY: R/fvbn2e.R:278:39: style: Commas should always have a space after.
            x.ndh <- rep(0,length(xy[,1]))
                                      ^
NO COPY: R/fvbn2e.R:280:26: style: Commas should always have a space after.
          xy <- cbind(xy,x.ndh)
                         ^
NO COPY: R/fvbn2e.R:282:11: style: Words within variable and function names should be separated by '_' rather than '.'.
          x.ndh.hb <- try(stats::aggregate(baeume.ba$nha*ifelse(
          ^~~~~~~~
NO COPY: R/fvbn2e.R:282:57: style: Put spaces around all infix operators.
          x.ndh.hb <- try(stats::aggregate(baeume.ba$nha*ifelse(
                                                       ~^~
NO COPY: R/fvbn2e.R:283:26: style: Put spaces around all infix operators.
            baeume.ba$bhd>=7 & baeume.ba$stfl>0,1,0),
                        ~^~~
NO COPY: R/fvbn2e.R:283:46: style: Put spaces around all infix operators.
            baeume.ba$bhd>=7 & baeume.ba$stfl>0,1,0),
                                            ~^~
NO COPY: R/fvbn2e.R:283:49: style: Commas should always have a space after.
            baeume.ba$bhd>=7 & baeume.ba$stfl>0,1,0),
                                                ^
NO COPY: R/fvbn2e.R:283:51: style: Commas should always have a space after.
            baeume.ba$bhd>=7 & baeume.ba$stfl>0,1,0),
                                                  ^
NO COPY: R/fvbn2e.R:284:15: style: Put spaces around all infix operators.
            by=list(baeume.ba$tnr),sum)$x, silent=T )
             ~^~
NO COPY: R/fvbn2e.R:284:36: style: Commas should always have a space after.
            by=list(baeume.ba$tnr),sum)$x, silent=T )
                                   ^
NO COPY: R/fvbn2e.R:284:50: style: Put spaces around all infix operators.
            by=list(baeume.ba$tnr),sum)$x, silent=T )
                                                ~^~
NO COPY: R/fvbn2e.R:285:32: style: Commas should always have a space after.
          if (length(grep("7)",dkl.lab[k]))>0)
                               ^
NO COPY: R/fvbn2e.R:285:44: style: Put spaces around all infix operators.
          if (length(grep("7)",dkl.lab[k]))>0)
                                          ~^~
NO COPY: R/fvbn2e.R:286:11: style: Opening curly braces should never go on their own line and should always be followed by a new line.
          {
          ^
NO COPY: R/fvbn2e.R:287:13: style: Words within variable and function names should be separated by '_' rather than '.'.
            x.ndh.hb <- rep(0,length(xy[,1]))
            ^~~~~~~~
NO COPY: R/fvbn2e.R:287:31: style: Commas should always have a space after.
            x.ndh.hb <- rep(0,length(xy[,1]))
                              ^
NO COPY: R/fvbn2e.R:287:42: style: Commas should always have a space after.
            x.ndh.hb <- rep(0,length(xy[,1]))
                                         ^
NO COPY: R/fvbn2e.R:289:26: style: Commas should always have a space after.
          xy <- cbind(xy,x.ndh.hb)
                         ^
NO COPY: R/fvbn2e.R:289:26: style: Words within variable and function names should be separated by '_' rather than '.'.
          xy <- cbind(xy,x.ndh.hb)
                         ^~~~~~~~
NO COPY: R/fvbn2e.R:291:1: style: Trailing whitespace is superfluous.
          
^~~~~~~~~~
NO COPY: R/fvbn2e.R:295:11: style: Variable and function names should be all lowercase.
          nT.bagr.akl.dkl[i,j,k] <- length(xy[,1])
          ^~~~~~~~~~~~~~~
NO COPY: R/fvbn2e.R:295:11: style: Words within variable and function names should be separated by '_' rather than '.'.
          nT.bagr.akl.dkl[i,j,k] <- length(xy[,1])
          ^~~~~~~~~~~~~~~
NO COPY: R/fvbn2e.R:295:29: style: Commas should always have a space after.
          nT.bagr.akl.dkl[i,j,k] <- length(xy[,1])
                            ^
NO COPY: R/fvbn2e.R:295:31: style: Commas should always have a space after.
          nT.bagr.akl.dkl[i,j,k] <- length(xy[,1])
                              ^
NO COPY: R/fvbn2e.R:295:48: style: Commas should always have a space after.
          nT.bagr.akl.dkl[i,j,k] <- length(xy[,1])
                                               ^
NO COPY: R/fvbn2e.R:296:1: style: lines should not be more than 80 characters.
          #---  Erg\u00e4nzug 11.10. <m_bhb>    Hinweis: Offset f\u00fcr Indizierung ange-
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2e.R:300:56: style: Commas should always have a space after.
          xy <- merge(xy.s[TRUE, c("tnr", "m", "hbf")],xy,by=c("tnr"),all.x=T)
                                                       ^
NO COPY: R/fvbn2e.R:300:59: style: Commas should always have a space after.
          xy <- merge(xy.s[TRUE, c("tnr", "m", "hbf")],xy,by=c("tnr"),all.x=T)
                                                          ^
NO COPY: R/fvbn2e.R:300:61: style: Put spaces around all infix operators.
          xy <- merge(xy.s[TRUE, c("tnr", "m", "hbf")],xy,by=c("tnr"),all.x=T)
                                                           ~^~
NO COPY: R/fvbn2e.R:300:71: style: Commas should always have a space after.
          xy <- merge(xy.s[TRUE, c("tnr", "m", "hbf")],xy,by=c("tnr"),all.x=T)
                                                                      ^
NO COPY: R/fvbn2e.R:300:76: style: Put spaces around all infix operators.
          xy <- merge(xy.s[TRUE, c("tnr", "m", "hbf")],xy,by=c("tnr"),all.x=T)
                                                                          ~^~
NO COPY: R/fvbn2e.R:301:12: style: Commented code should be removed.
          #xy <- merge(trakte[TRUE, c("tnr", "m,m_bhb")],xy,by=c("tnr"),all.x=T)
           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2e.R:303:1: style: Trailing whitespace is superfluous.
          
^~~~~~~~~~
NO COPY: R/fvbn2e.R:305:11: style: Opening curly braces should never go on their own line and should always be followed by a new line.
          {
          ^
NO COPY: R/fvbn2e.R:306:1: style: lines should not be more than 80 characters.
            #Zielgr\u00f6\u00dfen Y {BAF,V,VHb,B,N,NDh,NDhHb)   (Offset von (2+l) auf (3+l)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2e.R:307:1: style: lines should not be more than 80 characters.
            #wegen zus\u00e4tzlichem Attribut <m_bhb> ge\u00e4ndert (k\u00e4/11.10.14)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2e.R:308:49: style: Commas should always have a space after.
            R.list <- r.variance.fun(cbind(xy$m,xy[,(3+l)]),nT)
                                                ^
NO COPY: R/fvbn2e.R:308:53: style: Commas should always have a space after.
            R.list <- r.variance.fun(cbind(xy$m,xy[,(3+l)]),nT)
                                                    ^
NO COPY: R/fvbn2e.R:308:53: style: Place a space before left parenthesis, except in a function call.
            R.list <- r.variance.fun(cbind(xy$m,xy[,(3+l)]),nT)
                                                    ^
NO COPY: R/fvbn2e.R:308:55: style: Put spaces around all infix operators.
            R.list <- r.variance.fun(cbind(xy$m,xy[,(3+l)]),nT)
                                                     ~^~
NO COPY: R/fvbn2e.R:308:61: style: Commas should always have a space after.
            R.list <- r.variance.fun(cbind(xy$m,xy[,(3+l)]),nT)
                                                            ^
NO COPY: R/fvbn2e.R:310:13: style: Words within variable and function names should be separated by '_' rather than '.'.
            Y.bagr.akl.dkl[l,1,i,j,k] <- R.list$R.xy*A
            ^~~~~~~~~~~~~~
NO COPY: R/fvbn2e.R:310:30: style: Commas should always have a space after.
            Y.bagr.akl.dkl[l,1,i,j,k] <- R.list$R.xy*A
                             ^
NO COPY: R/fvbn2e.R:310:32: style: Commas should always have a space after.
            Y.bagr.akl.dkl[l,1,i,j,k] <- R.list$R.xy*A
                               ^
NO COPY: R/fvbn2e.R:310:34: style: Commas should always have a space after.
            Y.bagr.akl.dkl[l,1,i,j,k] <- R.list$R.xy*A
                                 ^
NO COPY: R/fvbn2e.R:310:36: style: Commas should always have a space after.
            Y.bagr.akl.dkl[l,1,i,j,k] <- R.list$R.xy*A
                                   ^
NO COPY: R/fvbn2e.R:310:53: style: Put spaces around all infix operators.
            Y.bagr.akl.dkl[l,1,i,j,k] <- R.list$R.xy*A
                                                   ~^~
NO COPY: R/fvbn2e.R:311:14: style: Commented code should be removed.
            #sum(xy[,(1+l)])/sum(x)*A *ifelse(l==1,lk,1)
             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2e.R:314:13: style: Words within variable and function names should be separated by '_' rather than '.'.
            Y.bagr.akl.dkl[l,2,i,j,k] <- sqrt(R.list$V.R.xy)*A
            ^~~~~~~~~~~~~~
NO COPY: R/fvbn2e.R:314:30: style: Commas should always have a space after.
            Y.bagr.akl.dkl[l,2,i,j,k] <- sqrt(R.list$V.R.xy)*A
                             ^
NO COPY: R/fvbn2e.R:314:32: style: Commas should always have a space after.
            Y.bagr.akl.dkl[l,2,i,j,k] <- sqrt(R.list$V.R.xy)*A
                               ^
NO COPY: R/fvbn2e.R:314:34: style: Commas should always have a space after.
            Y.bagr.akl.dkl[l,2,i,j,k] <- sqrt(R.list$V.R.xy)*A
                                 ^
NO COPY: R/fvbn2e.R:314:36: style: Commas should always have a space after.
            Y.bagr.akl.dkl[l,2,i,j,k] <- sqrt(R.list$V.R.xy)*A
                                   ^
NO COPY: R/fvbn2e.R:314:54: style: Words within variable and function names should be separated by '_' rather than '.'.
            Y.bagr.akl.dkl[l,2,i,j,k] <- sqrt(R.list$V.R.xy)*A
                                                     ^~~~~~
NO COPY: R/fvbn2e.R:314:61: style: Put spaces around all infix operators.
            Y.bagr.akl.dkl[l,2,i,j,k] <- sqrt(R.list$V.R.xy)*A
                                                           ~^~
NO COPY: R/fvbn2e.R:315:1: style: Trailing whitespace is superfluous.
            
^~~~~~~~~~~~
NO COPY: R/fvbn2e.R:318:1: style: lines should not be more than 80 characters.
            #if (l > 1)    #Hinweis: l+1 = Spalte der Zielgr\u00f6\u00dfe in xy; Spalte 2
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2e.R:321:13: style: Opening curly braces should never go on their own line and should always be followed by a new line.
            {
            ^
NO COPY: R/fvbn2e.R:322:53: style: Commas should always have a space after.
              R.list <- r.variance.fun(cbind(xy$hbf,xy[,(3+l)]),nT)
                                                    ^
NO COPY: R/fvbn2e.R:322:57: style: Commas should always have a space after.
              R.list <- r.variance.fun(cbind(xy$hbf,xy[,(3+l)]),nT)
                                                        ^
NO COPY: R/fvbn2e.R:322:57: style: Place a space before left parenthesis, except in a function call.
              R.list <- r.variance.fun(cbind(xy$hbf,xy[,(3+l)]),nT)
                                                        ^
NO COPY: R/fvbn2e.R:322:59: style: Put spaces around all infix operators.
              R.list <- r.variance.fun(cbind(xy$hbf,xy[,(3+l)]),nT)
                                                         ~^~
NO COPY: R/fvbn2e.R:322:65: style: Commas should always have a space after.
              R.list <- r.variance.fun(cbind(xy$hbf,xy[,(3+l)]),nT)
                                                                ^
NO COPY: R/fvbn2e.R:324:41: style: Put spaces around all infix operators.
              R.list$R.xy <- R.list$R.xy*100
                                       ~^~
NO COPY: R/fvbn2e.R:325:22: style: Words within variable and function names should be separated by '_' rather than '.'.
              R.list$V.R.xy <- R.list$V.R.xy*10000
                     ^~~~~~
NO COPY: R/fvbn2e.R:325:39: style: Words within variable and function names should be separated by '_' rather than '.'.
              R.list$V.R.xy <- R.list$V.R.xy*10000
                                      ^~~~~~
NO COPY: R/fvbn2e.R:325:45: style: Put spaces around all infix operators.
              R.list$V.R.xy <- R.list$V.R.xy*10000
                                           ~^~
NO COPY: R/fvbn2e.R:327:13: style: Opening curly braces should never go on their own line and should always be followed by a new line.
            {
            ^
NO COPY: R/fvbn2e.R:332:41: style: Commas should always have a space after.
              lk.c <- ifelse(l %in% c(3,7) ,lk,1) #lk.c macht bei HB-Vorrat
                                        ^
NO COPY: R/fvbn2e.R:332:44: style: Commas should never have a space before.
              lk.c <- ifelse(l %in% c(3,7) ,lk,1) #lk.c macht bei HB-Vorrat
                                          ~^
NO COPY: R/fvbn2e.R:332:45: style: Commas should always have a space after.
              lk.c <- ifelse(l %in% c(3,7) ,lk,1) #lk.c macht bei HB-Vorrat
                                            ^
NO COPY: R/fvbn2e.R:332:48: style: Commas should always have a space after.
              lk.c <- ifelse(l %in% c(3,7) ,lk,1) #lk.c macht bei HB-Vorrat
                                               ^
NO COPY: R/fvbn2e.R:333:1: style: lines should not be more than 80 characters.
              #L\u00fcckenkorrektur r\u00fcckg\u00e4ngig Hinweis: Offset von (2+l) auf (3+l)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2e.R:334:1: style: lines should not be more than 80 characters.
              #wegen zus\u00e4tzlichem Attribut <m_bhb> ge\u00e4ndert (k\u00e4/11.10.14)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2e.R:335:50: style: Put spaces around all infix operators.
              R.list <- r.variance.fun(cbind(xy$x/lk.c,xy[,(3+l)]),nT)
                                                ~^~
NO COPY: R/fvbn2e.R:335:56: style: Commas should always have a space after.
              R.list <- r.variance.fun(cbind(xy$x/lk.c,xy[,(3+l)]),nT)
                                                       ^
NO COPY: R/fvbn2e.R:335:60: style: Commas should always have a space after.
              R.list <- r.variance.fun(cbind(xy$x/lk.c,xy[,(3+l)]),nT)
                                                           ^
NO COPY: R/fvbn2e.R:335:60: style: Place a space before left parenthesis, except in a function call.
              R.list <- r.variance.fun(cbind(xy$x/lk.c,xy[,(3+l)]),nT)
                                                           ^
NO COPY: R/fvbn2e.R:335:62: style: Put spaces around all infix operators.
              R.list <- r.variance.fun(cbind(xy$x/lk.c,xy[,(3+l)]),nT)
                                                            ~^~
NO COPY: R/fvbn2e.R:335:68: style: Commas should always have a space after.
              R.list <- r.variance.fun(cbind(xy$x/lk.c,xy[,(3+l)]),nT)
                                                                   ^
NO COPY: R/fvbn2e.R:339:13: style: Words within variable and function names should be separated by '_' rather than '.'.
            Yha.bagr.akl.dkl[l.ha,1,i,j,k] <- R.list$R.xy
            ^~~~~~~~~~~~~~~~
NO COPY: R/fvbn2e.R:339:35: style: Commas should always have a space after.
            Yha.bagr.akl.dkl[l.ha,1,i,j,k] <- R.list$R.xy
                                  ^
NO COPY: R/fvbn2e.R:339:37: style: Commas should always have a space after.
            Yha.bagr.akl.dkl[l.ha,1,i,j,k] <- R.list$R.xy
                                    ^
NO COPY: R/fvbn2e.R:339:39: style: Commas should always have a space after.
            Yha.bagr.akl.dkl[l.ha,1,i,j,k] <- R.list$R.xy
                                      ^
NO COPY: R/fvbn2e.R:339:41: style: Commas should always have a space after.
            Yha.bagr.akl.dkl[l.ha,1,i,j,k] <- R.list$R.xy
                                        ^
NO COPY: R/fvbn2e.R:340:28: style: Commented code should be removed.
            #              Y.bagr.akl.dkl[l,1,i,j,k]/Y.bagr.akl.dkl[1,1,i,j,k]
                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2e.R:341:13: style: Words within variable and function names should be separated by '_' rather than '.'.
            Yha.bagr.akl.dkl[l.ha,2,i,j,k] <- sqrt(R.list$V.R.xy)
            ^~~~~~~~~~~~~~~~
NO COPY: R/fvbn2e.R:341:35: style: Commas should always have a space after.
            Yha.bagr.akl.dkl[l.ha,2,i,j,k] <- sqrt(R.list$V.R.xy)
                                  ^
NO COPY: R/fvbn2e.R:341:37: style: Commas should always have a space after.
            Yha.bagr.akl.dkl[l.ha,2,i,j,k] <- sqrt(R.list$V.R.xy)
                                    ^
NO COPY: R/fvbn2e.R:341:39: style: Commas should always have a space after.
            Yha.bagr.akl.dkl[l.ha,2,i,j,k] <- sqrt(R.list$V.R.xy)
                                      ^
NO COPY: R/fvbn2e.R:341:41: style: Commas should always have a space after.
            Yha.bagr.akl.dkl[l.ha,2,i,j,k] <- sqrt(R.list$V.R.xy)
                                        ^
NO COPY: R/fvbn2e.R:341:59: style: Words within variable and function names should be separated by '_' rather than '.'.
            Yha.bagr.akl.dkl[l.ha,2,i,j,k] <- sqrt(R.list$V.R.xy)
                                                          ^~~~~~
NO COPY: R/fvbn2e.R:342:1: style: Trailing whitespace is superfluous.
            
^~~~~~~~~~~~
NO COPY: R/fvbn2e.R:352:5: style: Place a space before left parenthesis, except in a function call.
  if(n.bagr > 1)
    ^
NO COPY: R/fvbn2e.R:353:3: style: Opening curly braces should never go on their own line and should always be followed by a new line.
  {
  ^
NO COPY: R/fvbn2e.R:357:14: style: Commas should always have a space after.
      baeume,ecken,trakte,A,inv,
             ^
NO COPY: R/fvbn2e.R:357:20: style: Commas should always have a space after.
      baeume,ecken,trakte,A,inv,
                   ^
NO COPY: R/fvbn2e.R:357:27: style: Commas should always have a space after.
      baeume,ecken,trakte,A,inv,
                          ^
NO COPY: R/fvbn2e.R:357:29: style: Commas should always have a space after.
      baeume,ecken,trakte,A,inv,
                            ^
NO COPY: R/fvbn2e.R:358:43: style: Commas should always have a space after.
      list(bagr.lab = c("Alle Baumarten"),ba.grupp =list(c(10:299))),
                                          ^
NO COPY: R/fvbn2e.R:358:52: style: Put spaces around all infix operators.
      list(bagr.lab = c("Alle Baumarten"),ba.grupp =list(c(10:299))),
                                                   ^~
NO COPY: R/fvbn2e.R:359:15: style: Commas should always have a space after.
      A.klass,D.klass,auswahl)
              ^
NO COPY: R/fvbn2e.R:359:23: style: Commas should always have a space after.
      A.klass,D.klass,auswahl)
                      ^
NO COPY: R/fvbn2e.R:360:25: style: Put spaces around all infix operators.
    t.fvbn  <- array(dim=c(7,2,(n.bagr+1),A.k,D.k))
                       ~^~
NO COPY: R/fvbn2e.R:360:30: style: Commas should always have a space after.
    t.fvbn  <- array(dim=c(7,2,(n.bagr+1),A.k,D.k))
                             ^
NO COPY: R/fvbn2e.R:360:32: style: Commas should always have a space after.
    t.fvbn  <- array(dim=c(7,2,(n.bagr+1),A.k,D.k))
                               ^
NO COPY: R/fvbn2e.R:360:32: style: Place a space before left parenthesis, except in a function call.
    t.fvbn  <- array(dim=c(7,2,(n.bagr+1),A.k,D.k))
                               ^
NO COPY: R/fvbn2e.R:360:39: style: Put spaces around all infix operators.
    t.fvbn  <- array(dim=c(7,2,(n.bagr+1),A.k,D.k))
                                     ~^~
NO COPY: R/fvbn2e.R:360:43: style: Commas should always have a space after.
    t.fvbn  <- array(dim=c(7,2,(n.bagr+1),A.k,D.k))
                                          ^
NO COPY: R/fvbn2e.R:360:47: style: Commas should always have a space after.
    t.fvbn  <- array(dim=c(7,2,(n.bagr+1),A.k,D.k))
                                              ^
NO COPY: R/fvbn2e.R:361:25: style: Put spaces around all infix operators.
    fvbn.ha <- array(dim=c(7,2,(n.bagr+1),A.k,D.k))
                       ~^~
NO COPY: R/fvbn2e.R:361:30: style: Commas should always have a space after.
    fvbn.ha <- array(dim=c(7,2,(n.bagr+1),A.k,D.k))
                             ^
NO COPY: R/fvbn2e.R:361:32: style: Commas should always have a space after.
    fvbn.ha <- array(dim=c(7,2,(n.bagr+1),A.k,D.k))
                               ^
NO COPY: R/fvbn2e.R:361:32: style: Place a space before left parenthesis, except in a function call.
    fvbn.ha <- array(dim=c(7,2,(n.bagr+1),A.k,D.k))
                               ^
NO COPY: R/fvbn2e.R:361:39: style: Put spaces around all infix operators.
    fvbn.ha <- array(dim=c(7,2,(n.bagr+1),A.k,D.k))
                                     ~^~
NO COPY: R/fvbn2e.R:361:43: style: Commas should always have a space after.
    fvbn.ha <- array(dim=c(7,2,(n.bagr+1),A.k,D.k))
                                          ^
NO COPY: R/fvbn2e.R:361:47: style: Commas should always have a space after.
    fvbn.ha <- array(dim=c(7,2,(n.bagr+1),A.k,D.k))
                                              ^
NO COPY: R/fvbn2e.R:362:25: style: Put spaces around all infix operators.
    nt      <- array(dim=c((n.bagr+1),A.k,D.k))
                       ~^~
NO COPY: R/fvbn2e.R:362:28: style: Place a space before left parenthesis, except in a function call.
    nt      <- array(dim=c((n.bagr+1),A.k,D.k))
                           ^
NO COPY: R/fvbn2e.R:362:35: style: Put spaces around all infix operators.
    nt      <- array(dim=c((n.bagr+1),A.k,D.k))
                                 ~^~
NO COPY: R/fvbn2e.R:362:39: style: Commas should always have a space after.
    nt      <- array(dim=c((n.bagr+1),A.k,D.k))
                                      ^
NO COPY: R/fvbn2e.R:362:43: style: Commas should always have a space after.
    nt      <- array(dim=c((n.bagr+1),A.k,D.k))
                                          ^
NO COPY: R/fvbn2e.R:363:13: style: Commas should always have a space after.
    t.fvbn[,,1:n.bagr,,] <- Y.bagr.akl.dkl
            ^
NO COPY: R/fvbn2e.R:363:23: style: Commas should always have a space after.
    t.fvbn[,,1:n.bagr,,] <- Y.bagr.akl.dkl
                      ^
NO COPY: R/fvbn2e.R:363:29: style: Words within variable and function names should be separated by '_' rather than '.'.
    t.fvbn[,,1:n.bagr,,] <- Y.bagr.akl.dkl
                            ^~~~~~~~~~~~~~
NO COPY: R/fvbn2e.R:364:14: style: Commas should always have a space after.
    fvbn.ha[,,1:n.bagr,,]<- Yha.bagr.akl.dkl
             ^
NO COPY: R/fvbn2e.R:364:24: style: Commas should always have a space after.
    fvbn.ha[,,1:n.bagr,,]<- Yha.bagr.akl.dkl
                       ^
NO COPY: R/fvbn2e.R:364:26: style: Put spaces around all infix operators.
    fvbn.ha[,,1:n.bagr,,]<- Yha.bagr.akl.dkl
                        ~^
NO COPY: R/fvbn2e.R:364:29: style: Words within variable and function names should be separated by '_' rather than '.'.
    fvbn.ha[,,1:n.bagr,,]<- Yha.bagr.akl.dkl
                            ^~~~~~~~~~~~~~~~
NO COPY: R/fvbn2e.R:365:17: style: Commas should always have a space after.
    nt[1:n.bagr,,]       <- nT.bagr.akl.dkl
                ^
NO COPY: R/fvbn2e.R:365:29: style: Variable and function names should be all lowercase.
    nt[1:n.bagr,,]       <- nT.bagr.akl.dkl
                            ^~~~~~~~~~~~~~~
NO COPY: R/fvbn2e.R:365:29: style: Words within variable and function names should be separated by '_' rather than '.'.
    nt[1:n.bagr,,]       <- nT.bagr.akl.dkl
                            ^~~~~~~~~~~~~~~
NO COPY: R/fvbn2e.R:366:13: style: Commas should always have a space after.
    t.fvbn[,,(n.bagr+1),,]   <- fvbn.alleba$T.FVBN.Bagr.Akl.Dkl
            ^
NO COPY: R/fvbn2e.R:366:14: style: Place a space before left parenthesis, except in a function call.
    t.fvbn[,,(n.bagr+1),,]   <- fvbn.alleba$T.FVBN.Bagr.Akl.Dkl
             ^
NO COPY: R/fvbn2e.R:366:21: style: Put spaces around all infix operators.
    t.fvbn[,,(n.bagr+1),,]   <- fvbn.alleba$T.FVBN.Bagr.Akl.Dkl
                   ~^~
NO COPY: R/fvbn2e.R:366:25: style: Commas should always have a space after.
    t.fvbn[,,(n.bagr+1),,]   <- fvbn.alleba$T.FVBN.Bagr.Akl.Dkl
                        ^
NO COPY: R/fvbn2e.R:366:45: style: Words within variable and function names should be separated by '_' rather than '.'.
    t.fvbn[,,(n.bagr+1),,]   <- fvbn.alleba$T.FVBN.Bagr.Akl.Dkl
                                            ^~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2e.R:367:14: style: Commas should always have a space after.
    fvbn.ha[,,(n.bagr+1),,]  <- fvbn.alleba$FVBN.ha.Bagr.Akl.Dkl
             ^
NO COPY: R/fvbn2e.R:367:15: style: Place a space before left parenthesis, except in a function call.
    fvbn.ha[,,(n.bagr+1),,]  <- fvbn.alleba$FVBN.ha.Bagr.Akl.Dkl
              ^
NO COPY: R/fvbn2e.R:367:22: style: Put spaces around all infix operators.
    fvbn.ha[,,(n.bagr+1),,]  <- fvbn.alleba$FVBN.ha.Bagr.Akl.Dkl
                    ~^~
NO COPY: R/fvbn2e.R:367:26: style: Commas should always have a space after.
    fvbn.ha[,,(n.bagr+1),,]  <- fvbn.alleba$FVBN.ha.Bagr.Akl.Dkl
                         ^
NO COPY: R/fvbn2e.R:367:45: style: Words within variable and function names should be separated by '_' rather than '.'.
    fvbn.ha[,,(n.bagr+1),,]  <- fvbn.alleba$FVBN.ha.Bagr.Akl.Dkl
                                            ^~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2e.R:368:15: style: Put spaces around all infix operators.
    nt[(n.bagr+1),,]         <- fvbn.alleba$nT.Bagr.Akl.Dkl
             ~^~
NO COPY: R/fvbn2e.R:368:19: style: Commas should always have a space after.
    nt[(n.bagr+1),,]         <- fvbn.alleba$nT.Bagr.Akl.Dkl
                  ^
NO COPY: R/fvbn2e.R:368:45: style: Variable and function names should be all lowercase.
    nt[(n.bagr+1),,]         <- fvbn.alleba$nT.Bagr.Akl.Dkl
                                            ^~~~~~~~~~~~~~~
NO COPY: R/fvbn2e.R:368:45: style: Words within variable and function names should be separated by '_' rather than '.'.
    nt[(n.bagr+1),,]         <- fvbn.alleba$nT.Bagr.Akl.Dkl
                                            ^~~~~~~~~~~~~~~
NO COPY: R/fvbn2e.R:369:5: style: Words within variable and function names should be separated by '_' rather than '.'.
    Y.bagr.akl.dkl       <- t.fvbn
    ^~~~~~~~~~~~~~
NO COPY: R/fvbn2e.R:370:5: style: Words within variable and function names should be separated by '_' rather than '.'.
    Yha.bagr.akl.dkl     <- fvbn.ha
    ^~~~~~~~~~~~~~~~
NO COPY: R/fvbn2e.R:371:5: style: Variable and function names should be all lowercase.
    nT.bagr.akl.dkl      <- nt
    ^~~~~~~~~~~~~~~
NO COPY: R/fvbn2e.R:371:5: style: Words within variable and function names should be separated by '_' rather than '.'.
    nT.bagr.akl.dkl      <- nt
    ^~~~~~~~~~~~~~~
NO COPY: R/fvbn2e.R:372:41: style: Commas should always have a space after.
    bagr.list            <- c(bagr.list,"Alle BA")
                                        ^
NO COPY: R/fvbn2e.R:376:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: R/fvbn2e.R:377:4: style: Commented code should be removed.
  #AKL-Labels
   ^~~~~~~~~~
NO COPY: R/fvbn2e.R:379:34: style: Commas should always have a space after.
  akl.lab <- akl.lab.fun(A.klass,ifelse(A.k>1,(A.k-1),A.k)) #k\u00e4/16.07.14
                                 ^
NO COPY: R/fvbn2e.R:379:44: style: Put spaces around all infix operators.
  akl.lab <- akl.lab.fun(A.klass,ifelse(A.k>1,(A.k-1),A.k)) #k\u00e4/16.07.14
                                          ~^~
NO COPY: R/fvbn2e.R:379:47: style: Commas should always have a space after.
  akl.lab <- akl.lab.fun(A.klass,ifelse(A.k>1,(A.k-1),A.k)) #k\u00e4/16.07.14
                                              ^
NO COPY: R/fvbn2e.R:379:47: style: Place a space before left parenthesis, except in a function call.
  akl.lab <- akl.lab.fun(A.klass,ifelse(A.k>1,(A.k-1),A.k)) #k\u00e4/16.07.14
                                              ^
NO COPY: R/fvbn2e.R:379:51: style: Put spaces around all infix operators.
  akl.lab <- akl.lab.fun(A.klass,ifelse(A.k>1,(A.k-1),A.k)) #k\u00e4/16.07.14
                                                 ~^~
NO COPY: R/fvbn2e.R:379:55: style: Commas should always have a space after.
  akl.lab <- akl.lab.fun(A.klass,ifelse(A.k>1,(A.k-1),A.k)) #k\u00e4/16.07.14
                                                      ^
NO COPY: R/fvbn2e.R:381:37: style: Commas should always have a space after.
  if (A.k > 1) akl.lab <- c(akl.lab,"Alle AKl")
                                    ^
NO COPY: R/fvbn2e.R:383:34: style: Trailing whitespace is superfluous.
  #DKL-Labels  k\u00e4/16.07.2014 
                                 ^
NO COPY: R/fvbn2e.R:385:34: style: Commas should always have a space after.
  dkl.lab <- dkl.lab.fun(D.klass,(D.k-1)) #k\u00e4/16.07.14
                                 ^
NO COPY: R/fvbn2e.R:385:34: style: Place a space before left parenthesis, except in a function call.
  dkl.lab <- dkl.lab.fun(D.klass,(D.k-1)) #k\u00e4/16.07.14
                                 ^
NO COPY: R/fvbn2e.R:385:38: style: Put spaces around all infix operators.
  dkl.lab <- dkl.lab.fun(D.klass,(D.k-1)) #k\u00e4/16.07.14
                                    ~^~
NO COPY: R/fvbn2e.R:387:37: style: Commas should always have a space after.
  if (D.k > 1) dkl.lab <- c(dkl.lab,"Alle DKl")
                                    ^
NO COPY: R/fvbn2e.R:388:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: R/fvbn2e.R:390:20: style: Commas should always have a space after.
  a <- regexpr("/",baeume$bemerk[baeume$stp==0][1],fixed=T)
                   ^
NO COPY: R/fvbn2e.R:390:44: style: Put spaces around all infix operators.
  a <- regexpr("/",baeume$bemerk[baeume$stp==0][1],fixed=T)
                                          ~^~~
NO COPY: R/fvbn2e.R:390:52: style: Commas should always have a space after.
  a <- regexpr("/",baeume$bemerk[baeume$stp==0][1],fixed=T)
                                                   ^
NO COPY: R/fvbn2e.R:390:57: style: Put spaces around all infix operators.
  a <- regexpr("/",baeume$bemerk[baeume$stp==0][1],fixed=T)
                                                       ~^~
NO COPY: R/fvbn2e.R:391:51: style: Put spaces around all infix operators.
  b <- nchar(as.character(baeume$bemerk[baeume$stp==0][1]))
                                                 ~^~~
NO COPY: R/fvbn2e.R:392:3: style: Words within variable and function names should be separated by '_' rather than '.'.
  version.baeume.b  <- substr(as.character(baeume$bemerk[baeume$stp==0][1]),a,b)
  ^~~~~~~~~~~~~~~~
NO COPY: R/fvbn2e.R:392:3: warning: local variable 'version.baeume.b' assigned but may not be used
  version.baeume.b  <- substr(as.character(baeume$bemerk[baeume$stp==0][1]),a,b)
  ^~~~~~~~~~~~~~~~
NO COPY: R/fvbn2e.R:392:68: style: Put spaces around all infix operators.
  version.baeume.b  <- substr(as.character(baeume$bemerk[baeume$stp==0][1]),a,b)
                                                                  ~^~~
NO COPY: R/fvbn2e.R:392:77: style: Commas should always have a space after.
  version.baeume.b  <- substr(as.character(baeume$bemerk[baeume$stp==0][1]),a,b)
                                                                            ^
NO COPY: R/fvbn2e.R:392:79: style: Commas should always have a space after.
  version.baeume.b  <- substr(as.character(baeume$bemerk[baeume$stp==0][1]),a,b)
                                                                              ^
NO COPY: R/fvbn2e.R:393:20: style: Put spaces around all infix operators.
  Log <- list(Datum=Sys.time(),
                  ~^~
NO COPY: R/fvbn2e.R:394:1: style: lines should not be more than 80 characters.
              Version.baeume.b=substr(as.character(baeume$bemerk[baeume$stp==0][1]),a,b))
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2e.R:394:31: style: Put spaces around all infix operators.
              Version.baeume.b=substr(as.character(baeume$bemerk[baeume$stp==0][1]),a,b))
                             ~^~
NO COPY: R/fvbn2e.R:394:76: style: Put spaces around all infix operators.
              Version.baeume.b=substr(as.character(baeume$bemerk[baeume$stp==0][1]),a,b))
                                                                          ~^~~
NO COPY: R/fvbn2e.R:394:85: style: Commas should always have a space after.
              Version.baeume.b=substr(as.character(baeume$bemerk[baeume$stp==0][1]),a,b))
                                                                                    ^
NO COPY: R/fvbn2e.R:394:87: style: Commas should always have a space after.
              Version.baeume.b=substr(as.character(baeume$bemerk[baeume$stp==0][1]),a,b))
                                                                                      ^
NO COPY: R/fvbn2e.R:395:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: R/fvbn2e.R:396:18: style: Put spaces around all infix operators.
  return(list(Log=Log, Stratum=auswahl, nTE=n.te.s, HBF=T.hbf, se.HBF=se.T.hbf,
                ~^~
NO COPY: R/fvbn2e.R:396:31: style: Put spaces around all infix operators.
  return(list(Log=Log, Stratum=auswahl, nTE=n.te.s, HBF=T.hbf, se.HBF=se.T.hbf,
                             ~^~
NO COPY: R/fvbn2e.R:396:44: style: Put spaces around all infix operators.
  return(list(Log=Log, Stratum=auswahl, nTE=n.te.s, HBF=T.hbf, se.HBF=se.T.hbf,
                                          ~^~
NO COPY: R/fvbn2e.R:396:45: style: Words within variable and function names should be separated by '_' rather than '.'.
  return(list(Log=Log, Stratum=auswahl, nTE=n.te.s, HBF=T.hbf, se.HBF=se.T.hbf,
                                            ^~~~~~
NO COPY: R/fvbn2e.R:396:56: style: Put spaces around all infix operators.
  return(list(Log=Log, Stratum=auswahl, nTE=n.te.s, HBF=T.hbf, se.HBF=se.T.hbf,
                                                      ~^~
NO COPY: R/fvbn2e.R:396:70: style: Put spaces around all infix operators.
  return(list(Log=Log, Stratum=auswahl, nTE=n.te.s, HBF=T.hbf, se.HBF=se.T.hbf,
                                                                    ~^~
NO COPY: R/fvbn2e.R:396:71: style: Words within variable and function names should be separated by '_' rather than '.'.
  return(list(Log=Log, Stratum=auswahl, nTE=n.te.s, HBF=T.hbf, se.HBF=se.T.hbf,
                                                                      ^~~~~~~~
NO COPY: R/fvbn2e.R:397:17: style: Put spaces around all infix operators.
              BL=T.bl,se.BL=se.T.bl,iBL=T.ibl,se.iBL=se.T.ibl,LK=lk,se.LK=se.lk,
               ~^~
NO COPY: R/fvbn2e.R:397:23: style: Commas should always have a space after.
              BL=T.bl,se.BL=se.T.bl,iBL=T.ibl,se.iBL=se.T.ibl,LK=lk,se.LK=se.lk,
                      ^
NO COPY: R/fvbn2e.R:397:28: style: Put spaces around all infix operators.
              BL=T.bl,se.BL=se.T.bl,iBL=T.ibl,se.iBL=se.T.ibl,LK=lk,se.LK=se.lk,
                          ~^~
NO COPY: R/fvbn2e.R:397:29: style: Words within variable and function names should be separated by '_' rather than '.'.
              BL=T.bl,se.BL=se.T.bl,iBL=T.ibl,se.iBL=se.T.ibl,LK=lk,se.LK=se.lk,
                            ^~~~~~~
NO COPY: R/fvbn2e.R:397:37: style: Commas should always have a space after.
              BL=T.bl,se.BL=se.T.bl,iBL=T.ibl,se.iBL=se.T.ibl,LK=lk,se.LK=se.lk,
                                    ^
NO COPY: R/fvbn2e.R:397:40: style: Put spaces around all infix operators.
              BL=T.bl,se.BL=se.T.bl,iBL=T.ibl,se.iBL=se.T.ibl,LK=lk,se.LK=se.lk,
                                      ~^~
NO COPY: R/fvbn2e.R:397:47: style: Commas should always have a space after.
              BL=T.bl,se.BL=se.T.bl,iBL=T.ibl,se.iBL=se.T.ibl,LK=lk,se.LK=se.lk,
                                              ^
NO COPY: R/fvbn2e.R:397:53: style: Put spaces around all infix operators.
              BL=T.bl,se.BL=se.T.bl,iBL=T.ibl,se.iBL=se.T.ibl,LK=lk,se.LK=se.lk,
                                                   ~^~
NO COPY: R/fvbn2e.R:397:54: style: Words within variable and function names should be separated by '_' rather than '.'.
              BL=T.bl,se.BL=se.T.bl,iBL=T.ibl,se.iBL=se.T.ibl,LK=lk,se.LK=se.lk,
                                                     ^~~~~~~~
NO COPY: R/fvbn2e.R:397:63: style: Commas should always have a space after.
              BL=T.bl,se.BL=se.T.bl,iBL=T.ibl,se.iBL=se.T.ibl,LK=lk,se.LK=se.lk,
                                                              ^
NO COPY: R/fvbn2e.R:397:65: style: Put spaces around all infix operators.
              BL=T.bl,se.BL=se.T.bl,iBL=T.ibl,se.iBL=se.T.ibl,LK=lk,se.LK=se.lk,
                                                               ~^~
NO COPY: R/fvbn2e.R:397:69: style: Commas should always have a space after.
              BL=T.bl,se.BL=se.T.bl,iBL=T.ibl,se.iBL=se.T.ibl,LK=lk,se.LK=se.lk,
                                                                    ^
NO COPY: R/fvbn2e.R:397:74: style: Put spaces around all infix operators.
              BL=T.bl,se.BL=se.T.bl,iBL=T.ibl,se.iBL=se.T.ibl,LK=lk,se.LK=se.lk,
                                                                        ~^~
NO COPY: R/fvbn2e.R:398:1: style: lines should not be more than 80 characters.
              Attribute1=c("BAF", "V_DhmR","V_DhmR_HB", "oiB", "N", "N_Dh", "N_Dh_HB"),
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/fvbn2e.R:398:25: style: Put spaces around all infix operators.
              Attribute1=c("BAF", "V_DhmR","V_DhmR_HB", "oiB", "N", "N_Dh", "N_Dh_HB"),
                       ~^~
NO COPY: R/fvbn2e.R:398:44: style: Commas should always have a space after.
              Attribute1=c("BAF", "V_DhmR","V_DhmR_HB", "oiB", "N", "N_Dh", "N_Dh_HB"),
                                           ^
NO COPY: R/fvbn2e.R:400:25: style: Put spaces around all infix operators.
              Attribute2=c("BA_Proz","V_DhmR/ha","V_DhmR_HB/ha","oiB/ha","N/ha",
                       ~^~
NO COPY: R/fvbn2e.R:400:38: style: Commas should always have a space after.
              Attribute2=c("BA_Proz","V_DhmR/ha","V_DhmR_HB/ha","oiB/ha","N/ha",
                                     ^
NO COPY: R/fvbn2e.R:400:50: style: Commas should always have a space after.
              Attribute2=c("BA_Proz","V_DhmR/ha","V_DhmR_HB/ha","oiB/ha","N/ha",
                                                 ^
NO COPY: R/fvbn2e.R:400:65: style: Commas should always have a space after.
              Attribute2=c("BA_Proz","V_DhmR/ha","V_DhmR_HB/ha","oiB/ha","N/ha",
                                                                ^
NO COPY: R/fvbn2e.R:400:74: style: Commas should always have a space after.
              Attribute2=c("BA_Proz","V_DhmR/ha","V_DhmR_HB/ha","oiB/ha","N/ha",
                                                                         ^
NO COPY: R/fvbn2e.R:402:45: style: Commas should always have a space after.
              "Gr\u00f6\u00dfen" = c("Wert","Standardfehler"),
                                            ^
NO COPY: R/fvbn2e.R:403:19: style: Put spaces around all infix operators.
              BAGR=bagr.list,AKL = akl.lab[1:A.k], DKL = dkl.lab,
                 ~^~
NO COPY: R/fvbn2e.R:403:30: style: Commas should always have a space after.
              BAGR=bagr.list,AKL = akl.lab[1:A.k], DKL = dkl.lab,
                             ^
NO COPY: R/fvbn2e.R:404:34: style: Put spaces around all infix operators.
              T.FVBN.Bagr.Akl.Dkl=Y.bagr.akl.dkl,
                                ~^~
NO COPY: R/fvbn2e.R:404:35: style: Words within variable and function names should be separated by '_' rather than '.'.
              T.FVBN.Bagr.Akl.Dkl=Y.bagr.akl.dkl,
                                  ^~~~~~~~~~~~~~
NO COPY: R/fvbn2e.R:405:35: style: Put spaces around all infix operators.
              FVBN.ha.Bagr.Akl.Dkl=Yha.bagr.akl.dkl,
                                 ~^~
NO COPY: R/fvbn2e.R:405:36: style: Words within variable and function names should be separated by '_' rather than '.'.
              FVBN.ha.Bagr.Akl.Dkl=Yha.bagr.akl.dkl,
                                   ^~~~~~~~~~~~~~~~
NO COPY: R/fvbn2e.R:406:30: style: Put spaces around all infix operators.
              nT.Bagr.Akl.Dkl=nT.bagr.akl.dkl))
                            ~^~
NO COPY: R/fvbn2e.R:406:31: style: Variable and function names should be all lowercase.
              nT.Bagr.Akl.Dkl=nT.bagr.akl.dkl))
                              ^~~~~~~~~~~~~~~
NO COPY: R/fvbn2e.R:406:31: style: Words within variable and function names should be separated by '_' rather than '.'.
              nT.Bagr.Akl.Dkl=nT.bagr.akl.dkl))
                              ^~~~~~~~~~~~~~~
NO COPY: R/fvbn2e.R:408:1: style: Trailing blank lines are superfluous.

^
NO COPY: R/german_things.R:2:1: style: Use two spaces to indent, never tabs.
						  caption = 'XXX') {
^~~~~~
NO COPY: R/german_things.R:8:1: style: Use two spaces to indent, never tabs.
	paste('\\multicolumn{1}{>{\\centering}p{', line_portion, 
^
NO COPY: R/german_things.R:9:1: style: Use two spaces to indent, never tabs.
	      '\\textwidth}}{', dimnames(tmp_data)[[2]], '}')
^
NO COPY: R/german_things.R:11:1: style: Use two spaces to indent, never tabs.
	  xtable::xtable(tmp_data,
^
NO COPY: R/german_things.R:12:1: style: Use two spaces to indent, never tabs.
		 label = paste('tab', deparse(substitute(data_frame)), sep = ':'), 
^~
NO COPY: R/german_things.R:13:1: style: Use two spaces to indent, never tabs.
		 caption = caption,
^~
NO COPY: R/german_things.R:14:1: style: Use two spaces to indent, never tabs.
		 align = c('l', rep('r', length(colnames(data_frame))))
^~
NO COPY: R/german_things.R:15:1: style: Use two spaces to indent, never tabs.
		 ),
^~
NO COPY: R/german_things.R:16:1: style: Use two spaces to indent, never tabs.
	  hline.after = c(-1,0,nrow(data_frame), nrow(data_frame) + 1),
^
NO COPY: R/german_things.R:17:1: style: Use two spaces to indent, never tabs.
	  type='latex',
^
NO COPY: R/german_things.R:18:1: style: Use two spaces to indent, never tabs.
	  sanitize.colnames.function = identity
^
NO COPY: R/german_things.R:19:1: style: Use two spaces to indent, never tabs.
	  )
^
NO COPY: R/german_things.R:32:62: style: Trailing whitespace is superfluous.
add_colSums_prettify_and_print_xtable <- function(data_frame, 
                                                             ^
NO COPY: R/german_things.R:33:61: style: Only use double-quotes.
						  caption = 'XXX') {
                                                            ^~~~~
NO COPY: R/german_things.R:39:15: style: Only use double-quotes.
	paste('\\multicolumn{1}{>{\\centering}p{', line_portion, 
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/german_things.R:39:58: style: Trailing whitespace is superfluous.
	paste('\\multicolumn{1}{>{\\centering}p{', line_portion, 
                                                         ^
NO COPY: R/german_things.R:40:15: style: Only use double-quotes.
	      '\\textwidth}}{', dimnames(tmp_data)[[2]], '}')
              ^~~~~~~~~~~~~~~~
NO COPY: R/german_things.R:40:58: style: Only use double-quotes.
	      '\\textwidth}}{', dimnames(tmp_data)[[2]], '}')
                                                         ^~~
NO COPY: R/german_things.R:43:24: style: Put spaces around all infix operators.
		 label = paste('tab', deparse(substitute(data_frame)), sep = ':'), 
                      ~^~
NO COPY: R/german_things.R:43:32: style: Only use double-quotes.
		 label = paste('tab', deparse(substitute(data_frame)), sep = ':'), 
                               ^~~~~
NO COPY: R/german_things.R:43:69: style: Trailing whitespace is superfluous.
		 label = paste('tab', deparse(substitute(data_frame)), sep = ':'), 
                                                                    ^
NO COPY: R/german_things.R:43:78: style: Only use double-quotes.
		 label = paste('tab', deparse(substitute(data_frame)), sep = ':'), 
                                                                             ^~~
NO COPY: R/german_things.R:45:24: style: Put spaces around all infix operators.
		 align = c('l', rep('r', length(colnames(data_frame))))
                      ~^~
NO COPY: R/german_things.R:45:28: style: Only use double-quotes.
		 align = c('l', rep('r', length(colnames(data_frame))))
                           ^~~
NO COPY: R/german_things.R:45:37: style: Only use double-quotes.
		 align = c('l', rep('r', length(colnames(data_frame))))
                                    ^~~
NO COPY: R/german_things.R:47:23: style: Put spaces around all infix operators.
	  hline.after = c(-1,0,nrow(data_frame), nrow(data_frame) + 1),
                     ~^~
NO COPY: R/german_things.R:48:15: style: Put spaces around all infix operators.
	  type='latex',
             ~^~
NO COPY: R/german_things.R:48:16: style: Only use double-quotes.
	  type='latex',
               ^~~~~~~
NO COPY: R/german_things.R:49:38: style: Put spaces around all infix operators.
	  sanitize.colnames.function = identity
                                    ~^~
NO COPY: R/german_things.R:69:1: style: lines should not be more than 80 characters.
round_and_prettify <- function(x, digits = 0, big_mark = ',', decimal_mark = '.') {
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/german_things.R:69:58: style: Only use double-quotes.
round_and_prettify <- function(x, digits = 0, big_mark = ',', decimal_mark = '.') {
                                                         ^~~
NO COPY: R/german_things.R:69:78: style: Only use double-quotes.
round_and_prettify <- function(x, digits = 0, big_mark = ',', decimal_mark = '.') {
                                                                             ^~~
NO COPY: R/german_things.R:89:53: style: Only use double-quotes.
    return(round_and_prettify(x, digits, big_mark = '.', decimal_mark = ","))
                                                    ^~~
NO COPY: R/german_things.R:104:52: style: Only use double-quotes.
    y  <- format(x, big.mark = ".", decimal.mark = ',',
                                                   ^~~
NO COPY: R/german_things.R:137:25: style: Only use double-quotes.
    s <- gsub("\u00e4", 'ae', string)
                        ^~~~
NO COPY: R/german_things.R:138:25: style: Only use double-quotes.
    s <- gsub("\u00c4", 'Ae', s)
                        ^~~~
NO COPY: R/german_things.R:139:25: style: Only use double-quotes.
    s <- gsub("\u00f6", 'oe', s)
                        ^~~~
NO COPY: R/german_things.R:140:25: style: Only use double-quotes.
    s <- gsub("\u00d6", 'Oe', s)
                        ^~~~
NO COPY: R/german_things.R:141:25: style: Only use double-quotes.
    s <- gsub("\u00fc", 'ue', s)
                        ^~~~
NO COPY: R/german_things.R:142:25: style: Only use double-quotes.
    s <- gsub("\u00dc", 'Ue', s)
                        ^~~~
NO COPY: R/german_things.R:143:25: style: Only use double-quotes.
    s <- gsub("\u00df", 'ss', s)
                        ^~~~
NO COPY: R/german_things.R:146:1: style: Trailing blank lines are superfluous.

^
NO COPY: R/german_things.R:147:1: style: Trailing blank lines are superfluous.

^
NO COPY: R/get_data.R:25:1: style: Trailing blank lines are superfluous.

^
NO COPY: R/internals.R:20:68: style: Trailing whitespace is superfluous.
                           class = c("bundeswaldinventur", "error", 
                                                                   ^
NO COPY: R/internals.R:28:1: style: Trailing blank lines are superfluous.

^
NO COPY: R/labeling.R:15:31: style: Trailing whitespace is superfluous.
                  # Attribute1 
                              ^
NO COPY: R/labeling.R:16:19: style: Only use double-quotes.
                  'Baumartengruppenfl\u00e4che' = ,
                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/labeling.R:16:51: style: Commas should never have a space before.
                  'Baumartengruppenfl\u00e4che' = ,
                                                 ~^
NO COPY: R/labeling.R:17:19: style: Only use double-quotes.
                  'Baumartengruppenflaeche' = ,
                  ^~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/labeling.R:17:47: style: Commas should never have a space before.
                  'Baumartengruppenflaeche' = ,
                                             ~^
NO COPY: R/labeling.R:18:19: style: Only use double-quotes.
                  'Baumartenfl\u00e4che' = ,
                  ^~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/labeling.R:18:44: style: Commas should never have a space before.
                  'Baumartenfl\u00e4che' = ,
                                          ~^
NO COPY: R/labeling.R:19:19: style: Only use double-quotes.
                  'Baumartenflaeche' = ,
                  ^~~~~~~~~~~~~~~~~~
NO COPY: R/labeling.R:19:40: style: Commas should never have a space before.
                  'Baumartenflaeche' = ,
                                      ~^
NO COPY: R/labeling.R:20:19: style: Only use double-quotes.
                  'BAF' = 'BAF',
                  ^~~~~
NO COPY: R/labeling.R:20:27: style: Only use double-quotes.
                  'BAF' = 'BAF',
                          ^~~~~
NO COPY: R/labeling.R:21:19: style: Only use double-quotes.
                  'Derbholzvorrat' = ,
                  ^~~~~~~~~~~~~~~~
NO COPY: R/labeling.R:21:38: style: Commas should never have a space before.
                  'Derbholzvorrat' = ,
                                    ~^
NO COPY: R/labeling.R:22:19: style: Only use double-quotes.
                  'V_DhmR' = 'V_DhmR',
                  ^~~~~~~~
NO COPY: R/labeling.R:22:30: style: Only use double-quotes.
                  'V_DhmR' = 'V_DhmR',
                             ^~~~~~~~
NO COPY: R/labeling.R:23:19: style: Only use double-quotes.
                  'Derbholzvorrat im Hauptbestand' = ,
                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/labeling.R:23:54: style: Commas should never have a space before.
                  'Derbholzvorrat im Hauptbestand' = ,
                                                    ~^
NO COPY: R/labeling.R:24:19: style: Only use double-quotes.
                  'V_DhmR_HB' = 'V_DhmR_HB',
                  ^~~~~~~~~~~
NO COPY: R/labeling.R:24:33: style: Only use double-quotes.
                  'V_DhmR_HB' = 'V_DhmR_HB',
                                ^~~~~~~~~~~
NO COPY: R/labeling.R:25:19: style: Only use double-quotes.
                  'oberirdische Biomasse' = ,
                  ^~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/labeling.R:25:45: style: Commas should never have a space before.
                  'oberirdische Biomasse' = ,
                                           ~^
NO COPY: R/labeling.R:26:19: style: Only use double-quotes.
                  'oiB' = 'oiB',
                  ^~~~~
NO COPY: R/labeling.R:26:27: style: Only use double-quotes.
                  'oiB' = 'oiB',
                          ^~~~~
NO COPY: R/labeling.R:27:19: style: Only use double-quotes.
                  'Stammzahl' = ,
                  ^~~~~~~~~~~
NO COPY: R/labeling.R:27:33: style: Commas should never have a space before.
                  'Stammzahl' = ,
                               ~^
NO COPY: R/labeling.R:28:19: style: Only use double-quotes.
                  'N' = 'N',
                  ^~~
NO COPY: R/labeling.R:28:25: style: Only use double-quotes.
                  'N' = 'N',
                        ^~~
NO COPY: R/labeling.R:29:19: style: Only use double-quotes.
                  'Derbholzstammzahl' = ,
                  ^~~~~~~~~~~~~~~~~~~
NO COPY: R/labeling.R:29:41: style: Commas should never have a space before.
                  'Derbholzstammzahl' = ,
                                       ~^
NO COPY: R/labeling.R:30:19: style: Only use double-quotes.
                  'N_Dh' = 'N_Dh',
                  ^~~~~~
NO COPY: R/labeling.R:30:28: style: Only use double-quotes.
                  'N_Dh' = 'N_Dh',
                           ^~~~~~
NO COPY: R/labeling.R:31:31: style: Trailing whitespace is superfluous.
                  # Attribute2 
                              ^
NO COPY: R/labeling.R:32:45: style: Put spaces around all infix operators.
                  "Derbholzvorrat je Hektar"= ,
                                           ~^
NO COPY: R/labeling.R:32:47: style: Commas should never have a space before.
                  "Derbholzvorrat je Hektar"= ,
                                             ~^
NO COPY: R/labeling.R:33:19: style: Only use double-quotes.
                  'V_DhmR/ha' = 'V_DhmR/ha' ,
                  ^~~~~~~~~~~
NO COPY: R/labeling.R:33:33: style: Only use double-quotes.
                  'V_DhmR/ha' = 'V_DhmR/ha' ,
                                ^~~~~~~~~~~
NO COPY: R/labeling.R:33:45: style: Commas should never have a space before.
                  'V_DhmR/ha' = 'V_DhmR/ha' ,
                                           ~^
NO COPY: R/labeling.R:34:19: style: Only use double-quotes.
                  'Derbholzvorrat im Hauptbestand je Hektar' = ,
                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/labeling.R:34:64: style: Commas should never have a space before.
                  'Derbholzvorrat im Hauptbestand je Hektar' = ,
                                                              ~^
NO COPY: R/labeling.R:35:19: style: Only use double-quotes.
                  'V_DhmR_HB/ha' = 'V_DhmR_HB/ha',
                  ^~~~~~~~~~~~~~
NO COPY: R/labeling.R:35:36: style: Only use double-quotes.
                  'V_DhmR_HB/ha' = 'V_DhmR_HB/ha',
                                   ^~~~~~~~~~~~~~
NO COPY: R/labeling.R:36:19: style: Only use double-quotes.
                  'oberirdische Biomasse je Hektar' = ,
                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/labeling.R:36:55: style: Commas should never have a space before.
                  'oberirdische Biomasse je Hektar' = ,
                                                     ~^
NO COPY: R/labeling.R:37:19: style: Only use double-quotes.
                  'oiB/ha' = 'oiB/ha',
                  ^~~~~~~~
NO COPY: R/labeling.R:37:30: style: Only use double-quotes.
                  'oiB/ha' = 'oiB/ha',
                             ^~~~~~~~
NO COPY: R/labeling.R:38:19: style: Only use double-quotes.
                  'Stammzahl je Hektar' = ,
                  ^~~~~~~~~~~~~~~~~~~~~
NO COPY: R/labeling.R:38:43: style: Commas should never have a space before.
                  'Stammzahl je Hektar' = ,
                                         ~^
NO COPY: R/labeling.R:39:19: style: Only use double-quotes.
                  'N/ha' = 'N/ha',
                  ^~~~~~
NO COPY: R/labeling.R:39:28: style: Only use double-quotes.
                  'N/ha' = 'N/ha',
                           ^~~~~~
NO COPY: R/labeling.R:40:19: style: Only use double-quotes.
                  'Derbholzstammzahl je Hektar' = ,
                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/labeling.R:40:51: style: Commas should never have a space before.
                  'Derbholzstammzahl je Hektar' = ,
                                                 ~^
NO COPY: R/labeling.R:41:19: style: Only use double-quotes.
                  'N_Dh/ha' = 'N_Dh/ha',
                  ^~~~~~~~~
NO COPY: R/labeling.R:41:31: style: Only use double-quotes.
                  'N_Dh/ha' = 'N_Dh/ha',
                              ^~~~~~~~~
NO COPY: R/labeling.R:43:19: style: Only use double-quotes.
                  'Altersklasse' = ,
                  ^~~~~~~~~~~~~~
NO COPY: R/labeling.R:43:36: style: Commas should never have a space before.
                  'Altersklasse' = ,
                                  ~^
NO COPY: R/labeling.R:44:19: style: Only use double-quotes.
                  'AKL' = 'AKL',
                  ^~~~~
NO COPY: R/labeling.R:44:27: style: Only use double-quotes.
                  'AKL' = 'AKL',
                          ^~~~~
NO COPY: R/labeling.R:45:19: style: Only use double-quotes.
                  'Durchmesserklasse' = ,
                  ^~~~~~~~~~~~~~~~~~~
NO COPY: R/labeling.R:45:41: style: Commas should never have a space before.
                  'Durchmesserklasse' = ,
                                       ~^
NO COPY: R/labeling.R:46:19: style: Only use double-quotes.
                  'DKL' = 'DKL',
                  ^~~~~
NO COPY: R/labeling.R:46:27: style: Only use double-quotes.
                  'DKL' = 'DKL',
                          ^~~~~
NO COPY: R/labeling.R:48:19: style: Only use double-quotes.
                  'bw' = ,
                  ^~~~
NO COPY: R/labeling.R:48:26: style: Commas should never have a space before.
                  'bw' = ,
                        ~^
NO COPY: R/labeling.R:49:19: style: Only use double-quotes.
                  'Bw' = ,
                  ^~~~
NO COPY: R/labeling.R:49:26: style: Commas should never have a space before.
                  'Bw' = ,
                        ~^
NO COPY: R/labeling.R:50:19: style: Only use double-quotes.
                  'BW' = ,
                  ^~~~
NO COPY: R/labeling.R:50:26: style: Commas should never have a space before.
                  'BW' = ,
                        ~^
NO COPY: R/labeling.R:51:19: style: Only use double-quotes.
                  'Bundeswald' = 'bw',
                  ^~~~~~~~~~~~
NO COPY: R/labeling.R:51:34: style: Only use double-quotes.
                  'Bundeswald' = 'bw',
                                 ^~~~
NO COPY: R/labeling.R:52:19: style: Only use double-quotes.
                  'StW'         = ,
                  ^~~~~
NO COPY: R/labeling.R:52:35: style: Commas should never have a space before.
                  'StW'         = ,
                                 ~^
NO COPY: R/labeling.R:53:19: style: Only use double-quotes.
                  'STW'         = ,
                  ^~~~~
NO COPY: R/labeling.R:53:35: style: Commas should never have a space before.
                  'STW'         = ,
                                 ~^
NO COPY: R/labeling.R:54:19: style: Only use double-quotes.
                  'stw'         = ,
                  ^~~~~
NO COPY: R/labeling.R:54:35: style: Commas should never have a space before.
                  'stw'         = ,
                                 ~^
NO COPY: R/labeling.R:55:19: style: Only use double-quotes.
                  'staatswald' = ,
                  ^~~~~~~~~~~~
NO COPY: R/labeling.R:55:34: style: Commas should never have a space before.
                  'staatswald' = ,
                                ~^
NO COPY: R/labeling.R:56:19: style: Only use double-quotes.
                  'Staatswald' = 'stw',
                  ^~~~~~~~~~~~
NO COPY: R/labeling.R:56:34: style: Only use double-quotes.
                  'Staatswald' = 'stw',
                                 ^~~~~
NO COPY: R/labeling.R:57:19: style: Only use double-quotes.
                  'GW'         = ,
                  ^~~~
NO COPY: R/labeling.R:57:34: style: Commas should never have a space before.
                  'GW'         = ,
                                ~^
NO COPY: R/labeling.R:58:19: style: Only use double-quotes.
                  'gw'         = ,
                  ^~~~
NO COPY: R/labeling.R:58:34: style: Commas should never have a space before.
                  'gw'         = ,
                                ~^
NO COPY: R/labeling.R:59:19: style: Only use double-quotes.
                  'gesamtwald' = ,
                  ^~~~~~~~~~~~
NO COPY: R/labeling.R:59:34: style: Commas should never have a space before.
                  'gesamtwald' = ,
                                ~^
NO COPY: R/labeling.R:60:19: style: Only use double-quotes.
                  'Gesamtwald' = 'gw',
                  ^~~~~~~~~~~~
NO COPY: R/labeling.R:60:34: style: Only use double-quotes.
                  'Gesamtwald' = 'gw',
                                 ^~~~
NO COPY: R/labeling.R:61:19: style: Only use double-quotes.
                  'KW'         = ,
                  ^~~~
NO COPY: R/labeling.R:61:34: style: Commas should never have a space before.
                  'KW'         = ,
                                ~^
NO COPY: R/labeling.R:62:19: style: Only use double-quotes.
                  'kw'         = ,
                  ^~~~
NO COPY: R/labeling.R:62:34: style: Commas should never have a space before.
                  'kw'         = ,
                                ~^
NO COPY: R/labeling.R:63:19: style: Only use double-quotes.
                  'k\u00f6rperschaftswald' = ,
                  ^~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/labeling.R:63:46: style: Commas should never have a space before.
                  'k\u00f6rperschaftswald' = ,
                                            ~^
NO COPY: R/labeling.R:64:19: style: Only use double-quotes.
                  'K\u00f6rperschaftswald' = ,
                  ^~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/labeling.R:64:46: style: Commas should never have a space before.
                  'K\u00f6rperschaftswald' = ,
                                            ~^
NO COPY: R/labeling.R:65:19: style: Only use double-quotes.
                  'koerperschaftswald' = ,
                  ^~~~~~~~~~~~~~~~~~~~
NO COPY: R/labeling.R:65:42: style: Commas should never have a space before.
                  'koerperschaftswald' = ,
                                        ~^
NO COPY: R/labeling.R:66:19: style: Only use double-quotes.
                  'Koerperschaftswald' = ,
                  ^~~~~~~~~~~~~~~~~~~~
NO COPY: R/labeling.R:66:42: style: Commas should never have a space before.
                  'Koerperschaftswald' = ,
                                        ~^
NO COPY: R/labeling.R:67:19: style: Only use double-quotes.
                  'kommunalwald' = ,
                  ^~~~~~~~~~~~~~
NO COPY: R/labeling.R:67:36: style: Commas should never have a space before.
                  'kommunalwald' = ,
                                  ~^
NO COPY: R/labeling.R:68:19: style: Only use double-quotes.
                  'Kommunalwald' = 'kw',
                  ^~~~~~~~~~~~~~
NO COPY: R/labeling.R:68:36: style: Only use double-quotes.
                  'Kommunalwald' = 'kw',
                                   ^~~~
NO COPY: R/labeling.R:69:19: style: Only use double-quotes.
                  'pw'         = ,
                  ^~~~
NO COPY: R/labeling.R:69:34: style: Commas should never have a space before.
                  'pw'         = ,
                                ~^
NO COPY: R/labeling.R:70:19: style: Only use double-quotes.
                  'PW'         = ,
                  ^~~~
NO COPY: R/labeling.R:70:34: style: Commas should never have a space before.
                  'PW'         = ,
                                ~^
NO COPY: R/labeling.R:71:19: style: Only use double-quotes.
                  'privatwald' = ,
                  ^~~~~~~~~~~~
NO COPY: R/labeling.R:71:34: style: Commas should never have a space before.
                  'privatwald' = ,
                                ~^
NO COPY: R/labeling.R:72:19: style: Only use double-quotes.
                  'Privatwald' = 'pw',
                  ^~~~~~~~~~~~
NO COPY: R/labeling.R:72:34: style: Only use double-quotes.
                  'Privatwald' = 'pw',
                                 ^~~~
NO COPY: R/labeling.R:73:19: style: Only use double-quotes.
                  'Kleinprivatwald' = ,
                  ^~~~~~~~~~~~~~~~~
NO COPY: R/labeling.R:73:39: style: Commas should never have a space before.
                  'Kleinprivatwald' = ,
                                     ~^
NO COPY: R/labeling.R:74:19: style: Only use double-quotes.
                  'KPW' =, 
                  ^~~~~
NO COPY: R/labeling.R:74:25: style: Put spaces around all infix operators.
                  'KPW' =, 
                        ^~
NO COPY: R/labeling.R:74:27: style: Trailing whitespace is superfluous.
                  'KPW' =, 
                          ^
NO COPY: R/labeling.R:75:19: style: Only use double-quotes.
                  'kpw' = 'kpw',
                  ^~~~~
NO COPY: R/labeling.R:75:27: style: Only use double-quotes.
                  'kpw' = 'kpw',
                          ^~~~~
NO COPY: R/labeling.R:76:19: style: Only use double-quotes.
                  'Mittlerer Privatwald' = ,
                  ^~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/labeling.R:76:44: style: Commas should never have a space before.
                  'Mittlerer Privatwald' = ,
                                          ~^
NO COPY: R/labeling.R:77:19: style: Only use double-quotes.
                  'Mittl. Privatwald' = ,
                  ^~~~~~~~~~~~~~~~~~~
NO COPY: R/labeling.R:77:41: style: Commas should never have a space before.
                  'Mittl. Privatwald' = ,
                                       ~^
NO COPY: R/labeling.R:78:19: style: Only use double-quotes.
                  'MPW' =, 
                  ^~~~~
NO COPY: R/labeling.R:78:25: style: Put spaces around all infix operators.
                  'MPW' =, 
                        ^~
NO COPY: R/labeling.R:78:27: style: Trailing whitespace is superfluous.
                  'MPW' =, 
                          ^
NO COPY: R/labeling.R:79:19: style: Only use double-quotes.
                  'mpw' = 'mpw',
                  ^~~~~
NO COPY: R/labeling.R:79:27: style: Only use double-quotes.
                  'mpw' = 'mpw',
                          ^~~~~
NO COPY: R/labeling.R:80:19: style: Only use double-quotes.
                  'Gro\u00dfprivatwald' = ,
                  ^~~~~~~~~~~~~~~~~~~~~
NO COPY: R/labeling.R:80:43: style: Commas should never have a space before.
                  'Gro\u00dfprivatwald' = ,
                                         ~^
NO COPY: R/labeling.R:81:19: style: Only use double-quotes.
                  'GPW' =, 
                  ^~~~~
NO COPY: R/labeling.R:81:25: style: Put spaces around all infix operators.
                  'GPW' =, 
                        ^~
NO COPY: R/labeling.R:81:27: style: Trailing whitespace is superfluous.
                  'GPW' =, 
                          ^
NO COPY: R/labeling.R:82:19: style: Only use double-quotes.
                  'gpw' = 'gpw',
                  ^~~~~
NO COPY: R/labeling.R:82:27: style: Only use double-quotes.
                  'gpw' = 'gpw',
                          ^~~~~
NO COPY: R/labeling.R:84:31: style: Only use double-quotes.
                  throw(paste('unkown label', label))
                              ^~~~~~~~~~~~~~
NO COPY: R/labeling.R:106:31: style: Trailing whitespace is superfluous.
                  # Attribute1 
                              ^
NO COPY: R/labeling.R:107:19: style: Only use double-quotes.
                  'Baumartengruppenfl\u00e4che' = ,
                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/labeling.R:107:51: style: Commas should never have a space before.
                  'Baumartengruppenfl\u00e4che' = ,
                                                 ~^
NO COPY: R/labeling.R:108:19: style: Only use double-quotes.
                  'BAF' = 'Fl\u00e4che [ha]',
                  ^~~~~
NO COPY: R/labeling.R:108:27: style: Only use double-quotes.
                  'BAF' = 'Fl\u00e4che [ha]',
                          ^~~~~~~~~~~~~~~~~~
NO COPY: R/labeling.R:109:19: style: Only use double-quotes.
                  'Derbholzvorrat' = ,
                  ^~~~~~~~~~~~~~~~
NO COPY: R/labeling.R:109:38: style: Commas should never have a space before.
                  'Derbholzvorrat' = ,
                                    ~^
NO COPY: R/labeling.R:110:19: style: Only use double-quotes.
                  'V_DhmR' = expression(paste("Derbholzvorrat [", m^3, "]",  
                  ^~~~~~~~
NO COPY: R/labeling.R:110:68: style: Put spaces around all infix operators.
                  'V_DhmR' = expression(paste("Derbholzvorrat [", m^3, "]",  
                                                                  ~^~
NO COPY: R/labeling.R:110:76: style: Trailing whitespace is superfluous.
                  'V_DhmR' = expression(paste("Derbholzvorrat [", m^3, "]",  
                                                                           ^~
NO COPY: R/labeling.R:113:19: style: Only use double-quotes.
                  'Derbholzvorrat im Hauptbestand' = ,
                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/labeling.R:113:54: style: Commas should never have a space before.
                  'Derbholzvorrat im Hauptbestand' = ,
                                                    ~^
NO COPY: R/labeling.R:114:19: style: Only use double-quotes.
                  'V_DhmR_HB' = expression(paste("Derbholzvorrat [", m^3, "]",
                  ^~~~~~~~~~~
NO COPY: R/labeling.R:114:71: style: Put spaces around all infix operators.
                  'V_DhmR_HB' = expression(paste("Derbholzvorrat [", m^3, "]",
                                                                     ~^~
NO COPY: R/labeling.R:115:68: style: Trailing whitespace is superfluous.
                                                 "im Hauptbestand",  
                                                                   ^~
NO COPY: R/labeling.R:118:31: style: Trailing whitespace is superfluous.
                  # Attribute2 
                              ^
NO COPY: R/labeling.R:119:19: style: Only use double-quotes.
                  'Derbholzvorrat je Hektar' = ,
                  ^~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/labeling.R:119:48: style: Commas should never have a space before.
                  'Derbholzvorrat je Hektar' = ,
                                              ~^
NO COPY: R/labeling.R:120:19: style: Only use double-quotes.
                  'V_DhmR/ha' = expression(paste("Derbholzvorrat [", m^3,
                  ^~~~~~~~~~~
NO COPY: R/labeling.R:120:71: style: Put spaces around all infix operators.
                  'V_DhmR/ha' = expression(paste("Derbholzvorrat [", m^3,
                                                                     ~^~
NO COPY: R/labeling.R:121:52: style: Put spaces around all infix operators.
                                                 ha^-1, "]",  
                                                  ~^~
NO COPY: R/labeling.R:121:61: style: Trailing whitespace is superfluous.
                                                 ha^-1, "]",  
                                                            ^~
NO COPY: R/labeling.R:124:19: style: Only use double-quotes.
                  'Derbholzvorrat im Hauptbestand je Hektar' = ,
                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/labeling.R:124:64: style: Commas should never have a space before.
                  'Derbholzvorrat im Hauptbestand je Hektar' = ,
                                                              ~^
NO COPY: R/labeling.R:125:19: style: Only use double-quotes.
                  'V_DhmR_HB/ha' = expression(paste("Derbholzvorrat [", m^3, 
                  ^~~~~~~~~~~~~~
NO COPY: R/labeling.R:125:74: style: Put spaces around all infix operators.
                  'V_DhmR_HB/ha' = expression(paste("Derbholzvorrat [", m^3, 
                                                                        ~^~
NO COPY: R/labeling.R:125:77: style: Trailing whitespace is superfluous.
                  'V_DhmR_HB/ha' = expression(paste("Derbholzvorrat [", m^3, 
                                                                            ^
NO COPY: R/labeling.R:126:55: style: Put spaces around all infix operators.
                                                    ha^-1, "]",
                                                     ~^~
NO COPY: R/labeling.R:127:71: style: Trailing whitespace is superfluous.
                                                    "im Hauptbestand",  
                                                                      ^~
NO COPY: R/labeling.R:150:31: style: Trailing whitespace is superfluous.
                  # Attribute1 
                              ^
NO COPY: R/labeling.R:151:19: style: Only use double-quotes.
                  'BAF' = 'Baumartengruppenfl\u00e4che',
                  ^~~~~
NO COPY: R/labeling.R:151:27: style: Only use double-quotes.
                  'BAF' = 'Baumartengruppenfl\u00e4che',
                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/labeling.R:152:19: style: Only use double-quotes.
                  'V_DhmR' = "Derbholzvorrat",
                  ^~~~~~~~
NO COPY: R/labeling.R:153:19: style: Only use double-quotes.
                  'V_DhmR_HB' = 'Derbholzvorrat im Hauptbestand',
                  ^~~~~~~~~~~
NO COPY: R/labeling.R:153:33: style: Only use double-quotes.
                  'V_DhmR_HB' = 'Derbholzvorrat im Hauptbestand',
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/labeling.R:154:19: style: Only use double-quotes.
                  'oiB' = 'oberirdische Biomasse',
                  ^~~~~
NO COPY: R/labeling.R:154:27: style: Only use double-quotes.
                  'oiB' = 'oberirdische Biomasse',
                          ^~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/labeling.R:155:19: style: Only use double-quotes.
                  'N' = 'Stammzahl',
                  ^~~
NO COPY: R/labeling.R:155:25: style: Only use double-quotes.
                  'N' = 'Stammzahl',
                        ^~~~~~~~~~~
NO COPY: R/labeling.R:156:19: style: Only use double-quotes.
                  'N_Dh' = 'Derbholzstammzahl',
                  ^~~~~~
NO COPY: R/labeling.R:156:28: style: Only use double-quotes.
                  'N_Dh' = 'Derbholzstammzahl',
                           ^~~~~~~~~~~~~~~~~~~
NO COPY: R/labeling.R:157:31: style: Trailing whitespace is superfluous.
                  # Attribute2 
                              ^
NO COPY: R/labeling.R:158:19: style: Only use double-quotes.
                  'V_DhmR/ha' = "Derbholzvorrat je Hektar",
                  ^~~~~~~~~~~
NO COPY: R/labeling.R:159:19: style: Only use double-quotes.
                  'V_DhmR_HB/ha' = 'Derbholzvorrat im Hauptbestand je Hektar',
                  ^~~~~~~~~~~~~~
NO COPY: R/labeling.R:159:36: style: Only use double-quotes.
                  'V_DhmR_HB/ha' = 'Derbholzvorrat im Hauptbestand je Hektar',
                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/labeling.R:160:19: style: Only use double-quotes.
                  'oiB/ha' = 'oberirdische Biomasse je Hektar',
                  ^~~~~~~~
NO COPY: R/labeling.R:160:30: style: Only use double-quotes.
                  'oiB/ha' = 'oberirdische Biomasse je Hektar',
                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/labeling.R:161:19: style: Only use double-quotes.
                  'N/ha' = 'Stammzahl je Hektar',
                  ^~~~~~
NO COPY: R/labeling.R:161:28: style: Only use double-quotes.
                  'N/ha' = 'Stammzahl je Hektar',
                           ^~~~~~~~~~~~~~~~~~~~~
NO COPY: R/labeling.R:162:19: style: Only use double-quotes.
                  'N_Dh/ha' = 'Derbholzstammzahl je Hektar',
                  ^~~~~~~~~
NO COPY: R/labeling.R:162:31: style: Only use double-quotes.
                  'N_Dh/ha' = 'Derbholzstammzahl je Hektar',
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/labeling.R:164:19: style: Only use double-quotes.
                  'AKL' = 'Altersklasse',
                  ^~~~~
NO COPY: R/labeling.R:164:27: style: Only use double-quotes.
                  'AKL' = 'Altersklasse',
                          ^~~~~~~~~~~~~~
NO COPY: R/labeling.R:165:19: style: Only use double-quotes.
                  'DKL' = 'Durchmesserklasse',
                  ^~~~~
NO COPY: R/labeling.R:165:27: style: Only use double-quotes.
                  'DKL' = 'Durchmesserklasse',
                          ^~~~~~~~~~~~~~~~~~~
NO COPY: R/labeling.R:167:19: style: Only use double-quotes.
                  'bw' = ,
                  ^~~~
NO COPY: R/labeling.R:167:26: style: Commas should never have a space before.
                  'bw' = ,
                        ~^
NO COPY: R/labeling.R:168:19: style: Only use double-quotes.
                  'BW' = 'Bundeswald',
                  ^~~~
NO COPY: R/labeling.R:168:26: style: Only use double-quotes.
                  'BW' = 'Bundeswald',
                         ^~~~~~~~~~~~
NO COPY: R/labeling.R:169:19: style: Only use double-quotes.
                  'GW' = ,
                  ^~~~
NO COPY: R/labeling.R:169:26: style: Commas should never have a space before.
                  'GW' = ,
                        ~^
NO COPY: R/labeling.R:170:19: style: Only use double-quotes.
                  'gw' = 'Gesamtwald',
                  ^~~~
NO COPY: R/labeling.R:170:26: style: Only use double-quotes.
                  'gw' = 'Gesamtwald',
                         ^~~~~~~~~~~~
NO COPY: R/labeling.R:171:19: style: Only use double-quotes.
                  'KW' = ,
                  ^~~~
NO COPY: R/labeling.R:171:26: style: Commas should never have a space before.
                  'KW' = ,
                        ~^
NO COPY: R/labeling.R:172:19: style: Only use double-quotes.
                  'kw' = 'K\u00f6rperschaftswald',
                  ^~~~
NO COPY: R/labeling.R:172:26: style: Only use double-quotes.
                  'kw' = 'K\u00f6rperschaftswald',
                         ^~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/labeling.R:173:19: style: Only use double-quotes.
                  'PW' = ,
                  ^~~~
NO COPY: R/labeling.R:173:26: style: Commas should never have a space before.
                  'PW' = ,
                        ~^
NO COPY: R/labeling.R:174:19: style: Only use double-quotes.
                  'pw' = 'Privatwald',
                  ^~~~
NO COPY: R/labeling.R:174:26: style: Only use double-quotes.
                  'pw' = 'Privatwald',
                         ^~~~~~~~~~~~
NO COPY: R/labeling.R:175:19: style: Only use double-quotes.
                  'StW' = ,
                  ^~~~~
NO COPY: R/labeling.R:175:27: style: Commas should never have a space before.
                  'StW' = ,
                         ~^
NO COPY: R/labeling.R:176:19: style: Only use double-quotes.
                  'STW' = ,
                  ^~~~~
NO COPY: R/labeling.R:176:27: style: Commas should never have a space before.
                  'STW' = ,
                         ~^
NO COPY: R/labeling.R:177:19: style: Only use double-quotes.
                  'stw' = 'Staatswald',
                  ^~~~~
NO COPY: R/labeling.R:177:27: style: Only use double-quotes.
                  'stw' = 'Staatswald',
                          ^~~~~~~~~~~~
NO COPY: R/labeling.R:178:19: style: Only use double-quotes.
                  'KPW' = ,
                  ^~~~~
NO COPY: R/labeling.R:178:27: style: Commas should never have a space before.
                  'KPW' = ,
                         ~^
NO COPY: R/labeling.R:179:19: style: Only use double-quotes.
                  'kpw' = 'Kleinprivatwald',
                  ^~~~~
NO COPY: R/labeling.R:179:27: style: Only use double-quotes.
                  'kpw' = 'Kleinprivatwald',
                          ^~~~~~~~~~~~~~~~~
NO COPY: R/labeling.R:180:19: style: Only use double-quotes.
                  'MPW' = ,
                  ^~~~~
NO COPY: R/labeling.R:180:27: style: Commas should never have a space before.
                  'MPW' = ,
                         ~^
NO COPY: R/labeling.R:181:19: style: Only use double-quotes.
                  'mpw' = 'Mittl. Privatwald',
                  ^~~~~
NO COPY: R/labeling.R:181:27: style: Only use double-quotes.
                  'mpw' = 'Mittl. Privatwald',
                          ^~~~~~~~~~~~~~~~~~~
NO COPY: R/labeling.R:182:19: style: Only use double-quotes.
                  'GPW' = ,
                  ^~~~~
NO COPY: R/labeling.R:182:27: style: Commas should never have a space before.
                  'GPW' = ,
                         ~^
NO COPY: R/labeling.R:183:19: style: Only use double-quotes.
                  'gpw' = 'Gro\u00dfprivatwald',
                  ^~~~~
NO COPY: R/labeling.R:183:27: style: Only use double-quotes.
                  'gpw' = 'Gro\u00dfprivatwald',
                          ^~~~~~~~~~~~~~~~~~~~~
NO COPY: R/labeling.R:185:19: style: Only use double-quotes.
                  'FI' = 'Fichte',
                  ^~~~
NO COPY: R/labeling.R:185:26: style: Only use double-quotes.
                  'FI' = 'Fichte',
                         ^~~~~~~~
NO COPY: R/labeling.R:186:19: style: Only use double-quotes.
                  'TA' = 'Tanne',
                  ^~~~
NO COPY: R/labeling.R:186:26: style: Only use double-quotes.
                  'TA' = 'Tanne',
                         ^~~~~~~
NO COPY: R/labeling.R:187:19: style: Only use double-quotes.
                  'LAE' = 'L\u00e4rche',
                  ^~~~~
NO COPY: R/labeling.R:187:27: style: Only use double-quotes.
                  'LAE' = 'L\u00e4rche',
                          ^~~~~~~~~~~~~
NO COPY: R/labeling.R:188:19: style: Only use double-quotes.
                  'DGL' = 'Douglasie',
                  ^~~~~
NO COPY: R/labeling.R:188:27: style: Only use double-quotes.
                  'DGL' = 'Douglasie',
                          ^~~~~~~~~~~
NO COPY: R/labeling.R:189:19: style: Only use double-quotes.
                  'EI' = 'Eiche',
                  ^~~~
NO COPY: R/labeling.R:189:26: style: Only use double-quotes.
                  'EI' = 'Eiche',
                         ^~~~~~~
NO COPY: R/labeling.R:190:19: style: Only use double-quotes.
                  'BU' = 'Buche',
                  ^~~~
NO COPY: R/labeling.R:190:26: style: Only use double-quotes.
                  'BU' = 'Buche',
                         ^~~~~~~
NO COPY: R/labeling.R:191:19: style: Only use double-quotes.
                  'KI' = 'Kiefer',
                  ^~~~
NO COPY: R/labeling.R:191:26: style: Only use double-quotes.
                  'KI' = 'Kiefer',
                         ^~~~~~~~
NO COPY: R/labeling.R:192:19: style: Only use double-quotes.
                  'HBu' = ,
                  ^~~~~
NO COPY: R/labeling.R:192:27: style: Commas should never have a space before.
                  'HBu' = ,
                         ~^
NO COPY: R/labeling.R:193:19: style: Only use double-quotes.
                  'Hbu' = 'Hainbuche',
                  ^~~~~
NO COPY: R/labeling.R:193:27: style: Only use double-quotes.
                  'Hbu' = 'Hainbuche',
                          ^~~~~~~~~~~
NO COPY: R/labeling.R:194:19: style: Only use double-quotes.
                  'sNB' = ,
                  ^~~~~
NO COPY: R/labeling.R:194:27: style: Commas should never have a space before.
                  'sNB' = ,
                         ~^
NO COPY: R/labeling.R:195:19: style: Only use double-quotes.
                  'L\u00e4rchen/sNB' = "L\u00e4rchen/Sonstiges Nadelholz",
                  ^~~~~~~~~~~~~~~~~~
NO COPY: R/labeling.R:196:19: style: Only use double-quotes.
                  'SNB' = 'Sonstiges Nadelholz',
                  ^~~~~
NO COPY: R/labeling.R:196:27: style: Only use double-quotes.
                  'SNB' = 'Sonstiges Nadelholz',
                          ^~~~~~~~~~~~~~~~~~~~~
NO COPY: R/labeling.R:197:19: style: Only use double-quotes.
                  'sBLB' = ,
                  ^~~~~~
NO COPY: R/labeling.R:197:28: style: Commas should never have a space before.
                  'sBLB' = ,
                          ~^
NO COPY: R/labeling.R:198:19: style: Only use double-quotes.
                  'sBlb' = ,
                  ^~~~~~
NO COPY: R/labeling.R:198:28: style: Commas should never have a space before.
                  'sBlb' = ,
                          ~^
NO COPY: R/labeling.R:199:19: style: Only use double-quotes.
                  'SBLB' = 'Sonstiges Buntlaubholz',
                  ^~~~~~
NO COPY: R/labeling.R:199:28: style: Only use double-quotes.
                  'SBLB' = 'Sonstiges Buntlaubholz',
                           ^~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/labeling.R:200:19: style: Only use double-quotes.
                  'Alh' = ,
                  ^~~~~
NO COPY: R/labeling.R:200:27: style: Commas should never have a space before.
                  'Alh' = ,
                         ~^
NO COPY: R/labeling.R:201:19: style: Only use double-quotes.
                  'ALH' = 'Anderes Laubholz h\u00f6herer Lebensdauer',
                  ^~~~~
NO COPY: R/labeling.R:201:27: style: Only use double-quotes.
                  'ALH' = 'Anderes Laubholz h\u00f6herer Lebensdauer',
                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/labeling.R:202:19: style: Only use double-quotes.
                  'Aln' = ,
                  ^~~~~
NO COPY: R/labeling.R:202:27: style: Commas should never have a space before.
                  'Aln' = ,
                         ~^
NO COPY: R/labeling.R:203:19: style: Only use double-quotes.
                  'ALN' = 'Anderes Laubholz niederer Lebensdauer',
                  ^~~~~
NO COPY: R/labeling.R:203:27: style: Only use double-quotes.
                  'ALN' = 'Anderes Laubholz niederer Lebensdauer',
                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/labeling.R:204:19: style: Only use double-quotes.
                  'Alle BA' = 'Alle Baumarten',
                  ^~~~~~~~~
NO COPY: R/labeling.R:204:31: style: Only use double-quotes.
                  'Alle BA' = 'Alle Baumarten',
                              ^~~~~~~~~~~~~~~~
NO COPY: R/labeling.R:233:53: style: Trailing whitespace is superfluous.
get_label_for_abbreviation <- function(abbreviation, 
                                                    ^
NO COPY: R/labeling.R:234:53: style: Only use double-quotes.
                                       label_type = 'text_label') {
                                                    ^~~~~~~~~~~~
NO COPY: R/labeling.R:237:19: style: Only use double-quotes.
                  'axis_label' = get_axis_label_for_abbreviation(abbreviation),
                  ^~~~~~~~~~~~
NO COPY: R/labeling.R:238:19: style: Only use double-quotes.
                  'text_label' =  get_text_label_for_abbreviation(abbreviation),
                  ^~~~~~~~~~~~
NO COPY: R/labeling.R:239:31: style: Only use double-quotes.
                  throw(paste('unkown name', abbreviation))
                              ^~~~~~~~~~~~~
NO COPY: R/labeling.R:257:1: style: lines should not be more than 80 characters.
        levels(x) <- vapply(levels(x), bundeswaldinventur::get_abbreviation_for_label,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/labeling.R:261:1: style: lines should not be more than 80 characters.
        x <- vapply(as.character(x), bundeswaldinventur::get_abbreviation_for_label,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/labeling.R:303:1: style: lines should not be more than 80 characters.
    eval.parent(substitute(datacolumn <- map_abbreviations_to_labels(datacolumn)))
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/labeling.R:321:34: style: Only use double-quotes.
    ownership_colors <- c("gw" = 'lightgreen',
                                 ^~~~~~~~~~~~
NO COPY: R/labeling.R:323:43: style: Trailing whitespace is superfluous.
                          "stw" = "green", 
                                          ^
NO COPY: R/labeling.R:324:43: style: Trailing whitespace is superfluous.
                          "kw" = "orange", 
                                          ^
NO COPY: R/labeling.R:325:41: style: Trailing whitespace is superfluous.
                          "pw" = "blue", 
                                        ^
NO COPY: R/labeling.R:327:46: style: Trailing whitespace is superfluous.
                          "mpw" = "darkblue", 
                                             ^
NO COPY: R/labeling.R:329:1: style: lines should not be more than 80 characters.
    index <- which(names(ownership_colors) == bundeswaldinventur::get_abbreviation_for_label(ownership))
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/options.R:35:29: style: Trailing whitespace is superfluous.
set_options <- function(..., 
                            ^
NO COPY: R/options.R:36:74: style: Trailing whitespace is superfluous.
                        name = ifelse(is.null(getOption("package_name")), 
                                                                         ^
NO COPY: R/options.R:53:1: style: lines should not be more than 80 characters.
                                     " = utils::modifyList(set_options, option_list))")
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/options.R:59:15: style: Place a space before left parenthesis, except in a function call.
            if(any(is_option_unset))
              ^
NO COPY: R/options.R:60:59: style: Trailing whitespace is superfluous.
                eval(parse(text = paste0("options(", name, 
                                                          ^
NO COPY: R/options.R:61:1: style: lines should not be more than 80 characters.
                                         " = append(set_options, option_list[is_option_unset]))")
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/options.R:81:29: style: Trailing whitespace is superfluous.
get_options <- function(..., 
                            ^
NO COPY: R/options.R:82:74: style: Trailing whitespace is superfluous.
                        name = ifelse(is.null(getOption("package_name")), 
                                                                         ^
NO COPY: R/options.R:99:1: style: Trailing blank lines are superfluous.

^
NO COPY: R/regional.R:3:1: style: Use two spaces to indent, never tabs.
	   ggplot2::theme(axis.title =  ggplot2::element_text(colour = "black", size = 20),
^
NO COPY: R/regional.R:3:1: style: Use two spaces to indent, never tabs.
	   ggplot2::theme(legend.title = ggplot2::element_text(colour = "black", size = 20),
^
NO COPY: R/regional.R:3:1: style: Use two spaces to indent, never tabs.
	   ggplot2::theme(plot.title = ggplot2::element_text(colour = "black", size = 14))
^
NO COPY: R/regional.R:3:3: style: Commented code should be removed.
# d_name <- paste0(gsub(' ', '_', gsub('/', '_', file_name_district)), "_", gsub(",", "", gsub(" ", "_", names(stratii[stratum_index]))))
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:4:1: style: Use two spaces to indent, never tabs.
		 axis.text =  ggplot2::element_text(colour = "black", size = 15))
^~
NO COPY: R/regional.R:4:1: style: Use two spaces to indent, never tabs.
		 legend.text = ggplot2::element_text(colour = "black", size = 20)
^~
NO COPY: R/regional.R:4:1: style: Use two spaces to indent, never tabs.
	   )
^
NO COPY: R/regional.R:5:1: style: Use two spaces to indent, never tabs.
	   )
^
NO COPY: R/regional.R:5:1: style: Use two spaces to indent, never tabs.
		 )
^~
NO COPY: R/regional.R:6:1: style: Use two spaces to indent, never tabs.
	   )
^
NO COPY: R/regional.R:6:1: style: Use two spaces to indent, never tabs.
		 legend.text = ggplot2::element_text(colour = "black", size = 12)
^~
NO COPY: R/regional.R:6:48: style: Trailing whitespace is superfluous.
    label <- switch(as.character(height_class), 
                                               ^
NO COPY: R/regional.R:7:1: style: Use two spaces to indent, never tabs.
		 )
^~
NO COPY: R/regional.R:16:2: style: Commented code should be removed.
#TITLE_PLOT <- FALSE 
 ^~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:20:37: warning: no visible binding for global variable 'graphics_directory'
    file.rename(pdf_name, file.path(graphics_directory, pdf_name))
                                    ^~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:21:1: style: lines should not be more than 80 characters.
    table_pdf <- ascii_umlauts(file.path(graphics_directory,paste0("table_", out, ".pdf")))
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:21:42: warning: no visible binding for global variable 'graphics_directory'
    table_pdf <- ascii_umlauts(file.path(graphics_directory,paste0("table_", out, ".pdf")))
                                         ^~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:21:61: style: Commas should always have a space after.
    table_pdf <- ascii_umlauts(file.path(graphics_directory,paste0("table_", out, ".pdf")))
                                                            ^
NO COPY: R/regional.R:22:32: warning: no visible binding for global variable 'tables_directory'
    table_pdf_out <- file.path(tables_directory,paste0(out, ".pdf"))
                               ^~~~~~~~~~~~~~~~
NO COPY: R/regional.R:22:49: style: Commas should always have a space after.
    table_pdf_out <- file.path(tables_directory,paste0(out, ".pdf"))
                                                ^
NO COPY: R/regional.R:41:1: style: lines should not be more than 80 characters.
	   ggplot2::theme(axis.title =  ggplot2::element_text(colour = "black", size = 20),
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:41:38: style: Put spaces around all infix operators.
	   ggplot2::theme(axis.title =  ggplot2::element_text(colour = "black", size = 20),
                                    ~^~
NO COPY: R/regional.R:41:70: style: Put spaces around all infix operators.
	   ggplot2::theme(axis.title =  ggplot2::element_text(colour = "black", size = 20),
                                                                    ~^~
NO COPY: R/regional.R:42:28: style: Put spaces around all infix operators.
		 axis.text =  ggplot2::element_text(colour = "black", size = 15))
                          ~^~
NO COPY: R/regional.R:42:60: style: Put spaces around all infix operators.
		 axis.text =  ggplot2::element_text(colour = "black", size = 15))
                                                          ~^
NO COPY: R/regional.R:47:1: style: lines should not be more than 80 characters.
	   ggplot2::theme(legend.title = ggplot2::element_text(colour = "black", size = 20),
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:47:40: style: Put spaces around all infix operators.
	   ggplot2::theme(legend.title = ggplot2::element_text(colour = "black", size = 20),
                                      ~^~
NO COPY: R/regional.R:47:71: style: Put spaces around all infix operators.
	   ggplot2::theme(legend.title = ggplot2::element_text(colour = "black", size = 20),
                                                                     ~^~
NO COPY: R/regional.R:48:30: style: Put spaces around all infix operators.
		 legend.text = ggplot2::element_text(colour = "black", size = 20)
                            ~^~
NO COPY: R/regional.R:48:61: style: Put spaces around all infix operators.
		 legend.text = ggplot2::element_text(colour = "black", size = 20)
                                                           ~^
NO COPY: R/regional.R:54:1: style: lines should not be more than 80 characters.
	   ggplot2::theme(plot.title = ggplot2::element_text(colour = "black", size = 14))
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:54:38: style: Put spaces around all infix operators.
	   ggplot2::theme(plot.title = ggplot2::element_text(colour = "black", size = 14))
                                    ~^~
NO COPY: R/regional.R:54:69: style: Put spaces around all infix operators.
	   ggplot2::theme(plot.title = ggplot2::element_text(colour = "black", size = 14))
                                                                   ~^~
NO COPY: R/regional.R:59:1: style: lines should not be more than 80 characters.
           ggplot2::theme(axis.text.x = ggplot2::element_text(angle = -70, hjust = 0, vjust = 1))
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:63:1: style: lines should not be more than 80 characters.
    graphics::plot(obj + theme_bold_axes() + theme_bold_title() + theme_bold_legend() +  
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:63:88: style: Trailing whitespace is superfluous.
    graphics::plot(obj + theme_bold_axes() + theme_bold_title() + theme_bold_legend() +  
                                                                                       ^~
NO COPY: R/regional.R:64:34: style: Put spaces around all infix operators.
         ggplot2::theme(axis.line=element_blank(),
                                ~^~
NO COPY: R/regional.R:65:25: style: Put spaces around all infix operators.
               axis.text=element_blank(),
                       ~^~
NO COPY: R/regional.R:66:26: style: Put spaces around all infix operators.
               axis.ticks=element_blank(),
                        ~^~
NO COPY: R/regional.R:67:26: style: Put spaces around all infix operators.
               axis.title=element_blank(),
                        ~^~
NO COPY: R/regional.R:68:26: style: Put spaces around all infix operators.
               panel.grid=element_blank()
                        ~^~
NO COPY: R/regional.R:70:11: style: Trailing whitespace is superfluous.
         ) 
          ^
NO COPY: R/regional.R:74:1: style: lines should not be more than 80 characters.
    graphics::plot(obj + theme_bold_axes() + theme_bold_title() + theme_bold_legend() +
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:75:1: style: lines should not be more than 80 characters.
         ggplot2::theme(strip.text.y = ggplot2::element_text(size=12)) + theme_rotate_xasis_labels()
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:75:66: style: Put spaces around all infix operators.
         ggplot2::theme(strip.text.y = ggplot2::element_text(size=12)) + theme_rotate_xasis_labels()
                                                                ~^~
NO COPY: R/regional.R:79:66: style: Trailing whitespace is superfluous.
    graphics::plot(obj + theme_bold_axes() + theme_bold_title() + 
                                                                 ^
NO COPY: R/regional.R:80:66: style: Put spaces around all infix operators.
         ggplot2::theme(strip.text.y = ggplot2::element_text(size=12)) +
                                                                ~^~
NO COPY: R/regional.R:82:1: style: lines should not be more than 80 characters.
         ggplot2::theme(legend.title = ggplot2::element_text(colour = "black", size = 12),
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:83:30: style: Put spaces around all infix operators.
		 legend.text = ggplot2::element_text(colour = "black", size = 12)
                            ~^~
NO COPY: R/regional.R:83:61: style: Put spaces around all infix operators.
		 legend.text = ggplot2::element_text(colour = "black", size = 12)
                                                           ~^
NO COPY: R/regional.R:91:62: style: Only use double-quotes.
    cat(..., "\n",  file = file_name, append = append, sep = '')
                                                             ^~
NO COPY: R/regional.R:94:42: style: Only use double-quotes.
grouping_species <- function(species = c('Fichte', 'Wei\u00dftanne'), 
                                         ^~~~~~~~
NO COPY: R/regional.R:94:52: style: Only use double-quotes.
grouping_species <- function(species = c('Fichte', 'Wei\u00dftanne'), 
                                                   ^~~~~~~~~~~~~~~~
NO COPY: R/regional.R:94:70: style: Trailing whitespace is superfluous.
grouping_species <- function(species = c('Fichte', 'Wei\u00dftanne'), 
                                                                     ^
NO COPY: R/regional.R:96:54: style: Trailing whitespace is superfluous.
                             shares = species_shares, 
                                                     ^
NO COPY: R/regional.R:98:38: style: Trailing whitespace is superfluous.
    species_shares <- shares[species] 
                                     ^
NO COPY: R/regional.R:101:74: style: Trailing whitespace is superfluous.
    group <-  setdiff(seq(along.with = species_shares), distinct_species) 
                                                                         ^
NO COPY: R/regional.R:104:27: style: Trailing whitespace is superfluous.
    if (length(group) > 0) 
                          ^
NO COPY: R/regional.R:105:60: style: Only use double-quotes.
        label <- c(label, paste(species[group], collapse = '/'))
                                                           ^~~
NO COPY: R/regional.R:112:40: style: Trailing whitespace is superfluous.
    grouping[[length(grouping) + 1]] <- 
                                       ^
NO COPY: R/regional.R:113:51: style: Trailing whitespace is superfluous.
        unlist(species_list$ba.grupp[group_index]) 
                                                  ^
NO COPY: R/regional.R:117:26: style: Trailing whitespace is superfluous.
group_district_species <- 
                         ^
NO COPY: R/regional.R:118:1: style: lines should not be more than 80 characters.
    function(groupings = list(c("Fichte", "Wei\u00dftanne", "Douglasie", "Kiefer", "L\u00e4rchen/sNB"), 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:118:104: style: Trailing whitespace is superfluous.
    function(groupings = list(c("Fichte", "Wei\u00dftanne", "Douglasie", "Kiefer", "L\u00e4rchen/sNB"), 
                                                                                                       ^
NO COPY: R/regional.R:119:52: style: Trailing whitespace is superfluous.
                              c("Buche", "Eichen"), 
                                                   ^
NO COPY: R/regional.R:123:27: style: Trailing whitespace is superfluous.
    species_groups <- NULL  
                          ^~
NO COPY: R/regional.R:130:34: style: Only use double-quotes.
    names(species_groups)  <-  c('ba.text', 'ba.grupp')
                                 ^~~~~~~~~
NO COPY: R/regional.R:130:45: style: Only use double-quotes.
    names(species_groups)  <-  c('ba.text', 'ba.grupp')
                                            ^~~~~~~~~~
NO COPY: R/regional.R:137:1: style: lines should not be more than 80 characters.
    anno <- ggplot2::annotate("text", label = "Copyright 2015: Abt. BuI, FVA BW",
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:138:49: style: Trailing whitespace is superfluous.
                     size = 4, colour = "white", 
                                                ^
NO COPY: R/regional.R:143:42: style: Trailing whitespace is superfluous.
plot_groups_areas <- function(b1, b2, b3, 
                                         ^
NO COPY: R/regional.R:150:1: style: lines should not be more than 80 characters.
                              species_groups_labels = c(district_groups$ba.text, "Alle BA")
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:153:51: style: Trailing whitespace is superfluous.
    species_label <- factor(species_groups_labels, 
                                                  ^
NO COPY: R/regional.R:156:36: style: Only use double-quotes.
                  data.frame(bwi = '1987',
                                   ^~~~~~
NO COPY: R/regional.R:158:46: style: Words within variable and function names should be separated by '_' rather than '.'.
                             prediction = b1$T.FVBN.Bagr.Akl.Dkl[1, 1, , , ], 
                                             ^~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:158:72: style: Commas should never have a space before.
                             prediction = b1$T.FVBN.Bagr.Akl.Dkl[1, 1, , , ], 
                                                                      ~^
NO COPY: R/regional.R:158:74: style: Commas should never have a space before.
                             prediction = b1$T.FVBN.Bagr.Akl.Dkl[1, 1, , , ], 
                                                                        ~^
NO COPY: R/regional.R:158:78: style: Trailing whitespace is superfluous.
                             prediction = b1$T.FVBN.Bagr.Akl.Dkl[1, 1, , , ], 
                                                                             ^
NO COPY: R/regional.R:159:50: style: Words within variable and function names should be separated by '_' rather than '.'.
                             standard_error = b1$T.FVBN.Bagr.Akl.Dkl[1, 2, , , ]
                                                 ^~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:159:76: style: Commas should never have a space before.
                             standard_error = b1$T.FVBN.Bagr.Akl.Dkl[1, 2, , , ]
                                                                          ~^
NO COPY: R/regional.R:159:78: style: Commas should never have a space before.
                             standard_error = b1$T.FVBN.Bagr.Akl.Dkl[1, 2, , , ]
                                                                            ~^
NO COPY: R/regional.R:160:32: style: Trailing whitespace is superfluous.
                             ), 
                               ^
NO COPY: R/regional.R:161:36: style: Only use double-quotes.
                  data.frame(bwi = '2002', 
                                   ^~~~~~
NO COPY: R/regional.R:161:43: style: Trailing whitespace is superfluous.
                  data.frame(bwi = '2002', 
                                          ^
NO COPY: R/regional.R:162:55: style: Trailing whitespace is superfluous.
                             species =  species_label, 
                                                      ^
NO COPY: R/regional.R:163:46: style: Words within variable and function names should be separated by '_' rather than '.'.
                             prediction = b2$T.FVBN.Bagr.Akl.Dkl[1, 1, , , ], 
                                             ^~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:163:72: style: Commas should never have a space before.
                             prediction = b2$T.FVBN.Bagr.Akl.Dkl[1, 1, , , ], 
                                                                      ~^
NO COPY: R/regional.R:163:74: style: Commas should never have a space before.
                             prediction = b2$T.FVBN.Bagr.Akl.Dkl[1, 1, , , ], 
                                                                        ~^
NO COPY: R/regional.R:163:78: style: Trailing whitespace is superfluous.
                             prediction = b2$T.FVBN.Bagr.Akl.Dkl[1, 1, , , ], 
                                                                             ^
NO COPY: R/regional.R:164:50: style: Words within variable and function names should be separated by '_' rather than '.'.
                             standard_error = b2$T.FVBN.Bagr.Akl.Dkl[1, 2, , , ]
                                                 ^~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:164:76: style: Commas should never have a space before.
                             standard_error = b2$T.FVBN.Bagr.Akl.Dkl[1, 2, , , ]
                                                                          ~^
NO COPY: R/regional.R:164:78: style: Commas should never have a space before.
                             standard_error = b2$T.FVBN.Bagr.Akl.Dkl[1, 2, , , ]
                                                                            ~^
NO COPY: R/regional.R:165:32: style: Trailing whitespace is superfluous.
                             ), 
                               ^
NO COPY: R/regional.R:166:36: style: Only use double-quotes.
                  data.frame(bwi = '2012', 
                                   ^~~~~~
NO COPY: R/regional.R:166:43: style: Trailing whitespace is superfluous.
                  data.frame(bwi = '2012', 
                                          ^
NO COPY: R/regional.R:167:55: style: Trailing whitespace is superfluous.
                             species =  species_label, 
                                                      ^
NO COPY: R/regional.R:168:46: style: Words within variable and function names should be separated by '_' rather than '.'.
                             prediction = b3$T.FVBN.Bagr.Akl.Dkl[1, 1, , , ], 
                                             ^~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:168:72: style: Commas should never have a space before.
                             prediction = b3$T.FVBN.Bagr.Akl.Dkl[1, 1, , , ], 
                                                                      ~^
NO COPY: R/regional.R:168:74: style: Commas should never have a space before.
                             prediction = b3$T.FVBN.Bagr.Akl.Dkl[1, 1, , , ], 
                                                                        ~^
NO COPY: R/regional.R:168:78: style: Trailing whitespace is superfluous.
                             prediction = b3$T.FVBN.Bagr.Akl.Dkl[1, 1, , , ], 
                                                                             ^
NO COPY: R/regional.R:169:50: style: Words within variable and function names should be separated by '_' rather than '.'.
                             standard_error = b3$T.FVBN.Bagr.Akl.Dkl[1, 2, , , ]
                                                 ^~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:169:76: style: Commas should never have a space before.
                             standard_error = b3$T.FVBN.Bagr.Akl.Dkl[1, 2, , , ]
                                                                          ~^
NO COPY: R/regional.R:169:78: style: Commas should never have a space before.
                             standard_error = b3$T.FVBN.Bagr.Akl.Dkl[1, 2, , , ]
                                                                            ~^
NO COPY: R/regional.R:170:31: style: Trailing whitespace is superfluous.
                             ) 
                              ^
NO COPY: R/regional.R:174:1: style: lines should not be more than 80 characters.
    d_name <- paste0(gsub(' ', '_', gsub('/', '_', file_name_district)), "_", gsub(",", "", gsub(" ", "_", names(stratii[stratum_index]))))
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:174:27: style: Only use double-quotes.
    d_name <- paste0(gsub(' ', '_', gsub('/', '_', file_name_district)), "_", gsub(",", "", gsub(" ", "_", names(stratii[stratum_index]))))
                          ^~~
NO COPY: R/regional.R:174:32: style: Only use double-quotes.
    d_name <- paste0(gsub(' ', '_', gsub('/', '_', file_name_district)), "_", gsub(",", "", gsub(" ", "_", names(stratii[stratum_index]))))
                               ^~~
NO COPY: R/regional.R:174:42: style: Only use double-quotes.
    d_name <- paste0(gsub(' ', '_', gsub('/', '_', file_name_district)), "_", gsub(",", "", gsub(" ", "_", names(stratii[stratum_index]))))
                                         ^~~
NO COPY: R/regional.R:174:47: style: Only use double-quotes.
    d_name <- paste0(gsub(' ', '_', gsub('/', '_', file_name_district)), "_", gsub(",", "", gsub(" ", "_", names(stratii[stratum_index]))))
                                              ^~~
NO COPY: R/regional.R:174:114: warning: no visible binding for global variable 'stratii', Did you mean 'strtoi'?
    d_name <- paste0(gsub(' ', '_', gsub('/', '_', file_name_district)), "_", gsub(",", "", gsub(" ", "_", names(stratii[stratum_index]))))
                                                                                                                 ^~~~~~~
NO COPY: R/regional.R:174:122: warning: no visible binding for global variable 'stratum_index'
    d_name <- paste0(gsub(' ', '_', gsub('/', '_', file_name_district)), "_", gsub(",", "", gsub(" ", "_", names(stratii[stratum_index]))))
                                                                                                                         ^~~~~~~~~~~~~
NO COPY: R/regional.R:175:18: style: Only use double-quotes.
    type_name <- 'Fl\u00e4che'
                 ^~~~~~~~~~~~~
NO COPY: R/regional.R:176:48: style: Only use double-quotes.
    out_name <- paste(d_name, type_name, sep = '_')
                                               ^~~
NO COPY: R/regional.R:177:34: style: Only use double-quotes.
    out_file <- paste0(out_name, '.eps')
                                 ^~~~~~
NO COPY: R/regional.R:179:1: style: lines should not be more than 80 characters.
    grDevices::postscript(out_path, width = graphic_width, height = graphic_height,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:186:23: style: Trailing whitespace is superfluous.
                    ), 
                      ^
NO COPY: R/regional.R:188:1: style: lines should not be more than 80 characters.
         ggplot2::geom_bar(stat = 'identity', position = ggplot2::position_dodge()) +
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:188:35: style: Only use double-quotes.
         ggplot2::geom_bar(stat = 'identity', position = ggplot2::position_dodge()) +
                                  ^~~~~~~~~~
NO COPY: R/regional.R:193:64: style: Put spaces around all infix operators.
                       position = ggplot2::position_dodge(width=0.9)
                                                              ~^~
NO COPY: R/regional.R:195:71: style: Only use double-quotes.
         ggplot2::scale_fill_manual(values = get_bwi_colors(), name = 'BWI') +
                                                                      ^~~~~
NO COPY: R/regional.R:197:24: style: Only use double-quotes.
         ggplot2::xlab('')+
                       ^~
NO COPY: R/regional.R:197:27: style: Put spaces around all infix operators.
         ggplot2::xlab('')+
                         ~^~
NO COPY: R/regional.R:198:24: style: Only use double-quotes.
         ggplot2::ylab('Fl\u00e4che [ha]') + copyright() + 
                       ^~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:198:59: style: Trailing whitespace is superfluous.
         ggplot2::ylab('Fl\u00e4che [ha]') + copyright() + 
                                                          ^
NO COPY: R/regional.R:199:12: style: Place a space before left parenthesis, except in a function call.
         if(TITLE_PLOT){ggplot2::ggtitle(title_district)} 
           ^
NO COPY: R/regional.R:199:24: style: Opening curly braces should never go on their own line and should always be followed by a new line.
         if(TITLE_PLOT){ggplot2::ggtitle(title_district)} 
                       ^
NO COPY: R/regional.R:199:57: style: Closing curly-braces should always be on their own line, unless it's followed by an else.
         if(TITLE_PLOT){ggplot2::ggtitle(title_district)} 
                                                        ^
NO COPY: R/regional.R:199:58: style: Trailing whitespace is superfluous.
         if(TITLE_PLOT){ggplot2::ggtitle(title_district)} 
                                                         ^
NO COPY: R/regional.R:209:1: style: lines should not be more than 80 characters.
    names(table_data)  <- c('BWI', 'Artengruppe', 'Vorhersage', 'Standardfehler')
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:209:29: style: Only use double-quotes.
    names(table_data)  <- c('BWI', 'Artengruppe', 'Vorhersage', 'Standardfehler')
                            ^~~~~
NO COPY: R/regional.R:209:36: style: Only use double-quotes.
    names(table_data)  <- c('BWI', 'Artengruppe', 'Vorhersage', 'Standardfehler')
                                   ^~~~~~~~~~~~~
NO COPY: R/regional.R:209:51: style: Only use double-quotes.
    names(table_data)  <- c('BWI', 'Artengruppe', 'Vorhersage', 'Standardfehler')
                                                  ^~~~~~~~~~~~
NO COPY: R/regional.R:209:65: style: Only use double-quotes.
    names(table_data)  <- c('BWI', 'Artengruppe', 'Vorhersage', 'Standardfehler')
                                                                ^~~~~~~~~~~~~~~~
NO COPY: R/regional.R:211:7: style: Place a space before left parenthesis, except in a function call.
    if(do_errors_relative) {
      ^
NO COPY: R/regional.R:212:1: style: lines should not be more than 80 characters.
        table_data$Standardfehler <- table_data$Standardfehler / table_data$Vorhersage * 100
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:215:1: style: lines should not be more than 80 characters.
    df_cast <-  reshape2::dcast(reshape2::melt(table_data), value.var = "value", formula =
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:219:1: style: lines should not be more than 80 characters.
    names(df_cast) <- gsub(".*_Vorhersage", 'Fl\u00e4che', gsub(".*_Standardfehler", 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:219:45: style: Only use double-quotes.
    names(df_cast) <- gsub(".*_Vorhersage", 'Fl\u00e4che', gsub(".*_Standardfehler", 
                                            ^~~~~~~~~~~~~
NO COPY: R/regional.R:219:85: style: Trailing whitespace is superfluous.
    names(df_cast) <- gsub(".*_Vorhersage", 'Fl\u00e4che', gsub(".*_Standardfehler", 
                                                                                    ^
NO COPY: R/regional.R:223:76: style: Trailing whitespace is superfluous.
                                               levels(table_data$BWI), "}", 
                                                                           ^
NO COPY: R/regional.R:224:57: style: Put spaces around all infix operators.
                                               collapse =" & "), 
                                                        ^~
NO COPY: R/regional.R:224:65: style: Trailing whitespace is superfluous.
                                               collapse =" & "), 
                                                                ^
NO COPY: R/regional.R:227:67: style: Trailing whitespace is superfluous.
    print(file = dot_district_tex, floating = TRUE, append = TRUE, 
                                                                  ^
NO COPY: R/regional.R:228:48: style: Trailing whitespace is superfluous.
          size = "scriptsize", booktabs = TRUE, 
                                               ^
NO COPY: R/regional.R:230:53: style: Trailing whitespace is superfluous.
          xtable::xtable(df_cast, caption = caption, 
                                                    ^
NO COPY: R/regional.R:231:1: style: lines should not be more than 80 characters.
                 align = paste0("ll", paste(rep("|rr", (ncol(df_cast) - 1) / 2), 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:231:81: style: Trailing whitespace is superfluous.
                 align = paste0("ll", paste(rep("|rr", (ncol(df_cast) - 1) / 2), 
                                                                                ^
NO COPY: R/regional.R:233:21: style: Put spaces around all infix operators.
          add.to.row= list(pos = list(-1), command = label_row),
                   ~^
NO COPY: R/regional.R:234:27: style: Put spaces around all infix operators.
          include.rownames=FALSE)
                         ~^~
NO COPY: R/regional.R:235:1: style: lines should not be more than 80 characters.
    table_tex <- ascii_umlauts(file.path(graphic_directory,paste0("table_", out_name, ".tex")))
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:235:60: style: Commas should always have a space after.
    table_tex <- ascii_umlauts(file.path(graphic_directory,paste0("table_", out_name, ".tex")))
                                                           ^
NO COPY: R/regional.R:237:60: style: Trailing whitespace is superfluous.
    print(file = table_tex, floating = TRUE, append = TRUE, 
                                                           ^
NO COPY: R/regional.R:238:48: style: Trailing whitespace is superfluous.
          size = "scriptsize", booktabs = TRUE, 
                                               ^
NO COPY: R/regional.R:240:53: style: Trailing whitespace is superfluous.
          xtable::xtable(df_cast, caption = caption, 
                                                    ^
NO COPY: R/regional.R:241:1: style: lines should not be more than 80 characters.
                 align = paste0("ll", paste(rep("|rr", (ncol(df_cast) - 1) / 2), 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:241:81: style: Trailing whitespace is superfluous.
                 align = paste0("ll", paste(rep("|rr", (ncol(df_cast) - 1) / 2), 
                                                                                ^
NO COPY: R/regional.R:243:21: style: Put spaces around all infix operators.
          add.to.row= list(pos = list(-1), command = label_row),
                   ~^
NO COPY: R/regional.R:244:27: style: Put spaces around all infix operators.
          include.rownames=FALSE)
                         ~^~
NO COPY: R/regional.R:249:36: style: Only use double-quotes.
                  data.frame(bwi = '1987',
                                   ^~~~~~
NO COPY: R/regional.R:251:46: style: Words within variable and function names should be separated by '_' rather than '.'.
                             prediction = b1$FVBN.ha.Bagr.Akl.Dkl[1, 1, , , ], 
                                             ^~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:251:73: style: Commas should never have a space before.
                             prediction = b1$FVBN.ha.Bagr.Akl.Dkl[1, 1, , , ], 
                                                                       ~^
NO COPY: R/regional.R:251:75: style: Commas should never have a space before.
                             prediction = b1$FVBN.ha.Bagr.Akl.Dkl[1, 1, , , ], 
                                                                         ~^
NO COPY: R/regional.R:251:79: style: Trailing whitespace is superfluous.
                             prediction = b1$FVBN.ha.Bagr.Akl.Dkl[1, 1, , , ], 
                                                                              ^
NO COPY: R/regional.R:252:1: style: lines should not be more than 80 characters.
                             standard_error = b1$FVBN.ha.Bagr.Akl.Dkl[1, 2, , , ]
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:252:50: style: Words within variable and function names should be separated by '_' rather than '.'.
                             standard_error = b1$FVBN.ha.Bagr.Akl.Dkl[1, 2, , , ]
                                                 ^~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:252:77: style: Commas should never have a space before.
                             standard_error = b1$FVBN.ha.Bagr.Akl.Dkl[1, 2, , , ]
                                                                           ~^
NO COPY: R/regional.R:252:79: style: Commas should never have a space before.
                             standard_error = b1$FVBN.ha.Bagr.Akl.Dkl[1, 2, , , ]
                                                                             ~^
NO COPY: R/regional.R:253:32: style: Trailing whitespace is superfluous.
                             ), 
                               ^
NO COPY: R/regional.R:254:36: style: Only use double-quotes.
                  data.frame(bwi = '2002', 
                                   ^~~~~~
NO COPY: R/regional.R:254:43: style: Trailing whitespace is superfluous.
                  data.frame(bwi = '2002', 
                                          ^
NO COPY: R/regional.R:255:55: style: Trailing whitespace is superfluous.
                             species =  species_label, 
                                                      ^
NO COPY: R/regional.R:256:46: style: Words within variable and function names should be separated by '_' rather than '.'.
                             prediction = b2$FVBN.ha.Bagr.Akl.Dkl[1, 1, , , ], 
                                             ^~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:256:73: style: Commas should never have a space before.
                             prediction = b2$FVBN.ha.Bagr.Akl.Dkl[1, 1, , , ], 
                                                                       ~^
NO COPY: R/regional.R:256:75: style: Commas should never have a space before.
                             prediction = b2$FVBN.ha.Bagr.Akl.Dkl[1, 1, , , ], 
                                                                         ~^
NO COPY: R/regional.R:256:79: style: Trailing whitespace is superfluous.
                             prediction = b2$FVBN.ha.Bagr.Akl.Dkl[1, 1, , , ], 
                                                                              ^
NO COPY: R/regional.R:257:1: style: lines should not be more than 80 characters.
                             standard_error = b2$FVBN.ha.Bagr.Akl.Dkl[1, 2, , , ]
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:257:50: style: Words within variable and function names should be separated by '_' rather than '.'.
                             standard_error = b2$FVBN.ha.Bagr.Akl.Dkl[1, 2, , , ]
                                                 ^~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:257:77: style: Commas should never have a space before.
                             standard_error = b2$FVBN.ha.Bagr.Akl.Dkl[1, 2, , , ]
                                                                           ~^
NO COPY: R/regional.R:257:79: style: Commas should never have a space before.
                             standard_error = b2$FVBN.ha.Bagr.Akl.Dkl[1, 2, , , ]
                                                                             ~^
NO COPY: R/regional.R:258:32: style: Trailing whitespace is superfluous.
                             ), 
                               ^
NO COPY: R/regional.R:259:36: style: Only use double-quotes.
                  data.frame(bwi = '2012', 
                                   ^~~~~~
NO COPY: R/regional.R:259:43: style: Trailing whitespace is superfluous.
                  data.frame(bwi = '2012', 
                                          ^
NO COPY: R/regional.R:260:55: style: Trailing whitespace is superfluous.
                             species =  species_label, 
                                                      ^
NO COPY: R/regional.R:261:46: style: Words within variable and function names should be separated by '_' rather than '.'.
                             prediction = b3$FVBN.ha.Bagr.Akl.Dkl[1, 1, , , ], 
                                             ^~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:261:73: style: Commas should never have a space before.
                             prediction = b3$FVBN.ha.Bagr.Akl.Dkl[1, 1, , , ], 
                                                                       ~^
NO COPY: R/regional.R:261:75: style: Commas should never have a space before.
                             prediction = b3$FVBN.ha.Bagr.Akl.Dkl[1, 1, , , ], 
                                                                         ~^
NO COPY: R/regional.R:261:79: style: Trailing whitespace is superfluous.
                             prediction = b3$FVBN.ha.Bagr.Akl.Dkl[1, 1, , , ], 
                                                                              ^
NO COPY: R/regional.R:262:1: style: lines should not be more than 80 characters.
                             standard_error = b3$FVBN.ha.Bagr.Akl.Dkl[1, 2, , , ]
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:262:50: style: Words within variable and function names should be separated by '_' rather than '.'.
                             standard_error = b3$FVBN.ha.Bagr.Akl.Dkl[1, 2, , , ]
                                                 ^~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:262:77: style: Commas should never have a space before.
                             standard_error = b3$FVBN.ha.Bagr.Akl.Dkl[1, 2, , , ]
                                                                           ~^
NO COPY: R/regional.R:262:79: style: Commas should never have a space before.
                             standard_error = b3$FVBN.ha.Bagr.Akl.Dkl[1, 2, , , ]
                                                                             ~^
NO COPY: R/regional.R:263:31: style: Trailing whitespace is superfluous.
                             ) 
                              ^
NO COPY: R/regional.R:265:18: style: Only use double-quotes.
    type_name <- 'Fl\u00e4chenanteil'
                 ^~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:266:48: style: Only use double-quotes.
    out_name <- paste(d_name, type_name, sep = '_')
                                               ^~~
NO COPY: R/regional.R:267:62: style: Commas should always have a space after.
    table_data <- data_frame[data_frame$species != "Alle BA",]
                                                             ^
NO COPY: R/regional.R:268:1: style: lines should not be more than 80 characters.
    names(table_data)  <- c('BWI', 'Artengruppe', 'Vorhersage', 'Standardfehler')
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:268:29: style: Only use double-quotes.
    names(table_data)  <- c('BWI', 'Artengruppe', 'Vorhersage', 'Standardfehler')
                            ^~~~~
NO COPY: R/regional.R:268:36: style: Only use double-quotes.
    names(table_data)  <- c('BWI', 'Artengruppe', 'Vorhersage', 'Standardfehler')
                                   ^~~~~~~~~~~~~
NO COPY: R/regional.R:268:51: style: Only use double-quotes.
    names(table_data)  <- c('BWI', 'Artengruppe', 'Vorhersage', 'Standardfehler')
                                                  ^~~~~~~~~~~~
NO COPY: R/regional.R:268:65: style: Only use double-quotes.
    names(table_data)  <- c('BWI', 'Artengruppe', 'Vorhersage', 'Standardfehler')
                                                                ^~~~~~~~~~~~~~~~
NO COPY: R/regional.R:269:19: style: Only use double-quotes.
    caption  <- c('Fl\u00e4chenanteil und Fehler in Prozent.')
                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:270:7: style: Place a space before left parenthesis, except in a function call.
    if(do_errors_relative) {
      ^
NO COPY: R/regional.R:271:1: style: lines should not be more than 80 characters.
        table_data$Standardfehler <- table_data$Standardfehler / table_data$Vorhersage * 100
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:272:23: style: Only use double-quotes.
        caption  <- c('Anteile und Fehler in Prozent.')
                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:274:1: style: lines should not be more than 80 characters.
    df_cast <-  reshape2::dcast(reshape2::melt(table_data), value.var = "value", formula =
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:277:45: style: Only use double-quotes.
    names(df_cast) <- gsub(".*_Vorhersage", 'Anteil', gsub(".*_Standardfehler", 
                                            ^~~~~~~~
NO COPY: R/regional.R:277:80: style: Trailing whitespace is superfluous.
    names(df_cast) <- gsub(".*_Vorhersage", 'Anteil', gsub(".*_Standardfehler", 
                                                                               ^
NO COPY: R/regional.R:281:76: style: Trailing whitespace is superfluous.
                                               levels(table_data$BWI), "}", 
                                                                           ^
NO COPY: R/regional.R:282:57: style: Put spaces around all infix operators.
                                               collapse =" & "), 
                                                        ^~
NO COPY: R/regional.R:282:65: style: Trailing whitespace is superfluous.
                                               collapse =" & "), 
                                                                ^
NO COPY: R/regional.R:285:67: style: Trailing whitespace is superfluous.
    print(file = dot_district_tex, floating = TRUE, append = TRUE, 
                                                                  ^
NO COPY: R/regional.R:286:48: style: Trailing whitespace is superfluous.
          size = "scriptsize", booktabs = TRUE, 
                                               ^
NO COPY: R/regional.R:288:53: style: Trailing whitespace is superfluous.
          xtable::xtable(df_cast, caption = caption, 
                                                    ^
NO COPY: R/regional.R:289:1: style: lines should not be more than 80 characters.
                 align = paste0("ll", paste(rep("|rr", (ncol(df_cast) - 1) / 2), 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:289:81: style: Trailing whitespace is superfluous.
                 align = paste0("ll", paste(rep("|rr", (ncol(df_cast) - 1) / 2), 
                                                                                ^
NO COPY: R/regional.R:291:21: style: Put spaces around all infix operators.
          add.to.row= list(pos = list(-1), command = label_row),
                   ~^
NO COPY: R/regional.R:292:27: style: Put spaces around all infix operators.
          include.rownames=FALSE)
                         ~^~
NO COPY: R/regional.R:293:1: style: lines should not be more than 80 characters.
    table_tex <- ascii_umlauts(file.path(graphic_directory,paste0("table_", out_name, ".tex")))
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:293:60: style: Commas should always have a space after.
    table_tex <- ascii_umlauts(file.path(graphic_directory,paste0("table_", out_name, ".tex")))
                                                           ^
NO COPY: R/regional.R:295:60: style: Trailing whitespace is superfluous.
    print(file = table_tex, floating = TRUE, append = TRUE, 
                                                           ^
NO COPY: R/regional.R:296:48: style: Trailing whitespace is superfluous.
          size = "scriptsize", booktabs = TRUE, 
                                               ^
NO COPY: R/regional.R:298:53: style: Trailing whitespace is superfluous.
          xtable::xtable(df_cast, caption = caption, 
                                                    ^
NO COPY: R/regional.R:299:1: style: lines should not be more than 80 characters.
                 align = paste0("ll", paste(rep("|rr", (ncol(df_cast) - 1) / 2), 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:299:81: style: Trailing whitespace is superfluous.
                 align = paste0("ll", paste(rep("|rr", (ncol(df_cast) - 1) / 2), 
                                                                                ^
NO COPY: R/regional.R:301:21: style: Put spaces around all infix operators.
          add.to.row= list(pos = list(-1), command = label_row),
                   ~^
NO COPY: R/regional.R:302:27: style: Put spaces around all infix operators.
          include.rownames=FALSE)
                         ~^~
NO COPY: R/regional.R:309:43: style: Trailing whitespace is superfluous.
plot_groups_stocks <- function(b1, b2, b3, 
                                          ^
NO COPY: R/regional.R:316:1: style: lines should not be more than 80 characters.
                              species_groups_labels = c(district_groups$ba.text, "Alle BA")
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:319:51: style: Trailing whitespace is superfluous.
    species_label <- factor(species_groups_labels, 
                                                  ^
NO COPY: R/regional.R:322:38: style: Only use double-quotes.
                    data.frame(bwi = '1987',
                                     ^~~~~~
NO COPY: R/regional.R:324:48: style: Words within variable and function names should be separated by '_' rather than '.'.
                               prediction = b1$T.FVBN.Bagr.Akl.Dkl[2, 1, , , ], 
                                               ^~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:324:74: style: Commas should never have a space before.
                               prediction = b1$T.FVBN.Bagr.Akl.Dkl[2, 1, , , ], 
                                                                        ~^
NO COPY: R/regional.R:324:76: style: Commas should never have a space before.
                               prediction = b1$T.FVBN.Bagr.Akl.Dkl[2, 1, , , ], 
                                                                          ~^
NO COPY: R/regional.R:324:80: style: Trailing whitespace is superfluous.
                               prediction = b1$T.FVBN.Bagr.Akl.Dkl[2, 1, , , ], 
                                                                               ^
NO COPY: R/regional.R:325:1: style: lines should not be more than 80 characters.
                               standard_error = b1$T.FVBN.Bagr.Akl.Dkl[2, 2, , , ]
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:325:52: style: Words within variable and function names should be separated by '_' rather than '.'.
                               standard_error = b1$T.FVBN.Bagr.Akl.Dkl[2, 2, , , ]
                                                   ^~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:325:78: style: Commas should never have a space before.
                               standard_error = b1$T.FVBN.Bagr.Akl.Dkl[2, 2, , , ]
                                                                            ~^
NO COPY: R/regional.R:325:80: style: Commas should never have a space before.
                               standard_error = b1$T.FVBN.Bagr.Akl.Dkl[2, 2, , , ]
                                                                              ~^
NO COPY: R/regional.R:326:34: style: Trailing whitespace is superfluous.
                               ), 
                                 ^
NO COPY: R/regional.R:327:38: style: Only use double-quotes.
                    data.frame(bwi = '2002', 
                                     ^~~~~~
NO COPY: R/regional.R:327:45: style: Trailing whitespace is superfluous.
                    data.frame(bwi = '2002', 
                                            ^
NO COPY: R/regional.R:328:57: style: Trailing whitespace is superfluous.
                               species =  species_label, 
                                                        ^
NO COPY: R/regional.R:329:48: style: Words within variable and function names should be separated by '_' rather than '.'.
                               prediction = b2$T.FVBN.Bagr.Akl.Dkl[2, 1, , , ], 
                                               ^~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:329:74: style: Commas should never have a space before.
                               prediction = b2$T.FVBN.Bagr.Akl.Dkl[2, 1, , , ], 
                                                                        ~^
NO COPY: R/regional.R:329:76: style: Commas should never have a space before.
                               prediction = b2$T.FVBN.Bagr.Akl.Dkl[2, 1, , , ], 
                                                                          ~^
NO COPY: R/regional.R:329:80: style: Trailing whitespace is superfluous.
                               prediction = b2$T.FVBN.Bagr.Akl.Dkl[2, 1, , , ], 
                                                                               ^
NO COPY: R/regional.R:330:1: style: lines should not be more than 80 characters.
                               standard_error = b2$T.FVBN.Bagr.Akl.Dkl[2, 2, , , ]
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:330:52: style: Words within variable and function names should be separated by '_' rather than '.'.
                               standard_error = b2$T.FVBN.Bagr.Akl.Dkl[2, 2, , , ]
                                                   ^~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:330:78: style: Commas should never have a space before.
                               standard_error = b2$T.FVBN.Bagr.Akl.Dkl[2, 2, , , ]
                                                                            ~^
NO COPY: R/regional.R:330:80: style: Commas should never have a space before.
                               standard_error = b2$T.FVBN.Bagr.Akl.Dkl[2, 2, , , ]
                                                                              ~^
NO COPY: R/regional.R:331:34: style: Trailing whitespace is superfluous.
                               ), 
                                 ^
NO COPY: R/regional.R:332:38: style: Only use double-quotes.
                    data.frame(bwi = '2012', 
                                     ^~~~~~
NO COPY: R/regional.R:332:45: style: Trailing whitespace is superfluous.
                    data.frame(bwi = '2012', 
                                            ^
NO COPY: R/regional.R:333:57: style: Trailing whitespace is superfluous.
                               species =  species_label, 
                                                        ^
NO COPY: R/regional.R:334:48: style: Words within variable and function names should be separated by '_' rather than '.'.
                               prediction = b3$T.FVBN.Bagr.Akl.Dkl[2, 1, , , ], 
                                               ^~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:334:74: style: Commas should never have a space before.
                               prediction = b3$T.FVBN.Bagr.Akl.Dkl[2, 1, , , ], 
                                                                        ~^
NO COPY: R/regional.R:334:76: style: Commas should never have a space before.
                               prediction = b3$T.FVBN.Bagr.Akl.Dkl[2, 1, , , ], 
                                                                          ~^
NO COPY: R/regional.R:334:80: style: Trailing whitespace is superfluous.
                               prediction = b3$T.FVBN.Bagr.Akl.Dkl[2, 1, , , ], 
                                                                               ^
NO COPY: R/regional.R:335:1: style: lines should not be more than 80 characters.
                               standard_error = b3$T.FVBN.Bagr.Akl.Dkl[2, 2, , , ]
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:335:52: style: Words within variable and function names should be separated by '_' rather than '.'.
                               standard_error = b3$T.FVBN.Bagr.Akl.Dkl[2, 2, , , ]
                                                   ^~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:335:78: style: Commas should never have a space before.
                               standard_error = b3$T.FVBN.Bagr.Akl.Dkl[2, 2, , , ]
                                                                            ~^
NO COPY: R/regional.R:335:80: style: Commas should never have a space before.
                               standard_error = b3$T.FVBN.Bagr.Akl.Dkl[2, 2, , , ]
                                                                              ~^
NO COPY: R/regional.R:336:33: style: Trailing whitespace is superfluous.
                               ) 
                                ^
NO COPY: R/regional.R:338:55: style: Only use double-quotes.
    table_data <- data_frame; names(table_data)  <- c('BWI', 'Artengruppe',
                                                      ^~~~~
NO COPY: R/regional.R:338:62: style: Only use double-quotes.
    table_data <- data_frame; names(table_data)  <- c('BWI', 'Artengruppe',
                                                             ^~~~~~~~~~~~~
NO COPY: R/regional.R:339:55: style: Only use double-quotes.
                                                      'Vorhersage',
                                                      ^~~~~~~~~~~~
NO COPY: R/regional.R:340:55: style: Only use double-quotes.
                                                      'Standardfehler')
                                                      ^~~~~~~~~~~~~~~~
NO COPY: R/regional.R:342:1: style: lines should not be more than 80 characters.
    d_name <- paste0(gsub(' ', '_', gsub('/', '_', file_name_district)), "_", gsub(",", "", gsub(" ", "_", names(stratii[stratum_index]))))
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:342:27: style: Only use double-quotes.
    d_name <- paste0(gsub(' ', '_', gsub('/', '_', file_name_district)), "_", gsub(",", "", gsub(" ", "_", names(stratii[stratum_index]))))
                          ^~~
NO COPY: R/regional.R:342:32: style: Only use double-quotes.
    d_name <- paste0(gsub(' ', '_', gsub('/', '_', file_name_district)), "_", gsub(",", "", gsub(" ", "_", names(stratii[stratum_index]))))
                               ^~~
NO COPY: R/regional.R:342:42: style: Only use double-quotes.
    d_name <- paste0(gsub(' ', '_', gsub('/', '_', file_name_district)), "_", gsub(",", "", gsub(" ", "_", names(stratii[stratum_index]))))
                                         ^~~
NO COPY: R/regional.R:342:47: style: Only use double-quotes.
    d_name <- paste0(gsub(' ', '_', gsub('/', '_', file_name_district)), "_", gsub(",", "", gsub(" ", "_", names(stratii[stratum_index]))))
                                              ^~~
NO COPY: R/regional.R:342:114: warning: no visible binding for global variable 'stratii', Did you mean 'strtoi'?
    d_name <- paste0(gsub(' ', '_', gsub('/', '_', file_name_district)), "_", gsub(",", "", gsub(" ", "_", names(stratii[stratum_index]))))
                                                                                                                 ^~~~~~~
NO COPY: R/regional.R:342:122: warning: no visible binding for global variable 'stratum_index'
    d_name <- paste0(gsub(' ', '_', gsub('/', '_', file_name_district)), "_", gsub(",", "", gsub(" ", "_", names(stratii[stratum_index]))))
                                                                                                                         ^~~~~~~~~~~~~
NO COPY: R/regional.R:343:18: style: Only use double-quotes.
    type_name <- 'Vorrat'
                 ^~~~~~~~
NO COPY: R/regional.R:344:48: style: Only use double-quotes.
    out_name <- paste(d_name, type_name, sep = '_')
                                               ^~~
NO COPY: R/regional.R:345:34: style: Only use double-quotes.
    out_file <- paste0(out_name, '.eps')
                                 ^~~~~~
NO COPY: R/regional.R:347:1: style: lines should not be more than 80 characters.
    grDevices::postscript(out_path, width = graphic_width, height = graphic_height,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:354:23: style: Trailing whitespace is superfluous.
                    ), 
                      ^
NO COPY: R/regional.R:356:1: style: lines should not be more than 80 characters.
         ggplot2::geom_bar(stat = 'identity', position = ggplot2::position_dodge()) +
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:356:35: style: Only use double-quotes.
         ggplot2::geom_bar(stat = 'identity', position = ggplot2::position_dodge()) +
                                  ^~~~~~~~~~
NO COPY: R/regional.R:361:64: style: Put spaces around all infix operators.
                       position = ggplot2::position_dodge(width=0.9)
                                                              ~^~
NO COPY: R/regional.R:363:71: style: Only use double-quotes.
         ggplot2::scale_fill_manual(values = get_bwi_colors(), name = 'BWI') +
                                                                      ^~~~~
NO COPY: R/regional.R:365:24: style: Only use double-quotes.
         ggplot2::xlab('') +
                       ^~
NO COPY: R/regional.R:366:1: style: lines should not be more than 80 characters.
         ggplot2::ylab(expression(paste("Vorrat [", m^3 ,"]",  sep = ""))) + copyright() +
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:366:54: style: Put spaces around all infix operators.
         ggplot2::ylab(expression(paste("Vorrat [", m^3 ,"]",  sep = ""))) + copyright() +
                                                    ~^~
NO COPY: R/regional.R:366:57: style: Commas should never have a space before.
         ggplot2::ylab(expression(paste("Vorrat [", m^3 ,"]",  sep = ""))) + copyright() +
                                                       ~^
NO COPY: R/regional.R:366:58: style: Commas should always have a space after.
         ggplot2::ylab(expression(paste("Vorrat [", m^3 ,"]",  sep = ""))) + copyright() +
                                                         ^
NO COPY: R/regional.R:367:12: style: Place a space before left parenthesis, except in a function call.
         if(TITLE_PLOT){ggplot2::ggtitle(title_district)} 
           ^
NO COPY: R/regional.R:367:24: style: Opening curly braces should never go on their own line and should always be followed by a new line.
         if(TITLE_PLOT){ggplot2::ggtitle(title_district)} 
                       ^
NO COPY: R/regional.R:367:57: style: Closing curly-braces should always be on their own line, unless it's followed by an else.
         if(TITLE_PLOT){ggplot2::ggtitle(title_district)} 
                                                        ^
NO COPY: R/regional.R:367:58: style: Trailing whitespace is superfluous.
         if(TITLE_PLOT){ggplot2::ggtitle(title_district)} 
                                                         ^
NO COPY: R/regional.R:376:1: style: lines should not be more than 80 characters.
    names(table_data)  <- c('BWI', 'Artengruppe', 'Vorhersage', 'Standardfehler')
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:376:29: style: Only use double-quotes.
    names(table_data)  <- c('BWI', 'Artengruppe', 'Vorhersage', 'Standardfehler')
                            ^~~~~
NO COPY: R/regional.R:376:36: style: Only use double-quotes.
    names(table_data)  <- c('BWI', 'Artengruppe', 'Vorhersage', 'Standardfehler')
                                   ^~~~~~~~~~~~~
NO COPY: R/regional.R:376:51: style: Only use double-quotes.
    names(table_data)  <- c('BWI', 'Artengruppe', 'Vorhersage', 'Standardfehler')
                                                  ^~~~~~~~~~~~
NO COPY: R/regional.R:376:65: style: Only use double-quotes.
    names(table_data)  <- c('BWI', 'Artengruppe', 'Vorhersage', 'Standardfehler')
                                                                ^~~~~~~~~~~~~~~~
NO COPY: R/regional.R:378:7: style: Place a space before left parenthesis, except in a function call.
    if(do_errors_relative) {
      ^
NO COPY: R/regional.R:379:1: style: lines should not be more than 80 characters.
        table_data$Standardfehler <- table_data$Standardfehler / table_data$Vorhersage * 100
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:383:1: style: lines should not be more than 80 characters.
    df_cast <-  reshape2::dcast(reshape2::melt(table_data), value.var = "value", formula =
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:387:45: style: Only use double-quotes.
    names(df_cast) <- gsub(".*_Vorhersage", 'Vorrat', gsub(".*_Standardfehler", 
                                            ^~~~~~~~
NO COPY: R/regional.R:387:80: style: Trailing whitespace is superfluous.
    names(df_cast) <- gsub(".*_Vorhersage", 'Vorrat', gsub(".*_Standardfehler", 
                                                                               ^
NO COPY: R/regional.R:391:76: style: Trailing whitespace is superfluous.
                                               levels(table_data$BWI), "}", 
                                                                           ^
NO COPY: R/regional.R:392:57: style: Put spaces around all infix operators.
                                               collapse =" & "), 
                                                        ^~
NO COPY: R/regional.R:392:65: style: Trailing whitespace is superfluous.
                                               collapse =" & "), 
                                                                ^
NO COPY: R/regional.R:395:67: style: Trailing whitespace is superfluous.
    print(file = dot_district_tex, floating = TRUE, append = TRUE, 
                                                                  ^
NO COPY: R/regional.R:396:48: style: Trailing whitespace is superfluous.
          size = "scriptsize", booktabs = TRUE, 
                                               ^
NO COPY: R/regional.R:398:53: style: Trailing whitespace is superfluous.
          xtable::xtable(df_cast, caption = caption, 
                                                    ^
NO COPY: R/regional.R:399:1: style: lines should not be more than 80 characters.
                 align = paste0("ll", paste(rep("|rr", (ncol(df_cast) - 1) / 2), 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:399:81: style: Trailing whitespace is superfluous.
                 align = paste0("ll", paste(rep("|rr", (ncol(df_cast) - 1) / 2), 
                                                                                ^
NO COPY: R/regional.R:401:21: style: Put spaces around all infix operators.
          add.to.row= list(pos = list(-1), command = label_row),
                   ~^
NO COPY: R/regional.R:402:27: style: Put spaces around all infix operators.
          include.rownames=FALSE)
                         ~^~
NO COPY: R/regional.R:403:1: style: lines should not be more than 80 characters.
    table_tex <- ascii_umlauts(file.path(graphic_directory,paste0("table_", out_name, ".tex")))
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:403:60: style: Commas should always have a space after.
    table_tex <- ascii_umlauts(file.path(graphic_directory,paste0("table_", out_name, ".tex")))
                                                           ^
NO COPY: R/regional.R:405:60: style: Trailing whitespace is superfluous.
    print(file = table_tex, floating = TRUE, append = TRUE, 
                                                           ^
NO COPY: R/regional.R:406:48: style: Trailing whitespace is superfluous.
          size = "scriptsize", booktabs = TRUE, 
                                               ^
NO COPY: R/regional.R:408:53: style: Trailing whitespace is superfluous.
          xtable::xtable(df_cast, caption = caption, 
                                                    ^
NO COPY: R/regional.R:409:1: style: lines should not be more than 80 characters.
                 align = paste0("ll", paste(rep("|rr", (ncol(df_cast) - 1) / 2), 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:409:81: style: Trailing whitespace is superfluous.
                 align = paste0("ll", paste(rep("|rr", (ncol(df_cast) - 1) / 2), 
                                                                                ^
NO COPY: R/regional.R:411:21: style: Put spaces around all infix operators.
          add.to.row= list(pos = list(-1), command = label_row),
                   ~^
NO COPY: R/regional.R:412:27: style: Put spaces around all infix operators.
          include.rownames=FALSE)
                         ~^~
NO COPY: R/regional.R:418:38: style: Only use double-quotes.
                    data.frame(bwi = '1987',
                                     ^~~~~~
NO COPY: R/regional.R:420:1: style: lines should not be more than 80 characters.
                               prediction = b1$FVBN.ha.Bagr.Akl.Dkl[2, 1, , , ], 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:420:48: style: Words within variable and function names should be separated by '_' rather than '.'.
                               prediction = b1$FVBN.ha.Bagr.Akl.Dkl[2, 1, , , ], 
                                               ^~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:420:75: style: Commas should never have a space before.
                               prediction = b1$FVBN.ha.Bagr.Akl.Dkl[2, 1, , , ], 
                                                                         ~^
NO COPY: R/regional.R:420:77: style: Commas should never have a space before.
                               prediction = b1$FVBN.ha.Bagr.Akl.Dkl[2, 1, , , ], 
                                                                           ~^
NO COPY: R/regional.R:420:81: style: Trailing whitespace is superfluous.
                               prediction = b1$FVBN.ha.Bagr.Akl.Dkl[2, 1, , , ], 
                                                                                ^
NO COPY: R/regional.R:421:1: style: lines should not be more than 80 characters.
                               standard_error = b1$FVBN.ha.Bagr.Akl.Dkl[2, 2, , , ]
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:421:52: style: Words within variable and function names should be separated by '_' rather than '.'.
                               standard_error = b1$FVBN.ha.Bagr.Akl.Dkl[2, 2, , , ]
                                                   ^~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:421:79: style: Commas should never have a space before.
                               standard_error = b1$FVBN.ha.Bagr.Akl.Dkl[2, 2, , , ]
                                                                             ~^
NO COPY: R/regional.R:421:81: style: Commas should never have a space before.
                               standard_error = b1$FVBN.ha.Bagr.Akl.Dkl[2, 2, , , ]
                                                                               ~^
NO COPY: R/regional.R:422:34: style: Trailing whitespace is superfluous.
                               ), 
                                 ^
NO COPY: R/regional.R:423:38: style: Only use double-quotes.
                    data.frame(bwi = '2002', 
                                     ^~~~~~
NO COPY: R/regional.R:423:45: style: Trailing whitespace is superfluous.
                    data.frame(bwi = '2002', 
                                            ^
NO COPY: R/regional.R:424:57: style: Trailing whitespace is superfluous.
                               species =  species_label, 
                                                        ^
NO COPY: R/regional.R:425:1: style: lines should not be more than 80 characters.
                               prediction = b2$FVBN.ha.Bagr.Akl.Dkl[2, 1, , , ], 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:425:48: style: Words within variable and function names should be separated by '_' rather than '.'.
                               prediction = b2$FVBN.ha.Bagr.Akl.Dkl[2, 1, , , ], 
                                               ^~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:425:75: style: Commas should never have a space before.
                               prediction = b2$FVBN.ha.Bagr.Akl.Dkl[2, 1, , , ], 
                                                                         ~^
NO COPY: R/regional.R:425:77: style: Commas should never have a space before.
                               prediction = b2$FVBN.ha.Bagr.Akl.Dkl[2, 1, , , ], 
                                                                           ~^
NO COPY: R/regional.R:425:81: style: Trailing whitespace is superfluous.
                               prediction = b2$FVBN.ha.Bagr.Akl.Dkl[2, 1, , , ], 
                                                                                ^
NO COPY: R/regional.R:426:1: style: lines should not be more than 80 characters.
                               standard_error = b2$FVBN.ha.Bagr.Akl.Dkl[2, 2, , , ]
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:426:52: style: Words within variable and function names should be separated by '_' rather than '.'.
                               standard_error = b2$FVBN.ha.Bagr.Akl.Dkl[2, 2, , , ]
                                                   ^~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:426:79: style: Commas should never have a space before.
                               standard_error = b2$FVBN.ha.Bagr.Akl.Dkl[2, 2, , , ]
                                                                             ~^
NO COPY: R/regional.R:426:81: style: Commas should never have a space before.
                               standard_error = b2$FVBN.ha.Bagr.Akl.Dkl[2, 2, , , ]
                                                                               ~^
NO COPY: R/regional.R:427:34: style: Trailing whitespace is superfluous.
                               ), 
                                 ^
NO COPY: R/regional.R:428:38: style: Only use double-quotes.
                    data.frame(bwi = '2012', 
                                     ^~~~~~
NO COPY: R/regional.R:428:45: style: Trailing whitespace is superfluous.
                    data.frame(bwi = '2012', 
                                            ^
NO COPY: R/regional.R:429:57: style: Trailing whitespace is superfluous.
                               species =  species_label, 
                                                        ^
NO COPY: R/regional.R:430:1: style: lines should not be more than 80 characters.
                               prediction = b3$FVBN.ha.Bagr.Akl.Dkl[2, 1, , , ], 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:430:48: style: Words within variable and function names should be separated by '_' rather than '.'.
                               prediction = b3$FVBN.ha.Bagr.Akl.Dkl[2, 1, , , ], 
                                               ^~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:430:75: style: Commas should never have a space before.
                               prediction = b3$FVBN.ha.Bagr.Akl.Dkl[2, 1, , , ], 
                                                                         ~^
NO COPY: R/regional.R:430:77: style: Commas should never have a space before.
                               prediction = b3$FVBN.ha.Bagr.Akl.Dkl[2, 1, , , ], 
                                                                           ~^
NO COPY: R/regional.R:430:81: style: Trailing whitespace is superfluous.
                               prediction = b3$FVBN.ha.Bagr.Akl.Dkl[2, 1, , , ], 
                                                                                ^
NO COPY: R/regional.R:431:1: style: lines should not be more than 80 characters.
                               standard_error = b3$FVBN.ha.Bagr.Akl.Dkl[2, 2, , , ]
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:431:52: style: Words within variable and function names should be separated by '_' rather than '.'.
                               standard_error = b3$FVBN.ha.Bagr.Akl.Dkl[2, 2, , , ]
                                                   ^~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:431:79: style: Commas should never have a space before.
                               standard_error = b3$FVBN.ha.Bagr.Akl.Dkl[2, 2, , , ]
                                                                             ~^
NO COPY: R/regional.R:431:81: style: Commas should never have a space before.
                               standard_error = b3$FVBN.ha.Bagr.Akl.Dkl[2, 2, , , ]
                                                                               ~^
NO COPY: R/regional.R:432:33: style: Trailing whitespace is superfluous.
                               ) 
                                ^
NO COPY: R/regional.R:434:55: style: Only use double-quotes.
    table_data <- data_frame; names(table_data)  <- c('BWI', 'Artengruppe',
                                                      ^~~~~
NO COPY: R/regional.R:434:62: style: Only use double-quotes.
    table_data <- data_frame; names(table_data)  <- c('BWI', 'Artengruppe',
                                                             ^~~~~~~~~~~~~
NO COPY: R/regional.R:435:55: style: Only use double-quotes.
                                                      'Vorhersage',
                                                      ^~~~~~~~~~~~
NO COPY: R/regional.R:436:55: style: Only use double-quotes.
                                                      'Standardfehler')
                                                      ^~~~~~~~~~~~~~~~
NO COPY: R/regional.R:437:1: style: lines should not be more than 80 characters.
    d_name <- paste0(gsub(' ', '_', gsub('/', '_', file_name_district)), "_", gsub(",", "", gsub(" ", "_", names(stratii[stratum_index]))))
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:437:27: style: Only use double-quotes.
    d_name <- paste0(gsub(' ', '_', gsub('/', '_', file_name_district)), "_", gsub(",", "", gsub(" ", "_", names(stratii[stratum_index]))))
                          ^~~
NO COPY: R/regional.R:437:32: style: Only use double-quotes.
    d_name <- paste0(gsub(' ', '_', gsub('/', '_', file_name_district)), "_", gsub(",", "", gsub(" ", "_", names(stratii[stratum_index]))))
                               ^~~
NO COPY: R/regional.R:437:42: style: Only use double-quotes.
    d_name <- paste0(gsub(' ', '_', gsub('/', '_', file_name_district)), "_", gsub(",", "", gsub(" ", "_", names(stratii[stratum_index]))))
                                         ^~~
NO COPY: R/regional.R:437:47: style: Only use double-quotes.
    d_name <- paste0(gsub(' ', '_', gsub('/', '_', file_name_district)), "_", gsub(",", "", gsub(" ", "_", names(stratii[stratum_index]))))
                                              ^~~
NO COPY: R/regional.R:437:114: warning: no visible binding for global variable 'stratii', Did you mean 'strtoi'?
    d_name <- paste0(gsub(' ', '_', gsub('/', '_', file_name_district)), "_", gsub(",", "", gsub(" ", "_", names(stratii[stratum_index]))))
                                                                                                                 ^~~~~~~
NO COPY: R/regional.R:437:122: warning: no visible binding for global variable 'stratum_index'
    d_name <- paste0(gsub(' ', '_', gsub('/', '_', file_name_district)), "_", gsub(",", "", gsub(" ", "_", names(stratii[stratum_index]))))
                                                                                                                         ^~~~~~~~~~~~~
NO COPY: R/regional.R:438:18: style: Only use double-quotes.
    type_name <- 'Vorrat_je_Hektar'
                 ^~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:439:48: style: Only use double-quotes.
    out_name <- paste(d_name, type_name, sep = '_')
                                               ^~~
NO COPY: R/regional.R:441:1: style: lines should not be more than 80 characters.
    names(table_data)  <- c('BWI', 'Artengruppe', 'Vorhersage', 'Standardfehler')
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:441:29: style: Only use double-quotes.
    names(table_data)  <- c('BWI', 'Artengruppe', 'Vorhersage', 'Standardfehler')
                            ^~~~~
NO COPY: R/regional.R:441:36: style: Only use double-quotes.
    names(table_data)  <- c('BWI', 'Artengruppe', 'Vorhersage', 'Standardfehler')
                                   ^~~~~~~~~~~~~
NO COPY: R/regional.R:441:51: style: Only use double-quotes.
    names(table_data)  <- c('BWI', 'Artengruppe', 'Vorhersage', 'Standardfehler')
                                                  ^~~~~~~~~~~~
NO COPY: R/regional.R:441:65: style: Only use double-quotes.
    names(table_data)  <- c('BWI', 'Artengruppe', 'Vorhersage', 'Standardfehler')
                                                                ^~~~~~~~~~~~~~~~
NO COPY: R/regional.R:442:1: style: lines should not be more than 80 characters.
    caption  <- c('Vorr\\"ate und Fehler in Kubikmetern Derbholz mit Rinde je Hektar.')
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:443:7: style: Place a space before left parenthesis, except in a function call.
    if(do_errors_relative) {
      ^
NO COPY: R/regional.R:444:1: style: lines should not be more than 80 characters.
        table_data$Standardfehler <- table_data$Standardfehler / table_data$Vorhersage * 100
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:448:1: style: lines should not be more than 80 characters.
    df_cast <-  reshape2::dcast(reshape2::melt(table_data), value.var = "value", formula =
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:451:45: style: Only use double-quotes.
    names(df_cast) <- gsub(".*_Vorhersage", 'Vorrat', gsub(".*_Standardfehler", 
                                            ^~~~~~~~
NO COPY: R/regional.R:451:80: style: Trailing whitespace is superfluous.
    names(df_cast) <- gsub(".*_Vorhersage", 'Vorrat', gsub(".*_Standardfehler", 
                                                                               ^
NO COPY: R/regional.R:455:76: style: Trailing whitespace is superfluous.
                                               levels(table_data$BWI), "}", 
                                                                           ^
NO COPY: R/regional.R:456:57: style: Put spaces around all infix operators.
                                               collapse =" & "), 
                                                        ^~
NO COPY: R/regional.R:456:65: style: Trailing whitespace is superfluous.
                                               collapse =" & "), 
                                                                ^
NO COPY: R/regional.R:459:67: style: Trailing whitespace is superfluous.
    print(file = dot_district_tex, floating = TRUE, append = TRUE, 
                                                                  ^
NO COPY: R/regional.R:460:48: style: Trailing whitespace is superfluous.
          size = "scriptsize", booktabs = TRUE, 
                                               ^
NO COPY: R/regional.R:462:53: style: Trailing whitespace is superfluous.
          xtable::xtable(df_cast, caption = caption, 
                                                    ^
NO COPY: R/regional.R:463:1: style: lines should not be more than 80 characters.
                 align = paste0("ll", paste(rep("|rr", (ncol(df_cast) - 1) / 2), 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:463:81: style: Trailing whitespace is superfluous.
                 align = paste0("ll", paste(rep("|rr", (ncol(df_cast) - 1) / 2), 
                                                                                ^
NO COPY: R/regional.R:465:21: style: Put spaces around all infix operators.
          add.to.row= list(pos = list(-1), command = label_row),
                   ~^
NO COPY: R/regional.R:466:27: style: Put spaces around all infix operators.
          include.rownames=FALSE)
                         ~^~
NO COPY: R/regional.R:467:1: style: lines should not be more than 80 characters.
    table_tex <- ascii_umlauts(file.path(graphic_directory,paste0("table_", out_name, ".tex")))
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:467:60: style: Commas should always have a space after.
    table_tex <- ascii_umlauts(file.path(graphic_directory,paste0("table_", out_name, ".tex")))
                                                           ^
NO COPY: R/regional.R:469:60: style: Trailing whitespace is superfluous.
    print(file = table_tex, floating = TRUE, append = TRUE, 
                                                           ^
NO COPY: R/regional.R:470:48: style: Trailing whitespace is superfluous.
          size = "scriptsize", booktabs = TRUE, 
                                               ^
NO COPY: R/regional.R:472:53: style: Trailing whitespace is superfluous.
          xtable::xtable(df_cast, caption = caption, 
                                                    ^
NO COPY: R/regional.R:473:1: style: lines should not be more than 80 characters.
                 align = paste0("ll", paste(rep("|rr", (ncol(df_cast) - 1) / 2), 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:473:81: style: Trailing whitespace is superfluous.
                 align = paste0("ll", paste(rep("|rr", (ncol(df_cast) - 1) / 2), 
                                                                                ^
NO COPY: R/regional.R:475:21: style: Put spaces around all infix operators.
          add.to.row= list(pos = list(-1), command = label_row),
                   ~^
NO COPY: R/regional.R:476:27: style: Put spaces around all infix operators.
          include.rownames=FALSE)
                         ~^~
NO COPY: R/regional.R:493:57: style: Trailing whitespace is superfluous.
    girth_classes <- factor(b1$DKL[2:num_girth_classes], 
                                                        ^
NO COPY: R/regional.R:499:40: style: Only use double-quotes.
                      data.frame(bwi = '1987',
                                       ^~~~~~
NO COPY: R/regional.R:501:1: style: lines should not be more than 80 characters.
                                 prediction = b1$T.FVBN.Bagr.Akl.Dkl[2, 1, group_index, , 2:num_girth_classes], 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:501:50: style: Words within variable and function names should be separated by '_' rather than '.'.
                                 prediction = b1$T.FVBN.Bagr.Akl.Dkl[2, 1, group_index, , 2:num_girth_classes], 
                                                 ^~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:501:89: style: Commas should never have a space before.
                                 prediction = b1$T.FVBN.Bagr.Akl.Dkl[2, 1, group_index, , 2:num_girth_classes], 
                                                                                       ~^
NO COPY: R/regional.R:501:112: style: Trailing whitespace is superfluous.
                                 prediction = b1$T.FVBN.Bagr.Akl.Dkl[2, 1, group_index, , 2:num_girth_classes], 
                                                                                                               ^
NO COPY: R/regional.R:502:1: style: lines should not be more than 80 characters.
                                 standard_error = b1$T.FVBN.Bagr.Akl.Dkl[2, 2, group_index, , 2:num_girth_classes]
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:502:54: style: Words within variable and function names should be separated by '_' rather than '.'.
                                 standard_error = b1$T.FVBN.Bagr.Akl.Dkl[2, 2, group_index, , 2:num_girth_classes]
                                                     ^~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:502:93: style: Commas should never have a space before.
                                 standard_error = b1$T.FVBN.Bagr.Akl.Dkl[2, 2, group_index, , 2:num_girth_classes]
                                                                                           ~^
NO COPY: R/regional.R:503:36: style: Trailing whitespace is superfluous.
                                 ), 
                                   ^
NO COPY: R/regional.R:504:40: style: Only use double-quotes.
                      data.frame(bwi = '2002', 
                                       ^~~~~~
NO COPY: R/regional.R:504:47: style: Trailing whitespace is superfluous.
                      data.frame(bwi = '2002', 
                                              ^
NO COPY: R/regional.R:506:1: style: lines should not be more than 80 characters.
                                 prediction = b2$T.FVBN.Bagr.Akl.Dkl[2, 1, group_index, , 2:num_girth_classes], 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:506:50: style: Words within variable and function names should be separated by '_' rather than '.'.
                                 prediction = b2$T.FVBN.Bagr.Akl.Dkl[2, 1, group_index, , 2:num_girth_classes], 
                                                 ^~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:506:89: style: Commas should never have a space before.
                                 prediction = b2$T.FVBN.Bagr.Akl.Dkl[2, 1, group_index, , 2:num_girth_classes], 
                                                                                       ~^
NO COPY: R/regional.R:506:112: style: Trailing whitespace is superfluous.
                                 prediction = b2$T.FVBN.Bagr.Akl.Dkl[2, 1, group_index, , 2:num_girth_classes], 
                                                                                                               ^
NO COPY: R/regional.R:507:1: style: lines should not be more than 80 characters.
                                 standard_error = b2$T.FVBN.Bagr.Akl.Dkl[2, 2, group_index, , 2:num_girth_classes]
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:507:54: style: Words within variable and function names should be separated by '_' rather than '.'.
                                 standard_error = b2$T.FVBN.Bagr.Akl.Dkl[2, 2, group_index, , 2:num_girth_classes]
                                                     ^~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:507:93: style: Commas should never have a space before.
                                 standard_error = b2$T.FVBN.Bagr.Akl.Dkl[2, 2, group_index, , 2:num_girth_classes]
                                                                                           ~^
NO COPY: R/regional.R:508:36: style: Trailing whitespace is superfluous.
                                 ), 
                                   ^
NO COPY: R/regional.R:509:40: style: Only use double-quotes.
                      data.frame(bwi = '2012', 
                                       ^~~~~~
NO COPY: R/regional.R:509:47: style: Trailing whitespace is superfluous.
                      data.frame(bwi = '2012', 
                                              ^
NO COPY: R/regional.R:511:1: style: lines should not be more than 80 characters.
                                 prediction = b3$T.FVBN.Bagr.Akl.Dkl[2, 1, group_index, , 2:num_girth_classes], 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:511:50: style: Words within variable and function names should be separated by '_' rather than '.'.
                                 prediction = b3$T.FVBN.Bagr.Akl.Dkl[2, 1, group_index, , 2:num_girth_classes], 
                                                 ^~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:511:89: style: Commas should never have a space before.
                                 prediction = b3$T.FVBN.Bagr.Akl.Dkl[2, 1, group_index, , 2:num_girth_classes], 
                                                                                       ~^
NO COPY: R/regional.R:511:112: style: Trailing whitespace is superfluous.
                                 prediction = b3$T.FVBN.Bagr.Akl.Dkl[2, 1, group_index, , 2:num_girth_classes], 
                                                                                                               ^
NO COPY: R/regional.R:512:1: style: lines should not be more than 80 characters.
                                 standard_error = b3$T.FVBN.Bagr.Akl.Dkl[2, 2, group_index, , 2:num_girth_classes]
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:512:54: style: Words within variable and function names should be separated by '_' rather than '.'.
                                 standard_error = b3$T.FVBN.Bagr.Akl.Dkl[2, 2, group_index, , 2:num_girth_classes]
                                                     ^~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:512:93: style: Commas should never have a space before.
                                 standard_error = b3$T.FVBN.Bagr.Akl.Dkl[2, 2, group_index, , 2:num_girth_classes]
                                                                                           ~^
NO COPY: R/regional.R:513:35: style: Trailing whitespace is superfluous.
                                 ) 
                                  ^
NO COPY: R/regional.R:515:55: style: Only use double-quotes.
    table_data <- data_frame; names(table_data)  <- c('BWI', 'Durchmesser',
                                                      ^~~~~
NO COPY: R/regional.R:515:62: style: Only use double-quotes.
    table_data <- data_frame; names(table_data)  <- c('BWI', 'Durchmesser',
                                                             ^~~~~~~~~~~~~
NO COPY: R/regional.R:516:55: style: Only use double-quotes.
                                                      'Vorhersage',
                                                      ^~~~~~~~~~~~
NO COPY: R/regional.R:517:55: style: Only use double-quotes.
                                                      'Standardfehler')
                                                      ^~~~~~~~~~~~~~~~
NO COPY: R/regional.R:518:1: style: lines should not be more than 80 characters.
    d_name <- paste0(gsub(' ', '_', gsub('/', '_', file_name_district)), "_", gsub(",", "", gsub(" ", "_", names(stratii[stratum_index]))))
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:518:27: style: Only use double-quotes.
    d_name <- paste0(gsub(' ', '_', gsub('/', '_', file_name_district)), "_", gsub(",", "", gsub(" ", "_", names(stratii[stratum_index]))))
                          ^~~
NO COPY: R/regional.R:518:32: style: Only use double-quotes.
    d_name <- paste0(gsub(' ', '_', gsub('/', '_', file_name_district)), "_", gsub(",", "", gsub(" ", "_", names(stratii[stratum_index]))))
                               ^~~
NO COPY: R/regional.R:518:42: style: Only use double-quotes.
    d_name <- paste0(gsub(' ', '_', gsub('/', '_', file_name_district)), "_", gsub(",", "", gsub(" ", "_", names(stratii[stratum_index]))))
                                         ^~~
NO COPY: R/regional.R:518:47: style: Only use double-quotes.
    d_name <- paste0(gsub(' ', '_', gsub('/', '_', file_name_district)), "_", gsub(",", "", gsub(" ", "_", names(stratii[stratum_index]))))
                                              ^~~
NO COPY: R/regional.R:518:114: warning: no visible binding for global variable 'stratii', Did you mean 'strtoi'?
    d_name <- paste0(gsub(' ', '_', gsub('/', '_', file_name_district)), "_", gsub(",", "", gsub(" ", "_", names(stratii[stratum_index]))))
                                                                                                                 ^~~~~~~
NO COPY: R/regional.R:518:122: warning: no visible binding for global variable 'stratum_index'
    d_name <- paste0(gsub(' ', '_', gsub('/', '_', file_name_district)), "_", gsub(",", "", gsub(" ", "_", names(stratii[stratum_index]))))
                                                                                                                         ^~~~~~~~~~~~~
NO COPY: R/regional.R:519:1: style: lines should not be more than 80 characters.
    type_name <- paste('Vorrat', gsub(' ', '_',gsub('/', '_', species_group)), sep = '_')
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:519:24: style: Only use double-quotes.
    type_name <- paste('Vorrat', gsub(' ', '_',gsub('/', '_', species_group)), sep = '_')
                       ^~~~~~~~
NO COPY: R/regional.R:519:39: style: Only use double-quotes.
    type_name <- paste('Vorrat', gsub(' ', '_',gsub('/', '_', species_group)), sep = '_')
                                      ^~~
NO COPY: R/regional.R:519:44: style: Only use double-quotes.
    type_name <- paste('Vorrat', gsub(' ', '_',gsub('/', '_', species_group)), sep = '_')
                                           ^~~
NO COPY: R/regional.R:519:48: style: Commas should always have a space after.
    type_name <- paste('Vorrat', gsub(' ', '_',gsub('/', '_', species_group)), sep = '_')
                                               ^
NO COPY: R/regional.R:519:53: style: Only use double-quotes.
    type_name <- paste('Vorrat', gsub(' ', '_',gsub('/', '_', species_group)), sep = '_')
                                                    ^~~
NO COPY: R/regional.R:519:58: style: Only use double-quotes.
    type_name <- paste('Vorrat', gsub(' ', '_',gsub('/', '_', species_group)), sep = '_')
                                                         ^~~
NO COPY: R/regional.R:519:86: style: Only use double-quotes.
    type_name <- paste('Vorrat', gsub(' ', '_',gsub('/', '_', species_group)), sep = '_')
                                                                                     ^~~
NO COPY: R/regional.R:520:48: style: Only use double-quotes.
    out_name <- paste(d_name, type_name, sep = '_')
                                               ^~~
NO COPY: R/regional.R:521:34: style: Only use double-quotes.
    out_file <- paste0(out_name, '.eps')
                                 ^~~~~~
NO COPY: R/regional.R:523:1: style: lines should not be more than 80 characters.
    grDevices::postscript(out_path, width = graphic_width, height = graphic_height,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:530:22: style: Trailing whitespace is superfluous.
                   ), 
                     ^
NO COPY: R/regional.R:532:1: style: lines should not be more than 80 characters.
       ggplot2::geom_bar(stat = 'identity', position = ggplot2::position_dodge()) +
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:532:33: style: Only use double-quotes.
       ggplot2::geom_bar(stat = 'identity', position = ggplot2::position_dodge()) +
                                ^~~~~~~~~~
NO COPY: R/regional.R:537:62: style: Put spaces around all infix operators.
                     position = ggplot2::position_dodge(width=0.9)
                                                            ~^~
NO COPY: R/regional.R:539:69: style: Only use double-quotes.
       ggplot2::scale_fill_manual(values = get_bwi_colors(), name = 'BWI') +
                                                                    ^~~~~
NO COPY: R/regional.R:541:22: style: Only use double-quotes.
       ggplot2::xlab('Durchmesser [cm]')+
                     ^~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:541:41: style: Put spaces around all infix operators.
       ggplot2::xlab('Durchmesser [cm]')+
                                       ~^~
NO COPY: R/regional.R:542:1: style: lines should not be more than 80 characters.
       ggplot2::ylab(expression(paste("Vorrat [", m^3 ,"]",  sep = ""))) + copyright() +
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:542:52: style: Put spaces around all infix operators.
       ggplot2::ylab(expression(paste("Vorrat [", m^3 ,"]",  sep = ""))) + copyright() +
                                                  ~^~
NO COPY: R/regional.R:542:55: style: Commas should never have a space before.
       ggplot2::ylab(expression(paste("Vorrat [", m^3 ,"]",  sep = ""))) + copyright() +
                                                     ~^
NO COPY: R/regional.R:542:56: style: Commas should always have a space after.
       ggplot2::ylab(expression(paste("Vorrat [", m^3 ,"]",  sep = ""))) + copyright() +
                                                       ^
NO COPY: R/regional.R:543:10: style: Place a space before left parenthesis, except in a function call.
       if(TITLE_PLOT){ggplot2::ggtitle(bquote(atop(.(title_district),
         ^
NO COPY: R/regional.R:543:22: style: Opening curly braces should never go on their own line and should always be followed by a new line.
       if(TITLE_PLOT){ggplot2::ggtitle(bquote(atop(.(title_district),
                     ^
NO COPY: R/regional.R:544:65: style: Closing curly-braces should always be on their own line, unless it's followed by an else.
                           atop(italic(.(species_group)), ""))))} )
                                                                ^
NO COPY: R/regional.R:549:74: style: Trailing whitespace is superfluous.
    species_group_text <- paste(vapply(strsplit(species_group, "/")[[1]], 
                                                                         ^
NO COPY: R/regional.R:551:40: style: Only use double-quotes.
                                       'character'), collapse = ", ")
                                       ^~~~~~~~~~~
NO COPY: R/regional.R:556:1: style: lines should not be more than 80 characters.
    names(table_data)  <- c('BWI', 'Durchmesser', 'Vorhersage', 'Standardfehler')
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:556:29: style: Only use double-quotes.
    names(table_data)  <- c('BWI', 'Durchmesser', 'Vorhersage', 'Standardfehler')
                            ^~~~~
NO COPY: R/regional.R:556:36: style: Only use double-quotes.
    names(table_data)  <- c('BWI', 'Durchmesser', 'Vorhersage', 'Standardfehler')
                                   ^~~~~~~~~~~~~
NO COPY: R/regional.R:556:51: style: Only use double-quotes.
    names(table_data)  <- c('BWI', 'Durchmesser', 'Vorhersage', 'Standardfehler')
                                                  ^~~~~~~~~~~~
NO COPY: R/regional.R:556:65: style: Only use double-quotes.
    names(table_data)  <- c('BWI', 'Durchmesser', 'Vorhersage', 'Standardfehler')
                                                                ^~~~~~~~~~~~~~~~
NO COPY: R/regional.R:558:7: style: Place a space before left parenthesis, except in a function call.
    if(do_errors_relative) {
      ^
NO COPY: R/regional.R:559:1: style: lines should not be more than 80 characters.
        table_data$Standardfehler <- table_data$Standardfehler / table_data$Vorhersage * 100
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:562:1: style: lines should not be more than 80 characters.
    df_cast <-  reshape2::dcast(reshape2::melt(table_data), value.var = "value", formula =
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:571:1: style: lines should not be more than 80 characters.
                                  as.numeric(alle_durchmesser[2:length(alle_durchmesser)])
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:575:45: style: Only use double-quotes.
    names(df_cast) <- gsub(".*_Vorhersage", 'Vorrat', gsub(".*_Standardfehler", 
                                            ^~~~~~~~
NO COPY: R/regional.R:575:80: style: Trailing whitespace is superfluous.
    names(df_cast) <- gsub(".*_Vorhersage", 'Vorrat', gsub(".*_Standardfehler", 
                                                                               ^
NO COPY: R/regional.R:579:76: style: Trailing whitespace is superfluous.
                                               levels(table_data$BWI), "}", 
                                                                           ^
NO COPY: R/regional.R:580:57: style: Put spaces around all infix operators.
                                               collapse =" & "), 
                                                        ^~
NO COPY: R/regional.R:580:65: style: Trailing whitespace is superfluous.
                                               collapse =" & "), 
                                                                ^
NO COPY: R/regional.R:583:67: style: Trailing whitespace is superfluous.
    print(file = dot_district_tex, floating = TRUE, append = TRUE, 
                                                                  ^
NO COPY: R/regional.R:584:48: style: Trailing whitespace is superfluous.
          size = "scriptsize", booktabs = TRUE, 
                                               ^
NO COPY: R/regional.R:586:53: style: Trailing whitespace is superfluous.
          xtable::xtable(df_cast, caption = caption, 
                                                    ^
NO COPY: R/regional.R:587:1: style: lines should not be more than 80 characters.
                 align = paste0("ll", paste(rep("|rr", (ncol(df_cast) - 1) / 2), 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:587:81: style: Trailing whitespace is superfluous.
                 align = paste0("ll", paste(rep("|rr", (ncol(df_cast) - 1) / 2), 
                                                                                ^
NO COPY: R/regional.R:589:21: style: Put spaces around all infix operators.
          add.to.row= list(pos = list(-1), command = label_row),
                   ~^
NO COPY: R/regional.R:590:27: style: Put spaces around all infix operators.
          include.rownames=FALSE)
                         ~^~
NO COPY: R/regional.R:591:1: style: lines should not be more than 80 characters.
    table_tex <- ascii_umlauts(file.path(graphic_directory,paste0("table_", out_name, ".tex")))
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:591:60: style: Commas should always have a space after.
    table_tex <- ascii_umlauts(file.path(graphic_directory,paste0("table_", out_name, ".tex")))
                                                           ^
NO COPY: R/regional.R:593:60: style: Trailing whitespace is superfluous.
    print(file = table_tex, floating = TRUE, append = TRUE, 
                                                           ^
NO COPY: R/regional.R:594:48: style: Trailing whitespace is superfluous.
          size = "scriptsize", booktabs = TRUE, 
                                               ^
NO COPY: R/regional.R:596:53: style: Trailing whitespace is superfluous.
          xtable::xtable(df_cast, caption = caption, 
                                                    ^
NO COPY: R/regional.R:597:1: style: lines should not be more than 80 characters.
                 align = paste0("ll", paste(rep("|rr", (ncol(df_cast) - 1) / 2), 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:597:81: style: Trailing whitespace is superfluous.
                 align = paste0("ll", paste(rep("|rr", (ncol(df_cast) - 1) / 2), 
                                                                                ^
NO COPY: R/regional.R:599:21: style: Put spaces around all infix operators.
          add.to.row= list(pos = list(-1), command = label_row),
                   ~^
NO COPY: R/regional.R:600:27: style: Put spaces around all infix operators.
          include.rownames=FALSE)
                         ~^~
NO COPY: R/regional.R:620:40: style: Only use double-quotes.
                      data.frame(bwi = '1987',
                                       ^~~~~~
NO COPY: R/regional.R:622:1: style: lines should not be more than 80 characters.
                                 prediction = b1$T.FVBN.Bagr.Akl.Dkl[1, 1, group_index, , ], 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:622:50: style: Words within variable and function names should be separated by '_' rather than '.'.
                                 prediction = b1$T.FVBN.Bagr.Akl.Dkl[1, 1, group_index, , ], 
                                                 ^~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:622:89: style: Commas should never have a space before.
                                 prediction = b1$T.FVBN.Bagr.Akl.Dkl[1, 1, group_index, , ], 
                                                                                       ~^
NO COPY: R/regional.R:622:93: style: Trailing whitespace is superfluous.
                                 prediction = b1$T.FVBN.Bagr.Akl.Dkl[1, 1, group_index, , ], 
                                                                                            ^
NO COPY: R/regional.R:623:1: style: lines should not be more than 80 characters.
                                 standard_error = b1$T.FVBN.Bagr.Akl.Dkl[1, 2, group_index, , ]
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:623:54: style: Words within variable and function names should be separated by '_' rather than '.'.
                                 standard_error = b1$T.FVBN.Bagr.Akl.Dkl[1, 2, group_index, , ]
                                                     ^~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:623:93: style: Commas should never have a space before.
                                 standard_error = b1$T.FVBN.Bagr.Akl.Dkl[1, 2, group_index, , ]
                                                                                           ~^
NO COPY: R/regional.R:624:36: style: Trailing whitespace is superfluous.
                                 ), 
                                   ^
NO COPY: R/regional.R:625:40: style: Only use double-quotes.
                      data.frame(bwi = '2002', 
                                       ^~~~~~
NO COPY: R/regional.R:625:47: style: Trailing whitespace is superfluous.
                      data.frame(bwi = '2002', 
                                              ^
NO COPY: R/regional.R:627:1: style: lines should not be more than 80 characters.
                                 prediction = b2$T.FVBN.Bagr.Akl.Dkl[1, 1, group_index, , ], 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:627:50: style: Words within variable and function names should be separated by '_' rather than '.'.
                                 prediction = b2$T.FVBN.Bagr.Akl.Dkl[1, 1, group_index, , ], 
                                                 ^~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:627:89: style: Commas should never have a space before.
                                 prediction = b2$T.FVBN.Bagr.Akl.Dkl[1, 1, group_index, , ], 
                                                                                       ~^
NO COPY: R/regional.R:627:93: style: Trailing whitespace is superfluous.
                                 prediction = b2$T.FVBN.Bagr.Akl.Dkl[1, 1, group_index, , ], 
                                                                                            ^
NO COPY: R/regional.R:628:1: style: lines should not be more than 80 characters.
                                 standard_error = b2$T.FVBN.Bagr.Akl.Dkl[1, 2, group_index, , ]
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:628:54: style: Words within variable and function names should be separated by '_' rather than '.'.
                                 standard_error = b2$T.FVBN.Bagr.Akl.Dkl[1, 2, group_index, , ]
                                                     ^~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:628:93: style: Commas should never have a space before.
                                 standard_error = b2$T.FVBN.Bagr.Akl.Dkl[1, 2, group_index, , ]
                                                                                           ~^
NO COPY: R/regional.R:629:36: style: Trailing whitespace is superfluous.
                                 ), 
                                   ^
NO COPY: R/regional.R:630:40: style: Only use double-quotes.
                      data.frame(bwi = '2012', 
                                       ^~~~~~
NO COPY: R/regional.R:630:47: style: Trailing whitespace is superfluous.
                      data.frame(bwi = '2012', 
                                              ^
NO COPY: R/regional.R:632:1: style: lines should not be more than 80 characters.
                                 prediction = b3$T.FVBN.Bagr.Akl.Dkl[1, 1, group_index, , ], 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:632:50: style: Words within variable and function names should be separated by '_' rather than '.'.
                                 prediction = b3$T.FVBN.Bagr.Akl.Dkl[1, 1, group_index, , ], 
                                                 ^~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:632:89: style: Commas should never have a space before.
                                 prediction = b3$T.FVBN.Bagr.Akl.Dkl[1, 1, group_index, , ], 
                                                                                       ~^
NO COPY: R/regional.R:632:93: style: Trailing whitespace is superfluous.
                                 prediction = b3$T.FVBN.Bagr.Akl.Dkl[1, 1, group_index, , ], 
                                                                                            ^
NO COPY: R/regional.R:633:1: style: lines should not be more than 80 characters.
                                 standard_error = b3$T.FVBN.Bagr.Akl.Dkl[1, 2, group_index, , ]
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:633:54: style: Words within variable and function names should be separated by '_' rather than '.'.
                                 standard_error = b3$T.FVBN.Bagr.Akl.Dkl[1, 2, group_index, , ]
                                                     ^~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:633:93: style: Commas should never have a space before.
                                 standard_error = b3$T.FVBN.Bagr.Akl.Dkl[1, 2, group_index, , ]
                                                                                           ~^
NO COPY: R/regional.R:634:35: style: Trailing whitespace is superfluous.
                                 ) 
                                  ^
NO COPY: R/regional.R:636:55: style: Only use double-quotes.
    table_data <- data_frame; names(table_data)  <- c('BWI', 'Alter',
                                                      ^~~~~
NO COPY: R/regional.R:636:62: style: Only use double-quotes.
    table_data <- data_frame; names(table_data)  <- c('BWI', 'Alter',
                                                             ^~~~~~~
NO COPY: R/regional.R:637:55: style: Only use double-quotes.
                                                      'Vorhersage',
                                                      ^~~~~~~~~~~~
NO COPY: R/regional.R:638:55: style: Only use double-quotes.
                                                      'Standardfehler')
                                                      ^~~~~~~~~~~~~~~~
NO COPY: R/regional.R:639:1: style: lines should not be more than 80 characters.
    d_name <- paste0(gsub(' ', '_', gsub('/', '_', file_name_district)), "_", gsub(",", "", gsub(" ", "_", names(stratii[stratum_index]))))
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:639:27: style: Only use double-quotes.
    d_name <- paste0(gsub(' ', '_', gsub('/', '_', file_name_district)), "_", gsub(",", "", gsub(" ", "_", names(stratii[stratum_index]))))
                          ^~~
NO COPY: R/regional.R:639:32: style: Only use double-quotes.
    d_name <- paste0(gsub(' ', '_', gsub('/', '_', file_name_district)), "_", gsub(",", "", gsub(" ", "_", names(stratii[stratum_index]))))
                               ^~~
NO COPY: R/regional.R:639:42: style: Only use double-quotes.
    d_name <- paste0(gsub(' ', '_', gsub('/', '_', file_name_district)), "_", gsub(",", "", gsub(" ", "_", names(stratii[stratum_index]))))
                                         ^~~
NO COPY: R/regional.R:639:47: style: Only use double-quotes.
    d_name <- paste0(gsub(' ', '_', gsub('/', '_', file_name_district)), "_", gsub(",", "", gsub(" ", "_", names(stratii[stratum_index]))))
                                              ^~~
NO COPY: R/regional.R:639:114: warning: no visible binding for global variable 'stratii', Did you mean 'strtoi'?
    d_name <- paste0(gsub(' ', '_', gsub('/', '_', file_name_district)), "_", gsub(",", "", gsub(" ", "_", names(stratii[stratum_index]))))
                                                                                                                 ^~~~~~~
NO COPY: R/regional.R:639:122: warning: no visible binding for global variable 'stratum_index'
    d_name <- paste0(gsub(' ', '_', gsub('/', '_', file_name_district)), "_", gsub(",", "", gsub(" ", "_", names(stratii[stratum_index]))))
                                                                                                                         ^~~~~~~~~~~~~
NO COPY: R/regional.R:640:1: style: lines should not be more than 80 characters.
    type_name <- paste('Fl\u00e4che', gsub(' ', '_', gsub('/', '_', species_group)), sep = '_')
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:640:24: style: Only use double-quotes.
    type_name <- paste('Fl\u00e4che', gsub(' ', '_', gsub('/', '_', species_group)), sep = '_')
                       ^~~~~~~~~~~~~
NO COPY: R/regional.R:640:44: style: Only use double-quotes.
    type_name <- paste('Fl\u00e4che', gsub(' ', '_', gsub('/', '_', species_group)), sep = '_')
                                           ^~~
NO COPY: R/regional.R:640:49: style: Only use double-quotes.
    type_name <- paste('Fl\u00e4che', gsub(' ', '_', gsub('/', '_', species_group)), sep = '_')
                                                ^~~
NO COPY: R/regional.R:640:59: style: Only use double-quotes.
    type_name <- paste('Fl\u00e4che', gsub(' ', '_', gsub('/', '_', species_group)), sep = '_')
                                                          ^~~
NO COPY: R/regional.R:640:64: style: Only use double-quotes.
    type_name <- paste('Fl\u00e4che', gsub(' ', '_', gsub('/', '_', species_group)), sep = '_')
                                                               ^~~
NO COPY: R/regional.R:640:92: style: Only use double-quotes.
    type_name <- paste('Fl\u00e4che', gsub(' ', '_', gsub('/', '_', species_group)), sep = '_')
                                                                                           ^~~
NO COPY: R/regional.R:641:48: style: Only use double-quotes.
    out_name <- paste(d_name, type_name, sep = '_')
                                               ^~~
NO COPY: R/regional.R:642:34: style: Only use double-quotes.
    out_file <- paste0(out_name, '.eps')
                                 ^~~~~~
NO COPY: R/regional.R:644:1: style: lines should not be more than 80 characters.
    grDevices::postscript(out_path, width = graphic_width, height = graphic_height,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:651:22: style: Trailing whitespace is superfluous.
                   ), 
                     ^
NO COPY: R/regional.R:653:1: style: lines should not be more than 80 characters.
       ggplot2::geom_bar(stat = 'identity', position = ggplot2::position_dodge()) +
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:653:33: style: Only use double-quotes.
       ggplot2::geom_bar(stat = 'identity', position = ggplot2::position_dodge()) +
                                ^~~~~~~~~~
NO COPY: R/regional.R:658:62: style: Put spaces around all infix operators.
                     position = ggplot2::position_dodge(width=0.9)
                                                            ~^~
NO COPY: R/regional.R:660:69: style: Only use double-quotes.
       ggplot2::scale_fill_manual(values = get_bwi_colors(), name = 'BWI') +
                                                                    ^~~~~
NO COPY: R/regional.R:662:22: style: Only use double-quotes.
       ggplot2::xlab('Alter [a]')+
                     ^~~~~~~~~~~
NO COPY: R/regional.R:662:34: style: Put spaces around all infix operators.
       ggplot2::xlab('Alter [a]')+
                                ~^~
NO COPY: R/regional.R:663:22: style: Only use double-quotes.
       ggplot2::ylab('Fl\u00e4che [ha]') + copyright() + 
                     ^~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:663:57: style: Trailing whitespace is superfluous.
       ggplot2::ylab('Fl\u00e4che [ha]') + copyright() + 
                                                        ^
NO COPY: R/regional.R:664:10: style: Place a space before left parenthesis, except in a function call.
       if(TITLE_PLOT){ggplot2::ggtitle(bquote(atop(.(title_district),
         ^
NO COPY: R/regional.R:664:22: style: Opening curly braces should never go on their own line and should always be followed by a new line.
       if(TITLE_PLOT){ggplot2::ggtitle(bquote(atop(.(title_district),
                     ^
NO COPY: R/regional.R:665:65: style: Closing curly-braces should always be on their own line, unless it's followed by an else.
                           atop(italic(.(species_group)), ""))))})
                                                                ^
NO COPY: R/regional.R:670:74: style: Trailing whitespace is superfluous.
    species_group_text <- paste(vapply(strsplit(species_group, "/")[[1]], 
                                                                         ^
NO COPY: R/regional.R:672:40: style: Only use double-quotes.
                                       'character'), collapse = ", ")
                                       ^~~~~~~~~~~
NO COPY: R/regional.R:677:29: style: Only use double-quotes.
    names(table_data)  <- c('BWI', 'Alter', 'Vorhersage', 'Standardfehler')
                            ^~~~~
NO COPY: R/regional.R:677:36: style: Only use double-quotes.
    names(table_data)  <- c('BWI', 'Alter', 'Vorhersage', 'Standardfehler')
                                   ^~~~~~~
NO COPY: R/regional.R:677:45: style: Only use double-quotes.
    names(table_data)  <- c('BWI', 'Alter', 'Vorhersage', 'Standardfehler')
                                            ^~~~~~~~~~~~
NO COPY: R/regional.R:677:59: style: Only use double-quotes.
    names(table_data)  <- c('BWI', 'Alter', 'Vorhersage', 'Standardfehler')
                                                          ^~~~~~~~~~~~~~~~
NO COPY: R/regional.R:679:7: style: Place a space before left parenthesis, except in a function call.
    if(do_errors_relative) {
      ^
NO COPY: R/regional.R:680:1: style: lines should not be more than 80 characters.
        table_data$Standardfehler <- table_data$Standardfehler / table_data$Vorhersage * 100
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:683:1: style: lines should not be more than 80 characters.
    df_cast <-  reshape2::dcast(reshape2::melt(table_data), value.var = "value", formula =
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:696:1: style: lines should not be more than 80 characters.
    names(df_cast) <- gsub(".*_Vorhersage", 'Fl\u00e4che', gsub(".*_Standardfehler", 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:696:45: style: Only use double-quotes.
    names(df_cast) <- gsub(".*_Vorhersage", 'Fl\u00e4che', gsub(".*_Standardfehler", 
                                            ^~~~~~~~~~~~~
NO COPY: R/regional.R:696:85: style: Trailing whitespace is superfluous.
    names(df_cast) <- gsub(".*_Vorhersage", 'Fl\u00e4che', gsub(".*_Standardfehler", 
                                                                                    ^
NO COPY: R/regional.R:700:76: style: Trailing whitespace is superfluous.
                                               levels(table_data$BWI), "}", 
                                                                           ^
NO COPY: R/regional.R:701:57: style: Put spaces around all infix operators.
                                               collapse =" & "), 
                                                        ^~
NO COPY: R/regional.R:701:65: style: Trailing whitespace is superfluous.
                                               collapse =" & "), 
                                                                ^
NO COPY: R/regional.R:704:1: style: lines should not be more than 80 characters.
    table_tex <- ascii_umlauts(file.path(graphic_directory,paste0("table_", out_name, ".tex")))
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:704:60: style: Commas should always have a space after.
    table_tex <- ascii_umlauts(file.path(graphic_directory,paste0("table_", out_name, ".tex")))
                                                           ^
NO COPY: R/regional.R:706:60: style: Trailing whitespace is superfluous.
    print(file = table_tex, floating = TRUE, append = TRUE, 
                                                           ^
NO COPY: R/regional.R:707:48: style: Trailing whitespace is superfluous.
          size = "scriptsize", booktabs = TRUE, 
                                               ^
NO COPY: R/regional.R:709:53: style: Trailing whitespace is superfluous.
          xtable::xtable(df_cast, caption = caption, 
                                                    ^
NO COPY: R/regional.R:710:1: style: lines should not be more than 80 characters.
                 align = paste0("ll", paste(rep("|rr", (ncol(df_cast) - 1) / 2), 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:710:81: style: Trailing whitespace is superfluous.
                 align = paste0("ll", paste(rep("|rr", (ncol(df_cast) - 1) / 2), 
                                                                                ^
NO COPY: R/regional.R:712:21: style: Put spaces around all infix operators.
          add.to.row= list(pos = list(-1), command = label_row),
                   ~^
NO COPY: R/regional.R:713:27: style: Put spaces around all infix operators.
          include.rownames=FALSE)
                         ~^~
NO COPY: R/regional.R:716:67: style: Trailing whitespace is superfluous.
    print(file = dot_district_tex, floating = TRUE, append = TRUE, 
                                                                  ^
NO COPY: R/regional.R:717:48: style: Trailing whitespace is superfluous.
          size = "scriptsize", booktabs = TRUE, 
                                               ^
NO COPY: R/regional.R:719:53: style: Trailing whitespace is superfluous.
          xtable::xtable(df_cast, caption = caption, 
                                                    ^
NO COPY: R/regional.R:720:1: style: lines should not be more than 80 characters.
                 align = paste0("ll", paste(rep("|rr", (ncol(df_cast) - 1) / 2), 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:720:81: style: Trailing whitespace is superfluous.
                 align = paste0("ll", paste(rep("|rr", (ncol(df_cast) - 1) / 2), 
                                                                                ^
NO COPY: R/regional.R:722:21: style: Put spaces around all infix operators.
          add.to.row= list(pos = list(-1), command = label_row),
                   ~^
NO COPY: R/regional.R:723:27: style: Put spaces around all infix operators.
          include.rownames=FALSE)
                         ~^~
NO COPY: R/regional.R:726:64: style: Trailing whitespace is superfluous.
plot_deadwood <- function(deadwood_2, deadwood_3_2, deadwood_3, 
                                                               ^
NO COPY: R/regional.R:727:67: style: Trailing whitespace is superfluous.
                          deadwood_2a, deadwood_3_2a, deadwood_3a, 
                                                                  ^
NO COPY: R/regional.R:734:1: style: lines should not be more than 80 characters.
    deadwood_class <- c("Liegend", "Stehend (Baum)", "Stehend (Bruchst\u00fcck)",
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:738:42: style: Only use double-quotes.
                        data.frame(bwi = '2002',
                                         ^~~~~~
NO COPY: R/regional.R:740:1: style: lines should not be more than 80 characters.
                                   prediction = c(deadwood_2$ThVN.ha.klass[1,1,], deadwood_2a$ThVN.ha.klass[1,1,]),
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:740:62: style: Variable and function names should be all lowercase.
                                   prediction = c(deadwood_2$ThVN.ha.klass[1,1,], deadwood_2a$ThVN.ha.klass[1,1,]),
                                                             ^~~~~~~~~~~~~
NO COPY: R/regional.R:740:62: style: Words within variable and function names should be separated by '_' rather than '.'.
                                   prediction = c(deadwood_2$ThVN.ha.klass[1,1,], deadwood_2a$ThVN.ha.klass[1,1,]),
                                                             ^~~~~~~~~~~~~
NO COPY: R/regional.R:740:78: style: Commas should always have a space after.
                                   prediction = c(deadwood_2$ThVN.ha.klass[1,1,], deadwood_2a$ThVN.ha.klass[1,1,]),
                                                                             ^
NO COPY: R/regional.R:740:80: style: Commas should always have a space after.
                                   prediction = c(deadwood_2$ThVN.ha.klass[1,1,], deadwood_2a$ThVN.ha.klass[1,1,]),
                                                                               ^
NO COPY: R/regional.R:740:95: style: Variable and function names should be all lowercase.
                                   prediction = c(deadwood_2$ThVN.ha.klass[1,1,], deadwood_2a$ThVN.ha.klass[1,1,]),
                                                                                              ^~~~~~~~~~~~~
NO COPY: R/regional.R:740:95: style: Words within variable and function names should be separated by '_' rather than '.'.
                                   prediction = c(deadwood_2$ThVN.ha.klass[1,1,], deadwood_2a$ThVN.ha.klass[1,1,]),
                                                                                              ^~~~~~~~~~~~~
NO COPY: R/regional.R:740:111: style: Commas should always have a space after.
                                   prediction = c(deadwood_2$ThVN.ha.klass[1,1,], deadwood_2a$ThVN.ha.klass[1,1,]),
                                                                                                              ^
NO COPY: R/regional.R:740:113: style: Commas should always have a space after.
                                   prediction = c(deadwood_2$ThVN.ha.klass[1,1,], deadwood_2a$ThVN.ha.klass[1,1,]),
                                                                                                                ^
NO COPY: R/regional.R:741:52: style: Trailing whitespace is superfluous.
                                   standard_error = 
                                                   ^
NO COPY: R/regional.R:742:1: style: lines should not be more than 80 characters.
                                   c(deadwood_2$ThVN.ha.klass[1,2,], deadwood_2a$ThVN.ha.klass[1,2,])
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:742:49: style: Variable and function names should be all lowercase.
                                   c(deadwood_2$ThVN.ha.klass[1,2,], deadwood_2a$ThVN.ha.klass[1,2,])
                                                ^~~~~~~~~~~~~
NO COPY: R/regional.R:742:49: style: Words within variable and function names should be separated by '_' rather than '.'.
                                   c(deadwood_2$ThVN.ha.klass[1,2,], deadwood_2a$ThVN.ha.klass[1,2,])
                                                ^~~~~~~~~~~~~
NO COPY: R/regional.R:742:65: style: Commas should always have a space after.
                                   c(deadwood_2$ThVN.ha.klass[1,2,], deadwood_2a$ThVN.ha.klass[1,2,])
                                                                ^
NO COPY: R/regional.R:742:67: style: Commas should always have a space after.
                                   c(deadwood_2$ThVN.ha.klass[1,2,], deadwood_2a$ThVN.ha.klass[1,2,])
                                                                  ^
NO COPY: R/regional.R:742:82: style: Variable and function names should be all lowercase.
                                   c(deadwood_2$ThVN.ha.klass[1,2,], deadwood_2a$ThVN.ha.klass[1,2,])
                                                                                 ^~~~~~~~~~~~~
NO COPY: R/regional.R:742:82: style: Words within variable and function names should be separated by '_' rather than '.'.
                                   c(deadwood_2$ThVN.ha.klass[1,2,], deadwood_2a$ThVN.ha.klass[1,2,])
                                                                                 ^~~~~~~~~~~~~
NO COPY: R/regional.R:742:98: style: Commas should always have a space after.
                                   c(deadwood_2$ThVN.ha.klass[1,2,], deadwood_2a$ThVN.ha.klass[1,2,])
                                                                                                 ^
NO COPY: R/regional.R:742:100: style: Commas should always have a space after.
                                   c(deadwood_2$ThVN.ha.klass[1,2,], deadwood_2a$ThVN.ha.klass[1,2,])
                                                                                                   ^
NO COPY: R/regional.R:744:42: style: Only use double-quotes.
                        data.frame(bwi = '2012*',
                                         ^~~~~~~
NO COPY: R/regional.R:747:1: style: lines should not be more than 80 characters.
                                   c(deadwood_3_2$ThVN.ha.klass[1,1,],deadwood_3_2a$ThVN.ha.klass[1,1,]),
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:747:51: style: Variable and function names should be all lowercase.
                                   c(deadwood_3_2$ThVN.ha.klass[1,1,],deadwood_3_2a$ThVN.ha.klass[1,1,]),
                                                  ^~~~~~~~~~~~~
NO COPY: R/regional.R:747:51: style: Words within variable and function names should be separated by '_' rather than '.'.
                                   c(deadwood_3_2$ThVN.ha.klass[1,1,],deadwood_3_2a$ThVN.ha.klass[1,1,]),
                                                  ^~~~~~~~~~~~~
NO COPY: R/regional.R:747:67: style: Commas should always have a space after.
                                   c(deadwood_3_2$ThVN.ha.klass[1,1,],deadwood_3_2a$ThVN.ha.klass[1,1,]),
                                                                  ^
NO COPY: R/regional.R:747:69: style: Commas should always have a space after.
                                   c(deadwood_3_2$ThVN.ha.klass[1,1,],deadwood_3_2a$ThVN.ha.klass[1,1,]),
                                                                    ^
NO COPY: R/regional.R:747:71: style: Commas should always have a space after.
                                   c(deadwood_3_2$ThVN.ha.klass[1,1,],deadwood_3_2a$ThVN.ha.klass[1,1,]),
                                                                      ^
NO COPY: R/regional.R:747:85: style: Variable and function names should be all lowercase.
                                   c(deadwood_3_2$ThVN.ha.klass[1,1,],deadwood_3_2a$ThVN.ha.klass[1,1,]),
                                                                                    ^~~~~~~~~~~~~
NO COPY: R/regional.R:747:85: style: Words within variable and function names should be separated by '_' rather than '.'.
                                   c(deadwood_3_2$ThVN.ha.klass[1,1,],deadwood_3_2a$ThVN.ha.klass[1,1,]),
                                                                                    ^~~~~~~~~~~~~
NO COPY: R/regional.R:747:101: style: Commas should always have a space after.
                                   c(deadwood_3_2$ThVN.ha.klass[1,1,],deadwood_3_2a$ThVN.ha.klass[1,1,]),
                                                                                                    ^
NO COPY: R/regional.R:747:103: style: Commas should always have a space after.
                                   c(deadwood_3_2$ThVN.ha.klass[1,1,],deadwood_3_2a$ThVN.ha.klass[1,1,]),
                                                                                                      ^
NO COPY: R/regional.R:748:52: style: Trailing whitespace is superfluous.
                                   standard_error = 
                                                   ^
NO COPY: R/regional.R:749:1: style: lines should not be more than 80 characters.
                                   c(deadwood_3_2$ThVN.ha.klass[1,2,],deadwood_3_2a$ThVN.ha.klass[1,2,])
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:749:51: style: Variable and function names should be all lowercase.
                                   c(deadwood_3_2$ThVN.ha.klass[1,2,],deadwood_3_2a$ThVN.ha.klass[1,2,])
                                                  ^~~~~~~~~~~~~
NO COPY: R/regional.R:749:51: style: Words within variable and function names should be separated by '_' rather than '.'.
                                   c(deadwood_3_2$ThVN.ha.klass[1,2,],deadwood_3_2a$ThVN.ha.klass[1,2,])
                                                  ^~~~~~~~~~~~~
NO COPY: R/regional.R:749:67: style: Commas should always have a space after.
                                   c(deadwood_3_2$ThVN.ha.klass[1,2,],deadwood_3_2a$ThVN.ha.klass[1,2,])
                                                                  ^
NO COPY: R/regional.R:749:69: style: Commas should always have a space after.
                                   c(deadwood_3_2$ThVN.ha.klass[1,2,],deadwood_3_2a$ThVN.ha.klass[1,2,])
                                                                    ^
NO COPY: R/regional.R:749:71: style: Commas should always have a space after.
                                   c(deadwood_3_2$ThVN.ha.klass[1,2,],deadwood_3_2a$ThVN.ha.klass[1,2,])
                                                                      ^
NO COPY: R/regional.R:749:85: style: Variable and function names should be all lowercase.
                                   c(deadwood_3_2$ThVN.ha.klass[1,2,],deadwood_3_2a$ThVN.ha.klass[1,2,])
                                                                                    ^~~~~~~~~~~~~
NO COPY: R/regional.R:749:85: style: Words within variable and function names should be separated by '_' rather than '.'.
                                   c(deadwood_3_2$ThVN.ha.klass[1,2,],deadwood_3_2a$ThVN.ha.klass[1,2,])
                                                                                    ^~~~~~~~~~~~~
NO COPY: R/regional.R:749:101: style: Commas should always have a space after.
                                   c(deadwood_3_2$ThVN.ha.klass[1,2,],deadwood_3_2a$ThVN.ha.klass[1,2,])
                                                                                                    ^
NO COPY: R/regional.R:749:103: style: Commas should always have a space after.
                                   c(deadwood_3_2$ThVN.ha.klass[1,2,],deadwood_3_2a$ThVN.ha.klass[1,2,])
                                                                                                      ^
NO COPY: R/regional.R:751:42: style: Only use double-quotes.
                        data.frame(bwi = '2012',
                                         ^~~~~~
NO COPY: R/regional.R:754:1: style: lines should not be more than 80 characters.
                                   c(deadwood_3$ThVN.ha.klass[1,1,],deadwood_3a$ThVN.ha.klass[1,1,]),
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:754:49: style: Variable and function names should be all lowercase.
                                   c(deadwood_3$ThVN.ha.klass[1,1,],deadwood_3a$ThVN.ha.klass[1,1,]),
                                                ^~~~~~~~~~~~~
NO COPY: R/regional.R:754:49: style: Words within variable and function names should be separated by '_' rather than '.'.
                                   c(deadwood_3$ThVN.ha.klass[1,1,],deadwood_3a$ThVN.ha.klass[1,1,]),
                                                ^~~~~~~~~~~~~
NO COPY: R/regional.R:754:65: style: Commas should always have a space after.
                                   c(deadwood_3$ThVN.ha.klass[1,1,],deadwood_3a$ThVN.ha.klass[1,1,]),
                                                                ^
NO COPY: R/regional.R:754:67: style: Commas should always have a space after.
                                   c(deadwood_3$ThVN.ha.klass[1,1,],deadwood_3a$ThVN.ha.klass[1,1,]),
                                                                  ^
NO COPY: R/regional.R:754:69: style: Commas should always have a space after.
                                   c(deadwood_3$ThVN.ha.klass[1,1,],deadwood_3a$ThVN.ha.klass[1,1,]),
                                                                    ^
NO COPY: R/regional.R:754:81: style: Variable and function names should be all lowercase.
                                   c(deadwood_3$ThVN.ha.klass[1,1,],deadwood_3a$ThVN.ha.klass[1,1,]),
                                                                                ^~~~~~~~~~~~~
NO COPY: R/regional.R:754:81: style: Words within variable and function names should be separated by '_' rather than '.'.
                                   c(deadwood_3$ThVN.ha.klass[1,1,],deadwood_3a$ThVN.ha.klass[1,1,]),
                                                                                ^~~~~~~~~~~~~
NO COPY: R/regional.R:754:97: style: Commas should always have a space after.
                                   c(deadwood_3$ThVN.ha.klass[1,1,],deadwood_3a$ThVN.ha.klass[1,1,]),
                                                                                                ^
NO COPY: R/regional.R:754:99: style: Commas should always have a space after.
                                   c(deadwood_3$ThVN.ha.klass[1,1,],deadwood_3a$ThVN.ha.klass[1,1,]),
                                                                                                  ^
NO COPY: R/regional.R:755:52: style: Trailing whitespace is superfluous.
                                   standard_error = 
                                                   ^
NO COPY: R/regional.R:756:1: style: lines should not be more than 80 characters.
                                   c(deadwood_3$ThVN.ha.klass[1,2,],deadwood_3a$ThVN.ha.klass[1,2,])
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:756:49: style: Variable and function names should be all lowercase.
                                   c(deadwood_3$ThVN.ha.klass[1,2,],deadwood_3a$ThVN.ha.klass[1,2,])
                                                ^~~~~~~~~~~~~
NO COPY: R/regional.R:756:49: style: Words within variable and function names should be separated by '_' rather than '.'.
                                   c(deadwood_3$ThVN.ha.klass[1,2,],deadwood_3a$ThVN.ha.klass[1,2,])
                                                ^~~~~~~~~~~~~
NO COPY: R/regional.R:756:65: style: Commas should always have a space after.
                                   c(deadwood_3$ThVN.ha.klass[1,2,],deadwood_3a$ThVN.ha.klass[1,2,])
                                                                ^
NO COPY: R/regional.R:756:67: style: Commas should always have a space after.
                                   c(deadwood_3$ThVN.ha.klass[1,2,],deadwood_3a$ThVN.ha.klass[1,2,])
                                                                  ^
NO COPY: R/regional.R:756:69: style: Commas should always have a space after.
                                   c(deadwood_3$ThVN.ha.klass[1,2,],deadwood_3a$ThVN.ha.klass[1,2,])
                                                                    ^
NO COPY: R/regional.R:756:81: style: Variable and function names should be all lowercase.
                                   c(deadwood_3$ThVN.ha.klass[1,2,],deadwood_3a$ThVN.ha.klass[1,2,])
                                                                                ^~~~~~~~~~~~~
NO COPY: R/regional.R:756:81: style: Words within variable and function names should be separated by '_' rather than '.'.
                                   c(deadwood_3$ThVN.ha.klass[1,2,],deadwood_3a$ThVN.ha.klass[1,2,])
                                                                                ^~~~~~~~~~~~~
NO COPY: R/regional.R:756:97: style: Commas should always have a space after.
                                   c(deadwood_3$ThVN.ha.klass[1,2,],deadwood_3a$ThVN.ha.klass[1,2,])
                                                                                                ^
NO COPY: R/regional.R:756:99: style: Commas should always have a space after.
                                   c(deadwood_3$ThVN.ha.klass[1,2,],deadwood_3a$ThVN.ha.klass[1,2,])
                                                                                                  ^
NO COPY: R/regional.R:759:55: style: Only use double-quotes.
    table_data <- data_frame; names(table_data)  <- c('BWI', 'Totholzart',
                                                      ^~~~~
NO COPY: R/regional.R:759:62: style: Only use double-quotes.
    table_data <- data_frame; names(table_data)  <- c('BWI', 'Totholzart',
                                                             ^~~~~~~~~~~~
NO COPY: R/regional.R:760:55: style: Only use double-quotes.
                                                      'Vorhersage',
                                                      ^~~~~~~~~~~~
NO COPY: R/regional.R:761:55: style: Only use double-quotes.
                                                      'Standardfehler')
                                                      ^~~~~~~~~~~~~~~~
NO COPY: R/regional.R:763:1: style: lines should not be more than 80 characters.
    d_name <- paste0(gsub(' ', '_', gsub('/', '_', file_name_district)), "_", gsub(",", "", gsub(" ", "_", names(stratii[stratum_index]))))
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:763:27: style: Only use double-quotes.
    d_name <- paste0(gsub(' ', '_', gsub('/', '_', file_name_district)), "_", gsub(",", "", gsub(" ", "_", names(stratii[stratum_index]))))
                          ^~~
NO COPY: R/regional.R:763:32: style: Only use double-quotes.
    d_name <- paste0(gsub(' ', '_', gsub('/', '_', file_name_district)), "_", gsub(",", "", gsub(" ", "_", names(stratii[stratum_index]))))
                               ^~~
NO COPY: R/regional.R:763:42: style: Only use double-quotes.
    d_name <- paste0(gsub(' ', '_', gsub('/', '_', file_name_district)), "_", gsub(",", "", gsub(" ", "_", names(stratii[stratum_index]))))
                                         ^~~
NO COPY: R/regional.R:763:47: style: Only use double-quotes.
    d_name <- paste0(gsub(' ', '_', gsub('/', '_', file_name_district)), "_", gsub(",", "", gsub(" ", "_", names(stratii[stratum_index]))))
                                              ^~~
NO COPY: R/regional.R:763:114: warning: no visible binding for global variable 'stratii', Did you mean 'strtoi'?
    d_name <- paste0(gsub(' ', '_', gsub('/', '_', file_name_district)), "_", gsub(",", "", gsub(" ", "_", names(stratii[stratum_index]))))
                                                                                                                 ^~~~~~~
NO COPY: R/regional.R:763:122: warning: no visible binding for global variable 'stratum_index'
    d_name <- paste0(gsub(' ', '_', gsub('/', '_', file_name_district)), "_", gsub(",", "", gsub(" ", "_", names(stratii[stratum_index]))))
                                                                                                                         ^~~~~~~~~~~~~
NO COPY: R/regional.R:764:18: style: Only use double-quotes.
    type_name <- 'Totholz'
                 ^~~~~~~~~
NO COPY: R/regional.R:765:48: style: Only use double-quotes.
    out_name <- paste(d_name, type_name, sep = '_')
                                               ^~~
NO COPY: R/regional.R:766:34: style: Only use double-quotes.
    out_file <- paste0(out_name, '.eps')
                                 ^~~~~~
NO COPY: R/regional.R:768:1: style: lines should not be more than 80 characters.
    grDevices::postscript(out_path, width = graphic_width, height = graphic_height,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:775:23: style: Trailing whitespace is superfluous.
                    ), 
                      ^
NO COPY: R/regional.R:777:1: style: lines should not be more than 80 characters.
         ggplot2::geom_bar(stat = 'identity', position = ggplot2::position_dodge()) +
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:777:35: style: Only use double-quotes.
         ggplot2::geom_bar(stat = 'identity', position = ggplot2::position_dodge()) +
                                  ^~~~~~~~~~
NO COPY: R/regional.R:782:64: style: Put spaces around all infix operators.
                       position = ggplot2::position_dodge(width=0.9)
                                                              ~^~
NO COPY: R/regional.R:784:71: style: Only use double-quotes.
         ggplot2::scale_fill_manual(values = get_bwi_colors(), name = 'BWI') +
                                                                      ^~~~~
NO COPY: R/regional.R:786:24: style: Only use double-quotes.
         ggplot2::xlab('') +
                       ^~
NO COPY: R/regional.R:787:54: style: Put spaces around all infix operators.
         ggplot2::ylab(expression(paste("Vorrat [", m^3,
                                                    ~^~
NO COPY: R/regional.R:788:34: style: Put spaces around all infix operators.
                               ha^-1, "]",  
                                ~^~
NO COPY: R/regional.R:788:43: style: Trailing whitespace is superfluous.
                               ha^-1, "]",  
                                          ^~
NO COPY: R/regional.R:790:1: style: lines should not be more than 80 characters.
         )  + copyright() + ggplot2::ggtitle("2012*: Berechnung nach Kriterien von 2002")
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:796:1: style: lines should not be more than 80 characters.
    to_tex("\n\\begin{center}\\includegraphics[width=", 1,"\\textwidth]{", out_path,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:796:59: style: Commas should always have a space after.
    to_tex("\n\\begin{center}\\includegraphics[width=", 1,"\\textwidth]{", out_path,
                                                          ^
NO COPY: R/regional.R:799:1: style: lines should not be more than 80 characters.
    df_cast <-  reshape2::dcast(reshape2::melt(table_data), value.var = "value", formula = Totholzart ~ ...)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:801:80: style: Trailing whitespace is superfluous.
    names(df_cast) <- gsub(".*_Vorhersage", "Vorrat", gsub(".*_Standardfehler", 
                                                                               ^
NO COPY: R/regional.R:805:76: style: Trailing whitespace is superfluous.
                                               levels(table_data$BWI), "}", 
                                                                           ^
NO COPY: R/regional.R:806:57: style: Put spaces around all infix operators.
                                               collapse =" & "), 
                                                        ^~
NO COPY: R/regional.R:806:65: style: Trailing whitespace is superfluous.
                                               collapse =" & "), 
                                                                ^
NO COPY: R/regional.R:809:1: style: lines should not be more than 80 characters.
    caption  <-  c('Totholz: Vorr\\"ate und Fehler in Kubikmetern Derbholz mit Rinde je Hektar,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:810:1: style: lines should not be more than 80 characters.
                   2012*:  Berechnung des Totholzes 2012 nach Aufnahmekriterien von 2002.')
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:811:1: style: lines should not be more than 80 characters.
    table_tex <- ascii_umlauts(file.path(graphic_directory,paste0("table_", out_name, ".tex")))
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:811:60: style: Commas should always have a space after.
    table_tex <- ascii_umlauts(file.path(graphic_directory,paste0("table_", out_name, ".tex")))
                                                           ^
NO COPY: R/regional.R:813:60: style: Trailing whitespace is superfluous.
    print(file = table_tex, floating = TRUE, append = TRUE, 
                                                           ^
NO COPY: R/regional.R:814:48: style: Trailing whitespace is superfluous.
          size = "scriptsize", booktabs = TRUE, 
                                               ^
NO COPY: R/regional.R:816:53: style: Trailing whitespace is superfluous.
          xtable::xtable(df_cast, caption = caption, 
                                                    ^
NO COPY: R/regional.R:817:1: style: lines should not be more than 80 characters.
                 align = paste0("ll", paste(rep("|rr", (ncol(df_cast) - 1) / 2), 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:817:81: style: Trailing whitespace is superfluous.
                 align = paste0("ll", paste(rep("|rr", (ncol(df_cast) - 1) / 2), 
                                                                                ^
NO COPY: R/regional.R:823:27: style: Put spaces around all infix operators.
          include.rownames=FALSE)
                         ~^~
NO COPY: R/regional.R:826:67: style: Trailing whitespace is superfluous.
    print(file = dot_district_tex, floating = TRUE, append = TRUE, 
                                                                  ^
NO COPY: R/regional.R:827:48: style: Trailing whitespace is superfluous.
          size = "scriptsize", booktabs = TRUE, 
                                               ^
NO COPY: R/regional.R:829:53: style: Trailing whitespace is superfluous.
          xtable::xtable(df_cast, caption = caption, 
                                                    ^
NO COPY: R/regional.R:830:1: style: lines should not be more than 80 characters.
                 align = paste0("ll", paste(rep("|rr", (ncol(df_cast) - 1) / 2), 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:830:81: style: Trailing whitespace is superfluous.
                 align = paste0("ll", paste(rep("|rr", (ncol(df_cast) - 1) / 2), 
                                                                                ^
NO COPY: R/regional.R:836:27: style: Put spaces around all infix operators.
          include.rownames=FALSE)
                         ~^~
NO COPY: R/regional.R:848:65: style: Trailing whitespace is superfluous.
    species_label <- factor(c(species_groups_labels, "Alle BA"), 
                                                                ^
NO COPY: R/regional.R:853:48: style: Only use double-quotes.
                                       group = 'Zuwachs',
                                               ^~~~~~~~~
NO COPY: R/regional.R:856:1: style: lines should not be more than 80 characters.
                                       prediction = c(g_l_12$iVB.bagr.akl.dkl[9,1,,,], g_l_12_all$iVB.bagr.akl.dkl[9,1,,,]),
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:856:62: style: Variable and function names should be all lowercase.
                                       prediction = c(g_l_12$iVB.bagr.akl.dkl[9,1,,,], g_l_12_all$iVB.bagr.akl.dkl[9,1,,,]),
                                                             ^~~~~~~~~~~~~~~~
NO COPY: R/regional.R:856:62: style: Words within variable and function names should be separated by '_' rather than '.'.
                                       prediction = c(g_l_12$iVB.bagr.akl.dkl[9,1,,,], g_l_12_all$iVB.bagr.akl.dkl[9,1,,,]),
                                                             ^~~~~~~~~~~~~~~~
NO COPY: R/regional.R:856:81: style: Commas should always have a space after.
                                       prediction = c(g_l_12$iVB.bagr.akl.dkl[9,1,,,], g_l_12_all$iVB.bagr.akl.dkl[9,1,,,]),
                                                                                ^
NO COPY: R/regional.R:856:83: style: Commas should always have a space after.
                                       prediction = c(g_l_12$iVB.bagr.akl.dkl[9,1,,,], g_l_12_all$iVB.bagr.akl.dkl[9,1,,,]),
                                                                                  ^
NO COPY: R/regional.R:856:85: style: Commas should always have a space after.
                                       prediction = c(g_l_12$iVB.bagr.akl.dkl[9,1,,,], g_l_12_all$iVB.bagr.akl.dkl[9,1,,,]),
                                                                                    ^
NO COPY: R/regional.R:856:99: style: Variable and function names should be all lowercase.
                                       prediction = c(g_l_12$iVB.bagr.akl.dkl[9,1,,,], g_l_12_all$iVB.bagr.akl.dkl[9,1,,,]),
                                                                                                  ^~~~~~~~~~~~~~~~
NO COPY: R/regional.R:856:99: style: Words within variable and function names should be separated by '_' rather than '.'.
                                       prediction = c(g_l_12$iVB.bagr.akl.dkl[9,1,,,], g_l_12_all$iVB.bagr.akl.dkl[9,1,,,]),
                                                                                                  ^~~~~~~~~~~~~~~~
NO COPY: R/regional.R:856:118: style: Commas should always have a space after.
                                       prediction = c(g_l_12$iVB.bagr.akl.dkl[9,1,,,], g_l_12_all$iVB.bagr.akl.dkl[9,1,,,]),
                                                                                                                     ^
NO COPY: R/regional.R:856:120: style: Commas should always have a space after.
                                       prediction = c(g_l_12$iVB.bagr.akl.dkl[9,1,,,], g_l_12_all$iVB.bagr.akl.dkl[9,1,,,]),
                                                                                                                       ^
NO COPY: R/regional.R:856:122: style: Commas should always have a space after.
                                       prediction = c(g_l_12$iVB.bagr.akl.dkl[9,1,,,], g_l_12_all$iVB.bagr.akl.dkl[9,1,,,]),
                                                                                                                         ^
NO COPY: R/regional.R:857:1: style: lines should not be more than 80 characters.
                                       standard_error = c(g_l_12$iVB.bagr.akl.dkl[9,2,,,], g_l_12_all$iVB.bagr.akl.dkl[9,2,,,])),
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:857:66: style: Variable and function names should be all lowercase.
                                       standard_error = c(g_l_12$iVB.bagr.akl.dkl[9,2,,,], g_l_12_all$iVB.bagr.akl.dkl[9,2,,,])),
                                                                 ^~~~~~~~~~~~~~~~
NO COPY: R/regional.R:857:66: style: Words within variable and function names should be separated by '_' rather than '.'.
                                       standard_error = c(g_l_12$iVB.bagr.akl.dkl[9,2,,,], g_l_12_all$iVB.bagr.akl.dkl[9,2,,,])),
                                                                 ^~~~~~~~~~~~~~~~
NO COPY: R/regional.R:857:85: style: Commas should always have a space after.
                                       standard_error = c(g_l_12$iVB.bagr.akl.dkl[9,2,,,], g_l_12_all$iVB.bagr.akl.dkl[9,2,,,])),
                                                                                    ^
NO COPY: R/regional.R:857:87: style: Commas should always have a space after.
                                       standard_error = c(g_l_12$iVB.bagr.akl.dkl[9,2,,,], g_l_12_all$iVB.bagr.akl.dkl[9,2,,,])),
                                                                                      ^
NO COPY: R/regional.R:857:89: style: Commas should always have a space after.
                                       standard_error = c(g_l_12$iVB.bagr.akl.dkl[9,2,,,], g_l_12_all$iVB.bagr.akl.dkl[9,2,,,])),
                                                                                        ^
NO COPY: R/regional.R:857:103: style: Variable and function names should be all lowercase.
                                       standard_error = c(g_l_12$iVB.bagr.akl.dkl[9,2,,,], g_l_12_all$iVB.bagr.akl.dkl[9,2,,,])),
                                                                                                      ^~~~~~~~~~~~~~~~
NO COPY: R/regional.R:857:103: style: Words within variable and function names should be separated by '_' rather than '.'.
                                       standard_error = c(g_l_12$iVB.bagr.akl.dkl[9,2,,,], g_l_12_all$iVB.bagr.akl.dkl[9,2,,,])),
                                                                                                      ^~~~~~~~~~~~~~~~
NO COPY: R/regional.R:857:122: style: Commas should always have a space after.
                                       standard_error = c(g_l_12$iVB.bagr.akl.dkl[9,2,,,], g_l_12_all$iVB.bagr.akl.dkl[9,2,,,])),
                                                                                                                         ^
NO COPY: R/regional.R:857:124: style: Commas should always have a space after.
                                       standard_error = c(g_l_12$iVB.bagr.akl.dkl[9,2,,,], g_l_12_all$iVB.bagr.akl.dkl[9,2,,,])),
                                                                                                                           ^
NO COPY: R/regional.R:857:126: style: Commas should always have a space after.
                                       standard_error = c(g_l_12$iVB.bagr.akl.dkl[9,2,,,], g_l_12_all$iVB.bagr.akl.dkl[9,2,,,])),
                                                                                                                             ^
NO COPY: R/regional.R:860:48: style: Only use double-quotes.
                                       group = 'Abgang',
                                               ^~~~~~~~
NO COPY: R/regional.R:862:1: style: lines should not be more than 80 characters.
                                       prediction = c(g_l_12$VB.A.bagr.akl.dkl[9,1,,,], g_l_12_all$VB.A.bagr.akl.dkl[9,1,,,]),
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:862:62: style: Words within variable and function names should be separated by '_' rather than '.'.
                                       prediction = c(g_l_12$VB.A.bagr.akl.dkl[9,1,,,], g_l_12_all$VB.A.bagr.akl.dkl[9,1,,,]),
                                                             ^~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:862:82: style: Commas should always have a space after.
                                       prediction = c(g_l_12$VB.A.bagr.akl.dkl[9,1,,,], g_l_12_all$VB.A.bagr.akl.dkl[9,1,,,]),
                                                                                 ^
NO COPY: R/regional.R:862:84: style: Commas should always have a space after.
                                       prediction = c(g_l_12$VB.A.bagr.akl.dkl[9,1,,,], g_l_12_all$VB.A.bagr.akl.dkl[9,1,,,]),
                                                                                   ^
NO COPY: R/regional.R:862:86: style: Commas should always have a space after.
                                       prediction = c(g_l_12$VB.A.bagr.akl.dkl[9,1,,,], g_l_12_all$VB.A.bagr.akl.dkl[9,1,,,]),
                                                                                     ^
NO COPY: R/regional.R:862:100: style: Words within variable and function names should be separated by '_' rather than '.'.
                                       prediction = c(g_l_12$VB.A.bagr.akl.dkl[9,1,,,], g_l_12_all$VB.A.bagr.akl.dkl[9,1,,,]),
                                                                                                   ^~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:862:120: style: Commas should always have a space after.
                                       prediction = c(g_l_12$VB.A.bagr.akl.dkl[9,1,,,], g_l_12_all$VB.A.bagr.akl.dkl[9,1,,,]),
                                                                                                                       ^
NO COPY: R/regional.R:862:122: style: Commas should always have a space after.
                                       prediction = c(g_l_12$VB.A.bagr.akl.dkl[9,1,,,], g_l_12_all$VB.A.bagr.akl.dkl[9,1,,,]),
                                                                                                                         ^
NO COPY: R/regional.R:862:124: style: Commas should always have a space after.
                                       prediction = c(g_l_12$VB.A.bagr.akl.dkl[9,1,,,], g_l_12_all$VB.A.bagr.akl.dkl[9,1,,,]),
                                                                                                                           ^
NO COPY: R/regional.R:863:1: style: lines should not be more than 80 characters.
                                       standard_error = c(g_l_12$VB.A.bagr.akl.dkl[9,2,,,], g_l_12_all$VB.A.bagr.akl.dkl[9,2,,,])),
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:863:66: style: Words within variable and function names should be separated by '_' rather than '.'.
                                       standard_error = c(g_l_12$VB.A.bagr.akl.dkl[9,2,,,], g_l_12_all$VB.A.bagr.akl.dkl[9,2,,,])),
                                                                 ^~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:863:86: style: Commas should always have a space after.
                                       standard_error = c(g_l_12$VB.A.bagr.akl.dkl[9,2,,,], g_l_12_all$VB.A.bagr.akl.dkl[9,2,,,])),
                                                                                     ^
NO COPY: R/regional.R:863:88: style: Commas should always have a space after.
                                       standard_error = c(g_l_12$VB.A.bagr.akl.dkl[9,2,,,], g_l_12_all$VB.A.bagr.akl.dkl[9,2,,,])),
                                                                                       ^
NO COPY: R/regional.R:863:90: style: Commas should always have a space after.
                                       standard_error = c(g_l_12$VB.A.bagr.akl.dkl[9,2,,,], g_l_12_all$VB.A.bagr.akl.dkl[9,2,,,])),
                                                                                         ^
NO COPY: R/regional.R:863:104: style: Words within variable and function names should be separated by '_' rather than '.'.
                                       standard_error = c(g_l_12$VB.A.bagr.akl.dkl[9,2,,,], g_l_12_all$VB.A.bagr.akl.dkl[9,2,,,])),
                                                                                                       ^~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:863:124: style: Commas should always have a space after.
                                       standard_error = c(g_l_12$VB.A.bagr.akl.dkl[9,2,,,], g_l_12_all$VB.A.bagr.akl.dkl[9,2,,,])),
                                                                                                                           ^
NO COPY: R/regional.R:863:126: style: Commas should always have a space after.
                                       standard_error = c(g_l_12$VB.A.bagr.akl.dkl[9,2,,,], g_l_12_all$VB.A.bagr.akl.dkl[9,2,,,])),
                                                                                                                             ^
NO COPY: R/regional.R:863:128: style: Commas should always have a space after.
                                       standard_error = c(g_l_12$VB.A.bagr.akl.dkl[9,2,,,], g_l_12_all$VB.A.bagr.akl.dkl[9,2,,,])),
                                                                                                                               ^
NO COPY: R/regional.R:866:48: style: Only use double-quotes.
                                       group = 'Zuwachs',
                                               ^~~~~~~~~
NO COPY: R/regional.R:868:1: style: lines should not be more than 80 characters.
                                       prediction = g_l_23$iVB.bagr.akl.dkl[9,1,,,],
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:868:60: style: Variable and function names should be all lowercase.
                                       prediction = g_l_23$iVB.bagr.akl.dkl[9,1,,,],
                                                           ^~~~~~~~~~~~~~~~
NO COPY: R/regional.R:868:60: style: Words within variable and function names should be separated by '_' rather than '.'.
                                       prediction = g_l_23$iVB.bagr.akl.dkl[9,1,,,],
                                                           ^~~~~~~~~~~~~~~~
NO COPY: R/regional.R:868:79: style: Commas should always have a space after.
                                       prediction = g_l_23$iVB.bagr.akl.dkl[9,1,,,],
                                                                              ^
NO COPY: R/regional.R:868:81: style: Commas should always have a space after.
                                       prediction = g_l_23$iVB.bagr.akl.dkl[9,1,,,],
                                                                                ^
NO COPY: R/regional.R:868:83: style: Commas should always have a space after.
                                       prediction = g_l_23$iVB.bagr.akl.dkl[9,1,,,],
                                                                                  ^
NO COPY: R/regional.R:869:1: style: lines should not be more than 80 characters.
                                       standard_error = g_l_23$iVB.bagr.akl.dkl[9,2,,,]),
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:869:64: style: Variable and function names should be all lowercase.
                                       standard_error = g_l_23$iVB.bagr.akl.dkl[9,2,,,]),
                                                               ^~~~~~~~~~~~~~~~
NO COPY: R/regional.R:869:64: style: Words within variable and function names should be separated by '_' rather than '.'.
                                       standard_error = g_l_23$iVB.bagr.akl.dkl[9,2,,,]),
                                                               ^~~~~~~~~~~~~~~~
NO COPY: R/regional.R:869:83: style: Commas should always have a space after.
                                       standard_error = g_l_23$iVB.bagr.akl.dkl[9,2,,,]),
                                                                                  ^
NO COPY: R/regional.R:869:85: style: Commas should always have a space after.
                                       standard_error = g_l_23$iVB.bagr.akl.dkl[9,2,,,]),
                                                                                    ^
NO COPY: R/regional.R:869:87: style: Commas should always have a space after.
                                       standard_error = g_l_23$iVB.bagr.akl.dkl[9,2,,,]),
                                                                                      ^
NO COPY: R/regional.R:872:48: style: Only use double-quotes.
                                       group = 'Abgang',
                                               ^~~~~~~~
NO COPY: R/regional.R:874:1: style: lines should not be more than 80 characters.
                                       prediction = g_l_23$VB.A.bagr.akl.dkl[9,1,,,],
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:874:60: style: Words within variable and function names should be separated by '_' rather than '.'.
                                       prediction = g_l_23$VB.A.bagr.akl.dkl[9,1,,,],
                                                           ^~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:874:80: style: Commas should always have a space after.
                                       prediction = g_l_23$VB.A.bagr.akl.dkl[9,1,,,],
                                                                               ^
NO COPY: R/regional.R:874:82: style: Commas should always have a space after.
                                       prediction = g_l_23$VB.A.bagr.akl.dkl[9,1,,,],
                                                                                 ^
NO COPY: R/regional.R:874:84: style: Commas should always have a space after.
                                       prediction = g_l_23$VB.A.bagr.akl.dkl[9,1,,,],
                                                                                   ^
NO COPY: R/regional.R:875:1: style: lines should not be more than 80 characters.
                                       standard_error = g_l_23$VB.A.bagr.akl.dkl[9,2,,,])
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:875:64: style: Words within variable and function names should be separated by '_' rather than '.'.
                                       standard_error = g_l_23$VB.A.bagr.akl.dkl[9,2,,,])
                                                               ^~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:875:84: style: Commas should always have a space after.
                                       standard_error = g_l_23$VB.A.bagr.akl.dkl[9,2,,,])
                                                                                   ^
NO COPY: R/regional.R:875:86: style: Commas should always have a space after.
                                       standard_error = g_l_23$VB.A.bagr.akl.dkl[9,2,,,])
                                                                                     ^
NO COPY: R/regional.R:875:88: style: Commas should always have a space after.
                                       standard_error = g_l_23$VB.A.bagr.akl.dkl[9,2,,,])
                                                                                       ^
NO COPY: R/regional.R:877:48: style: Trailing whitespace is superfluous.
    table_data <- data_frame; names(table_data)  
                                               ^~
NO COPY: R/regional.R:878:1: style: lines should not be more than 80 characters.
    names(table_data)  <- c('Periode', 'Art', 'Artengruppe', 'Vorhersage', 'Standardfehler')
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:878:29: style: Only use double-quotes.
    names(table_data)  <- c('Periode', 'Art', 'Artengruppe', 'Vorhersage', 'Standardfehler')
                            ^~~~~~~~~
NO COPY: R/regional.R:878:40: style: Only use double-quotes.
    names(table_data)  <- c('Periode', 'Art', 'Artengruppe', 'Vorhersage', 'Standardfehler')
                                       ^~~~~
NO COPY: R/regional.R:878:47: style: Only use double-quotes.
    names(table_data)  <- c('Periode', 'Art', 'Artengruppe', 'Vorhersage', 'Standardfehler')
                                              ^~~~~~~~~~~~~
NO COPY: R/regional.R:878:62: style: Only use double-quotes.
    names(table_data)  <- c('Periode', 'Art', 'Artengruppe', 'Vorhersage', 'Standardfehler')
                                                             ^~~~~~~~~~~~
NO COPY: R/regional.R:878:76: style: Only use double-quotes.
    names(table_data)  <- c('Periode', 'Art', 'Artengruppe', 'Vorhersage', 'Standardfehler')
                                                                           ^~~~~~~~~~~~~~~~
NO COPY: R/regional.R:880:1: style: lines should not be more than 80 characters.
    d_name <- paste0(gsub(' ', '_', gsub('/', '_', file_name_district)), "_", gsub(",", "", gsub(" ", "_", names(stratii[stratum_index]))))
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:880:27: style: Only use double-quotes.
    d_name <- paste0(gsub(' ', '_', gsub('/', '_', file_name_district)), "_", gsub(",", "", gsub(" ", "_", names(stratii[stratum_index]))))
                          ^~~
NO COPY: R/regional.R:880:32: style: Only use double-quotes.
    d_name <- paste0(gsub(' ', '_', gsub('/', '_', file_name_district)), "_", gsub(",", "", gsub(" ", "_", names(stratii[stratum_index]))))
                               ^~~
NO COPY: R/regional.R:880:42: style: Only use double-quotes.
    d_name <- paste0(gsub(' ', '_', gsub('/', '_', file_name_district)), "_", gsub(",", "", gsub(" ", "_", names(stratii[stratum_index]))))
                                         ^~~
NO COPY: R/regional.R:880:47: style: Only use double-quotes.
    d_name <- paste0(gsub(' ', '_', gsub('/', '_', file_name_district)), "_", gsub(",", "", gsub(" ", "_", names(stratii[stratum_index]))))
                                              ^~~
NO COPY: R/regional.R:880:114: warning: no visible binding for global variable 'stratii', Did you mean 'strtoi'?
    d_name <- paste0(gsub(' ', '_', gsub('/', '_', file_name_district)), "_", gsub(",", "", gsub(" ", "_", names(stratii[stratum_index]))))
                                                                                                                 ^~~~~~~
NO COPY: R/regional.R:880:122: warning: no visible binding for global variable 'stratum_index'
    d_name <- paste0(gsub(' ', '_', gsub('/', '_', file_name_district)), "_", gsub(",", "", gsub(" ", "_", names(stratii[stratum_index]))))
                                                                                                                         ^~~~~~~~~~~~~
NO COPY: R/regional.R:881:18: style: Only use double-quotes.
    type_name <- 'Zuwachs_Abgang'
                 ^~~~~~~~~~~~~~~~
NO COPY: R/regional.R:882:48: style: Only use double-quotes.
    out_name <- paste(d_name, type_name, sep = '_')
                                               ^~~
NO COPY: R/regional.R:883:34: style: Only use double-quotes.
    out_file <- paste0(out_name, '.eps')
                                 ^~~~~~
NO COPY: R/regional.R:885:1: style: lines should not be more than 80 characters.
    grDevices::postscript(out_path, width = graphic_width, height = graphic_height,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:888:22: style: Trailing whitespace is superfluous.
    data_frame$foo <- 
                     ^
NO COPY: R/regional.R:890:76: style: Trailing whitespace is superfluous.
               levels = unique(paste(data_frame$period, data_frame$group)), 
                                                                           ^
NO COPY: R/regional.R:899:33: style: Only use double-quotes.
       ggplot2::geom_bar(stat = 'identity', position = ggplot2::position_dodge()
                                ^~~~~~~~~~
NO COPY: R/regional.R:906:62: style: Put spaces around all infix operators.
                     position = ggplot2::position_dodge(width=0.9)
                                                            ~^~
NO COPY: R/regional.R:909:1: style: lines should not be more than 80 characters.
       ggplot2::scale_fill_manual(values = c('#33FF33', '#FF6666', '#006600', '#990000' ), name = '') +
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:909:46: style: Only use double-quotes.
       ggplot2::scale_fill_manual(values = c('#33FF33', '#FF6666', '#006600', '#990000' ), name = '') +
                                             ^~~~~~~~~
NO COPY: R/regional.R:909:57: style: Only use double-quotes.
       ggplot2::scale_fill_manual(values = c('#33FF33', '#FF6666', '#006600', '#990000' ), name = '') +
                                                        ^~~~~~~~~
NO COPY: R/regional.R:909:68: style: Only use double-quotes.
       ggplot2::scale_fill_manual(values = c('#33FF33', '#FF6666', '#006600', '#990000' ), name = '') +
                                                                   ^~~~~~~~~
NO COPY: R/regional.R:909:79: style: Only use double-quotes.
       ggplot2::scale_fill_manual(values = c('#33FF33', '#FF6666', '#006600', '#990000' ), name = '') +
                                                                              ^~~~~~~~~
NO COPY: R/regional.R:909:99: style: Only use double-quotes.
       ggplot2::scale_fill_manual(values = c('#33FF33', '#FF6666', '#006600', '#990000' ), name = '') +
                                                                                                  ^~
NO COPY: R/regional.R:911:22: style: Only use double-quotes.
       ggplot2::xlab('') +
                     ^~
NO COPY: R/regional.R:912:1: style: lines should not be more than 80 characters.
       ggplot2::ylab(expression(paste("Derbholz mit Rinde [", m^3, ha^-1, a^-1, "]",  sep = ""))) +
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:912:64: style: Put spaces around all infix operators.
       ggplot2::ylab(expression(paste("Derbholz mit Rinde [", m^3, ha^-1, a^-1, "]",  sep = ""))) +
                                                              ~^~
NO COPY: R/regional.R:912:70: style: Put spaces around all infix operators.
       ggplot2::ylab(expression(paste("Derbholz mit Rinde [", m^3, ha^-1, a^-1, "]",  sep = ""))) +
                                                                    ~^~
NO COPY: R/regional.R:912:76: style: Put spaces around all infix operators.
       ggplot2::ylab(expression(paste("Derbholz mit Rinde [", m^3, ha^-1, a^-1, "]",  sep = ""))) +
                                                                          ~^~
NO COPY: R/regional.R:913:19: style: Put spaces around all infix operators.
       copyright()+  ggplot2::theme(legend.position="top")
                 ~^
NO COPY: R/regional.R:913:52: style: Put spaces around all infix operators.
       copyright()+  ggplot2::theme(legend.position="top")
                                                  ~^~
NO COPY: R/regional.R:919:59: style: Trailing whitespace is superfluous.
    to_tex("\n\\begin{center}\\includegraphics[width=", 1, 
                                                          ^
NO COPY: R/regional.R:922:1: style: lines should not be more than 80 characters.
    caption  <- c('Zuwachs, ausgeschiedener Vorrat (Abgang) und Fehler in Kubikmeternn Derbholz mit Rinde pro Hektar und Jahr.')
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:922:19: style: Only use double-quotes.
    caption  <- c('Zuwachs, ausgeschiedener Vorrat (Abgang) und Fehler in Kubikmeternn Derbholz mit Rinde pro Hektar und Jahr.')
                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:923:7: style: Place a space before left parenthesis, except in a function call.
    if(do_errors_relative) {
      ^
NO COPY: R/regional.R:924:1: style: lines should not be more than 80 characters.
        table_data$Standardfehler <- table_data$Standardfehler / table_data$Vorhersage * 100
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:928:1: style: lines should not be more than 80 characters.
    df_cast <-  reshape2::dcast(reshape2::melt(table_data), value.var = "value", formula =
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:931:72: style: Trailing whitespace is superfluous.
    names(df_cast) <- gsub("_Vorhersage", "", gsub(".*_Standardfehler", 
                                                                       ^
NO COPY: R/regional.R:935:76: style: Trailing whitespace is superfluous.
                                               levels(table_data$BWI), "}", 
                                                                           ^
NO COPY: R/regional.R:936:57: style: Put spaces around all infix operators.
                                               collapse =" & "), 
                                                        ^~
NO COPY: R/regional.R:936:65: style: Trailing whitespace is superfluous.
                                               collapse =" & "), 
                                                                ^
NO COPY: R/regional.R:939:1: style: lines should not be more than 80 characters.
    table_tex <- ascii_umlauts(file.path(graphic_directory,paste0("table_", out_name, ".tex")))
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:939:60: style: Commas should always have a space after.
    table_tex <- ascii_umlauts(file.path(graphic_directory,paste0("table_", out_name, ".tex")))
                                                           ^
NO COPY: R/regional.R:941:60: style: Trailing whitespace is superfluous.
    print(file = table_tex, floating = TRUE, append = TRUE, 
                                                           ^
NO COPY: R/regional.R:942:48: style: Trailing whitespace is superfluous.
          size = "scriptsize", booktabs = TRUE, 
                                               ^
NO COPY: R/regional.R:944:53: style: Trailing whitespace is superfluous.
          xtable::xtable(df_cast, caption = caption, 
                                                    ^
NO COPY: R/regional.R:945:65: style: Put spaces around all infix operators.
                 align = c("ll", "ll", rep("|rr", ncol(df_cast) -1 )) 
                                                                ^~
NO COPY: R/regional.R:945:70: style: Trailing whitespace is superfluous.
                 align = c("ll", "ll", rep("|rr", ncol(df_cast) -1 )) 
                                                                     ^
NO COPY: R/regional.R:947:21: style: Put spaces around all infix operators.
          add.to.row= list(pos = list(-1), command = label_row),
                   ~^
NO COPY: R/regional.R:948:27: style: Put spaces around all infix operators.
          include.rownames=FALSE)
                         ~^~
NO COPY: R/regional.R:951:67: style: Trailing whitespace is superfluous.
    print(file = dot_district_tex, floating = TRUE, append = TRUE, 
                                                                  ^
NO COPY: R/regional.R:952:48: style: Trailing whitespace is superfluous.
          size = "scriptsize", booktabs = TRUE, 
                                               ^
NO COPY: R/regional.R:954:53: style: Trailing whitespace is superfluous.
          xtable::xtable(df_cast, caption = caption, 
                                                    ^
NO COPY: R/regional.R:955:65: style: Put spaces around all infix operators.
                 align = c("ll", "ll", rep("|rr", ncol(df_cast) -1 )) 
                                                                ^~
NO COPY: R/regional.R:955:70: style: Trailing whitespace is superfluous.
                 align = c("ll", "ll", rep("|rr", ncol(df_cast) -1 )) 
                                                                     ^
NO COPY: R/regional.R:957:21: style: Put spaces around all infix operators.
          add.to.row= list(pos = list(-1), command = label_row),
                   ~^
NO COPY: R/regional.R:958:27: style: Put spaces around all infix operators.
          include.rownames=FALSE)
                         ~^~
NO COPY: R/regional.R:961:39: style: Trailing whitespace is superfluous.
plot_ownership <- function(ownerships, 
                                      ^
NO COPY: R/regional.R:968:76: style: Trailing whitespace is superfluous.
     ownerships$labels <- map_abbreviations_to_labels(ownerships$ownership) 
                                                                           ^
NO COPY: R/regional.R:969:1: style: lines should not be more than 80 characters.
     ownerships$ownership_realive_area  <- paste0(round(ownerships$area/sum(ownerships$area) * 100,1), '%')
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:969:72: style: Put spaces around all infix operators.
     ownerships$ownership_realive_area  <- paste0(round(ownerships$area/sum(ownerships$area) * 100,1), '%')
                                                                      ~^~
NO COPY: R/regional.R:969:100: style: Commas should always have a space after.
     ownerships$ownership_realive_area  <- paste0(round(ownerships$area/sum(ownerships$area) * 100,1), '%')
                                                                                                   ^
NO COPY: R/regional.R:969:104: style: Only use double-quotes.
     ownerships$ownership_realive_area  <- paste0(round(ownerships$area/sum(ownerships$area) * 100,1), '%')
                                                                                                       ^~~
NO COPY: R/regional.R:971:26: style: Use <-, not =, for assignment.
     ownerships$position = cumsum(ownerships$area)- ownerships$area/2
                         ^
NO COPY: R/regional.R:971:51: style: Put spaces around all infix operators.
     ownerships$position = cumsum(ownerships$area)- ownerships$area/2
                                                 ~^
NO COPY: R/regional.R:971:68: style: Put spaces around all infix operators.
     ownerships$position = cumsum(ownerships$area)- ownerships$area/2
                                                                  ~^~
NO COPY: R/regional.R:973:47: style: Trailing whitespace is superfluous.
     tmp <- ggplot2::ggplot(data = ownerships, 
                                              ^
NO COPY: R/regional.R:976:1: style: lines should not be more than 80 characters.
                   fill = ownership)) + ggplot2::geom_bar() + coord_polar(theta = "y") + 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:976:89: style: Trailing whitespace is superfluous.
                   fill = ownership)) + ggplot2::geom_bar() + coord_polar(theta = "y") + 
                                                                                        ^
NO COPY: R/regional.R:977:15: style: Only use double-quotes.
ggplot2::xlab('') + ylab ('')+ scale_x_discrete(breaks = NULL) +
              ^~
NO COPY: R/regional.R:977:27: style: Only use double-quotes.
ggplot2::xlab('') + ylab ('')+ scale_x_discrete(breaks = NULL) +
                          ^~
NO COPY: R/regional.R:977:30: style: Put spaces around all infix operators.
ggplot2::xlab('') + ylab ('')+ scale_x_discrete(breaks = NULL) +
                            ~^
NO COPY: R/regional.R:979:1: style: lines should not be more than 80 characters.
                  values = as.character(get_colors_for_ownership( map_labels_to_abbreviations(ownerships$ownership)))
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:980:28: style: Only use double-quotes.
                  , name = 'Eigentumsart',
                           ^~~~~~~~~~~~~~
NO COPY: R/regional.R:981:51: style: Trailing whitespace is superfluous.
                  labels = ownerships$ownership) + 
                                                  ^
NO COPY: R/regional.R:982:49: style: Trailing whitespace is superfluous.
geom_text(ggplot2::aes(x = radius, y = position, 
                                                ^
NO COPY: R/regional.R:985:7: style: Put spaces around all infix operators.
, size=6, color ='black') + 
     ~^~
NO COPY: R/regional.R:985:17: style: Put spaces around all infix operators.
, size=6, color ='black') + 
                ^~
NO COPY: R/regional.R:985:18: style: Only use double-quotes.
, size=6, color ='black') + 
                 ^~~~~~~
NO COPY: R/regional.R:985:28: style: Trailing whitespace is superfluous.
, size=6, color ='black') + 
                           ^
NO COPY: R/regional.R:986:1: style: lines should not be more than 80 characters.
ggplot2::ggtitle(paste('Waldfl\u00e4che:', round_and_prettify_german(sum(ownerships$area)),
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:986:24: style: Only use double-quotes.
ggplot2::ggtitle(paste('Waldfl\u00e4che:', round_and_prettify_german(sum(ownerships$area)),
                       ^~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:987:15: style: Only use double-quotes.
              'ha'))
              ^~~~
NO COPY: R/regional.R:989:23: style: Only use double-quotes.
d_name <- paste0(gsub(' ', '_', gsub('/', '_', file_name_district)))
                      ^~~
NO COPY: R/regional.R:989:28: style: Only use double-quotes.
d_name <- paste0(gsub(' ', '_', gsub('/', '_', file_name_district)))
                           ^~~
NO COPY: R/regional.R:989:38: style: Only use double-quotes.
d_name <- paste0(gsub(' ', '_', gsub('/', '_', file_name_district)))
                                     ^~~
NO COPY: R/regional.R:989:43: style: Only use double-quotes.
d_name <- paste0(gsub(' ', '_', gsub('/', '_', file_name_district)))
                                          ^~~
NO COPY: R/regional.R:990:18: style: Only use double-quotes.
    type_name <- 'Eigentumsarten'
                 ^~~~~~~~~~~~~~~~
NO COPY: R/regional.R:991:48: style: Only use double-quotes.
    out_name <- paste(d_name, type_name, sep = '_')
                                               ^~~
NO COPY: R/regional.R:992:34: style: Only use double-quotes.
    out_file <- paste0(out_name, '.eps')
                                 ^~~~~~
NO COPY: R/regional.R:994:1: style: lines should not be more than 80 characters.
    grDevices::postscript(out_path, width = graphic_width, height = graphic_height,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:1003:61: style: Trailing whitespace is superfluous.
    to_tex("\n\\begin{center}\\includegraphics[width=", 0.8, 
                                                            ^
NO COPY: R/regional.R:1007:12: style: Only use double-quotes.
           ' GPW den Gro\\ss{}privatwald mit mehr als 200 Hektar und MPW den',
           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:1008:12: style: Only use double-quotes.
           ' Mittleren Privatwald mit mehr als 5 und nicht mehr als 200 Hektar',
           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:1009:12: style: Only use double-quotes.
           ' und KPW den  Kleinprivatwald mit nicht mehr als 5 Hektar',
           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:1016:1: style: Opening curly braces should never go on their own line and should always be followed by a new line.
{
^
NO COPY: R/regional.R:1017:25: style: Put spaces around all infix operators.
  return(data.frame(NTNS=factor(ntns.list$NTNS, levels = ntns.list$NTNS),
                       ~^~
NO COPY: R/regional.R:1018:15: style: Put spaces around all infix operators.
    Flaeche_ha=round(ntns.list$NTNS.Flaeche.Anteil[1,1,],0),
             ~^~
NO COPY: R/regional.R:1018:32: style: Words within variable and function names should be separated by '_' rather than '.'.
    Flaeche_ha=round(ntns.list$NTNS.Flaeche.Anteil[1,1,],0),
                               ^~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:1018:54: style: Commas should always have a space after.
    Flaeche_ha=round(ntns.list$NTNS.Flaeche.Anteil[1,1,],0),
                                                     ^
NO COPY: R/regional.R:1018:56: style: Commas should always have a space after.
    Flaeche_ha=round(ntns.list$NTNS.Flaeche.Anteil[1,1,],0),
                                                       ^
NO COPY: R/regional.R:1018:58: style: Commas should always have a space after.
    Flaeche_ha=round(ntns.list$NTNS.Flaeche.Anteil[1,1,],0),
                                                         ^
NO COPY: R/regional.R:1019:18: style: Put spaces around all infix operators.
    SE_Flaeche_ha=round(ntns.list$NTNS.Flaeche.Anteil[1,2,],0),
                ~^~
NO COPY: R/regional.R:1019:35: style: Words within variable and function names should be separated by '_' rather than '.'.
    SE_Flaeche_ha=round(ntns.list$NTNS.Flaeche.Anteil[1,2,],0),
                                  ^~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:1019:57: style: Commas should always have a space after.
    SE_Flaeche_ha=round(ntns.list$NTNS.Flaeche.Anteil[1,2,],0),
                                                        ^
NO COPY: R/regional.R:1019:59: style: Commas should always have a space after.
    SE_Flaeche_ha=round(ntns.list$NTNS.Flaeche.Anteil[1,2,],0),
                                                          ^
NO COPY: R/regional.R:1019:61: style: Commas should always have a space after.
    SE_Flaeche_ha=round(ntns.list$NTNS.Flaeche.Anteil[1,2,],0),
                                                            ^
NO COPY: R/regional.R:1020:11: style: Put spaces around all infix operators.
    Anteil=round(ntns.list$NTNS.Flaeche.Anteil[2,1,],1),
         ~^~
NO COPY: R/regional.R:1020:28: style: Words within variable and function names should be separated by '_' rather than '.'.
    Anteil=round(ntns.list$NTNS.Flaeche.Anteil[2,1,],1),
                           ^~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:1020:50: style: Commas should always have a space after.
    Anteil=round(ntns.list$NTNS.Flaeche.Anteil[2,1,],1),
                                                 ^
NO COPY: R/regional.R:1020:52: style: Commas should always have a space after.
    Anteil=round(ntns.list$NTNS.Flaeche.Anteil[2,1,],1),
                                                   ^
NO COPY: R/regional.R:1020:54: style: Commas should always have a space after.
    Anteil=round(ntns.list$NTNS.Flaeche.Anteil[2,1,],1),
                                                     ^
NO COPY: R/regional.R:1021:14: style: Put spaces around all infix operators.
    SE_Anteil=round(ntns.list$NTNS.Flaeche.Anteil[2,2,],1)))
            ~^~
NO COPY: R/regional.R:1021:31: style: Words within variable and function names should be separated by '_' rather than '.'.
    SE_Anteil=round(ntns.list$NTNS.Flaeche.Anteil[2,2,],1)))
                              ^~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:1021:53: style: Commas should always have a space after.
    SE_Anteil=round(ntns.list$NTNS.Flaeche.Anteil[2,2,],1)))
                                                    ^
NO COPY: R/regional.R:1021:55: style: Commas should always have a space after.
    SE_Anteil=round(ntns.list$NTNS.Flaeche.Anteil[2,2,],1)))
                                                      ^
NO COPY: R/regional.R:1021:57: style: Commas should always have a space after.
    SE_Anteil=round(ntns.list$NTNS.Flaeche.Anteil[2,2,],1)))
                                                        ^
NO COPY: R/regional.R:1023:36: style: Trailing whitespace is superfluous.
plot_ntns <- function(ntns2, ntns3, 
                                   ^
NO COPY: R/regional.R:1031:39: style: Only use double-quotes.
      cbind(ntns_output(ntns2), bwi = '2002'),
                                      ^~~~~~
NO COPY: R/regional.R:1032:39: style: Only use double-quotes.
      cbind(ntns_output(ntns3), bwi = '2012')
                                      ^~~~~~
NO COPY: R/regional.R:1034:26: style: Only use double-quotes.
names(data_frame) <- sub('SE_Anteil', 'standard_error', names(data_frame))
                         ^~~~~~~~~~~
NO COPY: R/regional.R:1034:39: style: Only use double-quotes.
names(data_frame) <- sub('SE_Anteil', 'standard_error', names(data_frame))
                                      ^~~~~~~~~~~~~~~~
NO COPY: R/regional.R:1035:26: style: Only use double-quotes.
names(data_frame) <- sub('Anteil', 'prediction', names(data_frame))
                         ^~~~~~~~
NO COPY: R/regional.R:1035:36: style: Only use double-quotes.
names(data_frame) <- sub('Anteil', 'prediction', names(data_frame))
                                   ^~~~~~~~~~~~
NO COPY: R/regional.R:1040:23: style: Trailing whitespace is superfluous.
                    ), 
                      ^
NO COPY: R/regional.R:1042:1: style: lines should not be more than 80 characters.
         ggplot2::geom_bar(stat = 'identity', position = ggplot2::position_dodge()) +
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:1042:35: style: Only use double-quotes.
         ggplot2::geom_bar(stat = 'identity', position = ggplot2::position_dodge()) +
                                  ^~~~~~~~~~
NO COPY: R/regional.R:1047:64: style: Put spaces around all infix operators.
                       position = ggplot2::position_dodge(width=0.9)
                                                              ~^~
NO COPY: R/regional.R:1049:1: style: lines should not be more than 80 characters.
         ggplot2::scale_fill_manual(values = get_bwi_colors()[2:3], name = 'BWI') +
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:1049:76: style: Only use double-quotes.
         ggplot2::scale_fill_manual(values = get_bwi_colors()[2:3], name = 'BWI') +
                                                                           ^~~~~
NO COPY: R/regional.R:1051:24: style: Only use double-quotes.
         ggplot2::xlab('')+
                       ^~
NO COPY: R/regional.R:1051:27: style: Put spaces around all infix operators.
         ggplot2::xlab('')+
                         ~^~
NO COPY: R/regional.R:1052:24: style: Only use double-quotes.
         ggplot2::ylab('Fl\u00e4chenanteil [%]') + copyright() + 
                       ^~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:1052:65: style: Trailing whitespace is superfluous.
         ggplot2::ylab('Fl\u00e4chenanteil [%]') + copyright() + 
                                                                ^
NO COPY: R/regional.R:1053:12: style: Place a space before left parenthesis, except in a function call.
         if(TITLE_PLOT){ggplot2::ggtitle(title_district)}
           ^
NO COPY: R/regional.R:1053:24: style: Opening curly braces should never go on their own line and should always be followed by a new line.
         if(TITLE_PLOT){ggplot2::ggtitle(title_district)}
                       ^
NO COPY: R/regional.R:1053:57: style: Closing curly-braces should always be on their own line, unless it's followed by an else.
         if(TITLE_PLOT){ggplot2::ggtitle(title_district)}
                                                        ^
NO COPY: R/regional.R:1054:27: style: Only use double-quotes.
    d_name <- paste0(gsub(' ', '_', gsub('/', '_', 
                          ^~~
NO COPY: R/regional.R:1054:32: style: Only use double-quotes.
    d_name <- paste0(gsub(' ', '_', gsub('/', '_', 
                               ^~~
NO COPY: R/regional.R:1054:42: style: Only use double-quotes.
    d_name <- paste0(gsub(' ', '_', gsub('/', '_', 
                                         ^~~
NO COPY: R/regional.R:1054:47: style: Only use double-quotes.
    d_name <- paste0(gsub(' ', '_', gsub('/', '_', 
                                              ^~~
NO COPY: R/regional.R:1054:51: style: Trailing whitespace is superfluous.
    d_name <- paste0(gsub(' ', '_', gsub('/', '_', 
                                                  ^
NO COPY: R/regional.R:1055:1: style: lines should not be more than 80 characters.
                                                   file_name_district)), "_", gsub(",", "", gsub(" ", "_", names(stratii[stratum_index]))))
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:1056:18: style: Only use double-quotes.
    type_name <- 'Naturn\u00e4he'
                 ^~~~~~~~~~~~~~~~
NO COPY: R/regional.R:1057:48: style: Only use double-quotes.
    out_name <- paste(d_name, type_name, sep = '_')
                                               ^~~
NO COPY: R/regional.R:1058:34: style: Only use double-quotes.
    out_file <- paste0(out_name, '.eps')
                                 ^~~~~~
NO COPY: R/regional.R:1060:1: style: lines should not be more than 80 characters.
    grDevices::postscript(out_path, width = graphic_width, height = graphic_height,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:1071:31: style: Commas should always have a space after.
    table_data <- data_frame[,c(1, 4:6)]
                              ^
NO COPY: R/regional.R:1072:1: style: lines should not be more than 80 characters.
    names(table_data)  <- c('Naturnaehestufe', 'Vorhersage', 'Standardfehler', 'BWI')
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:1072:29: style: Only use double-quotes.
    names(table_data)  <- c('Naturnaehestufe', 'Vorhersage', 'Standardfehler', 'BWI')
                            ^~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:1072:48: style: Only use double-quotes.
    names(table_data)  <- c('Naturnaehestufe', 'Vorhersage', 'Standardfehler', 'BWI')
                                               ^~~~~~~~~~~~
NO COPY: R/regional.R:1072:62: style: Only use double-quotes.
    names(table_data)  <- c('Naturnaehestufe', 'Vorhersage', 'Standardfehler', 'BWI')
                                                             ^~~~~~~~~~~~~~~~
NO COPY: R/regional.R:1072:80: style: Only use double-quotes.
    names(table_data)  <- c('Naturnaehestufe', 'Vorhersage', 'Standardfehler', 'BWI')
                                                                               ^~~~~
NO COPY: R/regional.R:1074:1: style: lines should not be more than 80 characters.
    df_cast <-  reshape2::dcast(reshape2::melt(table_data), value.var = "value", formula =
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:1077:1: style: lines should not be more than 80 characters.
    names(df_cast) <- gsub(".*_Vorhersage", 'Fl\\"achenanteil', gsub(".*_Standardfehler", 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:1077:90: style: Trailing whitespace is superfluous.
    names(df_cast) <- gsub(".*_Vorhersage", 'Fl\\"achenanteil', gsub(".*_Standardfehler", 
                                                                                         ^
NO COPY: R/regional.R:1081:76: style: Trailing whitespace is superfluous.
                                               levels(table_data$BWI), "}", 
                                                                           ^
NO COPY: R/regional.R:1082:57: style: Put spaces around all infix operators.
                                               collapse =" & "), 
                                                        ^~
NO COPY: R/regional.R:1082:65: style: Trailing whitespace is superfluous.
                                               collapse =" & "), 
                                                                ^
NO COPY: R/regional.R:1085:1: style: lines should not be more than 80 characters.
    table_tex <- ascii_umlauts(file.path(graphic_directory,paste0("table_", out_name, ".tex")))
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:1085:60: style: Commas should always have a space after.
    table_tex <- ascii_umlauts(file.path(graphic_directory,paste0("table_", out_name, ".tex")))
                                                           ^
NO COPY: R/regional.R:1087:60: style: Trailing whitespace is superfluous.
    print(file = table_tex, floating = TRUE, append = TRUE, 
                                                           ^
NO COPY: R/regional.R:1088:48: style: Trailing whitespace is superfluous.
          size = "scriptsize", booktabs = TRUE, 
                                               ^
NO COPY: R/regional.R:1090:53: style: Trailing whitespace is superfluous.
          xtable::xtable(df_cast, caption = caption, 
                                                    ^
NO COPY: R/regional.R:1091:1: style: lines should not be more than 80 characters.
                 align = paste0("ll", paste(rep("|rr", (ncol(df_cast) - 1) / 2), 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:1091:81: style: Trailing whitespace is superfluous.
                 align = paste0("ll", paste(rep("|rr", (ncol(df_cast) - 1) / 2), 
                                                                                ^
NO COPY: R/regional.R:1093:21: style: Put spaces around all infix operators.
          add.to.row= list(pos = list(-1), command = label_row),
                   ~^
NO COPY: R/regional.R:1094:27: style: Put spaces around all infix operators.
          include.rownames=FALSE)
                         ~^~
NO COPY: R/regional.R:1097:67: style: Trailing whitespace is superfluous.
    print(file = dot_district_tex, floating = TRUE, append = TRUE, 
                                                                  ^
NO COPY: R/regional.R:1098:48: style: Trailing whitespace is superfluous.
          size = "scriptsize", booktabs = TRUE, 
                                               ^
NO COPY: R/regional.R:1100:53: style: Trailing whitespace is superfluous.
          xtable::xtable(df_cast, caption = caption, 
                                                    ^
NO COPY: R/regional.R:1101:1: style: lines should not be more than 80 characters.
                 align = paste0("ll", paste(rep("|rr", (ncol(df_cast) - 1) / 2), 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:1101:81: style: Trailing whitespace is superfluous.
                 align = paste0("ll", paste(rep("|rr", (ncol(df_cast) - 1) / 2), 
                                                                                ^
NO COPY: R/regional.R:1103:21: style: Put spaces around all infix operators.
          add.to.row= list(pos = list(-1), command = label_row),
                   ~^
NO COPY: R/regional.R:1104:27: style: Put spaces around all infix operators.
          include.rownames=FALSE)
                         ~^~
NO COPY: R/regional.R:1119:1: style: lines should not be more than 80 characters.
                                   prediction = loss1$VB.A.bagr.akl.dkl[7,1,1,,],
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:1119:55: style: Words within variable and function names should be separated by '_' rather than '.'.
                                   prediction = loss1$VB.A.bagr.akl.dkl[7,1,1,,],
                                                      ^~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:1119:75: style: Commas should always have a space after.
                                   prediction = loss1$VB.A.bagr.akl.dkl[7,1,1,,],
                                                                          ^
NO COPY: R/regional.R:1119:77: style: Commas should always have a space after.
                                   prediction = loss1$VB.A.bagr.akl.dkl[7,1,1,,],
                                                                            ^
NO COPY: R/regional.R:1119:79: style: Commas should always have a space after.
                                   prediction = loss1$VB.A.bagr.akl.dkl[7,1,1,,],
                                                                              ^
NO COPY: R/regional.R:1121:42: style: Words within variable and function names should be separated by '_' rather than '.'.
                                   loss1$VB.A.bagr.akl.dkl[7,2,1,,]),
                                         ^~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:1121:62: style: Commas should always have a space after.
                                   loss1$VB.A.bagr.akl.dkl[7,2,1,,]),
                                                             ^
NO COPY: R/regional.R:1121:64: style: Commas should always have a space after.
                                   loss1$VB.A.bagr.akl.dkl[7,2,1,,]),
                                                               ^
NO COPY: R/regional.R:1121:66: style: Commas should always have a space after.
                                   loss1$VB.A.bagr.akl.dkl[7,2,1,,]),
                                                                 ^
NO COPY: R/regional.R:1124:1: style: lines should not be more than 80 characters.
                                   prediction = loss2$VB.A.bagr.akl.dkl[7,1,1,,],
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:1124:55: style: Words within variable and function names should be separated by '_' rather than '.'.
                                   prediction = loss2$VB.A.bagr.akl.dkl[7,1,1,,],
                                                      ^~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:1124:75: style: Commas should always have a space after.
                                   prediction = loss2$VB.A.bagr.akl.dkl[7,1,1,,],
                                                                          ^
NO COPY: R/regional.R:1124:77: style: Commas should always have a space after.
                                   prediction = loss2$VB.A.bagr.akl.dkl[7,1,1,,],
                                                                            ^
NO COPY: R/regional.R:1124:79: style: Commas should always have a space after.
                                   prediction = loss2$VB.A.bagr.akl.dkl[7,1,1,,],
                                                                              ^
NO COPY: R/regional.R:1125:1: style: lines should not be more than 80 characters.
                                   standard_error = loss2$VB.A.bagr.akl.dkl[7,2,1,,])
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:1125:59: style: Words within variable and function names should be separated by '_' rather than '.'.
                                   standard_error = loss2$VB.A.bagr.akl.dkl[7,2,1,,])
                                                          ^~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:1125:79: style: Commas should always have a space after.
                                   standard_error = loss2$VB.A.bagr.akl.dkl[7,2,1,,])
                                                                              ^
NO COPY: R/regional.R:1125:81: style: Commas should always have a space after.
                                   standard_error = loss2$VB.A.bagr.akl.dkl[7,2,1,,])
                                                                                ^
NO COPY: R/regional.R:1125:83: style: Commas should always have a space after.
                                   standard_error = loss2$VB.A.bagr.akl.dkl[7,2,1,,])
                                                                                  ^
NO COPY: R/regional.R:1131:25: style: Trailing whitespace is superfluous.
                      ), 
                        ^
NO COPY: R/regional.R:1133:26: style: Only use double-quotes.
ggplot2::geom_bar(stat = 'identity', position = ggplot2::position_dodge()) +
                         ^~~~~~~~~~
NO COPY: R/regional.R:1138:55: style: Put spaces around all infix operators.
              position = ggplot2::position_dodge(width=0.9)
                                                     ~^~
NO COPY: R/regional.R:1140:67: style: Only use double-quotes.
ggplot2::scale_fill_manual(values = get_bwi_colors()[2:3], name = 'BWI') +
                                                                  ^~~~~
NO COPY: R/regional.R:1142:15: style: Only use double-quotes.
ggplot2::xlab('Durchmesser [cm]')+
              ^~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:1142:34: style: Put spaces around all infix operators.
ggplot2::xlab('Durchmesser [cm]')+
                                ~^~
NO COPY: R/regional.R:1143:1: style: lines should not be more than 80 characters.
         ggplot2::ylab(expression(paste("J\u00e4hrl. Ernte ohne Rinde [", m^3 ,"]",  sep = "")))  + copyright()+
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:1143:76: style: Put spaces around all infix operators.
         ggplot2::ylab(expression(paste("J\u00e4hrl. Ernte ohne Rinde [", m^3 ,"]",  sep = "")))  + copyright()+
                                                                          ~^~
NO COPY: R/regional.R:1143:79: style: Commas should never have a space before.
         ggplot2::ylab(expression(paste("J\u00e4hrl. Ernte ohne Rinde [", m^3 ,"]",  sep = "")))  + copyright()+
                                                                             ~^
NO COPY: R/regional.R:1143:80: style: Commas should always have a space after.
         ggplot2::ylab(expression(paste("J\u00e4hrl. Ernte ohne Rinde [", m^3 ,"]",  sep = "")))  + copyright()+
                                                                               ^
NO COPY: R/regional.R:1143:112: style: Put spaces around all infix operators.
         ggplot2::ylab(expression(paste("J\u00e4hrl. Ernte ohne Rinde [", m^3 ,"]",  sep = "")))  + copyright()+
                                                                                                              ~^~
NO COPY: R/regional.R:1144:3: style: Place a space before left parenthesis, except in a function call.
if(TITLE_PLOT){ggplot2::ggtitle(title_district)}
  ^
NO COPY: R/regional.R:1144:15: style: Opening curly braces should never go on their own line and should always be followed by a new line.
if(TITLE_PLOT){ggplot2::ggtitle(title_district)}
              ^
NO COPY: R/regional.R:1144:48: style: Closing curly-braces should always be on their own line, unless it's followed by an else.
if(TITLE_PLOT){ggplot2::ggtitle(title_district)}
                                               ^
NO COPY: R/regional.R:1145:27: style: Only use double-quotes.
    d_name <- paste0(gsub(' ', '_', gsub('/', '_', 
                          ^~~
NO COPY: R/regional.R:1145:32: style: Only use double-quotes.
    d_name <- paste0(gsub(' ', '_', gsub('/', '_', 
                               ^~~
NO COPY: R/regional.R:1145:42: style: Only use double-quotes.
    d_name <- paste0(gsub(' ', '_', gsub('/', '_', 
                                         ^~~
NO COPY: R/regional.R:1145:47: style: Only use double-quotes.
    d_name <- paste0(gsub(' ', '_', gsub('/', '_', 
                                              ^~~
NO COPY: R/regional.R:1145:51: style: Trailing whitespace is superfluous.
    d_name <- paste0(gsub(' ', '_', gsub('/', '_', 
                                                  ^
NO COPY: R/regional.R:1146:1: style: lines should not be more than 80 characters.
                                                   file_name_district)), "_", gsub(",", "", gsub(" ", "_", names(stratii[stratum_index]))))
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:1147:18: style: Only use double-quotes.
    type_name <- 'Nutzungen'
                 ^~~~~~~~~~~
NO COPY: R/regional.R:1148:48: style: Only use double-quotes.
    out_name <- paste(d_name, type_name, sep = '_')
                                               ^~~
NO COPY: R/regional.R:1149:34: style: Only use double-quotes.
    out_file <- paste0(out_name, '.eps')
                                 ^~~~~~
NO COPY: R/regional.R:1151:1: style: lines should not be more than 80 characters.
    grDevices::postscript(out_path, width = graphic_width, height = graphic_height,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:1163:18: style: Trailing whitespace is superfluous.
    table_data <- 
                 ^
NO COPY: R/regional.R:1164:22: style: Trailing whitespace is superfluous.
    rbind(table_data, 
                     ^
NO COPY: R/regional.R:1165:46: style: Trailing whitespace is superfluous.
          data.frame(period =  "1987 - 2002", 
                                             ^
NO COPY: R/regional.R:1167:45: style: Words within variable and function names should be separated by '_' rather than '.'.
                     prediction = loss1_all$VB.A.bagr.akl.dkl[7,1,1,,], 
                                            ^~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:1167:65: style: Commas should always have a space after.
                     prediction = loss1_all$VB.A.bagr.akl.dkl[7,1,1,,], 
                                                                ^
NO COPY: R/regional.R:1167:67: style: Commas should always have a space after.
                     prediction = loss1_all$VB.A.bagr.akl.dkl[7,1,1,,], 
                                                                  ^
NO COPY: R/regional.R:1167:69: style: Commas should always have a space after.
                     prediction = loss1_all$VB.A.bagr.akl.dkl[7,1,1,,], 
                                                                    ^
NO COPY: R/regional.R:1167:72: style: Trailing whitespace is superfluous.
                     prediction = loss1_all$VB.A.bagr.akl.dkl[7,1,1,,], 
                                                                       ^
NO COPY: R/regional.R:1168:49: style: Words within variable and function names should be separated by '_' rather than '.'.
                     standard_error = loss1_all$VB.A.bagr.akl.dkl[7,1,2,,]), 
                                                ^~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:1168:69: style: Commas should always have a space after.
                     standard_error = loss1_all$VB.A.bagr.akl.dkl[7,1,2,,]), 
                                                                    ^
NO COPY: R/regional.R:1168:71: style: Commas should always have a space after.
                     standard_error = loss1_all$VB.A.bagr.akl.dkl[7,1,2,,]), 
                                                                      ^
NO COPY: R/regional.R:1168:73: style: Commas should always have a space after.
                     standard_error = loss1_all$VB.A.bagr.akl.dkl[7,1,2,,]), 
                                                                        ^
NO COPY: R/regional.R:1168:77: style: Trailing whitespace is superfluous.
                     standard_error = loss1_all$VB.A.bagr.akl.dkl[7,1,2,,]), 
                                                                            ^
NO COPY: R/regional.R:1169:46: style: Trailing whitespace is superfluous.
          data.frame(period =  "2002 - 2012", 
                                             ^
NO COPY: R/regional.R:1171:45: style: Words within variable and function names should be separated by '_' rather than '.'.
                     prediction = loss2_all$VB.A.bagr.akl.dkl[7,1,1,,], 
                                            ^~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:1171:65: style: Commas should always have a space after.
                     prediction = loss2_all$VB.A.bagr.akl.dkl[7,1,1,,], 
                                                                ^
NO COPY: R/regional.R:1171:67: style: Commas should always have a space after.
                     prediction = loss2_all$VB.A.bagr.akl.dkl[7,1,1,,], 
                                                                  ^
NO COPY: R/regional.R:1171:69: style: Commas should always have a space after.
                     prediction = loss2_all$VB.A.bagr.akl.dkl[7,1,1,,], 
                                                                    ^
NO COPY: R/regional.R:1171:72: style: Trailing whitespace is superfluous.
                     prediction = loss2_all$VB.A.bagr.akl.dkl[7,1,1,,], 
                                                                       ^
NO COPY: R/regional.R:1172:49: style: Words within variable and function names should be separated by '_' rather than '.'.
                     standard_error = loss2_all$VB.A.bagr.akl.dkl[7,1,2,,])
                                                ^~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:1172:69: style: Commas should always have a space after.
                     standard_error = loss2_all$VB.A.bagr.akl.dkl[7,1,2,,])
                                                                    ^
NO COPY: R/regional.R:1172:71: style: Commas should always have a space after.
                     standard_error = loss2_all$VB.A.bagr.akl.dkl[7,1,2,,])
                                                                      ^
NO COPY: R/regional.R:1172:73: style: Commas should always have a space after.
                     standard_error = loss2_all$VB.A.bagr.akl.dkl[7,1,2,,])
                                                                        ^
NO COPY: R/regional.R:1175:79: style: Trailing whitespace is superfluous.
    caption  <- c('J\\"a{}hrliche Ernte in Kubikmetern Erntevolumen ohne Rinde 
                                                                              ^
NO COPY: R/regional.R:1177:1: style: lines should not be more than 80 characters.
    df_cast <-  reshape2::dcast(reshape2::melt(table_data), value.var = "value", formula =
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:1180:48: style: Trailing whitespace is superfluous.
    names(df_cast) <- gsub("period", "Periode", 
                                               ^
NO COPY: R/regional.R:1181:50: style: Only use double-quotes.
                           gsub(".*_prediction", 'Nutzung', 
                                                 ^~~~~~~~~
NO COPY: R/regional.R:1181:60: style: Trailing whitespace is superfluous.
                           gsub(".*_prediction", 'Nutzung', 
                                                           ^
NO COPY: R/regional.R:1188:1: style: lines should not be more than 80 characters.
                                               c(paste0(levels(table_data$x)[1:3],
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:1191:57: style: Put spaces around all infix operators.
                                               collapse =" & "), 
                                                        ^~
NO COPY: R/regional.R:1191:65: style: Trailing whitespace is superfluous.
                                               collapse =" & "), 
                                                                ^
NO COPY: R/regional.R:1194:1: style: lines should not be more than 80 characters.
    table_tex <- ascii_umlauts(file.path(graphic_directory,paste0("table_", out_name, ".tex")))
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:1194:60: style: Commas should always have a space after.
    table_tex <- ascii_umlauts(file.path(graphic_directory,paste0("table_", out_name, ".tex")))
                                                           ^
NO COPY: R/regional.R:1196:60: style: Trailing whitespace is superfluous.
    print(file = table_tex, floating = TRUE, append = TRUE, 
                                                           ^
NO COPY: R/regional.R:1197:48: style: Trailing whitespace is superfluous.
          size = "scriptsize", booktabs = TRUE, 
                                               ^
NO COPY: R/regional.R:1199:53: style: Trailing whitespace is superfluous.
          xtable::xtable(df_cast, caption = caption, 
                                                    ^
NO COPY: R/regional.R:1200:1: style: lines should not be more than 80 characters.
                 align = paste0("ll", paste(rep("|rr", (ncol(df_cast) - 1) / 2), 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:1200:81: style: Trailing whitespace is superfluous.
                 align = paste0("ll", paste(rep("|rr", (ncol(df_cast) - 1) / 2), 
                                                                                ^
NO COPY: R/regional.R:1202:21: style: Put spaces around all infix operators.
          add.to.row= list(pos = list(-1), command = label_row),
                   ~^
NO COPY: R/regional.R:1203:27: style: Put spaces around all infix operators.
          include.rownames=FALSE)
                         ~^~
NO COPY: R/regional.R:1206:67: style: Trailing whitespace is superfluous.
    print(file = dot_district_tex, floating = TRUE, append = TRUE, 
                                                                  ^
NO COPY: R/regional.R:1207:48: style: Trailing whitespace is superfluous.
          size = "scriptsize", booktabs = TRUE, 
                                               ^
NO COPY: R/regional.R:1209:53: style: Trailing whitespace is superfluous.
          xtable::xtable(df_cast, caption = caption, 
                                                    ^
NO COPY: R/regional.R:1210:1: style: lines should not be more than 80 characters.
                 align = paste0("ll", paste(rep("|rr", (ncol(df_cast) - 1) / 2), 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:1210:81: style: Trailing whitespace is superfluous.
                 align = paste0("ll", paste(rep("|rr", (ncol(df_cast) - 1) / 2), 
                                                                                ^
NO COPY: R/regional.R:1212:21: style: Put spaces around all infix operators.
          add.to.row= list(pos = list(-1), command = label_row),
                   ~^
NO COPY: R/regional.R:1213:27: style: Put spaces around all infix operators.
          include.rownames=FALSE)
                         ~^~
NO COPY: R/regional.R:1224:1: style: lines should not be more than 80 characters.
                                prediction = r3_a$Verjg.kl4m.BAF.VArt.BAGR[1,6,],
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:1224:51: style: Words within variable and function names should be separated by '_' rather than '.'.
                                prediction = r3_a$Verjg.kl4m.BAF.VArt.BAGR[1,6,],
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:1224:78: style: Commas should always have a space after.
                                prediction = r3_a$Verjg.kl4m.BAF.VArt.BAGR[1,6,],
                                                                             ^
NO COPY: R/regional.R:1224:80: style: Commas should always have a space after.
                                prediction = r3_a$Verjg.kl4m.BAF.VArt.BAGR[1,6,],
                                                                               ^
NO COPY: R/regional.R:1225:46: style: Words within variable and function names should be separated by '_' rather than '.'.
                                error = r3_a$Verjg.kl4m.BAF.VArt.BAGR[2,6,]
                                             ^~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:1225:73: style: Commas should always have a space after.
                                error = r3_a$Verjg.kl4m.BAF.VArt.BAGR[2,6,]
                                                                        ^
NO COPY: R/regional.R:1225:75: style: Commas should always have a space after.
                                error = r3_a$Verjg.kl4m.BAF.VArt.BAGR[2,6,]
                                                                          ^
NO COPY: R/regional.R:1227:18: style: Put spaces around all infix operators.
    unter_schirm3<- data.frame(group =  c(r3_bs2$BAGR, "Alle Arten"),
                ~^
NO COPY: R/regional.R:1228:1: style: lines should not be more than 80 characters.
                               prediction = r3_bs2$Verjg.kl4m.BAF.VArt.BAGR[1,6,],
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:1228:52: style: Words within variable and function names should be separated by '_' rather than '.'.
                               prediction = r3_bs2$Verjg.kl4m.BAF.VArt.BAGR[1,6,],
                                                   ^~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:1228:79: style: Commas should always have a space after.
                               prediction = r3_bs2$Verjg.kl4m.BAF.VArt.BAGR[1,6,],
                                                                              ^
NO COPY: R/regional.R:1228:81: style: Commas should always have a space after.
                               prediction = r3_bs2$Verjg.kl4m.BAF.VArt.BAGR[1,6,],
                                                                                ^
NO COPY: R/regional.R:1229:47: style: Words within variable and function names should be separated by '_' rather than '.'.
                               error = r3_bs2$Verjg.kl4m.BAF.VArt.BAGR[2,6,]
                                              ^~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:1229:74: style: Commas should always have a space after.
                               error = r3_bs2$Verjg.kl4m.BAF.VArt.BAGR[2,6,]
                                                                         ^
NO COPY: R/regional.R:1229:76: style: Commas should always have a space after.
                               error = r3_bs2$Verjg.kl4m.BAF.VArt.BAGR[2,6,]
                                                                           ^
NO COPY: R/regional.R:1232:50: style: Words within variable and function names should be separated by '_' rather than '.'.
                             prediction = r3_bs1$Verjg.kl4m.BAF.VArt.BAGR[1,6,],
                                                 ^~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:1232:77: style: Commas should always have a space after.
                             prediction = r3_bs1$Verjg.kl4m.BAF.VArt.BAGR[1,6,],
                                                                            ^
NO COPY: R/regional.R:1232:79: style: Commas should always have a space after.
                             prediction = r3_bs1$Verjg.kl4m.BAF.VArt.BAGR[1,6,],
                                                                              ^
NO COPY: R/regional.R:1233:45: style: Words within variable and function names should be separated by '_' rather than '.'.
                             error = r3_bs1$Verjg.kl4m.BAF.VArt.BAGR[2,6,]
                                            ^~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:1233:72: style: Commas should always have a space after.
                             error = r3_bs1$Verjg.kl4m.BAF.VArt.BAGR[2,6,]
                                                                       ^
NO COPY: R/regional.R:1233:74: style: Commas should always have a space after.
                             error = r3_bs1$Verjg.kl4m.BAF.VArt.BAGR[2,6,]
                                                                         ^
NO COPY: R/regional.R:1236:1: style: lines should not be more than 80 characters.
                                prediction = r2_a$Verjg.kl4m.BAF.VArt.BAGR[1,6,],
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:1236:51: style: Words within variable and function names should be separated by '_' rather than '.'.
                                prediction = r2_a$Verjg.kl4m.BAF.VArt.BAGR[1,6,],
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:1236:78: style: Commas should always have a space after.
                                prediction = r2_a$Verjg.kl4m.BAF.VArt.BAGR[1,6,],
                                                                             ^
NO COPY: R/regional.R:1236:80: style: Commas should always have a space after.
                                prediction = r2_a$Verjg.kl4m.BAF.VArt.BAGR[1,6,],
                                                                               ^
NO COPY: R/regional.R:1237:46: style: Words within variable and function names should be separated by '_' rather than '.'.
                                error = r2_a$Verjg.kl4m.BAF.VArt.BAGR[2,6,]
                                             ^~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:1237:73: style: Commas should always have a space after.
                                error = r2_a$Verjg.kl4m.BAF.VArt.BAGR[2,6,]
                                                                        ^
NO COPY: R/regional.R:1237:75: style: Commas should always have a space after.
                                error = r2_a$Verjg.kl4m.BAF.VArt.BAGR[2,6,]
                                                                          ^
NO COPY: R/regional.R:1240:1: style: lines should not be more than 80 characters.
                                prediction = r2_bs2$Verjg.kl4m.BAF.VArt.BAGR[1,6,],
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:1240:53: style: Words within variable and function names should be separated by '_' rather than '.'.
                                prediction = r2_bs2$Verjg.kl4m.BAF.VArt.BAGR[1,6,],
                                                    ^~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:1240:80: style: Commas should always have a space after.
                                prediction = r2_bs2$Verjg.kl4m.BAF.VArt.BAGR[1,6,],
                                                                               ^
NO COPY: R/regional.R:1240:82: style: Commas should always have a space after.
                                prediction = r2_bs2$Verjg.kl4m.BAF.VArt.BAGR[1,6,],
                                                                                 ^
NO COPY: R/regional.R:1241:48: style: Words within variable and function names should be separated by '_' rather than '.'.
                                error = r2_bs2$Verjg.kl4m.BAF.VArt.BAGR[2,6,]
                                               ^~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:1241:75: style: Commas should always have a space after.
                                error = r2_bs2$Verjg.kl4m.BAF.VArt.BAGR[2,6,]
                                                                          ^
NO COPY: R/regional.R:1241:77: style: Commas should always have a space after.
                                error = r2_bs2$Verjg.kl4m.BAF.VArt.BAGR[2,6,]
                                                                            ^
NO COPY: R/regional.R:1244:50: style: Words within variable and function names should be separated by '_' rather than '.'.
                             prediction = r2_bs1$Verjg.kl4m.BAF.VArt.BAGR[1,6,],
                                                 ^~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:1244:77: style: Commas should always have a space after.
                             prediction = r2_bs1$Verjg.kl4m.BAF.VArt.BAGR[1,6,],
                                                                            ^
NO COPY: R/regional.R:1244:79: style: Commas should always have a space after.
                             prediction = r2_bs1$Verjg.kl4m.BAF.VArt.BAGR[1,6,],
                                                                              ^
NO COPY: R/regional.R:1245:45: style: Words within variable and function names should be separated by '_' rather than '.'.
                             error = r2_bs1$Verjg.kl4m.BAF.VArt.BAGR[2,6,]
                                            ^~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:1245:72: style: Commas should always have a space after.
                             error = r2_bs1$Verjg.kl4m.BAF.VArt.BAGR[2,6,]
                                                                       ^
NO COPY: R/regional.R:1245:74: style: Commas should always have a space after.
                             error = r2_bs1$Verjg.kl4m.BAF.VArt.BAGR[2,6,]
                                                                         ^
NO COPY: R/regional.R:1247:1: style: lines should not be more than 80 characters.
    nv_prozent2  <- r2_a$Verjg.kl4m.BAF.VArt.BAGR[1,1,] / r2_a$Verjg.kl4m.BAF.VArt.BAGR[1,6,]  * 100
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:1247:26: style: Words within variable and function names should be separated by '_' rather than '.'.
    nv_prozent2  <- r2_a$Verjg.kl4m.BAF.VArt.BAGR[1,1,] / r2_a$Verjg.kl4m.BAF.VArt.BAGR[1,6,]  * 100
                         ^~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:1247:53: style: Commas should always have a space after.
    nv_prozent2  <- r2_a$Verjg.kl4m.BAF.VArt.BAGR[1,1,] / r2_a$Verjg.kl4m.BAF.VArt.BAGR[1,6,]  * 100
                                                    ^
NO COPY: R/regional.R:1247:55: style: Commas should always have a space after.
    nv_prozent2  <- r2_a$Verjg.kl4m.BAF.VArt.BAGR[1,1,] / r2_a$Verjg.kl4m.BAF.VArt.BAGR[1,6,]  * 100
                                                      ^
NO COPY: R/regional.R:1247:64: style: Words within variable and function names should be separated by '_' rather than '.'.
    nv_prozent2  <- r2_a$Verjg.kl4m.BAF.VArt.BAGR[1,1,] / r2_a$Verjg.kl4m.BAF.VArt.BAGR[1,6,]  * 100
                                                               ^~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:1247:91: style: Commas should always have a space after.
    nv_prozent2  <- r2_a$Verjg.kl4m.BAF.VArt.BAGR[1,1,] / r2_a$Verjg.kl4m.BAF.VArt.BAGR[1,6,]  * 100
                                                                                          ^
NO COPY: R/regional.R:1247:93: style: Commas should always have a space after.
    nv_prozent2  <- r2_a$Verjg.kl4m.BAF.VArt.BAGR[1,1,] / r2_a$Verjg.kl4m.BAF.VArt.BAGR[1,6,]  * 100
                                                                                            ^
NO COPY: R/regional.R:1248:1: style: lines should not be more than 80 characters.
    nv_prozent3  <- r3_a$Verjg.kl4m.BAF.VArt.BAGR[1,1,] / r3_a$Verjg.kl4m.BAF.VArt.BAGR[1,6,]  * 100
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:1248:26: style: Words within variable and function names should be separated by '_' rather than '.'.
    nv_prozent3  <- r3_a$Verjg.kl4m.BAF.VArt.BAGR[1,1,] / r3_a$Verjg.kl4m.BAF.VArt.BAGR[1,6,]  * 100
                         ^~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:1248:53: style: Commas should always have a space after.
    nv_prozent3  <- r3_a$Verjg.kl4m.BAF.VArt.BAGR[1,1,] / r3_a$Verjg.kl4m.BAF.VArt.BAGR[1,6,]  * 100
                                                    ^
NO COPY: R/regional.R:1248:55: style: Commas should always have a space after.
    nv_prozent3  <- r3_a$Verjg.kl4m.BAF.VArt.BAGR[1,1,] / r3_a$Verjg.kl4m.BAF.VArt.BAGR[1,6,]  * 100
                                                      ^
NO COPY: R/regional.R:1248:64: style: Words within variable and function names should be separated by '_' rather than '.'.
    nv_prozent3  <- r3_a$Verjg.kl4m.BAF.VArt.BAGR[1,1,] / r3_a$Verjg.kl4m.BAF.VArt.BAGR[1,6,]  * 100
                                                               ^~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:1248:91: style: Commas should always have a space after.
    nv_prozent3  <- r3_a$Verjg.kl4m.BAF.VArt.BAGR[1,1,] / r3_a$Verjg.kl4m.BAF.VArt.BAGR[1,6,]  * 100
                                                                                          ^
NO COPY: R/regional.R:1248:93: style: Commas should always have a space after.
    nv_prozent3  <- r3_a$Verjg.kl4m.BAF.VArt.BAGR[1,1,] / r3_a$Verjg.kl4m.BAF.VArt.BAGR[1,6,]  * 100
                                                                                            ^
NO COPY: R/regional.R:1250:34: style: Only use double-quotes.
    df_cast3 <- data.frame(BWI = '2012',
                                 ^~~~~~
NO COPY: R/regional.R:1252:28: style: Only use double-quotes.
                           'Unter Schirm' = unter_schirm3$prediction,
                           ^~~~~~~~~~~~~~
NO COPY: R/regional.R:1256:39: style: Put spaces around all infix operators.
                           "NV Anteil"= nv_prozent3,
                                     ~^
NO COPY: R/regional.R:1259:34: style: Only use double-quotes.
    df_cast2 <- data.frame(BWI = '2002',
                                 ^~~~~~
NO COPY: R/regional.R:1265:39: style: Put spaces around all infix operators.
                           "NV Anteil"= nv_prozent2,
                                     ~^
NO COPY: R/regional.R:1268:7: style: Commented code should be removed.
    # data_frame <- reshape2::melt(df_cast, id.vars = c("BWI", "Artengruppe"))
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:1269:27: style: Only use double-quotes.
    d_name <- paste0(gsub(' ', '_', gsub('/', '_', 
                          ^~~
NO COPY: R/regional.R:1269:32: style: Only use double-quotes.
    d_name <- paste0(gsub(' ', '_', gsub('/', '_', 
                               ^~~
NO COPY: R/regional.R:1269:42: style: Only use double-quotes.
    d_name <- paste0(gsub(' ', '_', gsub('/', '_', 
                                         ^~~
NO COPY: R/regional.R:1269:47: style: Only use double-quotes.
    d_name <- paste0(gsub(' ', '_', gsub('/', '_', 
                                              ^~~
NO COPY: R/regional.R:1269:51: style: Trailing whitespace is superfluous.
    d_name <- paste0(gsub(' ', '_', gsub('/', '_', 
                                                  ^
NO COPY: R/regional.R:1270:1: style: lines should not be more than 80 characters.
                                                   file_name_district)), "_", gsub(",", "", gsub(" ", "_", names(stratii[stratum_index]))))
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:1271:18: style: Only use double-quotes.
    type_name <- 'Naturverj\u00fcngung'
                 ^~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:1272:48: style: Only use double-quotes.
    out_name <- paste(d_name, type_name, sep = '_')
                                               ^~~
NO COPY: R/regional.R:1276:74: style: Trailing whitespace is superfluous.
    caption  <- c('Verj\\"ungung in Hektar, Anteil der Naturverj\\"ungung 
                                                                         ^
NO COPY: R/regional.R:1279:1: style: lines should not be more than 80 characters.
                  print(file = dot_district_tex, floating = TRUE, append = TRUE, 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:1279:81: style: Trailing whitespace is superfluous.
                  print(file = dot_district_tex, floating = TRUE, append = TRUE, 
                                                                                ^
NO COPY: R/regional.R:1281:70: style: Trailing whitespace is superfluous.
                        xtable::xtable(table_data, caption = caption, 
                                                                     ^
NO COPY: R/regional.R:1282:68: style: Trailing whitespace is superfluous.
                               align = paste0("ll", paste(rep("rr", 
                                                                   ^
NO COPY: R/regional.R:1283:1: style: lines should not be more than 80 characters.
                                                              ceiling((ncol(df_cast) - 1)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:1283:71: style: Place a space before left parenthesis, except in a function call.
                                                              ceiling((ncol(df_cast) - 1)
                                                                      ^
NO COPY: R/regional.R:1284:77: style: Trailing whitespace is superfluous.
                                                                      / 2)), 
                                                                            ^
NO COPY: R/regional.R:1286:41: style: Put spaces around all infix operators.
                        include.rownames=FALSE)
                                       ~^~
NO COPY: R/regional.R:1288:1: style: lines should not be more than 80 characters.
                  table_tex <- ascii_umlauts(file.path(graphic_directory,paste0("table_", out_name, ".tex")))
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:1288:74: style: Commas should always have a space after.
                  table_tex <- ascii_umlauts(file.path(graphic_directory,paste0("table_", out_name, ".tex")))
                                                                         ^
NO COPY: R/regional.R:1289:1: style: lines should not be more than 80 characters.
                  to_tex(table_tex_front_matter(), file_name = table_tex, append = FALSE)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:1290:75: style: Trailing whitespace is superfluous.
                  print(file = table_tex, floating = FALSE, append = TRUE, 
                                                                          ^
NO COPY: R/regional.R:1292:48: style: Trailing whitespace is superfluous.
                        xtable::xtable(df_cast, 
                                               ^
NO COPY: R/regional.R:1293:68: style: Trailing whitespace is superfluous.
                               align = paste0("ll", paste(rep("rr", 
                                                                   ^
NO COPY: R/regional.R:1294:1: style: lines should not be more than 80 characters.
                                                              ceiling((ncol(df_cast) - 1)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:1294:71: style: Place a space before left parenthesis, except in a function call.
                                                              ceiling((ncol(df_cast) - 1)
                                                                      ^
NO COPY: R/regional.R:1295:77: style: Trailing whitespace is superfluous.
                                                                      / 2)), 
                                                                            ^
NO COPY: R/regional.R:1297:41: style: Put spaces around all infix operators.
                        include.rownames=FALSE)
                                       ~^~
NO COPY: R/regional.R:1303:1: style: lines should not be more than 80 characters.
plot_silviculturally_relevant <- function(relevant_species_2, relevant_species_3, 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:1303:82: style: Trailing whitespace is superfluous.
plot_silviculturally_relevant <- function(relevant_species_2, relevant_species_3, 
                                                                                 ^
NO COPY: R/regional.R:1310:1: style: lines should not be more than 80 characters.
                              species_groups_labels = c(district_groups$ba.text, "Alle BA")
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:1313:1: style: lines should not be more than 80 characters.
                        data.frame(bwi = "2002", species=relevant_species_2$FBA, 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:1313:57: style: Put spaces around all infix operators.
                        data.frame(bwi = "2002", species=relevant_species_2$FBA, 
                                                       ~^~
NO COPY: R/regional.R:1313:81: style: Trailing whitespace is superfluous.
                        data.frame(bwi = "2002", species=relevant_species_2$FBA, 
                                                                                ^
NO COPY: R/regional.R:1314:1: style: lines should not be more than 80 characters.
                                   prediction=round(relevant_species_2$"FBA.Fl\u00e4che"[1, , 2]*100, 1), 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:1314:46: style: Put spaces around all infix operators.
                                   prediction=round(relevant_species_2$"FBA.Fl\u00e4che"[1, , 2]*100, 1), 
                                            ~^~
NO COPY: R/regional.R:1314:93: style: Commas should never have a space before.
                                   prediction=round(relevant_species_2$"FBA.Fl\u00e4che"[1, , 2]*100, 1), 
                                                                                           ~^
NO COPY: R/regional.R:1314:97: style: Put spaces around all infix operators.
                                   prediction=round(relevant_species_2$"FBA.Fl\u00e4che"[1, , 2]*100, 1), 
                                                                                               ~^~
NO COPY: R/regional.R:1314:106: style: Trailing whitespace is superfluous.
                                   prediction=round(relevant_species_2$"FBA.Fl\u00e4che"[1, , 2]*100, 1), 
                                                                                                         ^
NO COPY: R/regional.R:1315:1: style: lines should not be more than 80 characters.
                                   standard_error=round(relevant_species_2$"FBA.Fl\u00e4che"[2, , 2]*100, 2)),
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:1315:50: style: Put spaces around all infix operators.
                                   standard_error=round(relevant_species_2$"FBA.Fl\u00e4che"[2, , 2]*100, 2)),
                                                ~^~
NO COPY: R/regional.R:1315:97: style: Commas should never have a space before.
                                   standard_error=round(relevant_species_2$"FBA.Fl\u00e4che"[2, , 2]*100, 2)),
                                                                                               ~^
NO COPY: R/regional.R:1315:101: style: Put spaces around all infix operators.
                                   standard_error=round(relevant_species_2$"FBA.Fl\u00e4che"[2, , 2]*100, 2)),
                                                                                                   ~^~
NO COPY: R/regional.R:1316:1: style: lines should not be more than 80 characters.
                        data.frame(bwi = "2012",  species=relevant_species_3$FBA, 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:1316:58: style: Put spaces around all infix operators.
                        data.frame(bwi = "2012",  species=relevant_species_3$FBA, 
                                                        ~^~
NO COPY: R/regional.R:1316:82: style: Trailing whitespace is superfluous.
                        data.frame(bwi = "2012",  species=relevant_species_3$FBA, 
                                                                                 ^
NO COPY: R/regional.R:1317:1: style: lines should not be more than 80 characters.
                                   prediction=round(relevant_species_3$"FBA.Fl\u00e4che"[1, , 2]*100, 1), 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:1317:46: style: Put spaces around all infix operators.
                                   prediction=round(relevant_species_3$"FBA.Fl\u00e4che"[1, , 2]*100, 1), 
                                            ~^~
NO COPY: R/regional.R:1317:93: style: Commas should never have a space before.
                                   prediction=round(relevant_species_3$"FBA.Fl\u00e4che"[1, , 2]*100, 1), 
                                                                                           ~^
NO COPY: R/regional.R:1317:97: style: Put spaces around all infix operators.
                                   prediction=round(relevant_species_3$"FBA.Fl\u00e4che"[1, , 2]*100, 1), 
                                                                                               ~^~
NO COPY: R/regional.R:1317:106: style: Trailing whitespace is superfluous.
                                   prediction=round(relevant_species_3$"FBA.Fl\u00e4che"[1, , 2]*100, 1), 
                                                                                                         ^
NO COPY: R/regional.R:1318:1: style: lines should not be more than 80 characters.
                                   standard_error=round(relevant_species_3$"FBA.Fl\u00e4che"[2, , 2]*100, 2))
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:1318:50: style: Put spaces around all infix operators.
                                   standard_error=round(relevant_species_3$"FBA.Fl\u00e4che"[2, , 2]*100, 2))
                                                ~^~
NO COPY: R/regional.R:1318:97: style: Commas should never have a space before.
                                   standard_error=round(relevant_species_3$"FBA.Fl\u00e4che"[2, , 2]*100, 2))
                                                                                               ~^
NO COPY: R/regional.R:1318:101: style: Put spaces around all infix operators.
                                   standard_error=round(relevant_species_3$"FBA.Fl\u00e4che"[2, , 2]*100, 2))
                                                                                                   ~^~
NO COPY: R/regional.R:1321:1: style: lines should not be more than 80 characters.
    d_name <- paste0(gsub(' ', '_', gsub('/', '_', file_name_district)), "_", gsub(",", "", gsub(" ", "_", names(stratii[stratum_index]))))
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:1321:27: style: Only use double-quotes.
    d_name <- paste0(gsub(' ', '_', gsub('/', '_', file_name_district)), "_", gsub(",", "", gsub(" ", "_", names(stratii[stratum_index]))))
                          ^~~
NO COPY: R/regional.R:1321:32: style: Only use double-quotes.
    d_name <- paste0(gsub(' ', '_', gsub('/', '_', file_name_district)), "_", gsub(",", "", gsub(" ", "_", names(stratii[stratum_index]))))
                               ^~~
NO COPY: R/regional.R:1321:42: style: Only use double-quotes.
    d_name <- paste0(gsub(' ', '_', gsub('/', '_', file_name_district)), "_", gsub(",", "", gsub(" ", "_", names(stratii[stratum_index]))))
                                         ^~~
NO COPY: R/regional.R:1321:47: style: Only use double-quotes.
    d_name <- paste0(gsub(' ', '_', gsub('/', '_', file_name_district)), "_", gsub(",", "", gsub(" ", "_", names(stratii[stratum_index]))))
                                              ^~~
NO COPY: R/regional.R:1321:114: warning: no visible binding for global variable 'stratii', Did you mean 'strtoi'?
    d_name <- paste0(gsub(' ', '_', gsub('/', '_', file_name_district)), "_", gsub(",", "", gsub(" ", "_", names(stratii[stratum_index]))))
                                                                                                                 ^~~~~~~
NO COPY: R/regional.R:1321:122: warning: no visible binding for global variable 'stratum_index'
    d_name <- paste0(gsub(' ', '_', gsub('/', '_', file_name_district)), "_", gsub(",", "", gsub(" ", "_", names(stratii[stratum_index]))))
                                                                                                                         ^~~~~~~~~~~~~
NO COPY: R/regional.R:1322:18: style: Only use double-quotes.
    type_name <- 'Forstlich_bedeutsame_Arten'
                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:1323:48: style: Only use double-quotes.
    out_name <- paste(d_name, type_name, sep = '_')
                                               ^~~
NO COPY: R/regional.R:1324:34: style: Only use double-quotes.
    out_file <- paste0(out_name, '.eps')
                                 ^~~~~~
NO COPY: R/regional.R:1326:1: style: lines should not be more than 80 characters.
    grDevices::postscript(out_path, width = graphic_width, height = graphic_height,
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:1333:23: style: Trailing whitespace is superfluous.
                    ), 
                      ^
NO COPY: R/regional.R:1335:1: style: lines should not be more than 80 characters.
         ggplot2::geom_bar(stat = 'identity', position = ggplot2::position_dodge()) +
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:1335:35: style: Only use double-quotes.
         ggplot2::geom_bar(stat = 'identity', position = ggplot2::position_dodge()) +
                                  ^~~~~~~~~~
NO COPY: R/regional.R:1340:64: style: Put spaces around all infix operators.
                       position = ggplot2::position_dodge(width=0.9)
                                                              ~^~
NO COPY: R/regional.R:1342:1: style: lines should not be more than 80 characters.
         ggplot2::scale_fill_manual(values = get_bwi_colors()[2:3], name = 'BWI') +
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:1342:76: style: Only use double-quotes.
         ggplot2::scale_fill_manual(values = get_bwi_colors()[2:3], name = 'BWI') +
                                                                           ^~~~~
NO COPY: R/regional.R:1344:24: style: Only use double-quotes.
         ggplot2::xlab('')+
                       ^~
NO COPY: R/regional.R:1344:27: style: Put spaces around all infix operators.
         ggplot2::xlab('')+
                         ~^~
NO COPY: R/regional.R:1345:24: style: Only use double-quotes.
         ggplot2::ylab('Fl\u00e4chenanteil in Prozent') + copyright() + 
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:1345:72: style: Trailing whitespace is superfluous.
         ggplot2::ylab('Fl\u00e4chenanteil in Prozent') + copyright() + 
                                                                       ^
NO COPY: R/regional.R:1346:12: style: Place a space before left parenthesis, except in a function call.
         if(TITLE_PLOT){ggplot2::ggtitle(title_district)} 
           ^
NO COPY: R/regional.R:1346:24: style: Opening curly braces should never go on their own line and should always be followed by a new line.
         if(TITLE_PLOT){ggplot2::ggtitle(title_district)} 
                       ^
NO COPY: R/regional.R:1346:57: style: Closing curly-braces should always be on their own line, unless it's followed by an else.
         if(TITLE_PLOT){ggplot2::ggtitle(title_district)} 
                                                        ^
NO COPY: R/regional.R:1346:58: style: Trailing whitespace is superfluous.
         if(TITLE_PLOT){ggplot2::ggtitle(title_district)} 
                                                         ^
NO COPY: R/regional.R:1352:1: style: Trailing whitespace is superfluous.
    
^~~~
NO COPY: R/regional.R:1357:29: style: Only use double-quotes.
    names(table_data)  <- c('BWI', 'Art', 'Vorhersage', 'Standardfehler')
                            ^~~~~
NO COPY: R/regional.R:1357:36: style: Only use double-quotes.
    names(table_data)  <- c('BWI', 'Art', 'Vorhersage', 'Standardfehler')
                                   ^~~~~
NO COPY: R/regional.R:1357:43: style: Only use double-quotes.
    names(table_data)  <- c('BWI', 'Art', 'Vorhersage', 'Standardfehler')
                                          ^~~~~~~~~~~~
NO COPY: R/regional.R:1357:57: style: Only use double-quotes.
    names(table_data)  <- c('BWI', 'Art', 'Vorhersage', 'Standardfehler')
                                                        ^~~~~~~~~~~~~~~~
NO COPY: R/regional.R:1358:48: style: Only use double-quotes.
    out_name <- paste(d_name, type_name, sep = '_')
                                               ^~~
NO COPY: R/regional.R:1359:62: style: Commas should always have a space after.
    table_data <- data_frame[data_frame$species != "Alle BA",]
                                                             ^
NO COPY: R/regional.R:1360:29: style: Only use double-quotes.
    names(table_data)  <- c('BWI', 'Art', 'Vorhersage', 'Standardfehler')
                            ^~~~~
NO COPY: R/regional.R:1360:36: style: Only use double-quotes.
    names(table_data)  <- c('BWI', 'Art', 'Vorhersage', 'Standardfehler')
                                   ^~~~~
NO COPY: R/regional.R:1360:43: style: Only use double-quotes.
    names(table_data)  <- c('BWI', 'Art', 'Vorhersage', 'Standardfehler')
                                          ^~~~~~~~~~~~
NO COPY: R/regional.R:1360:57: style: Only use double-quotes.
    names(table_data)  <- c('BWI', 'Art', 'Vorhersage', 'Standardfehler')
                                                        ^~~~~~~~~~~~~~~~
NO COPY: R/regional.R:1361:19: style: Only use double-quotes.
    caption  <- c('Forstlich bedeutsame Arten: Anteile und Fehler in Prozent.')
                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:1362:7: style: Place a space before left parenthesis, except in a function call.
    if(do_errors_relative) {
      ^
NO COPY: R/regional.R:1363:1: style: lines should not be more than 80 characters.
        table_data$Standardfehler <- table_data$Standardfehler / table_data$Vorhersage * 100
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:1364:1: style: lines should not be more than 80 characters.
        caption  <- c('Forstlich bedeutsame Arten: Anteile und Fehler in Prozent.')
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:1364:23: style: Only use double-quotes.
        caption  <- c('Forstlich bedeutsame Arten: Anteile und Fehler in Prozent.')
                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:1366:1: style: lines should not be more than 80 characters.
    df_cast <-  reshape2::dcast(reshape2::melt(table_data), value.var = "value", formula =
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:1369:45: style: Only use double-quotes.
    names(df_cast) <- gsub(".*_Vorhersage", 'Fl\u00e4chenanteil', 
                                            ^~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:1369:66: style: Trailing whitespace is superfluous.
    names(df_cast) <- gsub(".*_Vorhersage", 'Fl\u00e4chenanteil', 
                                                                 ^
NO COPY: R/regional.R:1372:76: style: Trailing whitespace is superfluous.
                                               levels(table_data$BWI), "}", 
                                                                           ^
NO COPY: R/regional.R:1373:57: style: Put spaces around all infix operators.
                                               collapse =" & "), 
                                                        ^~
NO COPY: R/regional.R:1373:65: style: Trailing whitespace is superfluous.
                                               collapse =" & "), 
                                                                ^
NO COPY: R/regional.R:1376:67: style: Trailing whitespace is superfluous.
    print(file = dot_district_tex, floating = TRUE, append = TRUE, 
                                                                  ^
NO COPY: R/regional.R:1377:48: style: Trailing whitespace is superfluous.
          size = "scriptsize", booktabs = TRUE, 
                                               ^
NO COPY: R/regional.R:1379:53: style: Trailing whitespace is superfluous.
          xtable::xtable(df_cast, caption = caption, 
                                                    ^
NO COPY: R/regional.R:1380:1: style: lines should not be more than 80 characters.
                 align = paste0("ll", paste(rep("|rr", (ncol(df_cast) - 1) / 2), 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:1380:81: style: Trailing whitespace is superfluous.
                 align = paste0("ll", paste(rep("|rr", (ncol(df_cast) - 1) / 2), 
                                                                                ^
NO COPY: R/regional.R:1382:21: style: Put spaces around all infix operators.
          add.to.row= list(pos = list(-1), command = label_row),
                   ~^
NO COPY: R/regional.R:1383:27: style: Put spaces around all infix operators.
          include.rownames=FALSE)
                         ~^~
NO COPY: R/regional.R:1384:1: style: lines should not be more than 80 characters.
    table_tex <- ascii_umlauts(file.path(graphic_directory,paste0("table_", out_name, ".tex")))
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:1384:60: style: Commas should always have a space after.
    table_tex <- ascii_umlauts(file.path(graphic_directory,paste0("table_", out_name, ".tex")))
                                                           ^
NO COPY: R/regional.R:1386:60: style: Trailing whitespace is superfluous.
    print(file = table_tex, floating = TRUE, append = TRUE, 
                                                           ^
NO COPY: R/regional.R:1387:48: style: Trailing whitespace is superfluous.
          size = "scriptsize", booktabs = TRUE, 
                                               ^
NO COPY: R/regional.R:1389:53: style: Trailing whitespace is superfluous.
          xtable::xtable(df_cast, caption = caption, 
                                                    ^
NO COPY: R/regional.R:1390:1: style: lines should not be more than 80 characters.
                 align = paste0("ll", paste(rep("|rr", (ncol(df_cast) - 1) / 2), 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/regional.R:1390:81: style: Trailing whitespace is superfluous.
                 align = paste0("ll", paste(rep("|rr", (ncol(df_cast) - 1) / 2), 
                                                                                ^
NO COPY: R/regional.R:1392:21: style: Put spaces around all infix operators.
          add.to.row= list(pos = list(-1), command = label_row),
                   ~^
NO COPY: R/regional.R:1393:27: style: Put spaces around all infix operators.
          include.rownames=FALSE)
                         ~^~
NO COPY: R/statistics.R:20:67: style: Trailing whitespace is superfluous.
        modals <- names(table_of_frequencies)[table_of_frequencies 
                                                                  ^
NO COPY: R/statistics.R:25:50: style: Trailing whitespace is superfluous.
        values_indices <- match(x, unique_values) 
                                                 ^
NO COPY: R/statistics.R:32:1: style: Trailing blank lines are superfluous.

^
NO COPY: R/throw.R:18:68: style: Trailing whitespace is superfluous.
    condition <- structure(class = c("error", "bundeswaldinventur", 
                                                                   ^
NO COPY: R/tree_species_shares.R:4:1: style: Use two spaces to indent, never tabs.
			      statistics_list
^~~
NO COPY: R/tree_species_shares.R:4:1: style: Use two spaces to indent, never tabs.
	    casted_data <- reshape2::dcast(molten_data, value.var = 'value',  group ~ bwi )
^
NO COPY: R/tree_species_shares.R:5:1: style: Use two spaces to indent, never tabs.
			      )[1, 1, , , ]
^~~
NO COPY: R/tree_species_shares.R:7:1: style: Use two spaces to indent, never tabs.
	Reduce(function(...) merge(..., all = T), 
^
NO COPY: R/tree_species_shares.R:8:1: style: Use two spaces to indent, never tabs.
	       list(
^
NO COPY: R/tree_species_shares.R:9:1: style: Use two spaces to indent, never tabs.
		    data.frame(bwi = '1987',
^~
NO COPY: R/tree_species_shares.R:10:1: style: Use two spaces to indent, never tabs.
			       group = tree_species_labels,
^~~
NO COPY: R/tree_species_shares.R:11:1: style: Use two spaces to indent, never tabs.
			       value =
^~~
NO COPY: R/tree_species_shares.R:12:1: style: Use two spaces to indent, never tabs.
			       tree_species_percent(eval(
^~~
NO COPY: R/tree_species_shares.R:12:31: style: Only use double-quotes.
    tree_species_areas <- get('T.FVBN.Bagr.Akl.Dkl', 
                              ^~~~~~~~~~~~~~~~~~~~~
NO COPY: R/tree_species_shares.R:12:53: style: Trailing whitespace is superfluous.
    tree_species_areas <- get('T.FVBN.Bagr.Akl.Dkl', 
                                                    ^
NO COPY: R/tree_species_shares.R:13:1: style: Use two spaces to indent, never tabs.
							 parse(
^~~~~~~
NO COPY: R/tree_species_shares.R:14:1: style: Use two spaces to indent, never tabs.
							       text = 
^~~~~~~
NO COPY: R/tree_species_shares.R:15:1: style: Use two spaces to indent, never tabs.
							       paste(statistics_list,
^~~~~~~
NO COPY: R/tree_species_shares.R:16:1: style: Use two spaces to indent, never tabs.
								     1, 
^~~~~~~~
NO COPY: R/tree_species_shares.R:17:1: style: Use two spaces to indent, never tabs.
								     sep = '.')))
^~~~~~~~
NO COPY: R/tree_species_shares.R:18:1: style: Use two spaces to indent, never tabs.
			       )
^~~
NO COPY: R/tree_species_shares.R:19:1: style: Use two spaces to indent, never tabs.
			       ),
^~~
NO COPY: R/tree_species_shares.R:20:1: style: Use two spaces to indent, never tabs.
		    data.frame(bwi = '2002',
^~
NO COPY: R/tree_species_shares.R:21:1: style: Use two spaces to indent, never tabs.
			       group = tree_species_labels,
^~~
NO COPY: R/tree_species_shares.R:22:1: style: Use two spaces to indent, never tabs.
			       value =
^~~
NO COPY: R/tree_species_shares.R:23:1: style: Use two spaces to indent, never tabs.
			       tree_species_percent(eval(
^~~
NO COPY: R/tree_species_shares.R:24:1: style: Use two spaces to indent, never tabs.
							 parse(
^~~~~~~
NO COPY: R/tree_species_shares.R:25:1: style: Use two spaces to indent, never tabs.
							       text = 
^~~~~~~
NO COPY: R/tree_species_shares.R:26:1: style: Use two spaces to indent, never tabs.
							       paste(statistics_list,
^~~~~~~
NO COPY: R/tree_species_shares.R:27:1: style: Use two spaces to indent, never tabs.
								     2, 
^~~~~~~~
NO COPY: R/tree_species_shares.R:28:1: style: Use two spaces to indent, never tabs.
								     sep = '.')))
^~~~~~~~
NO COPY: R/tree_species_shares.R:29:1: style: Use two spaces to indent, never tabs.
			       )
^~~
NO COPY: R/tree_species_shares.R:30:1: style: Use two spaces to indent, never tabs.
			       ),
^~~
NO COPY: R/tree_species_shares.R:31:1: style: Use two spaces to indent, never tabs.
		    data.frame(bwi = '2012',
^~
NO COPY: R/tree_species_shares.R:32:1: style: Use two spaces to indent, never tabs.
			       group = tree_species_labels,
^~~
NO COPY: R/tree_species_shares.R:33:1: style: Use two spaces to indent, never tabs.
			       value =
^~~
NO COPY: R/tree_species_shares.R:34:1: style: Use two spaces to indent, never tabs.
			       tree_species_percent(eval(
^~~
NO COPY: R/tree_species_shares.R:34:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: R/tree_species_shares.R:35:1: style: Use two spaces to indent, never tabs.
							 parse(
^~~~~~~
NO COPY: R/tree_species_shares.R:36:1: style: Use two spaces to indent, never tabs.
							       text = 
^~~~~~~
NO COPY: R/tree_species_shares.R:36:43: style: Trailing whitespace is superfluous.
	Reduce(function(...) merge(..., all = T), 
                                          ^
NO COPY: R/tree_species_shares.R:37:1: style: Use two spaces to indent, never tabs.
							       paste(statistics_list,
^~~~~~~
NO COPY: R/tree_species_shares.R:38:1: style: Use two spaces to indent, never tabs.
								     3, 
^~~~~~~~
NO COPY: R/tree_species_shares.R:38:38: style: Only use double-quotes.
		    data.frame(bwi = '1987',
                                     ^~~~~~
NO COPY: R/tree_species_shares.R:39:1: style: Use two spaces to indent, never tabs.
								     sep = '.')))
^~~~~~~~
NO COPY: R/tree_species_shares.R:39:38: style: Put spaces around all infix operators.
			       group = tree_species_labels,
                                    ~^~
NO COPY: R/tree_species_shares.R:40:1: style: Use two spaces to indent, never tabs.
			       )
^~~
NO COPY: R/tree_species_shares.R:41:1: style: Use two spaces to indent, never tabs.
			       )
^~~
NO COPY: R/tree_species_shares.R:42:1: style: Use two spaces to indent, never tabs.
		    )
^~
NO COPY: R/tree_species_shares.R:43:1: style: Use two spaces to indent, never tabs.
	       )
^
NO COPY: R/tree_species_shares.R:43:21: style: Trailing whitespace is superfluous.
							       text = 
                    ^
NO COPY: R/tree_species_shares.R:45:16: style: Trailing whitespace is superfluous.
								     1, 
               ^
NO COPY: R/tree_species_shares.R:46:76: style: Only use double-quotes.
								     sep = '.')))
                                                                           ^~~
NO COPY: R/tree_species_shares.R:49:38: style: Only use double-quotes.
		    data.frame(bwi = '2002',
                                     ^~~~~~
NO COPY: R/tree_species_shares.R:50:38: style: Put spaces around all infix operators.
			       group = tree_species_labels,
                                    ~^~
NO COPY: R/tree_species_shares.R:54:21: style: Trailing whitespace is superfluous.
							       text = 
                    ^
NO COPY: R/tree_species_shares.R:56:16: style: Trailing whitespace is superfluous.
								     2, 
               ^
NO COPY: R/tree_species_shares.R:57:76: style: Only use double-quotes.
								     sep = '.')))
                                                                           ^~~
NO COPY: R/tree_species_shares.R:60:38: style: Only use double-quotes.
		    data.frame(bwi = '2012',
                                     ^~~~~~
NO COPY: R/tree_species_shares.R:61:38: style: Put spaces around all infix operators.
			       group = tree_species_labels,
                                    ~^~
NO COPY: R/tree_species_shares.R:65:21: style: Trailing whitespace is superfluous.
							       text = 
                    ^
NO COPY: R/tree_species_shares.R:67:16: style: Trailing whitespace is superfluous.
								     3, 
               ^
NO COPY: R/tree_species_shares.R:68:76: style: Only use double-quotes.
								     sep = '.')))
                                                                           ^~~
NO COPY: R/tree_species_shares.R:90:62: style: Trailing whitespace is superfluous.
    molten_data <- melt_tree_species_percent(statistics_list) 
                                                             ^
NO COPY: R/tree_species_shares.R:91:1: style: lines should not be more than 80 characters.
	    casted_data <- reshape2::dcast(molten_data, value.var = 'value',  group ~ bwi )
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/tree_species_shares.R:91:25: style: Put spaces around all infix operators.
	    casted_data <- reshape2::dcast(molten_data, value.var = 'value',  group ~ bwi )
                       ~^~~
NO COPY: R/tree_species_shares.R:91:67: style: Put spaces around all infix operators.
	    casted_data <- reshape2::dcast(molten_data, value.var = 'value',  group ~ bwi )
                                                                 ~^~
NO COPY: R/tree_species_shares.R:91:69: style: Only use double-quotes.
	    casted_data <- reshape2::dcast(molten_data, value.var = 'value',  group ~ bwi )
                                                                    ^~~~~~~
NO COPY: R/tree_species_shares.R:92:30: style: Only use double-quotes.
    names(casted_data)[1] <- 'Baumartengruppe'
                             ^~~~~~~~~~~~~~~~~
NO COPY: R/utils.R:13:35: style: Put spaces around all infix operators.
    golden_ratio  <- (1 + sqrt(5))/2
                                 ~^~
NO COPY: R/utils.R:37:52: style: Trailing whitespace is superfluous.
find_files <- function(file_names = NA, path = ".", 
                                                   ^
NO COPY: R/utils.R:39:59: style: Trailing whitespace is superfluous.
                       all.files = TRUE, recursive = TRUE, 
                                                          ^
NO COPY: R/utils.R:41:7: style: Place a space before left parenthesis, except in a function call.
    if(isTRUE(is.na(file_names))) {
      ^
NO COPY: R/utils.R:42:65: style: Trailing whitespace is superfluous.
        file_names <- list.files(path = path, pattern = pattern, 
                                                                ^
NO COPY: R/utils.R:43:57: style: Trailing whitespace is superfluous.
                                  all.files = all.files, 
                                                        ^
NO COPY: R/utils.R:44:57: style: Trailing whitespace is superfluous.
                                  recursive = recursive, 
                                                        ^
NO COPY: R/utils.R:45:61: style: Trailing whitespace is superfluous.
                                  ignore.case = ignore.case, 
                                                            ^
NO COPY: R/utils.R:50:11: style: Place a space before left parenthesis, except in a function call.
        if(! all(file_exists)) warning("file(s) ", 
          ^
NO COPY: R/utils.R:50:51: style: Trailing whitespace is superfluous.
        if(! all(file_exists)) warning("file(s) ", 
                                                  ^
NO COPY: R/utils.R:51:72: style: Trailing whitespace is superfluous.
                                       paste(file_names[! file_exists], 
                                                                       ^
NO COPY: R/utils.R:52:63: style: Trailing whitespace is superfluous.
                                             collapse = ", "), 
                                                              ^
NO COPY: R/utils.R:59:1: style: Trailing blank lines are superfluous.

^
NO COPY: R/variable_getters.R:5:1: style: Use two spaces to indent, never tabs.
		)
^~
NO COPY: R/variable_getters.R:21:54: style: Opening curly braces should never go on their own line and should always be followed by a new line.
get_bwi_species_groups <- function(type = "default") { 
                                                     ^
NO COPY: R/variable_getters.R:21:55: style: Trailing whitespace is superfluous.
get_bwi_species_groups <- function(type = "default") { 
                                                      ^
NO COPY: R/variable_getters.R:23:72: style: Trailing whitespace is superfluous.
                "regional" = list(bagr.lab = c("FI", "TA", "DGL", "KI", 
                                                                       ^
NO COPY: R/variable_getters.R:24:72: style: Trailing whitespace is superfluous.
                                               "SNB", "BU", "EI", "ES", 
                                                                       ^
NO COPY: R/variable_getters.R:25:77: style: Trailing whitespace is superfluous.
                                               "BAH", "HBU", "SBLB", "ALN"), 
                                                                            ^
NO COPY: R/variable_getters.R:26:35: style: Put spaces around all infix operators.
                         ba.grupp =list(c(10), c(30), c(40), c(20), 
                                  ^~
NO COPY: R/variable_getters.R:26:68: style: Trailing whitespace is superfluous.
                         ba.grupp =list(c(10), c(30), c(40), c(20), 
                                                                   ^
NO COPY: R/variable_getters.R:27:1: style: lines should not be more than 80 characters.
                                        c(50, 51, 11:19, 21:29, 31:39, 90:99), c(100), 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/variable_getters.R:27:87: style: Trailing whitespace is superfluous.
                                        c(50, 51, 11:19, 21:29, 31:39, 90:99), c(100), 
                                                                                      ^
NO COPY: R/variable_getters.R:28:1: style: lines should not be more than 80 characters.
                                        c(110, 111, 112),  c(120), c(140), c(130), 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/variable_getters.R:28:83: style: Trailing whitespace is superfluous.
                                        c(110, 111, 112),  c(120), c(140), c(130), 
                                                                                  ^
NO COPY: R/variable_getters.R:29:1: style: lines should not be more than 80 characters.
                                        c(113, 114, 121, 141:144, 150, 160, 170, 180, 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/variable_getters.R:29:86: style: Trailing whitespace is superfluous.
                                        c(113, 114, 121, 141:144, 150, 160, 170, 180, 
                                                                                     ^
NO COPY: R/variable_getters.R:30:57: style: Trailing whitespace is superfluous.
                                          181, 190:199), 
                                                        ^
NO COPY: R/variable_getters.R:31:1: style: lines should not be more than 80 characters.
                                        c(200, 201, 210:213, 220:224, 230, 240, 250:252, 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/variable_getters.R:31:89: style: Trailing whitespace is superfluous.
                                        c(200, 201, 210:213, 220:224, 230, 240, 250:252, 
                                                                                        ^
NO COPY: R/variable_getters.R:33:1: style: lines should not be more than 80 characters.
                         ba.text = c("Fichte", "Wei\u00dftanne", "Douglasie", "Kiefer", 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/variable_getters.R:33:88: style: Trailing whitespace is superfluous.
                         ba.text = c("Fichte", "Wei\u00dftanne", "Douglasie", "Kiefer", 
                                                                                       ^
NO COPY: R/variable_getters.R:34:1: style: lines should not be more than 80 characters.
                                     "L\u00e4rchen/sNB", "Buche", "Eichen", "Esche", 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/variable_getters.R:34:85: style: Trailing whitespace is superfluous.
                                     "L\u00e4rchen/sNB", "Buche", "Eichen", "Esche", 
                                                                                    ^
NO COPY: R/variable_getters.R:37:58: style: Trailing whitespace is superfluous.
                "default" = list(bagr.lab = c("FI", "TA", 
                                                         ^
NO COPY: R/variable_getters.R:38:66: style: Trailing whitespace is superfluous.
                                              "DGL", "KI", "LAE", 
                                                                 ^
NO COPY: R/variable_getters.R:41:68: style: Trailing whitespace is superfluous.
                         ba.grupp = list(c(10:19, 90:99), c(30:39), 
                                                                   ^
NO COPY: R/variable_getters.R:45:56: style: Trailing whitespace is superfluous.
                         ba.colors = c("grey30", "red", 
                                                       ^
NO COPY: R/variable_getters.R:46:69: style: Trailing whitespace is superfluous.
                                       "violet", "orange", "yellow", 
                                                                    ^
NO COPY: R/variable_getters.R:48:1: style: lines should not be more than 80 characters.
                                       grDevices::rgb(100,190, 150, maxColorValue = 255), "brown"),
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/variable_getters.R:48:59: style: Commas should always have a space after.
                                       grDevices::rgb(100,190, 150, maxColorValue = 255), "brown"),
                                                          ^
NO COPY: R/variable_getters.R:49:56: style: Trailing whitespace is superfluous.
                         ba.text = c("Fichte", "Tanne", 
                                                       ^
NO COPY: R/variable_getters.R:51:55: style: Trailing whitespace is superfluous.
                                     "Buche", "Eiche", 
                                                      ^
NO COPY: R/variable_getters.R:75:34: style: Opening curly braces should never go on their own line and should always be followed by a new line.
get_species_groups <- function() { 
                                 ^
NO COPY: R/variable_getters.R:75:35: style: Trailing whitespace is superfluous.
get_species_groups <- function() { 
                                  ^
NO COPY: R/variable_getters.R:76:55: style: Trailing whitespace is superfluous.
    l <- list(bagr.lab = c("Fichte", "Wei\u00dftanne", 
                                                      ^
NO COPY: R/variable_getters.R:77:66: style: Trailing whitespace is superfluous.
                           "Douglasie", "Kiefer", "L\u00e4rchen", 
                                                                 ^
NO COPY: R/variable_getters.R:78:47: style: Trailing whitespace is superfluous.
                           "sonst. Nadelholz", 
                                              ^
NO COPY: R/variable_getters.R:79:46: style: Trailing whitespace is superfluous.
                           "Buche", "Eichen", 
                                             ^
NO COPY: R/variable_getters.R:81:59: style: Trailing whitespace is superfluous.
                           "Hainbuche", "sonst. Hartholz", 
                                                          ^
NO COPY: R/variable_getters.R:82:57: style: Trailing whitespace is superfluous.
                           "Birken", "Erlen", "Pappeln",  
                                                        ^~
NO COPY: R/variable_getters.R:84:30: style: Trailing whitespace is superfluous.
                           ), 
                             ^
NO COPY: R/variable_getters.R:85:24: style: Put spaces around all infix operators.
              ba.grupp =list(c(10), c(30), 
                       ^~
NO COPY: R/variable_getters.R:85:43: style: Trailing whitespace is superfluous.
              ba.grupp =list(c(10), c(30), 
                                          ^
NO COPY: R/variable_getters.R:86:54: style: Trailing whitespace is superfluous.
                             c(40), c(20), c(50, 51), 
                                                     ^
NO COPY: R/variable_getters.R:87:60: style: Trailing whitespace is superfluous.
                             c(11:19, 21:29, 31:39, 90:99), 
                                                           ^
NO COPY: R/variable_getters.R:88:50: style: Trailing whitespace is superfluous.
                             c(100), c(110, 111), 
                                                 ^
NO COPY: R/variable_getters.R:89:53: style: Trailing whitespace is superfluous.
                             c(112), c(120), c(140), 
                                                    ^
NO COPY: R/variable_getters.R:90:49: style: Trailing whitespace is superfluous.
                             c(130), c(141:199), 
                                                ^
NO COPY: R/variable_getters.R:91:66: style: Trailing whitespace is superfluous.
                             c(200, 201), c(210:213), c(220:224), 
                                                                 ^
NO COPY: R/variable_getters.R:93:32: style: Trailing whitespace is superfluous.
                             ), 
                               ^
NO COPY: R/variable_getters.R:96:26: style: Only use double-quotes.
                         '#DC143C',
                         ^~~~~~~~~
NO COPY: R/variable_getters.R:98:26: style: Only use double-quotes.
                         '#00BFFF', '#483D8B', '#008B8B',
                         ^~~~~~~~~
NO COPY: R/variable_getters.R:98:37: style: Only use double-quotes.
                         '#00BFFF', '#483D8B', '#008B8B',
                                    ^~~~~~~~~
NO COPY: R/variable_getters.R:98:48: style: Only use double-quotes.
                         '#00BFFF', '#483D8B', '#008B8B',
                                               ^~~~~~~~~
NO COPY: R/variable_getters.R:99:26: style: Only use double-quotes.
                         '#6B8E23', get_bwi_species_groups()$ba.colors[8], 
                         ^~~~~~~~~
NO COPY: R/variable_getters.R:99:75: style: Trailing whitespace is superfluous.
                         '#6B8E23', get_bwi_species_groups()$ba.colors[8], 
                                                                          ^
NO COPY: R/variable_getters.R:100:26: style: Only use double-quotes.
                         '#F5DEB3', '#D2691E', '#BC8F8F', 
                         ^~~~~~~~~
NO COPY: R/variable_getters.R:100:37: style: Only use double-quotes.
                         '#F5DEB3', '#D2691E', '#BC8F8F', 
                                    ^~~~~~~~~
NO COPY: R/variable_getters.R:100:48: style: Only use double-quotes.
                         '#F5DEB3', '#D2691E', '#BC8F8F', 
                                               ^~~~~~~~~
NO COPY: R/variable_getters.R:100:58: style: Trailing whitespace is superfluous.
                         '#F5DEB3', '#D2691E', '#BC8F8F', 
                                                         ^
NO COPY: R/variable_getters.R:119:68: style: Trailing whitespace is superfluous.
                grDevices::rgb(124, 252, 000, maxColorValue = 255), 
                                                                   ^
NO COPY: R/variable_getters.R:141:1: style: lines should not be more than 80 characters.
        bwi1 <- c(a = 3575163, nte = 35743, nt = nt) # nte _is_ sum(get_data("trakte.1")[["m"]])
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/variable_getters.R:143:1: style: lines should not be more than 80 characters.
        bwi3 <- c(a = 3575148, nte = 35731, nt = nt)# nte _is_ sum(get_data("trakte.3")[["m"]]))
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: R/variable_getters.R:145:32: style: Trailing whitespace is superfluous.
        # bwi3$a was taken from  
                               ^~
NO COPY: R/zzz.R:7:5: style: Place a space before left parenthesis, except in a function call.
  if(any(toset)) options(op.package[toset])
    ^
NO COPY: tests/runit.R:13:1: style: lines should not be more than 80 characters.
    unit_dir <- system.file("inst", "runit_tests", package = "bundeswaldinventur")
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: tests/testthat/test_abbreviations_and_labels.R:115:1: style: lines should not be more than 80 characters.
  expect_is(get_label_for_abbreviation("Baumartenfläche", "text_label"), "character")
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: tests/testthat/test_abbreviations_and_labels.R:116:1: style: lines should not be more than 80 characters.
  expect_is(get_label_for_abbreviation("Baumartenfläche", "axis_label"), "character")
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: tests/testthat/test_abbreviations_and_labels.R:124:1: style: lines should not be more than 80 characters.
  expect_gt(nchar(get_label_for_abbreviation("Baumartenfläche", "text_label")), 0)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: tests/testthat/test_abbreviations_and_labels.R:125:1: style: lines should not be more than 80 characters.
  expect_gt(nchar(get_label_for_abbreviation("Baumartenfläche", "axis_label")), 0)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: tests/testthat/test_abbreviations_and_labels.R:138:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_abbreviations_and_labels.R:158:17: style: Put spaces around all infix operators.
  output_factor <-factor(output_vector)
                ^~~
NO COPY: tests/testthat/test_abbreviations_and_labels.R:159:24: style: Use <-, not =, for assignment.
  names(output_vector) = input_vector
                       ^
NO COPY: tests/testthat/test_abbreviations_and_labels.R:181:17: style: Put spaces around all infix operators.
  output_factor <-factor(output_vector)
                ^~~
NO COPY: tests/testthat/test_abbreviations_and_labels.R:182:24: style: Use <-, not =, for assignment.
  names(output_vector) = input_vector
                       ^
NO COPY: tests/testthat/test_abbreviations_and_labels.R:203:17: style: Put spaces around all infix operators.
  output_factor <-factor(output_vector)
                ^~~
NO COPY: tests/testthat/test_abbreviations_and_labels.R:204:24: style: Use <-, not =, for assignment.
  names(output_vector) = input_vector
                       ^
NO COPY: tests/testthat/test_abbreviations_and_labels.R:249:51: style: Trailing whitespace is superfluous.
  label <- c("Stammzahl", "N", "BaumartenflÃ€che") 
                                                  ^
NO COPY: tests/testthat/test_abbreviations_and_labels.R:251:12: style: Use <-, not =, for assignment.
  df_input = data.frame(label)
           ^
NO COPY: tests/testthat/test_abbreviations_and_labels.R:254:13: style: Use <-, not =, for assignment.
  df_output = data.frame(label)
            ^
NO COPY: tests/testthat/test_abbreviations_and_labels.R:255:26: style: Commas should always have a space after.
  revalue_data(df_input[,"label"])
                         ^
NO COPY: tests/testthat/test_abbreviations_and_labels.R:260:40: style: Trailing whitespace is superfluous.
  label <- c("N", "", "test", "1", 100) 
                                       ^
NO COPY: tests/testthat/test_abbreviations_and_labels.R:261:12: style: Use <-, not =, for assignment.
  df_input = data.frame(label)
           ^
NO COPY: tests/testthat/test_abbreviations_and_labels.R:263:13: style: Use <-, not =, for assignment.
  df_output = data.frame(label)
            ^
NO COPY: tests/testthat/test_abbreviations_and_labels.R:264:26: style: Commas should always have a space after.
  revalue_data(df_input[,"label"])
                         ^
NO COPY: tests/testthat/test_bits_and_pieces.R:13:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_bits_and_pieces.R:14:54: style: Commas should always have a space after.
  output <- add_colSums_to_data_frame(head(baeume.3[,0:20]))
                                                     ^
NO COPY: tests/testthat/test_bits_and_pieces.R:15:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_bits_and_pieces.R:17:78: style: Trailing whitespace is superfluous.
    TNr = c(154, 154, 154, 154, 154, 154, 924), ENr = c(1, 1, 1, 1, 1, 1, 6), 
                                                                             ^
NO COPY: tests/testthat/test_bits_and_pieces.R:18:65: style: Trailing whitespace is superfluous.
    STP = c(0, 0, 0, 0, 0, 0, 0), BNr = c(2, 3, 4, 5, 6, 7, 27), 
                                                                ^
NO COPY: tests/testthat/test_bits_and_pieces.R:19:69: style: Trailing whitespace is superfluous.
    Pk = c(1, 1, 1, 1, 1, 1, 6), PL = c(10, 10, 10, 10, 10, 10, 60), 
                                                                    ^
NO COPY: tests/testthat/test_bits_and_pieces.R:20:41: style: Trailing whitespace is superfluous.
    WZ1 = c(-1, -1, -1, -1, -1, -1, -6), 
                                        ^
NO COPY: tests/testthat/test_bits_and_pieces.R:21:16: style: Commas should always have a space after.
    BA = c(100,100, 100, 100, 100, 100, 600), Azi = c(240, 240, 284, 331, 342, 
               ^
NO COPY: tests/testthat/test_bits_and_pieces.R:21:79: style: Trailing whitespace is superfluous.
    BA = c(100,100, 100, 100, 100, 100, 600), Azi = c(240, 240, 284, 331, 342, 
                                                                              ^
NO COPY: tests/testthat/test_bits_and_pieces.R:22:73: style: Trailing whitespace is superfluous.
    367, 1804), Entf = c(4.73000002, 6.98000002, 7.53000021, 3.22000003, 
                                                                        ^
NO COPY: tests/testthat/test_bits_and_pieces.R:23:71: style: Trailing whitespace is superfluous.
    8.92000008, 9.56000042, 40.94000078), Du = c(55.5, 58, 48.7999992, 
                                                                      ^
NO COPY: tests/testthat/test_bits_and_pieces.R:24:68: style: Trailing whitespace is superfluous.
    46.2000008, 44.2000008, 52.7999992, 305.5), aMh = c(1.29999995, 
                                                                   ^
NO COPY: tests/testthat/test_bits_and_pieces.R:26:67: style: Trailing whitespace is superfluous.
    ), Bs1 = c(0, 0, 0, 0, 0, 0, 0), Bs2 = c(1, 1, 1, 1, 1, 1, 6), 
                                                                  ^
NO COPY: tests/testthat/test_bits_and_pieces.R:27:63: style: Trailing whitespace is superfluous.
    Alt1 = c(114, 114, 114, 114, 114, 114, 684), Alt2 = c(124, 
                                                              ^
NO COPY: tests/testthat/test_bits_and_pieces.R:28:68: style: Trailing whitespace is superfluous.
    124, 124, 124, 124, 124, 744), BHD1 = c(52.2000008, 54.7999992, 
                                                                   ^
NO COPY: tests/testthat/test_bits_and_pieces.R:30:62: style: Trailing whitespace is superfluous.
    ), BHD2 = c(55.5, 58, 48.7999992, 46.2000008, 44.2000008, 
                                                             ^
NO COPY: tests/testthat/test_bits_and_pieces.R:31:69: style: Trailing whitespace is superfluous.
    53.7999992, 306.5), D031 = c(42.0999985, 44.2999992, 38.0999985, 
                                                                    ^
NO COPY: tests/testthat/test_bits_and_pieces.R:32:67: style: Trailing whitespace is superfluous.
    35.2000008, 34, 38.2999992, 231.9999962), D032 = c(44.7999992, 
                                                                  ^
NO COPY: tests/testthat/test_bits_and_pieces.R:34:66: style: Trailing whitespace is superfluous.
    )), .Names = c("TNr", "ENr", "STP", "BNr", "Pk", "PL", "WZ1", 
                                                                 ^
NO COPY: tests/testthat/test_bits_and_pieces.R:35:68: style: Trailing whitespace is superfluous.
    "BA", "Azi", "Entf", "Du", "aMh", "Bs1", "Bs2", "Alt1", "Alt2", 
                                                                   ^
NO COPY: tests/testthat/test_bits_and_pieces.R:36:66: style: Trailing whitespace is superfluous.
    "BHD1", "BHD2", "D031", "D032"), row.names = c("1", "2", "3", 
                                                                 ^
NO COPY: tests/testthat/test_bits_and_pieces.R:38:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_bits_and_pieces.R:49:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_bits_and_pieces.R:51:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_bits_and_pieces.R:53:61: style: Trailing whitespace is superfluous.
    TNr = c(154L, 154L, 154L, 154L, 154L, 154L), ENr = c(1L, 
                                                            ^
NO COPY: tests/testthat/test_bits_and_pieces.R:54:69: style: Trailing whitespace is superfluous.
    1L, 1L, 1L, 1L, 1L), STP = c(0L, 0L, 0L, 0L, 0L, 0L), BNr = 2:7, 
                                                                    ^
NO COPY: tests/testthat/test_bits_and_pieces.R:55:63: style: Trailing whitespace is superfluous.
    Pk = c(1L, 1L, 1L, 1L, 1L, 1L), PL = c(10, 10, 10, 10, 10, 
                                                              ^
NO COPY: tests/testthat/test_bits_and_pieces.R:56:61: style: Trailing whitespace is superfluous.
    10), WZ1 = c(-1L, -1L, -1L, -1L, -1L, -1L), BA = c(100L, 
                                                            ^
NO COPY: tests/testthat/test_bits_and_pieces.R:57:61: style: Trailing whitespace is superfluous.
    100L, 100L, 100L, 100L, 100L), Azi = c(240L, 240L, 284L, 
                                                            ^
NO COPY: tests/testthat/test_bits_and_pieces.R:58:68: style: Trailing whitespace is superfluous.
    331L, 342L, 367L), Entf = c(4.73000002, 6.98000002, 7.53000021, 
                                                                   ^
NO COPY: tests/testthat/test_bits_and_pieces.R:59:70: style: Trailing whitespace is superfluous.
    3.22000003, 8.92000008, 9.56000042), Du = c(55.5, 58, 48.7999992, 
                                                                     ^
NO COPY: tests/testthat/test_bits_and_pieces.R:60:61: style: Trailing whitespace is superfluous.
    46.2000008, 44.2000008, 52.7999992), aMh = c(1.29999995, 
                                                            ^
NO COPY: tests/testthat/test_bits_and_pieces.R:61:70: style: Trailing whitespace is superfluous.
    1.29999995, 1.29999995, 1.29999995, 1.29999995, 1.5), Bs1 = c(0L, 
                                                                     ^
NO COPY: tests/testthat/test_bits_and_pieces.R:62:73: style: Trailing whitespace is superfluous.
    0L, 0L, 0L, 0L, 0L), Bs2 = c(1L, 1L, 1L, 1L, 1L, 1L), Alt1 = c(114L, 
                                                                        ^
NO COPY: tests/testthat/test_bits_and_pieces.R:63:62: style: Trailing whitespace is superfluous.
    114L, 114L, 114L, 114L, 114L), Alt2 = c(124L, 124L, 124L, 
                                                             ^
NO COPY: tests/testthat/test_bits_and_pieces.R:64:72: style: Trailing whitespace is superfluous.
    124L, 124L, 124L), BHD1 = c(40, 40, 40, 40, 40, 40), BHD2 = c(55.5, 
                                                                       ^
NO COPY: tests/testthat/test_bits_and_pieces.R:65:78: style: Trailing whitespace is superfluous.
    58, 48.7999992, 46.2000008, 44.2000008, 53.7999992), D031 = c(42.0999985, 
                                                                             ^
NO COPY: tests/testthat/test_bits_and_pieces.R:66:78: style: Trailing whitespace is superfluous.
    44.2999992, 38.0999985, 35.2000008, 34, 38.2999992), D032 = c(44.7999992, 
                                                                             ^
NO COPY: tests/testthat/test_bits_and_pieces.R:67:76: style: Trailing whitespace is superfluous.
    46.9000015, 39.2999992, 37.2000008, 35.5999985, 41)), .Names = c("TNr", 
                                                                           ^
NO COPY: tests/testthat/test_bits_and_pieces.R:68:65: style: Trailing whitespace is superfluous.
    "ENr", "STP", "BNr", "Pk", "PL", "WZ1", "BA", "Azi", "Entf", 
                                                                ^
NO COPY: tests/testthat/test_bits_and_pieces.R:69:71: style: Trailing whitespace is superfluous.
    "Du", "aMh", "Bs1", "Bs2", "Alt1", "Alt2", "BHD1", "BHD2", "D031", 
                                                                      ^
NO COPY: tests/testthat/test_bits_and_pieces.R:71:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:13:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:17:1: style: lines should not be more than 80 characters.
    list(A.ob = 500, A.b = 500), list(D.unt = 0, D.ob = 500, D.b = 500, Ndh = F),
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:18:19: style: Commas should always have a space after.
    list(Wa = c(3,5), Begehbar = 1))
                  ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:19:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:21:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:23:58: style: Trailing whitespace is superfluous.
    Stratum = structure(list(Wa = c(3, 5), Begehbar = 1), 
                                                         ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:24:55: style: Trailing whitespace is superfluous.
                        .Names = c("Wa", "Begehbar")), 
                                                      ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:25:18: style: Trailing whitespace is superfluous.
    nTE = 13232L, 
                 ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:26:55: style: Trailing whitespace is superfluous.
    HBF = 1323958.42086703, se.HBF = 15760.6334334331, 
                                                      ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:27:53: style: Trailing whitespace is superfluous.
    BL = 900.515854580056, se.BL = 300.037156773676, 
                                                    ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:28:55: style: Trailing whitespace is superfluous.
    iBL = 20811.9219725169, se.iBL = 1467.71561573875, 
                                                      ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:29:56: style: Trailing whitespace is superfluous.
    LK = 1.01667306953515, se.LK = 0.00115571516765233, 
                                                       ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:30:70: style: Trailing whitespace is superfluous.
    Attribute1 = c("BAF", "V_DhmR", "V_DhmR_HB", "oiB", "N", "N_Dh"), 
                                                                     ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:31:78: style: Trailing whitespace is superfluous.
    Attribute2 = c("V_DhmR/ha", "V_DhmR_HB/ha", "oiB/ha", "N/ha", "N_Dh/ha"), 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:32:42: style: Trailing whitespace is superfluous.
    Größen = c("Wert", "Standardfehler"), 
                                         ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:33:29: style: Trailing whitespace is superfluous.
    BAGR = "Alle Baumarten", 
                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:34:34: style: Trailing whitespace is superfluous.
    AKL = "0-500", DKL = "0-500", 
                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:35:56: style: Trailing whitespace is superfluous.
    T.FVBN.Bagr.Akl.Dkl = structure(c(1323958.42086703, 
                                                       ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:36:78: style: Trailing whitespace is superfluous.
      499172421.003156, 472471018.897667, 281853710.407127, 19971566746.7491, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:37:77: style: Trailing whitespace is superfluous.
      829303052.258613, 15867.9526899343, 6944016.9417288, 6708897.51543247, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:38:61: style: Trailing whitespace is superfluous.
      3781709.02605741, 447134968.121792, 12944864.9399848), 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:39:37: style: Trailing whitespace is superfluous.
      .Dim = c(6L, 2L, 1L, 1L, 1L)), 
                                    ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:40:57: style: Trailing whitespace is superfluous.
    FVBN.ha.Bagr.Akl.Dkl = structure(c(377.030285192988, 
                                                        ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:41:79: style: Trailing whitespace is superfluous.
       362.812421808927, 212.887131472411, 15084.7386382951, 626.381492944105, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:42:77: style: Trailing whitespace is superfluous.
       2.71414383506208, 2.7915519015856, 1.3461996624953, 285.293389054937, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:43:57: style: Trailing whitespace is superfluous.
       6.50390734584874), .Dim = c(5L, 2L, 1L, 1L, 1L)), 
                                                        ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:44:63: style: Trailing whitespace is superfluous.
    nT.Bagr.Akl.Dkl = structure(4572L, .Dim = c(1L, 1L, 1L))), 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:45:74: style: Trailing whitespace is superfluous.
      .Names = c("Stratum", "nTE", "HBF", "se.HBF", "BL", "se.BL", "iBL", 
                                                                         ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:46:80: style: Trailing whitespace is superfluous.
                 "se.iBL", "LK", "se.LK", "Attribute1", "Attribute2", "Größen", 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:47:62: style: Trailing whitespace is superfluous.
                 "BAGR", "AKL", "DKL", "T.FVBN.Bagr.Akl.Dkl", 
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:49:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:54:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:56:39: style: Trailing whitespace is superfluous.
    baeume.3, ecken.3, trakte.3, A, 2, 
                                      ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:58:1: style: lines should not be more than 80 characters.
    list(A.ob = 500, A.b = 500), list(D.unt = 0, D.ob = 500, D.b = 500, Ndh = F),
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:60:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:62:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:64:77: style: Trailing whitespace is superfluous.
      Stratum = structure(list(Wa = c(3, 5), Begehbar = 1, raumkat_id = 10), 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:65:53: style: Trailing whitespace is superfluous.
        .Names = c("Wa", "Begehbar", "raumkat_id")), 
                                                    ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:66:19: style: Trailing whitespace is superfluous.
      nTE = 1612L, 
                  ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:67:56: style: Trailing whitespace is superfluous.
      HBF = 161292.395287006, se.HBF = 7086.1483812638, 
                                                       ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:68:55: style: Trailing whitespace is superfluous.
      BL = 100.057317175562, se.BL = 100.057284078495, 
                                                      ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:69:57: style: Trailing whitespace is superfluous.
      iBL = 2801.60488091573, se.iBL = 547.263347585043, 
                                                        ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:70:58: style: Trailing whitespace is superfluous.
      LK = 1.01831964624131, se.LK = 0.00347150174722867, 
                                                         ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:71:72: style: Trailing whitespace is superfluous.
      Attribute1 = c("BAF", "V_DhmR", "V_DhmR_HB", "oiB", "N", "N_Dh"), 
                                                                       ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:72:79: style: Trailing whitespace is superfluous.
      Attribute2 = c("BA_Proz", "V_DhmR/ha", "V_DhmR_HB/ha", "oiB/ha", "N/ha", 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:73:33: style: Trailing whitespace is superfluous.
                     "N_Dh/ha"), 
                                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:74:44: style: Trailing whitespace is superfluous.
      Größen = c("Wert", "Standardfehler"), 
                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:75:31: style: Trailing whitespace is superfluous.
      BAGR = "Alle Baumarten", 
                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:76:36: style: Trailing whitespace is superfluous.
      AKL = "0-500", DKL = "0-500", 
                                   ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:77:75: style: Trailing whitespace is superfluous.
      T.FVBN.Bagr.Akl.Dkl = structure(c(161292.395287006, 56304165.047784, 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:78:1: style: lines should not be more than 80 characters.
         51892395.2833678, 34816511.8396993, 2918768063.26897, 90397104.9917944, 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:78:81: style: Trailing whitespace is superfluous.
         51892395.2833678, 34816511.8396993, 2918768063.26897, 90397104.9917944, 
                                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:79:80: style: Trailing whitespace is superfluous.
         7100.93274392309, 2674123.6572945, 2500143.72270852, 1635317.41383287, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:80:76: style: Trailing whitespace is superfluous.
         197580072.49497, 4738494.76435346), .Dim = c(6L, 2L, 1L, 1L, 1L)), 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:81:63: style: Trailing whitespace is superfluous.
      FVBN.ha.Bagr.Akl.Dkl = structure(c(100, 349.08133732899, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:82:79: style: Trailing whitespace is superfluous.
       327.622672560253, 215.859599442034, 18096.1294428995, 560.454848667481, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:83:80: style: Trailing whitespace is superfluous.
       0.340904917237214, 6.55816718493685, 6.63710764124908, 3.76224934694418, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:84:75: style: Trailing whitespace is superfluous.
       937.938541645009, 16.5766025730701), .Dim = c(6L, 2L, 1L, 1L, 1L)), 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:85:64: style: Trailing whitespace is superfluous.
      nT.Bagr.Akl.Dkl = structure(579L, .Dim = c(1L, 1L, 1L))), 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:86:76: style: Trailing whitespace is superfluous.
        .Names = c("Stratum", "nTE", "HBF", "se.HBF", "BL", "se.BL", "iBL", 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:87:79: style: Trailing whitespace is superfluous.
        "se.iBL", "LK", "se.LK", "Attribute1", "Attribute2", "Größen", "BAGR", 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:88:69: style: Trailing whitespace is superfluous.
        "AKL", "DKL", "T.FVBN.Bagr.Akl.Dkl", "FVBN.ha.Bagr.Akl.Dkl", 
                                                                    ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:90:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:95:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:99:1: style: lines should not be more than 80 characters.
    list(A.ob = 500, A.b = 500), list(D.unt = 0, D.ob = 500 ,D.b = 500, Ndh = F),
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:99:61: style: Commas should never have a space before.
    list(A.ob = 500, A.b = 500), list(D.unt = 0, D.ob = 500 ,D.b = 500, Ndh = F),
                                                           ~^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:99:62: style: Commas should always have a space after.
    list(A.ob = 500, A.b = 500), list(D.unt = 0, D.ob = 500 ,D.b = 500, Ndh = F),
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:100:12: style: Put spaces around all infix operators.
    list(Wa=c(3,5), Begehbar = 1, RBez = 2))
          ~^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:100:17: style: Commas should always have a space after.
    list(Wa=c(3,5), Begehbar = 1, RBez = 2))
                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:101:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:103:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:105:68: style: Trailing whitespace is superfluous.
    Stratum = structure(list(Wa = c(3, 5), Begehbar = 1, RBez = 2), 
                                                                   ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:106:63: style: Trailing whitespace is superfluous.
                        .Names = c("Wa", "Begehbar", "RBez")), 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:107:17: style: Trailing whitespace is superfluous.
    nTE = 2963L, 
                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:108:54: style: Trailing whitespace is superfluous.
    HBF = 296469.83079119, se.HBF = 9663.67859624599, 
                                                     ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:109:74: style: Trailing whitespace is superfluous.
    BL = 0, se.BL = 0, iBL = 3602.06341832023, se.iBL = 631.702540979897, 
                                                                         ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:110:56: style: Trailing whitespace is superfluous.
    LK = 1.01229928254185, se.LK = 0.00214967867614619, 
                                                       ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:111:1: style: lines should not be more than 80 characters.
    Attribute1 = c("BAF", "V_DhmR", "V_DhmR_HB", "oiB", "N", "N_Dh", "N_Dh_HB"), 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:111:81: style: Trailing whitespace is superfluous.
    Attribute1 = c("BAF", "V_DhmR", "V_DhmR_HB", "oiB", "N", "N_Dh", "N_Dh_HB"), 
                                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:112:77: style: Trailing whitespace is superfluous.
    Attribute2 = c("BA_Proz", "V_DhmR/ha", "V_DhmR_HB/ha", "oiB/ha", "N/ha", 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:113:45: style: Trailing whitespace is superfluous.
                   "N_Dh/ha", "N_Dh_HB/ha"), 
                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:114:42: style: Trailing whitespace is superfluous.
    Größen = c("Wert", "Standardfehler"), 
                                         ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:115:29: style: Trailing whitespace is superfluous.
    BAGR = "Alle Baumarten", 
                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:116:34: style: Trailing whitespace is superfluous.
    AKL = "0-500", DKL = "0-500", 
                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:117:55: style: Trailing whitespace is superfluous.
    T.FVBN.Bagr.Akl.Dkl = structure(c(296469.83079119, 
                                                      ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:118:79: style: Trailing whitespace is superfluous.
       106923216.140706, 100008403.769605, 59826108.2030502, 4386986904.82035, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:119:79: style: Trailing whitespace is superfluous.
       180658964.658889, 143598673.274855, 9690.72256540016, 3830662.89590808, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:120:79: style: Trailing whitespace is superfluous.
       3647845.53281561, 2085507.25012094, 229778280.913018, 7036486.69582835, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:121:57: style: Trailing whitespace is superfluous.
       5963850.53871336), .Dim = c(7L, 2L, 1L, 1L, 1L)), 
                                                        ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:122:44: style: Trailing whitespace is superfluous.
    FVBN.ha.Bagr.Akl.Dkl = structure(c(100, 
                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:123:78: style: Trailing whitespace is superfluous.
      360.654626662551, 341.479721946587, 201.794928149661, 14797.4142701562, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:124:79: style: Trailing whitespace is superfluous.
      609.367112251401, 490.319144926693, 0.212356040670996, 5.44824453246863, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:125:78: style: Trailing whitespace is superfluous.
      5.64111042644353, 2.61102610371191, 615.279419976061, 12.9502152725948, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:126:56: style: Trailing whitespace is superfluous.
      12.4347248772871), .Dim = c(7L, 2L, 1L, 1L, 1L)), 
                                                       ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:127:62: style: Trailing whitespace is superfluous.
    nT.Bagr.Akl.Dkl = structure(960L, .Dim = c(1L, 1L, 1L))), 
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:128:72: style: Trailing whitespace is superfluous.
    .Names = c("Stratum", "nTE", "HBF", "se.HBF", "BL", "se.BL", "iBL", 
                                                                       ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:129:78: style: Trailing whitespace is superfluous.
               "se.iBL", "LK", "se.LK", "Attribute1", "Attribute2", "Größen", 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:130:60: style: Trailing whitespace is superfluous.
               "BAGR", "AKL", "DKL", "T.FVBN.Bagr.Akl.Dkl", 
                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:137:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:139:39: style: Trailing whitespace is superfluous.
    baeume.3, ecken.3, trakte.3, A, 2, 
                                      ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:140:70: style: Trailing whitespace is superfluous.
    list(bagr.lab = c("Alle Baumarten"), ba.grupp = list(c(10:299))), 
                                                                     ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:141:1: style: lines should not be more than 80 characters.
    list(A.ob = 500, A.b = 500), list(D.unt = 0, D.ob = 500, D.b = 500, Ndh = F),
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:142:43: style: Put spaces around all infix operators.
    list(Wa = c(3, 5), Begehbar = 1, Kreis=317))
                                         ~^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:143:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:145:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:147:71: style: Trailing whitespace is superfluous.
    Stratum = structure(list(Wa = c(3, 5), Begehbar = 1, Kreis = 317), 
                                                                      ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:148:46: style: Trailing whitespace is superfluous.
      .Names = c("Wa", "Begehbar", "Kreis")), 
                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:149:16: style: Trailing whitespace is superfluous.
    nTE = 812L, 
               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:150:55: style: Trailing whitespace is superfluous.
    HBF = 81246.5415465562, se.HBF = 5174.38222729382, 
                                                      ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:151:23: style: Trailing whitespace is superfluous.
    BL = 0, se.BL = 0, 
                      ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:152:55: style: Trailing whitespace is superfluous.
    iBL = 1901.08902633567, se.iBL = 458.103582125262, 
                                                      ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:153:56: style: Trailing whitespace is superfluous.
    LK = 1.02395964691047, se.LK = 0.00575816910102812, 
                                                       ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:154:1: style: lines should not be more than 80 characters.
    Attribute1 = c("BAF", "V_DhmR", "V_DhmR_HB", "oiB", "N", "N_Dh", "N_Dh_HB"), 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:154:81: style: Trailing whitespace is superfluous.
    Attribute1 = c("BAF", "V_DhmR", "V_DhmR_HB", "oiB", "N", "N_Dh", "N_Dh_HB"), 
                                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:155:77: style: Trailing whitespace is superfluous.
    Attribute2 = c("BA_Proz", "V_DhmR/ha", "V_DhmR_HB/ha", "oiB/ha", "N/ha", 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:156:45: style: Trailing whitespace is superfluous.
                   "N_Dh/ha", "N_Dh_HB/ha"), 
                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:157:42: style: Trailing whitespace is superfluous.
    Größen = c("Wert", "Standardfehler"), 
                                         ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:158:29: style: Trailing whitespace is superfluous.
    BAGR = "Alle Baumarten", 
                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:159:34: style: Trailing whitespace is superfluous.
    AKL = "0-500", DKL = "0-500", 
                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:160:56: style: Trailing whitespace is superfluous.
    T.FVBN.Bagr.Akl.Dkl = structure(c(81246.5415465562, 
                                                       ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:161:78: style: Trailing whitespace is superfluous.
       31516799.4095799, 30578244.9336368, 16802928.049064, 606148721.123473, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:162:79: style: Trailing whitespace is superfluous.
       49185294.0346257, 40606444.3330276, 5210.87096314859, 2202578.76140652, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:163:78: style: Trailing whitespace is superfluous.
       2155223.70514306, 1140285.58595566, 54880864.965289, 3659907.96570338, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:164:57: style: Trailing whitespace is superfluous.
       3115521.93599074), .Dim = c(7L, 2L, 1L, 1L, 1L)), 
                                                        ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:165:44: style: Trailing whitespace is superfluous.
    FVBN.ha.Bagr.Akl.Dkl = structure(c(100, 
                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:166:78: style: Trailing whitespace is superfluous.
      387.915581508415, 385.381190255916, 206.814071457251, 7460.60951746648, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:167:79: style: Trailing whitespace is superfluous.
      605.383233530517, 511.767757864628, 0.562343361713656, 10.6423512887404, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:168:77: style: Trailing whitespace is superfluous.
      11.118353079118, 4.78822910337713, 486.739323566499, 24.2703055356332, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:169:56: style: Trailing whitespace is superfluous.
      22.8167382608645), .Dim = c(7L, 2L, 1L, 1L, 1L)), 
                                                       ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:171:74: style: Trailing whitespace is superfluous.
      .Names = c("Stratum", "nTE", "HBF", "se.HBF", "BL", "se.BL", "iBL", 
                                                                         ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:172:77: style: Trailing whitespace is superfluous.
      "se.iBL", "LK", "se.LK", "Attribute1", "Attribute2", "Größen", "BAGR", 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:173:67: style: Trailing whitespace is superfluous.
      "AKL", "DKL", "T.FVBN.Bagr.Akl.Dkl", "FVBN.ha.Bagr.Akl.Dkl", 
                                                                  ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:175:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:180:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:182:39: style: Trailing whitespace is superfluous.
    baeume.3, ecken.3, trakte.3, A, 2, 
                                      ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:183:70: style: Trailing whitespace is superfluous.
    list(bagr.lab = c("Alle Baumarten"), ba.grupp = list(c(10:299))), 
                                                                     ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:185:1: style: lines should not be more than 80 characters.
    list(Wa =c (3, 5), Begehbar = 1, BTyp = c(110, 117, 170, 171, 410, 417, 470, 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:185:13: style: Put spaces around all infix operators.
    list(Wa =c (3, 5), Begehbar = 1, BTyp = c(110, 117, 170, 171, 410, 417, 470, 
            ^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:185:81: style: Trailing whitespace is superfluous.
    list(Wa =c (3, 5), Begehbar = 1, BTyp = c(110, 117, 170, 171, 410, 417, 470, 
                                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:187:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:189:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:191:1: style: lines should not be more than 80 characters.
    Stratum = structure(list(Wa = c(3, 5), Begehbar = 1, BTyp = c(110, 117, 170, 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:191:81: style: Trailing whitespace is superfluous.
    Stratum = structure(list(Wa = c(3, 5), Begehbar = 1, BTyp = c(110, 117, 170, 
                                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:192:72: style: Trailing whitespace is superfluous.
      171, 410, 417, 470, 471)), .Names = c("Wa", "Begehbar", "BTyp")), 
                                                                       ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:193:17: style: Trailing whitespace is superfluous.
    nTE = 3383L, 
                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:194:55: style: Trailing whitespace is superfluous.
    HBF = 338493.904004926, se.HBF = 7519.67030397113, 
                                                      ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:195:23: style: Trailing whitespace is superfluous.
    BL = 0, se.BL = 0, 
                      ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:196:54: style: Trailing whitespace is superfluous.
    iBL = 3702.12073549579, se.iBL = 654.98387831204, 
                                                     ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:197:56: style: Trailing whitespace is superfluous.
    LK = 1.01105797967723, se.LK = 0.00196277383161635, 
                                                       ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:198:1: style: lines should not be more than 80 characters.
    Attribute1 = c("BAF", "V_DhmR", "V_DhmR_HB", "oiB", "N", "N_Dh", "N_Dh_HB"), 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:198:81: style: Trailing whitespace is superfluous.
    Attribute1 = c("BAF", "V_DhmR", "V_DhmR_HB", "oiB", "N", "N_Dh", "N_Dh_HB"), 
                                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:199:77: style: Trailing whitespace is superfluous.
    Attribute2 = c("BA_Proz", "V_DhmR/ha", "V_DhmR_HB/ha", "oiB/ha", "N/ha", 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:200:45: style: Trailing whitespace is superfluous.
                   "N_Dh/ha", "N_Dh_HB/ha"), 
                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:201:42: style: Trailing whitespace is superfluous.
    Größen = c("Wert", "Standardfehler"), 
                                         ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:202:29: style: Trailing whitespace is superfluous.
    BAGR = "Alle Baumarten", 
                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:203:78: style: Trailing whitespace is superfluous.
    AKL = "0-500", DKL = c("0-6.9", "7-24.9", "25-49.9", ">=50", "Alle DKl"), 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:204:56: style: Trailing whitespace is superfluous.
    T.FVBN.Bagr.Akl.Dkl = structure(c(37304.9012718131, 
                                                       ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:205:70: style: Trailing whitespace is superfluous.
      0, 0, 1786129.22891123, 3915146341.773, 0, 0, 2156.42385643185, 
                                                                     ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:206:71: style: Trailing whitespace is superfluous.
      0, 0, 78436.4253330577, 175290864.522302, 0, 0, 68326.957100124, 
                                                                      ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:207:78: style: Trailing whitespace is superfluous.
      17531988.5788234, 15035890.7314138, 10385872.1235559, 141953906.508036, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:208:76: style: Trailing whitespace is superfluous.
      141953906.508036, 105164934.74804, 2404.79585643773, 578057.09762402, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:209:78: style: Trailing whitespace is superfluous.
      539373.651732505, 335008.590401195, 5191124.67605325, 5191124.67605325, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:210:78: style: Trailing whitespace is superfluous.
      4508409.01338848, 175236.442806744, 81198356.9154027, 79526346.8175373, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:211:78: style: Trailing whitespace is superfluous.
      40152634.8802166, 66571316.4327728, 66571316.4327728, 65000142.8432636, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:212:76: style: Trailing whitespace is superfluous.
      4554.14405898848, 2219255.5240554, 2198702.94586245, 1083656.5001311, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:213:76: style: Trailing whitespace is superfluous.
      1786711.9334713, 1786711.9334713, 1766364.58591624, 57625.6028262444, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:214:78: style: Trailing whitespace is superfluous.
      34744130.8135062, 32670600.3115437, 16904234.7975699, 9068967.86147705, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:215:78: style: Trailing whitespace is superfluous.
      9068967.86147705, 8584349.78655162, 2063.45331169241, 1296424.67723976, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:216:78: style: Trailing whitespace is superfluous.
      1266473.74874975, 618620.674735045, 319523.035946601, 319523.035946601, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:217:78: style: Trailing whitespace is superfluous.
      312960.117252792, 338493.904004926, 133474476.307732, 127232837.860495, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:218:78: style: Trailing whitespace is superfluous.
      69228871.0302537, 4132740532.57528, 217594190.802285, 178749427.377855, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:219:77: style: Trailing whitespace is superfluous.
      7549.39112288192, 3436611.58086343, 3329590.45759983, 1726005.7650024, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:220:61: style: Trailing whitespace is superfluous.
      177264824.482535, 6195227.74803133, 5337236.29255608), 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:221:37: style: Trailing whitespace is superfluous.
      .Dim = c(7L, 2L, 1L, 1L, 5L)), 
                                    ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:222:57: style: Trailing whitespace is superfluous.
    FVBN.ha.Bagr.Akl.Dkl = structure(c(11.0208487746563, 
                                                        ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:223:74: style: Trailing whitespace is superfluous.
       0, 0, 47.8792107207851, 104949.918329665, 0, 0, 0.583673610049412, 
                                                                         ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:224:73: style: Trailing whitespace is superfluous.
       0, 0, 2.42970626037512, 6865.71132485023, 0, 0, 20.1855797967723, 
                                                                        ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:225:77: style: Trailing whitespace is superfluous.
       256.58962908494, 222.491355546158, 152.00255600929, 2077.56810097691, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:226:80: style: Trailing whitespace is superfluous.
       2077.56810097691, 1556.16247191326, 0.568757830715619, 5.25208106205962, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:227:77: style: Trailing whitespace is superfluous.
       4.469247775939, 2.93501066720732, 47.6167646707593, 47.6167646707593, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:228:79: style: Trailing whitespace is superfluous.
       38.6845465367212, 51.7694530783025, 463.364558278272, 458.841473021245, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:229:79: style: Trailing whitespace is superfluous.
       229.134044477826, 379.894246690397, 379.894246690397, 375.029942683315, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:230:80: style: Trailing whitespace is superfluous.
       0.686617862423788, 4.91277835181225, 4.90295607178542, 2.25671385524555, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:231:78: style: Trailing whitespace is superfluous.
       3.88960373655127, 3.88960373655127, 3.88617028180968, 17.024118350269, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:232:78: style: Trailing whitespace is superfluous.
       602.928717609574, 573.215194736111, 293.345908216187, 157.37740547066, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:233:79: style: Trailing whitespace is superfluous.
       157.37740547066, 150.614916397555, 0.474309700050553, 9.88992173860037, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:234:79: style: Trailing whitespace is superfluous.
       9.18112668793563, 4.68113835368178, 2.36780302111527, 2.36780302111527, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:235:66: style: Trailing whitespace is superfluous.
       2.18597338996942, 100, 394.318700362149, 380.035724347816, 
                                                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:236:79: style: Trailing whitespace is superfluous.
       204.520288877185, 12209.2022446441, 642.830456406444, 533.912229363177, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:237:80: style: Trailing whitespace is superfluous.
       0.194130689937113, 5.06241070356811, 5.16575117494276, 2.32532817292442, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:238:62: style: Trailing whitespace is superfluous.
       444.638539996433, 11.9974746726932, 11.0383074656163), 
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:239:38: style: Trailing whitespace is superfluous.
       .Dim = c(7L, 2L, 1L, 1L, 5L)), 
                                     ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:240:70: style: Trailing whitespace is superfluous.
    nT.Bagr.Akl.Dkl = structure(c(1753L, 1507L, 1896L, 1328L, 2104L), 
                                                                     ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:241:52: style: Trailing whitespace is superfluous.
      .Dim = c(1L, 1L, 5L))), .Names = c("Stratum", 
                                                   ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:242:68: style: Trailing whitespace is superfluous.
      "nTE", "HBF", "se.HBF", "BL", "se.BL", "iBL", "se.iBL", "LK", 
                                                                   ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:243:68: style: Trailing whitespace is superfluous.
      "se.LK", "Attribute1", "Attribute2", "Größen", "BAGR", "AKL", 
                                                                   ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:245:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:250:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:254:14: style: Put spaces around all infix operators.
    ba.grupp =list(c(10), c(30), c(40), c(11:19,20:29,50,51,31:39,90:99),
             ^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:254:49: style: Commas should always have a space after.
    ba.grupp =list(c(10), c(30), c(40), c(11:19,20:29,50,51,31:39,90:99),
                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:254:55: style: Commas should always have a space after.
    ba.grupp =list(c(10), c(30), c(40), c(11:19,20:29,50,51,31:39,90:99),
                                                      ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:254:58: style: Commas should always have a space after.
    ba.grupp =list(c(10), c(30), c(40), c(11:19,20:29,50,51,31:39,90:99),
                                                         ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:254:61: style: Commas should always have a space after.
    ba.grupp =list(c(10), c(30), c(40), c(11:19,20:29,50,51,31:39,90:99),
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:254:67: style: Commas should always have a space after.
    ba.grupp =list(c(10), c(30), c(40), c(11:19,20:29,50,51,31:39,90:99),
                                                                  ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:255:34: style: Commas should always have a space after.
                   c(100), c(110,111), c(120), c(140),
                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:256:26: style: Commas should always have a space after.
                   c(112,113,114,121,130,141:144,150,160,170,180,181,190:199,
                         ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:256:30: style: Commas should always have a space after.
                   c(112,113,114,121,130,141:144,150,160,170,180,181,190:199,
                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:256:34: style: Commas should always have a space after.
                   c(112,113,114,121,130,141:144,150,160,170,180,181,190:199,
                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:256:38: style: Commas should always have a space after.
                   c(112,113,114,121,130,141:144,150,160,170,180,181,190:199,
                                     ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:256:42: style: Commas should always have a space after.
                   c(112,113,114,121,130,141:144,150,160,170,180,181,190:199,
                                         ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:256:50: style: Commas should always have a space after.
                   c(112,113,114,121,130,141:144,150,160,170,180,181,190:199,
                                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:256:54: style: Commas should always have a space after.
                   c(112,113,114,121,130,141:144,150,160,170,180,181,190:199,
                                                     ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:256:58: style: Commas should always have a space after.
                   c(112,113,114,121,130,141:144,150,160,170,180,181,190:199,
                                                         ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:256:62: style: Commas should always have a space after.
                   c(112,113,114,121,130,141:144,150,160,170,180,181,190:199,
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:256:66: style: Commas should always have a space after.
                   c(112,113,114,121,130,141:144,150,160,170,180,181,190:199,
                                                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:256:70: style: Commas should always have a space after.
                   c(112,113,114,121,130,141:144,150,160,170,180,181,190:199,
                                                                     ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:257:26: style: Commas should always have a space after.
                     200,201,210:213,220:224,230,240,250:252,290:299)))
                         ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:257:30: style: Commas should always have a space after.
                     200,201,210:213,220:224,230,240,250:252,290:299)))
                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:257:38: style: Commas should always have a space after.
                     200,201,210:213,220:224,230,240,250:252,290:299)))
                                     ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:257:46: style: Commas should always have a space after.
                     200,201,210:213,220:224,230,240,250:252,290:299)))
                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:257:50: style: Commas should always have a space after.
                     200,201,210:213,220:224,230,240,250:252,290:299)))
                                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:257:54: style: Commas should always have a space after.
                     200,201,210:213,220:224,230,240,250:252,290:299)))
                                                     ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:257:62: style: Commas should always have a space after.
                     200,201,210:213,220:224,230,240,250:252,290:299)))
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:258:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:260:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:262:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:264:71: style: Trailing whitespace is superfluous.
    Stratum = structure(list(Wa = c(3, 5), Begehbar = 1, Kreis = 316), 
                                                                      ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:265:46: style: Trailing whitespace is superfluous.
      .Names = c("Wa", "Begehbar", "Kreis")), 
                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:266:16: style: Trailing whitespace is superfluous.
    nTE = 297L, 
               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:267:55: style: Trailing whitespace is superfluous.
    HBF = 29717.0232011419, se.HBF = 3162.85479273182, 
                                                      ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:268:23: style: Trailing whitespace is superfluous.
    BL = 0, se.BL = 0, 
                      ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:269:55: style: Trailing whitespace is superfluous.
    iBL = 100.057317175562, se.iBL = 100.057284078495, 
                                                      ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:270:56: style: Trailing whitespace is superfluous.
    LK = 1.00337837837838, se.LK = 0.00339794591000662, 
                                                       ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:271:1: style: lines should not be more than 80 characters.
    Attribute1 = c("BAF", "V_DhmR", "V_DhmR_HB", "oiB", "N", "N_Dh", "N_Dh_HB"), 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:271:81: style: Trailing whitespace is superfluous.
    Attribute1 = c("BAF", "V_DhmR", "V_DhmR_HB", "oiB", "N", "N_Dh", "N_Dh_HB"), 
                                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:272:77: style: Trailing whitespace is superfluous.
    Attribute2 = c("BA_Proz", "V_DhmR/ha", "V_DhmR_HB/ha", "oiB/ha", "N/ha", 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:273:41: style: Trailing whitespace is superfluous.
               "N_Dh/ha", "N_Dh_HB/ha"), 
                                        ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:274:42: style: Trailing whitespace is superfluous.
    Größen = c("Wert", "Standardfehler"), 
                                         ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:275:79: style: Trailing whitespace is superfluous.
    BAGR = c("Fichte", "Weißtanne", "Douglasie", "Kiefer/Lärche/sNB", "Buche", 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:276:69: style: Trailing whitespace is superfluous.
         "Eichen", "Esche", "Bergahorn", "sonst.Laubb.", "Alle BA"), 
                                                                    ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:277:34: style: Trailing whitespace is superfluous.
    AKL = "0-500", DKL = "0-500", 
                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:278:56: style: Trailing whitespace is superfluous.
    T.FVBN.Bagr.Akl.Dkl = structure(c(9251.38118065413, 
                                                       ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:279:79: style: Trailing whitespace is superfluous.
        4704854.47359882, 4652985.88369417, 2165017.5491102, 29633129.6497561, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:280:80: style: Trailing whitespace is superfluous.
        5985075.40253328, 5497020.11944677, 1441.56146041562, 811815.551156784, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:281:80: style: Trailing whitespace is superfluous.
        807790.488417044, 369096.355790286, 8308101.04969283, 1083548.75878614, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:282:79: style: Trailing whitespace is superfluous.
        1015407.30900274, 3603.39989337062, 2227917.14359455, 2096906.6889264, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:283:80: style: Trailing whitespace is superfluous.
        1000285.90718218, 16569976.4249126, 1521214.82628253, 1280339.48994756, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:284:80: style: Trailing whitespace is superfluous.
        729.816156262889, 491058.440669293, 477795.833695836, 219520.006986533, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:285:79: style: Trailing whitespace is superfluous.
        4249069.74253533, 414089.059550639, 384615.542365235, 1056.1490282895, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:286:80: style: Trailing whitespace is superfluous.
        456325.327831603, 446371.159868632, 231087.589992838, 2946894.75263444, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:287:80: style: Trailing whitespace is superfluous.
        478579.353004336, 410463.665641171, 301.488167085453, 143791.357893537, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:288:80: style: Trailing whitespace is superfluous.
        141552.799164715, 72366.1296298497, 1073062.17005704, 197838.186834807, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:289:79: style: Trailing whitespace is superfluous.
        157312.148858735, 758.235870698054, 278980.029994857, 214355.38053261, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:290:80: style: Trailing whitespace is superfluous.
        141580.909814391, 956263.622051718, 239655.925049237, 210166.872489577, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:291:78: style: Trailing whitespace is superfluous.
        228.65685468526, 80644.527967759, 67979.5903564507, 40920.3410387018, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:292:80: style: Trailing whitespace is superfluous.
        448183.026867626, 82307.4197399544, 79666.7612190494, 6487.22616480927, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:293:79: style: Trailing whitespace is superfluous.
        2286940.95742767, 2146879.5533801, 1679252.25804108, 49791083.6865835, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:294:80: style: Trailing whitespace is superfluous.
        4087436.88493682, 2775972.34446494, 989.118138544101, 374863.763565742, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:295:80: style: Trailing whitespace is superfluous.
        361934.514654169, 270898.489985761, 12313018.2781938, 728825.934143853, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:296:80: style: Trailing whitespace is superfluous.
        541984.551182656, 1899.96189417895, 512476.078196245, 466107.013887126, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:297:80: style: Trailing whitespace is superfluous.
        311670.335813932, 2387822.91584557, 556492.136462514, 478419.802606941, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:298:79: style: Trailing whitespace is superfluous.
        485.381570870046, 123317.589503661, 113529.83964438, 73880.3593786742, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:299:80: style: Trailing whitespace is superfluous.
        879792.037936053, 214656.453166455, 206801.201098163, 1693.46874107048, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:300:80: style: Trailing whitespace is superfluous.
        536717.944240402, 519747.660845947, 369138.853635428, 31168529.4382139, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:301:80: style: Trailing whitespace is superfluous.
        911759.913943454, 723832.329863862, 484.957771865559, 152073.760249218, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:302:80: style: Trailing whitespace is superfluous.
        146514.394673401, 102493.493561826, 10443405.9982732, 340989.904076656, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:303:80: style: Trailing whitespace is superfluous.
        288404.964388955, 1943.62383130793, 465629.371123554, 435781.704035294, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:304:79: style: Trailing whitespace is superfluous.
        310385.977223862, 22730170.844267, 1709678.34929921, 1419530.36722745, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:305:80: style: Trailing whitespace is superfluous.
        405.354625422496, 121373.656855803, 111314.509896345, 78386.1157380218, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:306:80: style: Trailing whitespace is superfluous.
        6550300.09623954, 517775.895076269, 437551.365868264, 3023.57659676294, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:307:79: style: Trailing whitespace is superfluous.
        684029.289399674, 613530.509957201, 451064.831783011, 22810969.293763, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:308:80: style: Trailing whitespace is superfluous.
        2108969.05878999, 1561727.31054348, 651.131762349661, 170446.418149709, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:309:78: style: Trailing whitespace is superfluous.
        151977.406904977, 106174.144805458, 7080885.646811, 659909.276569302, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:310:80: style: Trailing whitespace is superfluous.
        561726.948710632, 29717.0232011419, 12153870.6154074, 11592665.5551275, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:311:80: style: Trailing whitespace is superfluous.
        6659484.21259693, 178994840.628028, 17598861.8503014, 14357472.3022317, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:312:79: style: Trailing whitespace is superfluous.
        3172.05719642668, 1410772.91906738, 1359070.5882222, 751252.177424936, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:313:63: style: Trailing whitespace is superfluous.
        26280386.8809863, 2190878.63364911, 1827409.26784034), 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:314:40: style: Trailing whitespace is superfluous.
        .Dim = c(7L, 2L, 10L, 1L, 1L)), 
                                       ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:315:57: style: Trailing whitespace is superfluous.
    FVBN.ha.Bagr.Akl.Dkl = structure(c(31.1315878378378, 
                                                        ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:316:79: style: Trailing whitespace is superfluous.
        508.556979949902, 504.64955874496, 234.021007980683, 3203.10330653362, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:317:79: style: Trailing whitespace is superfluous.
        646.938579835935, 596.191101162025, 3.4726919377973, 30.7827885302855, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:318:80: style: Trailing whitespace is superfluous.
        30.9418306515067, 13.0672532157596, 735.542182128215, 57.8426705989559, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:319:80: style: Trailing whitespace is superfluous.
        54.1854444015562, 12.1257094594595, 618.281958572896, 583.890463286236, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:320:79: style: Trailing whitespace is superfluous.
        277.59503157628, 4598.42840518404, 422.160978880304, 356.514680360859, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:321:80: style: Trailing whitespace is superfluous.
        2.05311416460109, 42.7086556929854, 45.9952213679694, 18.6939634539697, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:322:79: style: Trailing whitespace is superfluous.
        1012.4244075895, 81.0420576048118, 79.9499636946981, 3.55402027027027, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:323:80: style: Trailing whitespace is superfluous.
        432.065282084907, 424.068155674235, 218.802066567347, 2790.22625945802, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:324:1: style: lines should not be more than 80 characters.
        453.136195920593, 389.954784961834, 0.967622834709106, 44.9312235989042, 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:324:81: style: Trailing whitespace is superfluous.
        453.136195920593, 389.954784961834, 0.967622834709106, 44.9312235989042, 
                                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:325:80: style: Trailing whitespace is superfluous.
        44.4115737214436, 22.2075626323015, 1081.57756731275, 107.618123184124, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:326:80: style: Trailing whitespace is superfluous.
        72.9533244558031, 2.55152027027027, 367.933041387266, 283.657846360502, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:327:80: style: Trailing whitespace is superfluous.
        186.724099038005, 1261.16906230162, 316.070413324818, 278.115166871897, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:328:1: style: lines should not be more than 80 characters.
        0.726171476417913, 54.7341215132742, 39.0305426564324, 26.9383460071567, 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:328:81: style: Trailing whitespace is superfluous.
        0.726171476417913, 54.7341215132742, 39.0305426564324, 26.9383460071567, 
                                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:329:69: style: Trailing whitespace is superfluous.
        491.330334754403, 80.4053670001991, 79.7290372820622, 21.83, 
                                                                    ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:330:78: style: Trailing whitespace is superfluous.
        352.529863970745, 332.057565146961, 258.855204887165, 7675.250164189, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:331:80: style: Trailing whitespace is superfluous.
        630.074669989095, 429.359260591518, 2.39918119954934, 20.9843945164291, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:332:80: style: Trailing whitespace is superfluous.
        21.6164691134321, 14.1274665767983, 1608.67552378701, 78.9757893657949, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:333:80: style: Trailing whitespace is superfluous.
        55.1760944764137, 6.39351351351351, 269.729661298131, 246.153199797176, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:334:79: style: Trailing whitespace is superfluous.
        164.040308791886, 1256.77410855519, 292.896472380566, 252.65563861811, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:335:80: style: Trailing whitespace is superfluous.
        1.48888040121936, 32.7343996487312, 29.5923099318718, 18.9437480425798, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:336:80: style: Trailing whitespace is superfluous.
        389.840691698627, 80.2186287769727, 76.2653174816109, 5.69864864864865, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:337:80: style: Trailing whitespace is superfluous.
        316.934072193817, 307.949921045433, 217.977955354575, 18405.1401022682, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:338:79: style: Trailing whitespace is superfluous.
        538.397840970547, 428.86986440479, 1.50143871923019, 42.7361014791029, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:339:79: style: Trailing whitespace is superfluous.
        40.3369610561626, 28.4191373361578, 6581.6632302527, 153.296626794291, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:340:80: style: Trailing whitespace is superfluous.
        129.000394210941, 6.54043918918919, 239.567638358405, 224.968397937196, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:341:79: style: Trailing whitespace is superfluous.
        159.69446979614, 11694.7376740957, 879.634382826389, 732.819826030362, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:342:80: style: Trailing whitespace is superfluous.
        1.19448460710337, 39.8074756252463, 36.9478392258017, 24.3965244575974, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:343:79: style: Trailing whitespace is superfluous.
        3118.9761724347, 169.588603687519, 149.964515763023, 10.1745608108108, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:344:79: style: Trailing whitespace is superfluous.
        226.231837530427, 203.601009753014, 149.18253841028, 7544.36627078825, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:345:80: style: Trailing whitespace is superfluous.
        697.508064140948, 518.261524447566, 1.90283911960051, 29.1643969918993, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:346:80: style: Trailing whitespace is superfluous.
        24.5007523483218, 17.4795483599503, 2013.30910158489, 128.343153914365, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:347:66: style: Trailing whitespace is superfluous.
        123.173181750174, 100, 408.98681315228, 391.419755843504, 
                                                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:348:80: style: Trailing whitespace is superfluous.
        224.096611814774, 6023.30991958677, 592.214830239966, 484.771882389358, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:349:80: style: Trailing whitespace is superfluous.
        0.338650501468664, 18.4925265816391, 19.0019175751375, 8.2616819750122, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:350:62: style: Trailing whitespace is superfluous.
        644.42217016041, 36.3888437274403, 32.6361953838851), 
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:351:40: style: Trailing whitespace is superfluous.
        .Dim = c(7L, 2L, 10L, 1L, 1L)), 
                                       ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:352:75: style: Trailing whitespace is superfluous.
    nT.Bagr.Akl.Dkl = structure(c(67L, 53L,  29L, 24L, 71L, 35L, 35L, 47L, 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:353:45: style: Trailing whitespace is superfluous.
                                  54L, 98L), 
                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:354:32: style: Trailing whitespace is superfluous.
        .Dim = c(10L, 1L, 1L)), 
                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:355:29: style: Trailing whitespace is superfluous.
      Kreis = "Emmendingen", 
                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:356:37: style: Trailing whitespace is superfluous.
      Eigentumsart = "GW", BWI = 3), 
                                    ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:357:74: style: Trailing whitespace is superfluous.
      .Names = c("Stratum", "nTE", "HBF", "se.HBF", "BL", "se.BL", "iBL", 
                                                                         ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:358:80: style: Trailing whitespace is superfluous.
                 "se.iBL", "LK", "se.LK", "Attribute1", "Attribute2", "Größen", 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:359:62: style: Trailing whitespace is superfluous.
                 "BAGR", "AKL", "DKL", "T.FVBN.Bagr.Akl.Dkl", 
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:360:69: style: Trailing whitespace is superfluous.
                 "FVBN.ha.Bagr.Akl.Dkl", "nT.Bagr.Akl.Dkl", "Kreis", 
                                                                    ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:367:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:371:14: style: Put spaces around all infix operators.
    ba.grupp =list(c(10), c(30), c(40), c(11:19,20:29,50,51,31:39,90:99),
             ^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:371:49: style: Commas should always have a space after.
    ba.grupp =list(c(10), c(30), c(40), c(11:19,20:29,50,51,31:39,90:99),
                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:371:55: style: Commas should always have a space after.
    ba.grupp =list(c(10), c(30), c(40), c(11:19,20:29,50,51,31:39,90:99),
                                                      ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:371:58: style: Commas should always have a space after.
    ba.grupp =list(c(10), c(30), c(40), c(11:19,20:29,50,51,31:39,90:99),
                                                         ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:371:61: style: Commas should always have a space after.
    ba.grupp =list(c(10), c(30), c(40), c(11:19,20:29,50,51,31:39,90:99),
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:371:67: style: Commas should always have a space after.
    ba.grupp =list(c(10), c(30), c(40), c(11:19,20:29,50,51,31:39,90:99),
                                                                  ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:372:34: style: Commas should always have a space after.
                   c(100), c(110,111), c(120), c(140),
                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:373:26: style: Commas should always have a space after.
                   c(112,113,114,121,130,141:144,150,160,170,180,181,190:199,
                         ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:373:30: style: Commas should always have a space after.
                   c(112,113,114,121,130,141:144,150,160,170,180,181,190:199,
                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:373:34: style: Commas should always have a space after.
                   c(112,113,114,121,130,141:144,150,160,170,180,181,190:199,
                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:373:38: style: Commas should always have a space after.
                   c(112,113,114,121,130,141:144,150,160,170,180,181,190:199,
                                     ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:373:42: style: Commas should always have a space after.
                   c(112,113,114,121,130,141:144,150,160,170,180,181,190:199,
                                         ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:373:50: style: Commas should always have a space after.
                   c(112,113,114,121,130,141:144,150,160,170,180,181,190:199,
                                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:373:54: style: Commas should always have a space after.
                   c(112,113,114,121,130,141:144,150,160,170,180,181,190:199,
                                                     ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:373:58: style: Commas should always have a space after.
                   c(112,113,114,121,130,141:144,150,160,170,180,181,190:199,
                                                         ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:373:62: style: Commas should always have a space after.
                   c(112,113,114,121,130,141:144,150,160,170,180,181,190:199,
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:373:66: style: Commas should always have a space after.
                   c(112,113,114,121,130,141:144,150,160,170,180,181,190:199,
                                                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:373:70: style: Commas should always have a space after.
                   c(112,113,114,121,130,141:144,150,160,170,180,181,190:199,
                                                                     ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:374:26: style: Commas should always have a space after.
                     200,201,210:213,220:224,230,240,250:252,290:299)))
                         ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:374:30: style: Commas should always have a space after.
                     200,201,210:213,220:224,230,240,250:252,290:299)))
                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:374:38: style: Commas should always have a space after.
                     200,201,210:213,220:224,230,240,250:252,290:299)))
                                     ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:374:46: style: Commas should always have a space after.
                     200,201,210:213,220:224,230,240,250:252,290:299)))
                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:374:50: style: Commas should always have a space after.
                     200,201,210:213,220:224,230,240,250:252,290:299)))
                                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:374:54: style: Commas should always have a space after.
                     200,201,210:213,220:224,230,240,250:252,290:299)))
                                                     ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:374:62: style: Commas should always have a space after.
                     200,201,210:213,220:224,230,240,250:252,290:299)))
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:375:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:378:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:380:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:382:69: style: Trailing whitespace is superfluous.
    Stratum = structure(list(Begehbar = 1, Kreis = 316, WGNr_BW = 1, 
                                                                    ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:383:44: style: Trailing whitespace is superfluous.
                             Wa = c(3, 5)), 
                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:384:57: style: Trailing whitespace is superfluous.
      .Names = c("Begehbar", "Kreis", "WGNr_BW", "Wa")), 
                                                        ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:385:15: style: Trailing whitespace is superfluous.
    nTE = 73L, 
              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:386:55: style: Trailing whitespace is superfluous.
    HBF = 7304.18415381601, se.HBF = 1564.32066347966, 
                                                      ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:387:23: style: Trailing whitespace is superfluous.
    BL = 0, se.BL = 0, 
                      ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:388:25: style: Trailing whitespace is superfluous.
    iBL = 0, se.iBL = 0, 
                        ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:389:23: style: Trailing whitespace is superfluous.
    LK = 1, se.LK = 0, 
                      ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:390:1: style: lines should not be more than 80 characters.
    Attribute1 = c("BAF", "V_DhmR", "V_DhmR_HB", "oiB", "N", "N_Dh", "N_Dh_HB"), 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:390:81: style: Trailing whitespace is superfluous.
    Attribute1 = c("BAF", "V_DhmR", "V_DhmR_HB", "oiB", "N", "N_Dh", "N_Dh_HB"), 
                                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:391:77: style: Trailing whitespace is superfluous.
    Attribute2 = c("BA_Proz", "V_DhmR/ha", "V_DhmR_HB/ha", "oiB/ha", "N/ha", 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:392:45: style: Trailing whitespace is superfluous.
                   "N_Dh/ha", "N_Dh_HB/ha"), 
                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:393:42: style: Trailing whitespace is superfluous.
    Größen = c("Wert", "Standardfehler"), 
                                         ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:394:79: style: Trailing whitespace is superfluous.
    BAGR = c("Fichte", "Weißtanne", "Douglasie", "Kiefer/Lärche/sNB", "Buche", 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:395:73: style: Trailing whitespace is superfluous.
             "Eichen", "Esche", "Bergahorn", "sonst.Laubb.", "Alle BA"), 
                                                                        ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:396:34: style: Trailing whitespace is superfluous.
    AKL = "0-500", DKL = "0-500", 
                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:397:56: style: Trailing whitespace is superfluous.
    T.FVBN.Bagr.Akl.Dkl = structure(c(311.628514343287, 
                                                       ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:398:78: style: Trailing whitespace is superfluous.
      112459.953449929, 112459.953449929, 54263.6618969098, 526971.270093522, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:399:78: style: Trailing whitespace is superfluous.
      288102.037625952, 288102.037625952, 153.795930616965, 62128.9067432938, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:400:76: style: Trailing whitespace is superfluous.
      62128.9067432938, 29472.1325020715, 406035.2672146, 239866.823228435, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:401:78: style: Trailing whitespace is superfluous.
      239866.823228435, 45.9163028518653, 30565.9823231835, 30565.9823231835, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:402:77: style: Trailing whitespace is superfluous.
      13426.812041047, 811107.738299134, 14876.9641409873, 14876.9641409873, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:403:78: style: Trailing whitespace is superfluous.
      36.1746552037027, 21902.1173615191, 21902.1173615191, 9615.94932575065, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:404:78: style: Trailing whitespace is superfluous.
      481812.804362536, 10705.2169639056, 10705.2169639056, 181.393910307576, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:405:78: style: Trailing whitespace is superfluous.
      70929.7353874544, 70929.7353874544, 34746.7581932247, 267561.554435355, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:406:76: style: Trailing whitespace is superfluous.
      28692.321967785, 28692.321967785, 103.687480479013, 52363.0190280143, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:407:76: style: Trailing whitespace is superfluous.
      52363.0190280143, 25295.7787871281, 178950.01554151, 18120.106720116, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:408:76: style: Trailing whitespace is superfluous.
      18120.106720116, 270.945209179704, 108510.47812518, 72450.9765718945, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:409:77: style: Trailing whitespace is superfluous.
      54698.4499556457, 534470.97705129, 56732.5117159203, 39750.8600685482, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:410:78: style: Trailing whitespace is superfluous.
      158.625253571843, 62194.7692260382, 50144.7652770022, 31886.6772027403, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:411:77: style: Trailing whitespace is superfluous.
      371848.13598687, 34321.3101085399, 29610.5764604408, 1180.80641718396, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:412:77: style: Trailing whitespace is superfluous.
      448345.415825624, 405248.315893897, 323264.50058028, 12960691.9926371, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:413:78: style: Trailing whitespace is superfluous.
      459868.823365586, 209854.755651501, 406.001227105484, 167892.126492024, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:414:78: style: Trailing whitespace is superfluous.
      158170.461615579, 119765.864265423, 6265899.62581264, 246655.883326353, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:415:77: style: Trailing whitespace is superfluous.
      90455.0875069383, 1363.4910668831, 345285.075047432, 306389.491904033, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:416:78: style: Trailing whitespace is superfluous.
      206320.134206785, 993836.025580776, 356851.407134764, 318611.855976577, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:417:76: style: Trailing whitespace is superfluous.
      440.9479890022, 106387.884278411, 95151.4126148542, 63439.2172987604, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:418:77: style: Trailing whitespace is superfluous.
      418302.133543037, 196816.62329176, 192371.488219681, 1197.15578281044, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:419:76: style: Trailing whitespace is superfluous.
      353707.32955714, 340992.61884714, 241783.009118535, 22594926.8373659, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:420:78: style: Trailing whitespace is superfluous.
      539334.305955242, 446554.494450903, 458.062417451351, 132068.341816192, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:421:78: style: Trailing whitespace is superfluous.
      127563.459903257, 88490.7389435951, 9576190.43199542, 272123.151473348, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:422:78: style: Trailing whitespace is superfluous.
      261548.156192062, 803.280153748846, 251029.813057056, 229003.009810831, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:423:78: style: Trailing whitespace is superfluous.
      166311.967461259, 16102459.4896615, 735205.489555533, 539240.622431251, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:424:78: style: Trailing whitespace is superfluous.
      285.635371116067, 104123.822350074, 92824.8605213124, 67106.8449405599, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:425:77: style: Trailing whitespace is superfluous.
      6200663.56161003, 353728.882430975, 236760.77031534, 1949.56679650723, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:426:77: style: Trailing whitespace is superfluous.
      516531.062426047, 458377.74268575, 326856.446108839, 15607258.5049018, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:427:78: style: Trailing whitespace is superfluous.
      1752842.89771166, 1274043.20412567, 587.555757457686, 162459.120278185, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:428:78: style: Trailing whitespace is superfluous.
      144226.415042685, 99098.9569059127, 6601265.26253655, 649321.365028553, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:429:78: style: Trailing whitespace is superfluous.
      552217.639742315, 7304.18415381601, 2237364.84519905, 2026417.82687411, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:430:78: style: Trailing whitespace is superfluous.
      1421671.73956253, 70399284.3900263, 4232506.75917342, 3159727.11643917, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:431:78: style: Trailing whitespace is superfluous.
      1564.32066347966, 484582.330210881, 440129.153529142, 308332.364926348, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:432:61: style: Trailing whitespace is superfluous.
      18423738.2652427, 1162086.26267124, 903138.133575245), 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:433:38: style: Trailing whitespace is superfluous.
      .Dim = c(7L, 2L, 10L, 1L, 1L)), 
                                     ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:434:57: style: Trailing whitespace is superfluous.
    FVBN.ha.Bagr.Akl.Dkl = structure(c(4.26643835616438, 
                                                        ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:435:78: style: Trailing whitespace is superfluous.
      360.878251744461, 360.878251744461, 174.129321930834, 1691.02391417563, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:436:78: style: Trailing whitespace is superfluous.
      924.504736779579, 924.504736779579, 1.98914203271638, 59.7829175962038, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:437:78: style: Trailing whitespace is superfluous.
      59.7829175962038, 21.3302209358346, 987.802527222082, 563.902018764255, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:438:79: style: Trailing whitespace is superfluous.
      563.902018764255, 0.628630136986301, 665.689100052223, 665.689100052223, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:439:78: style: Trailing whitespace is superfluous.
      292.419276098174, 17664.9182952713, 324.001786227936, 324.001786227936, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:440:77: style: Trailing whitespace is superfluous.
      0.491772753476959, 153.96244828887, 153.96244828887, 65.0113670069941, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:441:78: style: Trailing whitespace is superfluous.
      10766.2074944019, 155.882244193573, 155.882244193573, 2.48342465753425, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:442:78: style: Trailing whitespace is superfluous.
      391.026001188156, 391.026001188156, 191.554160414245, 1475.03052325004, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:443:77: style: Trailing whitespace is superfluous.
      158.176875503337, 158.176875503337, 1.3232850011797, 163.688165433286, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:444:78: style: Trailing whitespace is superfluous.
      163.688165433286, 77.9508884489261, 1198.21771998929, 30.7342471763807, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:445:78: style: Trailing whitespace is superfluous.
      30.7342471763807, 3.70945205479452, 400.488639211223, 267.400840159685, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:446:77: style: Trailing whitespace is superfluous.
      201.880114880965, 1972.61645138299, 209.387395657151, 146.71180268843, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:447:76: style: Trailing whitespace is superfluous.
      2.0380304957062, 127.076056765456, 87.0496344723989, 62.248517636344, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:448:76: style: Trailing whitespace is superfluous.
      927.173093941511, 60.5285738707677, 53.86284928291, 16.1661643835616, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:449:77: style: Trailing whitespace is superfluous.
      379.694257501462, 343.196234366978, 273.765873792604, 10976.136142236, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:450:76: style: Trailing whitespace is superfluous.
      389.453187815749, 177.721557570776, 4.57459338472482, 38.86523211985, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:451:78: style: Trailing whitespace is superfluous.
      44.3970281001226, 26.0190176830115, 2898.33135985369, 181.182114288417, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:452:77: style: Trailing whitespace is superfluous.
      52.292092393719, 18.6672602739726, 253.236037575767, 224.709570415031, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:453:78: style: Trailing whitespace is superfluous.
      151.317554781218, 728.890749429446, 261.718918298831, 233.673592526656, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:454:76: style: Trailing whitespace is superfluous.
      4.435937289822, 41.8955705219045, 36.4053064114691, 23.7380719226179, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:455:67: style: Trailing whitespace is superfluous.
      243.555524324669, 98.3934737049065, 96.6812825319813, 16.39, 
                                                                  ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:456:77: style: Trailing whitespace is superfluous.
      295.456393090944, 284.83562769636, 201.964533430165, 18873.8401148779, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:457:77: style: Trailing whitespace is superfluous.
      450.513052435916, 373.012853350272, 4.9027366079927, 44.1290476504364, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:458:78: style: Trailing whitespace is superfluous.
      41.6096452683251, 27.8610241361175, 8556.16503925635, 161.078206652445, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:459:78: style: Trailing whitespace is superfluous.
      166.220330076248, 10.9975342465753, 312.505931941079, 285.084859550049, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:460:78: style: Trailing whitespace is superfluous.
      207.041051226144, 20045.8823917316, 915.254144054707, 671.298325888742, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:461:78: style: Trailing whitespace is superfluous.
      3.23799791674348, 69.7608111058834, 64.3213018283016, 42.8423773009671, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:462:76: style: Trailing whitespace is superfluous.
      7157.32293035349, 213.046993067056, 108.97655721908, 26.691095890411, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:463:78: style: Trailing whitespace is superfluous.
      264.946583698206, 235.117741801389, 167.655936023542, 8005.50077733326, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:464:78: style: Trailing whitespace is superfluous.
      899.093532394981, 653.500668152634, 5.41324136672166, 37.1958625659538, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:465:76: style: Trailing whitespace is superfluous.
      29.7373514636894, 21.4832929570357, 2939.91192648178, 165.0509149488, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:466:65: style: Trailing whitespace is superfluous.
      168.585819420047, 100, 306.312765133414, 277.432466679448, 
                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:467:77: style: Trailing whitespace is superfluous.
      194.637992364936, 9638.21323607329, 579.463314456849, 432.59138185726, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:468:80: style: Trailing whitespace is superfluous.
      0, 25.0448324506127, 24.854985577473, 14.9953234935319, 1604.35510526393, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:469:75: style: Trailing whitespace is superfluous.
      87.7091419541325, 72.2166235708881), .Dim = c(7L, 2L, 10L, 1L, 1L)), 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:470:1: style: lines should not be more than 80 characters.
    nT.Bagr.Akl.Dkl = structure(c(6L, 4L, 5L, 5L, 14L, 17L, 16L, 20L, 23L, 25L), 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:470:81: style: Trailing whitespace is superfluous.
    nT.Bagr.Akl.Dkl = structure(c(6L, 4L, 5L, 5L, 14L, 17L, 16L, 20L, 23L, 25L), 
                                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:471:30: style: Trailing whitespace is superfluous.
      .Dim = c(10L, 1L, 1L)), 
                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:472:35: style: Trailing whitespace is superfluous.
    Eigentumsart = "GW", BWI = 3), 
                                  ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:473:72: style: Trailing whitespace is superfluous.
    .Names = c("Stratum", "nTE", "HBF", "se.HBF", "BL", "se.BL", "iBL", 
                                                                       ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:474:77: style: Trailing whitespace is superfluous.
      "se.iBL", "LK", "se.LK", "Attribute1", "Attribute2", "Größen", "BAGR", 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:475:67: style: Trailing whitespace is superfluous.
      "AKL", "DKL", "T.FVBN.Bagr.Akl.Dkl", "FVBN.ha.Bagr.Akl.Dkl", 
                                                                  ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:477:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:482:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:486:14: style: Put spaces around all infix operators.
    ba.grupp =list(c(10), c(30), c(40), c(11:19,20:29,50,51,31:39,90:99),
             ^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:486:49: style: Commas should always have a space after.
    ba.grupp =list(c(10), c(30), c(40), c(11:19,20:29,50,51,31:39,90:99),
                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:486:55: style: Commas should always have a space after.
    ba.grupp =list(c(10), c(30), c(40), c(11:19,20:29,50,51,31:39,90:99),
                                                      ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:486:58: style: Commas should always have a space after.
    ba.grupp =list(c(10), c(30), c(40), c(11:19,20:29,50,51,31:39,90:99),
                                                         ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:486:61: style: Commas should always have a space after.
    ba.grupp =list(c(10), c(30), c(40), c(11:19,20:29,50,51,31:39,90:99),
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:486:67: style: Commas should always have a space after.
    ba.grupp =list(c(10), c(30), c(40), c(11:19,20:29,50,51,31:39,90:99),
                                                                  ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:487:34: style: Commas should always have a space after.
                   c(100), c(110,111), c(120), c(140),
                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:488:26: style: Commas should always have a space after.
                   c(112,113,114,121,130,141:144,150,160,170,180,181,190:199,
                         ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:488:30: style: Commas should always have a space after.
                   c(112,113,114,121,130,141:144,150,160,170,180,181,190:199,
                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:488:34: style: Commas should always have a space after.
                   c(112,113,114,121,130,141:144,150,160,170,180,181,190:199,
                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:488:38: style: Commas should always have a space after.
                   c(112,113,114,121,130,141:144,150,160,170,180,181,190:199,
                                     ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:488:42: style: Commas should always have a space after.
                   c(112,113,114,121,130,141:144,150,160,170,180,181,190:199,
                                         ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:488:50: style: Commas should always have a space after.
                   c(112,113,114,121,130,141:144,150,160,170,180,181,190:199,
                                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:488:54: style: Commas should always have a space after.
                   c(112,113,114,121,130,141:144,150,160,170,180,181,190:199,
                                                     ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:488:58: style: Commas should always have a space after.
                   c(112,113,114,121,130,141:144,150,160,170,180,181,190:199,
                                                         ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:488:62: style: Commas should always have a space after.
                   c(112,113,114,121,130,141:144,150,160,170,180,181,190:199,
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:488:66: style: Commas should always have a space after.
                   c(112,113,114,121,130,141:144,150,160,170,180,181,190:199,
                                                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:488:70: style: Commas should always have a space after.
                   c(112,113,114,121,130,141:144,150,160,170,180,181,190:199,
                                                                     ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:489:26: style: Commas should always have a space after.
                     200,201,210:213,220:224,230,240,250:252,290:299)))
                         ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:489:30: style: Commas should always have a space after.
                     200,201,210:213,220:224,230,240,250:252,290:299)))
                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:489:38: style: Commas should always have a space after.
                     200,201,210:213,220:224,230,240,250:252,290:299)))
                                     ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:489:46: style: Commas should always have a space after.
                     200,201,210:213,220:224,230,240,250:252,290:299)))
                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:489:50: style: Commas should always have a space after.
                     200,201,210:213,220:224,230,240,250:252,290:299)))
                                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:489:54: style: Commas should always have a space after.
                     200,201,210:213,220:224,230,240,250:252,290:299)))
                                                     ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:489:62: style: Commas should always have a space after.
                     200,201,210:213,220:224,230,240,250:252,290:299)))
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:490:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:493:73: style: Trailing whitespace is superfluous.
    c("GW"), c(3), bagr.xx, list(A.ob = 500, A.b = 500), list(D.unt = 0, 
                                                                        ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:495:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:497:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:499:69: style: Trailing whitespace is superfluous.
    Stratum = structure(list(Begehbar = 1, Kreis = c(316, 317, 237), 
                                                                    ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:500:57: style: Trailing whitespace is superfluous.
                             WGNr_BW = 3, Wa = c(3, 5)), 
                                                        ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:501:57: style: Trailing whitespace is superfluous.
      .Names = c("Begehbar", "Kreis", "WGNr_BW", "Wa")), 
                                                        ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:502:17: style: Trailing whitespace is superfluous.
    nTE = 1392L, 
                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:503:55: style: Trailing whitespace is superfluous.
    HBF = 139279.785508382, se.HBF = 6854.63858153578, 
                                                      ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:504:23: style: Trailing whitespace is superfluous.
    BL = 0, se.BL = 0, 
                      ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:505:55: style: Trailing whitespace is superfluous.
    iBL = 2201.26097786236, se.iBL = 547.571025134517, 
                                                      ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:506:56: style: Trailing whitespace is superfluous.
    LK = 1.01605839416058, se.LK = 0.00398199346147201, 
                                                       ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:507:1: style: lines should not be more than 80 characters.
    Attribute1 = c("BAF", "V_DhmR", "V_DhmR_HB", "oiB", "N", "N_Dh", "N_Dh_HB"), 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:507:81: style: Trailing whitespace is superfluous.
    Attribute1 = c("BAF", "V_DhmR", "V_DhmR_HB", "oiB", "N", "N_Dh", "N_Dh_HB"), 
                                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:508:77: style: Trailing whitespace is superfluous.
    Attribute2 = c("BA_Proz", "V_DhmR/ha", "V_DhmR_HB/ha", "oiB/ha", "N/ha", 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:509:45: style: Trailing whitespace is superfluous.
                   "N_Dh/ha", "N_Dh_HB/ha"), 
                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:510:42: style: Trailing whitespace is superfluous.
    Größen = c("Wert", "Standardfehler"), 
                                         ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:511:79: style: Trailing whitespace is superfluous.
    BAGR = c("Fichte", "Weißtanne", "Douglasie", "Kiefer/Lärche/sNB", "Buche", 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:512:73: style: Trailing whitespace is superfluous.
             "Eichen", "Esche", "Bergahorn", "sonst.Laubb.", "Alle BA"), 
                                                                        ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:513:34: style: Trailing whitespace is superfluous.
    AKL = "0-500", DKL = "0-500", 
                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:514:56: style: Trailing whitespace is superfluous.
    T.FVBN.Bagr.Akl.Dkl = structure(c(61373.7188155302, 
                                                       ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:515:77: style: Trailing whitespace is superfluous.
      28193829.9819858, 27840580.0551955, 13298436.0804294, 722497014.86302, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:516:78: style: Trailing whitespace is superfluous.
      37977416.9809153, 33024493.7534678, 3712.69742102427, 1825435.84858105, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:517:75: style: Trailing whitespace is superfluous.
      1811236.4545698, 846024.170302718, 74916486.455876, 2720900.1552147, 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:518:78: style: Trailing whitespace is superfluous.
      2433510.18422916, 29861.7283427049, 16697671.6359116, 16092425.1400433, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:519:78: style: Trailing whitespace is superfluous.
      7627094.26716862, 296334777.821717, 16220791.2220175, 12285610.1694171, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:520:78: style: Trailing whitespace is superfluous.
      2138.87731550151, 1291602.49960829, 1264358.25653322, 584497.027854115, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:521:78: style: Trailing whitespace is superfluous.
      28063104.5232693, 1490514.64766492, 1156303.07409029, 7031.48405614831, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:522:76: style: Trailing whitespace is superfluous.
      2600119.16176191, 2520537.49428448, 1332433.47065128, 23897011.16755, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:523:78: style: Trailing whitespace is superfluous.
      3035764.96057011, 2793679.86118734, 906.932210589586, 359751.628327845, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:524:77: style: Trailing whitespace is superfluous.
      354314.347740145, 182874.60650828, 7243294.16978913, 573611.241379603, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:525:78: style: Trailing whitespace is superfluous.
      526029.868314457, 7037.64489921532, 2827616.25672101, 2650965.67152774, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:526:78: style: Trailing whitespace is superfluous.
      1397074.30262546, 9955409.54814566, 3744809.51019239, 3326814.27864527, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:527:78: style: Trailing whitespace is superfluous.
      850.741785018847, 360852.354649992, 347504.020355638, 173981.873454745, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:528:77: style: Trailing whitespace is superfluous.
      2028668.68046216, 641377.53909088, 603670.302020733, 18437.0853586143, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:529:78: style: Trailing whitespace is superfluous.
      6113051.99179988, 5855161.58580065, 4507084.55128888, 126640635.812539, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:530:78: style: Trailing whitespace is superfluous.
      11505665.6368982, 8346563.67362094, 1606.42976708201, 575190.119867436, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:531:78: style: Trailing whitespace is superfluous.
      560194.024950819, 414494.676112948, 16546194.2606879, 1116065.96684009, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:532:78: style: Trailing whitespace is superfluous.
      874631.389940771, 3681.35789273286, 1189101.26223199, 1149539.12235436, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:533:77: style: Trailing whitespace is superfluous.
      760803.253451032, 12334578.2232784, 2142824.3171359, 1990694.56512878, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:534:78: style: Trailing whitespace is superfluous.
      635.596374222713, 230987.796842181, 227169.652306393, 146802.098383962, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:535:77: style: Trailing whitespace is superfluous.
      2523269.88119984, 674835.26750387, 664600.257052178, 2232.63462888396, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:536:78: style: Trailing whitespace is superfluous.
      703993.382847822, 695133.963114088, 489027.927466443, 40393464.1868537, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:537:78: style: Trailing whitespace is superfluous.
      1617025.59303363, 1375252.06275817, 361.913352435928, 140718.803398861, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:538:77: style: Trailing whitespace is superfluous.
      138381.136379361, 95568.6570620951, 8130860.75766597, 395432.24683555, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:539:76: style: Trailing whitespace is superfluous.
      341783.57655792, 3462.02781298412, 624615.487277508, 608617.25958797, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:540:78: style: Trailing whitespace is superfluous.
      414873.327099344, 37210445.0950017, 2176290.87575372, 1998561.25524044, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:541:78: style: Trailing whitespace is superfluous.
      490.319400569066, 102241.584135409, 100614.907079249, 65152.0764974377, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:542:78: style: Trailing whitespace is superfluous.
      6156616.72724395, 476218.383044795, 463098.387619696, 6162.10370156807, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:543:77: style: Trailing whitespace is superfluous.
      1229927.68662875, 1172250.1054638, 867299.357291022, 69846136.1614934, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:544:78: style: Trailing whitespace is superfluous.
      4236720.50217737, 3597380.37533388, 710.826917114189, 212156.722342468, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:545:78: style: Trailing whitespace is superfluous.
      210044.778274543, 142382.909528967, 8999220.89640941, 756212.882806973, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:546:78: style: Trailing whitespace is superfluous.
      711104.308686665, 139279.785508382, 60179926.8471663, 58585210.3973719, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:547:77: style: Trailing whitespace is superfluous.
      30694126.5374714, 1339109472.8796, 82657309.5986941, 68739049.9947997, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:548:78: style: Trailing whitespace is superfluous.
      6878.70512395761, 3199266.06534033, 3133567.87632196, 1598070.14582553, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:549:61: style: Trailing whitespace is superfluous.
      100594275.601638, 4695146.46864107, 4001886.60884821), 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:550:38: style: Trailing whitespace is superfluous.
      .Dim = c(7L, 2L, 10L, 1L, 1L)), 
                                     ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:551:57: style: Trailing whitespace is superfluous.
    FVBN.ha.Bagr.Akl.Dkl = structure(c(44.0650583941606, 
                                                        ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:552:77: style: Trailing whitespace is superfluous.
      459.37952801471, 460.908278157379, 216.679652741921, 11772.0911948421, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:553:78: style: Trailing whitespace is superfluous.
      618.789568464367, 546.729361340639, 1.51386565442589, 12.0258327827726, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:554:78: style: Trailing whitespace is superfluous.
      12.2361216601102, 5.01395772249442, 955.686171881802, 25.0851936915812, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:555:76: style: Trailing whitespace is superfluous.
      23.1317346902628, 21.440102189781, 559.166282818013, 547.55181810956, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:556:78: style: Trailing whitespace is superfluous.
      255.413691385746, 9923.56418291877, 543.196664166967, 418.023270346652, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:557:77: style: Trailing whitespace is superfluous.
      1.09286693114616, 15.8693392060271, 16.216332262878, 6.97337563468432, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:558:77: style: Trailing whitespace is superfluous.
      784.034282164633, 34.3931130180365, 26.4697407106243, 5.0484598540146, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:559:78: style: Trailing whitespace is superfluous.
      369.782415916647, 364.220875481455, 189.495341241114, 3398.57290107265, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:560:78: style: Trailing whitespace is superfluous.
      431.738867119473, 403.69029509137, 0.601254674760135, 24.8374020099205, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:561:78: style: Trailing whitespace is superfluous.
      25.9322426388136, 12.3268444207545, 976.948042494641, 50.0528989455278, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:562:78: style: Trailing whitespace is superfluous.
      46.8327140392254, 5.05288321167883, 401.784445963774, 382.732570591567, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:563:78: style: Trailing whitespace is superfluous.
      198.514463664006, 1414.59390047595, 532.111176937888, 480.308060727488, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:564:79: style: Trailing whitespace is superfluous.
      0.557958003362644, 18.3325812814703, 17.5709125827997, 8.05427174467399, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:565:78: style: Trailing whitespace is superfluous.
      274.624752911112, 70.4780240745771, 66.8750389025396, 13.2374452554745, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:566:78: style: Trailing whitespace is superfluous.
      331.562818791404, 322.674976152873, 244.457541071319, 6868.79912682995, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:567:79: style: Trailing whitespace is superfluous.
      624.050136618936, 459.974877700286, 0.954120797832066, 12.0668125960293, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:568:78: style: Trailing whitespace is superfluous.
      12.2080399579271, 8.14363130826847, 752.592859464955, 43.0293715391448, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:569:78: style: Trailing whitespace is superfluous.
      33.3094460134027, 2.64313868613139, 323.006156119545, 317.273926827329, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:570:78: style: Trailing whitespace is superfluous.
      206.663757129641, 3350.55123209491, 582.074435459239, 549.433655201458, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:571:79: style: Trailing whitespace is superfluous.
      0.440339883744701, 23.8544611489687, 24.0805146752503, 14.2193699595802, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:572:78: style: Trailing whitespace is superfluous.
      582.127436872041, 135.524874170008, 138.559078202829, 1.60298540145985, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:573:77: style: Trailing whitespace is superfluous.
      315.319566282877, 316.35122431172, 219.036254808471, 18092.2859765215, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:574:77: style: Trailing whitespace is superfluous.
      724.267899509351, 625.868820797873, 0.24942979814778, 37.147018333571, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:575:78: style: Trailing whitespace is superfluous.
      36.8153082321014, 24.8131689020326, 4123.44039018893, 128.103491175427, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:576:78: style: Trailing whitespace is superfluous.
      109.499666416112, 2.48566423357664, 180.418968598383, 178.620943805285, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:577:78: style: Trailing whitespace is superfluous.
      119.835353587683, 10748.1646899098, 628.617386489987, 586.550729608617, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:578:79: style: Trailing whitespace is superfluous.
      0.333673151211152, 20.5258694259669, 20.5159132621978, 12.4458562953711, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:579:78: style: Trailing whitespace is superfluous.
      1920.35437865522, 101.674887942305, 100.550528148796, 4.42426277372263, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:580:78: style: Trailing whitespace is superfluous.
      199.595421660264, 193.290249141544, 140.747283605487, 11334.7875245461, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:581:78: style: Trailing whitespace is superfluous.
      687.544498983237, 593.16569541282, 0.471090976312018, 25.5692472923425, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:582:78: style: Trailing whitespace is superfluous.
      25.8320124556575, 16.8545662946918, 1428.78246906943, 97.2163611709637, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:583:65: style: Trailing whitespace is superfluous.
      92.3280122266817, 100, 432.079404972551, 427.384308359172, 
                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:584:78: style: Trailing whitespace is superfluous.
      220.377468456284, 9614.52854046081, 593.462355624605, 501.457469214993, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:585:79: style: Trailing whitespace is superfluous.
      0.391905965676249, 8.58468497775567, 8.87377141010415, 3.76784620669786, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:586:61: style: Trailing whitespace is superfluous.
      538.110846543904, 17.3193052087381, 16.1037622274473), 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:587:38: style: Trailing whitespace is superfluous.
      .Dim = c(7L, 2L, 10L, 1L, 1L)), 
                                     ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:588:80: style: Trailing whitespace is superfluous.
    nT.Bagr.Akl.Dkl = structure(c(380L, 357L, 123L, 139L, 294L, 91L, 93L, 122L, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:589:47: style: Trailing whitespace is superfluous.
                                  202L, 435L), 
                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:590:30: style: Trailing whitespace is superfluous.
      .Dim = c(10L, 1L, 1L)), 
                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:591:37: style: Trailing whitespace is superfluous.
      Eigentumsart = "GW", BWI = 3), 
                                    ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:592:74: style: Trailing whitespace is superfluous.
      .Names = c("Stratum", "nTE", "HBF", "se.HBF", "BL", "se.BL", "iBL", 
                                                                         ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:593:80: style: Trailing whitespace is superfluous.
                 "se.iBL", "LK", "se.LK", "Attribute1", "Attribute2", "Größen", 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:594:62: style: Trailing whitespace is superfluous.
                 "BAGR", "AKL", "DKL", "T.FVBN.Bagr.Akl.Dkl", 
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:595:76: style: Trailing whitespace is superfluous.
                 "FVBN.ha.Bagr.Akl.Dkl", "nT.Bagr.Akl.Dkl", "Eigentumsart", 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:597:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:602:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:605:1: style: lines should not be more than 80 characters.
    list(A.ob = 500, A.b = 500), list(D.unt = 0, D.ob = 400, D.b = 400, Ndh = F),
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:606:19: style: Commas should always have a space after.
    list(Wa = c(3,5), Begehbar = 1), T, A)
                  ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:607:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:609:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:611:58: style: Trailing whitespace is superfluous.
    Stratum = structure(list(Wa = c(3, 5), Begehbar = 1), 
                                                         ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:612:39: style: Trailing whitespace is superfluous.
        .Names = c("Wa", "Begehbar")), 
                                      ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:613:18: style: Trailing whitespace is superfluous.
    nTE = 13086L, 
                 ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:614:27: style: Trailing whitespace is superfluous.
    HBF = 1309350.0525594, 
                          ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:615:31: style: Trailing whitespace is superfluous.
    se.HBF = 15708.5123749046, 
                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:616:75: style: Trailing whitespace is superfluous.
    Attribute = c("V_DhmR", "V_EoR", "oiB", "N_Dh", "V_DhmR/J", "V_EoR/J", 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:617:80: style: Trailing whitespace is superfluous.
      "oiB/J", "N_Dh/J", "V_DhmR/ha/J", "V_EoR/ha/J", "oiB/ha/J", "N_Dh/ha/J"), 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:618:42: style: Trailing whitespace is superfluous.
    Größen = c("Wert", "Standardfehler"), 
                                         ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:619:21: style: Trailing whitespace is superfluous.
    Nutzungsart = 2, 
                    ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:620:29: style: Trailing whitespace is superfluous.
    BAGR = "Alle Baumarten", 
                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:621:19: style: Trailing whitespace is superfluous.
    AKL = "0-500", 
                  ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:622:19: style: Trailing whitespace is superfluous.
    DKL = "0-400", 
                  ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:623:80: style: Trailing whitespace is superfluous.
    T.VBN.A.NArt.Bagr.Akl.Dkl = structure(c(143666003.773992, 116293789.603695, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:624:78: style: Trailing whitespace is superfluous.
      74674926.1724354, 208483290.793865, 14159345.8683898, 11461176.3729741, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:625:77: style: Trailing whitespace is superfluous.
      7355561.3051014, 20542633.9154161, 10.8140262725864, 8.75333250307723, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:626:78: style: Trailing whitespace is superfluous.
      5.61771948664408, 15.6891840155818, 2749335.42891021, 2224933.41144847, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:627:78: style: Trailing whitespace is superfluous.
      1382500.01017309, 4657542.73722314, 270557.711654204, 218952.942110049, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:628:78: style: Trailing whitespace is superfluous.
      135972.01748951, 458749.542973834, 0.160854623779009, 0.13004375336356, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:629:80: style: Trailing whitespace is superfluous.
      0.0789666810478547, 0.30066653658216, 10568284.5422928, 8344844.94757921, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:630:78: style: Trailing whitespace is superfluous.
      5971633.48830166, 51811157.6293454, 1044376.02768454, 824563.706138422, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:631:80: style: Trailing whitespace is superfluous.
      589952.934457943, 5137927.94935176, 0.797629347204044, 0.629750389917988, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:632:78: style: Trailing whitespace is superfluous.
      0.450569298336037, 3.92402928407769, 354017.697245855, 281349.87510091, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:633:78: style: Trailing whitespace is superfluous.
      196858.398616963, 2069888.75718359, 34961.7234247034, 27779.4183500989, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:634:80: style: Trailing whitespace is superfluous.
      19431.4806099903, 206120.721609439, 0.0251521853255503, 0.01999199808866, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:635:45: style: Trailing whitespace is superfluous.
      0.013946681165557, 0.151338524049196), 
                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:636:42: style: Trailing whitespace is superfluous.
      .Dim = c(12L, 2L, 2L, 1L, 1L, 1L)), 
                                         ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:637:70: style: Trailing whitespace is superfluous.
    BAF.bagr.akl.dkl = structure(c(1309350.0525594, 15800.301815736), 
                                                                     ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:638:33: style: Trailing whitespace is superfluous.
      .Dim = c(2L, 1L, 1L, 1L)), 
                                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:639:78: style: Trailing whitespace is superfluous.
    mPL.NArt.Bagr.Akl.Dkl = structure(c(10.1665227629513, 0.0101779728202569, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:640:45: style: Trailing whitespace is superfluous.
      10.1410810810811, 0.0160592441799894), 
                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:641:37: style: Trailing whitespace is superfluous.
      .Dim = c(2L, 2L, 1L, 1L, 1L)), 
                                    ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:642:36: style: Trailing whitespace is superfluous.
    mPL.Stratum = 10.1485939171634, 
                                   ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:643:42: style: Trailing whitespace is superfluous.
    SE.mPL.Stratum = 0.00883984636898767, 
                                         ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:644:54: style: Trailing whitespace is superfluous.
    nT.NArt.Bagr.Akl.Dkl = structure(c(8970L, 8970L), 
                                                     ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:645:34: style: Trailing whitespace is superfluous.
      .Dim = c(2L, 1L, 1L, 1L))), 
                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:646:75: style: Trailing whitespace is superfluous.
      .Names = c("Stratum", "nTE", "HBF", "se.HBF", "Attribute", "Größen", 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:647:72: style: Trailing whitespace is superfluous.
      "Nutzungsart", "BAGR", "AKL", "DKL", "T.VBN.A.NArt.Bagr.Akl.Dkl", 
                                                                       ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:648:66: style: Trailing whitespace is superfluous.
      "BAF.bagr.akl.dkl", "mPL.NArt.Bagr.Akl.Dkl", "mPL.Stratum", 
                                                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:650:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:655:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:657:70: style: Trailing whitespace is superfluous.
    list(bagr.lab = c("Alle Baumarten"), ba.grupp = list(c(10:299))), 
                                                                     ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:658:1: style: lines should not be more than 80 characters.
    list(A.ob = 500, A.b = 500), list(D.unt = 0, D.ob = 500, d.B = 500, Ndh = F),
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:660:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:662:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:664:58: style: Trailing whitespace is superfluous.
    Stratum = structure(list(Wa = c(3, 5), Begehbar = 1), 
                                                         ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:665:39: style: Trailing whitespace is superfluous.
        .Names = c("Wa", "Begehbar")), 
                                      ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:666:18: style: Trailing whitespace is superfluous.
    nTE = 13086L, 
                 ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:667:27: style: Trailing whitespace is superfluous.
    HBF = 1309350.0525594, 
                          ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:668:31: style: Trailing whitespace is superfluous.
    se.HBF = 15708.5123749046, 
                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:669:79: style: Trailing whitespace is superfluous.
    Attribute = c("V_DhmR", "V_EoR", "oiB", "V_EoR_HB", "V_DhmR/J", "V_EoR/J", 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:670:70: style: Trailing whitespace is superfluous.
                  "oiB/J", "V_EoR_HB/J", "V_DhmR/ha/J", "V_EoR/ha/J", 
                                                                     ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:671:48: style: Trailing whitespace is superfluous.
                  "oiB/ha/J", "V_EoR_HB/ha/J"), 
                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:672:42: style: Trailing whitespace is superfluous.
    Größen = c("Wert", "Standardfehler"), 
                                         ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:673:31: style: Trailing whitespace is superfluous.
    Nutzungsart = "insgesamt", 
                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:674:43: style: Trailing whitespace is superfluous.
    BAGR = c("Alle Baumarten", "Alle BA"), 
                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:675:19: style: Trailing whitespace is superfluous.
    AKL = "0-500", 
                  ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:676:19: style: Trailing whitespace is superfluous.
    DKL = "0-500", 
                  ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:677:62: style: Commas should always have a space after.
    T.VBN.A.NArt.Bagr.Akl.Dkl = structure(c(154234288.316285,124638634.551274, 
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:677:79: style: Trailing whitespace is superfluous.
    T.VBN.A.NArt.Bagr.Akl.Dkl = structure(c(154234288.316285,124638634.551274, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:678:80: style: Trailing whitespace is superfluous.
        80646559.6607371, 118542802.733222, 15203721.8960743, 12285740.0791125, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:679:80: style: Trailing whitespace is superfluous.
        7945514.23955935, 11684403.4708475, 11.6116556197905, 9.38308289299522, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:680:80: style: Trailing whitespace is superfluous.
        6.06828878498012, 9.14607623529644, 2823840.06991487, 2283775.44562971, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:681:80: style: Trailing whitespace is superfluous.
        1425645.29001439, 2222876.04824596, 277971.501039977, 224806.445670574, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:682:1: style: lines should not be more than 80 characters.
        140260.415288834, 218694.21409298, 0.160735117535021, 0.129922081077202, 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:682:81: style: Trailing whitespace is superfluous.
        140260.415288834, 218694.21409298, 0.160735117535021, 0.129922081077202, 
                                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:683:65: style: Trailing whitespace is superfluous.
        0.0788373938100195, 0.131428790438861, 154234288.316285, 
                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:684:80: style: Trailing whitespace is superfluous.
        124638634.551274, 80646559.6607371, 118542802.733222, 15203721.8960743, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:685:80: style: Trailing whitespace is superfluous.
        12285740.0791125, 7945514.23955935, 11684403.4708475, 11.6116556197905, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:686:80: style: Trailing whitespace is superfluous.
        9.38308289299522, 6.06828878498012, 9.14607623529644, 2823840.06991487, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:687:80: style: Trailing whitespace is superfluous.
        2283775.44562971, 1425645.29001439, 2222876.04824596, 277971.501039977, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:688:80: style: Trailing whitespace is superfluous.
        224806.445670574, 140260.415288834, 218694.21409298, 0.160735117535021, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:689:67: style: Trailing whitespace is superfluous.
        0.129922081077202, 0.0788373938100195, 0.131428790438861), 
                                                                  ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:690:44: style: Trailing whitespace is superfluous.
        .Dim = c(12L, 2L, 1L, 2L, 1L, 1L)), 
                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:691:69: style: Trailing whitespace is superfluous.
    BAF.bagr.akl.dkl = structure(c(1309350.0525594, 15800.301815736, 
                                                                    ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:692:43: style: Trailing whitespace is superfluous.
        1309350.0525594, 15800.301815736), 
                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:693:35: style: Trailing whitespace is superfluous.
        .Dim = c(2L, 2L, 1L, 1L)), 
                                  ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:694:79: style: Trailing whitespace is superfluous.
    mPL.NArt.Bagr.Akl.Dkl = structure(c(10.1652097285865, 0.00980347411535932, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:695:64: style: Trailing whitespace is superfluous.
        NA, NA, 10.1652097285865, 0.00980347411535932, NA, NA), 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:696:39: style: Trailing whitespace is superfluous.
        .Dim = c(2L, 2L, 2L, 1L, 1L)), 
                                      ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:697:36: style: Trailing whitespace is superfluous.
    mPL.Stratum = 10.1485939171634, 
                                   ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:698:42: style: Trailing whitespace is superfluous.
    SE.mPL.Stratum = 0.00883984636898767, 
                                         ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:699:54: style: Trailing whitespace is superfluous.
    nT.NArt.Bagr.Akl.Dkl = structure(c(8970L, 8970L), 
                                                     ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:700:36: style: Trailing whitespace is superfluous.
        .Dim = c(1L, 2L, 1L, 1L))), 
                                   ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:701:77: style: Trailing whitespace is superfluous.
        .Names = c("Stratum", "nTE", "HBF", "se.HBF", "Attribute", "Größen", 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:702:56: style: Trailing whitespace is superfluous.
                   "Nutzungsart", "BAGR", "AKL", "DKL", 
                                                       ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:703:68: style: Trailing whitespace is superfluous.
                   "T.VBN.A.NArt.Bagr.Akl.Dkl", "BAF.bagr.akl.dkl", 
                                                                   ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:704:77: style: Trailing whitespace is superfluous.
                   "mPL.NArt.Bagr.Akl.Dkl", "mPL.Stratum", "SE.mPL.Stratum", 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:706:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:711:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:712:60: style: Commas should always have a space after.
  result <- iVB.ew.bagrupp.akl.dkl.stratum.fun.2(baeume.23,baeume.3,
                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:713:1: style: lines should not be more than 80 characters.
   list(bagr.lab = c("Fichte", "Tanne", "Douglasie", "Kiefer", "Buche", "Eiche"),
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:714:67: style: Commas should always have a space after.
        ba.grupp = list(c(10), c(30), c(40), c(20), c(100), c(110,111))),
                                                                  ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:716:18: style: Commas should always have a space after.
   list(Wa = c(3,5), Begehbar = 1), A)
                 ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:717:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:719:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:721:58: style: Trailing whitespace is superfluous.
    Stratum = structure(list(Wa = c(3, 5), Begehbar = 1), 
                                                         ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:722:37: style: Trailing whitespace is superfluous.
      .Names = c("Wa", "Begehbar")), 
                                    ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:723:27: style: Trailing whitespace is superfluous.
    HBF = 1309350.0525594, 
                          ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:724:31: style: Trailing whitespace is superfluous.
    se_HBF = 15708.5123749046, 
                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:725:69: style: Trailing whitespace is superfluous.
    Attribute = c("V_DhmR", "V_DhmR_HB", "V_EoR", "oiB", "V_DhmR/J", 
                                                                    ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:726:74: style: Trailing whitespace is superfluous.
      "V_DhmR_HB/J", "V_EoR/J", "oiB/J", "V_DhmR/ha/J", "V_DhmR_HB/ha/J", 
                                                                         ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:727:69: style: Trailing whitespace is superfluous.
      "V_EoR/ha/J", "oiB/ha/J", "mBAF_mLK", "mBAFoLK", "mPL", "nT"), 
                                                                    ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:728:42: style: Trailing whitespace is superfluous.
    Größen = c("Wert", "Standardfehler"), 
                                         ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:729:73: style: Trailing whitespace is superfluous.
    BAGR = c("Fichte", "Tanne", "Douglasie", "Kiefer", "Buche", "Eiche", 
                                                                        ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:730:25: style: Trailing whitespace is superfluous.
             "Alle BA"), 
                        ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:731:79: style: Trailing whitespace is superfluous.
    AKL = c("1-20", "21-40", "41-60", "61-80", "81-100", "101-120", "121-140", 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:732:32: style: Trailing whitespace is superfluous.
            "141-160", ">160"), 
                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:733:19: style: Trailing whitespace is superfluous.
    DKL = "0-400", 
                  ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:734:53: style: Trailing whitespace is superfluous.
    iVB.bagr.akl.dkl = structure(c(3464922.15484338, 
                                                    ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:735:77: style: Trailing whitespace is superfluous.
     3308166.20992571, 2569628.35553625, 1903772.68687055, 338347.350948474, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:736:76: style: Trailing whitespace is superfluous.
     322945.802139545, 250796.439280503, 186034.570596779, 5.7064105461295, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:737:77: style: Trailing whitespace is superfluous.
     5.57024796330222, 4.22981720421372, 3.13757336246974, 59292.5006382454, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:738:65: style: Trailing whitespace is superfluous.
     57976.9166951219, 10.1390786338364, 2300, 230663.029498138, 
                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:739:77: style: Trailing whitespace is superfluous.
     228236.339791984, 174374.250978079, 118492.156671577, 22320.4698197158, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:740:77: style: Trailing whitespace is superfluous.
     22087.9926225692, 16855.713239933, 11488.8723491072, 0.295589102531467, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:741:62: style: Trailing whitespace is superfluous.
     0.299565691690403, 0.226087117839159, 0.145538268558179, 
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:742:65: style: Trailing whitespace is superfluous.
     2377.94008849468, 2323.87990477335, 0.0136085650998704, NA, 
                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:743:77: style: Trailing whitespace is superfluous.
     446326.993559083, 377397.949042815, 324118.871252554, 207200.953428881, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:744:77: style: Trailing whitespace is superfluous.
     43958.3686206971, 37223.3063220516, 31916.0274297785, 20401.6936220472, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:745:77: style: Trailing whitespace is superfluous.
     3.96259325266654, 3.43409050340258, 2.87704568921637, 1.83909494429305, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:746:65: style: Trailing whitespace is superfluous.
     11093.3335363442, 10839.3492498727, 10.1240320733104, 1302, 
                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:747:77: style: Trailing whitespace is superfluous.
     52266.9477903855, 50084.7237139327, 38336.0304356731, 23670.2141161324, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:748:77: style: Trailing whitespace is superfluous.
     5144.01957854978, 4932.56836712693, 3773.28925725851, 2333.51670615344, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:749:62: style: Trailing whitespace is superfluous.
     0.391011922075183, 0.376840662617629, 0.288228730679319, 
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:750:80: style: Trailing whitespace is superfluous.
     0.177790523277111, 812.896485845985, 793.466457854196, 0.0180571268718284, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:751:63: style: Trailing whitespace is superfluous.
     NA, 299578.873901378, 276422.477538197, 217707.404437154, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:752:77: style: Trailing whitespace is superfluous.
     164746.150136764, 28847.7366701899, 26639.5516349001, 20949.1234896702, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:753:76: style: Trailing whitespace is superfluous.
     15853.2760388064, 5.53326765149455, 5.2119568591352, 4.01823923511966, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:754:77: style: Trailing whitespace is superfluous.
     3.04080768895772, 5213.50827162644, 5111.23793901094, 10.2575974542562, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:755:64: style: Trailing whitespace is superfluous.
     358, 53235.6071029793, 52548.3352434502, 39661.9507293506, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:756:77: style: Trailing whitespace is superfluous.
     28530.5816824925, 5137.39417081071, 5073.06274456456, 3827.66783110481, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:757:80: style: Trailing whitespace is superfluous.
     2752.37844114595, 0.824135342503947, 0.826681397825544, 0.618902426714993, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:758:78: style: Trailing whitespace is superfluous.
     0.439719233308812, 556.54539780449, 544.869636441316, 0.034865069030257, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:759:63: style: Trailing whitespace is superfluous.
     NA, 198544.583207681, 185131.831245613, 136741.766543673, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:760:76: style: Trailing whitespace is superfluous.
     102539.026141461, 19501.5850343826, 18177.3647311751, 13434.333456965, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:761:77: style: Trailing whitespace is superfluous.
     10071.2117784938, 8.53444131357013, 8.13213782970818, 5.87924162437338, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:762:76: style: Trailing whitespace is superfluous.
     4.40744512451436, 2285.04530265786, 2235.2504485069, 10.1875823142051, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:763:64: style: Trailing whitespace is superfluous.
     298, 30659.0652101075, 30331.6671709863, 21646.0338005403, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:764:76: style: Trailing whitespace is superfluous.
     15470.601460398, 2996.39114272983, 2963.65445008098, 2113.55518354571, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:765:79: style: Trailing whitespace is superfluous.
     1514.43015745928, 0.97189577247219, 0.944420702738566, 0.680031910707785, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:766:80: style: Trailing whitespace is superfluous.
     0.497008734643486, 356.116721593696, 347.913128142238, 0.0344589531213272, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:767:62: style: Trailing whitespace is superfluous.
     NA, 866084.21154318, 705148.799971515, 665115.866690217, 
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:768:77: style: Trailing whitespace is superfluous.
     735996.544543315, 85231.4095060796, 69344.8789908748, 65467.9852304206, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:769:77: style: Trailing whitespace is superfluous.
     72361.9490918239, 3.31268497389173, 2.75573298867535, 2.54454094095804, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:770:77: style: Trailing whitespace is superfluous.
     2.81248829307351, 25728.8001055984, 25163.8599515435, 10.2196182396607, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:771:64: style: Trailing whitespace is superfluous.
     2967, 67717.258832095, 63742.1790897095, 52813.2066964872, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:772:77: style: Trailing whitespace is superfluous.
     55897.8447224737, 6725.40646274579, 6292.63211184143, 5243.13219906905, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:773:80: style: Trailing whitespace is superfluous.
     5532.20917502257, 0.213097470479139, 0.198584015713761, 0.167119332222055, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:774:80: style: Trailing whitespace is superfluous.
     0.174171702849754, 1360.39732426206, 1329.53492784781, 0.0122275859408339, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:775:63: style: Trailing whitespace is superfluous.
     NA, 297793.557217656, 293469.503316882, 186536.059286758, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:776:77: style: Trailing whitespace is superfluous.
     193395.908790276, 28807.1304995714, 28376.1949261549, 18046.4378555447, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:777:77: style: Trailing whitespace is superfluous.
     18714.2159877448, 5.17623966677055, 5.21328172914866, 3.24269324475653, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:778:77: style: Trailing whitespace is superfluous.
     3.36268366367547, 5565.26211189601, 5443.05801996026, 10.2904625199362, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:779:63: style: Trailing whitespace is superfluous.
     993, 42374.9647279072, 41966.4634659185, 26957.386148861, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:780:76: style: Trailing whitespace is superfluous.
     26710.2033124144, 4059.9255096058, 4014.28039835384, 2587.17488633621, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:781:80: style: Trailing whitespace is superfluous.
     2563.33163009132, 0.532568694123264, 0.537629066972024, 0.343752408538496, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:782:80: style: Trailing whitespace is superfluous.
     0.331114283474045, 519.005389150204, 507.278010579784, 0.0214712780876175, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:783:62: style: Trailing whitespace is superfluous.
     NA, 8668161.67917693, 7888849.6578879, 6294631.88235857, 
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:784:77: style: Trailing whitespace is superfluous.
     5424440.94411128, 846702.809748495, 770102.713031493, 614781.655599628, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:785:77: style: Trailing whitespace is superfluous.
     529920.392911515, 4.76568155652617, 4.43206764098625, 3.46030928874803, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:786:77: style: Trailing whitespace is superfluous.
     2.98266618918587, 177666.677831004, 173756.985545493, 10.1874046095737, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:787:65: style: Trailing whitespace is superfluous.
     4381, 343506.018805245, 336632.432183579, 253756.691078652, 
                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:788:76: style: Trailing whitespace is superfluous.
     200643.268989751, 33370.8984255794, 32677.518794321, 24638.8761449042, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:789:80: style: Trailing whitespace is superfluous.
     19516.9640731019, 0.139861745738439, 0.139723305345063, 0.105021635647806, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:790:80: style: Trailing whitespace is superfluous.
     0.0789312207831737, 4722.44229814519, 4615.1984711157, 0.0102247599601316, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:791:63: style: Trailing whitespace is superfluous.
     NA, 17922067.6073403, 17302441.6473729, 14430918.9525253, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:792:76: style: Trailing whitespace is superfluous.
     7926956.98780998, 1758637.68209131, 1697911.14375924, 1415715.3517447, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:793:77: style: Trailing whitespace is superfluous.
     778104.530843447, 22.6138345201167, 22.3697253293165, 18.2042913204684, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:794:77: style: Trailing whitespace is superfluous.
     10.0054304982947, 77768.2210651568, 75902.1900699897, 10.1794697153977, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:795:65: style: Trailing whitespace is superfluous.
     1267, 703160.256767265, 693727.608863159, 568525.122849945, 
                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:796:77: style: Trailing whitespace is superfluous.
     308154.991934071, 68706.0581669643, 67805.6677670495, 55534.1672314905, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:797:80: style: Trailing whitespace is superfluous.
     30134.9136281038, 0.319306493717555, 0.320194296876573, 0.260672367136347, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:798:80: style: Trailing whitespace is superfluous.
     0.135856963027614, 2873.86413649123, 2804.68700883775, 0.0185571804340779, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:799:63: style: Trailing whitespace is superfluous.
     NA, 2256351.74491328, 1942769.00713531, 1769718.74312248, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:800:77: style: Trailing whitespace is superfluous.
     982990.470227077, 221683.715321162, 190674.526188386, 173797.254883432, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:801:77: style: Trailing whitespace is superfluous.
     96538.2102606736, 23.8302571691133, 20.9716159823886, 18.6826230025871, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:802:77: style: Trailing whitespace is superfluous.
     10.3775343796675, 9302.61531581328, 9092.02830857239, 10.1241379310345, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:803:64: style: Trailing whitespace is superfluous.
     388, 177349.697597102, 169636.128072374, 141042.979719266, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:804:77: style: Trailing whitespace is superfluous.
     77818.1351901286, 17307.9811498426, 16547.5779191168, 13759.2388030565, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:805:80: style: Trailing whitespace is superfluous.
     7593.83759407588, 0.979185245399135, 0.841166705396656, 0.782660542533183, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:806:80: style: Trailing whitespace is superfluous.
     0.427603136902145, 781.040273184423, 762.760618240493, 0.0325597601647428, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:807:63: style: Trailing whitespace is superfluous.
     NA, 3461088.06443155, 3423639.98406401, 2658165.73400556, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:808:77: style: Trailing whitespace is superfluous.
     1691470.06516024, 340712.640590562, 337165.568077415, 261648.143465388, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:809:76: style: Trailing whitespace is superfluous.
     166521.144953281, 22.6037309158016, 22.918281818023, 17.3583939218089, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:810:76: style: Trailing whitespace is superfluous.
     11.047430308987, 15073.2921861311, 14711.6424675548, 10.2327349524815, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:811:63: style: Trailing whitespace is superfluous.
     281, 299373.963213872, 298367.76326241, 229525.014236393, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:812:77: style: Trailing whitespace is superfluous.
     145213.647617667, 29517.0022954703, 29430.3346071217, 22633.2338006089, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:813:80: style: Trailing whitespace is superfluous.
     14320.1966976137, 0.725553825226513, 0.746759723128027, 0.553003510875376, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:814:80: style: Trailing whitespace is superfluous.
     0.345266323565567, 1214.80779526216, 1185.37220427637, 0.0380944646674365, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:815:63: style: Trailing whitespace is superfluous.
     NA, 598091.526219207, 577850.933921327, 462923.868786953, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:816:77: style: Trailing whitespace is superfluous.
     272827.036456593, 58747.5384669793, 56809.3183776506, 45465.5244530738, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:817:77: style: Trailing whitespace is superfluous.
     26795.6040293464, 13.6779799466062, 13.5573379339382, 10.5855759740575, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:818:77: style: Trailing whitespace is superfluous.
     6.23872495996758, 4295.04493326561, 4190.30038599535, 10.1511111111111, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:819:64: style: Trailing whitespace is superfluous.
     125, 89203.6450154224, 88507.6895358154, 69845.0624807604, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:820:77: style: Trailing whitespace is superfluous.
     40260.9824755824, 8755.72729569365, 8694.18405933581, 6855.97276869868, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:821:80: style: Trailing whitespace is superfluous.
     3949.87641608498, 0.655153025844625, 0.645980067968265, 0.515328382888432, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:822:80: style: Trailing whitespace is superfluous.
     0.299355759002613, 615.112437298334, 600.082631678078, 0.0514053763207024, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:823:63: style: Trailing whitespace is superfluous.
     NA, 3108982.22239424, 2426489.15184832, 2504403.54507138, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:824:76: style: Trailing whitespace is superfluous.
     2278549.94948392, 305085.882505767, 238820.223053299, 245786.38677238, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:825:77: style: Trailing whitespace is superfluous.
     223591.995789692, 15.6966269837103, 12.5713165753528, 12.6456760278544, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:826:77: style: Trailing whitespace is superfluous.
     11.5037776432928, 19436.3975663295, 18997.2324395623, 10.2147508305648, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:827:64: style: Trailing whitespace is superfluous.
     895, 155230.811768493, 144873.976491352, 126341.373747098, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:828:77: style: Trailing whitespace is superfluous.
     113376.587118226, 15192.1344008546, 14214.0097920932, 12361.3702039678, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:829:78: style: Trailing whitespace is superfluous.
     11097.4822920784, 0.460768129631313, 0.34461380756597, 0.37247914972509, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:830:79: style: Trailing whitespace is superfluous.
     0.334758001466049, 1131.14820801573, 1104.90344503146, 0.021784885182194, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:831:62: style: Trailing whitespace is superfluous.
     NA, 633627.38787489, 620893.742327392, 430125.232788861, 
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:832:77: style: Trailing whitespace is superfluous.
     395116.817161997, 62558.3444840685, 61323.5945451805, 42502.2110760856, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:833:77: style: Trailing whitespace is superfluous.
     39005.6697121483, 10.8650852228603, 10.9025983002052, 7.38175137641743, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:834:77: style: Trailing whitespace is superfluous.
     6.77447475780246, 5757.74080008546, 5624.67705923148, 10.2515212981744, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:835:63: style: Trailing whitespace is superfluous.
     151, 88655.2467022756, 88497.524583823, 61472.6469695771, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:836:76: style: Trailing whitespace is superfluous.
     54511.7636575847, 8801.90334205525, 8786.4707201826, 6107.14955110869, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:837:79: style: Trailing whitespace is superfluous.
     5416.21298444059, 0.522408367230748, 0.532224195880803, 0.39682958553499, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:838:79: style: Trailing whitespace is superfluous.
     0.31558174393696, 774.978507036461, 756.382329890714, 0.0497876754625404, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:839:78: style: Trailing whitespace is superfluous.
     NA, 32966805.6662347, 30714908.03341, 25979807.9204094, 16525139.477435, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:840:77: style: Trailing whitespace is superfluous.
     3235586.26579033, 3015542.36401857, 2549411.43702567, 1621740.67154412, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:841:77: style: Trailing whitespace is superfluous.
     18.9969785686705, 18.1335694638159, 14.9682655486456, 9.52166632273047, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:842:65: style: Trailing whitespace is superfluous.
     170321.098910245, 166296.126641577, 10.2140680548502, 2504, 
                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:843:77: style: Trailing whitespace is superfluous.
     941702.192555397, 924296.698970359, 748626.450876844, 454473.018302697, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:844:77: style: Trailing whitespace is superfluous.
     92260.9263724051, 90594.0769608087, 73316.1203586135, 44571.5945991048, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:845:80: style: Trailing whitespace is superfluous.
     0.23067837334542, 0.231178776680519, 0.187633364810447, 0.101834265365076, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:846:65: style: Trailing whitespace is superfluous.
     4545.32046856041, 4436.75166375037, 0.0133289014583507, NA, 
                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:847:77: style: Trailing whitespace is superfluous.
     23468200.9082402, 23071540.5745853, 18818076.0347384, 10376313.7694451, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:848:77: style: Trailing whitespace is superfluous.
     2315752.78720325, 2276673.80196696, 1857054.52747049, 1023794.01624452, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:849:75: style: Trailing whitespace is superfluous.
     18.9601463052071, 19.1142374396886, 15.204570078532, 8.3822782991594, 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:850:65: style: Trailing whitespace is superfluous.
     122137.917604953, 119108.795689631, 10.1761121495327, 1680, 
                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:851:77: style: Trailing whitespace is superfluous.
     765627.695208189, 757918.685755095, 613871.340387099, 336389.383014827, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:852:77: style: Trailing whitespace is superfluous.
     75453.8173258505, 74691.2233725555, 60515.6318478228, 33141.6422407193, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:853:62: style: Trailing whitespace is superfluous.
     0.209919550783817, 0.212345485570402, 0.168352783639273, 
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:854:1: style: lines should not be more than 80 characters.
     0.0889940917260452, 3734.08206390978, 3642.12803385201, 0.0164101091579517, 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:854:81: style: Trailing whitespace is superfluous.
     0.0889940917260452, 3734.08206390978, 3642.12803385201, 0.0164101091579517, 
                                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:855:63: style: Trailing whitespace is superfluous.
     NA, 2641939.16939494, 2470191.47933966, 2096229.34440577, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:856:76: style: Trailing whitespace is superfluous.
     1156176.18894415, 259335.076345574, 242504.49300911, 205757.797866578, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:857:75: style: Trailing whitespace is superfluous.
     113462.544615272, 23.646967788943, 22.648956346577, 18.7616271853302, 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:858:74: style: Trailing whitespace is superfluous.
     10.3458628719919, 10966.948433314, 10707.09348803, 10.1099157485418, 
                                                                         ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:859:64: style: Trailing whitespace is superfluous.
     454, 198446.374970795, 195191.229103458, 157425.273399194, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:860:76: style: Trailing whitespace is superfluous.
     86730.3404523167, 19376.809447302, 19061.6480075752, 15370.8660579998, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:861:80: style: Trailing whitespace is superfluous.
     8464.43639669488, 0.814347915782438, 0.783496303781435, 0.645681009285886, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:862:80: style: Trailing whitespace is superfluous.
     0.353857107571789, 817.446455814527, 797.632116268343, 0.0327288641794357, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:863:63: style: Trailing whitespace is superfluous.
     NA, 3054550.60425697, 2989775.08277148, 2335447.10559448, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:864:76: style: Trailing whitespace is superfluous.
     1487944.06287677, 296790.61288478, 290797.855429407, 226922.651180945, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:865:77: style: Trailing whitespace is superfluous.
     144569.158681751, 22.2527352498442, 22.3409225202377, 17.0141825910198, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:866:77: style: Trailing whitespace is superfluous.
     10.8394911219333, 13337.2643655956, 13016.3763455151, 10.2935943060498, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:867:79: style: Trailing whitespace is superfluous.
     324, 239396.936390844, 237794.603761761, 182621.715499, 116081.733219565, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:868:77: style: Trailing whitespace is superfluous.
     23208.5428185889, 23064.9474817511, 17705.8789673476, 11255.9029917146, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:869:62: style: Trailing whitespace is superfluous.
     0.684206657598321, 0.693131201837558, 0.520852331679096, 
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:870:80: style: Trailing whitespace is superfluous.
     0.332996923343523, 988.578330927533, 964.591405214228, 0.0345071639897195, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:871:63: style: Trailing whitespace is superfluous.
     NA, 1521154.22951355, 1499242.45593253, 1175807.17058209, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:872:76: style: Trailing whitespace is superfluous.
     703888.40714769, 149088.999380127, 147025.507284055, 115233.752017611, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:873:77: style: Trailing whitespace is superfluous.
     68978.1250782248, 10.1006018469665, 10.2124293707246, 7.80694922698035, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:874:77: style: Trailing whitespace is superfluous.
     4.67318568413619, 14760.4075122418, 14396.7220674764, 10.1945619335347, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:875:64: style: Trailing whitespace is superfluous.
     313, 133742.209488631, 132264.329954642, 103914.475525907, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:876:76: style: Trailing whitespace is superfluous.
     62363.7215228162, 13151.667915185, 13013.1394408637, 10217.4407882677, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:877:80: style: Trailing whitespace is superfluous.
     6135.33835595251, 0.323152063461187, 0.325443914506454, 0.249745530794346, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:878:79: style: Trailing whitespace is superfluous.
     0.139955465325008, 1279.9725267064, 1248.62737548056, 0.0374901876468943, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:879:62: style: Trailing whitespace is superfluous.
     NA, 6033525.58731873, 5326208.2522507, 5012820.66392559, 
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:880:75: style: Trailing whitespace is superfluous.
     4238431.2806683, 591466.254281697, 522182.258150872, 491339.08173842, 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:881:77: style: Trailing whitespace is superfluous.
     415538.968641663, 15.1682634087647, 13.7157502055213, 12.6004832243218, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:882:77: style: Trailing whitespace is superfluous.
     10.6565750578921, 38993.6697657773, 38071.7241365817, 10.2082417582418, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:883:65: style: Trailing whitespace is superfluous.
     1305, 251214.551199942, 242507.165982479, 210790.130429813, 
                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:884:76: style: Trailing whitespace is superfluous.
     175850.014272259, 24551.7400034513, 23704.9302343644, 20593.168434297, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:885:80: style: Trailing whitespace is superfluous.
     17187.1584851174, 0.293289190448136, 0.257928971200853, 0.248058413110892, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:886:80: style: Trailing whitespace is superfluous.
     0.203489711332925, 1720.13834492101, 1678.67388036444, 0.0180192694504914, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:887:63: style: Trailing whitespace is superfluous.
     NA, 933710.371729427, 908358.652827632, 673157.598352013, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:888:76: style: Trailing whitespace is superfluous.
     571458.52936201, 90406.4979450555, 88036.9557762467, 65139.2216426668, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:889:76: style: Trailing whitespace is superfluous.
     55303.1280240641, 11.462618797692, 11.4333918369445, 8.25898672595466, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:890:77: style: Trailing whitespace is superfluous.
     7.01187070917259, 7887.07184114494, 7699.98588623324, 10.3761297798378, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:891:64: style: Trailing whitespace is superfluous.
     279, 85740.4876434874, 84758.1814840624, 62527.8440947061, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:892:77: style: Trailing whitespace is superfluous.
     51769.5054187066, 8348.26055494443, 8261.77615553582, 6084.59634860677, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:893:80: style: Trailing whitespace is superfluous.
     5031.80031438009, 0.430506157007733, 0.429672172546127, 0.334285964617374, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:894:79: style: Trailing whitespace is superfluous.
     0.249207894257746, 685.09798173529, 668.807453509676, 0.0393009286453709, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:895:63: style: Trailing whitespace is superfluous.
     NA, 43610828.4402991, 41823991.5723825, 34647272.3872838, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:896:77: style: Trailing whitespace is superfluous.
     22031815.9445661, 4283687.55614601, 4109216.26109501, 3403590.59030065, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:897:75: style: Trailing whitespace is superfluous.
     2162311.64112136, 16.45819706485, 16.1825270708607, 13.0768091577704, 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:898:77: style: Trailing whitespace is superfluous.
     8.30773734982962, 260276.841944902, 253929.206674669, 10.1967378474085, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:899:64: style: Trailing whitespace is superfluous.
     3010, 1039644.60435861, 1021696.09234696, 827725.95779309, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:900:77: style: Trailing whitespace is superfluous.
     510920.783159102, 101911.784029294, 100172.764349314, 81162.7300507138, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:901:79: style: Trailing whitespace is superfluous.
     50009.7858195746, 0.156181862049714, 0.15836549115004, 0.125439031520233, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:902:80: style: Trailing whitespace is superfluous.
     0.0710564631396485, 5808.13372437816, 5666.13554544101, 0.012230823828492, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:903:63: style: Trailing whitespace is superfluous.
     NA, 10321880.0765653, 10109154.5719728, 8315187.15047099, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:904:77: style: Trailing whitespace is superfluous.
     4658244.87469101, 1021488.53127554, 1000251.30567927, 822918.355102728, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:905:77: style: Trailing whitespace is superfluous.
     460808.722855507, 15.0339577315231, 15.1008273354697, 12.1114622321411, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:906:77: style: Trailing whitespace is superfluous.
     6.78204272452878, 67945.4172691789, 66238.1791049173, 10.1601782363977, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:907:64: style: Trailing whitespace is superfluous.
     1291, 431002.03738042, 427122.794614093, 346797.591408255, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:908:77: style: Trailing whitespace is superfluous.
     193380.585768197, 42639.4450795962, 42218.6342548808, 34316.6704558492, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:909:78: style: Trailing whitespace is superfluous.
     19106.5443308155, 0.2323650764115, 0.233961643051362, 0.187247473692846, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:910:80: style: Trailing whitespace is superfluous.
     0.100331798827199, 2674.54364428471, 2608.16586116789, 0.0182246662870195, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:911:62: style: Trailing whitespace is superfluous.
     NA, 2597247.42731594, 2494453.5700582, 2051974.17773087, 
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:912:76: style: Trailing whitespace is superfluous.
     1142329.1620146, 256026.421762584, 245728.066292723, 202301.832157652, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:913:77: style: Trailing whitespace is superfluous.
     112587.752859526, 22.0415351032272, 21.6650870673069, 17.4163389241325, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:914:77: style: Trailing whitespace is superfluous.
     9.69277658830045, 11615.6347805874, 11342.1222600823, 10.1643493761141, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:915:64: style: Trailing whitespace is superfluous.
     497, 187535.004153516, 185830.220367448, 147837.201419736, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:916:77: style: Trailing whitespace is superfluous.
     82447.5233635578, 18474.9872346441, 18291.9647458773, 14564.1616129597, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:917:80: style: Trailing whitespace is superfluous.
     8120.25812649807, 0.663367100265232, 0.652997507300292, 0.520672005831184, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:918:80: style: Trailing whitespace is superfluous.
     0.288849689360554, 822.540413864644, 802.956617055964, 0.0298964876870011, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:919:63: style: Trailing whitespace is superfluous.
     NA, 628076.811055246, 602123.745563702, 484690.479909835, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:920:76: style: Trailing whitespace is superfluous.
     322340.974468278, 60889.3031708446, 58358.6961147217, 46992.875115098, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:921:77: style: Trailing whitespace is superfluous.
     31244.4114576431, 19.5960995305599, 19.2527891147627, 15.1237903872674, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:922:76: style: Trailing whitespace is superfluous.
     10.0554377339452, 3107.21544743578, 3031.1813923092, 10.3262711864407, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:923:63: style: Trailing whitespace is superfluous.
     135, 80594.7471579594, 79568.6099310516, 62007.286793398, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:924:77: style: Trailing whitespace is superfluous.
     40957.0586831948, 7771.46234575616, 7671.49510076904, 5979.73247581004, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:925:78: style: Trailing whitespace is superfluous.
     3947.51074233138, 1.20910662725517, 1.22336327076109, 0.934508365421569, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:926:80: style: Trailing whitespace is superfluous.
     0.613445298653864, 391.690942692737, 382.025226281758, 0.0477920025311845, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:927:62: style: Trailing whitespace is superfluous.
     NA, 769791.350097185, 747637.758535179, 591149.13378013, 
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:928:77: style: Trailing whitespace is superfluous.
     351595.154152155, 75038.3586721701, 72943.8531248662, 57601.7995091621, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:929:77: style: Trailing whitespace is superfluous.
     34238.5659968884, 7.46048862266626, 7.43437794619393, 5.72690524536467, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:930:76: style: Trailing whitespace is superfluous.
     3.40407808214666, 10058.1024202879, 9811.69556522348, 10.246265060241, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:931:64: style: Trailing whitespace is superfluous.
     268, 72617.2688043835, 72005.1346848148, 55898.0732578875, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:932:77: style: Trailing whitespace is superfluous.
     32934.2109956677, 7023.26353674671, 6967.96260559746, 5402.40231957446, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:933:79: style: Trailing whitespace is superfluous.
     3175.64144008648, 0.337521608169755, 0.33536459850778, 0.259275826923218, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:934:79: style: Trailing whitespace is superfluous.
     0.143222672248937, 904.427497229952, 882.58841777386, 0.0384563237149178, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:935:63: style: Trailing whitespace is superfluous.
     NA, 6006012.17073447, 5616246.47346699, 5168087.89843417, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:936:75: style: Trailing whitespace is superfluous.
     4122680.98549398, 586674.0633579, 548680.600063661, 504759.702692516, 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:937:77: style: Trailing whitespace is superfluous.
     402737.001229194, 13.0720696117502, 12.5279358155895, 11.2468820132205, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:938:76: style: Trailing whitespace is superfluous.
     8.97364728408641, 44879.967807894, 43796.5685760376, 10.2758465011287, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:939:65: style: Trailing whitespace is superfluous.
     1344, 247368.710929391, 241680.822304392, 214563.423114525, 
                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:940:77: style: Trailing whitespace is superfluous.
     168618.114411147, 24268.1617904241, 23709.8087682583, 21051.5738179362, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:941:76: style: Trailing whitespace is superfluous.
     16546.4577659468, 0.2370287391676, 0.22479430784718, 0.20578403999039, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:942:79: style: Trailing whitespace is superfluous.
     0.15900166019546, 1873.06893411527, 1827.72870188803, 0.0176904158499928, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:943:63: style: Trailing whitespace is superfluous.
     NA, 1024421.11549586, 960781.648543208, 760697.967273225, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:944:76: style: Trailing whitespace is superfluous.
     615983.037865487, 99548.452729788, 93466.5720681203, 73932.8603697623, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:945:76: style: Trailing whitespace is superfluous.
     59828.5181395113, 9.03096971276781, 8.6884163345032, 6.70714013596942, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:946:76: style: Trailing whitespace is superfluous.
     5.42760354843797, 11023.008148178, 10757.6074246061, 10.3212415130941, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:947:64: style: Trailing whitespace is superfluous.
     342, 85230.3906248194, 83637.2098898703, 63908.9005337613, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:948:76: style: Trailing whitespace is superfluous.
     50503.3409803586, 8351.48266894462, 8198.39124522083, 6256.5478180529, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:949:78: style: Trailing whitespace is superfluous.
     4943.38710582508, 0.362596879736102, 0.34676519960441, 0.27877150637825, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:950:80: style: Trailing whitespace is superfluous.
     0.205629211629577, 919.524423863467, 897.358910023851, 0.0354212321803871, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:951:63: style: Trailing whitespace is superfluous.
     NA, 24734320.2347179, 23739526.0561028, 20053856.1050987, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:952:74: style: Trailing whitespace is superfluous.
     13253700.3421484, 2430841.31531184, 2333324.01349041, 1970779.08535, 
                                                                         ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:953:77: style: Trailing whitespace is superfluous.
     1300690.80844354, 13.2773655005116, 13.0660405029127, 10.7644847370875, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:954:76: style: Trailing whitespace is superfluous.
     7.10443218077579, 183081.599675642, 178579.272961098, 10.222224857685, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:955:65: style: Trailing whitespace is superfluous.
     2684, 670043.523335538, 659832.820930909, 543428.432646068, 
                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:956:77: style: Trailing whitespace is superfluous.
     350514.576416981, 65933.9060562408, 64890.1422211043, 53467.5855605925, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:957:80: style: Trailing whitespace is superfluous.
     34418.1730397143, 0.157297884104754, 0.156475898549466, 0.127492542408767, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:958:80: style: Trailing whitespace is superfluous.
     0.077250404752038, 4635.73387424318, 4522.18117217785, 0.0129886863067623, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:959:63: style: Trailing whitespace is superfluous.
     NA, 8726709.76918194, 8509139.80676718, 7090065.29625965, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:960:77: style: Trailing whitespace is superfluous.
     3926639.89772604, 861113.241676397, 839951.089435309, 699649.536883352, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:961:77: style: Trailing whitespace is superfluous.
     387330.477859665, 12.8988843882597, 12.9121637475183, 10.4802690886378, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:962:76: style: Trailing whitespace is superfluous.
     5.80194428811109, 66758.7378688474, 65051.149122605, 10.1578999504705, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:963:65: style: Trailing whitespace is superfluous.
     1230, 376748.106037648, 371722.519769521, 306136.669785612, 
                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:964:77: style: Trailing whitespace is superfluous.
     168154.639102169, 37137.9449726984, 36669.0425318721, 30181.0899072392, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:965:80: style: Trailing whitespace is superfluous.
     16560.8788517144, 0.220118642904161, 0.224132340457696, 0.179085681715788, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:966:1: style: lines should not be more than 80 characters.
     0.0935705218729192, 2686.80944055257, 2619.05481354466, 0.0186142528112237, 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:966:81: style: Trailing whitespace is superfluous.
     0.0935705218729192, 2686.80944055257, 2619.05481354466, 0.0186142528112237, 
                                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:967:79: style: Trailing whitespace is superfluous.
     NA, 3149243.0437327, 3052926.06240188, 2494463.9425814, 1402856.75239354, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:968:77: style: Trailing whitespace is superfluous.
     311330.170550333, 301972.080016081, 246587.506546996, 138697.131587307, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:969:77: style: Trailing whitespace is superfluous.
     18.8382666734899, 18.7248161821635, 14.9207550250329, 8.39242000565244, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:970:64: style: Trailing whitespace is superfluous.
     16526.4764506414, 16126.8381530884, 10.1246882793017, 592, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:971:76: style: Trailing whitespace is superfluous.
     198969.57241113, 196995.562596587, 157972.243503533, 88464.8981324734, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:972:76: style: Trailing whitespace is superfluous.
     19637.8215025045, 19453.745728427, 15587.5105227152, 8734.27430014119, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:973:80: style: Trailing whitespace is superfluous.
     0.461537989741806, 0.46609609397864, 0.368394015098447, 0.204252592168592, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:974:65: style: Trailing whitespace is superfluous.
     989.521563252434, 965.783547534023, 0.0267550721683242, NA, 
                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:975:76: style: Trailing whitespace is superfluous.
     410159.052987912, 385812.480595365, 320515.24859298, 214947.549805779, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:976:76: style: Trailing whitespace is superfluous.
     40692.4825480178, 38397.8948935883, 31805.509414907, 21330.9677276176, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:977:77: style: Trailing whitespace is superfluous.
     16.4268679485968, 15.8903781768564, 12.8393469870021, 8.61095141255821, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:978:63: style: Trailing whitespace is superfluous.
     2477.19058041699, 2416.42423271669, 10.2922535211268, 79, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:979:77: style: Trailing whitespace is superfluous.
     81438.4417148268, 80681.9588553724, 64149.3980348121, 42394.3574011896, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:980:77: style: Trailing whitespace is superfluous.
     8268.53878647964, 8200.61318793192, 6516.66800702174, 4301.81785700682, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:981:77: style: Trailing whitespace is superfluous.
     1.35400777231671, 1.36049211743713, 1.06830181855229, 0.69365495778391, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:982:65: style: Trailing whitespace is superfluous.
     479.197544433944, 467.327300317622, 0.0682403792607294, NA, 
                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:983:77: style: Trailing whitespace is superfluous.
     771467.209320922, 732050.180312242, 594869.528555567, 348424.528190823, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:984:75: style: Trailing whitespace is superfluous.
     75200.4532612576, 71374.2154548395, 57969.449645369, 33981.258592014, 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:985:77: style: Trailing whitespace is superfluous.
     5.99256825271984, 5.83225818416213, 4.61946528919991, 2.70789606438286, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:986:63: style: Trailing whitespace is superfluous.
     12548.9523172517, 12237.8353634379, 10.261089187056, 390, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:987:76: style: Trailing whitespace is superfluous.
     67725.776332727, 66963.2518458935, 51773.5640053598, 29523.0606645026, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:988:76: style: Trailing whitespace is superfluous.
     6598.60660165462, 6524.02757020543, 5044.1607201698, 2878.85145954686, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:989:80: style: Trailing whitespace is superfluous.
     0.290705728470311, 0.29472101852497, 0.218736893771199, 0.117139237278773, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:990:64: style: Trailing whitespace is superfluous.
     918.79844845396, 896.153065062423, 0.0329972124483689, NA, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:991:77: style: Trailing whitespace is superfluous.
     5814842.02381765, 5581871.75199466, 5063112.24723023, 3921326.74952457, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:992:76: style: Trailing whitespace is superfluous.
     567119.88229695, 544693.663630036, 494021.440266749, 382428.492632065, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:993:74: style: Trailing whitespace is superfluous.
     11.9658114960386, 11.7775019722686, 10.423488249594, 8.068959308948, 
                                                                         ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:994:65: style: Trailing whitespace is superfluous.
     47395.0205955277, 46248.6582394615, 10.2591884207806, 1192, 
                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:995:77: style: Trailing whitespace is superfluous.
     264753.583711924, 261041.876823426, 232337.765767041, 176708.615152351, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:996:77: style: Trailing whitespace is superfluous.
     25900.9724903664, 25554.1609150965, 22760.5800885678, 17285.3700409247, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:997:62: style: Trailing whitespace is superfluous.
     0.235219925111481, 0.235203533665711, 0.209932369991826, 
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:998:79: style: Trailing whitespace is superfluous.
     0.154619302821468, 2054.56657905311, 2005.0698065078, 0.0192011055793722, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:999:63: style: Trailing whitespace is superfluous.
     NA, 1135007.46895341, 1041306.04274271, 852576.211113167, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1000:77: style: Trailing whitespace is superfluous.
     665036.315348918, 109581.983684192, 100745.861808074, 82359.2177734008, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1001:77: style: Trailing whitespace is superfluous.
     64188.7589396098, 8.92733407079475, 8.40614298421901, 6.70957237816959, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1002:77: style: Trailing whitespace is superfluous.
     5.22927652318338, 12274.8832759248, 11984.7904083009, 10.3802880970432, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1003:64: style: Trailing whitespace is superfluous.
     424, 86378.2752899206, 82950.7185725176, 65467.1285045863, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1004:75: style: Trailing whitespace is superfluous.
     49872.2876058711, 8330.9171564562, 8013.11905665117, 6324.2575556116, 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1005:78: style: Trailing whitespace is superfluous.
     4811.14698721196, 0.3591845424795, 0.328581281430223, 0.272413041828566, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1006:79: style: Trailing whitespace is superfluous.
     0.199585580362985, 859.46810922804, 838.973427523266, 0.0323144527593538, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1007:62: style: Trailing whitespace is superfluous.
     NA, 22109258.4241942, 21286150.7639688, 18101192.661838, 
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1008:77: style: Trailing whitespace is superfluous.
     11777249.8904156, 2169978.05773659, 2090536.19720928, 1776818.82058833, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1009:77: style: Trailing whitespace is superfluous.
     1154570.01418086, 11.8781561688587, 11.7341945886876, 9.72605753291793, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1010:77: style: Trailing whitespace is superfluous.
     6.31995465918507, 182686.439451409, 178157.621420789, 10.2219035532995, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1011:63: style: Trailing whitespace is superfluous.
     2485, 629292.08996624, 618063.99548877, 516313.179959137, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1012:77: style: Trailing whitespace is superfluous.
     331736.962343409, 61897.8735152078, 60851.5309286738, 50806.2707444038, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1013:78: style: Trailing whitespace is superfluous.
     32569.82676763, 0.145831620066131, 0.146427053836085, 0.119702147807425, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1014:1: style: lines should not be more than 80 characters.
     0.0749879786014173, 4757.75439532006, 4640.42558670565, 0.0132997618057585, 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1014:81: style: Trailing whitespace is superfluous.
     0.0749879786014173, 4757.75439532006, 4640.42558670565, 0.0132997618057585, 
                                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1015:63: style: Trailing whitespace is superfluous.
     NA, 5034540.44301573, 4792002.81188057, 4124574.77299388, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1016:77: style: Trailing whitespace is superfluous.
     2251827.63960928, 501113.689957043, 477328.756940536, 410576.654558219, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1017:77: style: Trailing whitespace is superfluous.
     224080.665463397, 11.1369275135497, 10.8912077919935, 9.12480048382354, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1018:77: style: Trailing whitespace is superfluous.
     4.98004779847017, 44995.6856904532, 43826.9809975931, 10.1275299907721, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1019:64: style: Trailing whitespace is superfluous.
     978, 256620.437311143, 249994.333846942, 210212.854057823, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1020:77: style: Trailing whitespace is superfluous.
     113305.776314712, 25503.7729057977, 24866.0578614461, 20899.6550018763, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1021:79: style: Trailing whitespace is superfluous.
     11254.3347392362, 0.238266310000929, 0.23933525112779, 0.195841878983368, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1022:80: style: Trailing whitespace is superfluous.
     0.101855986237282, 2076.76056451606, 2023.76841103196, 0.0216860089823182, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1023:63: style: Trailing whitespace is superfluous.
     NA, 2930720.83473766, 2811078.10619874, 2336117.84708351, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1024:77: style: Trailing whitespace is superfluous.
     1310866.49192698, 289817.499404921, 277975.378781365, 231011.764408175, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1025:77: style: Trailing whitespace is superfluous.
     129619.127689025, 16.4799563642046, 16.2069221596818, 13.1360728902901, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1026:75: style: Trailing whitespace is superfluous.
     7.3705610346769, 17586.0598778295, 17151.6452070639, 10.136372745491, 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1027:62: style: Trailing whitespace is superfluous.
     581, 188090.65186869, 184124.376344374, 150196.69175928, 
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1028:77: style: Trailing whitespace is superfluous.
     83713.6383299838, 18561.4852156684, 18172.2448192331, 14820.3635731499, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1029:79: style: Trailing whitespace is superfluous.
     8258.31855898374, 0.484666302001212, 0.48465383153595, 0.388135990434797, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1030:80: style: Trailing whitespace is superfluous.
     0.213260377691742, 1088.83090101928, 1061.86742013887, 0.0284633859870514, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1031:63: style: Trailing whitespace is superfluous.
     NA, 192938.297397879, 174591.323854781, 152229.432872265, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1032:76: style: Trailing whitespace is superfluous.
     107830.56508718, 18523.1865940969, 16848.8641179399, 14617.9403394981, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1033:77: style: Trailing whitespace is superfluous.
     10338.6411433772, 14.1941411853539, 13.2436323831631, 11.2015882345017, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1034:76: style: Trailing whitespace is superfluous.
     7.92240208283446, 1304.9881885922, 1272.22378502141, 10.4780141843972, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1035:62: style: Trailing whitespace is superfluous.
     38, 56334.1242931068, 54281.2903496883, 44097.806816064, 
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1036:77: style: Trailing whitespace is superfluous.
     30907.2863476483, 5513.26688378136, 5354.84324843232, 4315.89509059742, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1037:77: style: Trailing whitespace is superfluous.
     3011.92612419295, 1.71910463688705, 1.90732255836941, 1.31648222082104, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1038:79: style: Trailing whitespace is superfluous.
     0.865221966885352, 348.720483618112, 340.055947685242, 0.109530388663881, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1039:63: style: Trailing whitespace is superfluous.
     NA, 686126.372181393, 649378.680173144, 535690.997976812, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1040:77: style: Trailing whitespace is superfluous.
     310523.935091531, 66681.4579901806, 63094.8970887265, 52030.9758051489, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1041:75: style: Trailing whitespace is superfluous.
     30160.3788860497, 5.05791151498442, 4.9085985924843, 3.9466454332701, 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1042:76: style: Trailing whitespace is superfluous.
     2.28772033878605, 13183.5952037975, 12853.953302544, 10.2707355242567, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1043:64: style: Trailing whitespace is superfluous.
     401, 64863.8811153508, 63703.3507729971, 50743.1294460617, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1044:77: style: Trailing whitespace is superfluous.
     29043.1911920397, 6239.18238597491, 6123.87856936035, 4876.63985878483, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1045:80: style: Trailing whitespace is superfluous.
     2785.26175129767, 0.278026893344774, 0.278691726175641, 0.217192533523134, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1046:79: style: Trailing whitespace is superfluous.
     0.117021578698415, 965.582070832502, 942.293039165308, 0.032924273152432, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1047:63: style: Trailing whitespace is superfluous.
     NA, 5226182.64786368, 4989518.19730631, 4584610.16753889, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1048:77: style: Trailing whitespace is superfluous.
     3465665.04759403, 510522.410442191, 487404.479054081, 447758.255550884, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1049:76: style: Trailing whitespace is superfluous.
     338637.057544908, 10.677222291072, 10.4503505406853, 9.36455350322131, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1050:76: style: Trailing whitespace is superfluous.
     7.0823592959803, 47814.1595749183, 46640.0124241303, 10.2529801324503, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1051:64: style: Trailing whitespace is superfluous.
     1017, 270639.810409584, 265956.64138975, 239130.448810049, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1052:76: style: Trailing whitespace is superfluous.
     177690.08729655, 26225.6227467882, 25768.0354615658, 23155.2383156256, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1053:80: style: Trailing whitespace is superfluous.
     17225.5214815465, 0.238145690247698, 0.237905796038427, 0.210858065781129, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1054:80: style: Trailing whitespace is superfluous.
     0.151669600562585, 2241.73195872473, 2187.11340601089, 0.0215584465837696, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1055:63: style: Trailing whitespace is superfluous.
     NA, 1007536.06605392, 931797.932662263, 777636.984559737, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1056:77: style: Trailing whitespace is superfluous.
     587734.420758495, 96273.8487627303, 89153.4811749145, 74277.5661262165, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1057:77: style: Trailing whitespace is superfluous.
     56231.2404781082, 7.66524847630036, 7.27833318344425, 5.91392167124714, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1058:74: style: Trailing whitespace is superfluous.
     4.47708734962466, 12559.7818597, 12249.1618517422, 10.4373983739837, 
                                                                         ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1059:63: style: Trailing whitespace is superfluous.
     444, 73505.127063156, 71455.4028359012, 56491.0080656429, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1060:76: style: Trailing whitespace is superfluous.
     42240.1864968343, 6969.5361803891, 6779.13997732027, 5357.74171999942, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1061:79: style: Trailing whitespace is superfluous.
     4015.2426686605, 0.308383322725064, 0.294650131238147, 0.235902651727324, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1062:80: style: Trailing whitespace is superfluous.
     0.165971124972054, 859.796086285173, 838.617808771005, 0.0338544077885648, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1063:62: style: Trailing whitespace is superfluous.
     NA, 16160886.067129, 15365361.1650373, 13396917.6053513, 
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1064:76: style: Trailing whitespace is superfluous.
     8698626.8471893, 1588273.66804518, 1510729.14070094, 1316443.82751109, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1065:76: style: Trailing whitespace is superfluous.
     853623.420673826, 10.5877651108607, 10.329811948343, 8.77569042902078, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1066:77: style: Trailing whitespace is superfluous.
     5.69043260809559, 150010.285590485, 146249.433025087, 10.2261437908497, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1067:65: style: Trailing whitespace is superfluous.
     2102, 509241.793469263, 496788.722122693, 424369.945000615, 
                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1068:76: style: Trailing whitespace is superfluous.
     276454.29483109, 49943.3984686181, 48742.1936925578, 41591.9149687708, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1069:79: style: Trailing whitespace is superfluous.
     27009.2448392861, 0.150972423408927, 0.151045865414308, 0.12536462894588, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1070:1: style: lines should not be more than 80 characters.
     0.0796338235010496, 4277.02593268138, 4171.09899970208, 0.0147658260535502, 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1070:81: style: Trailing whitespace is superfluous.
     0.0796338235010496, 4277.02593268138, 4171.09899970208, 0.0147658260535502, 
                                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1071:62: style: Trailing whitespace is superfluous.
     NA, 2055872.36362972, 1970400.75252508, 1691080.4740114, 
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1072:77: style: Trailing whitespace is superfluous.
     909424.567683906, 205434.776424236, 197038.744381022, 168967.917409174, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1073:77: style: Trailing whitespace is superfluous.
     90895.2297486594, 10.4470259010297, 10.2904016091061, 8.59256762823555, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1074:77: style: Trailing whitespace is superfluous.
     4.62231777887177, 19664.4268302223, 19147.8187019115, 10.1234193222054, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1075:64: style: Trailing whitespace is superfluous.
     573, 159240.188061563, 156099.091613281, 130918.126399317, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1076:77: style: Trailing whitespace is superfluous.
     69357.2842596555, 15963.7029657877, 15652.6361636687, 13123.9337502234, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1077:80: style: Trailing whitespace is superfluous.
     6948.68401969129, 0.349684789322683, 0.348836353136291, 0.288456099151125, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1078:80: style: Trailing whitespace is superfluous.
     0.145836241162016, 1300.69182026607, 1267.40615492044, 0.0284471708857295, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1079:63: style: Trailing whitespace is superfluous.
     NA, 1982911.04580825, 1921601.94758329, 1585729.95353527, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1080:77: style: Trailing whitespace is superfluous.
     900392.793102773, 195652.310926404, 189608.681041438, 156414.020437886, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1081:77: style: Trailing whitespace is superfluous.
     88842.5353888346, 14.2409648526507, 14.1518870326204, 11.3849233723368, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1082:77: style: Trailing whitespace is superfluous.
     6.46659074918202, 13738.6976901349, 13398.1200248692, 10.1586034912718, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1083:64: style: Trailing whitespace is superfluous.
     456, 149270.355646221, 148346.203579614, 119739.132632711, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1084:77: style: Trailing whitespace is superfluous.
     67175.2834489969, 14701.1735517827, 14607.9246486454, 11786.2873057903, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1085:78: style: Trailing whitespace is superfluous.
     6618.96227267534, 0.5286229664949, 0.533351801190002, 0.425583604969715, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1086:79: style: Trailing whitespace is superfluous.
     0.233266993053577, 960.12099989623, 936.632450125717, 0.0321788988216837, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1087:63: style: Trailing whitespace is superfluous.
     NA, 27842.0980747963, 27842.0980747963, 21893.9350289732, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1088:76: style: Trailing whitespace is superfluous.
     15300.653987912, 2521.51210052367, 2521.51210052367, 1982.41170636093, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1089:77: style: Trailing whitespace is superfluous.
     1385.37790686128, 12.3553929700808, 12.6923579396303, 9.71380452843788, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1090:77: style: Trailing whitespace is superfluous.
     6.78834277566396, 204.081902261598, 198.663803252078, 10.6461538461538, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1091:62: style: Trailing whitespace is superfluous.
     7, 19835.3828909336, 19835.3828909336, 15603.0168610926, 
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1092:77: style: Trailing whitespace is superfluous.
     10857.3002439543, 1796.77806336611, 1796.77806336611, 1413.26914880826, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1093:77: style: Trailing whitespace is superfluous.
     983.405900749899, 3.17284147662986, 3.24967201036731, 2.49821957772324, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1094:78: style: Trailing whitespace is superfluous.
     1.71084462657375, 109.911399998183, 107.132751662747, 0.251882170244631, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1095:63: style: Trailing whitespace is superfluous.
     NA, 470110.379360122, 431846.324983593, 365007.528729231, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1096:75: style: Trailing whitespace is superfluous.
     205038.229908603, 46339.3346253642, 42497.3834117414, 35993.99973916, 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1097:77: style: Trailing whitespace is superfluous.
     20198.5814815074, 4.08169680772453, 3.84195811555568, 3.17045108697247, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1098:77: style: Trailing whitespace is superfluous.
     1.77914694330777, 11352.9585386323, 11061.3864424169, 10.2679389312977, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1099:64: style: Trailing whitespace is superfluous.
     317, 50430.1536667303, 49060.2906314991, 39290.2837321291, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1100:77: style: Trailing whitespace is superfluous.
     21233.7975402165, 4973.81708020098, 4831.24389760604, 3875.83443422797, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1101:78: style: Trailing whitespace is superfluous.
     2088.845542348, 0.265289536440745, 0.263064659448664, 0.208158060060431, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1102:80: style: Trailing whitespace is superfluous.
     0.098783900866168, 1000.53616646723, 974.967741825833, 0.0359908661128857, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1103:63: style: Trailing whitespace is superfluous.
     NA, 2644443.00653416, 2452688.24662455, 2370532.59513184, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1104:77: style: Trailing whitespace is superfluous.
     1746843.22842019, 258840.747655622, 239987.804050144, 231886.111421249, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1105:77: style: Trailing whitespace is superfluous.
     170995.746363768, 8.73955706077533, 8.31394929091331, 7.82945467714225, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1106:77: style: Trailing whitespace is superfluous.
     5.77353873387931, 29617.1471684012, 28865.6805150877, 10.3018744906275, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1107:64: style: Trailing whitespace is superfluous.
     751, 172363.795508447, 166883.854307209, 155628.904469869, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1108:77: style: Trailing whitespace is superfluous.
     112457.754233293, 16696.3024251288, 16169.3888622575, 15047.5029684423, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1109:80: style: Trailing whitespace is superfluous.
     10899.9402725778, 0.311045841801204, 0.304425864777366, 0.280145945962142, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1110:79: style: Trailing whitespace is superfluous.
     0.197854672900316, 1663.6005389787, 1621.90277056483, 0.0247427796937637, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1111:62: style: Trailing whitespace is superfluous.
     NA, 686668.702900187, 634282.690168651, 523970.51499513, 
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1112:75: style: Trailing whitespace is superfluous.
     395115.44445336, 66515.341023636, 61426.6213512923, 50750.5991375514, 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1113:74: style: Trailing whitespace is superfluous.
     38293.6168162463, 6.795305103459, 6.43206607256721, 5.1847558776021, 
                                                                         ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1114:77: style: Trailing whitespace is superfluous.
     3.91213223561276, 9788.42598101707, 9550.06068940696, 10.3747747747748, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1115:64: style: Trailing whitespace is superfluous.
     322, 66977.2861017247, 65344.3172315831, 52721.2416725253, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1116:75: style: Trailing whitespace is superfluous.
     37416.7504715762, 6450.79580591048, 6291.53259647734, 5071.298012754, 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1117:79: style: Trailing whitespace is superfluous.
     3605.85692469862, 0.381157341979156, 0.36876715941146, 0.300815951496285, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1118:80: style: Trailing whitespace is superfluous.
     0.196558821313238, 831.144051785545, 810.870081116431, 0.0415207543632187, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1119:62: style: Trailing whitespace is superfluous.
     NA, 8213619.70038065, 7761437.25545366, 6841022.6403503, 
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1120:76: style: Trailing whitespace is superfluous.
     4381353.17210634, 809372.587472363, 764943.899519132, 673832.33594324, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1121:77: style: Trailing whitespace is superfluous.
     431209.609966955, 8.98565305940197, 8.71423436409236, 7.48088542249907, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1122:77: style: Trailing whitespace is superfluous.
     4.78728834039663, 90073.8746668492, 87780.9647478772, 10.2298779306336, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1123:65: style: Trailing whitespace is superfluous.
     1582, 340799.184877671, 333995.320912615, 284896.005809557, 
                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1124:77: style: Trailing whitespace is superfluous.
     179099.231824748, 33518.5298575015, 32859.1223102119, 27986.5077850127, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1125:80: style: Trailing whitespace is superfluous.
     17556.8981627412, 0.195884788681132, 0.196512850095277, 0.163705163714466, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1126:1: style: lines should not be more than 80 characters.
     0.0987445365613301, 3201.98016251359, 3121.96078502582, 0.0169584124877272, 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1126:81: style: Trailing whitespace is superfluous.
     0.0987445365613301, 3201.98016251359, 3121.96078502582, 0.0169584124877272, 
                                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1127:63: style: Trailing whitespace is superfluous.
     NA, 621975.280820188, 599658.039833416, 514665.187347558, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1128:76: style: Trailing whitespace is superfluous.
     274319.005284097, 62222.075315115, 59982.4327072404, 51495.1082738847, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1129:77: style: Trailing whitespace is superfluous.
     27417.4099769871, 8.81902237571197, 8.73027846267469, 7.29863974814708, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1130:77: style: Trailing whitespace is superfluous.
     3.88599626172193, 7055.43910246534, 6870.62078989673, 10.1274468085106, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1131:64: style: Trailing whitespace is superfluous.
     266, 65472.0425498674, 64832.8869538209, 54335.2508688595, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1132:77: style: Trailing whitespace is superfluous.
     28435.6373568118, 6619.33336625399, 6554.47512704703, 5498.74513088442, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1133:80: style: Trailing whitespace is superfluous.
     2863.11365275015, 0.532379913381943, 0.540795162585538, 0.446653705167028, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1134:80: style: Trailing whitespace is superfluous.
     0.219549563220965, 650.008016449338, 632.868155445136, 0.0395873372050692, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1135:63: style: Trailing whitespace is superfluous.
     NA, 1014388.11599922, 935077.566101982, 808257.977324796, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1136:77: style: Trailing whitespace is superfluous.
     463036.119379114, 99942.5958475704, 92204.8243281506, 79633.1055462163, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1137:77: style: Trailing whitespace is superfluous.
     45612.3785937907, 12.1463093579143, 11.5061066444205, 9.67803894718728, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1138:77: style: Trailing whitespace is superfluous.
     5.54340275287094, 8228.22743127728, 8013.55551252974, 10.2142981691369, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1139:63: style: Trailing whitespace is superfluous.
     322, 92197.229741169, 88768.6657492679, 73521.9965436808, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1140:77: style: Trailing whitespace is superfluous.
     42169.8016834586, 9112.09081252397, 8790.19854972918, 7269.81842318188, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1141:80: style: Trailing whitespace is superfluous.
     4161.45850060173, 0.594319809447542, 0.585307992224963, 0.476185852774679, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1142:78: style: Trailing whitespace is superfluous.
     0.2683521824691, 700.417773506137, 682.323362484827, 0.0372198874992966, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1143:63: style: Trailing whitespace is superfluous.
     NA, 1306.57810846998, 1306.57810846998, 1084.63116383861, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1144:77: style: Trailing whitespace is superfluous.
     652.301551650382, 130.657810846998, 130.657810846998, 108.463116383861, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1145:77: style: Trailing whitespace is superfluous.
     65.2301551650382, 50.6853688995217, 51.5120175069231, 42.0755026451913, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1146:62: style: Trailing whitespace is superfluous.
     25.3043768028889, 2.5778210494238, 2.53645299040049, 10, 
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1147:62: style: Trailing whitespace is superfluous.
     1, 1306.57767627867, 1306.57767627867, 1084.63080506315, 
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1148:77: style: Trailing whitespace is superfluous.
     652.301335881376, 130.657767627867, 130.657767627867, 108.463080506315, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1149:67: style: Trailing whitespace is superfluous.
     65.2301335881376, 9.51820431832689e-07, 8.94966683656228e-07, 
                                                                  ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1150:67: style: Trailing whitespace is superfluous.
     4.54866789341456e-07, 2.74766891269394e-07, 2.57782019672939, 
                                                                  ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1151:65: style: Trailing whitespace is superfluous.
     2.53645215138986, 0, NA, 271022.963202617, 235983.24933813, 
                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1152:76: style: Trailing whitespace is superfluous.
     209107.655291196, 118084.053515315, 26467.159407865, 22996.8220115546, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1153:77: style: Trailing whitespace is superfluous.
     20420.5129940311, 11531.4333586623, 3.94218197938041, 3.51555568983457, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1154:77: style: Trailing whitespace is superfluous.
     3.04155716502207, 1.71756281368964, 6713.83501479675, 6541.44722498671, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1155:64: style: Trailing whitespace is superfluous.
     10.2589446589447, 224, 33835.2032161909, 31984.9259769881, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1156:77: style: Trailing whitespace is superfluous.
     25949.1996515782, 14932.3502817317, 3292.93002986286, 3106.31076256708, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1157:79: style: Trailing whitespace is superfluous.
     2526.93903742136, 1456.18860299877, 0.265329432770254, 0.253495994431879, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1158:78: style: Trailing whitespace is superfluous.
     0.203964788912365, 0.111207095874829, 707.14789362911, 689.364651405083, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1159:65: style: Trailing whitespace is superfluous.
     0.0429682931276711, NA, 1840799.88518573, 1662653.62707663, 
                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1160:77: style: Trailing whitespace is superfluous.
     1700070.66021318, 1202246.11340985, 179717.469774873, 161824.721632254, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1161:77: style: Trailing whitespace is superfluous.
     165916.684945973, 117376.568143174, 8.68521258056422, 8.02760818463344, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1162:77: style: Trailing whitespace is superfluous.
     8.01826155923187, 5.67246160085368, 20692.3512933978, 20158.5226770311, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1163:70: style: Trailing whitespace is superfluous.
     10.3, 535, 138934.490750866, 133493.492007848, 127423.484500568, 
                                                                     ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1164:77: style: Trailing whitespace is superfluous.
     90375.3223817762, 13574.5399673374, 13007.4698294474, 12444.8030868634, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1165:79: style: Trailing whitespace is superfluous.
     8825.58455716671, 0.356075190488318, 0.32265071834479, 0.321973580919898, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1166:80: style: Trailing whitespace is superfluous.
     0.225289048926177, 1439.11729078269, 1402.90822006418, 0.0303285092126776, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1167:63: style: Trailing whitespace is superfluous.
     NA, 704798.204988495, 603250.235357743, 547599.971800698, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1168:76: style: Trailing whitespace is superfluous.
     398469.541658067, 67820.5110501821, 57953.5519611244, 52648.146337472, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1169:77: style: Trailing whitespace is superfluous.
     38364.3219153479, 6.29468582547938, 5.51565945870652, 4.88647955252115, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1170:65: style: Trailing whitespace is superfluous.
     3.56074216524236, 10774.2487759533, 10507.0939195936, 10.4, 
                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1171:64: style: Trailing whitespace is superfluous.
     337, 61161.0105176753, 57386.1373015135, 48144.5827995871, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1172:76: style: Trailing whitespace is superfluous.
     34028.8959238023, 5841.72173780131, 5462.99101470551, 4589.9755791124, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1173:80: style: Trailing whitespace is superfluous.
     3250.13044169267, 0.329945266136304, 0.288904902010947, 0.255269615490925, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1174:79: style: Trailing whitespace is superfluous.
     0.173609523075473, 872.726107972612, 851.392020384412, 0.037764884083605, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1175:63: style: Trailing whitespace is superfluous.
     NA, 4616784.90462722, 4178816.14979796, 3913557.70171751, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1176:77: style: Trailing whitespace is superfluous.
     2554442.69204091, 452018.578822478, 408686.661858273, 383051.058840482, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1177:75: style: Trailing whitespace is superfluous.
     249796.475117878, 8.00950466075253, 7.4323024353039, 6.7874405717601, 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1178:77: style: Trailing whitespace is superfluous.
     4.42624733901026, 56435.2725877569, 54987.8944534046, 10.2676025917927, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1179:65: style: Trailing whitespace is superfluous.
     1122, 225446.950298813, 215522.399119057, 192771.285146683, 
                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1180:77: style: Trailing whitespace is superfluous.
     126458.078612924, 22138.0417222242, 21151.7580584934, 18916.4082223305, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1181:79: style: Trailing whitespace is superfluous.
     12366.457538465, 0.216904283759287, 0.204497387905837, 0.184139764419646, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1182:78: style: Trailing whitespace is superfluous.
     0.11770300260676, 2494.1128798227, 2430.99077338067, 0.0200445310046681, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1183:63: style: Trailing whitespace is superfluous.
     NA, 275787.724292771, 253403.586155013, 226908.683692812, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1184:76: style: Trailing whitespace is superfluous.
     120530.397845049, 27682.5765875838, 25439.2683678643, 22771.649303255, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1185:77: style: Trailing whitespace is superfluous.
     12084.1659364171, 7.27193029719731, 6.86224751091692, 5.98187982833086, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1186:77: style: Trailing whitespace is superfluous.
     3.17438704129893, 3806.77144254986, 3707.13360708628, 10.0980810234542, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1187:63: style: Trailing whitespace is superfluous.
     130, 39970.7785835067, 38726.0335666978, 32828.110682293, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1188:77: style: Trailing whitespace is superfluous.
     17608.7452420895, 4033.35973502829, 3903.80018970186, 3311.36183006191, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1189:80: style: Trailing whitespace is superfluous.
     1773.59006137191, 0.475582009698855, 0.458275800139556, 0.394584534944012, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1190:80: style: Trailing whitespace is superfluous.
     0.199025545829367, 519.740553304247, 506.625217522785, 0.0555691462820393, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1191:63: style: Trailing whitespace is superfluous.
     NA, 601850.029512855, 553762.456283086, 482174.979105569, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1192:75: style: Trailing whitespace is superfluous.
     280628.487044034, 59501.7474723892, 54716.38022791, 47687.6570252827, 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1193:77: style: Trailing whitespace is superfluous.
     27748.4073510843, 11.4934665205034, 10.8500226304997, 9.21143517197829, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1194:77: style: Trailing whitespace is superfluous.
     5.35993318574334, 5177.00620315402, 5042.97383436792, 10.1345767575323, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1195:63: style: Trailing whitespace is superfluous.
     194, 71631.5956095614, 69418.9105949557, 57326.385906288, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1196:76: style: Trailing whitespace is superfluous.
     32736.367696245, 7064.33844356213, 6842.81479981682, 5661.89127120489, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1197:80: style: Trailing whitespace is superfluous.
     3233.34761669673, 0.644365573637972, 0.663683030284247, 0.511660581214061, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1198:80: style: Trailing whitespace is superfluous.
     0.287628047494307, 563.306077849202, 548.879860877202, 0.0425839474079928, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1199:64: style: Trailing whitespace is superfluous.
     NA, 0, 0, 0, 0, 0, 0, 0, 0, NaN, NaN, NaN, NaN, 0, 0, NaN, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1200:63: style: Trailing whitespace is superfluous.
     0, 0, 0, 0, 0, 0, 0, 0, 0, NaN, NaN, NaN, NaN, 0, 0, NaN, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1201:63: style: Trailing whitespace is superfluous.
     NA, 141621.839501979, 118504.240025065, 111420.326551367, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1202:77: style: Trailing whitespace is superfluous.
     60179.8315924003, 13727.8475182294, 11377.7215331163, 10799.9314106586, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1203:77: style: Trailing whitespace is superfluous.
     5833.79449650884, 3.36680441275932, 2.86506611510319, 2.64872236398451, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1204:76: style: Trailing whitespace is superfluous.
     1.43075926709523, 4077.4116447645, 3971.18986997845, 10.2368539325843, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1205:64: style: Trailing whitespace is superfluous.
     127, 28732.4826656082, 27448.4870937019, 22306.7231517806, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1206:76: style: Trailing whitespace is superfluous.
     11530.8093510872, 2646.28813809556, 2503.7209519268, 2048.36087002529, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1207:79: style: Trailing whitespace is superfluous.
     1054.8583272402, 0.415846640220984, 0.422003196401469, 0.314292916219148, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1208:78: style: Trailing whitespace is superfluous.
     0.148728975104527, 554.86311997555, 540.499398095246, 0.057175984862777, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1209:63: style: Trailing whitespace is superfluous.
     NA, 639570.443660677, 578311.137892176, 594375.028045688, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1210:77: style: Trailing whitespace is superfluous.
     405765.005366282, 63042.0565024848, 57067.3820467667, 58598.1813276464, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1211:77: style: Trailing whitespace is superfluous.
     40023.3940005327, 7.11818197078814, 6.61935254206466, 6.61641673810222, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1212:77: style: Trailing whitespace is superfluous.
     4.51910704361481, 8856.48284368103, 8621.29365132238, 10.2229591836735, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1213:64: style: Trailing whitespace is superfluous.
     240, 70259.8861778726, 65102.1014320261, 65467.9753290975, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1214:75: style: Trailing whitespace is superfluous.
     44608.331454003, 6906.14802089067, 6380.44109674562, 6435.5902879527, 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1215:80: style: Trailing whitespace is superfluous.
     4391.42389912553, 0.479440842672969, 0.430307598024194, 0.445216559472424, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1216:80: style: Trailing whitespace is superfluous.
     0.303847753759014, 837.614540531694, 815.585189701157, 0.0436342757834894, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1217:62: style: Trailing whitespace is superfluous.
     NA, 1029075.57208749, 903582.49588347, 810173.865369765, 
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1218:77: style: Trailing whitespace is superfluous.
     574057.924643949, 99849.8755816812, 87531.7814895211, 78480.2845813473, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1219:77: style: Trailing whitespace is superfluous.
     55686.1995623813, 6.31814424600857, 5.68294709232754, 4.96595269212058, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1220:77: style: Trailing whitespace is superfluous.
     3.52362423385626, 15803.6714094903, 15402.5332397862, 10.3287316652286, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1221:63: style: Trailing whitespace is superfluous.
     363, 87895.220175611, 85013.6790359047, 69009.9540940686, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1222:77: style: Trailing whitespace is superfluous.
     47929.1930105888, 8534.41943443774, 8260.82718802875, 6672.43739906041, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1223:80: style: Trailing whitespace is superfluous.
     4650.89797167356, 0.270350441729988, 0.255531004653937, 0.208293192935949, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1224:80: style: Trailing whitespace is superfluous.
     0.137769731297871, 1248.13887628193, 1216.85620032236, 0.0365526898209475, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1225:63: style: Trailing whitespace is superfluous.
     NA, 2743755.85169042, 2457629.96854616, 2270499.69475853, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1226:73: style: Trailing whitespace is superfluous.
     1471737.3108707, 269249.239190514, 241004.60417151, 222775.3918996, 
                                                                        ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1227:77: style: Trailing whitespace is superfluous.
     144356.253970987, 6.93977791608714, 6.37674133891817, 5.74193542607778, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1228:76: style: Trailing whitespace is superfluous.
     3.7207174526056, 38797.9619011101, 37794.3202275783, 10.2425565700675, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1229:64: style: Trailing whitespace is superfluous.
     756, 161947.515511327, 154602.030983072, 134271.734246792, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1230:76: style: Trailing whitespace is superfluous.
     86571.003603955, 15922.7449045469, 15182.1446357243, 13194.0830476794, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1231:80: style: Trailing whitespace is superfluous.
     8509.65673807873, 0.211316501948099, 0.201307103463217, 0.176310692136055, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1232:79: style: Trailing whitespace is superfluous.
     0.109801419447066, 2074.56030358584, 2021.76396794453, 0.023872202408598, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1233:42: style: Trailing whitespace is superfluous.
     NA), .Dim = c(16L, 2L, 7L, 9L, 1L)), 
                                         ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1234:54: style: Trailing whitespace is superfluous.
    VB.A.bagr.akl.dkl = structure(c(164601.666771908, 
                                                     ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1235:77: style: Trailing whitespace is superfluous.
      159068.517373039, 122556.019151374, 101913.94283134, 16224.2160782092, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1236:77: style: Trailing whitespace is superfluous.
      15670.35852698, 12069.0505005601, 10075.6253481721, 0.273630153958191, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1237:80: style: Trailing whitespace is superfluous.
      0.270286165947464, 0.203551045589992, 0.16993085533102, 10.1032300767805, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1238:78: style: Trailing whitespace is superfluous.
      40754.4628675392, 39796.7817333635, 31064.3951496661, 23405.7085226711, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1239:77: style: Trailing whitespace is superfluous.
      3945.89641656815, 3843.5055005196, 3001.69897224024, 2283.26456798477, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1240:66: style: Trailing whitespace is superfluous.
      0.0656673543559168, 0.0654357293823441, 0.0499917413537403, 
                                                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1241:64: style: Trailing whitespace is superfluous.
      0.0378918554557618, 0.0117742644081858, 16956.5246337499, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1242:78: style: Trailing whitespace is superfluous.
      16956.5246337499, 12224.3245067848, 8769.66105930804, 1704.87001158061, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1243:79: style: Trailing whitespace is superfluous.
      1704.87001158061, 1228.87391884129, 882.221548338703, 0.153684192943003, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1244:63: style: Trailing whitespace is superfluous.
      0.157285273523283, 0.110775892099091, 0.079527181387664, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1245:78: style: Trailing whitespace is superfluous.
      10.1086597938144, 11711.1925278546, 11711.1925278546, 8538.90022718331, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1246:78: style: Trailing whitespace is superfluous.
      5953.02924796239, 1173.49761849362, 1173.49761849362, 855.483125894881, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1247:1: style: lines should not be more than 80 characters.
      596.823616783546, 0.105099132738128, 0.107566488154876, 0.076624264979963, 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1247:81: style: Trailing whitespace is superfluous.
      596.823616783546, 0.105099132738128, 0.107566488154876, 0.076624264979963, 
                                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1248:64: style: Trailing whitespace is superfluous.
      0.0534379081603987, 0.0156085409970514, 15901.0944050626, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1249:75: style: Trailing whitespace is superfluous.
      13047.8278549802, 11276.1694856168, 9638.102020574, 1541.8610971348, 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1250:79: style: Trailing whitespace is superfluous.
      1259.35945851277, 1093.00788669945, 934.072039315894, 0.295743483428634, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1251:63: style: Trailing whitespace is superfluous.
      0.246390301829006, 0.209649209275824, 0.179163816503257, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1252:77: style: Trailing whitespace is superfluous.
      10.209785202864, 10225.7476581012, 9820.03775431331, 7314.68658155758, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1253:78: style: Trailing whitespace is superfluous.
      6143.83522282902, 977.005815623787, 935.314409689038, 698.498291306077, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1254:80: style: Trailing whitespace is superfluous.
      586.538287461701, 0.18383229550629, 0.179807867253744, 0.131428875448771, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1255:63: style: Trailing whitespace is superfluous.
      0.110416678183352, 0.0297192791429559, 3513.95753038554, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1256:78: style: Trailing whitespace is superfluous.
      3513.95753038554, 2143.39654326164, 2704.67873691203, 362.491661179032, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1257:79: style: Trailing whitespace is superfluous.
      362.491661179032, 221.379482171101, 282.700840180099, 0.158636531519702, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1258:80: style: Trailing whitespace is superfluous.
      0.162170490300614, 0.096881878846604, 0.12371782732328, 10.1318908748824, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1259:78: style: Trailing whitespace is superfluous.
      2583.66258985171, 2583.66258985171, 1568.80113297131, 1920.90716786575, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1260:77: style: Trailing whitespace is superfluous.
      262.512931267796, 262.512931267796, 159.725958900624, 199.95906134374, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1261:63: style: Trailing whitespace is superfluous.
      0.10959690195821, 0.112102364255669, 0.0666101550739859, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1262:63: style: Trailing whitespace is superfluous.
      0.0825919470720877, 0.031841064202529, 23367.1939311758, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1263:78: style: Trailing whitespace is superfluous.
      20166.3905300141, 20015.9417575819, 22358.3471665176, 2327.50288906836, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1264:80: style: Trailing whitespace is superfluous.
      2013.69863405251, 1993.37881815168, 2225.92213445966, 0.0904629395663857, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1265:66: style: Trailing whitespace is superfluous.
      0.0800234398828387, 0.0774765558428798, 0.0865148054057647, 
                                                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1266:78: style: Trailing whitespace is superfluous.
      10.1716967126193, 8384.11873300834, 7750.01873695149, 7232.10644849941, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1267:78: style: Trailing whitespace is superfluous.
      7984.50774744608, 837.664091047671, 776.755965138564, 722.510813928563, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1268:64: style: Trailing whitespace is superfluous.
      796.712725533207, 0.0323739393795496, 0.0306457875223518, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1269:66: style: Trailing whitespace is superfluous.
      0.0279235054270638, 0.0308083081201034, 0.0106698059715967, 
                                                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1270:76: style: Trailing whitespace is superfluous.
      12269.785509759, 12269.785509759, 7944.16806687629, 9589.26599212916, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1271:77: style: Trailing whitespace is superfluous.
      1292.87386273744, 1292.87386273744, 833.56375079479, 1011.45978987848, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1272:63: style: Trailing whitespace is superfluous.
      0.232311405418598, 0.237527113985619, 0.149779782880847, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1273:79: style: Trailing whitespace is superfluous.
      0.181745220538029, 10.2257735247209, 7782.76967278107, 7782.76967278107, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1274:78: style: Trailing whitespace is superfluous.
      5448.89201219757, 5943.28402888738, 812.452282297447, 812.452282297447, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1275:80: style: Trailing whitespace is superfluous.
      565.678621775358, 621.576848958936, 0.141546704142928, 0.144738727859923, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1276:65: style: Trailing whitespace is superfluous.
      0.0989071519755964, 0.108190776425621, 0.0188784382229348, 
                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1277:78: style: Trailing whitespace is superfluous.
      518322.877721555, 478606.732631191, 387852.327450898, 367639.672361569, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1278:78: style: Trailing whitespace is superfluous.
      51727.1097406814, 47778.8105979002, 38658.5085737582, 36745.5427964812, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1279:63: style: Trailing whitespace is superfluous.
      0.291146940845508, 0.274974905025564, 0.217590090869656, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1280:79: style: Trailing whitespace is superfluous.
      0.206822929572834, 10.1489401063748, 62433.2636004542, 60721.7440290652, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1281:77: style: Trailing whitespace is superfluous.
      47697.1533119657, 42006.1917076671, 6214.5447880017, 6046.00656260907, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1282:1: style: lines should not be more than 80 characters.
      4733.88731915039, 4205.66257665902, 0.0341840976281223, 0.0340069537947664, 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1282:82: style: Trailing whitespace is superfluous.
      4733.88731915039, 4205.66257665902, 0.0341840976281223, 0.0340069537947664, 
                                                                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1283:66: style: Trailing whitespace is superfluous.
      0.0260572208722427, 0.0230701987476592, 0.0089443402357497, 
                                                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1284:78: style: Trailing whitespace is superfluous.
      8540098.36137485, 8139119.07031288, 6659692.20125055, 4382491.93966897, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1285:77: style: Trailing whitespace is superfluous.
      842651.698776517, 802681.360989388, 657067.800688344, 432529.39613717, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1286:77: style: Trailing whitespace is superfluous.
      10.8354246404906, 10.5752068583164, 8.44905273245008, 5.5617756226516, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1287:77: style: Trailing whitespace is superfluous.
      10.1382388713208, 459745.643542899, 452830.47330599, 360825.657561198, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1288:78: style: Trailing whitespace is superfluous.
      230435.867798424, 45389.4257967832, 44682.0466767539, 35622.9029305869, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1289:1: style: lines should not be more than 80 characters.
      22749.9072486399, 0.449570312477336, 0.456262135758557, 0.354172619704049, 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1289:81: style: Trailing whitespace is superfluous.
      22749.9072486399, 0.449570312477336, 0.456262135758557, 0.354172619704049, 
                                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1290:63: style: Trailing whitespace is superfluous.
      0.222165092751016, 0.0162404613017379, 564264.277109609, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1291:77: style: Trailing whitespace is superfluous.
      483446.053879741, 435814.34913874, 270145.914283975, 55752.1617018118, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1292:75: style: Trailing whitespace is superfluous.
      47792.53547864, 43049.3716527677, 26702.318828963, 5.99317071695312, 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1293:77: style: Trailing whitespace is superfluous.
      5.25653175030032, 4.62766331738873, 2.8704098710362, 10.1052824651504, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1294:77: style: Trailing whitespace is superfluous.
      97169.6141735738, 92649.6429520922, 76218.1938926985, 45174.395744416, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1295:77: style: Trailing whitespace is superfluous.
      9580.6138263763, 9138.62242985029, 7511.23496525031, 4457.32087268826, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1296:63: style: Trailing whitespace is superfluous.
      0.935297418703417, 0.915992238134732, 0.735044551222554, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1297:63: style: Trailing whitespace is superfluous.
      0.433661372689602, 0.0281570684449567, 1098959.27078472, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1298:77: style: Trailing whitespace is superfluous.
      1079508.68510923, 812113.930984871, 596821.58847396, 108870.315363052, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1299:78: style: Trailing whitespace is superfluous.
      106961.615969194, 80468.0593378069, 59096.7398488729, 7.22272971416446, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1300:78: style: Trailing whitespace is superfluous.
      7.27054210330955, 5.33845283061954, 3.92062590700973, 10.1970432946146, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1301:78: style: Trailing whitespace is superfluous.
      139325.442589503, 138437.704241898, 103523.524222019, 74526.7548922516, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1302:77: style: Trailing whitespace is superfluous.
      13905.5185795526, 13818.1749550097, 10337.477040802, 7426.25432098345, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1303:63: style: Trailing whitespace is superfluous.
      0.680344311147036, 0.693274491574808, 0.507579542470513, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1304:63: style: Trailing whitespace is superfluous.
      0.359271687925707, 0.0326545345900237, 445388.353076974, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1305:75: style: Trailing whitespace is superfluous.
      440178.973215979, 326956.189128, 220106.146542378, 43923.6243074649, 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1306:78: style: Trailing whitespace is superfluous.
      43396.2202283466, 32232.5822018024, 21722.8864062064, 10.2265808600212, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1307:78: style: Trailing whitespace is superfluous.
      10.3563506743773, 7.50459720506238, 5.05766219998309, 10.1135802469136, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1308:77: style: Trailing whitespace is superfluous.
      81104.9648333337, 81022.938419667, 59765.0395259993, 40098.1354812167, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1309:75: style: Trailing whitespace is superfluous.
      7974.0387148014, 7965.53168282344, 5870.8918588644, 3951.5660604799, 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1310:80: style: Trailing whitespace is superfluous.
      1.33313942860484, 1.36224390110013, 0.979719697910081, 0.665129263540792, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1311:79: style: Trailing whitespace is superfluous.
      0.0476084901662539, 909468.930564674, 693947.545328958, 795050.76773401, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1312:78: style: Trailing whitespace is superfluous.
      768775.341297846, 89914.4703818491, 68834.2269680312, 78577.6813815607, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1313:77: style: Trailing whitespace is superfluous.
      76089.7982411023, 4.62608721986691, 3.6233818366449, 4.04281097427665, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1314:78: style: Trailing whitespace is superfluous.
      3.91480972651619, 10.1636877076412, 87123.9544946084, 79375.2334639951, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1315:77: style: Trailing whitespace is superfluous.
      76386.622390961, 72855.8675012058, 8578.01222084606, 7849.07678205973, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1316:78: style: Trailing whitespace is superfluous.
      7515.0829013329, 7199.06804509075, 0.38768544402669, 0.359486795744735, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1317:64: style: Trailing whitespace is superfluous.
      0.340100965780013, 0.324211193836921, 0.0187148450979728, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1318:77: style: Trailing whitespace is superfluous.
      224912.50842074, 212060.321583627, 164913.338120214, 168249.131597131, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1319:78: style: Trailing whitespace is superfluous.
      22313.8965448267, 21094.0622223066, 16359.5412357856, 16691.9090232208, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1320:76: style: Trailing whitespace is superfluous.
      3.87546041400396, 3.7502708155815, 2.8413125570958, 2.89903793914673, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1321:78: style: Trailing whitespace is superfluous.
      10.2032454361055, 45168.7336151902, 44660.0866592788, 33565.4682843738, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1322:77: style: Trailing whitespace is superfluous.
      33281.7641740714, 4481.61291602377, 4436.0921610009, 3330.01605855183, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1323:1: style: lines should not be more than 80 characters.
      3302.07514892303, 0.566550676155908, 0.570302605016187, 0.429942169863037, 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1323:81: style: Trailing whitespace is superfluous.
      3302.07514892303, 0.566550676155908, 0.570302605016187, 0.429942169863037, 
                                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1324:80: style: Trailing whitespace is superfluous.
      0.408064110395656, 0.0435489688531794, 13500917.778057, 12545050.3135319, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1325:78: style: Trailing whitespace is superfluous.
      10539907.5582368, 7539922.62754191, 1332300.73637148, 1237992.96524753, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1326:77: style: Trailing whitespace is superfluous.
      1040052.51649467, 743994.844990613, 7.8222882831068, 7.44450872217735, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1327:78: style: Trailing whitespace is superfluous.
      6.10642206484798, 4.36818955344271, 10.1713179278822, 558638.094548909, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1328:77: style: Trailing whitespace is superfluous.
      548689.833274609, 437842.34660451, 298611.488322951, 55152.6430446119, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1329:79: style: Trailing whitespace is superfluous.
      54158.4641324049, 43229.2952381508, 29467.3644586187, 0.249856927344837, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1330:63: style: Trailing whitespace is superfluous.
      0.252788415071932, 0.196354910965532, 0.130962082130537, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1331:80: style: Trailing whitespace is superfluous.
      0.0116495238760414, 20467221.7404617, 19800315.9027597, 16272305.5599029, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1332:78: style: Trailing whitespace is superfluous.
      9531763.49604424, 2016459.03602111, 1950983.37602327, 1603104.54144965, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1333:77: style: Trailing whitespace is superfluous.
      939287.571217436, 16.509689010281, 16.3798430227358, 13.1253633014669, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1334:78: style: Trailing whitespace is superfluous.
      7.69038468672354, 10.1375140186916, 834199.647123805, 820672.197341359, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1335:77: style: Trailing whitespace is superfluous.
      664332.75403101, 384138.174193798, 81998.3898085843, 80676.0546344462, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1336:79: style: Trailing whitespace is superfluous.
      65296.6470471063, 37771.858018587, 0.512355355608297, 0.520026408764378, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1337:64: style: Trailing whitespace is superfluous.
      0.408576018527457, 0.234099867479197, 0.0143026783154952, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1338:78: style: Trailing whitespace is superfluous.
      1017880.63537713, 877372.775170662, 801137.868266314, 464682.450153758, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1339:78: style: Trailing whitespace is superfluous.
      99987.7760508441, 86288.3895518755, 78690.7460665033, 45667.2323975025, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1340:76: style: Trailing whitespace is superfluous.
      9.1171921395303, 8.05899282081936, 7.17526361548915, 4.1640783373049, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1341:77: style: Trailing whitespace is superfluous.
      10.101231367466, 122089.544258514, 117715.058559453, 96525.0352656106, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1342:78: style: Trailing whitespace is superfluous.
      55022.0175951412, 12060.0533973624, 11640.5096708205, 9534.33237349437, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1343:1: style: lines should not be more than 80 characters.
      5436.36760445979, 0.915930833531695, 0.905042999069445, 0.723706929437271, 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1343:81: style: Trailing whitespace is superfluous.
      5436.36760445979, 0.915930833531695, 0.905042999069445, 0.723706929437271, 
                                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1344:63: style: Trailing whitespace is superfluous.
      0.412886184875809, 0.0280899893334502, 1185610.46053744, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1345:71: style: Trailing whitespace is superfluous.
      1169726.7512716, 891180.03804, 596536.373998841, 115974.4049108, 
                                                                      ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1346:78: style: Trailing whitespace is superfluous.
      114463.445124041, 87172.3339710677, 58348.2993264535, 8.69551669156119, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1347:77: style: Trailing whitespace is superfluous.
      8.7938026748497, 6.53599805638816, 4.37483262886857, 10.2653914590747, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1348:77: style: Trailing whitespace is superfluous.
      146694.118137062, 146165.955860992, 110400.83927492, 73732.2263148865, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1349:78: style: Trailing whitespace is superfluous.
      14453.2892505349, 14403.7606311856, 10876.1698450614, 7261.14648056766, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1350:63: style: Trailing whitespace is superfluous.
      0.816098408754207, 0.834680586572344, 0.614479027349161, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1351:63: style: Trailing whitespace is superfluous.
      0.410007222244544, 0.0290866656532318, 1421362.83893944, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1352:77: style: Trailing whitespace is superfluous.
      1393405.22246572, 1075584.32583738, 675247.92590183, 139784.555514676, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1353:77: style: Trailing whitespace is superfluous.
      137082.682649691, 105788.361215359, 66412.0551091404, 9.4702368751502, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1354:78: style: Trailing whitespace is superfluous.
      9.52179822651254, 7.16703526834347, 4.49933750501538, 10.1411883182276, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1355:77: style: Trailing whitespace is superfluous.
      156974.012376075, 154657.157499585, 118321.846596903, 74859.051389401, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1356:78: style: Trailing whitespace is superfluous.
      15265.3355497255, 15058.9701488563, 11511.4651808901, 7277.35416746712, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1357:63: style: Trailing whitespace is superfluous.
      0.796469127529213, 0.812003176833335, 0.599600321001992, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1358:63: style: Trailing whitespace is superfluous.
      0.379533579245714, 0.0338561364082387, 3202137.93102366, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1359:78: style: Trailing whitespace is superfluous.
      2731650.00986993, 2840488.24083022, 2470239.96011362, 315895.023420716, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1360:78: style: Trailing whitespace is superfluous.
      269496.274635621, 280225.307330735, 243710.079823765, 8.10118732907667, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1361:78: style: Trailing whitespace is superfluous.
      7.07864644292985, 7.18643074668172, 6.24999086486741, 10.1730769230769, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1362:78: style: Trailing whitespace is superfluous.
      204802.780568313, 193482.614135829, 181934.470502677, 156416.054908671, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1363:77: style: Trailing whitespace is superfluous.
      20308.879326223, 19177.7928363682, 18041.5506278039, 15512.1573848109, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1364:80: style: Trailing whitespace is superfluous.
      0.41586854434015, 0.39505539427994, 0.370014293293191, 0.315517622698398, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1365:79: style: Trailing whitespace is superfluous.
      0.015887744634205, 522398.794972297, 495295.657903836, 397341.051607492, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1366:78: style: Trailing whitespace is superfluous.
      338922.211939723, 50870.4937921344, 48344.3084362183, 38696.5206493539, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1367:78: style: Trailing whitespace is superfluous.
      32993.9725390563, 6.44985804830068, 6.27849312329946, 4.90632283168558, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1368:78: style: Trailing whitespace is superfluous.
      4.18329808623459, 10.3190034762457, 68760.4320910267, 67949.1937170291, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1369:77: style: Trailing whitespace is superfluous.
      52447.8225676391, 43963.0472114873, 6772.5083045129, 6703.26368794188, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1370:80: style: Trailing whitespace is superfluous.
      5165.69973628336, 4329.79185931428, 0.728335355138343, 0.739920374185539, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1371:64: style: Trailing whitespace is superfluous.
      0.556862239808552, 0.461727963729082, 0.0339427546166532, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1372:78: style: Trailing whitespace is superfluous.
      31752374.3863842, 30136448.6682261, 25342658.6693496, 16450786.0001746, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1373:77: style: Trailing whitespace is superfluous.
      3124111.6234119, 2966058.03877368, 2493616.82383999, 1618186.54572703, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1374:78: style: Trailing whitespace is superfluous.
      12.0030333857871, 11.6806494125497, 9.58063270326548, 6.21717450402133, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1375:78: style: Trailing whitespace is superfluous.
      10.1623028221912, 1018540.73260344, 1000047.45786217, 811221.210744926, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1376:77: style: Trailing whitespace is superfluous.
      509938.219481864, 99985.9422019626, 98186.6489340759, 79647.643179539, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1377:1: style: lines should not be more than 80 characters.
      50030.1692214559, 0.286860759329676, 0.290451637835384, 0.228360112098484, 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1377:81: style: Trailing whitespace is superfluous.
      50030.1692214559, 0.286860759329676, 0.290451637835384, 0.228360112098484, 
                                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1378:63: style: Trailing whitespace is superfluous.
      0.140310798172541, 0.0107132991917734, 14786823.0498919, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1379:75: style: Trailing whitespace is superfluous.
      14290568.5302871, 11765215.278096, 6742450.2162543, 1461458.2688481, 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1380:77: style: Trailing whitespace is superfluous.
      1412118.1003548, 1162819.42380856, 666434.053076934, 21.5092986044703, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1381:78: style: Trailing whitespace is superfluous.
      21.3187940767226, 17.1140228516344, 9.80837383685093, 10.1242729831144, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1382:77: style: Trailing whitespace is superfluous.
      781084.604431422, 770111.749354302, 622412.49592339, 352392.017159729, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1383:77: style: Trailing whitespace is superfluous.
      77088.862904721, 75973.9508806265, 61430.0246868468, 34784.5102369525, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1384:1: style: lines should not be more than 80 characters.
      0.897788870482499, 0.90812950915787, 0.715898765703805, 0.403627231503592, 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1384:81: style: Trailing whitespace is superfluous.
      0.897788870482499, 0.90812950915787, 0.715898765703805, 0.403627231503592, 
                                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1385:80: style: Trailing whitespace is superfluous.
      0.0157236876160505, 1288532.35920189, 1250231.17368852, 1015960.43328273, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1386:77: style: Trailing whitespace is superfluous.
      570606.61371136, 126062.045330944, 122224.956835273, 99387.6636287993, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1387:78: style: Trailing whitespace is superfluous.
      55813.4674968996, 10.8527900293168, 10.7761981428673, 8.55636954038023, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1388:78: style: Trailing whitespace is superfluous.
      4.80502947545989, 10.1521093285799, 150267.442403526, 149688.554088585, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1389:76: style: Trailing whitespace is superfluous.
      118431.3265224, 66271.8466124803, 14725.5569760242, 14663.9891413326, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1390:79: style: Trailing whitespace is superfluous.
      11602.7216977237, 6492.01968897812, 0.996752191990831, 1.01911516296038, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1391:64: style: Trailing whitespace is superfluous.
      0.785220163833675, 0.438848863102728, 0.0261167904448117, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1392:77: style: Trailing whitespace is superfluous.
      234397.387711271, 234397.387711271, 177239.43141706, 117579.369603559, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1393:78: style: Trailing whitespace is superfluous.
      23097.7268743274, 23097.7268743274, 17465.1277303444, 11586.6403735845, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1394:78: style: Trailing whitespace is superfluous.
      7.43357751178432, 7.62004112750614, 5.62082933282193, 3.72894656633686, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1395:74: style: Trailing whitespace is superfluous.
      10.2627118644068, 73330.80296263, 73330.80296263, 55461.8331169693, 
                                                                         ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1396:78: style: Trailing whitespace is superfluous.
      36468.4492643515, 7287.52405314896, 7287.52405314896, 5511.68037759754, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1397:77: style: Trailing whitespace is superfluous.
      3623.56396263362, 2.1774650460358, 2.23302525646946, 1.64713358768832, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1398:78: style: Trailing whitespace is superfluous.
      1.0820670834543, 0.0435527158703251, 978405.025160521, 977061.41219503, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1399:78: style: Trailing whitespace is superfluous.
      748666.143385089, 463472.853677964, 96500.3404840475, 96383.5045740048, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1400:78: style: Trailing whitespace is superfluous.
      73842.8143396795, 45712.2174118914, 9.59428890775651, 9.82332808160355, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1401:77: style: Trailing whitespace is superfluous.
      7.34162481689718, 4.54481526452609, 10.2092771084337, 121576.08823798, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1402:77: style: Trailing whitespace is superfluous.
      121569.874613723, 93123.411953306, 57361.2037774466, 12112.8215623663, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1403:79: style: Trailing whitespace is superfluous.
      12112.3623454125, 9278.50553613622, 5717.52679934347, 0.989567533211139, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1404:1: style: lines should not be more than 80 characters.
      1.01767713447205, 0.758391498984259, 0.464156327274419, 0.0340137263242301, 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1404:82: style: Trailing whitespace is superfluous.
      1.01767713447205, 0.758391498984259, 0.464156327274419, 0.0340137263242301, 
                                                                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1405:78: style: Trailing whitespace is superfluous.
      3917241.48274823, 3581605.40590527, 3499625.05727285, 2857453.14447994, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1406:78: style: Trailing whitespace is superfluous.
      384669.421959457, 351901.351185036, 343666.329819625, 280554.221704827, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1407:77: style: Trailing whitespace is superfluous.
      8.57107169965029, 8.03490690313057, 7.65745490929644, 6.2512126324538, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1408:77: style: Trailing whitespace is superfluous.
      10.2244469525959, 242317.756984236, 235412.96628278, 216685.250570649, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1409:77: style: Trailing whitespace is superfluous.
      175429.08835443, 23851.4971543948, 23183.5298196885, 21328.6046695301, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1410:80: style: Trailing whitespace is superfluous.
      17267.9148017815, 0.419749834979943, 0.41481984370498, 0.375422981790366, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1411:80: style: Trailing whitespace is superfluous.
      0.303426952812164, 0.0157117667219809, 582779.85314234, 549313.464979313, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1412:78: style: Trailing whitespace is superfluous.
      445222.817957035, 369242.594821968, 57091.3423028367, 53776.4372209581, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1413:76: style: Trailing whitespace is superfluous.
      43611.737510558, 36162.936645438, 5.17928876903476, 4.99892170241816, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1414:77: style: Trailing whitespace is superfluous.
      3.95642794818824, 3.28067766614284, 10.264888457808, 77873.3966933765, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1415:77: style: Trailing whitespace is superfluous.
      76882.6070506173, 59636.575226113, 49094.2522993498, 7550.51064046667, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1416:77: style: Trailing whitespace is superfluous.
      7447.60531091185, 5780.7159305377, 4759.05459569852, 0.63847978405297, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1417:63: style: Trailing whitespace is superfluous.
      0.640522114101831, 0.488666921141723, 0.403190854986719, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1418:80: style: Trailing whitespace is superfluous.
      0.0309233539155666, 24596749.9217483, 23515266.0274845, 19862939.7677413, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1419:78: style: Trailing whitespace is superfluous.
      12859892.7092621, 2423880.16473576, 2317289.48004177, 1957354.60974503, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1420:78: style: Trailing whitespace is superfluous.
      1266450.41369128, 13.2393433803837, 12.9762510599232, 10.6911596425462, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1421:78: style: Trailing whitespace is superfluous.
      6.91740959187053, 10.1790796963947, 934570.388733266, 920215.515962597, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1422:77: style: Trailing whitespace is superfluous.
      751099.617186485, 465978.25575237, 92048.7066704707, 90613.5065031957, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1423:79: style: Trailing whitespace is superfluous.
      73977.4157669587, 45857.6442032151, 0.40365797597657, 0.407518896231817, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1424:64: style: Trailing whitespace is superfluous.
      0.323616008535581, 0.196408908364509, 0.0113329205858632, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1425:78: style: Trailing whitespace is superfluous.
      18877642.2203479, 18294719.0297836, 15070554.2670755, 8517809.74010817, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1426:78: style: Trailing whitespace is superfluous.
      1861676.02950046, 1804111.24895182, 1486227.01223688, 840045.276470491, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1427:78: style: Trailing whitespace is superfluous.
      27.8866271132606, 27.7337337354567, 22.2626589369722, 12.5833007526419, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1428:77: style: Trailing whitespace is superfluous.
      10.1204804358593, 1021683.9966238, 1011917.09081811, 816883.002192477, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1429:77: style: Trailing whitespace is superfluous.
      457424.383664861, 100145.337440734, 99187.5086776849, 80066.130949245, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1430:78: style: Trailing whitespace is superfluous.
      44848.9389537958, 1.20614260017504, 1.22518816860716, 0.96491913017458, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1431:63: style: Trailing whitespace is superfluous.
      0.539220314718781, 0.0158503473625613, 2406923.23571178, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1432:78: style: Trailing whitespace is superfluous.
      2300603.43107806, 1905266.17270942, 1066133.12234757, 237259.124281876, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1433:77: style: Trailing whitespace is superfluous.
      226681.979786472, 187796.191961691, 105082.74045658, 14.3563042606501, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1434:77: style: Trailing whitespace is superfluous.
      14.0561948743227, 11.363353375571, 6.35844795897201, 10.1274314214464, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1435:77: style: Trailing whitespace is superfluous.
      232830.120750522, 228283.376211021, 184581.251774954, 103002.49530291, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1436:78: style: Trailing whitespace is superfluous.
      22779.3573034897, 22311.0354354867, 18056.3202684557, 10076.2226339305, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1437:79: style: Trailing whitespace is superfluous.
      1.12554414157936, 1.1309774146726, 0.893435311983246, 0.497803059230472, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1438:79: style: Trailing whitespace is superfluous.
      0.0228832334817858, 260511.822487404, 245433.135790765, 198732.25680317, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1439:77: style: Trailing whitespace is superfluous.
      131824.092265989, 26154.479498161, 24642.6415053473, 19953.0464960313, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1440:78: style: Trailing whitespace is superfluous.
      13237.8624513122, 10.5581216499533, 10.1979781412979, 8.05470788310222, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1441:76: style: Trailing whitespace is superfluous.
      5.343901497108, 10.2281690140845, 78178.6968008331, 77453.6061125502, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1442:78: style: Trailing whitespace is superfluous.
      59596.8939414207, 39193.9989963152, 7979.19242118887, 7907.58856513952, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1443:78: style: Trailing whitespace is superfluous.
      6082.83318070508, 3999.97811275077, 2.09783625267676, 2.13408039814004, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1444:80: style: Trailing whitespace is superfluous.
      1.60082229065126, 1.05842641067291, 0.0591926072777267, 1208081.95131175, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1445:77: style: Trailing whitespace is superfluous.
      1159645.27644382, 925198.74637321, 569439.130668927, 118175.312578512, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1446:78: style: Trailing whitespace is superfluous.
      113532.229116855, 90515.0182024637, 55743.5014458709, 9.41714571789796, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1447:76: style: Trailing whitespace is superfluous.
      9.2771495730403, 7.21295419044887, 4.44208409089557, 10.217363851618, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1448:78: style: Trailing whitespace is superfluous.
      145016.140411866, 143349.412544757, 111002.228452229, 67156.7964873008, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1449:78: style: Trailing whitespace is superfluous.
      14209.0004820256, 14048.8173368181, 10879.4268447865, 6595.56606342862, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1450:63: style: Trailing whitespace is superfluous.
      0.987075148865571, 0.995501868358284, 0.755919466450505, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1451:79: style: Trailing whitespace is superfluous.
      0.4573336753754, 0.0281483648608698, 4639265.49714751, 4401790.32919195, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1452:78: style: Trailing whitespace is superfluous.
      4160131.84261079, 3269905.20912288, 456713.686122742, 433163.231962578, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1453:77: style: Trailing whitespace is superfluous.
      409550.542142323, 321862.156064877, 9.6363221364617, 9.36596321821468, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1454:78: style: Trailing whitespace is superfluous.
      8.64121456212573, 6.79105425043846, 10.2052209873352, 314122.922259898, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1455:78: style: Trailing whitespace is superfluous.
      307862.713278188, 281985.505294307, 219356.681349453, 30965.6877633183, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1456:79: style: Trailing whitespace is superfluous.
      30284.5304829995, 27798.5193590691, 21622.4521734917, 0.518922423655281, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1457:63: style: Trailing whitespace is superfluous.
      0.518287395057594, 0.465955220877523, 0.361755015369164, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1458:80: style: Trailing whitespace is superfluous.
      0.0168873081390077, 682793.302463323, 639826.055343075, 525593.486821434, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1459:77: style: Trailing whitespace is superfluous.
      421633.712112911, 66795.793302935, 62657.1390187534, 51415.2372325221, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1460:78: style: Trailing whitespace is superfluous.
      41238.2188524278, 5.44166423431042, 5.22805463292506, 4.18865386144769, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1461:77: style: Trailing whitespace is superfluous.
      3.35956097711413, 10.316906747536, 93508.5809939382, 90455.0754892306, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1462:78: style: Trailing whitespace is superfluous.
      72000.7063321711, 56478.6932798389, 9181.47443726105, 8876.96860962844, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1463:79: style: Trailing whitespace is superfluous.
      7069.08981668934, 5540.12463445385, 0.616092630409233, 0.61154153253239, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1464:64: style: Trailing whitespace is superfluous.
      0.474401318557546, 0.372219497142018, 0.0283195901910962, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1465:78: style: Trailing whitespace is superfluous.
      29981149.2693914, 28876713.7017516, 24316318.0525937, 15170365.1499985, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1466:78: style: Trailing whitespace is superfluous.
      2953082.30019726, 2844002.38696323, 2395028.01114484, 1493810.44952453, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1467:78: style: Trailing whitespace is superfluous.
      16.1647591855483, 15.9634056869564, 13.1100481148842, 8.17690932074824, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1468:77: style: Trailing whitespace is superfluous.
      10.1839086294416, 1208708.32079051, 1190215.6627484, 975482.563142825, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1469:77: style: Trailing whitespace is superfluous.
      585499.439630833, 118786.41811286, 116915.532976772, 95874.7039831733, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1470:1: style: lines should not be more than 80 characters.
      57586.3499484438, 0.524303296189258, 0.529554510839223, 0.421933279707779, 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1470:81: style: Trailing whitespace is superfluous.
      57586.3499484438, 0.524303296189258, 0.529554510839223, 0.421933279707779, 
                                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1471:80: style: Trailing whitespace is superfluous.
      0.247576330642321, 0.011581658130581, 13975737.7912423, 13400434.0402312, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1472:76: style: Trailing whitespace is superfluous.
      11208931.207082, 6276771.46105825, 1381044.39406666, 1324025.6003615, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1473:77: style: Trailing whitespace is superfluous.
      1107627.88224636, 620364.96622576, 30.6928180529913, 30.2102853133829, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1474:78: style: Trailing whitespace is superfluous.
      24.6163129920113, 13.7872099670521, 10.0994770839742, 958055.362389463, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1475:77: style: Trailing whitespace is superfluous.
      942722.773017166, 769799.636311846, 423612.892329916, 94138.159011437, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1476:78: style: Trailing whitespace is superfluous.
      92628.1977091484, 75636.3963116588, 41638.9640687125, 1.72906257250486, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1477:1: style: lines should not be more than 80 characters.
      1.74147356210514, 1.39039668839319, 0.761992075111485, 0.0181338329224343, 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1477:81: style: Trailing whitespace is superfluous.
      1.74147356210514, 1.39039668839319, 0.761992075111485, 0.0181338329224343, 
                                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1478:77: style: Trailing whitespace is superfluous.
      2838861.89346154, 2705061.17866147, 2247812.3722773, 1260701.59896744, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1479:78: style: Trailing whitespace is superfluous.
      280396.985647738, 267117.078579315, 222016.444171873, 124520.796654315, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1480:78: style: Trailing whitespace is superfluous.
      15.9442756135062, 15.5738458529508, 12.6245700125112, 7.08065351303032, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1481:76: style: Trailing whitespace is superfluous.
      10.1220941883768, 267731.32130275, 261708.06527891, 212176.488451343, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1482:78: style: Trailing whitespace is superfluous.
      118653.198412659, 26495.6903281006, 25894.5019242825, 20997.2680578186, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1483:79: style: Trailing whitespace is superfluous.
      11739.7547656668, 1.22878983268178, 1.22940190327099, 0.974746402061141, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1484:63: style: Trailing whitespace is superfluous.
      0.543524964954799, 0.0237672270305701, 196179.363256053, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1485:76: style: Trailing whitespace is superfluous.
      186319.111555721, 151167.408890978, 101289.49732653, 19066.372322828, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1486:78: style: Trailing whitespace is superfluous.
      18049.8515289793, 14692.8914768299, 9843.57720168164, 14.6103792275672, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1487:77: style: Trailing whitespace is superfluous.
      14.1876387955407, 11.2590225760437, 7.5430393069693, 10.3765957446809, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1488:76: style: Trailing whitespace is superfluous.
      71300.1048078844, 70617.933589824, 55035.2179673374, 36838.240797022, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1489:78: style: Trailing whitespace is superfluous.
      6943.36665057684, 6868.85305690864, 5359.36421602332, 3586.51275368338, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1490:78: style: Trailing whitespace is superfluous.
      4.44886299500872, 4.45702115690513, 3.43629783869034, 2.29762277434238, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1491:79: style: Trailing whitespace is superfluous.
      0.0907993187385513, 1694869.45161884, 1621099.6471603, 1299968.85149242, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1492:78: style: Trailing whitespace is superfluous.
      799842.273843152, 166383.873441201, 159013.052146986, 127623.131416177, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1493:78: style: Trailing whitespace is superfluous.
      78504.3714596243, 12.6205235270933, 12.3707507258109, 9.68044978955477, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1494:78: style: Trailing whitespace is superfluous.
      5.95470129703402, 10.2284820031299, 173746.152489026, 169225.490462668, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1495:78: style: Trailing whitespace is superfluous.
      133162.557177286, 81214.9904184274, 17036.7718207545, 16591.6303207684, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1496:77: style: Trailing whitespace is superfluous.
      13059.8960629507, 7968.45117744851, 1.0618337812065, 1.05490164738004, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1497:64: style: Trailing whitespace is superfluous.
      0.813770592413177, 0.493546074303292, 0.0293906717949848, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1498:78: style: Trailing whitespace is superfluous.
      4533563.04764524, 4333502.45223515, 4077217.25903357, 3128656.40357744, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1499:78: style: Trailing whitespace is superfluous.
      446233.732716839, 426448.258089872, 401309.524893994, 307986.049424413, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1500:78: style: Trailing whitespace is superfluous.
      9.33266916503367, 9.14339932442298, 8.39311050244848, 6.44131471017159, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1501:77: style: Trailing whitespace is superfluous.
      10.2028296207104, 343621.734351031, 335467.28324421, 309246.188417976, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1502:77: style: Trailing whitespace is superfluous.
      235388.167201886, 33882.3603657715, 33096.774171763, 30491.3533360129, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1503:1: style: lines should not be more than 80 characters.
      23215.0899489736, 0.550269086964183, 0.551440167828866, 0.495352338273245, 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1503:81: style: Trailing whitespace is superfluous.
      23215.0899489736, 0.550269086964183, 0.551440167828866, 0.495352338273245, 
                                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1504:80: style: Trailing whitespace is superfluous.
      0.375983492682592, 0.0188481909507368, 746993.19935387, 743051.709818521, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1505:78: style: Trailing whitespace is superfluous.
      577583.368133722, 458680.824933987, 71893.8596677889, 71548.1149717056, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1506:77: style: Trailing whitespace is superfluous.
      55589.3194253992, 44151.0449020353, 5.72413282896827, 5.8410620936917, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1507:77: style: Trailing whitespace is superfluous.
      4.42597809789723, 3.5152716341118, 10.3619364375462, 92283.7869100929, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1508:78: style: Trailing whitespace is superfluous.
      92203.1395916798, 71440.3149270198, 56303.2606760004, 8852.22584342786, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1509:79: style: Trailing whitespace is superfluous.
      8845.78498461032, 6852.63785284571, 5401.53164798748, 0.646100069164614, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1510:1: style: lines should not be more than 80 characters.
      0.6621666887159, 0.500462764474255, 0.392926319156912, 0.0298031279454808, 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1510:81: style: Trailing whitespace is superfluous.
      0.6621666887159, 0.500462764474255, 0.392926319156912, 0.0298031279454808, 
                                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1511:77: style: Trailing whitespace is superfluous.
      25084186.7535645, 24032797.388817, 20444279.1721047, 12723494.7447636, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1512:78: style: Trailing whitespace is superfluous.
      2473589.12656597, 2369657.55796403, 2015955.47399472, 1254112.51397264, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1513:77: style: Trailing whitespace is superfluous.
      16.4894634846483, 16.2028495355435, 13.4387816546001, 8.3601768307825, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1514:78: style: Trailing whitespace is superfluous.
      10.1881164587047, 1146489.50457548, 1126187.07291365, 930538.838116761, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1515:78: style: Trailing whitespace is superfluous.
      552790.060982992, 112809.667777208, 110820.055502438, 91559.2800831564, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1516:1: style: lines should not be more than 80 characters.
      54396.7705482606, 0.634950632258515, 0.639166486691924, 0.512989243189229, 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1516:81: style: Trailing whitespace is superfluous.
      54396.7705482606, 0.634950632258515, 0.639166486691924, 0.512989243189229, 
                                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1517:63: style: Trailing whitespace is superfluous.
      0.296113154925582, 0.0128092762497151, 6402099.95152697, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1518:78: style: Trailing whitespace is superfluous.
      6093681.71028094, 5145623.43800317, 2907586.64108658, 640569.690246206, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1519:78: style: Trailing whitespace is superfluous.
      609972.880223616, 514851.108742588, 290908.618994693, 32.5750501541044, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1520:76: style: Trailing whitespace is superfluous.
      31.855998310801, 26.1818517868679, 14.7936485261597, 10.097875569044, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1521:77: style: Trailing whitespace is superfluous.
      600860.66656769, 581249.676251327, 484035.328497891, 269636.011712707, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1522:77: style: Trailing whitespace is superfluous.
      60492.3295342708, 58408.2071326885, 48733.996028847, 27142.1926930848, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1523:78: style: Trailing whitespace is superfluous.
      2.45456383861301, 2.43143918478216, 1.98046673300025, 1.09658154007651, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1524:79: style: Trailing whitespace is superfluous.
      0.023783268562542, 2632178.10333042, 2540372.96548253, 2089070.95495691, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1525:78: style: Trailing whitespace is superfluous.
      1176662.49278153, 260660.001771813, 251612.078156784, 206870.703479973, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1526:77: style: Trailing whitespace is superfluous.
      116531.085402431, 18.972686323754, 18.7796554807503, 15.0575191437917, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1527:78: style: Trailing whitespace is superfluous.
      8.48196008316762, 10.1307980049875, 269172.352444765, 266461.213060981, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1528:78: style: Trailing whitespace is superfluous.
      213694.151606975, 120167.222317071, 26633.9270709812, 26371.4073577224, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1529:78: style: Trailing whitespace is superfluous.
      21142.2209388918, 11893.4476830482, 1.54017028958115, 1.55746270274276, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1530:63: style: Trailing whitespace is superfluous.
      1.22277321462162, 0.687750738520587, 0.0268056463789367, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1531:78: style: Trailing whitespace is superfluous.
      62443.0574525383, 62443.0574525383, 48242.8013737087, 31641.6833657046, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1532:77: style: Trailing whitespace is superfluous.
      5709.81061036267, 5709.81061036267, 4411.1044228119, 2892.72264583428, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1533:78: style: Trailing whitespace is superfluous.
      27.9780350295033, 28.7410716843957, 21.6143831174095, 14.1743222391484, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1534:78: style: Trailing whitespace is superfluous.
      10.3692307692308, 45803.3385621603, 45803.3385621603, 35401.7768967486, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1535:77: style: Trailing whitespace is superfluous.
      23248.3199045081, 4157.60742164531, 4157.60742164531, 3213.1746691862, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1536:76: style: Trailing whitespace is superfluous.
      2109.55623266779, 14.3815017617218, 14.807495050061, 11.129453336584, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1537:79: style: Trailing whitespace is superfluous.
      7.33575391917826, 0.160894790837111, 1208780.82346337, 1133533.81306745, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1538:78: style: Trailing whitespace is superfluous.
      928743.304067898, 571013.479434098, 119139.283573687, 111675.098766832, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1539:78: style: Trailing whitespace is superfluous.
      91532.9229933616, 56275.8297029329, 10.4941177375286, 10.0959404454575, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1540:77: style: Trailing whitespace is superfluous.
      8.06247311499378, 4.95693078693413, 10.2526717557252, 154032.32504983, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1541:77: style: Trailing whitespace is superfluous.
      145034.29810149, 118139.781203844, 72241.4306292145, 15393.6095015523, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1542:77: style: Trailing whitespace is superfluous.
      14482.1675955604, 11805.169711806, 7216.12000210729, 1.00697413684818, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1543:63: style: Trailing whitespace is superfluous.
      0.929450588368744, 0.771510745148564, 0.470697039526748, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1544:80: style: Trailing whitespace is superfluous.
      0.0319933548524134, 3594472.39722304, 3404734.04930012, 3236754.17295966, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1545:77: style: Trailing whitespace is superfluous.
      2456000.79298013, 351687.50543559, 332767.307939473, 316689.170379888, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1546:77: style: Trailing whitespace is superfluous.
      240303.88195766, 11.8744558156097, 11.5281296682245, 10.6927641808042, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1547:77: style: Trailing whitespace is superfluous.
      8.11367416960545, 10.2343113284434, 344740.859896479, 337811.39428578, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1548:76: style: Trailing whitespace is superfluous.
      310642.514117167, 233704.918894707, 33485.274643135, 32774.709982965, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1549:78: style: Trailing whitespace is superfluous.
      30173.2119607218, 22702.7090807046, 0.9119414118901, 0.914541967351999, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1550:64: style: Trailing whitespace is superfluous.
      0.821975812595528, 0.617205561871331, 0.0211258393779416, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1551:78: style: Trailing whitespace is superfluous.
      567195.841955748, 545977.767930686, 440558.122965823, 344495.311677184, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1552:77: style: Trailing whitespace is superfluous.
      54865.7945840525, 52841.7152654787, 42617.923820646, 33332.0289374048, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1553:78: style: Trailing whitespace is superfluous.
      5.60517029913237, 5.53312873959968, 4.35390980156524, 3.40524911789152, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1554:78: style: Trailing whitespace is superfluous.
      10.2975975975976, 108610.302718299, 107906.891132915, 84339.9931681901, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1555:77: style: Trailing whitespace is superfluous.
      65542.7489589611, 10385.4103953498, 10318.3362944576, 8064.7383158855, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1556:1: style: lines should not be more than 80 characters.
      6274.14642846726, 0.912884332031364, 0.931643724035814, 0.709092427603843, 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1556:81: style: Trailing whitespace is superfluous.
      6274.14642846726, 0.912884332031364, 0.931643724035814, 0.709092427603843, 
                                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1557:79: style: Trailing whitespace is superfluous.
      0.54997257293733, 0.037039656321736, 15007127.6186613, 14259214.2103931, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1558:77: style: Trailing whitespace is superfluous.
      12312197.591396, 7810056.31043066, 1485688.75587506, 1411749.84571002, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1559:74: style: Trailing whitespace is superfluous.
      1218536.98060648, 771882.39217, 16.4941139855489, 16.0826421737881, 
                                                                         ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1560:76: style: Trailing whitespace is superfluous.
      13.5281954408358, 8.56943697631433, 10.184072854098, 845583.35098328, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1561:77: style: Trailing whitespace is superfluous.
      822238.057695638, 693158.645389811, 429737.72798464, 83948.9360359475, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1562:79: style: Trailing whitespace is superfluous.
      81560.0257803515, 68758.9897347969, 42467.7744169124, 0.767337130753212, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1563:63: style: Trailing whitespace is superfluous.
      0.762218491585795, 0.627647768785782, 0.381999581612171, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1564:80: style: Trailing whitespace is superfluous.
      0.0146278201502411, 1749030.38650039, 1657513.90429877, 1406754.55299101, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1565:75: style: Trailing whitespace is superfluous.
      804822.3862465, 175024.816150796, 165610.030566289, 140781.35178392, 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1566:77: style: Trailing whitespace is superfluous.
      80567.978390555, 24.8070763008412, 24.1040854430242, 19.9535917948363, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1567:77: style: Trailing whitespace is superfluous.
      11.4192720283565, 10.0873404255319, 257273.33332507, 246249.314011783, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1568:78: style: Trailing whitespace is superfluous.
      207133.334328417, 117821.708320035, 26017.2915459086, 24723.3281532135, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1569:76: style: Trailing whitespace is superfluous.
      20945.4964380449, 11947.048344623, 3.15015710855846, 3.0531497604212, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1570:80: style: Trailing whitespace is superfluous.
      2.53784711499748, 1.44543546784211, 0.0330855513254736, 1786429.18732493, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1571:78: style: Trailing whitespace is superfluous.
      1712321.05409962, 1420000.00772422, 801802.558233594, 174836.710583542, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1572:78: style: Trailing whitespace is superfluous.
      167529.792761029, 138977.237012781, 78483.3516752917, 21.2484052055914, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1573:78: style: Trailing whitespace is superfluous.
      20.9058004900677, 16.8903008787164, 9.53830607269792, 10.1786399302528, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1574:77: style: Trailing whitespace is superfluous.
      210926.831818353, 207911.778239303, 167709.278970337, 94559.795703805, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1575:76: style: Trailing whitespace is superfluous.
      20343.522700745, 20046.112884064, 16176.9044619057, 9122.09436414926, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1576:78: style: Trailing whitespace is superfluous.
      2.0118858687905, 2.01440265505179, 1.60082171472605, 0.902451642089967, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1577:65: style: Trailing whitespace is superfluous.
      0.031308212028184, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 
                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1578:63: style: Trailing whitespace is superfluous.
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 762389.457584001, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1579:76: style: Trailing whitespace is superfluous.
      697965.397419447, 587981.765918961, 363535.8650588, 74698.5918472954, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1580:78: style: Trailing whitespace is superfluous.
      68599.2122456278, 57608.8828486674, 35641.3372964093, 11.1260690324778, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1581:78: style: Trailing whitespace is superfluous.
      10.4868555667003, 8.58062235990341, 5.30864062311015, 10.2432432432432, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1582:77: style: Trailing whitespace is superfluous.
      115708.478248071, 112824.927447582, 89170.1221302627, 55138.588667856, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1583:78: style: Trailing whitespace is superfluous.
      11306.9944361669, 11046.5889433108, 8713.91666651753, 5400.32840426155, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1584:79: style: Trailing whitespace is superfluous.
      1.32378443932176, 1.31106003556833, 1.01986498887872, 0.624896735196288, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1585:80: style: Trailing whitespace is superfluous.
      0.0362519185225509, 3268871.43310086, 3054955.56445467, 2945835.82751916, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1586:78: style: Trailing whitespace is superfluous.
      2228510.06608853, 319460.878465043, 298018.895178029, 287889.870736843, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1587:78: style: Trailing whitespace is superfluous.
      217795.100196485, 15.4385972833823, 14.7837666456379, 13.9128640653176, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1588:78: style: Trailing whitespace is superfluous.
      10.5253915859226, 10.2360830527497, 311413.282194002, 306668.164918582, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1589:77: style: Trailing whitespace is superfluous.
      280692.353906523, 211880.594570109, 30417.605900826, 29912.9266136945, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1590:78: style: Trailing whitespace is superfluous.
      27416.3182319122, 20700.8518410304, 1.17460815393124, 1.17179229536301, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1591:63: style: Trailing whitespace is superfluous.
      1.05891815329132, 0.798504077580623, 0.0266274890769097, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1592:78: style: Trailing whitespace is superfluous.
      707314.512855727, 660698.432494487, 551315.327781132, 434655.012149015, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1593:78: style: Trailing whitespace is superfluous.
      68331.9014964827, 63708.2910054538, 53268.1602159655, 41965.8839613083, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1594:77: style: Trailing whitespace is superfluous.
      6.34214996492287, 6.06335981128432, 4.9440254558492, 3.89501716861879, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1595:78: style: Trailing whitespace is superfluous.
      10.3250939849624, 106392.302654872, 101715.693634293, 82988.4152642728, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1596:77: style: Trailing whitespace is superfluous.
      65262.6299373654, 10227.152059891, 9780.11314943298, 7980.64940618759, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1597:1: style: lines should not be more than 80 characters.
      6262.00962457805, 0.811284339938763, 0.789103996677334, 0.633639634756188, 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1597:81: style: Trailing whitespace is superfluous.
      6262.00962457805, 0.811284339938763, 0.789103996677334, 0.633639634756188, 
                                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1598:63: style: Trailing whitespace is superfluous.
      0.496247249070424, 0.0336734069326312, 8554113.84388507, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1599:78: style: Trailing whitespace is superfluous.
      8026222.39990408, 7134342.48724766, 4805532.36998802, 839909.607119664, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1600:77: style: Trailing whitespace is superfluous.
      787244.402877776, 700384.374599559, 471383.78207558, 14.8827066585636, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1601:77: style: Trailing whitespace is superfluous.
      14.316685712432, 12.4104011991873, 8.35264472839353, 10.2183315334773, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1602:77: style: Trailing whitespace is superfluous.
      553679.482862224, 537898.62916945, 463069.111126775, 311205.355591937, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1603:78: style: Trailing whitespace is superfluous.
      54381.7621314169, 52633.1092059139, 45458.0384758971, 30530.5253819637, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1604:63: style: Trailing whitespace is superfluous.
      0.787883043514617, 0.774902683917398, 0.656730294167995, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1605:63: style: Trailing whitespace is superfluous.
      0.436076345555383, 0.0174160016914307, 791960.145646667, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1606:78: style: Trailing whitespace is superfluous.
      709288.028703759, 635950.191239152, 369125.600879427, 80650.1637067072, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1607:78: style: Trailing whitespace is superfluous.
      72337.2868752159, 64774.7856309813, 37567.6139105316, 21.1859747620377, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1608:77: style: Trailing whitespace is superfluous.
      19.512996978836, 17.0156749908772, 9.86862869953861, 10.0390191897655, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1609:77: style: Trailing whitespace is superfluous.
      124859.795060633, 114549.850390938, 100044.316695172, 58655.330655786, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1610:76: style: Trailing whitespace is superfluous.
      12684.2268805969, 11663.1083156009, 10168.9413146208, 5949.080175853, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1611:78: style: Trailing whitespace is superfluous.
      2.79647961574448, 2.52920982229059, 2.24701316278247, 1.30264578929547, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1612:80: style: Trailing whitespace is superfluous.
      0.0502634216289927, 1227431.00141429, 1163522.47122237, 974217.980157487, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1613:78: style: Trailing whitespace is superfluous.
      556619.782250809, 121818.013968303, 115304.292847043, 96682.3437102456, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1614:78: style: Trailing whitespace is superfluous.
      55242.4214464478, 23.5305906904432, 22.8643448556569, 18.6753385868735, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1615:78: style: Trailing whitespace is superfluous.
      10.6707273042849, 10.1116212338594, 167047.483697122, 160668.841800497, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1616:78: style: Trailing whitespace is superfluous.
      132711.617175637, 75569.1692845493, 16644.3304706026, 15931.8363217603, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1617:78: style: Trailing whitespace is superfluous.
      13220.8880516791, 7529.65611062985, 2.86975476829711, 2.78559672806006, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1618:64: style: Trailing whitespace is superfluous.
      2.27807716595988, 1.2995179475178, 0.0392529463357284, 0, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1619:64: style: Trailing whitespace is superfluous.
      0, 0, 0, 0, 0, 0, 0, NaN, NaN, NaN, NaN, NaN, 0, 0, 0, 0, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1620:79: style: Trailing whitespace is superfluous.
      0, 0, 0, 0, NaN, NaN, NaN, NaN, NaN, 386446.284344681, 358239.082548266, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1621:78: style: Trailing whitespace is superfluous.
      298266.782803275, 182764.805321717, 38525.0054467637, 35762.2839606951, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1622:77: style: Trailing whitespace is superfluous.
      29734.3912355547, 18222.702208534, 9.44839736655747, 9.00543291345805, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1623:77: style: Trailing whitespace is superfluous.
      7.29246733616763, 4.46918383429163, 10.225393258427, 78149.7559896049, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1624:78: style: Trailing whitespace is superfluous.
      77136.4443944463, 60302.5180347803, 37043.2440828961, 7809.22701840562, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1625:78: style: Trailing whitespace is superfluous.
      7711.90042322886, 6026.24833451975, 3704.97000270559, 1.66806679022641, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1626:1: style: lines should not be more than 80 characters.
      1.67017521411826, 1.28711735314123, 0.793540541443695, 0.0539104426537862, 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1626:81: style: Trailing whitespace is superfluous.
      1.67017521411826, 1.28711735314123, 0.793540541443695, 0.0539104426537862, 
                                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1627:78: style: Trailing whitespace is superfluous.
      1429800.20553452, 1302940.55460351, 1290471.10002704, 964707.221569343, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1628:78: style: Trailing whitespace is superfluous.
      141663.300157787, 129154.553245568, 127860.992514124, 95555.3803586945, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1629:78: style: Trailing whitespace is superfluous.
      15.9954355084492, 14.9808785629008, 14.4369943205333, 10.7893146800224, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1630:78: style: Trailing whitespace is superfluous.
      10.1839285714286, 236656.814420984, 229587.391980805, 213569.483239878, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1631:78: style: Trailing whitespace is superfluous.
      159642.434494672, 23417.5280994256, 22726.8000529925, 21133.3807167918, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1632:77: style: Trailing whitespace is superfluous.
      15791.3356782071, 2.32233188411765, 2.2922771431603, 2.09605001109717, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1633:79: style: Trailing whitespace is superfluous.
      1.5638681806704, 0.0390835477464341, 1328090.56802401, 1236213.64286738, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1634:78: style: Trailing whitespace is superfluous.
      1040472.14826732, 796045.892261363, 129233.057155626, 120250.416182018, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1635:77: style: Trailing whitespace is superfluous.
      101247.707645688, 77424.8864348944, 8.17740724968628, 7.8071843319513, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1636:77: style: Trailing whitespace is superfluous.
      6.40659407692365, 4.8991708590195, 10.2578947368421, 153709.474904964, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1637:78: style: Trailing whitespace is superfluous.
      147046.630804724, 120429.507686143, 91449.4580541764, 14957.5397196021, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1638:77: style: Trailing whitespace is superfluous.
      14310.1073902616, 11719.491192672, 8890.90275841774, 0.76133814770302, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1639:63: style: Trailing whitespace is superfluous.
      0.734345336197297, 0.596948158026403, 0.452296122963107, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1640:79: style: Trailing whitespace is superfluous.
      0.0330450801668645, 5239345.86687155, 4832802.1243919, 4298138.92515355, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1641:78: style: Trailing whitespace is superfluous.
      2918870.07621609, 519432.472056528, 478984.051989891, 426152.780113464, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1642:78: style: Trailing whitespace is superfluous.
      288947.754611188, 13.3881381032457, 12.6734400593976, 10.9838960407163, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1643:77: style: Trailing whitespace is superfluous.
      7.44749828219508, 10.2005557761016, 401975.714282936, 382817.42770243, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1644:78: style: Trailing whitespace is superfluous.
      335851.915079536, 231849.145993708, 40037.7383381676, 38055.6253564935, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1645:80: style: Trailing whitespace is superfluous.
      33437.7672705181, 23009.4722114438, 0.874065453419145, 0.837673852007197, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1646:64: style: Trailing whitespace is superfluous.
      0.734362883032103, 0.505867221464956, 0.021447403005249), 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1647:39: style: Trailing whitespace is superfluous.
      .Dim = c(13L, 2L, 7L, 9L, 1L))), 
                                      ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1648:76: style: Trailing whitespace is superfluous.
      .Names = c("Stratum", "HBF", "se_HBF", "Attribute", "Größen", "BAGR", 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1650:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1655:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1659:1: style: lines should not be more than 80 characters.
    list(A.ob = 500, A.b = 500), list(D.unt = 0, D.ob = 400, D.b = 400, Ndh = F),
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1661:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1663:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1665:54: style: Trailing whitespace is superfluous.
    Stratum = structure(list(Wa = 1:3, Begehbar = 1), 
                                                     ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1666:55: style: Trailing whitespace is superfluous.
                        .Names = c("Wa", "Begehbar")), 
                                                      ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1667:55: style: Trailing whitespace is superfluous.
    HBF = 1298613.46918278, se_HBF = 15807.2409897449, 
                                                      ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1668:69: style: Trailing whitespace is superfluous.
    Attribute = c("V_DhmR", "V_DhmR_HB", "V_EoR", "oiB", "V_DhmR/J", 
                                                                    ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1669:74: style: Trailing whitespace is superfluous.
      "V_DhmR_HB/J", "V_EoR/J", "oiB/J", "V_DhmR/ha/J", "V_DhmR_HB/ha/J", 
                                                                         ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1670:33: style: Trailing whitespace is superfluous.
      "V_EoR/ha/J", "oiB/ha/J"), 
                                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1671:42: style: Trailing whitespace is superfluous.
    Größen = c("Wert", "Standardfehler"), 
                                         ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1672:29: style: Trailing whitespace is superfluous.
    BAGR = "alle Baumarten", 
                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1673:34: style: Trailing whitespace is superfluous.
    AKL = "0-500", DKL = "0-400", 
                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1674:70: style: Trailing whitespace is superfluous.
    iVB.bagr.akl.dkl = structure(c(255277557.930226, 243683752.11536, 
                                                                     ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1675:76: style: Trailing whitespace is superfluous.
     205567163.098199, 130086920.390191, 17884460.5784821, 17070292.904793, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1676:77: style: Trailing whitespace is superfluous.
     14402887.5541372, 9117653.45979591, 13.7732010758775, 13.4116667149721, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1677:77: style: Trailing whitespace is superfluous.
     11.0919681075012, 7.02169762911559, 1298497.02185828, 1272794.29675483, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1678:65: style: Trailing whitespace is superfluous.
     14.2690394706822, 4439, 3421611.62344886, 3296207.07180454, 
                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1679:76: style: Trailing whitespace is superfluous.
     2764538.86925519, 1707775.24252132, 238759.177935475, 229980.30645474, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1680:1: style: lines should not be more than 80 characters.
     192943.566261479, 119282.887141281, 0.0763263544656992, 0.0778150959120681, 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1680:81: style: Trailing whitespace is superfluous.
     192943.566261479, 119282.887141281, 0.0763263544656992, 0.0778150959120681, 
                                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1681:63: style: Trailing whitespace is superfluous.
     0.0620530797242411, 0.0345573245105437, 15862.5055163138, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1682:48: style: Trailing whitespace is superfluous.
     15548.0710413573, 0.0142579043784973, NA), 
                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1683:37: style: Trailing whitespace is superfluous.
     .Dim = c(16L, 2L, 1L, 1L, 1L)), 
                                    ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1684:54: style: Trailing whitespace is superfluous.
    VB.A.bagr.akl.dkl = structure(c(242296015.230999, 
                                                     ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1685:76: style: Trailing whitespace is superfluous.
     228186778.742957, 192836832.268407, 122283106.86414, 16946609.0381363, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1686:77: style: Trailing whitespace is superfluous.
     15962159.7102952, 13489162.3545045, 8556044.76775926, 13.0509417833581, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1687:76: style: Trailing whitespace is superfluous.
     12.5410364824804, 10.3882890198702, 6.5891909058942, 14.3213856567039, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1688:77: style: Trailing whitespace is superfluous.
     4335572.85837804, 4177555.15166883, 3470528.30180757, 2111788.51473821, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1689:77: style: Trailing whitespace is superfluous.
     303893.145611409, 292881.381948176, 243323.480846937, 148097.554590202, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1690:62: style: Trailing whitespace is superfluous.
     0.170716299197767, 0.170998259265493, 0.137179365161479, 
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1691:46: style: Trailing whitespace is superfluous.
     0.0805525690779948, 0.0137565136931801), 
                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1692:38: style: Trailing whitespace is superfluous.
     .Dim = c(13L, 2L, 1L, 1L, 1L))), 
                                     ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1693:76: style: Trailing whitespace is superfluous.
      .Names = c("Stratum", "HBF", "se_HBF", "Attribute", "Größen", "BAGR", 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1700:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1703:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1705:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1707:74: style: Trailing whitespace is superfluous.
    Stratum = structure(list(Wa = c(3, 5), Begehbar = 1, EigArt = "StW"), 
                                                                         ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1708:47: style: Trailing whitespace is superfluous.
      .Names = c("Wa", "Begehbar", "EigArt")), 
                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1709:76: style: Trailing whitespace is superfluous.
    HBF = 310978.141781646, se.HBF = 9650.45305895392, BAGR = c("FI", "TA", 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1710:53: style: Trailing whitespace is superfluous.
      "DGL", "KI", "LAE", "BU", "EI", "ALH", "ALN"), 
                                                    ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1711:55: style: Trailing whitespace is superfluous.
    m.Verbissproz.BAGR = structure(c(96.5155721196901, 
                                                      ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1712:78: style: Trailing whitespace is superfluous.
     3.2474623945086, 0.236965485801271, 3.48442788030987, 0.554014570216615, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1713:62: style: Trailing whitespace is superfluous.
     0.527021214230139, 0.139684544654859, 0.554014570216616, 
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1714:77: style: Trailing whitespace is superfluous.
     69.7843797680487, 18.9992021663462, 11.2164180656051, 30.2156202319513, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1715:77: style: Trailing whitespace is superfluous.
     1.99171133798698, 1.65647397315205, 1.34183821615875, 1.99171133798699, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1716:62: style: Trailing whitespace is superfluous.
     97.3214285714286, 2.67857142857143, 0, 2.67857142857143, 
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1717:77: style: Trailing whitespace is superfluous.
     1.9677418010511, 1.9677418010511, 0, 1.9677418010511, 86.5500000021677, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1718:62: style: Trailing whitespace is superfluous.
     11.4499999978323, 2, 13.4499999978323, 4.80049946279884, 
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1719:76: style: Trailing whitespace is superfluous.
     4.44091258921511, 1.9864641741707, 4.80049946279883, 84.6938775473567, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1720:62: style: Trailing whitespace is superfluous.
     15.3061224526433, 0, 15.3061224526433, 9.17608292197702, 
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1721:79: style: Trailing whitespace is superfluous.
     9.17608292197701, 0, 9.17608292197701, 85.489572039528, 12.5698221372745, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1722:78: style: Trailing whitespace is superfluous.
     1.94060582319744, 14.510427960472, 0.986992760203528, 0.909062342932201, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1723:79: style: Trailing whitespace is superfluous.
     0.413406573844527, 0.986992760203537, 66.9680496870387, 26.7819503129613, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1724:65: style: Trailing whitespace is superfluous.
     6.25, 33.0319503129613, 3.63105407267664, 3.44628448846435, 
                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1725:77: style: Trailing whitespace is superfluous.
     1.83701116458529, 3.63105407267665, 65.9264848116772, 28.6132002993569, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1726:77: style: Trailing whitespace is superfluous.
     5.46031488896589, 34.0735151883228, 1.42725701863182, 1.32976569426424, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1727:78: style: Trailing whitespace is superfluous.
     0.892767977160766, 1.42725701863182, 68.8062597493353, 24.2131621105501, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1728:77: style: Trailing whitespace is superfluous.
     6.98057814011462, 31.1937402506647, 2.39925544575336, 2.17939420809997, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1729:77: style: Trailing whitespace is superfluous.
     1.38417368968831, 2.39925544575336, 81.5055588266682, 14.9567665285758, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1730:79: style: Trailing whitespace is superfluous.
     3.53767464475603, 18.4944411733318, 0.706226820572756, 0.643123425051977, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1732:10: style: Trailing whitespace is superfluous.
     ))), 
         ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1734:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1739:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1741:40: style: Commas should always have a space after.
            list(bagr.lab = c("Fi/sNB","Ta","Dgl/Ki/Lae","Bu","Ei","Es", "Ah",
                                       ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1741:45: style: Commas should always have a space after.
            list(bagr.lab = c("Fi/sNB","Ta","Dgl/Ki/Lae","Bu","Ei","Es", "Ah",
                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1741:58: style: Commas should always have a space after.
            list(bagr.lab = c("Fi/sNB","Ta","Dgl/Ki/Lae","Bu","Ei","Es", "Ah",
                                                         ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1741:63: style: Commas should always have a space after.
            list(bagr.lab = c("Fi/sNB","Ta","Dgl/Ki/Lae","Bu","Ei","Es", "Ah",
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1741:68: style: Commas should always have a space after.
            list(bagr.lab = c("Fi/sNB","Ta","Dgl/Ki/Lae","Bu","Ei","Es", "Ah",
                                                                   ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1742:38: style: Commas should always have a space after.
                              "sBLb","WLb"),
                                     ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1743:22: style: Put spaces around all infix operators.
            ba.grupp =list(c(10:19,90:99), c(30:39), c(20:29,40,50,51), c(100), 
                     ^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1743:36: style: Commas should always have a space after.
            ba.grupp =list(c(10:19,90:99), c(30:39), c(20:29,40,50,51), c(100), 
                                   ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1743:62: style: Commas should always have a space after.
            ba.grupp =list(c(10:19,90:99), c(30:39), c(20:29,40,50,51), c(100), 
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1743:65: style: Commas should always have a space after.
            ba.grupp =list(c(10:19,90:99), c(30:39), c(20:29,40,50,51), c(100), 
                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1743:68: style: Commas should always have a space after.
            ba.grupp =list(c(10:19,90:99), c(30:39), c(20:29,40,50,51), c(100), 
                                                                   ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1743:80: style: Trailing whitespace is superfluous.
            ba.grupp =list(c(10:19,90:99), c(30:39), c(20:29,40,50,51), c(100), 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1744:34: style: Commas should always have a space after.
                           c(110,111),c(120),c(140:144),c(112,130,150:199),
                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1744:39: style: Commas should always have a space after.
                           c(110,111),c(120),c(140:144),c(112,130,150:199),
                                      ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1744:46: style: Commas should always have a space after.
                           c(110,111),c(120),c(140:144),c(112,130,150:199),
                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1744:57: style: Commas should always have a space after.
                           c(110,111),c(120),c(140:144),c(112,130,150:199),
                                                        ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1744:63: style: Commas should always have a space after.
                           c(110,111),c(120),c(140:144),c(112,130,150:199),
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1744:67: style: Commas should always have a space after.
                           c(110,111),c(120),c(140:144),c(112,130,150:199),
                                                                  ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1747:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1749:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1751:58: style: Trailing whitespace is superfluous.
    Stratum = structure(list(Wa = c(3, 5), Begehbar = 1), 
                                                         ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1752:55: style: Trailing whitespace is superfluous.
                        .Names = c("Wa", "Begehbar")), 
                                                      ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1753:55: style: Trailing whitespace is superfluous.
    HBF = 1323958.42086703, se.HBF = 15760.6334334331, 
                                                      ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1754:75: style: Trailing whitespace is superfluous.
    BAGR = c("Fi/sNB", "Ta", "Dgl/Ki/Lae", "Bu", "Ei", "Es", "Ah", "sBLb", 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1755:21: style: Trailing whitespace is superfluous.
             "WLb"), 
                    ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1756:55: style: Trailing whitespace is superfluous.
    m.Verbissproz.BAGR = structure(c(96.0574454771787, 
                                                      ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1757:79: style: Trailing whitespace is superfluous.
     3.61557541182538, 0.326979110995943, 3.94255452282132, 0.317488648274475, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1758:63: style: Trailing whitespace is superfluous.
     0.301163802723512, 0.0903863518809982, 0.317488648274473, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1759:77: style: Trailing whitespace is superfluous.
     68.8715363350624, 19.1712507536728, 11.9572129112648, 31.1284636649376, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1760:79: style: Trailing whitespace is superfluous.
     1.06659017700576, 0.859349966298884, 0.764926489643957, 1.06659017700576, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1761:77: style: Trailing whitespace is superfluous.
     93.2114721520086, 5.55226411172762, 1.23626373626374, 6.78852784799136, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1762:78: style: Trailing whitespace is superfluous.
     1.18412207057613, 1.06075061041891, 0.562868910016648, 1.18412207057613, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1763:76: style: Trailing whitespace is superfluous.
     84.4496817075017, 13.569693651306, 1.98062464119225, 15.5503182924983, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1764:62: style: Trailing whitespace is superfluous.
     0.513220964971834, 0.476312199884495, 0.208680451536187, 
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1765:78: style: Trailing whitespace is superfluous.
     0.513220964971826, 65.5918813847893, 27.3113194424379, 7.09679917277282, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1766:78: style: Trailing whitespace is superfluous.
     34.4081186152107, 1.77225601574225, 1.64154186864582, 0.936938846531801, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1767:77: style: Trailing whitespace is superfluous.
     1.77225601574225, 70.0642778015485, 24.9385735714491, 4.99714862700238, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1768:79: style: Trailing whitespace is superfluous.
     29.9357221984515, 0.88180199659296, 0.800108240119322, 0.452878003827781, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1769:78: style: Trailing whitespace is superfluous.
     0.881801996592961, 61.4023353367778, 32.7410846840691, 5.85657997915313, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1770:80: style: Trailing whitespace is superfluous.
     38.5976646632222, 0.932265078566988, 0.888938507178487, 0.494169468902097, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1771:78: style: Trailing whitespace is superfluous.
     0.932265078566993, 61.7833196774943, 31.5477020437971, 6.66897827870861, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1772:78: style: Trailing whitespace is superfluous.
     38.2166803225057, 1.20036558822392, 1.16099191878979, 0.632432082975517, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1773:77: style: Trailing whitespace is superfluous.
     1.20036558822392, 67.6478107109341, 26.5585775416717, 5.79361174739424, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1774:78: style: Trailing whitespace is superfluous.
     32.3521892890659, 1.14874394574895, 1.06524245525022, 0.601990433482375, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1775:77: style: Trailing whitespace is superfluous.
     1.14874394574895, 78.9494712664289, 17.0064960777263, 4.04403265584478, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1776:79: style: Trailing whitespace is superfluous.
     21.0505287335711, 0.36631280588909, 0.334165075661004, 0.184444611451421, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1777:50: style: Trailing whitespace is superfluous.
     0.366312805889067), .Dim = c(4L, 2L, 10L))), 
                                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1779:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1785:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1788:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1790:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1792:74: style: Trailing whitespace is superfluous.
    Stratum = structure(list(Wa = c(3, 5), Begehbar = 1, EigArt = "StW"), 
                                                                         ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1793:65: style: Trailing whitespace is superfluous.
                        .Names = c("Wa", "Begehbar", "EigArt")), 
                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1794:55: style: Trailing whitespace is superfluous.
    HBF = 310978.141781646, se.HBF = 9650.45305895392, 
                                                      ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1795:72: style: Trailing whitespace is superfluous.
    BAGR = c("FI", "TA", "DGL", "KI", "LAE", "BU", "EI", "ALH", "ALN"), 
                                                                       ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1796:49: style: Trailing whitespace is superfluous.
    n.Verjg.BAGR = structure(c(1163054294.19255, 
                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1797:79: style: Trailing whitespace is superfluous.
       26.3854768743937, 94558787.2919012, 1.82277940363788, 275336601.981766, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1798:80: style: Trailing whitespace is superfluous.
       6.24638727576144, 27649100.6454389, 0.605121768370304, 33919431.2281197, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1799:80: style: Trailing whitespace is superfluous.
       0.769508674471195, 19197276.0181617, 0.43229372673899, 33600939.1228135, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1800:1: style: lines should not be more than 80 characters.
       0.762283245597242, 18537660.5679856, 0.418281171419954, 1910953.85713907, 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1800:81: style: Trailing whitespace is superfluous.
       0.762283245597242, 18537660.5679856, 0.418281171419954, 1910953.85713907, 
                                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1801:65: style: Trailing whitespace is superfluous.
       0.0433526010413654, 693881.525535166, 0.0156471872365391, 
                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1802:79: style: Trailing whitespace is superfluous.
       1230733910.31817, 27.9208815025932, 83439745.1641056, 1.49045541152135, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1803:80: style: Trailing whitespace is superfluous.
       130024484.019443, 2.94978319871283, 36612376.6935523, 0.802457714356436, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1804:79: style: Trailing whitespace is superfluous.
       1302394681.86108, 29.5466040847528, 110977441.687462, 1.81640185013403, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1805:80: style: Trailing whitespace is superfluous.
       236958278.882387, 5.37572254267629, 35328853.1520288, 0.774244799631737, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1806:52: style: Trailing whitespace is superfluous.
       4407933575.46347, 100, 213346198.987428, 0), 
                                                   ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1807:32: style: Trailing whitespace is superfluous.
       .Dim = c(2L, 2L, 10L))), 
                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1809:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1814:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1816:31: style: Trailing whitespace is superfluous.
    verj.3, ecken.3, trakte.3, 
                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1817:75: style: Trailing whitespace is superfluous.
    list(bagr.lab = c("Fi", "Ta", "Dgl/Ki/La/sNB", "Bu", "Ei", "Es", "Ah", 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1818:38: style: Trailing whitespace is superfluous.
                      "sBLb", "WLb"), 
                                     ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1819:14: style: Put spaces around all infix operators.
    ba.grupp =list(c(10), c(30), c(11:19,20:29,31:39,40,50,51,90:99), c(100), 
             ^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1819:42: style: Commas should always have a space after.
    ba.grupp =list(c(10), c(30), c(11:19,20:29,31:39,40,50,51,90:99), c(100), 
                                         ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1819:48: style: Commas should always have a space after.
    ba.grupp =list(c(10), c(30), c(11:19,20:29,31:39,40,50,51,90:99), c(100), 
                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1819:54: style: Commas should always have a space after.
    ba.grupp =list(c(10), c(30), c(11:19,20:29,31:39,40,50,51,90:99), c(100), 
                                                     ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1819:57: style: Commas should always have a space after.
    ba.grupp =list(c(10), c(30), c(11:19,20:29,31:39,40,50,51,90:99), c(100), 
                                                        ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1819:60: style: Commas should always have a space after.
    ba.grupp =list(c(10), c(30), c(11:19,20:29,31:39,40,50,51,90:99), c(100), 
                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1819:63: style: Commas should always have a space after.
    ba.grupp =list(c(10), c(30), c(11:19,20:29,31:39,40,50,51,90:99), c(100), 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1819:78: style: Trailing whitespace is superfluous.
    ba.grupp =list(c(10), c(30), c(11:19,20:29,31:39,40,50,51,90:99), c(100), 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1820:26: style: Commas should always have a space after.
                   c(110,111),c(120), c(140:144), c(112,130,150:199), 
                         ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1820:31: style: Commas should always have a space after.
                   c(110,111),c(120), c(140:144), c(112,130,150:199), 
                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1820:57: style: Commas should always have a space after.
                   c(110,111),c(120), c(140:144), c(112,130,150:199), 
                                                        ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1820:61: style: Commas should always have a space after.
                   c(110,111),c(120), c(140:144), c(112,130,150:199), 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1820:70: style: Trailing whitespace is superfluous.
                   c(110,111),c(120), c(140:144), c(112,130,150:199), 
                                                                     ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1821:33: style: Trailing whitespace is superfluous.
                   c(200:299))), 
                                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1822:12: style: Put spaces around all infix operators.
    list(Wa=c(3,5),Begehbar=1), 2, A)
          ~^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1822:17: style: Commas should always have a space after.
    list(Wa=c(3,5),Begehbar=1), 2, A)
                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1822:20: style: Commas should always have a space after.
    list(Wa=c(3,5),Begehbar=1), 2, A)
                   ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1822:28: style: Put spaces around all infix operators.
    list(Wa=c(3,5),Begehbar=1), 2, A)
                          ~^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1823:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1825:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1827:58: style: Trailing whitespace is superfluous.
    Stratum = structure(list(Wa = c(3, 5), Begehbar = 1), 
                                                         ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1828:55: style: Trailing whitespace is superfluous.
                        .Names = c("Wa", "Begehbar")), 
                                                      ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1829:55: style: Trailing whitespace is superfluous.
    HBF = 1323958.42086703, se.HBF = 15760.6334334331, 
                                                      ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1830:1: style: lines should not be more than 80 characters.
    BAGR = c("Fi", "Ta", "Dgl/Ki/La/sNB", "Bu", "Ei", "Es", "Ah", "sBLb", "WLb"), 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1830:82: style: Trailing whitespace is superfluous.
    BAGR = c("Fi", "Ta", "Dgl/Ki/La/sNB", "Bu", "Ei", "Es", "Ah", "sBLb", "WLb"), 
                                                                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1831:49: style: Trailing whitespace is superfluous.
    n.Verjg.BAGR = structure(c(4133233954.75663, 
                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1832:80: style: Trailing whitespace is superfluous.
       21.5921900393957, 196158528.046877, 0.899757471373445, 1022360316.13047, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1833:80: style: Trailing whitespace is superfluous.
       5.34085379058238, 59490121.9016487, 0.308606846119079, 198818825.003868, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1834:80: style: Trailing whitespace is superfluous.
       1.03863800111108, 30664119.5815902, 0.159700089813015, 5601324261.47559, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1835:80: style: Trailing whitespace is superfluous.
       29.2615562656143, 197398985.443689, 0.784762350768101, 429646125.441407, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1836:80: style: Trailing whitespace is superfluous.
       2.24448963977582, 55582141.0704453, 0.283178557009599, 2717694883.78457, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1837:77: style: Trailing whitespace is superfluous.
       14.197353704655, 124440118.37118, 0.53689145524285, 2675415027.10036, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1838:80: style: Trailing whitespace is superfluous.
       13.9764819344245, 129277306.369491, 0.563134101597512, 1446432825.28827, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1839:80: style: Trailing whitespace is superfluous.
       7.55622662174791, 104935361.747216, 0.508009811380214, 917337475.509285, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1840:79: style: Trailing whitespace is superfluous.
       4.79221000269322, 54088641.8481722, 0.28277631231099, 19142263694.4905, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1841:59: style: Trailing whitespace is superfluous.
       100, 443470186.924997, 0), .Dim = c(2L, 2L, 10L))), 
                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1843:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1849:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1851:73: style: Trailing whitespace is superfluous.
                               "Ah", "sBLb", "Bi", "Er/Pa/Wei", "sWLb"), 
                                                                        ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1852:28: style: Put spaces around all infix operators.
                  ba.grupp =list(c(10:19), c(30:39), c(20:29,40,50,51,90:99), 
                           ^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1852:62: style: Commas should always have a space after.
                  ba.grupp =list(c(10:19), c(30:39), c(20:29,40,50,51,90:99), 
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1852:65: style: Commas should always have a space after.
                  ba.grupp =list(c(10:19), c(30:39), c(20:29,40,50,51,90:99), 
                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1852:68: style: Commas should always have a space after.
                  ba.grupp =list(c(10:19), c(30:39), c(20:29,40,50,51,90:99), 
                                                                   ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1852:71: style: Commas should always have a space after.
                  ba.grupp =list(c(10:19), c(30:39), c(20:29,40,50,51,90:99), 
                                                                      ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1852:78: style: Trailing whitespace is superfluous.
                  ba.grupp =list(c(10:19), c(30:39), c(20:29,40,50,51,90:99), 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1853:48: style: Commas should always have a space after.
                                 c(100), c(110,111), c(120), c(140:144),
                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1854:1: style: lines should not be more than 80 characters.
                                 c(112,130,150:199), c(200,201), c(210:224,240), 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1854:40: style: Commas should always have a space after.
                                 c(112,130,150:199), c(200,201), c(210:224,240), 
                                       ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1854:44: style: Commas should always have a space after.
                                 c(112,130,150:199), c(200,201), c(210:224,240), 
                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1854:60: style: Commas should always have a space after.
                                 c(112,130,150:199), c(200,201), c(210:224,240), 
                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1854:76: style: Commas should always have a space after.
                                 c(112,130,150:199), c(200,201), c(210:224,240), 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1854:81: style: Trailing whitespace is superfluous.
                                 c(112,130,150:199), c(200,201), c(210:224,240), 
                                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1855:40: style: Commas should always have a space after.
                                 c(230,250:299)))
                                       ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1856:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1857:35: style: Words within variable and function names should be separated by '_' rather than '.'.
  result <- verjg.kl4.bagrupp.fun(verj.kl4m.3, ecken.3, trakte.3,
                                  ^~~~~~~~~~~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1859:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1861:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1862:1: style: lines should not be more than 80 characters.
  reference <- structure(list(Stratum = structure(list(Wa = c(3, 5), Begehbar = 1), .Names = c("Wa", 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1862:101: style: Trailing whitespace is superfluous.
  reference <- structure(list(Stratum = structure(list(Wa = c(3, 5), Begehbar = 1), .Names = c("Wa", 
                                                                                                    ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1863:65: style: Trailing whitespace is superfluous.
"Begehbar")), HBF = 1323958.42086703, se.HBF = 15760.6334334331, 
                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1864:66: style: Trailing whitespace is superfluous.
    BAGR = c("Fi", "Ta", "Dgl/Ki/La/sNB", "Bu", "Ei", "Es", "Ah", 
                                                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1865:70: style: Trailing whitespace is superfluous.
    "sBLb", "Bi", "Er/Pa/Wei", "sWLb"), VjgArt = c("Naturverjüngung", 
                                                                     ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1867:64: style: Trailing whitespace is superfluous.
    ), Verjg.kl4m.BAF.VArt.BAGR = structure(c(89626.3418600095, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1868:75: style: Trailing whitespace is superfluous.
    2711.7931064959, 12150.9605978002, 937.912294000381, 119.068207438919, 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1869:76: style: Trailing whitespace is superfluous.
    53.5258108419167, 67.0384025076264, 31.5871884053253, 223.127817301503, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1870:76: style: Trailing whitespace is superfluous.
    81.8892576287999, 102186.536885058, 2963.09658115651, 35036.0701821947, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1871:76: style: Trailing whitespace is superfluous.
    1532.56759643747, 2811.61061263329, 356.022174628901, 64.0366829923596, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1872:73: style: Trailing whitespace is superfluous.
    34.1028183316967, 17.0097439198455, 9.648034565709, 153.08769527861, 
                                                                        ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1873:76: style: Trailing whitespace is superfluous.
    46.0982146066284, 38081.8149170188, 1590.43164104944, 9128.22904592651, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1874:76: style: Trailing whitespace is superfluous.
    666.128857558475, 4354.49444348045, 498.199601114723, 11.0063048893118, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1875:76: style: Trailing whitespace is superfluous.
    9.11541836474589, 32.0183414961798, 17.7279475539192, 143.081963561053, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1876:75: style: Trailing whitespace is superfluous.
    60.093635805262, 13668.8300993535, 859.276671360826, 146330.824649744, 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1877:75: style: Trailing whitespace is superfluous.
    3866.58991427346, 6736.85916543058, 591.839158084945, 283.16220760684, 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1878:75: style: Trailing whitespace is superfluous.
    105.318364486673, 933.534769247992, 161.592683170145, 315.18054910302, 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1879:76: style: Trailing whitespace is superfluous.
    176.496516695412, 154599.561341132, 3941.82914919518, 3429.96483277826, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1880:63: style: Trailing whitespace is superfluous.
    268.486263115083, 3002.72008843861, 468.52844263887, 0, 0, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1881:75: style: Trailing whitespace is superfluous.
    22.0126097786236, 18.2856753894259, 153.08769527861, 85.1086235004414, 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1882:75: style: Trailing whitespace is superfluous.
    6607.7852262741, 572.572389640467, 38356.9725392516, 1417.61226520819, 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1883:76: style: Trailing whitespace is superfluous.
    1481.84886737007, 248.485820019935, 66.0378293358708, 35.8765808371725, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1884:76: style: Trailing whitespace is superfluous.
    101.057890347317, 40.8160463383617, 24.0137561221348, 14.1487449147748, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1885:75: style: Trailing whitespace is superfluous.
    40029.930882427, 1448.03235748333, 48090.5483540903, 1654.03257937964, 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1886:76: style: Trailing whitespace is superfluous.
    2664.52635638521, 341.602412389775, 156.089414793876, 72.2622529954103, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1887:76: style: Trailing whitespace is superfluous.
    247.141573423638, 90.9645917003624, 38.0217805267135, 21.0331649165094, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1888:76: style: Trailing whitespace is superfluous.
    51196.3274792197, 1698.67639951996, 31098.8147513364, 1262.75781969199, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1889:76: style: Trailing whitespace is superfluous.
    2717.55673448826, 325.764217611654, 228.130683160281, 129.333644449584, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1890:76: style: Trailing whitespace is superfluous.
    1217.69755002659, 287.190801349464, 49.0280854160253, 20.1802509654513, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1891:76: style: Trailing whitespace is superfluous.
    35311.2278044275, 1378.11461654998, 3836.19754051104, 342.375295500676, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1892:76: style: Trailing whitespace is superfluous.
    670.384025076264, 125.377084298237, 1.00057317175562, 1.00057284078495, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1893:76: style: Trailing whitespace is superfluous.
    43.0246463854916, 19.0064891274805, 37.0212073549579, 22.3936751608818, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1894:76: style: Trailing whitespace is superfluous.
    4587.62799249951, 371.196225162708, 3412.95508885841, 295.507574085197, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1895:64: style: Trailing whitespace is superfluous.
    1065.61042791973, 212.004051437209, 0, 0, 161.092280652655, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1896:75: style: Trailing whitespace is superfluous.
    66.7959593823626, 68.038975679382, 45.2111737422009, 4707.69677311018, 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1897:76: style: Trailing whitespace is superfluous.
    373.296784081653, 15635.9569550251, 808.234243070646, 1836.05177017156, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1898:76: style: Trailing whitespace is superfluous.
    243.326514097253, 102.058463519073, 44.5120568802622, 1190.68207438919, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1899:76: style: Trailing whitespace is superfluous.
    336.358995533434, 67.0384025076264, 26.6719065492773, 18831.7876656125, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1900:76: style: Trailing whitespace is superfluous.
    938.194190192324, 423982.875799726, 7213.13025569356, 39492.6230891943, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1901:76: style: Trailing whitespace is superfluous.
    2024.75938669204, 1030.59036690829, 257.029278112354, 4032.30988217514, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1902:75: style: Trailing whitespace is superfluous.
    574.711894627704, 1270.72792812964, 307.63298839511, 469809.127066133, 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1903:70: style: Trailing whitespace is superfluous.
    7631.83487610969), .Dim = c(2L, 6L, 12L))), .Names = c("Stratum", 
                                                                     ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1911:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1913:68: style: Trailing whitespace is superfluous.
    ntns.te, ecken.3, trakte.3, A, list(Wa = c(3, 5), Begehbar = 1, 
                                                                   ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1915:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1917:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1919:54: style: Trailing whitespace is superfluous.
    HBF = 5303.03781030478, se.HBF = 973.67411677321, 
                                                     ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1920:78: style: Trailing whitespace is superfluous.
    NTNS = c("sehr naturnah", "naturnah", "bedingt naturnah", "kulturbetont", 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1921:48: style: Trailing whitespace is superfluous.
             "kulturbestimmt", "keine Angabe"), 
                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1922:56: style: Trailing whitespace is superfluous.
    NTNS.Flaeche.Anteil = structure(c(3101.77683244242, 
                                                       ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1923:77: style: Trailing whitespace is superfluous.
      58.4905660377358, 754.743775234348, 7.5009287954288, 2201.26097786236, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1924:65: style: Trailing whitespace is superfluous.
      41.5094339622642, 509.689803474082, 7.5009287954288, 0, 0, 
                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1925:73: style: Trailing whitespace is superfluous.
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0), .Dim = c(2L, 2L, 6L))), 
                                                                        ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1927:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1932:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1934:71: style: Trailing whitespace is superfluous.
                               list(Wa = c(3, 5), Begehbar = 1), 3, 3, 
                                                                      ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1936:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1938:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1940:55: style: Trailing whitespace is superfluous.
    HBF = 1323958.42086703, se.HBF = 15760.6334334331, 
                                                      ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1941:43: style: Trailing whitespace is superfluous.
    NTNS_Kollektiv = "BWI 3 Schicht < 4m", 
                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1942:78: style: Trailing whitespace is superfluous.
    NTNS = c("sehr naturnah", "naturnah", "bedingt naturnah", "kulturbetont", 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1943:48: style: Trailing whitespace is superfluous.
             "kulturbestimmt", "keine Angabe"), 
                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1944:56: style: Trailing whitespace is superfluous.
    NTNS.Flaeche.Anteil = structure(c(275757.966135848, 
                                                       ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1945:80: style: Trailing whitespace is superfluous.
       20.8282950423216, 6980.43129090457, 0.455228341952191, 360306.399149198, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1946:80: style: Trailing whitespace is superfluous.
       27.2143288996372, 7450.22499743494, 0.455497510369835, 234634.408776692, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1947:79: style: Trailing whitespace is superfluous.
       17.7221886336155, 5698.37991560239, 0.38285646415925, 33919.4305225155, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1948:80: style: Trailing whitespace is superfluous.
       2.56197097944377, 1996.72034622579, 0.147644404309546, 66638.1732389242, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1949:80: style: Trailing whitespace is superfluous.
       5.03325272067715, 3114.06068604502, 0.228220614021398, 352623.092420045, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1950:63: style: Trailing whitespace is superfluous.
       26.6258780874688, 7381.61600654685, 0.464543374771226), 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1951:31: style: Trailing whitespace is superfluous.
       .Dim = c(2L, 2L, 6L))), 
                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1952:60: style: Trailing whitespace is superfluous.
      .Names = c("HBF", "se.HBF", "NTNS_Kollektiv", "NTNS", 
                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1954:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1959:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1960:43: style: Commas should always have a space after.
  result <- fba.stratum.fun("alle", fba.3,list(Wa = c(3,5), Begehbar=1), 
                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1960:57: style: Commas should always have a space after.
  result <- fba.stratum.fun("alle", fba.3,list(Wa = c(3,5), Begehbar=1), 
                                                        ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1960:69: style: Put spaces around all infix operators.
  result <- fba.stratum.fun("alle", fba.3,list(Wa = c(3,5), Begehbar=1), 
                                                                   ~^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1960:73: style: Trailing whitespace is superfluous.
  result <- fba.stratum.fun("alle", fba.3,list(Wa = c(3,5), Begehbar=1), 
                                                                        ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1962:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1964:58: style: Trailing whitespace is superfluous.
    Stratum = structure(list(Wa = c(3, 5), Begehbar = 1), 
                                                         ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1965:37: style: Trailing whitespace is superfluous.
      .Names = c("Wa", "Begehbar")), 
                                    ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1966:55: style: Trailing whitespace is superfluous.
    HBF = 1323958.42086703, se.HBF = 15760.6334334331, 
                                                      ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1967:76: style: Trailing whitespace is superfluous.
    FBA = c("Adlerfarn", "Brennessel", "Riedgras", "Honiggras", "Reitgras", 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1968:67: style: Trailing whitespace is superfluous.
      "Heidekraut", "Heidelbeere", "Brombeere", "Riesenbärenklau", 
                                                                  ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1969:78: style: Trailing whitespace is superfluous.
      "Riesenknöterich", "Drüsiges Springkraut", "Kleinblütiges Springkraut", 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1970:22: style: Trailing whitespace is superfluous.
      "Kermesbeere"), 
                     ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1971:59: style: Trailing whitespace is superfluous.
    Dichtestufen = c("nicht vorhanden", "selten, bis 10%", 
                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1972:49: style: Trailing whitespace is superfluous.
      "häufig, > 10 bis 50%", "flächig, > 50%"), 
                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1973:43: style: Trailing whitespace is superfluous.
    FBA.Dichtevertlg = structure(c(0.9556, 
                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1974:66: style: Trailing whitespace is superfluous.
      0.00235, 0.0273, 0.00165, 0.0124, 0.00105, 0.0048, 0.00066, 
                                                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1975:70: style: Trailing whitespace is superfluous.
      0.774, 0.0045, 0.1564, 0.00368, 0.0487, 0.002, 0.0209, 0.00141, 
                                                                     ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1976:65: style: Trailing whitespace is superfluous.
      0.9212, 0.00355, 0.0317, 0.00188, 0.0234, 0.00155, 0.0237, 
                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1977:69: style: Trailing whitespace is superfluous.
      0.00181, 0.9953, 0.00069, 0.0036, 6e-04, 0.0011, 3e-04, 1e-04, 
                                                                    ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1978:70: style: Trailing whitespace is superfluous.
      8e-05, 0.9602, 0.00229, 0.0286, 0.00181, 0.0082, 9e-04, 0.0029, 
                                                                     ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1979:66: style: Trailing whitespace is superfluous.
      0.00053, 0.9783, 0.00166, 0.0165, 0.00132, 0.0039, 0.00062, 
                                                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1980:65: style: Trailing whitespace is superfluous.
      0.0014, 0.00037, 0.8051, 0.00563, 0.0832, 0.00305, 0.0582, 
                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1981:66: style: Trailing whitespace is superfluous.
      0.00257, 0.0535, 0.00284, 0.5014, 0.00598, 0.2796, 0.00465, 
                                                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1982:64: style: Trailing whitespace is superfluous.
      0.1341, 0.00335, 0.0849, 0.00293, 0.998, 0.00043, 0.0014, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1983:68: style: Trailing whitespace is superfluous.
      0.00034, 5e-04, 2e-04, 1e-04, 8e-05, 0.9983, 0.00041, 0.0012, 
                                                                   ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1984:63: style: Trailing whitespace is superfluous.
      0.00034, 4e-04, 0.00017, 2e-04, 0.00011, 0.972, 0.00179, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1985:71: style: Trailing whitespace is superfluous.
      0.0164, 0.00126, 0.0078, 8e-04, 0.0039, 0.00062, 0.931, 0.00292, 
                                                                      ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1986:63: style: Trailing whitespace is superfluous.
      0.045, 0.00218, 0.0178, 0.0013, 0.0062, 0.00076, 0.9972, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1987:61: style: Trailing whitespace is superfluous.
      6e-04, 0.0024, 0.00053, 3e-04, 0.00015, 1e-04, 8e-05), 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1988:30: style: Trailing whitespace is superfluous.
      .Dim = c(2L, 4L, 13L)), 
                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1989:55: style: Trailing whitespace is superfluous.
    FBA.Fläche = structure(c(10419.1, 771.71, 46768.9, 
                                                      ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1990:64: style: Trailing whitespace is superfluous.
      1580.88, 31766.1, 1905.58, 715.6, 142.92, 7684.7, 663.43, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1991:66: style: Trailing whitespace is superfluous.
      3606.6, 410.72, 77213.3, 3209.15, 146601.4, 3389.55, 336.2, 
                                                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1992:69: style: Trailing whitespace is superfluous.
      101.97, 333.4, 104.38, 6842.9, 601.35, 14712.1, 897.62, 348.8, 
                                                                    ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1993:67: style: Trailing whitespace is superfluous.
      106.08, 0.0079, 6e-04, 0.0353, 0.0011, 0.024, 0.0014, 5e-04, 
                                                                  ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1994:67: style: Trailing whitespace is superfluous.
      1e-04, 0.0058, 5e-04, 0.0027, 3e-04, 0.0583, 0.0023, 0.1107, 
                                                                  ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1995:65: style: Trailing whitespace is superfluous.
      0.0022, 3e-04, 1e-04, 3e-04, 1e-04, 0.0052, 5e-04, 0.0111, 
                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1996:53: style: Trailing whitespace is superfluous.
      7e-04, 3e-04, 1e-04), .Dim = c(2L, 13L, 2L))), 
                                                    ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1997:68: style: Trailing whitespace is superfluous.
      .Names = c("Stratum", "HBF", "se.HBF", "FBA", "Dichtestufen", 
                                                                   ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:1999:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2004:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2005:72: style: Trailing whitespace is superfluous.
  result <- fl.stratum.fun(list(Wa = c(3, 4, 5), Kreis = 317), ecken.3, 
                                                                       ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2008:58: style: Trailing whitespace is superfluous.
  reference <- structure(list(Flaeche = 83747.9744759453, 
                                                         ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2010:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2015:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2018:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2020:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2021:58: style: Trailing whitespace is superfluous.
  reference <- structure(list(Fl_Proz = 41.6965352449223, 
                                                         ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2023:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2028:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2029:32: style: Put spaces around all infix operators.
  result <- stratum.fun(list(Wa=c(1:5), EigArt="BW"), ecken.3)
                              ~^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2029:47: style: Put spaces around all infix operators.
  result <- stratum.fun(list(Wa=c(1:5), EigArt="BW"), ecken.3)
                                             ~^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2030:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2032:71: style: Trailing whitespace is superfluous.
      structure(list(TNr = c(1985, 2180, 2180, 2329, 2747, 2747, 3610, 
                                                                      ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2033:1: style: lines should not be more than 80 characters.
                             3855, 3855, 3855, 3855, 3856, 3999, 3999, 3999, 4000, 4000, 4000, 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2033:95: style: Trailing whitespace is superfluous.
                             3855, 3855, 3855, 3855, 3856, 3999, 3999, 3999, 4000, 4000, 4000, 
                                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2034:1: style: lines should not be more than 80 characters.
                             4001, 4001, 4001, 5778, 5882, 5882, 5882, 5882, 5884, 5884, 5884, 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2034:95: style: Trailing whitespace is superfluous.
                             4001, 4001, 4001, 5778, 5882, 5882, 5882, 5882, 5884, 5884, 5884, 
                                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2035:1: style: lines should not be more than 80 characters.
                             5885, 5885, 5885, 6030, 6077, 6136, 6136, 6136, 6136, 6137, 6139, 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2035:95: style: Trailing whitespace is superfluous.
                             5885, 5885, 5885, 6030, 6077, 6136, 6136, 6136, 6136, 6137, 6139, 
                                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2036:1: style: lines should not be more than 80 characters.
                             6153, 6377, 6377, 6377, 6377, 6754, 7113, 7674, 7674, 8362, 10711, 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2036:96: style: Trailing whitespace is superfluous.
                             6153, 6377, 6377, 6377, 6377, 6754, 7113, 7674, 7674, 8362, 10711, 
                                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2037:1: style: lines should not be more than 80 characters.
                             10711, 10711, 10711, 10857, 11801, 11934, 12878, 12878, 12928, 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2037:92: style: Trailing whitespace is superfluous.
                             10711, 10711, 10711, 10857, 11801, 11934, 12878, 12878, 12928, 
                                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2038:44: style: Trailing whitespace is superfluous.
                             12928, 15157), 
                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2039:68: style: Trailing whitespace is superfluous.
                     ENr = c(4, 2, 3, 1, 3, 4, 1, 1, 2, 3, 4, 1, 1, 
                                                                   ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2040:1: style: lines should not be more than 80 characters.
                             3, 4, 1, 2, 3, 1, 2, 4, 4, 1, 2, 3, 4, 1, 2, 4, 1, 3, 4, 4, 2, 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2040:92: style: Trailing whitespace is superfluous.
                             3, 4, 1, 2, 3, 1, 2, 4, 4, 1, 2, 3, 4, 1, 2, 4, 1, 3, 4, 4, 2, 
                                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2041:1: style: lines should not be more than 80 characters.
                             1, 2, 3, 4, 3, 4, 2, 1, 2, 3, 4, 4, 3, 1, 3, 4, 1, 2, 3, 4, 3, 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2041:92: style: Trailing whitespace is superfluous.
                             1, 2, 3, 4, 3, 4, 2, 1, 2, 3, 4, 4, 3, 1, 3, 4, 1, 2, 3, 4, 3, 
                                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2042:1: style: lines should not be more than 80 characters.
                             3, 1, 1, 2, 1, 4, 4), Wa = c(5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2042:91: style: Trailing whitespace is superfluous.
                             3, 1, 1, 2, 1, 4, 4), Wa = c(5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
                                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2043:1: style: lines should not be more than 80 characters.
                             5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2043:92: style: Trailing whitespace is superfluous.
                             5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
                                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2044:1: style: lines should not be more than 80 characters.
                             5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2044:92: style: Trailing whitespace is superfluous.
                             5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
                                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2045:57: style: Trailing whitespace is superfluous.
                             5, 5, 4, 4, 5, 5, 5, 5, 5), 
                                                        ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2046:56: style: Trailing whitespace is superfluous.
                     EigArt = c(1, 1, 1, 1, 1, 1, 1, 1, 
                                                       ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2047:1: style: lines should not be more than 80 characters.
                             1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2047:92: style: Trailing whitespace is superfluous.
                             1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
                                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2048:1: style: lines should not be more than 80 characters.
                             1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2048:92: style: Trailing whitespace is superfluous.
                             1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
                                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2049:67: style: Trailing whitespace is superfluous.
                             1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1)), 
                                                                  ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2050:58: style: Trailing whitespace is superfluous.
                .Names = c("TNr", "ENr", "Wa", "EigArt"), 
                                                         ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2057:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2058:61: style: Trailing whitespace is superfluous.
  result <- r.variance.fun(cbind(trakte.1$m, trakte.1$m_Wa), 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2059:45: style: Commas should always have a space after.
                           length(trakte.1[,1]))
                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2060:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2061:56: style: Trailing whitespace is superfluous.
  reference <- structure(list(R.xy = 0.380382172733123, 
                                                       ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2063:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2071:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2072:61: style: Commas should always have a space after.
  result <- iVB.ew.bagrupp.akl.dkl.stratum.fun.2g(baeume.23,baeume.3,
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2076:18: style: Commas should always have a space after.
   list(Wa = c(3,5), Begehbar = 1), A)
                 ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2077:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2079:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2080:13: style: Put spaces around all infix operators.
  reference <-structure(list(
            ^~~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2081:58: style: Trailing whitespace is superfluous.
    Stratum = structure(list(Wa = c(3, 5), Begehbar = 1), 
                                                         ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2082:37: style: Trailing whitespace is superfluous.
      .Names = c("Wa", "Begehbar")), 
                                    ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2083:54: style: Trailing whitespace is superfluous.
    HBF = 1309350.0525594, se_HBF = 15708.5123749046, 
                                                     ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2084:74: style: Trailing whitespace is superfluous.
    Attribute = c("V_DhmR", "V_DhmR_HB", "V_EoR", "oiB", "G", "V_DhmR/J", 
                                                                         ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2085:1: style: lines should not be more than 80 characters.
      "V_DhmR_HB/J", "V_EoR/J", "oiB/J", "G/J", "V_DhmR/ha/J", "V_DhmR_HB/ha/J", 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2085:81: style: Trailing whitespace is superfluous.
      "V_DhmR_HB/J", "V_EoR/J", "oiB/J", "G/J", "V_DhmR/ha/J", "V_DhmR_HB/ha/J", 
                                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2086:79: style: Trailing whitespace is superfluous.
      "V_EoR/ha/J", "oiB/ha/J", "G/ha/J", "mBAF_mLK", "mBAFoLK", "mPL", "nT"), 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2087:42: style: Trailing whitespace is superfluous.
    Größen = c("Wert", "Standardfehler"), 
                                         ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2088:44: style: Trailing whitespace is superfluous.
    BAGR = c("Fichte", "Tanne", "Alle BA"), 
                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2089:79: style: Trailing whitespace is superfluous.
    AKL = c("1-20", "21-40", "41-60", "61-80", "81-100", "101-120", "121-140", 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2090:41: style: Trailing whitespace is superfluous.
      "141-160", ">160"), DKL = "0-400", 
                                        ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2091:53: style: Trailing whitespace is superfluous.
    iVB.bagr.akl.dkl = structure(c(3464922.15484338, 
                                                    ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2092:78: style: Trailing whitespace is superfluous.
      3308166.20992571, 2569628.35553625, 1903772.68687055, 420530.567745188, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2093:78: style: Trailing whitespace is superfluous.
      338347.350948474, 322945.802139545, 250796.439280503, 186034.570596779, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2094:76: style: Trailing whitespace is superfluous.
      41093.311091787, 5.7064105461295, 5.57024796330222, 4.22981720421372, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2095:79: style: Trailing whitespace is superfluous.
      3.13757336246974, 0.693060853386922, 59292.5006382454, 57976.9166951219, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2096:66: style: Trailing whitespace is superfluous.
      10.1390786338364, 2300, 230663.029498138, 228236.339791984, 
                                                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2097:78: style: Trailing whitespace is superfluous.
      174374.250978079, 118492.156671577, 27087.3980608649, 22320.4698197158, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2098:77: style: Trailing whitespace is superfluous.
      22087.9926225692, 16855.713239933, 11488.8723491072, 2628.37024297543, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2099:63: style: Trailing whitespace is superfluous.
      0.295589102531467, 0.299565691690403, 0.226087117839159, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2100:63: style: Trailing whitespace is superfluous.
      0.145538268558179, 0.0336625506502826, 2377.94008849468, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2101:66: style: Trailing whitespace is superfluous.
      2323.87990477335, 0.0136085650998704, NA, 446326.993559083, 
                                                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2102:78: style: Trailing whitespace is superfluous.
      377397.949042815, 324118.871252554, 207200.953428881, 58868.6057447011, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2103:78: style: Trailing whitespace is superfluous.
      43958.3686206971, 37223.3063220516, 31916.0274297785, 20401.6936220472, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2104:78: style: Trailing whitespace is superfluous.
      5795.66556884667, 3.96259325266654, 3.43409050340258, 2.87704568921637, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2105:79: style: Trailing whitespace is superfluous.
      1.83909494429305, 0.522445804938506, 11093.3335363442, 10839.3492498727, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2106:66: style: Trailing whitespace is superfluous.
      10.1240320733104, 1302, 52266.9477903855, 50084.7237139327, 
                                                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2107:78: style: Trailing whitespace is superfluous.
      38336.0304356731, 23670.2141161324, 7049.09585423904, 5144.01957854978, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2108:78: style: Trailing whitespace is superfluous.
      4932.56836712693, 3773.28925725851, 2333.51670615344, 692.321031354084, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2109:63: style: Trailing whitespace is superfluous.
      0.391011922075183, 0.376840662617629, 0.288228730679319, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2110:63: style: Trailing whitespace is superfluous.
      0.177790523277111, 0.0523458403526371, 812.896485845985, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2111:66: style: Trailing whitespace is superfluous.
      793.466457854196, 0.0180571268718284, NA, 8668161.67917693, 
                                                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2112:77: style: Trailing whitespace is superfluous.
      7888849.6578879, 6294631.88235857, 5424440.94411128, 1061308.60513477, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2113:78: style: Trailing whitespace is superfluous.
      846702.809748495, 770102.713031493, 614781.655599628, 529920.392911515, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2114:78: style: Trailing whitespace is superfluous.
      103688.781305005, 4.76568155652617, 4.43206764098625, 3.46030928874803, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2115:79: style: Trailing whitespace is superfluous.
      2.98266618918587, 0.583614117013172, 177666.677831004, 173756.985545493, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2116:66: style: Trailing whitespace is superfluous.
      10.1874046095737, 4381, 343506.018805245, 336632.432183579, 
                                                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2117:78: style: Trailing whitespace is superfluous.
      253756.691078652, 200643.268989751, 41314.7584459699, 33370.8984255794, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2118:77: style: Trailing whitespace is superfluous.
      32677.518794321, 24638.8761449042, 19516.9640731019, 4020.91322467054, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2119:63: style: Trailing whitespace is superfluous.
      0.139861745738439, 0.139723305345063, 0.105021635647806, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2120:63: style: Trailing whitespace is superfluous.
      0.0789312207831737, 0.016303918702842, 4722.44229814519, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2121:65: style: Trailing whitespace is superfluous.
      4615.1984711157, 0.0102247599601316, NA, 17922067.6073403, 
                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2122:78: style: Trailing whitespace is superfluous.
      17302441.6473729, 14430918.9525253, 7926956.98780998, 1419739.85286976, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2123:77: style: Trailing whitespace is superfluous.
      1758637.68209131, 1697911.14375924, 1415715.3517447, 778104.530843447, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2124:78: style: Trailing whitespace is superfluous.
      139549.504677269, 22.6138345201167, 22.3697253293165, 18.2042913204684, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2125:78: style: Trailing whitespace is superfluous.
      10.0054304982947, 1.79442840232066, 77768.2210651568, 75902.1900699897, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2126:66: style: Trailing whitespace is superfluous.
      10.1794697153977, 1267, 703160.256767265, 693727.608863159, 
                                                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2127:78: style: Trailing whitespace is superfluous.
      568525.122849945, 308154.991934071, 54436.9538329897, 68706.0581669643, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2128:78: style: Trailing whitespace is superfluous.
      67805.6677670495, 55534.1672314905, 30134.9136281038, 5335.13371514508, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2129:63: style: Trailing whitespace is superfluous.
      0.319306493717555, 0.320194296876573, 0.260672367136347, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2130:63: style: Trailing whitespace is superfluous.
      0.135856963027614, 0.0243115237074545, 2873.86413649123, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2131:66: style: Trailing whitespace is superfluous.
      2804.68700883775, 0.0185571804340779, NA, 2256351.74491328, 
                                                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2132:78: style: Trailing whitespace is superfluous.
      1942769.00713531, 1769718.74312248, 982990.470227077, 211152.892798644, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2133:78: style: Trailing whitespace is superfluous.
      221683.715321162, 190674.526188386, 173797.254883432, 96538.2102606736, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2134:78: style: Trailing whitespace is superfluous.
      20816.5746251519, 23.8302571691133, 20.9716159823886, 18.6826230025871, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2135:78: style: Trailing whitespace is superfluous.
      10.3775343796675, 2.23771207541672, 9302.61531581328, 9092.02830857239, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2136:65: style: Trailing whitespace is superfluous.
      10.1241379310345, 388, 177349.697597102, 169636.128072374, 
                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2137:78: style: Trailing whitespace is superfluous.
      141042.979719266, 77818.1351901286, 15379.4289722301, 17307.9811498426, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2138:78: style: Trailing whitespace is superfluous.
      16547.5779191168, 13759.2388030565, 7593.83759407588, 1509.29189375434, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2139:63: style: Trailing whitespace is superfluous.
      0.979185245399135, 0.841166705396656, 0.782660542533183, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2140:80: style: Trailing whitespace is superfluous.
      0.427603136902145, 0.091452007546881, 781.040273184423, 762.760618240493, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2141:64: style: Trailing whitespace is superfluous.
      0.0325597601647428, NA, 32966805.6662347, 30714908.03341, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2142:77: style: Trailing whitespace is superfluous.
      25979807.9204094, 16525139.477435, 2779080.24839202, 3235586.26579033, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2143:77: style: Trailing whitespace is superfluous.
      3015542.36401857, 2549411.43702567, 1621740.67154412, 272967.52676828, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2144:78: style: Trailing whitespace is superfluous.
      18.9969785686705, 18.1335694638159, 14.9682655486456, 9.52166632273047, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2145:77: style: Trailing whitespace is superfluous.
      1.6026641943646, 170321.098910245, 166296.126641577, 10.2140680548502, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2146:66: style: Trailing whitespace is superfluous.
      2504, 941702.192555397, 924296.698970359, 748626.450876844, 
                                                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2147:78: style: Trailing whitespace is superfluous.
      454473.018302697, 74727.7347887074, 92260.9263724051, 90594.0769608087, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2148:78: style: Trailing whitespace is superfluous.
      73316.1203586135, 44571.5945991048, 7333.29403182378, 0.23067837334542, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2149:63: style: Trailing whitespace is superfluous.
      0.231178776680519, 0.187633364810447, 0.101834265365076, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2150:1: style: lines should not be more than 80 characters.
      0.0175096690672845, 4545.32046856041, 4436.75166375037, 0.0133289014583507, 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2150:82: style: Trailing whitespace is superfluous.
      0.0175096690672845, 4545.32046856041, 4436.75166375037, 0.0133289014583507, 
                                                                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2151:64: style: Trailing whitespace is superfluous.
      NA, 23468200.9082402, 23071540.5745853, 18818076.0347384, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2152:78: style: Trailing whitespace is superfluous.
      10376313.7694451, 1553459.91556945, 2315752.78720325, 2276673.80196696, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2153:78: style: Trailing whitespace is superfluous.
      1857054.52747049, 1023794.01624452, 153268.649965383, 18.9601463052071, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2154:76: style: Trailing whitespace is superfluous.
      19.1142374396886, 15.204570078532, 8.3822782991594, 1.25488180059791, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2155:66: style: Trailing whitespace is superfluous.
      122137.917604953, 119108.795689631, 10.1761121495327, 1680, 
                                                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2156:78: style: Trailing whitespace is superfluous.
      765627.695208189, 757918.685755095, 613871.340387099, 336389.383014827, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2157:78: style: Trailing whitespace is superfluous.
      49750.0835052971, 75453.8173258505, 74691.2233725555, 60515.6318478228, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2158:80: style: Trailing whitespace is superfluous.
      33141.6422407193, 4901.03201137296, 0.209919550783817, 0.212345485570402, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2159:65: style: Trailing whitespace is superfluous.
      0.168352783639273, 0.0889940917260452, 0.0130370050339329, 
                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2160:66: style: Trailing whitespace is superfluous.
      3734.08206390978, 3642.12803385201, 0.0164101091579517, NA, 
                                                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2161:78: style: Trailing whitespace is superfluous.
      2641939.16939494, 2470191.47933966, 2096229.34440577, 1156176.18894415, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2162:77: style: Trailing whitespace is superfluous.
      178925.855086416, 259335.076345574, 242504.49300911, 205757.797866578, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2163:76: style: Trailing whitespace is superfluous.
      113462.544615272, 17558.3820188566, 23.646967788943, 22.648956346577, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2164:77: style: Trailing whitespace is superfluous.
      18.7616271853302, 10.3458628719919, 1.60102713399473, 10966.948433314, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2165:63: style: Trailing whitespace is superfluous.
      10707.09348803, 10.1099157485418, 454, 198446.374970795, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2166:78: style: Trailing whitespace is superfluous.
      195191.229103458, 157425.273399194, 86730.3404523167, 12785.6306044067, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2167:77: style: Trailing whitespace is superfluous.
      19376.809447302, 19061.6480075752, 15370.8660579998, 8464.43639669488, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2168:80: style: Trailing whitespace is superfluous.
      1243.9363376359, 0.814347915782438, 0.783496303781435, 0.645681009285886, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2169:63: style: Trailing whitespace is superfluous.
      0.353857107571789, 0.0527452114960014, 817.446455814527, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2170:66: style: Trailing whitespace is superfluous.
      797.632116268343, 0.0327288641794357, NA, 43610828.4402991, 
                                                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2171:78: style: Trailing whitespace is superfluous.
      41823991.5723825, 34647272.3872838, 22031815.9445661, 2990491.05602362, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2172:78: style: Trailing whitespace is superfluous.
      4283687.55614601, 4109216.26109501, 3403590.59030065, 2162311.64112136, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2173:76: style: Trailing whitespace is superfluous.
      293692.316054801, 16.45819706485, 16.1825270708607, 13.0768091577704, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2174:78: style: Trailing whitespace is superfluous.
      8.30773734982962, 1.12838435359905, 260276.841944902, 253929.206674669, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2175:66: style: Trailing whitespace is superfluous.
      10.1967378474085, 3010, 1039644.60435861, 1021696.09234696, 
                                                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2176:77: style: Trailing whitespace is superfluous.
      827725.95779309, 510920.783159102, 69084.8533486522, 101911.784029294, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2177:77: style: Trailing whitespace is superfluous.
      100172.764349314, 81162.7300507138, 50009.7858195746, 6767.2317416621, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2178:1: style: lines should not be more than 80 characters.
      0.156181862049714, 0.15836549115004, 0.125439031520233, 0.0710564631396485, 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2178:82: style: Trailing whitespace is superfluous.
      0.156181862049714, 0.15836549115004, 0.125439031520233, 0.0710564631396485, 
                                                                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2179:1: style: lines should not be more than 80 characters.
      0.0095130548933228, 5808.13372437816, 5666.13554544101, 0.012230823828492, 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2179:81: style: Trailing whitespace is superfluous.
      0.0095130548933228, 5808.13372437816, 5666.13554544101, 0.012230823828492, 
                                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2180:64: style: Trailing whitespace is superfluous.
      NA, 10321880.0765653, 10109154.5719728, 8315187.15047099, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2181:78: style: Trailing whitespace is superfluous.
      4658244.87469101, 641616.515005232, 1021488.53127554, 1000251.30567927, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2182:78: style: Trailing whitespace is superfluous.
      822918.355102728, 460808.722855507, 63466.6505973232, 15.0339577315231, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2183:79: style: Trailing whitespace is superfluous.
      15.1008273354697, 12.1114622321411, 6.78204272452878, 0.934082873402451, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2184:66: style: Trailing whitespace is superfluous.
      67945.4172691789, 66238.1791049173, 10.1601782363977, 1291, 
                                                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2185:77: style: Trailing whitespace is superfluous.
      431002.03738042, 427122.794614093, 346797.591408255, 193380.585768197, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2186:78: style: Trailing whitespace is superfluous.
      26503.1197978763, 42639.4450795962, 42218.6342548808, 34316.6704558492, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2187:77: style: Trailing whitespace is superfluous.
      19106.5443308155, 2614.2970611567, 0.2323650764115, 0.233961643051362, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2188:64: style: Trailing whitespace is superfluous.
      0.187247473692846, 0.100331798827199, 0.0138201702064555, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2189:66: style: Trailing whitespace is superfluous.
      2674.54364428471, 2608.16586116789, 0.0182246662870195, NA, 
                                                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2190:76: style: Trailing whitespace is superfluous.
      2597247.42731594, 2494453.5700582, 2051974.17773087, 1142329.1620146, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2191:78: style: Trailing whitespace is superfluous.
      152465.148976256, 256026.421762584, 245728.066292723, 202301.832157652, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2192:78: style: Trailing whitespace is superfluous.
      112587.752859526, 15000.0305020688, 22.0415351032272, 21.6650870673069, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2193:78: style: Trailing whitespace is superfluous.
      17.4163389241325, 9.69277658830045, 1.29136554182451, 11615.6347805874, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2194:65: style: Trailing whitespace is superfluous.
      11342.1222600823, 10.1643493761141, 497, 187535.004153516, 
                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2195:78: style: Trailing whitespace is superfluous.
      185830.220367448, 147837.201419736, 82447.5233635578, 10547.5858521173, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2196:78: style: Trailing whitespace is superfluous.
      18474.9872346441, 18291.9647458773, 14564.1616129597, 8120.25812649807, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2197:1: style: lines should not be more than 80 characters.
      1035.97070023872, 0.663367100265232, 0.652997507300292, 0.520672005831184, 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2197:81: style: Trailing whitespace is superfluous.
      1035.97070023872, 0.663367100265232, 0.652997507300292, 0.520672005831184, 
                                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2198:63: style: Trailing whitespace is superfluous.
      0.288849689360554, 0.0365173939516602, 822.540413864644, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2199:66: style: Trailing whitespace is superfluous.
      802.956617055964, 0.0298964876870011, NA, 24734320.2347179, 
                                                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2200:78: style: Trailing whitespace is superfluous.
      23739526.0561028, 20053856.1050987, 13253700.3421484, 1552447.68938345, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2201:75: style: Trailing whitespace is superfluous.
      2430841.31531184, 2333324.01349041, 1970779.08535, 1300690.80844354, 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2202:78: style: Trailing whitespace is superfluous.
      152466.379725351, 13.2773655005116, 13.0660405029127, 10.7644847370875, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2203:79: style: Trailing whitespace is superfluous.
      7.10443218077579, 0.832778280261205, 183081.599675642, 178579.272961098, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2204:65: style: Trailing whitespace is superfluous.
      10.222224857685, 2684, 670043.523335538, 659832.820930909, 
                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2205:78: style: Trailing whitespace is superfluous.
      543428.432646068, 350514.576416981, 40776.4678886144, 65933.9060562408, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2206:78: style: Trailing whitespace is superfluous.
      64890.1422211043, 53467.5855605925, 34418.1730397143, 4005.00323500732, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2207:63: style: Trailing whitespace is superfluous.
      0.157297884104754, 0.156475898549466, 0.127492542408767, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2208:64: style: Trailing whitespace is superfluous.
      0.077250404752038, 0.00889907938265953, 4635.73387424318, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2209:66: style: Trailing whitespace is superfluous.
      4522.18117217785, 0.0129886863067623, NA, 8726709.76918194, 
                                                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2210:78: style: Trailing whitespace is superfluous.
      8509139.80676718, 7090065.29625965, 3926639.89772604, 519016.508298868, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2211:78: style: Trailing whitespace is superfluous.
      861113.241676397, 839951.089435309, 699649.536883352, 387330.477859665, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2212:78: style: Trailing whitespace is superfluous.
      51160.8452854428, 12.8988843882597, 12.9121637475183, 10.4802690886378, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2213:78: style: Trailing whitespace is superfluous.
      5.80194428811109, 0.766354291867413, 66758.7378688474, 65051.149122605, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2214:66: style: Trailing whitespace is superfluous.
      10.1578999504705, 1230, 376748.106037648, 371722.519769521, 
                                                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2215:78: style: Trailing whitespace is superfluous.
      306136.669785612, 168154.639102169, 22008.3446711957, 37137.9449726984, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2216:78: style: Trailing whitespace is superfluous.
      36669.0425318721, 30181.0899072392, 16560.8788517144, 2163.93489923898, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2217:63: style: Trailing whitespace is superfluous.
      0.220118642904161, 0.224132340457696, 0.179085681715788, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2218:63: style: Trailing whitespace is superfluous.
      0.0935705218729192, 0.012061129425329, 2686.80944055257, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2219:65: style: Trailing whitespace is superfluous.
      2619.05481354466, 0.0186142528112237, NA, 3149243.0437327, 
                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2220:77: style: Trailing whitespace is superfluous.
      3052926.06240188, 2494463.9425814, 1402856.75239354, 176981.455016249, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2221:78: style: Trailing whitespace is superfluous.
      311330.170550333, 301972.080016081, 246587.506546996, 138697.131587307, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2222:78: style: Trailing whitespace is superfluous.
      17516.4174032608, 18.8382666734899, 18.7248161821635, 14.9207550250329, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2223:78: style: Trailing whitespace is superfluous.
      8.39242000565244, 1.05990030334512, 16526.4764506414, 16126.8381530884, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2224:64: style: Trailing whitespace is superfluous.
      10.1246882793017, 592, 198969.57241113, 196995.562596587, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2225:78: style: Trailing whitespace is superfluous.
      157972.243503533, 88464.8981324734, 10753.1143766173, 19637.8215025045, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2226:77: style: Trailing whitespace is superfluous.
      19453.745728427, 15587.5105227152, 8734.27430014119, 1063.99714583687, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2227:1: style: lines should not be more than 80 characters.
      0.461537989741806, 0.46609609397864, 0.368394015098447, 0.204252592168592, 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2227:81: style: Trailing whitespace is superfluous.
      0.461537989741806, 0.46609609397864, 0.368394015098447, 0.204252592168592, 
                                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2228:1: style: lines should not be more than 80 characters.
      0.0239635823719636, 989.521563252434, 965.783547534023, 0.0267550721683242, 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2228:82: style: Trailing whitespace is superfluous.
      0.0239635823719636, 989.521563252434, 965.783547534023, 0.0267550721683242, 
                                                                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2229:63: style: Trailing whitespace is superfluous.
      NA, 22109258.4241942, 21286150.7639688, 18101192.661838, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2230:78: style: Trailing whitespace is superfluous.
      11777249.8904156, 1284976.77435911, 2169978.05773659, 2090536.19720928, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2231:78: style: Trailing whitespace is superfluous.
      1776818.82058833, 1154570.01418086, 126104.060300651, 11.8781561688587, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2232:79: style: Trailing whitespace is superfluous.
      11.7341945886876, 9.72605753291793, 6.31995465918507, 0.690275976034843, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2233:66: style: Trailing whitespace is superfluous.
      182686.439451409, 178157.621420789, 10.2219035532995, 2485, 
                                                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2234:76: style: Trailing whitespace is superfluous.
      629292.08996624, 618063.99548877, 516313.179959137, 331736.962343409, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2235:78: style: Trailing whitespace is superfluous.
      35385.7241925639, 61897.8735152078, 60851.5309286738, 50806.2707444038, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2236:78: style: Trailing whitespace is superfluous.
      32569.82676763, 3477.55948003636, 0.145831620066131, 0.146427053836085, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2237:66: style: Trailing whitespace is superfluous.
      0.119702147807425, 0.0749879786014173, 0.00756655019496523, 
                                                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2238:66: style: Trailing whitespace is superfluous.
      4757.75439532006, 4640.42558670565, 0.0132997618057585, NA, 
                                                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2239:78: style: Trailing whitespace is superfluous.
      5034540.44301573, 4792002.81188057, 4124574.77299388, 2251827.63960928, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2240:78: style: Trailing whitespace is superfluous.
      291713.262268899, 501113.689957043, 477328.756940536, 410576.654558219, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2241:78: style: Trailing whitespace is superfluous.
      224080.665463397, 29011.5003629649, 11.1369275135497, 10.8912077919935, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2242:79: style: Trailing whitespace is superfluous.
      9.12480048382354, 4.98004779847017, 0.644761823667915, 44995.6856904532, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2243:65: style: Trailing whitespace is superfluous.
      43826.9809975931, 10.1275299907721, 978, 256620.437311143, 
                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2244:78: style: Trailing whitespace is superfluous.
      249994.333846942, 210212.854057823, 113305.776314712, 14559.8577289161, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2245:78: style: Trailing whitespace is superfluous.
      25503.7729057977, 24866.0578614461, 20899.6550018763, 11254.3347392362, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2246:79: style: Trailing whitespace is superfluous.
      1443.8830270267, 0.238266310000929, 0.23933525112779, 0.195841878983368, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2247:63: style: Trailing whitespace is superfluous.
      0.101855986237282, 0.0131855581241498, 2076.76056451606, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2248:66: style: Trailing whitespace is superfluous.
      2023.76841103196, 0.0216860089823182, NA, 2930720.83473766, 
                                                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2249:76: style: Trailing whitespace is superfluous.
      2811078.10619874, 2336117.84708351, 1310866.49192698, 158912.7437415, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2250:78: style: Trailing whitespace is superfluous.
      289817.499404921, 277975.378781365, 231011.764408175, 129619.127689025, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2251:78: style: Trailing whitespace is superfluous.
      15724.5668928565, 16.4799563642046, 16.2069221596818, 13.1360728902901, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2252:78: style: Trailing whitespace is superfluous.
      7.3705610346769, 0.894149513995471, 17586.0598778295, 17151.6452070639, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2253:63: style: Trailing whitespace is superfluous.
      10.136372745491, 581, 188090.65186869, 184124.376344374, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2254:77: style: Trailing whitespace is superfluous.
      150196.69175928, 83713.6383299838, 9931.43263862992, 18561.4852156684, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2255:78: style: Trailing whitespace is superfluous.
      18172.2448192331, 14820.3635731499, 8258.31855898374, 980.690216998718, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2256:1: style: lines should not be more than 80 characters.
      0.484666302001212, 0.48465383153595, 0.388135990434797, 0.213260377691742, 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2256:81: style: Trailing whitespace is superfluous.
      0.484666302001212, 0.48465383153595, 0.388135990434797, 0.213260377691742, 
                                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2257:1: style: lines should not be more than 80 characters.
      0.0239447987557637, 1088.83090101928, 1061.86742013887, 0.0284633859870514, 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2257:82: style: Trailing whitespace is superfluous.
      0.0239447987557637, 1088.83090101928, 1061.86742013887, 0.0284633859870514, 
                                                                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2258:63: style: Trailing whitespace is superfluous.
      NA, 16160886.067129, 15365361.1650373, 13396917.6053513, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2259:77: style: Trailing whitespace is superfluous.
      8698626.8471893, 883471.283755294, 1588273.66804518, 1510729.14070094, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2260:78: style: Trailing whitespace is superfluous.
      1316443.82751109, 853623.420673826, 86911.3909784211, 10.5877651108607, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2261:78: style: Trailing whitespace is superfluous.
      10.329811948343, 8.77569042902078, 5.69043260809559, 0.579369545470247, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2262:66: style: Trailing whitespace is superfluous.
      150010.285590485, 146249.433025087, 10.2261437908497, 2102, 
                                                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2263:77: style: Trailing whitespace is superfluous.
      509241.793469263, 496788.722122693, 424369.945000615, 276454.29483109, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2264:78: style: Trailing whitespace is superfluous.
      26970.4024799049, 49943.3984686181, 48742.1936925578, 41591.9149687708, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2265:80: style: Trailing whitespace is superfluous.
      27009.2448392861, 2649.50340343451, 0.150972423408927, 0.151045865414308, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2266:65: style: Trailing whitespace is superfluous.
      0.12536462894588, 0.0796338235010496, 0.00751541047841702, 
                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2267:66: style: Trailing whitespace is superfluous.
      4277.02593268138, 4171.09899970208, 0.0147658260535502, NA, 
                                                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2268:77: style: Trailing whitespace is superfluous.
      2055872.36362972, 1970400.75252508, 1691080.4740114, 909424.567683906, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2269:78: style: Trailing whitespace is superfluous.
      116091.267124548, 205434.776424236, 197038.744381022, 168967.917409174, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2270:78: style: Trailing whitespace is superfluous.
      90895.2297486594, 11601.2955430305, 10.4470259010297, 10.2904016091061, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2271:79: style: Trailing whitespace is superfluous.
      8.59256762823555, 4.62231777887177, 0.589963574488753, 19664.4268302223, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2272:65: style: Trailing whitespace is superfluous.
      19147.8187019115, 10.1234193222054, 573, 159240.188061563, 
                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2273:77: style: Trailing whitespace is superfluous.
      156099.091613281, 130918.126399317, 69357.2842596555, 8585.2707457278, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2274:78: style: Trailing whitespace is superfluous.
      15963.7029657877, 15652.6361636687, 13123.9337502234, 6948.68401969129, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2275:1: style: lines should not be more than 80 characters.
      858.908879437649, 0.349684789322683, 0.348836353136291, 0.288456099151125, 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2275:81: style: Trailing whitespace is superfluous.
      858.908879437649, 0.349684789322683, 0.348836353136291, 0.288456099151125, 
                                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2276:63: style: Trailing whitespace is superfluous.
      0.145836241162016, 0.0175875578171356, 1300.69182026607, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2277:66: style: Trailing whitespace is superfluous.
      1267.40615492044, 0.0284471708857295, NA, 1982911.04580825, 
                                                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2278:78: style: Trailing whitespace is superfluous.
      1921601.94758329, 1585729.95353527, 900392.793102773, 109643.348110547, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2279:78: style: Trailing whitespace is superfluous.
      195652.310926404, 189608.681041438, 156414.020437886, 88842.5353888346, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2280:78: style: Trailing whitespace is superfluous.
      10833.7197531524, 14.2409648526507, 14.1518870326204, 11.3849233723368, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2281:79: style: Trailing whitespace is superfluous.
      6.46659074918202, 0.788555072503819, 13738.6976901349, 13398.1200248692, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2282:65: style: Trailing whitespace is superfluous.
      10.1586034912718, 456, 149270.355646221, 148346.203579614, 
                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2283:78: style: Trailing whitespace is superfluous.
      119739.132632711, 67175.2834489969, 7930.95856205778, 14701.1735517827, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2284:78: style: Trailing whitespace is superfluous.
      14607.9246486454, 11786.2873057903, 6618.96227267534, 783.702861905441, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2285:80: style: Trailing whitespace is superfluous.
      0.5286229664949, 0.533351801190002, 0.425583604969715, 0.233266993053577, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2286:80: style: Trailing whitespace is superfluous.
      0.025809687020139, 960.12099989623, 936.632450125717, 0.0321788988216837, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2287:63: style: Trailing whitespace is superfluous.
      NA, 8213619.70038065, 7761437.25545366, 6841022.6403503, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2288:78: style: Trailing whitespace is superfluous.
      4381353.17210634, 451434.186201237, 809372.587472363, 764943.899519132, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2289:77: style: Trailing whitespace is superfluous.
      673832.33594324, 431209.609966955, 44531.4886840427, 8.98565305940197, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2290:79: style: Trailing whitespace is superfluous.
      8.71423436409236, 7.48088542249907, 4.78728834039663, 0.494388509973049, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2291:66: style: Trailing whitespace is superfluous.
      90073.8746668492, 87780.9647478772, 10.2298779306336, 1582, 
                                                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2292:78: style: Trailing whitespace is superfluous.
      340799.184877671, 333995.320912615, 284896.005809557, 179099.231824748, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2293:78: style: Trailing whitespace is superfluous.
      18015.8390001742, 33518.5298575015, 32859.1223102119, 27986.5077850127, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2294:80: style: Trailing whitespace is superfluous.
      17556.8981627412, 1777.81247813508, 0.195884788681132, 0.196512850095277, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2295:65: style: Trailing whitespace is superfluous.
      0.163705163714466, 0.0987445365613301, 0.0092901810903382, 
                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2296:66: style: Trailing whitespace is superfluous.
      3201.98016251359, 3121.96078502582, 0.0169584124877272, NA, 
                                                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2297:78: style: Trailing whitespace is superfluous.
      621975.280820188, 599658.039833416, 514665.187347558, 274319.005284097, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2298:77: style: Trailing whitespace is superfluous.
      35918.8548424964, 62222.075315115, 59982.4327072404, 51495.1082738847, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2299:78: style: Trailing whitespace is superfluous.
      27417.4099769871, 3590.96750368677, 8.81902237571197, 8.73027846267469, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2300:79: style: Trailing whitespace is superfluous.
      7.29863974814708, 3.88599626172193, 0.508964424685063, 7055.43910246534, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2301:65: style: Trailing whitespace is superfluous.
      6870.62078989673, 10.1274468085106, 266, 65472.0425498674, 
                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2302:78: style: Trailing whitespace is superfluous.
      64832.8869538209, 54335.2508688595, 28435.6373568118, 3586.27526138727, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2303:78: style: Trailing whitespace is superfluous.
      6619.33336625399, 6554.47512704703, 5498.74513088442, 2863.11365275015, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2304:1: style: lines should not be more than 80 characters.
      359.582431726728, 0.532379913381943, 0.540795162585538, 0.446653705167028, 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2304:81: style: Trailing whitespace is superfluous.
      359.582431726728, 0.532379913381943, 0.540795162585538, 0.446653705167028, 
                                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2305:63: style: Trailing whitespace is superfluous.
      0.219549563220965, 0.0270079169680593, 650.008016449338, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2306:66: style: Trailing whitespace is superfluous.
      632.868155445136, 0.0395873372050692, NA, 1014388.11599922, 
                                                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2307:78: style: Trailing whitespace is superfluous.
      935077.566101982, 808257.977324796, 463036.119379114, 58316.7571083746, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2308:78: style: Trailing whitespace is superfluous.
      99942.5958475704, 92204.8243281506, 79633.1055462163, 45612.3785937907, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2309:78: style: Trailing whitespace is superfluous.
      5745.19927915469, 12.1463093579143, 11.5061066444205, 9.67803894718728, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2310:79: style: Trailing whitespace is superfluous.
      5.54340275287094, 0.698230490970137, 8228.22743127728, 8013.55551252974, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2311:64: style: Trailing whitespace is superfluous.
      10.2142981691369, 322, 92197.229741169, 88768.6657492679, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2312:78: style: Trailing whitespace is superfluous.
      73521.9965436808, 42169.8016834586, 5374.38791649827, 9112.09081252397, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2313:78: style: Trailing whitespace is superfluous.
      8790.19854972918, 7269.81842318188, 4161.45850060173, 526.794325898761, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2314:63: style: Trailing whitespace is superfluous.
      0.594319809447542, 0.585307992224963, 0.476185852774679, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2315:79: style: Trailing whitespace is superfluous.
      0.2683521824691, 0.0350092151911407, 700.417773506137, 682.323362484827, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2316:66: style: Trailing whitespace is superfluous.
      0.0372198874992966, NA, 4616784.90462722, 4178816.14979796, 
                                                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2317:78: style: Trailing whitespace is superfluous.
      3913557.70171751, 2554442.69204091, 246168.500389655, 452018.578822478, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2318:78: style: Trailing whitespace is superfluous.
      408686.661858273, 383051.058840482, 249796.475117878, 24132.3579232781, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2319:76: style: Trailing whitespace is superfluous.
      8.00950466075253, 7.4323024353039, 6.7874405717601, 4.42624733901026, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2320:79: style: Trailing whitespace is superfluous.
      0.427611258291563, 56435.2725877569, 54987.8944534046, 10.2676025917927, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2321:66: style: Trailing whitespace is superfluous.
      1122, 225446.950298813, 215522.399119057, 192771.285146683, 
                                                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2322:78: style: Trailing whitespace is superfluous.
      126458.078612924, 11859.5062509733, 22138.0417222242, 21151.7580584934, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2323:78: style: Trailing whitespace is superfluous.
      18916.4082223305, 12366.457538465, 1163.66319973022, 0.216904283759287, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2324:1: style: lines should not be more than 80 characters.
      0.204497387905837, 0.184139764419646, 0.11770300260676, 0.010750827228051, 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2324:81: style: Trailing whitespace is superfluous.
      0.204497387905837, 0.184139764419646, 0.11770300260676, 0.010750827228051, 
                                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2325:65: style: Trailing whitespace is superfluous.
      2494.1128798227, 2430.99077338067, 0.0200445310046681, NA, 
                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2326:78: style: Trailing whitespace is superfluous.
      275787.724292771, 253403.586155013, 226908.683692812, 120530.397845049, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2327:77: style: Trailing whitespace is superfluous.
      16204.9100472296, 27682.5765875838, 25439.2683678643, 22771.649303255, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2328:78: style: Trailing whitespace is superfluous.
      12084.1659364171, 1621.20118596494, 7.27193029719731, 6.86224751091692, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2329:78: style: Trailing whitespace is superfluous.
      5.98187982833086, 3.17438704129893, 0.42587300299779, 3806.77144254986, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2330:65: style: Trailing whitespace is superfluous.
      3707.13360708628, 10.0980810234542, 130, 39970.7785835067, 
                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2331:77: style: Trailing whitespace is superfluous.
      38726.0335666978, 32828.110682293, 17608.7452420895, 2319.43686843869, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2332:78: style: Trailing whitespace is superfluous.
      4033.35973502829, 3903.80018970186, 3311.36183006191, 1773.59006137191, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2333:1: style: lines should not be more than 80 characters.
      233.048959467158, 0.475582009698855, 0.458275800139556, 0.394584534944012, 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2333:81: style: Trailing whitespace is superfluous.
      233.048959467158, 0.475582009698855, 0.458275800139556, 0.394584534944012, 
                                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2334:63: style: Trailing whitespace is superfluous.
      0.199025545829367, 0.0263435294721906, 519.740553304247, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2335:66: style: Trailing whitespace is superfluous.
      506.625217522785, 0.0555691462820393, NA, 601850.029512855, 
                                                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2336:78: style: Trailing whitespace is superfluous.
      553762.456283086, 482174.979105569, 280628.487044034, 34116.0905613888, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2337:76: style: Trailing whitespace is superfluous.
      59501.7474723892, 54716.38022791, 47687.6570252827, 27748.4073510843, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2338:78: style: Trailing whitespace is superfluous.
      3366.87369287059, 11.4934665205034, 10.8500226304997, 9.21143517197829, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2339:79: style: Trailing whitespace is superfluous.
      5.35993318574334, 0.650351489016832, 5177.00620315402, 5042.97383436792, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2340:65: style: Trailing whitespace is superfluous.
      10.1345767575323, 194, 71631.5956095614, 69418.9105949557, 
                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2341:76: style: Trailing whitespace is superfluous.
      57326.385906288, 32736.367696245, 3926.02003442729, 7064.33844356213, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2342:78: style: Trailing whitespace is superfluous.
      6842.81479981682, 5661.89127120489, 3233.34761669673, 385.378335231643, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2343:63: style: Trailing whitespace is superfluous.
      0.644365573637972, 0.663683030284247, 0.511660581214061, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2344:63: style: Trailing whitespace is superfluous.
      0.287628047494307, 0.0370687743812539, 563.306077849202, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2345:66: style: Trailing whitespace is superfluous.
      548.879860877202, 0.0425839474079928, NA, 2743755.85169042, 
                                                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2346:77: style: Trailing whitespace is superfluous.
      2457629.96854616, 2270499.69475853, 1471737.3108707, 141172.752852628, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2347:75: style: Trailing whitespace is superfluous.
      269249.239190514, 241004.60417151, 222775.3918996, 144356.253970987, 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2348:78: style: Trailing whitespace is superfluous.
      13858.7962019428, 6.93977791608714, 6.37674133891817, 5.74193542607778, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2349:78: style: Trailing whitespace is superfluous.
      3.7207174526056, 0.357204232461146, 38797.9619011101, 37794.3202275783, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2350:65: style: Trailing whitespace is superfluous.
      10.2425565700675, 756, 161947.515511327, 154602.030983072, 
                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2351:77: style: Trailing whitespace is superfluous.
      134271.734246792, 86571.003603955, 8085.95673019662, 15922.7449045469, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2352:78: style: Trailing whitespace is superfluous.
      15182.1446357243, 13194.0830476794, 8509.65673807873, 795.269943312593, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2353:63: style: Trailing whitespace is superfluous.
      0.211316501948099, 0.201307103463217, 0.176310692136055, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2354:63: style: Trailing whitespace is superfluous.
      0.109801419447066, 0.0101380917869725, 2074.56030358584, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2355:80: style: Trailing whitespace is superfluous.
      2021.76396794453, 0.023872202408598, NA), .Dim = c(19L, 2L, 3L, 9L, 1L)), 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2356:54: style: Trailing whitespace is superfluous.
    VB.A.bagr.akl.dkl = structure(c(164601.666771908, 
                                                     ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2357:76: style: Trailing whitespace is superfluous.
     159068.517373039, 122556.019151374, 101913.94283134, 28324.6975593222, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2358:75: style: Trailing whitespace is superfluous.
     16224.2160782092, 15670.35852698, 12069.0505005601, 10075.6253481721, 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2359:80: style: Trailing whitespace is superfluous.
     2807.56494718213, 0.273630153958191, 0.270286165947464, 0.203551045589992, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2360:79: style: Trailing whitespace is superfluous.
     0.16993085533102, 0.0473510969677532, 10.1032300767805, 40754.4628675392, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2361:77: style: Trailing whitespace is superfluous.
     39796.7817333635, 31064.3951496661, 23405.7085226711, 6347.82070900417, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2362:76: style: Trailing whitespace is superfluous.
     3945.89641656815, 3843.5055005196, 3001.69897224024, 2283.26456798477, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2363:63: style: Trailing whitespace is superfluous.
     623.085926852964, 0.0656673543559168, 0.0654357293823441, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2364:65: style: Trailing whitespace is superfluous.
     0.0499917413537403, 0.0378918554557618, 0.0103278880612781, 
                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2365:79: style: Trailing whitespace is superfluous.
     0.0117742644081858, 16956.5246337499, 16956.5246337499, 12224.3245067848, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2366:77: style: Trailing whitespace is superfluous.
     8769.66105930804, 3377.55890799518, 1704.87001158061, 1704.87001158061, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2367:78: style: Trailing whitespace is superfluous.
     1228.87391884129, 882.221548338703, 339.912672251576, 0.153684192943003, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2368:62: style: Trailing whitespace is superfluous.
     0.157285273523283, 0.110775892099091, 0.079527181387664, 
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2369:79: style: Trailing whitespace is superfluous.
     0.0306411658080907, 10.1086597938144, 11711.1925278546, 11711.1925278546, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2370:77: style: Trailing whitespace is superfluous.
     8538.90022718331, 5953.02924796239, 2242.98391105933, 1173.49761849362, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2371:76: style: Trailing whitespace is superfluous.
     1173.49761849362, 855.483125894881, 596.823616783546, 224.97799987214, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2372:62: style: Trailing whitespace is superfluous.
     0.105099132738128, 0.107566488154876, 0.076624264979963, 
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2373:65: style: Trailing whitespace is superfluous.
     0.0534379081603987, 0.0201399801881096, 0.0156085409970514, 
                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2374:77: style: Trailing whitespace is superfluous.
     518322.877721555, 478606.732631191, 387852.327450898, 367639.672361569, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2375:77: style: Trailing whitespace is superfluous.
     100506.727242546, 51727.1097406814, 47778.8105979002, 38658.5085737582, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2376:79: style: Trailing whitespace is superfluous.
     36745.5427964812, 10070.4855653751, 0.291146940845508, 0.274974905025564, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2377:63: style: Trailing whitespace is superfluous.
     0.217590090869656, 0.206822929572834, 0.0566819039356051, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2378:77: style: Trailing whitespace is superfluous.
     10.1489401063748, 62433.2636004542, 60721.7440290652, 47697.1533119657, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2379:76: style: Trailing whitespace is superfluous.
     42006.1917076671, 10996.8126480104, 6214.5447880017, 6046.00656260907, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2380:79: style: Trailing whitespace is superfluous.
     4733.88731915039, 4205.66257665902, 1110.23573526401, 0.0341840976281223, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2381:65: style: Trailing whitespace is superfluous.
     0.0340069537947664, 0.0260572208722427, 0.0230701987476592, 
                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2382:64: style: Trailing whitespace is superfluous.
     0.00607812443873293, 0.0089443402357497, 8540098.36137485, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2383:77: style: Trailing whitespace is superfluous.
     8139119.07031288, 6659692.20125055, 4382491.93966897, 1047536.48948593, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2384:76: style: Trailing whitespace is superfluous.
     842651.698776517, 802681.360989388, 657067.800688344, 432529.39613717, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2385:76: style: Trailing whitespace is superfluous.
     103418.50986664, 10.8354246404906, 10.5752068583164, 8.44905273245008, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2386:75: style: Trailing whitespace is superfluous.
     5.5617756226516, 1.3298299543202, 10.1382388713208, 459745.643542899, 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2387:75: style: Trailing whitespace is superfluous.
     452830.47330599, 360825.657561198, 230435.867798424, 53946.999185585, 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2388:77: style: Trailing whitespace is superfluous.
     45389.4257967832, 44682.0466767539, 35622.9029305869, 22749.9072486399, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2389:80: style: Trailing whitespace is superfluous.
     5327.39053158019, 0.449570312477336, 0.456262135758557, 0.354172619704049, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2390:64: style: Trailing whitespace is superfluous.
     0.222165092751016, 0.0513641530941516, 0.0162404613017379, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2391:76: style: Trailing whitespace is superfluous.
     564264.277109609, 483446.053879741, 435814.34913874, 270145.914283975, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2392:75: style: Trailing whitespace is superfluous.
     74628.8151637772, 55752.1617018118, 47792.53547864, 43049.3716527677, 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2393:76: style: Trailing whitespace is superfluous.
     26702.318828963, 7390.96188373054, 5.99317071695312, 5.25653175030032, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2394:77: style: Trailing whitespace is superfluous.
     4.62766331738873, 2.8704098710362, 0.794503656532678, 10.1052824651504, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2395:76: style: Trailing whitespace is superfluous.
     97169.6141735738, 92649.6429520922, 76218.1938926985, 45174.395744416, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2396:76: style: Trailing whitespace is superfluous.
     11401.4809027991, 9580.6138263763, 9138.62242985029, 7511.23496525031, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2397:79: style: Trailing whitespace is superfluous.
     4457.32087268826, 1126.62363311096, 0.935297418703417, 0.915992238134732, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2398:62: style: Trailing whitespace is superfluous.
     0.735044551222554, 0.433661372689602, 0.108455200968386, 
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2399:78: style: Trailing whitespace is superfluous.
     0.0281570684449567, 13500917.778057, 12545050.3135319, 10539907.5582368, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2400:77: style: Trailing whitespace is superfluous.
     7539922.62754191, 1735103.52767671, 1332300.73637148, 1237992.96524753, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2401:76: style: Trailing whitespace is superfluous.
     1040052.51649467, 743994.844990613, 171283.542705362, 7.8222882831068, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2402:77: style: Trailing whitespace is superfluous.
     7.44450872217735, 6.10642206484798, 4.36818955344271, 1.00565076083512, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2403:76: style: Trailing whitespace is superfluous.
     10.1713179278822, 558638.094548909, 548689.833274609, 437842.34660451, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2404:77: style: Trailing whitespace is superfluous.
     298611.488322951, 67409.8021915305, 55152.6430446119, 54158.4641324049, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2405:78: style: Trailing whitespace is superfluous.
     43229.2952381508, 29467.3644586187, 6655.29669293341, 0.249856927344837, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2406:62: style: Trailing whitespace is superfluous.
     0.252788415071932, 0.196354910965532, 0.130962082130537, 
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2407:63: style: Trailing whitespace is superfluous.
     0.0293168538258076, 0.0116495238760414, 20467221.7404617, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2408:77: style: Trailing whitespace is superfluous.
     19800315.9027597, 16272305.5599029, 9531763.49604424, 1893001.93617731, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2409:77: style: Trailing whitespace is superfluous.
     2016459.03602111, 1950983.37602327, 1603104.54144965, 939287.571217436, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2410:76: style: Trailing whitespace is superfluous.
     186603.211594632, 16.509689010281, 16.3798430227358, 13.1253633014669, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2411:77: style: Trailing whitespace is superfluous.
     7.69038468672354, 1.52780737754337, 10.1375140186916, 834199.647123805, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2412:76: style: Trailing whitespace is superfluous.
     820672.197341359, 664332.75403101, 384138.174193798, 75084.2838481405, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2413:76: style: Trailing whitespace is superfluous.
     81998.3898085843, 80676.0546344462, 65296.6470471063, 37771.858018587, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2414:80: style: Trailing whitespace is superfluous.
     7387.48751259402, 0.512355355608297, 0.520026408764378, 0.408576018527457, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2415:63: style: Trailing whitespace is superfluous.
     0.234099867479197, 0.045107773926645, 0.0143026783154952, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2416:77: style: Trailing whitespace is superfluous.
     1017880.63537713, 877372.775170662, 801137.868266314, 464682.450153758, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2417:77: style: Trailing whitespace is superfluous.
     96791.8946734493, 99987.7760508441, 86288.3895518755, 78690.7460665033, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2418:76: style: Trailing whitespace is superfluous.
     45667.2323975025, 9525.14311736243, 9.1171921395303, 8.05899282081936, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2419:76: style: Trailing whitespace is superfluous.
     7.17526361548915, 4.1640783373049, 0.868531768456958, 10.101231367466, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2420:77: style: Trailing whitespace is superfluous.
     122089.544258514, 117715.058559453, 96525.0352656106, 55022.0175951412, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2421:77: style: Trailing whitespace is superfluous.
     10906.0701566894, 12060.0533973624, 11640.5096708205, 9534.33237349437, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2422:79: style: Trailing whitespace is superfluous.
     5436.36760445979, 1078.42511725304, 0.915930833531695, 0.905042999069445, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2423:63: style: Trailing whitespace is superfluous.
     0.723706929437271, 0.412886184875809, 0.0821472594764986, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2424:79: style: Trailing whitespace is superfluous.
     0.0280899893334502, 31752374.3863842, 30136448.6682261, 25342658.6693496, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2425:76: style: Trailing whitespace is superfluous.
     16450786.0001746, 3050239.87649551, 3124111.6234119, 2966058.03877368, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2426:76: style: Trailing whitespace is superfluous.
     2493616.82383999, 1618186.54572703, 300183.35004707, 12.0030333857871, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2427:77: style: Trailing whitespace is superfluous.
     11.6806494125497, 9.58063270326548, 6.21717450402133, 1.15332331452914, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2428:77: style: Trailing whitespace is superfluous.
     10.1623028221912, 1018540.73260344, 1000047.45786217, 811221.210744926, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2429:77: style: Trailing whitespace is superfluous.
     509938.219481864, 93862.7708716031, 99985.9422019626, 98186.6489340759, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2430:77: style: Trailing whitespace is superfluous.
     79647.643179539, 50030.1692214559, 9216.18399365972, 0.286860759329676, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2431:62: style: Trailing whitespace is superfluous.
     0.290451637835384, 0.228360112098484, 0.140310798172541, 
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2432:63: style: Trailing whitespace is superfluous.
     0.0256510255201275, 0.0107132991917734, 14786823.0498919, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2433:75: style: Trailing whitespace is superfluous.
     14290568.5302871, 11765215.278096, 6742450.2162543, 1171235.57850498, 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2434:75: style: Trailing whitespace is superfluous.
     1461458.2688481, 1412118.1003548, 1162819.42380856, 666434.053076934, 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2435:77: style: Trailing whitespace is superfluous.
     115806.077970864, 21.5092986044703, 21.3187940767226, 17.1140228516344, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2436:77: style: Trailing whitespace is superfluous.
     9.80837383685093, 1.70439865741166, 10.1242729831144, 781084.604431422, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2437:76: style: Trailing whitespace is superfluous.
     770111.749354302, 622412.49592339, 352392.017159729, 59443.5518809903, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2438:76: style: Trailing whitespace is superfluous.
     77088.862904721, 75973.9508806265, 61430.0246868468, 34784.5102369525, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2439:79: style: Trailing whitespace is superfluous.
     5872.91051975516, 0.897788870482499, 0.90812950915787, 0.715898765703805, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2440:64: style: Trailing whitespace is superfluous.
     0.403627231503592, 0.0672683419092956, 0.0157236876160505, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2441:76: style: Trailing whitespace is superfluous.
     1288532.35920189, 1250231.17368852, 1015960.43328273, 570606.61371136, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2442:77: style: Trailing whitespace is superfluous.
     94649.7592614998, 126062.045330944, 122224.956835273, 99387.6636287993, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2443:76: style: Trailing whitespace is superfluous.
     55813.4674968996, 9242.8465534776, 10.8527900293168, 10.7761981428673, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2444:78: style: Trailing whitespace is superfluous.
     8.55636954038023, 4.80502947545989, 0.795724618419019, 10.1521093285799, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2445:75: style: Trailing whitespace is superfluous.
     150267.442403526, 149688.554088585, 118431.3265224, 66271.8466124803, 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2446:77: style: Trailing whitespace is superfluous.
     10730.3102032108, 14725.5569760242, 14663.9891413326, 11602.7216977237, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2447:78: style: Trailing whitespace is superfluous.
     6492.01968897812, 1045.70957893716, 0.996752191990831, 1.01911516296038, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2448:63: style: Trailing whitespace is superfluous.
     0.785220163833675, 0.438848863102728, 0.0706782580346163, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2449:79: style: Trailing whitespace is superfluous.
     0.0261167904448117, 24596749.9217483, 23515266.0274845, 19862939.7677413, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2450:77: style: Trailing whitespace is superfluous.
     12859892.7092621, 2028232.07152201, 2423880.16473576, 2317289.48004177, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2451:77: style: Trailing whitespace is superfluous.
     1957354.60974503, 1266450.41369128, 199797.577118887, 13.2393433803837, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2452:77: style: Trailing whitespace is superfluous.
     12.9762510599232, 10.6911596425462, 6.91740959187053, 1.09130342684825, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2453:77: style: Trailing whitespace is superfluous.
     10.1790796963947, 934570.388733266, 920215.515962597, 751099.617186485, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2454:76: style: Trailing whitespace is superfluous.
     465978.25575237, 73092.1858832033, 92048.7066704707, 90613.5065031957, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2455:77: style: Trailing whitespace is superfluous.
     73977.4157669587, 45857.6442032151, 7198.65192333802, 0.40365797597657, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2456:62: style: Trailing whitespace is superfluous.
     0.407518896231817, 0.323616008535581, 0.196408908364509, 
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2457:63: style: Trailing whitespace is superfluous.
     0.0308638508446299, 0.0113329205858632, 18877642.2203479, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2458:77: style: Trailing whitespace is superfluous.
     18294719.0297836, 15070554.2670755, 8517809.74010817, 1371587.70601248, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2459:77: style: Trailing whitespace is superfluous.
     1861676.02950046, 1804111.24895182, 1486227.01223688, 840045.276470491, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2460:77: style: Trailing whitespace is superfluous.
     135285.993090898, 27.8866271132606, 27.7337337354567, 22.2626589369722, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2461:76: style: Trailing whitespace is superfluous.
     12.5833007526419, 2.02649117418423, 10.1204804358593, 1021683.9966238, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2462:77: style: Trailing whitespace is superfluous.
     1011917.09081811, 816883.002192477, 457424.383664861, 72064.2665423668, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2463:76: style: Trailing whitespace is superfluous.
     100145.337440734, 99187.5086776849, 80066.130949245, 44848.9389537958, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2464:77: style: Trailing whitespace is superfluous.
     7069.23436768611, 1.20614260017504, 1.22518816860716, 0.96491913017458, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2465:64: style: Trailing whitespace is superfluous.
     0.539220314718781, 0.0841501152265126, 0.0158503473625613, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2466:77: style: Trailing whitespace is superfluous.
     2406923.23571178, 2300603.43107806, 1905266.17270942, 1066133.12234757, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2467:77: style: Trailing whitespace is superfluous.
     161867.628233523, 237259.124281876, 226681.979786472, 187796.191961691, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2468:76: style: Trailing whitespace is superfluous.
     105082.74045658, 15950.2202067386, 14.3563042606501, 14.0561948743227, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2469:76: style: Trailing whitespace is superfluous.
     11.363353375571, 6.35844795897201, 0.96513133058799, 10.1274314214464, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2470:76: style: Trailing whitespace is superfluous.
     232830.120750522, 228283.376211021, 184581.251774954, 103002.49530291, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2471:77: style: Trailing whitespace is superfluous.
     15013.4371677858, 22779.3573034897, 22311.0354354867, 18056.3202684557, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2472:76: style: Trailing whitespace is superfluous.
     10076.2226339305, 1469.68978531216, 1.12554414157936, 1.1309774146726, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2473:63: style: Trailing whitespace is superfluous.
     0.893435311983246, 0.497803059230472, 0.0722378234878478, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2474:79: style: Trailing whitespace is superfluous.
     0.0228832334817858, 29981149.2693914, 28876713.7017516, 24316318.0525937, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2475:77: style: Trailing whitespace is superfluous.
     15170365.1499985, 2206815.93714996, 2953082.30019726, 2844002.38696323, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2476:77: style: Trailing whitespace is superfluous.
     2395028.01114484, 1493810.44952453, 217332.470034315, 16.1647591855483, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2477:76: style: Trailing whitespace is superfluous.
     15.9634056869564, 13.1100481148842, 8.17690932074824, 1.1896475222077, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2478:76: style: Trailing whitespace is superfluous.
     10.1839086294416, 1208708.32079051, 1190215.6627484, 975482.563142825, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2479:76: style: Trailing whitespace is superfluous.
     585499.439630833, 85762.3224446075, 118786.41811286, 116915.532976772, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2480:77: style: Trailing whitespace is superfluous.
     95874.7039831733, 57586.3499484438, 8431.8521571757, 0.524303296189258, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2481:62: style: Trailing whitespace is superfluous.
     0.529554510839223, 0.421933279707779, 0.247576330642321, 
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2482:79: style: Trailing whitespace is superfluous.
     0.036835721420102, 0.011581658130581, 13975737.7912423, 13400434.0402312, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2483:76: style: Trailing whitespace is superfluous.
     11208931.207082, 6276771.46105825, 962442.644832892, 1381044.39406666, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2484:75: style: Trailing whitespace is superfluous.
     1324025.6003615, 1107627.88224636, 620364.96622576, 95139.5686046261, 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2485:77: style: Trailing whitespace is superfluous.
     30.6928180529913, 30.2102853133829, 24.6163129920113, 13.7872099670521, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2486:76: style: Trailing whitespace is superfluous.
     2.1144153521548, 10.0994770839742, 958055.362389463, 942722.773017166, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2487:76: style: Trailing whitespace is superfluous.
     769799.636311846, 423612.892329916, 63352.2965952347, 94138.159011437, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2488:77: style: Trailing whitespace is superfluous.
     92628.1977091484, 75636.3963116588, 41638.9640687125, 6231.02477925082, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2489:78: style: Trailing whitespace is superfluous.
     1.72906257250486, 1.74147356210514, 1.39039668839319, 0.761992075111485, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2490:62: style: Trailing whitespace is superfluous.
     0.112825318466557, 0.0181338329224343, 2838861.89346154, 
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2491:76: style: Trailing whitespace is superfluous.
     2705061.17866147, 2247812.3722773, 1260701.59896744, 185258.809075923, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2492:77: style: Trailing whitespace is superfluous.
     280396.985647738, 267117.078579315, 222016.444171873, 124520.796654315, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2493:77: style: Trailing whitespace is superfluous.
     18293.4432401092, 15.9442756135062, 15.5738458529508, 12.6245700125112, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2494:76: style: Trailing whitespace is superfluous.
     7.08065351303032, 1.04022409608485, 10.1220941883768, 267731.32130275, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2495:76: style: Trailing whitespace is superfluous.
     261708.06527891, 212176.488451343, 118653.198412659, 16916.9122670716, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2496:77: style: Trailing whitespace is superfluous.
     26495.6903281006, 25894.5019242825, 20997.2680578186, 11739.7547656668, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2497:78: style: Trailing whitespace is superfluous.
     1670.85335489836, 1.22878983268178, 1.22940190327099, 0.974746402061141, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2498:64: style: Trailing whitespace is superfluous.
     0.543524964954799, 0.0765063114948559, 0.0237672270305701, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2499:76: style: Trailing whitespace is superfluous.
     25084186.7535645, 24032797.388817, 20444279.1721047, 12723494.7447636, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2500:76: style: Trailing whitespace is superfluous.
     1740884.3044844, 2473589.12656597, 2369657.55796403, 2015955.47399472, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2501:77: style: Trailing whitespace is superfluous.
     1254112.51397264, 171698.926149005, 16.4894634846483, 16.2028495355435, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2502:76: style: Trailing whitespace is superfluous.
     13.4387816546001, 8.3601768307825, 1.14458102304883, 10.1881164587047, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2503:77: style: Trailing whitespace is superfluous.
     1146489.50457548, 1126187.07291365, 930538.838116761, 552790.060982992, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2504:77: style: Trailing whitespace is superfluous.
     76276.0630727074, 112809.667777208, 110820.055502438, 91559.2800831564, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2505:79: style: Trailing whitespace is superfluous.
     54396.7705482606, 7510.50915797134, 0.634950632258515, 0.639166486691924, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2506:63: style: Trailing whitespace is superfluous.
     0.512989243189229, 0.296113154925582, 0.0417184079516478, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2507:79: style: Trailing whitespace is superfluous.
     0.0128092762497151, 6402099.95152697, 6093681.71028094, 5145623.43800317, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2508:77: style: Trailing whitespace is superfluous.
     2907586.64108658, 442977.027270133, 640569.690246206, 609972.880223616, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2509:77: style: Trailing whitespace is superfluous.
     514851.108742588, 290908.618994693, 44319.4611483621, 32.5750501541044, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2510:76: style: Trailing whitespace is superfluous.
     31.855998310801, 26.1818517868679, 14.7936485261597, 2.25378860675702, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2511:75: style: Trailing whitespace is superfluous.
     10.097875569044, 600860.66656769, 581249.676251327, 484035.328497891, 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2512:77: style: Trailing whitespace is superfluous.
     269636.011712707, 40304.6932036054, 60492.3295342708, 58408.2071326885, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2513:76: style: Trailing whitespace is superfluous.
     48733.996028847, 27142.1926930848, 4054.47551745325, 2.45456383861301, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2514:78: style: Trailing whitespace is superfluous.
     2.43143918478216, 1.98046673300025, 1.09658154007651, 0.161237864663163, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2515:78: style: Trailing whitespace is superfluous.
     0.023783268562542, 2632178.10333042, 2540372.96548253, 2089070.95495691, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2516:77: style: Trailing whitespace is superfluous.
     1176662.49278153, 168887.806471568, 260660.001771813, 251612.078156784, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2517:76: style: Trailing whitespace is superfluous.
     206870.703479973, 116531.085402431, 16727.3927445841, 18.972686323754, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2518:77: style: Trailing whitespace is superfluous.
     18.7796554807503, 15.0575191437917, 8.48196008316762, 1.21753845392459, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2519:77: style: Trailing whitespace is superfluous.
     10.1307980049875, 269172.352444765, 266461.213060981, 213694.151606975, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2520:77: style: Trailing whitespace is superfluous.
     120167.222317071, 16838.8091326037, 26633.9270709812, 26371.4073577224, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2521:77: style: Trailing whitespace is superfluous.
     21142.2209388918, 11893.4476830482, 1667.63586834282, 1.54017028958115, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2522:80: style: Trailing whitespace is superfluous.
     1.55746270274276, 1.22277321462162, 0.687750738520587, 0.0957138414629957, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2523:78: style: Trailing whitespace is superfluous.
     0.0268056463789367, 15007127.6186613, 14259214.2103931, 12312197.591396, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2524:77: style: Trailing whitespace is superfluous.
     7810056.31043066, 1018541.16259034, 1485688.75587506, 1411749.84571002, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2525:73: style: Trailing whitespace is superfluous.
     1218536.98060648, 771882.39217, 100855.523266125, 16.4941139855489, 
                                                                        ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2526:76: style: Trailing whitespace is superfluous.
     16.0826421737881, 13.5281954408358, 8.56943697631433, 1.1196978440103, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2527:75: style: Trailing whitespace is superfluous.
     10.184072854098, 845583.35098328, 822238.057695638, 693158.645389811, 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2528:76: style: Trailing whitespace is superfluous.
     429737.72798464, 55691.5009210396, 83948.9360359475, 81560.0257803515, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2529:78: style: Trailing whitespace is superfluous.
     68758.9897347969, 42467.7744169124, 5534.86996009598, 0.767337130753212, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2530:62: style: Trailing whitespace is superfluous.
     0.762218491585795, 0.627647768785782, 0.381999581612171, 
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2531:63: style: Trailing whitespace is superfluous.
     0.0499280438214798, 0.0146278201502411, 1749030.38650039, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2532:75: style: Trailing whitespace is superfluous.
     1657513.90429877, 1406754.55299101, 804822.3862465, 123386.781268237, 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2533:75: style: Trailing whitespace is superfluous.
     175024.816150796, 165610.030566289, 140781.35178392, 80567.978390555, 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2534:77: style: Trailing whitespace is superfluous.
     12353.2457060232, 24.8070763008412, 24.1040854430242, 19.9535917948363, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2535:76: style: Trailing whitespace is superfluous.
     11.4192720283565, 1.75088262071551, 10.0873404255319, 257273.33332507, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2536:77: style: Trailing whitespace is superfluous.
     246249.314011783, 207133.334328417, 117821.708320035, 17889.9094560955, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2537:76: style: Trailing whitespace is superfluous.
     26017.2915459086, 24723.3281532135, 20945.4964380449, 11947.048344623, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2538:76: style: Trailing whitespace is superfluous.
     1817.10089793935, 3.15015710855846, 3.0531497604212, 2.53784711499748, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2539:62: style: Trailing whitespace is superfluous.
     1.44543546784211, 0.218870490688263, 0.0330855513254736, 
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2540:77: style: Trailing whitespace is superfluous.
     1786429.18732493, 1712321.05409962, 1420000.00772422, 801802.558233594, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2541:77: style: Trailing whitespace is superfluous.
     113313.690893723, 174836.710583542, 167529.792761029, 138977.237012781, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2542:76: style: Trailing whitespace is superfluous.
     78483.3516752917, 11101.155774812, 21.2484052055914, 20.9058004900677, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2543:77: style: Trailing whitespace is superfluous.
     16.8903008787164, 9.53830607269792, 1.34915519381661, 10.1786399302528, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2544:76: style: Trailing whitespace is superfluous.
     210926.831818353, 207911.778239303, 167709.278970337, 94559.795703805, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2545:75: style: Trailing whitespace is superfluous.
     13173.7327340356, 20343.522700745, 20046.112884064, 16176.9044619057, 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2546:76: style: Trailing whitespace is superfluous.
     9122.09436414926, 1272.28018236223, 2.0118858687905, 2.01440265505179, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2547:80: style: Trailing whitespace is superfluous.
     1.60082171472605, 0.902451642089967, 0.125261932640821, 0.031308212028184, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2548:77: style: Trailing whitespace is superfluous.
     8554113.84388507, 8026222.39990408, 7134342.48724766, 4805532.36998802, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2549:77: style: Trailing whitespace is superfluous.
     569982.890916566, 839909.607119664, 787244.402877776, 700384.374599559, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2550:75: style: Trailing whitespace is superfluous.
     471383.78207558, 56006.9942691918, 14.8827066585636, 14.316685712432, 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2551:78: style: Trailing whitespace is superfluous.
     12.4104011991873, 8.35264472839353, 0.992411158856384, 10.2183315334773, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2552:76: style: Trailing whitespace is superfluous.
     553679.482862224, 537898.62916945, 463069.111126775, 311205.355591937, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2553:77: style: Trailing whitespace is superfluous.
     36224.0030177597, 54381.7621314169, 52633.1092059139, 45458.0384758971, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2554:79: style: Trailing whitespace is superfluous.
     30530.5253819637, 3571.95232703828, 0.787883043514617, 0.774902683917398, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2555:63: style: Trailing whitespace is superfluous.
     0.656730294167995, 0.436076345555383, 0.0515185761111636, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2556:79: style: Trailing whitespace is superfluous.
     0.0174160016914307, 791960.145646667, 709288.028703759, 635950.191239152, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2557:76: style: Trailing whitespace is superfluous.
     369125.600879427, 59042.586918195, 80650.1637067072, 72337.2868752159, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2558:77: style: Trailing whitespace is superfluous.
     64774.7856309813, 37567.6139105316, 6005.49286611675, 21.1859747620377, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2559:76: style: Trailing whitespace is superfluous.
     19.512996978836, 17.0156749908772, 9.86862869953861, 1.57758167432667, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2560:77: style: Trailing whitespace is superfluous.
     10.0390191897655, 124859.795060633, 114549.850390938, 100044.316695172, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2561:76: style: Trailing whitespace is superfluous.
     58655.330655786, 9573.76291482054, 12684.2268805969, 11663.1083156009, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2562:75: style: Trailing whitespace is superfluous.
     10168.9413146208, 5949.080175853, 969.193813100773, 2.79647961574448, 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2563:78: style: Trailing whitespace is superfluous.
     2.52920982229059, 2.24701316278247, 1.30264578929547, 0.209233626025012, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2564:79: style: Trailing whitespace is superfluous.
     0.0502634216289927, 1227431.00141429, 1163522.47122237, 974217.980157487, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2565:76: style: Trailing whitespace is superfluous.
     556619.782250809, 79391.245373036, 121818.013968303, 115304.292847043, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2566:77: style: Trailing whitespace is superfluous.
     96682.3437102456, 55242.4214464478, 7885.82019321454, 23.5305906904432, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2567:77: style: Trailing whitespace is superfluous.
     22.8643448556569, 18.6753385868735, 10.6707273042849, 1.52323947157147, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2568:77: style: Trailing whitespace is superfluous.
     10.1116212338594, 167047.483697122, 160668.841800497, 132711.617175637, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2569:77: style: Trailing whitespace is superfluous.
     75569.1692845493, 10472.8824785812, 16644.3304706026, 15931.8363217603, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2570:77: style: Trailing whitespace is superfluous.
     13220.8880516791, 7529.65611062985, 1044.75460875025, 2.86975476829711, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2571:77: style: Trailing whitespace is superfluous.
     2.78559672806006, 2.27807716595988, 1.2995179475178, 0.180947936626384, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2572:78: style: Trailing whitespace is superfluous.
     0.0392529463357284, 5239345.86687155, 4832802.1243919, 4298138.92515355, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2573:77: style: Trailing whitespace is superfluous.
     2918870.07621609, 346067.436243082, 519432.472056528, 478984.051989891, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2574:77: style: Trailing whitespace is superfluous.
     426152.780113464, 288947.754611188, 34315.1267704787, 13.3881381032457, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2575:78: style: Trailing whitespace is superfluous.
     12.6734400593976, 10.9838960407163, 7.44749828219508, 0.884456942814228, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2576:76: style: Trailing whitespace is superfluous.
     10.2005557761016, 401975.714282936, 382817.42770243, 335851.915079536, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2577:77: style: Trailing whitespace is superfluous.
     231849.145993708, 25981.0840335016, 40037.7383381676, 38055.6253564935, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2578:78: style: Trailing whitespace is superfluous.
     33437.7672705181, 23009.4722114438, 2590.64400447797, 0.874065453419145, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2579:62: style: Trailing whitespace is superfluous.
     0.837673852007197, 0.734362883032103, 0.505867221464956, 
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2580:77: style: Trailing whitespace is superfluous.
     0.056109316364756, 0.021447403005249), .Dim = c(16L, 2L, 3L, 9L, 1L))), 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2581:76: style: Trailing whitespace is superfluous.
      .Names = c("Stratum", "HBF", "se_HBF", "Attribute", "Größen", "BAGR", 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2583:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2588:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2589:31: style: Words within variable and function names should be separated by '_' rather than '.'.
  result <- biotop.baeume.fun(wzp4.merkmale.3, baeume.3, ecken.3, trakte.3, A,
                              ^~~~~~~~~~~~~~~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2591:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2593:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2594:1: style: lines should not be more than 80 characters.
  reference <- structure(list(Stratum = structure(list(Wa = 5, Begehbar = 1), .Names = c("Wa", 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2594:95: style: Trailing whitespace is superfluous.
  reference <- structure(list(Stratum = structure(list(Wa = 5, Begehbar = 1), .Names = c("Wa", 
                                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2595:1: style: lines should not be more than 80 characters.
    "Begehbar")), nTE = 13220L, HBF = 1322757.73306093, se.HBF = 15749.6881095356, 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2595:83: style: Trailing whitespace is superfluous.
    "Begehbar")), nTE = 13220L, HBF = 1322757.73306093, se.HBF = 15749.6881095356, 
                                                                                  ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2596:74: style: Trailing whitespace is superfluous.
    BL = 0, se.BL = 0, iBL = 20811.9219725169, se.iBL = 1467.71561573875, 
                                                                         ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2597:1: style: lines should not be more than 80 characters.
    LK = 1.01598524438979, se.LK = 0.00113354916119642, Biotopbaumkennwerte = structure(list(
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2598:57: style: Trailing whitespace is superfluous.
    Attribute = structure(c(1L, 11L, 8L, 7L, 4L, 5L, 6L, 
                                                        ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2599:60: style: Trailing whitespace is superfluous.
    9L, 10L, 2L, 3L), .Label = c("Gesamtzahl", "oi_Biom_t", 
                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2600:59: style: Trailing whitespace is superfluous.
    "oi_Biom_t_je_ha", "Stueckvolumen_m3", "Vorrat_LB_m3", 
                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2601:61: style: Trailing whitespace is superfluous.
    "Vorrat_LB_m3_je_ha", "Vorrat_m3_je_ha", "Vorrat_m3_mR", 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2602:76: style: Trailing whitespace is superfluous.
    "Vorrat_NB_m3", "Vorrat_NB_m3_je_ha", "Zahl_je_ha"), class = "factor"), 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2603:67: style: Trailing whitespace is superfluous.
    Wert = c(6709550.79578377, 5.07239581979803, 12942265.8364758, 
                                                                  ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2604:58: style: Trailing whitespace is superfluous.
    9.78430555573225, 1.92893179147084, 10805951.7042934, 
                                                         ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2605:58: style: Trailing whitespace is superfluous.
    8.16925989862702, 2136314.13218241, 1.61504565710523, 
                                                         ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2606:65: style: Trailing whitespace is superfluous.
    7873024.0402428, 5.95197732998637), SE = c(327674.341242166, 
                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2607:60: style: Trailing whitespace is superfluous.
    0.241549365104805, 491955.737254008, 0.355967465425346, 
                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2608:61: style: Trailing whitespace is superfluous.
    0.0843224821838681, 464516.334767252, 0.340271554893727, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2609:58: style: Trailing whitespace is superfluous.
    149666.617905277, 0.111248414389223, 301207.82430717, 
                                                         ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2610:57: style: Trailing whitespace is superfluous.
    0.218160149483105)), .Names = c("Attribute", "Wert", 
                                                        ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2611:1: style: lines should not be more than 80 characters.
    "SE"), row.names = c(NA, -11L), class = "data.frame")), .Names = c("Stratum", 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2611:82: style: Trailing whitespace is superfluous.
    "SE"), row.names = c(NA, -11L), class = "data.frame")), .Names = c("Stratum", 
                                                                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2612:66: style: Trailing whitespace is superfluous.
    "nTE", "HBF", "se.HBF", "BL", "se.BL", "iBL", "se.iBL", "LK", 
                                                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2619:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2620:37: style: Words within variable and function names should be separated by '_' rather than '.'.
  result <- stamm.merkmale.bagr.fun(wzp4.merkmale.3, baeume.3, ecken.3, 
                                    ^~~~~~~~~~~~~~~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2620:72: style: Trailing whitespace is superfluous.
  result <- stamm.merkmale.bagr.fun(wzp4.merkmale.3, baeume.3, ecken.3, 
                                                                       ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2621:40: style: Commas should always have a space after.
            trakte.3, A, list(Wa = c(3,5), Begehbar = 1), c("tot", "jschael", 
                                       ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2621:78: style: Trailing whitespace is superfluous.
            trakte.3, A, list(Wa = c(3,5), Begehbar = 1), c("tot", "jschael", 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2622:1: style: lines should not be more than 80 characters.
            "aeschael", "ruecke", "pilz", "harz", "kaefer", "sstamm", "faulkon", 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2622:81: style: Trailing whitespace is superfluous.
            "aeschael", "ruecke", "pilz", "harz", "kaefer", "sstamm", "faulkon", 
                                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2624:50: style: Commas should always have a space after.
            list(bagr.lab = c("FiTa", "DglKiLae","Bu","Ei","BLb","WLb"), 
                                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2624:55: style: Commas should always have a space after.
            list(bagr.lab = c("FiTa", "DglKiLae","Bu","Ei","BLb","WLb"), 
                                                      ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2624:60: style: Commas should always have a space after.
            list(bagr.lab = c("FiTa", "DglKiLae","Bu","Ei","BLb","WLb"), 
                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2624:66: style: Commas should always have a space after.
            list(bagr.lab = c("FiTa", "DglKiLae","Bu","Ei","BLb","WLb"), 
                                                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2624:73: style: Trailing whitespace is superfluous.
            list(bagr.lab = c("FiTa", "DglKiLae","Bu","Ei","BLb","WLb"), 
                                                                        ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2625:1: style: lines should not be more than 80 characters.
                 ba.grupp =list(c(10:19,30:39,90:99), c(20:29,40,50,51), c(100), 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2625:27: style: Put spaces around all infix operators.
                 ba.grupp =list(c(10:19,30:39,90:99), c(20:29,40,50,51), c(100), 
                          ^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2625:41: style: Commas should always have a space after.
                 ba.grupp =list(c(10:19,30:39,90:99), c(20:29,40,50,51), c(100), 
                                        ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2625:47: style: Commas should always have a space after.
                 ba.grupp =list(c(10:19,30:39,90:99), c(20:29,40,50,51), c(100), 
                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2625:63: style: Commas should always have a space after.
                 ba.grupp =list(c(10:19,30:39,90:99), c(20:29,40,50,51), c(100), 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2625:66: style: Commas should always have a space after.
                 ba.grupp =list(c(10:19,30:39,90:99), c(20:29,40,50,51), c(100), 
                                                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2625:69: style: Commas should always have a space after.
                 ba.grupp =list(c(10:19,30:39,90:99), c(20:29,40,50,51), c(100), 
                                                                    ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2625:81: style: Trailing whitespace is superfluous.
                 ba.grupp =list(c(10:19,30:39,90:99), c(20:29,40,50,51), c(100), 
                                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2626:39: style: Commas should always have a space after.
                                c(110,111), c(112:199),c(200:299))))
                                      ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2626:56: style: Commas should always have a space after.
                                c(110,111), c(112:199),c(200:299))))
                                                       ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2627:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2629:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2631:58: style: Trailing whitespace is superfluous.
    Stratum = structure(list(Wa = c(3, 5), Begehbar = 1), 
                                                         ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2632:39: style: Trailing whitespace is superfluous.
        .Names = c("Wa", "Begehbar")), 
                                      ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2633:18: style: Trailing whitespace is superfluous.
    nTE = 13232L, 
                 ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2634:55: style: Trailing whitespace is superfluous.
    HBF = 1323958.42086703, se.HBF = 15760.6334334331, 
                                                      ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2635:53: style: Trailing whitespace is superfluous.
    BL = 900.515854580056, se.BL = 300.037156773676, 
                                                    ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2636:55: style: Trailing whitespace is superfluous.
    iBL = 20811.9219725169, se.iBL = 1467.71561573875, 
                                                      ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2637:56: style: Trailing whitespace is superfluous.
    LK = 1.01667306953515, se.LK = 0.00115571516765233, 
                                                       ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2638:1: style: lines should not be more than 80 characters.
    Merkmal = c("tot", "jschael", "aeschael", "ruecke", "pilz", "harz", "kaefer", 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2638:82: style: Trailing whitespace is superfluous.
    Merkmal = c("tot", "jschael", "aeschael", "ruecke", "pilz", "harz", "kaefer", 
                                                                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2639:75: style: Trailing whitespace is superfluous.
                "sstamm", "faulkon", "hoehle", "bizarr", "uralt", "horst", 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2640:28: style: Trailing whitespace is superfluous.
                "mbiotop"), 
                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2641:71: style: Trailing whitespace is superfluous.
    BAGR = c("FiTa", "DglKiLae", "Bu", "Ei", "BLb", "WLb", "Alle BA"), 
                                                                      ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2642:62: style: Trailing whitespace is superfluous.
    Kennwerte = c("Gesamtzahl", "Zahl_je_ha", "Vorrat_m3_mR", 
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2643:76: style: Trailing whitespace is superfluous.
                  "Vorrat_m3_mR_je_ha", "Stueckvolumen_m3_mR", "oi_Biom_t", 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2644:63: style: Trailing whitespace is superfluous.
                  "oi_Biom_t_je_ha", "Anteil_Gesamtzahl_Proz", 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2645:47: style: Trailing whitespace is superfluous.
                  "Anteil_Gesamtvorrat_Proz"), 
                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2646:58: style: Trailing whitespace is superfluous.
    Kennwert_Tabelle_BAGR = structure(c(89695753.8057177, 
                                                         ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2647:79: style: Trailing whitespace is superfluous.
      67.7481651931167, 83095663.8384966, 62.7630464286627, 0.926416918447254, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2648:78: style: Trailing whitespace is superfluous.
      38105375.1582274, 28.7813986886937, 23.2132806547925, 32.4240678949479, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2649:77: style: Trailing whitespace is superfluous.
      2377246.19625395, 1.60210051626666, 1956206.9130449, 1.25877624947745, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2650:1: style: lines should not be more than 80 characters.
      0.0189693589469703, 888935.26940512, 0.570188535831128, 0.481485675613238, 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2650:81: style: Trailing whitespace is superfluous.
      0.0189693589469703, 888935.26940512, 0.570188535831128, 0.481485675613238, 
                                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2651:79: style: Trailing whitespace is superfluous.
      0.402537316453643, 8882695.48788189, 6.70919520423065, 10058755.5682178, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2652:77: style: Trailing whitespace is superfluous.
      7.5974860008296, 1.13239900905533, 4950511.46515792, 3.73917442355624, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2653:79: style: Trailing whitespace is superfluous.
      15.0364649130486, 18.7455777176004, 575013.835860921, 0.426567464343704, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2654:63: style: Trailing whitespace is superfluous.
      420111.024439687, 0.302780254574028, 0.0644900042004985, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2655:1: style: lines should not be more than 80 characters.
      205433.740447369, 0.147972818109697, 0.807401770742645, 0.552803958093853, 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2655:81: style: Trailing whitespace is superfluous.
      205433.740447369, 0.147972818109697, 0.807401770742645, 0.552803958093853, 
                                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2656:78: style: Trailing whitespace is superfluous.
      50483736.2163681, 38.1309076030555, 43831438.2736358, 33.1063555945597, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2657:79: style: Trailing whitespace is superfluous.
      0.868228890305954, 30658369.1722526, 23.1565951687328, 28.8264199173178, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2658:78: style: Trailing whitespace is superfluous.
      41.7819120897264, 1784980.91168493, 1.26375197581323, 1287251.58213046, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2659:79: style: Trailing whitespace is superfluous.
      0.888095229398133, 0.025698688102938, 890732.24173362, 0.61308178797102, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2660:79: style: Trailing whitespace is superfluous.
      0.75558977710506, 0.607375395472574, 5495043.46717953, 4.15046528695435, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2661:77: style: Trailing whitespace is superfluous.
      9773075.5483392, 7.38170881676104, 1.77852561252905, 5926222.36681631, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2662:78: style: Trailing whitespace is superfluous.
      4.47613933595841, 16.2891406939986, 31.1996035653732, 329543.493128396, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2663:1: style: lines should not be more than 80 characters.
      0.244445447743738, 456577.700165448, 0.334762253744116, 0.101136758195115, 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2663:81: style: Trailing whitespace is superfluous.
      0.244445447743738, 456577.700165448, 0.334762253744116, 0.101136758195115, 
                                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2664:80: style: Trailing whitespace is superfluous.
      272773.263967828, 0.199850109847114, 0.96066473373273, 0.867128607064576, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2665:77: style: Trailing whitespace is superfluous.
      21536752.566999, 16.2669402811722, 9573369.22354792, 7.23086848700166, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2666:79: style: Trailing whitespace is superfluous.
      0.444513126747683, 6439873.48672588, 4.86410553777703, 16.7397840281568, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2667:79: style: Trailing whitespace is superfluous.
      23.0794742858551, 1083658.99082034, 0.803776752947566, 384445.478662016, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2668:63: style: Trailing whitespace is superfluous.
      0.281657254358524, 0.0207799997081815, 256145.971724533, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2669:63: style: Trailing whitespace is superfluous.
      0.187581004176714, 0.712855747774121, 0.654522710469491, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2670:78: style: Trailing whitespace is superfluous.
      6476073.19362614, 4.89144756478461, 2232806.04645874, 1.68646236261447, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2671:80: style: Trailing whitespace is superfluous.
      0.344777765738705, 1197126.81580717, 0.904202727924943, 13.9842793207218, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2672:77: style: Trailing whitespace is superfluous.
      19.3724532434289, 602571.627417594, 0.452715145209704, 189543.2221267, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2673:63: style: Trailing whitespace is superfluous.
      0.142587527421648, 0.0357254330436087, 89219.3116815136, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2674:79: style: Trailing whitespace is superfluous.
      0.067020279387667, 1.19386664918554, 1.17628515209512, 182570054.737772, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2675:79: style: Trailing whitespace is superfluous.
      137.897121133314, 158565108.498696, 119.765927690429, 0.868516519461228, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2676:77: style: Trailing whitespace is superfluous.
      87277478.4649873, 65.9216158826431, 22.014877943659, 31.7655987844916, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2677:78: style: Trailing whitespace is superfluous.
      3498167.23879566, 2.09070269502752, 2653648.86038485, 1.40028620322026, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2678:1: style: lines should not be more than 80 characters.
      0.013592518478361, 1460884.60733739, 0.775711380087284, 0.329028469218415, 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2678:81: style: Trailing whitespace is superfluous.
      0.013592518478361, 1460884.60733739, 0.775711380087284, 0.329028469218415, 
                                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2679:50: style: Trailing whitespace is superfluous.
      0.292977792491541), .Dim = c(9L, 2L, 7L))), 
                                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2680:1: style: lines should not be more than 80 characters.
    .Names = c("Stratum", "nTE", "HBF", "se.HBF", "BL", "se.BL", "iBL", "se.iBL", 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2680:82: style: Trailing whitespace is superfluous.
    .Names = c("Stratum", "nTE", "HBF", "se.HBF", "BL", "se.BL", "iBL", "se.iBL", 
                                                                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2681:63: style: Trailing whitespace is superfluous.
               "LK", "se.LK", "Merkmale", "BAGR", "Kennwerte", 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2683:1: style: Trailing whitespace is superfluous.
    
^~~~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2688:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2689:44: style: Commas should always have a space after.
  result <- ba.klass.fun(100, list(c(10:19,30:39,90:99), c(20:29,40,50,51), 
                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2689:50: style: Commas should always have a space after.
  result <- ba.klass.fun(100, list(c(10:19,30:39,90:99), c(20:29,40,50,51), 
                                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2689:66: style: Commas should always have a space after.
  result <- ba.klass.fun(100, list(c(10:19,30:39,90:99), c(20:29,40,50,51), 
                                                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2689:69: style: Commas should always have a space after.
  result <- ba.klass.fun(100, list(c(10:19,30:39,90:99), c(20:29,40,50,51), 
                                                                    ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2689:72: style: Commas should always have a space after.
  result <- ba.klass.fun(100, list(c(10:19,30:39,90:99), c(20:29,40,50,51), 
                                                                       ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2689:76: style: Trailing whitespace is superfluous.
  result <- ba.klass.fun(100, list(c(10:19,30:39,90:99), c(20:29,40,50,51), 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2690:45: style: Commas should always have a space after.
                              c(100), c(110,111), c(112,120:199),c(200:299)))
                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2690:57: style: Commas should always have a space after.
                              c(100), c(110,111), c(112,120:199),c(200:299)))
                                                        ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2690:66: style: Commas should always have a space after.
                              c(100), c(110,111), c(112,120:199),c(200:299)))
                                                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2691:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2696:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2697:59: style: Commas should always have a space after.
  result <- ba.klass.lab.tab.fun(list(bagr.lab = c("FiTa","DglKiLae","Bu","Ei",
                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2697:70: style: Commas should always have a space after.
  result <- ba.klass.lab.tab.fun(list(bagr.lab = c("FiTa","DglKiLae","Bu","Ei",
                                                                     ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2697:75: style: Commas should always have a space after.
  result <- ba.klass.lab.tab.fun(list(bagr.lab = c("FiTa","DglKiLae","Bu","Ei",
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2698:19: style: Commas should always have a space after.
            "BLb","WLb"), bacode = list(c(10:19,30:39,90:99), 
                  ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2698:49: style: Commas should always have a space after.
            "BLb","WLb"), bacode = list(c(10:19,30:39,90:99), 
                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2698:55: style: Commas should always have a space after.
            "BLb","WLb"), bacode = list(c(10:19,30:39,90:99), 
                                                      ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2698:62: style: Trailing whitespace is superfluous.
            "BLb","WLb"), bacode = list(c(10:19,30:39,90:99), 
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2699:21: style: Commas should always have a space after.
            c(20:29,40,50,51), c(100),c(110,111), c(112:199), c(200:299))))
                    ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2699:24: style: Commas should always have a space after.
            c(20:29,40,50,51), c(100),c(110,111), c(112:199), c(200:299))))
                       ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2699:27: style: Commas should always have a space after.
            c(20:29,40,50,51), c(100),c(110,111), c(112:199), c(200:299))))
                          ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2699:39: style: Commas should always have a space after.
            c(20:29,40,50,51), c(100),c(110,111), c(112:199), c(200:299))))
                                      ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2699:45: style: Commas should always have a space after.
            c(20:29,40,50,51), c(100),c(110,111), c(112:199), c(200:299))))
                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2700:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2702:54: style: Trailing whitespace is superfluous.
    ICode = structure(c(10L, 11L, 12L, 13L, 14L, 15L, 
                                                     ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2703:71: style: Trailing whitespace is superfluous.
      16L, 19L, 20L, 21L, 22L, 23L, 24L, 25L, 26L, 27L, 29L, 30L, 31L, 
                                                                      ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2704:71: style: Trailing whitespace is superfluous.
      32L, 33L, 34L, 35L, 36L, 39L, 40L, 50L, 51L, 90L, 91L, 92L, 93L, 
                                                                      ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2705:69: style: Trailing whitespace is superfluous.
      94L, 95L, 99L, 100L, 110L, 111L, 112L, 113L, 114L, 120L, 121L, 
                                                                    ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2706:72: style: Trailing whitespace is superfluous.
      130L, 140L, 141L, 142L, 143L, 144L, 150L, 160L, 170L, 180L, 181L, 
                                                                       ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2707:72: style: Trailing whitespace is superfluous.
      190L, 191L, 192L, 193L, 194L, 195L, 196L, 199L, 200L, 201L, 210L, 
                                                                       ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2708:72: style: Trailing whitespace is superfluous.
      211L, 212L, 213L, 220L, 221L, 222L, 223L, 224L, 230L, 240L, 250L, 
                                                                       ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2709:72: style: Trailing whitespace is superfluous.
      251L, 252L, 290L, 291L, 292L, 293L, 294L, 295L, 296L, 299L, 998L, 
                                                                       ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2710:65: style: Trailing whitespace is superfluous.
      999L), label = "ICode", class = c("labelled", "integer")), 
                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2711:19: style: Trailing whitespace is superfluous.
    bagr.nr = c(1, 
                  ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2712:70: style: Trailing whitespace is superfluous.
       1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 
                                                                     ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2713:70: style: Trailing whitespace is superfluous.
       1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 4, 4, 5, 5, 5, 5, 5, 
                                                                     ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2714:70: style: Trailing whitespace is superfluous.
       5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 
                                                                     ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2715:70: style: Trailing whitespace is superfluous.
       6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 
                                                                     ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2716:19: style: Trailing whitespace is superfluous.
       6, NA, NA), 
                  ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2717:53: style: Trailing whitespace is superfluous.
    bagr = c("FiTa", "FiTa", "FiTa", "FiTa", "FiTa", 
                                                    ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2718:78: style: Trailing whitespace is superfluous.
      "FiTa", "FiTa", "FiTa", "DglKiLae", "DglKiLae", "DglKiLae", "DglKiLae", 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2719:74: style: Trailing whitespace is superfluous.
      "DglKiLae", "DglKiLae", "DglKiLae", "DglKiLae", "DglKiLae", "FiTa", 
                                                                         ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2720:74: style: Trailing whitespace is superfluous.
      "FiTa", "FiTa", "FiTa", "FiTa", "FiTa", "FiTa", "FiTa", "DglKiLae", 
                                                                         ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2721:70: style: Trailing whitespace is superfluous.
      "DglKiLae", "DglKiLae", "FiTa", "FiTa", "FiTa", "FiTa", "FiTa", 
                                                                     ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2722:68: style: Trailing whitespace is superfluous.
      "FiTa", "FiTa", "Bu", "Ei", "Ei", "BLb", "BLb", "BLb", "BLb", 
                                                                   ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2723:69: style: Trailing whitespace is superfluous.
      "BLb", "BLb", "BLb", "BLb", "BLb", "BLb", "BLb", "BLb", "BLb", 
                                                                    ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2724:69: style: Trailing whitespace is superfluous.
      "BLb", "BLb", "BLb", "BLb", "BLb", "BLb", "BLb", "BLb", "BLb", 
                                                                    ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2725:69: style: Trailing whitespace is superfluous.
      "BLb", "BLb", "WLb", "WLb", "WLb", "WLb", "WLb", "WLb", "WLb", 
                                                                    ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2726:69: style: Trailing whitespace is superfluous.
      "WLb", "WLb", "WLb", "WLb", "WLb", "WLb", "WLb", "WLb", "WLb", 
                                                                    ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2727:72: style: Trailing whitespace is superfluous.
      "WLb", "WLb", "WLb", "WLb", "WLb", "WLb", "WLb", "WLb", NA, NA)), 
                                                                       ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2728:44: style: Trailing whitespace is superfluous.
    .Names = c("ICode", "bagr.nr", "bagr"), 
                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2730:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2735:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2737:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2739:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2744:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2746:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2748:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2753:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2755:31: style: Trailing whitespace is superfluous.
    verj.3, ecken.3, trakte.3, 
                              ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2756:30: style: Commas should always have a space after.
    list(bagr.lab = c("FiTa","DglKiLae","Bu","Ei","BLb","WLb"), 
                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2756:41: style: Commas should always have a space after.
    list(bagr.lab = c("FiTa","DglKiLae","Bu","Ei","BLb","WLb"), 
                                        ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2756:46: style: Commas should always have a space after.
    list(bagr.lab = c("FiTa","DglKiLae","Bu","Ei","BLb","WLb"), 
                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2756:51: style: Commas should always have a space after.
    list(bagr.lab = c("FiTa","DglKiLae","Bu","Ei","BLb","WLb"), 
                                                  ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2756:57: style: Commas should always have a space after.
    list(bagr.lab = c("FiTa","DglKiLae","Bu","Ei","BLb","WLb"), 
                                                        ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2756:64: style: Trailing whitespace is superfluous.
    list(bagr.lab = c("FiTa","DglKiLae","Bu","Ei","BLb","WLb"), 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2757:32: style: Commas should always have a space after.
         bacode = list(c(10:19,30:39,90:99), c(20:29,40,50,51), c(100),
                               ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2757:38: style: Commas should always have a space after.
         bacode = list(c(10:19,30:39,90:99), c(20:29,40,50,51), c(100),
                                     ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2757:54: style: Commas should always have a space after.
         bacode = list(c(10:19,30:39,90:99), c(20:29,40,50,51), c(100),
                                                     ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2757:57: style: Commas should always have a space after.
         bacode = list(c(10:19,30:39,90:99), c(20:29,40,50,51), c(100),
                                                        ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2757:60: style: Commas should always have a space after.
         bacode = list(c(10:19,30:39,90:99), c(20:29,40,50,51), c(100),
                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2758:30: style: Commas should always have a space after.
                       c(110,111), c(112:199), c(200:299))), 
                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2758:61: style: Trailing whitespace is superfluous.
                       c(110,111), c(112:199), c(200:299))), 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2759:12: style: Put spaces around all infix operators.
    list(Wa=c(3,5),Begehbar=1), 2, A)
          ~^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2759:17: style: Commas should always have a space after.
    list(Wa=c(3,5),Begehbar=1), 2, A)
                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2759:20: style: Commas should always have a space after.
    list(Wa=c(3,5),Begehbar=1), 2, A)
                   ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2759:28: style: Put spaces around all infix operators.
    list(Wa=c(3,5),Begehbar=1), 2, A)
                          ~^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2760:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2762:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2763:78: style: Trailing whitespace is superfluous.
  reference <- structure(list(BAGR = structure(c(6L, 4L, 3L, 5L, 2L, 7L, 1L), 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2764:25: style: Trailing whitespace is superfluous.
      .Label = c("Alle", 
                        ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2765:70: style: Trailing whitespace is superfluous.
    "BLb", "Bu", "DglKiLae", "Ei", "FiTa", "WLb"), class = "factor"), 
                                                                     ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2766:65: style: Trailing whitespace is superfluous.
    Stückzahl_Verj_Mio = c(5163.795, 190.618, 5601.324, 429.646, 
                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2767:70: style: Trailing whitespace is superfluous.
    6839.543, 917.337, 19142.264), SE_Stückzahl_Verj_Mio = c(215.931, 
                                                                     ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2768:75: style: Trailing whitespace is superfluous.
    30.584, 197.399, 55.582, 248.897, 54.089, 443.47), Anteil_Proz = c(27, 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2769:66: style: Trailing whitespace is superfluous.
    1, 29.3, 2.2, 35.7, 4.8, 100), SE_Anteil_Proz = c(0.98, 0.16, 
                                                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2770:74: style: Trailing whitespace is superfluous.
    0.78, 0.28, 0.89, 0.28, 0)), .Names = c("BAGR", "Stückzahl_Verj_Mio", 
                                                                         ^
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2771:1: style: lines should not be more than 80 characters.
    "SE_Stückzahl_Verj_Mio", "Anteil_Proz", "SE_Anteil_Proz"), row.names = c(NA, 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: tests/testthat/test_BWI3_HR_Funktionen_v3.R:2771:81: style: Trailing whitespace is superfluous.
    "SE_Stückzahl_Verj_Mio", "Anteil_Proz", "SE_Anteil_Proz"), row.names = c(NA, 
                                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Landkreis_Funktionen_v1.R:17:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Landkreis_Funktionen_v1.R:19:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Landkreis_Funktionen_v1.R:21:28: style: Trailing whitespace is superfluous.
    Kreis = "Ortenaukreis", 
                           ^
NO COPY: tests/testthat/test_BWI3_HR_Landkreis_Funktionen_v1.R:22:21: style: Trailing whitespace is superfluous.
    KreisCode = 317, 
                    ^
NO COPY: tests/testthat/test_BWI3_HR_Landkreis_Funktionen_v1.R:23:40: style: Trailing whitespace is superfluous.
    Kreisfläche_gesamt_ha = 185073.999, 
                                       ^
NO COPY: tests/testthat/test_BWI3_HR_Landkreis_Funktionen_v1.R:24:59: style: Trailing whitespace is superfluous.
    Waldanteil = structure(list(BWI = c(1987, 2002, 2012), 
                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Landkreis_Funktionen_v1.R:25:41: style: Trailing whitespace is superfluous.
      Waldanteil = c(45.3, 45.6, 45.5)), 
                                        ^
NO COPY: tests/testthat/test_BWI3_HR_Landkreis_Funktionen_v1.R:26:39: style: Trailing whitespace is superfluous.
      .Names = c("BWI", "Waldanteil"), 
                                      ^
NO COPY: tests/testthat/test_BWI3_HR_Landkreis_Funktionen_v1.R:28:29: style: Trailing whitespace is superfluous.
      class = "data.frame"), 
                            ^
NO COPY: tests/testthat/test_BWI3_HR_Landkreis_Funktionen_v1.R:30:34: style: Trailing whitespace is superfluous.
       BWI = c(1987, 2002, 2012), 
                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Landkreis_Funktionen_v1.R:31:79: style: Trailing whitespace is superfluous.
       Waldfl_GW = c(84220, 84420, 83748), SE_Waldfl_GW = c(5320, 5318, 5303), 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Landkreis_Funktionen_v1.R:32:78: style: Trailing whitespace is superfluous.
       Waldfl_StW = c(9802, 9802, 9906), SE_Waldfl_StW = c(1820, 1820, 1817), 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Landkreis_Funktionen_v1.R:33:80: style: Trailing whitespace is superfluous.
        Waldfl_KW = c(32708, 33508, 33619), SE_Waldfl_KW = c(3231, 3273, 3248), 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Landkreis_Funktionen_v1.R:34:1: style: lines should not be more than 80 characters.
       Waldfl_OEW = c(42510, 43310, 43525), SE_Waldfl_OEW = c(3736, 3772, 3749), 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: tests/testthat/test_BWI3_HR_Landkreis_Funktionen_v1.R:34:81: style: Trailing whitespace is superfluous.
       Waldfl_OEW = c(42510, 43310, 43525), SE_Waldfl_OEW = c(3736, 3772, 3749), 
                                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Landkreis_Funktionen_v1.R:35:79: style: Trailing whitespace is superfluous.
       Waldfl_PW = c(41710, 41110, 40223), SE_Waldfl_PW = c(3614, 3584, 3523), 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Landkreis_Funktionen_v1.R:36:75: style: Trailing whitespace is superfluous.
       Waldfl_GPW = c(1800, 1700, 1801), SE_Waldfl_GPW = c(748, 742, 762), 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Landkreis_Funktionen_v1.R:37:1: style: lines should not be more than 80 characters.
       Waldfl_MPW = c(34308, 34408, 34920), SE_Waldfl_MPW = c(3296, 3291, 3251), 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: tests/testthat/test_BWI3_HR_Landkreis_Funktionen_v1.R:37:81: style: Trailing whitespace is superfluous.
       Waldfl_MPW = c(34308, 34408, 34920), SE_Waldfl_MPW = c(3296, 3291, 3251), 
                                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Landkreis_Funktionen_v1.R:38:78: style: Trailing whitespace is superfluous.
       Waldfl_KPW = c(5601, 5001, 3502), SE_Waldfl_KPW = c(1085, 1009, 768)), 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Landkreis_Funktionen_v1.R:39:68: style: Trailing whitespace is superfluous.
       .Names = c("BWI", "Waldfl_GW", "SE_Waldfl_GW", "Waldfl_StW", 
                                                                   ^
NO COPY: tests/testthat/test_BWI3_HR_Landkreis_Funktionen_v1.R:40:78: style: Trailing whitespace is superfluous.
                  "SE_Waldfl_StW", "Waldfl_KW", "SE_Waldfl_KW", "Waldfl_OEW", 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Landkreis_Funktionen_v1.R:41:79: style: Trailing whitespace is superfluous.
                  "SE_Waldfl_OEW",  "Waldfl_PW", "SE_Waldfl_PW", "Waldfl_GPW", 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Landkreis_Funktionen_v1.R:42:80: style: Trailing whitespace is superfluous.
                  "SE_Waldfl_GPW", "Waldfl_MPW", "SE_Waldfl_MPW", "Waldfl_KPW", 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Landkreis_Funktionen_v1.R:43:36: style: Trailing whitespace is superfluous.
                  "SE_Waldfl_KPW"), 
                                   ^
NO COPY: tests/testthat/test_BWI3_HR_Landkreis_Funktionen_v1.R:44:54: style: Trailing whitespace is superfluous.
       row.names = c(NA, -3L), class = "data.frame"), 
                                                     ^
NO COPY: tests/testthat/test_BWI3_HR_Landkreis_Funktionen_v1.R:46:58: style: Trailing whitespace is superfluous.
      Eigentum = structure(c(7L, 3L, 5L, 6L, 1L, 4L, 2L), 
                                                         ^
NO COPY: tests/testthat/test_BWI3_HR_Landkreis_Funktionen_v1.R:47:69: style: Trailing whitespace is superfluous.
      .Label = c("GPW", "KPW", "KW", "MPW", "OEW", "PW", "StW(BW)"), 
                                                                    ^
NO COPY: tests/testthat/test_BWI3_HR_Landkreis_Funktionen_v1.R:48:25: style: Trailing whitespace is superfluous.
      class = "factor"), 
                        ^
NO COPY: tests/testthat/test_BWI3_HR_Landkreis_Funktionen_v1.R:49:59: style: Trailing whitespace is superfluous.
      Waldfl_Proz = c(11.8, 40.1, 52, 48, 2.2, 41.7, 4.2), 
                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Landkreis_Funktionen_v1.R:50:56: style: Trailing whitespace is superfluous.
      SE_Waldfl_Proz = c(2, 2.9, 3, 3, 0.9, 2.9, 0.9)), 
                                                       ^
NO COPY: tests/testthat/test_BWI3_HR_Landkreis_Funktionen_v1.R:51:63: style: Trailing whitespace is superfluous.
      .Names = c("Eigentum", "Waldfl_Proz", "SE_Waldfl_Proz"), 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Landkreis_Funktionen_v1.R:52:53: style: Trailing whitespace is superfluous.
      row.names = c(NA, -7L), class = "data.frame"), 
                                                    ^
NO COPY: tests/testthat/test_BWI3_HR_Landkreis_Funktionen_v1.R:53:79: style: Trailing whitespace is superfluous.
    begehb_Holzbfl = structure(list(Eigentum = structure(c(2L, 8L, 4L, 6L, 7L, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Landkreis_Funktionen_v1.R:54:72: style: Trailing whitespace is superfluous.
                                                           1L, 5L, 3L), 
                                                                       ^
NO COPY: tests/testthat/test_BWI3_HR_Landkreis_Funktionen_v1.R:55:75: style: Trailing whitespace is superfluous.
      .Label = c("GPW", "GW", "KPW", "KW", "MPW", "OEW", "PW", "StW(BW)"), 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Landkreis_Funktionen_v1.R:56:25: style: Trailing whitespace is superfluous.
      class = "factor"), 
                        ^
NO COPY: tests/testthat/test_BWI3_HR_Landkreis_Funktionen_v1.R:57:70: style: Trailing whitespace is superfluous.
      b_HBF = c(81247, 9505, 32619, 42324, 38922, 1701, 33819, 3402), 
                                                                     ^
NO COPY: tests/testthat/test_BWI3_HR_Landkreis_Funktionen_v1.R:58:76: style: Trailing whitespace is superfluous.
      SE_begehb_Holzbfl = c(5174, 1773, 3164, 3659, 3434, 714, 3179, 721)), 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Landkreis_Funktionen_v1.R:59:60: style: Trailing whitespace is superfluous.
      .Names = c("Eigentum", "b_HBF", "SE_begehb_Holzbfl"), 
                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Landkreis_Funktionen_v1.R:60:54: style: Trailing whitespace is superfluous.
      row.names = c(NA, -8L), class = "data.frame")), 
                                                     ^
NO COPY: tests/testthat/test_BWI3_HR_Landkreis_Funktionen_v1.R:61:76: style: Trailing whitespace is superfluous.
    .Names = c("Kreis", "KreisCode", "Kreisfläche_gesamt_ha", "Waldanteil", 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Landkreis_Funktionen_v1.R:63:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Landkreis_Funktionen_v1.R:68:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Landkreis_Funktionen_v1.R:69:43: style: Put spaces around all infix operators.
  result <- flaechen.stratum.fun.1(list(Wa=c(3,5), Begehbar=1))
                                         ~^~
NO COPY: tests/testthat/test_BWI3_HR_Landkreis_Funktionen_v1.R:69:48: style: Commas should always have a space after.
  result <- flaechen.stratum.fun.1(list(Wa=c(3,5), Begehbar=1))
                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Landkreis_Funktionen_v1.R:69:60: style: Put spaces around all infix operators.
  result <- flaechen.stratum.fun.1(list(Wa=c(3,5), Begehbar=1))
                                                          ~^~
NO COPY: tests/testthat/test_BWI3_HR_Landkreis_Funktionen_v1.R:70:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Landkreis_Funktionen_v1.R:72:58: style: Trailing whitespace is superfluous.
    Stratum = structure(list(Wa = c(3, 5), Begehbar = 1), 
                                                         ^
NO COPY: tests/testthat/test_BWI3_HR_Landkreis_Funktionen_v1.R:73:55: style: Trailing whitespace is superfluous.
                        .Names = c("Wa", "Begehbar")), 
                                                      ^
NO COPY: tests/testthat/test_BWI3_HR_Landkreis_Funktionen_v1.R:74:60: style: Trailing whitespace is superfluous.
    Waldflaeche = structure(list(BWI = c(1987, 2002, 2012), 
                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Landkreis_Funktionen_v1.R:75:46: style: Trailing whitespace is superfluous.
    Waldfl_GW = c(1316118, 1354827, 1363181), 
                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Landkreis_Funktionen_v1.R:76:28: style: Commas should always have a space after.
    SE_Waldfl_GW = c(15923,16085, 16110), 
                           ^
NO COPY: tests/testthat/test_BWI3_HR_Landkreis_Funktionen_v1.R:76:42: style: Trailing whitespace is superfluous.
    SE_Waldfl_GW = c(15923,16085, 16110), 
                                         ^
NO COPY: tests/testthat/test_BWI3_HR_Landkreis_Funktionen_v1.R:77:1: style: lines should not be more than 80 characters.
    Waldfl_StW = c(316376, 326979, 327388), SE_Waldfl_StW = c(9781, 9994, 9967), 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: tests/testthat/test_BWI3_HR_Landkreis_Funktionen_v1.R:77:81: style: Trailing whitespace is superfluous.
    Waldfl_StW = c(316376, 326979, 327388), SE_Waldfl_StW = c(9781, 9994, 9967), 
                                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Landkreis_Funktionen_v1.R:78:1: style: lines should not be more than 80 characters.
    Waldfl_KW = c(519525, 537930, 545613), SE_Waldfl_KW = c(11558, 11801, 11806), 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: tests/testthat/test_BWI3_HR_Landkreis_Funktionen_v1.R:78:82: style: Trailing whitespace is superfluous.
    Waldfl_KW = c(519525, 537930, 545613), SE_Waldfl_KW = c(11558, 11801, 11806), 
                                                                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Landkreis_Funktionen_v1.R:79:44: style: Trailing whitespace is superfluous.
    Waldfl_OEW = c(835902, 864909, 873000), 
                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Landkreis_Funktionen_v1.R:80:44: style: Trailing whitespace is superfluous.
    SE_Waldfl_OEW = c(14090, 14359, 14336), 
                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Landkreis_Funktionen_v1.R:81:43: style: Trailing whitespace is superfluous.
    Waldfl_PW = c(480216, 489918, 490181), 
                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Landkreis_Funktionen_v1.R:82:28: style: Commas should always have a space after.
    SE_Waldfl_PW = c(10659,10746, 10702), 
                           ^
NO COPY: tests/testthat/test_BWI3_HR_Landkreis_Funktionen_v1.R:82:42: style: Trailing whitespace is superfluous.
    SE_Waldfl_PW = c(10659,10746, 10702), 
                                         ^
NO COPY: tests/testthat/test_BWI3_HR_Landkreis_Funktionen_v1.R:83:44: style: Trailing whitespace is superfluous.
    Waldfl_GPW = c(146235, 149136, 151287), 
                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Landkreis_Funktionen_v1.R:84:41: style: Trailing whitespace is superfluous.
    SE_Waldfl_GPW = c(6718, 6792, 6822), 
                                        ^
NO COPY: tests/testthat/test_BWI3_HR_Landkreis_Funktionen_v1.R:85:44: style: Trailing whitespace is superfluous.
    Waldfl_MPW = c(150836, 153237, 185406), 
                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Landkreis_Funktionen_v1.R:86:41: style: Trailing whitespace is superfluous.
    SE_Waldfl_MPW = c(6344, 6364, 6665), 
                                        ^
NO COPY: tests/testthat/test_BWI3_HR_Landkreis_Funktionen_v1.R:87:44: style: Trailing whitespace is superfluous.
    Waldfl_KPW = c(183144, 187545, 153488), 
                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Landkreis_Funktionen_v1.R:88:42: style: Trailing whitespace is superfluous.
    SE_Waldfl_KPW = c(6034, 6095, 5139)), 
                                         ^
NO COPY: tests/testthat/test_BWI3_HR_Landkreis_Funktionen_v1.R:89:65: style: Trailing whitespace is superfluous.
    .Names = c("BWI", "Waldfl_GW", "SE_Waldfl_GW", "Waldfl_StW", 
                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Landkreis_Funktionen_v1.R:90:1: style: lines should not be more than 80 characters.
    "SE_Waldfl_StW", "Waldfl_KW", "SE_Waldfl_KW", "Waldfl_OEW", "SE_Waldfl_OEW", 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: tests/testthat/test_BWI3_HR_Landkreis_Funktionen_v1.R:90:81: style: Trailing whitespace is superfluous.
    "SE_Waldfl_StW", "Waldfl_KW", "SE_Waldfl_KW", "Waldfl_OEW", "SE_Waldfl_OEW", 
                                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Landkreis_Funktionen_v1.R:91:78: style: Trailing whitespace is superfluous.
    "Waldfl_PW", "SE_Waldfl_PW", "Waldfl_GPW", "SE_Waldfl_GPW", "Waldfl_MPW", 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Landkreis_Funktionen_v1.R:92:53: style: Trailing whitespace is superfluous.
    "SE_Waldfl_MPW", "Waldfl_KPW", "SE_Waldfl_KPW"), 
                                                    ^
NO COPY: tests/testthat/test_BWI3_HR_Landkreis_Funktionen_v1.R:93:51: style: Trailing whitespace is superfluous.
    row.names = c(NA, -3L), class = "data.frame"), 
                                                  ^
NO COPY: tests/testthat/test_BWI3_HR_Landkreis_Funktionen_v1.R:94:60: style: Trailing whitespace is superfluous.
    Waldfl_Proz = structure(list(Eigentum = structure(c(7L, 
                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Landkreis_Funktionen_v1.R:95:67: style: Trailing whitespace is superfluous.
    3L, 5L, 6L, 1L, 4L, 2L), .Label = c("GPW", "KPW", "KW", "MPW", 
                                                                  ^
NO COPY: tests/testthat/test_BWI3_HR_Landkreis_Funktionen_v1.R:96:68: style: Trailing whitespace is superfluous.
    "OEW", "PW", "StW(BW)"), class = "factor"), Waldfl_Proz = c(24, 
                                                                   ^
NO COPY: tests/testthat/test_BWI3_HR_Landkreis_Funktionen_v1.R:97:69: style: Trailing whitespace is superfluous.
    40, 64, 36, 11.1, 13.6, 11.3), SE_Waldfl_Proz = c(0.7, 0.7, 0.7, 
                                                                    ^
NO COPY: tests/testthat/test_BWI3_HR_Landkreis_Funktionen_v1.R:99:54: style: Trailing whitespace is superfluous.
    ), row.names = c(NA, -7L), class = "data.frame"), 
                                                     ^
NO COPY: tests/testthat/test_BWI3_HR_Landkreis_Funktionen_v1.R:101:78: style: Trailing whitespace is superfluous.
    Eigentum = structure(c(2L, 8L, 4L, 6L, 7L, 1L, 5L, 3L), .Label = c("GPW", 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Landkreis_Funktionen_v1.R:102:74: style: Trailing whitespace is superfluous.
    "GW", "KPW", "KW", "MPW", "OEW", "PW", "StW(BW)"), class = "factor"), 
                                                                         ^
NO COPY: tests/testthat/test_BWI3_HR_Landkreis_Funktionen_v1.R:103:63: style: Trailing whitespace is superfluous.
    b_HBF = c(1323958, 310978, 527802, 844684, 479275, 148185, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Landkreis_Funktionen_v1.R:104:63: style: Trailing whitespace is superfluous.
    180904, 150186), SE_begehb_Holzbfl = c(15761, 9650, 11504, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Landkreis_Funktionen_v1.R:105:70: style: Trailing whitespace is superfluous.
    13981, 10515, 6695, 6543, 5062)), .Names = c("Eigentum", "b_HBF", 
                                                                     ^
NO COPY: tests/testthat/test_BWI3_HR_Landkreis_Funktionen_v1.R:106:74: style: Trailing whitespace is superfluous.
    "SE_begehb_Holzbfl"), row.names = c(NA, -8L), class = "data.frame")), 
                                                                         ^
NO COPY: tests/testthat/test_BWI3_HR_Landkreis_Funktionen_v1.R:108:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:14:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:15:80: style: Trailing whitespace is superfluous.
  result <- Totholz.bagr.art.zg.stratum.fun(totholz.3, ecken.3, trakte.3, 3, A, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:16:23: style: Put spaces around all infix operators.
            list(D.unt=0, D.ob=70, D.b=10, Ndh=T), list(Wa=c(3,5), Begehbar=1))
                     ~^~
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:16:31: style: Put spaces around all infix operators.
            list(D.unt=0, D.ob=70, D.b=10, Ndh=T), list(Wa=c(3,5), Begehbar=1))
                             ~^~
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:16:39: style: Put spaces around all infix operators.
            list(D.unt=0, D.ob=70, D.b=10, Ndh=T), list(Wa=c(3,5), Begehbar=1))
                                     ~^~
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:16:47: style: Put spaces around all infix operators.
            list(D.unt=0, D.ob=70, D.b=10, Ndh=T), list(Wa=c(3,5), Begehbar=1))
                                             ~^~
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:16:59: style: Put spaces around all infix operators.
            list(D.unt=0, D.ob=70, D.b=10, Ndh=T), list(Wa=c(3,5), Begehbar=1))
                                                         ~^~
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:16:64: style: Commas should always have a space after.
            list(D.unt=0, D.ob=70, D.b=10, Ndh=T), list(Wa=c(3,5), Begehbar=1))
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:16:76: style: Put spaces around all infix operators.
            list(D.unt=0, D.ob=70, D.b=10, Ndh=T), list(Wa=c(3,5), Begehbar=1))
                                                                          ~^~
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:17:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:19:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:21:1: style: lines should not be more than 80 characters.
structure(list(Stratum = structure(list(Wa = c(3, 5), Begehbar = 1), .Names = c("Wa", 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:21:86: style: Trailing whitespace is superfluous.
structure(list(Stratum = structure(list(Wa = c(3, 5), Begehbar = 1), .Names = c("Wa", 
                                                                                     ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:22:79: style: Trailing whitespace is superfluous.
"Begehbar")), nTE = 13232L, HBF = 1323958.42086703, se.HBF = 15760.6334334331, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:23:67: style: Trailing whitespace is superfluous.
    BAGR.Liste = c("NB", "LB", "EI"), DKL = c("[0,10)", "[10,20)", 
                                                                  ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:24:71: style: Trailing whitespace is superfluous.
    "[20,30)", "[30,40)", "[40,50)", "[50,60)", "[60,70)", "[70,999)", 
                                                                      ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:25:63: style: Trailing whitespace is superfluous.
    NA), T.ThVN.Bagr.Tart.Tzg.Dkl = structure(c(0, 0, 0, 0, 0, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:26:61: style: Trailing whitespace is superfluous.
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:27:61: style: Trailing whitespace is superfluous.
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:28:73: style: Trailing whitespace is superfluous.
    0, 0, 0, 0, 0, 902.820663388418, 12739.6922488515, 902.820364752432, 
                                                                        ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:29:76: style: Trailing whitespace is superfluous.
    12739.6880348024, 812.857475495869, 12739.6922488515, 812.857206618003, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:30:61: style: Trailing whitespace is superfluous.
    12739.6880348024, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:31:61: style: Trailing whitespace is superfluous.
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:32:61: style: Trailing whitespace is superfluous.
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:33:61: style: Trailing whitespace is superfluous.
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:34:76: style: Trailing whitespace is superfluous.
    0, 0, 0, 0, 0, 0, 1120.37879444992, 50958.7689954059, 607.623849177768, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:35:76: style: Trailing whitespace is superfluous.
    25475.0891815706, 1194.38701216668, 50958.7689954059, 896.538878473662, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:36:61: style: Trailing whitespace is superfluous.
    31202.8184187216, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:37:61: style: Trailing whitespace is superfluous.
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:38:61: style: Trailing whitespace is superfluous.
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:39:61: style: Trailing whitespace is superfluous.
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:40:76: style: Trailing whitespace is superfluous.
    0, 0, 0, 0, 0, 0, 160.570203339728, 12739.6922488515, 160.570150226144, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:41:76: style: Trailing whitespace is superfluous.
    12739.6880348024, 678.039335752769, 50958.7689954059, 408.911795476705, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:42:61: style: Trailing whitespace is superfluous.
    31202.8184187216, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:43:61: style: Trailing whitespace is superfluous.
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:44:61: style: Trailing whitespace is superfluous.
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:45:61: style: Trailing whitespace is superfluous.
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:46:61: style: Trailing whitespace is superfluous.
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:47:61: style: Trailing whitespace is superfluous.
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:48:70: style: Trailing whitespace is superfluous.
    0, 0, 0, 0, 203133.302543154, 2359494.32839571, 26064.2559849021, 
                                                                     ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:49:75: style: Trailing whitespace is superfluous.
    252909.047506338, 40017.0373284119, 435411.882831177, 9248.1077805223, 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:50:76: style: Trailing whitespace is superfluous.
    85096.7159593257, 6963.44821620383, 104366.418515902, 3672.99945179733, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:51:76: style: Trailing whitespace is superfluous.
    67912.2881236771, 46998.7008311849, 676843.469826673, 8713.82093588569, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:52:76: style: Trailing whitespace is superfluous.
    117431.303935514, 16549.3122304432, 242054.152728178, 4605.84627384421, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:53:75: style: Trailing whitespace is superfluous.
    61047.025821844, 1207.83870925372, 38219.0767465544, 906.615055560677, 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:54:70: style: Trailing whitespace is superfluous.
    22063.3119823062, 0, 0, 0, 0, 108.362078714449, 12739.6922488515, 
                                                                     ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:55:61: style: Trailing whitespace is superfluous.
    108.362042870325, 12739.6880348024, 0, 0, 0, 0, 0, 0, 0, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:56:66: style: Trailing whitespace is superfluous.
    0, 0, 0, 0, 0, 0, 0, 0, 0, 17483.166278384, 267533.537225881, 
                                                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:57:73: style: Trailing whitespace is superfluous.
    5034.91475237705, 58315.070201858, 7962.594330457, 191095.383732772, 
                                                                        ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:58:70: style: Trailing whitespace is superfluous.
    2749.22057548439, 52491.0263311259, 0, 0, 0, 0, 44790.4128944809, 
                                                                     ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:59:76: style: Trailing whitespace is superfluous.
    840819.688424197, 7825.94831115505, 127092.458955749, 65024.3258221218, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:60:76: style: Trailing whitespace is superfluous.
    1228815.96503744, 13480.2648519571, 210149.342069902, 6167.08484398057, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:61:75: style: Trailing whitespace is superfluous.
    114657.230239663, 2783.15621016654, 52515.9887876395, 238101.99373693, 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:62:75: style: Trailing whitespace is superfluous.
    10578097.0040432, 20103.927414138, 716213.780835576, 199678.408530407, 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:63:76: style: Trailing whitespace is superfluous.
    7301362.76770355, 21339.7054566771, 633472.548894463, 24837.6641280266, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:64:75: style: Trailing whitespace is superfluous.
    837185.94946075, 7965.76969206185, 201196.063991125, 324783.624837086, 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:65:76: style: Trailing whitespace is superfluous.
    4471074.34340879, 29259.3723601041, 350534.448584373, 36335.8406703922, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:66:75: style: Trailing whitespace is superfluous.
    586025.843447168, 7255.17413838258, 98491.3889153492, 27255.116315484, 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:67:76: style: Trailing whitespace is superfluous.
    312201.222315279, 7345.75103038614, 68846.8018511072, 254365.307986771, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:68:75: style: Trailing whitespace is superfluous.
    3284763.94080301, 23980.950656613, 264052.981306033, 66088.5890392479, 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:69:74: style: Trailing whitespace is superfluous.
    1350407.37837826, 8442.1643648922, 142297.166912784, 11354.215277513, 
                                                                         ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:70:76: style: Trailing whitespace is superfluous.
    216574.768230475, 4294.36862603029, 58338.7887237506, 101.458127362337, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:71:61: style: Trailing whitespace is superfluous.
    12739.6922488515, 101.458093801909, 12739.6880348024, 0, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:72:61: style: Trailing whitespace is superfluous.
    0, 0, 0, 0, 0, 0, 0, 14706.1203231992, 957626.368662144, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:73:74: style: Trailing whitespace is superfluous.
    8708.0334538244, 714707.51760954, 10684.6209525331, 662463.996940277, 
                                                                         ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:74:70: style: Trailing whitespace is superfluous.
    6977.37422497137, 436476.734701792, 0, 0, 0, 0, 51002.3319180229, 
                                                                     ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:75:76: style: Trailing whitespace is superfluous.
    1163643.81269894, 8702.36640478852, 138899.633056287, 22266.3113643338, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:76:74: style: Trailing whitespace is superfluous.
    458628.920958653, 6269.967430938, 88134.3627972027, 5009.14377780974, 
                                                                         ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:77:76: style: Trailing whitespace is superfluous.
    76438.1534931088, 2762.81099738433, 31196.9841030521, 108685.401968051, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:78:76: style: Trailing whitespace is superfluous.
    2079187.91961443, 12144.6717536925, 181296.227975696, 91847.0326503796, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:79:76: style: Trailing whitespace is superfluous.
    2012818.29481171, 10381.0229223061, 193714.855703308, 10656.0272050327, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:80:76: style: Trailing whitespace is superfluous.
    216574.768230475, 3577.57100578254, 58338.7887237506, 1081548.93540618, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:81:76: style: Trailing whitespace is superfluous.
    33589252.8031822, 51845.9301622527, 1202080.20188997, 730404.557442536, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:82:75: style: Trailing whitespace is superfluous.
    25690277.6460549, 43060.395278643, 1457715.42038465, 147181.919153124, 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:83:75: style: Trailing whitespace is superfluous.
    4680823.3539489, 19126.8851315931, 560515.136838877, 30393.7692419388, 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:84:75: style: Trailing whitespace is superfluous.
    369451.075216693, 7999.7890992495, 75271.6159583027, 5232.83269594459, 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:85:76: style: Trailing whitespace is superfluous.
    50958.7689954059, 2918.63054231783, 25475.0891815706, 163.733361911703, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:86:76: style: Trailing whitespace is superfluous.
    12739.6922488515, 163.733307751806, 12739.6880348024, 133544.456131487, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:87:76: style: Trailing whitespace is superfluous.
    2201165.44583747, 19895.3282476137, 275187.794848683, 28659.4885025152, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:88:75: style: Trailing whitespace is superfluous.
    636984.612442574, 5365.7377335403, 103290.046438351, 1754.18574927677, 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:89:76: style: Trailing whitespace is superfluous.
    50958.7689954059, 901.281373943003, 25475.0891815706, 361.206928623508, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:90:61: style: Trailing whitespace is superfluous.
    12739.6922488515, 361.206809143094, 12739.6880348024, 0, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:91:61: style: Trailing whitespace is superfluous.
    0, 0, 0, 0, 0, 0, 0, 57399.8111466762, 2091610.89073167, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:92:76: style: Trailing whitespace is superfluous.
    34124.4367992961, 1410536.49516342, 12566.3987458071, 751641.842682237, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:93:76: style: Trailing whitespace is superfluous.
    10784.8736161026, 465439.202224235, 17289.9057075154, 1273969.22488515, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:94:75: style: Trailing whitespace is superfluous.
    17290.3839265797, 1274004.46142032, 48253.2813985186, 687943.38143798, 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:95:75: style: Trailing whitespace is superfluous.
    9047.8651021499, 101662.494075125, 15817.0242632398, 242054.152728178, 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:96:76: style: Trailing whitespace is superfluous.
    5294.87868199844, 58327.5548367163, 4879.27664173386, 89177.8457419603, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:97:75: style: Trailing whitespace is superfluous.
    2403.7369872744, 38209.5373005947, 99217.1477511763, 1974652.29857198, 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:98:74: style: Trailing whitespace is superfluous.
    11902.2612301585, 192504.797544136, 60895.54069182, 1083457.17851334, 
                                                                         ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:99:75: style: Trailing whitespace is superfluous.
    9383.7547736782, 135001.436169578, 10080.3245444197, 152876.306986218, 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:100:76: style: Trailing whitespace is superfluous.
    3480.67640747718, 47642.7195507419, 1918637.31318418, 59916787.6623371, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:101:75: style: Trailing whitespace is superfluous.
    71867.8686203679, 1841650.6967002, 969813.876757605, 30360959.6949239, 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:102:76: style: Trailing whitespace is superfluous.
    51111.5530452226, 1245077.91924257, 148699.734254685, 5120109.42728461, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:103:61: style: Trailing whitespace is superfluous.
    16675.9048975859, 465186.381826469, 0, 0, 0, 0, 0, 0, 0, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:104:72: style: Trailing whitespace is superfluous.
    0, 0, 0, 0, 0, 9220.53188712315, 229314.460479327, 3672.5426078816, 
                                                                       ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:105:74: style: Trailing whitespace is superfluous.
    69739.7867259564, 3299.74330227623, 91406.879929523, 1419.1834418082, 
                                                                         ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:106:75: style: Trailing whitespace is superfluous.
    34598.522868522, 351.827881833966, 12739.6922488515, 351.827765455962, 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:107:76: style: Trailing whitespace is superfluous.
    12739.6880348024, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2226.77564288996, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:108:76: style: Trailing whitespace is superfluous.
    114657.230239663, 1595.69132554201, 81569.3421568199, 2122.21576456543, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:109:63: style: Trailing whitespace is superfluous.
    191095.383732772, 1635.94012261046, 137793.66193128, 0, 0, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:110:64: style: Trailing whitespace is superfluous.
    0, 0, 12418.4659129478, 254793.844977029, 3689.34211273084, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:111:76: style: Trailing whitespace is superfluous.
    59696.8306543785, 1492.53236861068, 25479.3844977029, 1259.51310315503, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:112:75: style: Trailing whitespace is superfluous.
    18015.6292266913, 209.838868706755, 12739.6922488515, 209.83879929603, 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:113:74: style: Trailing whitespace is superfluous.
    12739.6880348024, 39785.98368439, 738902.150433385, 6488.38218169575, 
                                                                         ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:114:76: style: Trailing whitespace is superfluous.
    107822.310252395, 9835.68984727342, 140136.614737366, 3841.45945694419, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:115:76: style: Trailing whitespace is superfluous.
    42229.0638383567, 872.966143710307, 38219.0767465544, 539.897596347695, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:116:76: style: Trailing whitespace is superfluous.
    22063.3119823062, 890150.022873593, 32569286.2421512, 42632.2676272083, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:117:75: style: Trailing whitespace is superfluous.
    1156676.28584148, 295261.382130608, 10550823.8698078, 26497.166940552, 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:118:76: style: Trailing whitespace is superfluous.
    662650.941198597, 10302.7523084154, 573286.151198316, 2901.89449496759, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:119:75: style: Trailing whitespace is superfluous.
    105655.434560743, 166263.62999552, 361925.061389208, 34127.6991041804, 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:120:76: style: Trailing whitespace is superfluous.
    70743.0310543769, 22932.7070863699, 63698.4612442574, 10332.7153199182, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:121:75: style: Trailing whitespace is superfluous.
    28480.4177633477, 7248.07929515713, 12739.6922488515, 7248.0768976297, 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:122:76: style: Trailing whitespace is superfluous.
    12739.6880348024, 84208.6714339642, 281598.865256465, 20470.5443759627, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:123:76: style: Trailing whitespace is superfluous.
    62628.0477367948, 42106.4328957593, 127396.922488515, 14342.6092142145, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:124:76: style: Trailing whitespace is superfluous.
    40266.0929515833, 17370.7883064846, 38219.0767465544, 10153.2786486701, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:125:76: style: Trailing whitespace is superfluous.
    22063.3119823062, 70115.5821920716, 8393479.92582921, 4643.38399933668, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:126:76: style: Trailing whitespace is superfluous.
    516908.051778267, 34935.1659997424, 4101038.66510607, 2968.86514102735, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:127:76: style: Trailing whitespace is superfluous.
    290411.991402648, 1624.13043495189, 242054.152728178, 486.261425733275, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:128:75: style: Trailing whitespace is superfluous.
    61047.025821844, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14509.9623398788, 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:129:76: style: Trailing whitespace is superfluous.
    38219.0767465544, 9116.44702873692, 22063.3119823062, 24931.1329756062, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:130:76: style: Trailing whitespace is superfluous.
    76438.1534931088, 10541.1141253209, 31196.9841030521, 10369.1976598321, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:131:76: style: Trailing whitespace is superfluous.
    38219.0767465544, 6192.62923959488, 22063.3119823062, 40400.5002825695, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:132:76: style: Trailing whitespace is superfluous.
    152876.306986218, 12712.5263333493, 44104.3423908338, 28204.6862041913, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:133:76: style: Trailing whitespace is superfluous.
    89177.8457419603, 10953.9315448044, 33694.7033265289, 3444.71258768387, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:134:75: style: Trailing whitespace is superfluous.
    25479.3844977029, 2829.23070993034, 18015.6292266913, 127338.62098181, 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:135:76: style: Trailing whitespace is superfluous.
    2498200.07907202, 26017.3604532937, 245610.132656949, 78219.0346515289, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:136:76: style: Trailing whitespace is superfluous.
    649724.304691425, 24933.5402287349, 117258.993632588, 22261.4526783369, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:137:76: style: Trailing whitespace is superfluous.
    127396.922488515, 10074.1529069624, 44113.4214275915, 310392.092422534, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:138:75: style: Trailing whitespace is superfluous.
    763505.26856767, 45398.5659437017, 107271.832886191, 34963.3371875868, 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:139:76: style: Trailing whitespace is superfluous.
    89177.8457419603, 14347.4265348434, 33694.7033265289, 45287.6594725677, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:140:76: style: Trailing whitespace is superfluous.
    114657.230239663, 18305.0101340721, 42237.6840387262, 327645.223265599, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:141:76: style: Trailing whitespace is superfluous.
    1199194.35939562, 39441.0951517595, 133187.184825388, 86413.1740391592, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:142:76: style: Trailing whitespace is superfluous.
    358523.941680169, 18344.4933952269, 70032.7982698642, 10409.4616776309, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:143:75: style: Trailing whitespace is superfluous.
    26880.3060063682, 7560.3967547208, 19031.9748574314, 175553.071567647, 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:144:76: style: Trailing whitespace is superfluous.
    21390332.5028821, 7509.10271174178, 853365.645587666, 62726.1828164781, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:145:76: style: Trailing whitespace is superfluous.
    7230651.39856116, 3813.17393005562, 391495.155115382, 10252.6272668701, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:146:61: style: Trailing whitespace is superfluous.
    1053245.91478977, 1596.32715979257, 133024.088580215, 0, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:147:67: style: Trailing whitespace is superfluous.
    0, 0, 0, 12679.2633073218, 140136.614737366, 12679.2591132615, 
                                                                  ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:148:70: style: Trailing whitespace is superfluous.
    140136.568382827, 0, 0, 0, 0, 47409.2599935699, 127396.922488515, 
                                                                     ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:149:76: style: Trailing whitespace is superfluous.
    15621.9051201496, 40266.0929515833, 50684.1957845165, 140136.614737366, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:150:76: style: Trailing whitespace is superfluous.
    17868.9381256852, 45912.1938174026, 9602.01220781487, 25479.3844977029, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:151:76: style: Trailing whitespace is superfluous.
    6789.60081051797, 18015.6292266913, 115699.613587539, 439152.242671693, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:152:76: style: Trailing whitespace is superfluous.
    26011.7081821762, 83578.3771091555, 85806.3569050595, 318492.306221287, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:153:69: style: Trailing whitespace is superfluous.
    19755.6895708009, 63612.651856634, 0, 0, 0, 0, 567851.892791107, 
                                                                    ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:154:76: style: Trailing whitespace is superfluous.
    7947339.39646349, 55681.4537399587, 478978.428936003, 296602.867211839, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:155:76: style: Trailing whitespace is superfluous.
    2679888.03212005, 43039.7465629231, 246297.253996788, 49674.9570184251, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:156:75: style: Trailing whitespace is superfluous.
    675203.689189128, 15276.289110254, 190972.209901348, 63567.3956471126, 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:157:76: style: Trailing whitespace is superfluous.
    178355.691483921, 18748.7594316462, 50926.5930362001, 9679.74406431615, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:158:61: style: Trailing whitespace is superfluous.
    25479.3844977029, 6961.35427752013, 18015.6292266913, 0, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:159:65: style: Trailing whitespace is superfluous.
    0, 0, 0, 168169.02738044, 853559.380673049, 26331.393277172, 
                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:160:75: style: Trailing whitespace is superfluous.
    114306.74911419, 28588.5416392157, 127396.922488515, 10640.4427213945, 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:161:76: style: Trailing whitespace is superfluous.
    44113.4214275915, 1718.14524526071, 12739.6922488515, 1718.14467693078, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:162:76: style: Trailing whitespace is superfluous.
    12739.6880348024, 357602.793187748, 38592599.0934723, 11652.8053177053, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:163:76: style: Trailing whitespace is superfluous.
    1109671.84375902, 93334.7828714033, 10352892.2717947, 5271.45797596877, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:164:76: style: Trailing whitespace is superfluous.
    508116.856564191, 20707.4854324813, 2403429.27564106, 2228.66348571609, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:165:76: style: Trailing whitespace is superfluous.
    205265.629222011, 1568.89877725293, 25479.3844977029, 1568.89825829091, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:166:76: style: Trailing whitespace is superfluous.
    25479.3760696048, 240.137581960538, 12739.6922488515, 240.137502527571, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:167:70: style: Trailing whitespace is superfluous.
    12739.6880348024, 0, 0, 0, 0, 60780.6005035335, 140136.614737366, 
                                                                     ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:168:76: style: Trailing whitespace is superfluous.
    25284.7996031839, 42229.0638383567, 29110.8789991455, 89177.8457419603, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:169:75: style: Trailing whitespace is superfluous.
    18199.7493337568, 45926.4646761648, 6092.9077387116, 25479.3844977029, 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:170:75: style: Trailing whitespace is superfluous.
    4477.3309559864, 18015.6292266913, 183488.867311361, 873801.037372858, 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:171:75: style: Trailing whitespace is superfluous.
    28549.1301873105, 113235.600560577, 81494.8887672668, 343971.69071899, 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:172:76: style: Trailing whitespace is superfluous.
    18739.4969451283, 68512.3914368891, 20244.0767368962, 76438.1534931088, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:173:74: style: Trailing whitespace is superfluous.
    9324.63667113911, 31196.9841030521, 1404271.92200837, 15242395.10551, 
                                                                         ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:174:76: style: Trailing whitespace is superfluous.
    103114.804130317, 912925.173447698, 506173.417244307, 3874435.69748758, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:175:75: style: Trailing whitespace is superfluous.
    59649.2062080541, 333009.331158763, 76151.7017926529, 689237.62563725, 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:176:61: style: Trailing whitespace is superfluous.
    25148.8323472457, 116935.853294717, 0, 0, 0, 0, 0, 0, 0, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:177:73: style: Trailing whitespace is superfluous.
    0, 0, 0, 0, 0, 12472.1223283385, 101917.537990812, 5412.25797514869, 
                                                                        ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:178:76: style: Trailing whitespace is superfluous.
    36019.1316023158, 4458.59654023834, 38219.0767465544, 2681.05469648152, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:179:70: style: Trailing whitespace is superfluous.
    22065.1649791879, 0, 0, 0, 0, 289121.153636361, 35456036.0550808, 
                                                                     ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:180:75: style: Trailing whitespace is superfluous.
    11129.7169568565, 1129141.88987225, 49112.1128215798, 6502244.8731775, 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:181:75: style: Trailing whitespace is superfluous.
    3488.04907266456, 365140.69149823, 3781.56643042062, 496847.997705207, 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:182:76: style: Trailing whitespace is superfluous.
    796.985297415562, 90832.3939557068, 230.532060387918, 12739.6922488515, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:183:61: style: Trailing whitespace is superfluous.
    230.531984132276, 12739.6880348024, 0, 0, 0, 0, 0, 0, 0, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:184:61: style: Trailing whitespace is superfluous.
    0, 6364.53146879121, 12739.6922488515, 6364.52936352467, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:185:76: style: Trailing whitespace is superfluous.
    12739.6880348024, 16221.1484061796, 41391.7163722815, 9950.12711855073, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:186:70: style: Trailing whitespace is superfluous.
    24034.8515655758, 0, 0, 0, 0, 50824.8592097338, 254793.844977029, 
                                                                     ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:187:76: style: Trailing whitespace is superfluous.
    14456.7807378332, 59696.8306543785, 12024.7691943321, 50958.7689954059, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:188:70: style: Trailing whitespace is superfluous.
    7374.76489213626, 25475.0891815706, 0, 0, 0, 0, 522299.534889394, 
                                                                     ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:189:76: style: Trailing whitespace is superfluous.
    7159707.04385453, 47482.0738161152, 401806.285891881, 106600.032312587, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:190:76: style: Trailing whitespace is superfluous.
    1317914.17385992, 20163.1677930552, 161607.756691475, 8260.10707799066, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:191:76: style: Trailing whitespace is superfluous.
    101917.537990812, 6698.42838406445, 36019.1316023158, 47475.4636388567, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:192:76: style: Trailing whitespace is superfluous.
    50958.7689954059, 24516.3559979103, 25475.0891815706, 49549.6079399329, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:193:75: style: Trailing whitespace is superfluous.
    38219.0767465544, 31124.3537217167, 22063.3119823062, 7794.3793002364, 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:194:76: style: Trailing whitespace is superfluous.
    12739.6922488515, 7794.37672200326, 12739.6880348024, 52679.3934739561, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:195:75: style: Trailing whitespace is superfluous.
    101917.537990812, 22492.158011537, 36019.1316023158, 41197.2279279697, 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:196:76: style: Trailing whitespace is superfluous.
    50958.7689954059, 20654.5088111539, 25475.0891815706, 9569.59235363722, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:197:76: style: Trailing whitespace is superfluous.
    12739.6922488515, 9569.58918819721, 12739.6880348024, 102817.370496435, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:198:76: style: Trailing whitespace is superfluous.
    5838172.03442278, 6925.67060881539, 342669.939337089, 60773.7403756824, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:199:75: style: Trailing whitespace is superfluous.
    3123049.15995522, 5847.89869399494, 249844.18418676, 3983.48211086264, 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:200:61: style: Trailing whitespace is superfluous.
    267533.537225881, 1161.07947129074, 63638.9725684907, 0, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:201:73: style: Trailing whitespace is superfluous.
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 38336.4820558091, 25479.3844977029, 
                                                                        ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:202:61: style: Trailing whitespace is superfluous.
    27467.6237195107, 18015.6292266913, 0, 0, 0, 0, 0, 0, 0, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:203:73: style: Trailing whitespace is superfluous.
    0, 0, 0, 0, 0, 10237.9395786771, 12739.6922488515, 10237.9361921605, 
                                                                        ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:204:76: style: Trailing whitespace is superfluous.
    12739.6880348024, 11045.4861083368, 12739.6922488515, 11045.4824546991, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:205:76: style: Trailing whitespace is superfluous.
    12739.6880348024, 63491.2727564137, 1082873.84115238, 12109.6827615206, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:206:76: style: Trailing whitespace is superfluous.
    143118.310358162, 36809.9371765724, 114657.230239663, 24018.8796446677, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:207:76: style: Trailing whitespace is superfluous.
    38201.9141469708, 2403.87710530213, 12739.6922488515, 2403.87631014509, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:208:76: style: Trailing whitespace is superfluous.
    12739.6880348024, 160289.444218391, 152876.306986218, 50483.1602550697, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:209:76: style: Trailing whitespace is superfluous.
    47642.7195507419, 37341.8618594245, 50958.7689954059, 18916.3231891032, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:210:76: style: Trailing whitespace is superfluous.
    25475.0891815706, 33338.5655165324, 38219.0767465544, 19267.9374998236, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:211:76: style: Trailing whitespace is superfluous.
    22063.3119823062, 324289.059519344, 598765.535696019, 59655.5632442722, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:212:75: style: Trailing whitespace is superfluous.
    94272.3264783496, 62560.9714169795, 121517.034433344, 22065.038820594, 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:213:76: style: Trailing whitespace is superfluous.
    41000.8509023382, 15273.4254321766, 12739.6922488515, 15273.4203800166, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:214:74: style: Trailing whitespace is superfluous.
    12739.6880348024, 275996.433722962, 14498176.104854, 12206.455511121, 
                                                                         ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:215:76: style: Trailing whitespace is superfluous.
    566357.903462822, 86571.7845301014, 4077051.12169971, 6918.01792239834, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:216:76: style: Trailing whitespace is superfluous.
    271589.959597996, 17936.8758610723, 942737.226415009, 2720.12896518806, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:217:75: style: Trailing whitespace is superfluous.
    119097.823256713, 4902.8086164909, 50958.7689954059, 4902.80699473461, 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:218:64: style: Trailing whitespace is superfluous.
    50958.7521392097, 0, 0, 0, 0, 0, 0, 0, 0, 55747.3820732001, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:219:76: style: Trailing whitespace is superfluous.
    63698.4612442574, 25799.4227702796, 28480.4177633477, 46458.1929193779, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:220:76: style: Trailing whitespace is superfluous.
    50958.7689954059, 26898.3464202331, 25475.0891815706, 27984.1958278497, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:221:76: style: Trailing whitespace is superfluous.
    25479.3844977029, 19903.2720234219, 18015.6292266913, 95157.7271348752, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:222:76: style: Trailing whitespace is superfluous.
    229314.460479327, 28118.1679886559, 59708.4166490029, 94957.2171313102, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:223:75: style: Trailing whitespace is superfluous.
    140136.614737366, 38211.5424619359, 45912.1938174026, 41143.873370669, 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:224:75: style: Trailing whitespace is superfluous.
    50958.7689954059, 21387.0748226294, 25475.0891815706, 367978.10039206, 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:225:76: style: Trailing whitespace is superfluous.
    3924638.27010087, 46186.0279718094, 270555.871299501, 144009.789515518, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:226:75: style: Trailing whitespace is superfluous.
    790916.71373361, 39037.9547759529, 177334.494637404, 14173.2943351096, 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:227:75: style: Trailing whitespace is superfluous.
    267533.537225881, 5818.1214247281, 111760.669511257, 18378.9522098356, 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:228:76: style: Trailing whitespace is superfluous.
    25479.3844977029, 13412.9124407885, 18015.6292266913, 19163.2255766822, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:229:61: style: Trailing whitespace is superfluous.
    25479.3844977029, 13630.0631919807, 18015.6292266913, 0, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:230:67: style: Trailing whitespace is superfluous.
    0, 0, 0, 211101.693045026, 662463.996940277, 35378.9616937155, 
                                                                  ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:231:74: style: Trailing whitespace is superfluous.
    96774.03894501, 47019.2379079645, 114657.230239663, 17894.6723348076, 
                                                                         ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:232:70: style: Trailing whitespace is superfluous.
    38201.9141469708, 0, 0, 0, 0, 663170.961670872, 29064544.4453813, 
                                                                     ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:233:76: style: Trailing whitespace is superfluous.
    23084.9029463698, 885641.574709903, 109655.695437692, 5719788.51110065, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:234:75: style: Trailing whitespace is superfluous.
    7604.39603457724, 335294.97984386, 32400.1768052823, 1698649.58643499, 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:235:76: style: Trailing whitespace is superfluous.
    4145.02047919255, 176438.467035773, 7844.49378434709, 101917.537990812, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:236:61: style: Trailing whitespace is superfluous.
    7844.49118953703, 101917.504278419, 0, 0, 0, 0, 0, 0, 0, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:237:61: style: Trailing whitespace is superfluous.
    0, 84662.6439386842, 89177.8457419603, 32219.4392623038, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:238:69: style: Trailing whitespace is superfluous.
    33694.7033265289, 0, 0, 0, 0, 16323.151358479, 12739.6922488515, 
                                                                    ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:239:76: style: Trailing whitespace is superfluous.
    16323.1459590895, 12739.6880348024, 254527.573089746, 573286.151198316, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:240:76: style: Trailing whitespace is superfluous.
    52490.8267635098, 97672.3722958842, 42827.9867320537, 76438.1534931088, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:241:70: style: Trailing whitespace is superfluous.
    32477.6145669484, 44126.6239646124, 0, 0, 0, 0, 829928.631352633, 
                                                                     ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:242:76: style: Trailing whitespace is superfluous.
    6041063.00648069, 71827.1960893242, 342146.786069638, 325679.089969806, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:243:75: style: Trailing whitespace is superfluous.
    1189674.98868677, 68964.9510512122, 156511.131953554, 33637.895934437, 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:244:61: style: Trailing whitespace is superfluous.
    216574.768230475, 13513.6939494927, 63660.7075571729, 0, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:245:73: style: Trailing whitespace is superfluous.
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 28577.7558870737, 114657.230239663, 
                                                                        ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:246:61: style: Trailing whitespace is superfluous.
    10150.7156060821, 38201.9141469708, 0, 0, 0, 0, 0, 0, 0, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:247:61: style: Trailing whitespace is superfluous.
    0, 386128.326788521, 21634257.4889048, 14941.4769795324, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:248:75: style: Trailing whitespace is superfluous.
    712699.907070444, 53477.8606729507, 3593687.86443931, 4190.4429193639, 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:249:76: style: Trailing whitespace is superfluous.
    244829.467908967, 5016.69690631511, 321006.359280034, 1089.51470713163, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:250:76: style: Trailing whitespace is superfluous.
    66645.6197527592, 5883.37072299902, 101917.537990812, 5883.36877689135, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:251:61: style: Trailing whitespace is superfluous.
    101917.504278419, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:252:67: style: Trailing whitespace is superfluous.
    0, 0, 0, 10047.1815292554, 12739.6922488515, 10047.1782058379, 
                                                                  ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:253:76: style: Trailing whitespace is superfluous.
    12739.6880348024, 8664.74225854753, 38219.0767465544, 5014.60858287361, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:254:76: style: Trailing whitespace is superfluous.
    22063.3119823062, 15173.9932680069, 50958.7689954059, 7765.73033077976, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:255:70: style: Trailing whitespace is superfluous.
    25475.0891815706, 0, 0, 0, 0, 327046.550630856, 2936803.55138423, 
                                                                     ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:256:76: style: Trailing whitespace is superfluous.
    46452.1791836675, 232293.698723996, 83404.7112819949, 433224.646587292, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:257:70: style: Trailing whitespace is superfluous.
    29389.4304501718, 84397.0095836321, 0, 0, 0, 0, 100537.436300755, 
                                                                     ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:258:63: style: Trailing whitespace is superfluous.
    63698.4612442574, 45653.962617087, 28480.4177633477, 0, 0, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:259:75: style: Trailing whitespace is superfluous.
    0, 0, 0, 0, 0, 0, 7871.6884027901, 25479.3844977029, 5776.76757823015, 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:260:75: style: Trailing whitespace is superfluous.
    18015.6292266913, 53117.9820825069, 55597.246116494, 33289.7942983526, 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:261:70: style: Trailing whitespace is superfluous.
    28082.7584567034, 0, 0, 0, 0, 137480.764238767, 4109960.84781971, 
                                                                     ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:262:73: style: Trailing whitespace is superfluous.
    10062.1394968082, 263864.45553398, 44215.9637854285, 1390343.107798, 
                                                                        ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:263:75: style: Trailing whitespace is superfluous.
    5036.27089084592, 143860.360781895, 6359.4144783931, 226817.319308443, 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:264:61: style: Trailing whitespace is superfluous.
    1886.57141570925, 61390.7929403895, 0, 0, 0, 0, 0, 0, 0, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:265:73: style: Trailing whitespace is superfluous.
    0, 0, 0, 0, 0, 142785.551174141, 76438.1534931088, 58801.4130244575, 
                                                                        ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:266:76: style: Trailing whitespace is superfluous.
    31196.9841030521, 47146.0894442278, 25479.3844977029, 35524.7894195561, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:267:69: style: Trailing whitespace is superfluous.
    18015.6292266913, 0, 0, 0, 0, 4514.7963116115, 12739.6922488515, 
                                                                    ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:268:61: style: Trailing whitespace is superfluous.
    4514.79481820234, 12739.6880348024, 0, 0, 0, 0, 0, 0, 0, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:269:61: style: Trailing whitespace is superfluous.
    0, 44379.6737672165, 573286.151198316, 9755.54633413914, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:270:76: style: Trailing whitespace is superfluous.
    95996.1280544328, 6459.27521346044, 50958.7689954059, 3408.83943390122, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:271:76: style: Trailing whitespace is superfluous.
    25475.0891815706, 640.566961670213, 25479.3844977029, 506.427092046608, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:272:76: style: Trailing whitespace is superfluous.
    18015.6292266913, 97704.5728502825, 63698.4612442574, 44094.9335589875, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:273:76: style: Trailing whitespace is superfluous.
    28480.4177633477, 42550.9718827067, 25479.3844977029, 31189.6011110021, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:274:69: style: Trailing whitespace is superfluous.
    18015.6292266913, 0, 0, 0, 0, 182211.44498006, 255228.526981755, 
                                                                    ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:275:76: style: Trailing whitespace is superfluous.
    53109.3258703211, 57011.5484016026, 88744.5397493389, 76438.1534931088, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:276:70: style: Trailing whitespace is superfluous.
    39119.3887663861, 31199.6050774124, 0, 0, 0, 0, 429330.652001999, 
                                                                     ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:277:75: style: Trailing whitespace is superfluous.
    11611549.815484, 20690.2202176227, 493270.116626128, 89026.6286816837, 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:278:75: style: Trailing whitespace is superfluous.
    2788617.74261904, 7477.65359399928, 210596.671423017, 24824.330844889, 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:279:61: style: Trailing whitespace is superfluous.
    726576.983942886, 4631.07553028724, 105600.462689842, 0, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:280:73: style: Trailing whitespace is superfluous.
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 73390.6202405876, 38219.0767465544, 
                                                                        ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:281:76: style: Trailing whitespace is superfluous.
    43742.5298048956, 22063.3119823062, 24464.6165544649, 25479.3844977029, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:282:76: style: Trailing whitespace is superfluous.
    20353.1076337222, 18015.6292266913, 10356.2827203767, 12739.6922488515, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:283:76: style: Trailing whitespace is superfluous.
    10356.2792947144, 12739.6880348024, 81421.4419992531, 101917.537990812, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:284:75: style: Trailing whitespace is superfluous.
    52671.5662824293, 36019.1316023158, 26115.651738075, 12739.6922488515, 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:285:76: style: Trailing whitespace is superfluous.
    26115.6430995117, 12739.6880348024, 19584.7576858639, 12739.6922488515, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:286:76: style: Trailing whitespace is superfluous.
    19584.7512075967, 12739.6880348024, 247875.150780404, 2063830.14431394, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:287:76: style: Trailing whitespace is superfluous.
    33939.9373419279, 180651.937548714, 71088.7654924331, 345027.485023808, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:288:74: style: Trailing whitespace is superfluous.
    28266.2632529117, 79655.9071855292, 5476.237303188, 63698.4612442574, 
                                                                         ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:289:76: style: Trailing whitespace is superfluous.
    2796.52370099546, 33701.1855049277, 27972.4533477513, 12739.6922488515, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:290:61: style: Trailing whitespace is superfluous.
    27972.4440949932, 12739.6880348024, 0, 0, 0, 0, 0, 0, 0, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:291:61: style: Trailing whitespace is superfluous.
    0, 231032.162039325, 471368.613207505, 50675.4441410516, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:292:74: style: Trailing whitespace is superfluous.
    85319.3033459796, 52116.458857777, 89177.8457419603, 23632.445911489, 
                                                                         ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:293:70: style: Trailing whitespace is superfluous.
    33694.7033265289, 0, 0, 0, 0, 770687.028676491, 18592871.3472721, 
                                                                     ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:294:76: style: Trailing whitespace is superfluous.
    32318.4615829052, 639329.406715909, 130170.450019269, 3560533.81686138, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:295:73: style: Trailing whitespace is superfluous.
    10694.6653706568, 242873.92995668, 28463.70457251, 918658.763425971, 
                                                                        ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:296:61: style: Trailing whitespace is superfluous.
    4397.44647629898, 121968.238212707, 0, 0, 0, 0, 0, 0, 0, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:297:73: style: Trailing whitespace is superfluous.
    0, 0, 0, 0, 0, 21974.9959441779, 12739.6922488515, 21974.9886752652, 
                                                                        ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:298:76: style: Trailing whitespace is superfluous.
    12739.6880348024, 27931.4092442485, 12739.6922488515, 27931.4000050671, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:299:70: style: Trailing whitespace is superfluous.
    12739.6880348024, 0, 0, 0, 0, 113828.579225002, 229314.460479327, 
                                                                     ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:300:75: style: Trailing whitespace is superfluous.
    35512.566821082, 59708.4166490029, 43822.0818110635, 25479.3844977029, 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:301:70: style: Trailing whitespace is superfluous.
    30995.1554128858, 18015.6292266913, 0, 0, 0, 0, 580963.225392951, 
                                                                     ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:302:76: style: Trailing whitespace is superfluous.
    3113386.78442699, 76020.4478103185, 226557.136142238, 185831.534384587, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:303:76: style: Trailing whitespace is superfluous.
    471368.613207505, 66866.2276167896, 104165.139641501, 8286.59701857468, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:304:61: style: Trailing whitespace is superfluous.
    25479.3844977029, 7567.16865766009, 18015.6292266913, 0, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:305:73: style: Trailing whitespace is superfluous.
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 27713.0114260573, 63698.4612442574, 
                                                                        ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:306:76: style: Trailing whitespace is superfluous.
    15967.4151509257, 28480.4177633477, 25541.1807317991, 38219.0767465544, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:307:69: style: Trailing whitespace is superfluous.
    15712.0739282667, 22063.3119823062, 0, 0, 0, 0, 496033.21170661, 
                                                                    ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:308:76: style: Trailing whitespace is superfluous.
    14787362.9565385, 22626.3877386887, 578670.845057067, 76109.0442465772, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:309:76: style: Trailing whitespace is superfluous.
    2484498.78547617, 7888.12301863486, 198520.489071599, 4008.19624383183, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:310:63: style: Trailing whitespace is superfluous.
    191095.383732772, 1128.3993026707, 49301.8471949298, 0, 0, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:311:64: style: Trailing whitespace is superfluous.
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 16952.9261968872, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:312:61: style: Trailing whitespace is superfluous.
    12739.6922488515, 16952.9205891801, 12739.6880348024, 0, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:313:67: style: Trailing whitespace is superfluous.
    0, 0, 0, 19461.8800672831, 38219.0767465544, 11914.9509738593, 
                                                                  ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:314:75: style: Trailing whitespace is superfluous.
    22063.3119823062, 18785.050958979, 38219.0767465544, 14083.7755235921, 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:315:70: style: Trailing whitespace is superfluous.
    28485.5304337363, 0, 0, 0, 0, 238494.030796834, 1350857.14162217, 
                                                                     ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:316:76: style: Trailing whitespace is superfluous.
    58546.8339889528, 150108.164357432, 39079.1122147414, 127396.922488515, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:317:76: style: Trailing whitespace is superfluous.
    21026.1766387621, 44113.4214275915, 185.005991741451, 12739.6922488515, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:318:76: style: Trailing whitespace is superfluous.
    185.005930544971, 12739.6880348024, 34315.7648589703, 12739.6922488515, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:319:61: style: Trailing whitespace is superfluous.
    34315.7535079649, 12739.6880348024, 0, 0, 0, 0, 0, 0, 0, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:320:61: style: Trailing whitespace is superfluous.
    0, 39052.4220065774, 50958.7689954059, 20658.3127117136, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:321:76: style: Trailing whitespace is superfluous.
    25475.0891815706, 16195.7014133914, 25479.3844977029, 16195.6960561599, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:322:70: style: Trailing whitespace is superfluous.
    25479.3760696048, 0, 0, 0, 0, 139730.673765622, 2248666.18542349, 
                                                                     ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:323:76: style: Trailing whitespace is superfluous.
    13893.6060805989, 186634.800309387, 50758.5433402935, 1032790.68054347, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:324:76: style: Trailing whitespace is superfluous.
    6736.05692390203, 119790.381735687, 9210.67677459586, 203835.075981624, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:325:61: style: Trailing whitespace is superfluous.
    2598.64309236798, 54009.8269419612, 0, 0, 0, 0, 0, 0, 0, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:326:73: style: Trailing whitespace is superfluous.
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7025.46597649916, 
                                                                        ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:327:74: style: Trailing whitespace is superfluous.
    12739.6922488515, 7025.463652608, 12739.6880348024, 5462.52928094498, 
                                                                         ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:328:61: style: Trailing whitespace is superfluous.
    12739.6922488515, 5462.52747404369, 12739.6880348024, 0, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:329:67: style: Trailing whitespace is superfluous.
    0, 0, 0, 37110.4096263531, 254793.844977029, 11481.3164122643, 
                                                                  ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:330:76: style: Trailing whitespace is superfluous.
    56912.8797524321, 43545.1452764267, 38219.0767465544, 39007.6332786083, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:331:76: style: Trailing whitespace is superfluous.
    22063.3119823062, 1040.99636431133, 12739.6922488515, 1040.99601996944, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:332:76: style: Trailing whitespace is superfluous.
    12739.6880348024, 61723.1137406794, 25479.3844977029, 43644.7481185072, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:333:70: style: Trailing whitespace is superfluous.
    18015.6292266913, 0, 0, 0, 0, 43963.8544570795, 12739.6922488515, 
                                                                     ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:334:74: style: Trailing whitespace is superfluous.
    43963.8399146686, 12739.6880348024, 153114.5297402, 165615.999235069, 
                                                                         ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:335:76: style: Trailing whitespace is superfluous.
    53016.3221951074, 45902.6774467158, 40030.3403899857, 38219.0767465544, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:336:76: style: Trailing whitespace is superfluous.
    27559.1100152312, 22063.3119823062, 5725.67492418866, 12739.6922488515, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:337:76: style: Trailing whitespace is superfluous.
    5725.67303024378, 12739.6880348024, 445307.657055403, 7074826.10776898, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:338:75: style: Trailing whitespace is superfluous.
    25069.5844768594, 350604.89810008, 76053.4708252778, 1414105.83962251, 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:339:76: style: Trailing whitespace is superfluous.
    8480.56554434316, 140509.194750219, 19811.4406040343, 345861.292464912, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:340:61: style: Trailing whitespace is superfluous.
    4849.38991389865, 68887.7625807148, 0, 0, 0, 0, 0, 0, 0, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:341:73: style: Trailing whitespace is superfluous.
    0, 0, 0, 0, 0, 38253.7271807082, 12739.6922488515, 38253.7145270994, 
                                                                        ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:342:76: style: Trailing whitespace is superfluous.
    12739.6880348024, 78246.9766573944, 25479.3844977029, 55347.2019623833, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:343:70: style: Trailing whitespace is superfluous.
    18015.6292266913, 0, 0, 0, 0, 28350.5705731409, 38219.0767465544, 
                                                                     ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:344:76: style: Trailing whitespace is superfluous.
    16597.1083487399, 22063.3119823062, 7261.21900100291, 12739.6922488515, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:345:70: style: Trailing whitespace is superfluous.
    7261.21659912911, 12739.6880348024, 0, 0, 0, 0, 138238.717862857, 
                                                                     ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:346:76: style: Trailing whitespace is superfluous.
    929997.534166157, 22041.2239812221, 118425.712969465, 16765.6105605264, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:347:76: style: Trailing whitespace is superfluous.
    115091.912244389, 7341.68867982018, 46042.5031343143, 2143.72812814036, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:348:61: style: Trailing whitespace is superfluous.
    25479.3844977029, 1515.82994582495, 18015.6292266913, 0, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:349:73: style: Trailing whitespace is superfluous.
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 63643.7727902195, 89177.8457419603, 
                                                                        ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:350:76: style: Trailing whitespace is superfluous.
    25379.2503661074, 33694.7033265289, 90649.8433420588, 76438.1534931088, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:351:70: style: Trailing whitespace is superfluous.
    42180.6410103938, 31196.9841030521, 0, 0, 0, 0, 725870.840789967, 
                                                                     ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:352:76: style: Trailing whitespace is superfluous.
    11145178.9488027, 34150.5909564771, 454449.913092282, 108955.819960125, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:353:76: style: Trailing whitespace is superfluous.
    1961912.60632313, 11235.7843074724, 175309.228199018, 29622.4705025537, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:354:76: style: Trailing whitespace is superfluous.
    535067.074451762, 5398.71512197061, 88086.0198797812, 1250.71649144251, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:355:61: style: Trailing whitespace is superfluous.
    12739.6922488515, 1250.71607772917, 12739.6880348024, 0, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:356:61: style: Trailing whitespace is superfluous.
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:357:76: style: Trailing whitespace is superfluous.
    19275.3792790392, 25479.3844977029, 13785.9898839785, 18015.6292266913, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:358:64: style: Trailing whitespace is superfluous.
    0, 0, 0, 0, 0, 0, 0, 0, 225338.114518415, 891778.457419603, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:359:76: style: Trailing whitespace is superfluous.
    41765.1817166444, 110665.993809774, 43692.1302566909, 178355.691483921, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:360:61: style: Trailing whitespace is superfluous.
    14362.4846557659, 47632.7846111479, 0, 0, 0, 0, 0, 0, 0, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:361:67: style: Trailing whitespace is superfluous.
    0, 0, 0, 0, 0, 0, 0, 0, 0, 21635.1728068428, 38219.0767465544, 
                                                                  ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:362:76: style: Trailing whitespace is superfluous.
    12660.0991983386, 22063.3119823062, 6428.67029023774, 12739.6922488515, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:363:69: style: Trailing whitespace is superfluous.
    6428.66816375529, 12739.6880348024, 0, 0, 0, 0, 431155.48117669, 
                                                                    ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:364:76: style: Trailing whitespace is superfluous.
    8502531.33841313, 23993.8832284185, 402840.817355217, 49203.2931502228, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:365:76: style: Trailing whitespace is superfluous.
    1173088.43799038, 6980.99034281779, 135566.303876136, 2323.07464901956, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:366:63: style: Trailing whitespace is superfluous.
    65727.304453736, 1225.58963175387, 34518.9304198918, 0, 0, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:367:61: style: Trailing whitespace is superfluous.
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:368:67: style: Trailing whitespace is superfluous.
    0, 0, 0, 26522.5967467554, 12739.6922488515, 26522.5879735825, 
                                                                  ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:369:64: style: Trailing whitespace is superfluous.
    12739.6880348024, 0, 0, 0, 0, 0, 0, 0, 0, 30822.2572245112, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:370:75: style: Trailing whitespace is superfluous.
    232651.62755352, 9500.13485585712, 54880.1153753512, 3727.63544892778, 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:371:61: style: Trailing whitespace is superfluous.
    38219.0767465544, 2335.08377838449, 22063.3119823062, 0, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:372:67: style: Trailing whitespace is superfluous.
    0, 0, 0, 62500.7132159063, 12739.6922488515, 62500.6925418535, 
                                                                  ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:373:64: style: Trailing whitespace is superfluous.
    12739.6880348024, 0, 0, 0, 0, 0, 0, 0, 0, 26238.5896408795, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:374:61: style: Trailing whitespace is superfluous.
    12739.6922488515, 26238.5809616507, 12739.6880348024, 0, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:375:61: style: Trailing whitespace is superfluous.
    0, 0, 0, 0, 0, 0, 0, 118705.290336615, 1556428.71194315, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:376:76: style: Trailing whitespace is superfluous.
    13657.3642927542, 158432.203112884, 35868.6734350095, 465609.254796947, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:377:76: style: Trailing whitespace is superfluous.
    7884.92884417465, 89743.2205613608, 5727.78125012441, 63698.4612442574, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:378:61: style: Trailing whitespace is superfluous.
    2764.81543265108, 28480.4177633477, 0, 0, 0, 0, 0, 0, 0, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:379:73: style: Trailing whitespace is superfluous.
    0, 0, 0, 0, 0, 53488.2802447198, 12739.6922488515, 53488.2625518091, 
                                                                        ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:380:63: style: Trailing whitespace is superfluous.
    12739.6880348024, 0, 0, 0, 0, 0, 0, 0, 0, 11477.806927817, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:381:61: style: Trailing whitespace is superfluous.
    12739.6922488515, 11477.8031311757, 12739.6880348024, 0, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:382:61: style: Trailing whitespace is superfluous.
    0, 0, 0, 0, 0, 0, 0, 57247.6714047368, 114657.230239663, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:383:76: style: Trailing whitespace is superfluous.
    44552.3476870817, 42237.6840387262, 8023.18658079838, 44267.5107521634, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:384:70: style: Trailing whitespace is superfluous.
    5474.50834059686, 26027.8498920826, 0, 0, 0, 0, 69113.2278010205, 
                                                                     ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:385:75: style: Trailing whitespace is superfluous.
    12739.6922488515, 69113.204939673, 12739.6880348024, 55462.0179607852, 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:386:61: style: Trailing whitespace is superfluous.
    12739.6922488515, 55461.9996149995, 12739.6880348024, 0, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:387:67: style: Trailing whitespace is superfluous.
    0, 0, 0, 30299.9279579589, 25479.3844977029, 22553.8862409117, 
                                                                  ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:388:76: style: Trailing whitespace is superfluous.
    18015.6292266913, 48005.9291109888, 12739.6922488515, 48005.9132315361, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:389:70: style: Trailing whitespace is superfluous.
    12739.6880348024, 0, 0, 0, 0, 360894.144287213, 4191395.09129008, 
                                                                     ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:390:75: style: Trailing whitespace is superfluous.
    26006.3086276599, 273738.02333964, 82957.9244881683, 1019175.37990812, 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:391:74: style: Trailing whitespace is superfluous.
    10963.2626493246, 119027.18985912, 35115.3171591277, 433149.53646095, 
                                                                         ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:392:61: style: Trailing whitespace is superfluous.
    7341.79102055251, 78405.0042599315, 0, 0, 0, 0, 0, 0, 0, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:393:78: style: Trailing whitespace is superfluous.
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 29139.876067467, 12739.6922488515, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:394:61: style: Trailing whitespace is superfluous.
    29139.8664285476, 12739.6880348024, 0, 0, 0, 0, 0, 0, 0, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:395:61: style: Trailing whitespace is superfluous.
    0, 59938.0337956318, 12739.6922488515, 59938.0139692648, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:396:76: style: Trailing whitespace is superfluous.
    12739.6880348024, 54578.2666050959, 407670.151963247, 13102.7545549662, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:397:76: style: Trailing whitespace is superfluous.
    80461.6324082388, 2973.50347924523, 25479.3844977029, 2319.39068040275, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:398:61: style: Trailing whitespace is superfluous.
    18015.6292266913, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:399:67: style: Trailing whitespace is superfluous.
    0, 0, 0, 59014.9339767384, 63698.4612442574, 26908.1621411192, 
                                                                  ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:400:76: style: Trailing whitespace is superfluous.
    28480.4177633477, 8299.16061005758, 12739.6922488515, 8299.15786485234, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:401:76: style: Trailing whitespace is superfluous.
    12739.6880348024, 9514.11234430085, 12739.6922488515, 9514.10919721258, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:402:76: style: Trailing whitespace is superfluous.
    12739.6880348024, 611668.396429986, 6568520.28501094, 33817.3835395464, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:403:75: style: Trailing whitespace is superfluous.
    329645.518880301, 91454.098034893, 1108572.65524888, 11932.8111628813, 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:404:76: style: Trailing whitespace is superfluous.
    123644.663206319, 19249.1274054665, 280273.229474732, 4804.94686836648, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:405:76: style: Trailing whitespace is superfluous.
    64897.2560016445, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 40741.7053771308, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:406:61: style: Trailing whitespace is superfluous.
    12739.6922488515, 40741.6919005459, 12739.6880348024, 0, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:407:61: style: Trailing whitespace is superfluous.
    0, 0, 0, 0, 0, 0, 0, 18394.2492169477, 25479.3844977029, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:408:76: style: Trailing whitespace is superfluous.
    13087.6385040652, 18015.6292266913, 15672.8863812485, 12739.6922488515, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:409:70: style: Trailing whitespace is superfluous.
    15672.8811969544, 12739.6880348024, 0, 0, 0, 0, 70257.3485241776, 
                                                                     ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:410:75: style: Trailing whitespace is superfluous.
    267533.537225881, 21880.3090739657, 58315.070201858, 43949.9285720853, 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:411:61: style: Trailing whitespace is superfluous.
    101917.537990812, 18177.3230739935, 36019.1316023158, 0, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:412:61: style: Trailing whitespace is superfluous.
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:413:63: style: Trailing whitespace is superfluous.
    0, 0, 0, 0, 0, 0, 0, 0, 312985.813439337, 4221169.9524233, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:414:76: style: Trailing whitespace is superfluous.
    22372.3583554796, 273697.035674747, 73021.0839923742, 1104163.20172245, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:415:76: style: Trailing whitespace is superfluous.
    9406.16429338763, 126637.558494542, 2747.57401869488, 63698.4612442574, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:416:61: style: Trailing whitespace is superfluous.
    1365.60618497113, 28480.4177633477, 0, 0, 0, 0, 0, 0, 0, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:417:61: style: Trailing whitespace is superfluous.
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:418:69: style: Trailing whitespace is superfluous.
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 36819.817774854, 127396.922488515, 
                                                                    ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:419:76: style: Trailing whitespace is superfluous.
    17184.6197284487, 50943.7470841493, 9673.09143524288, 25479.3844977029, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:420:61: style: Trailing whitespace is superfluous.
    6839.52452364325, 18015.6292266913, 0, 0, 0, 0, 0, 0, 0, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:421:61: style: Trailing whitespace is superfluous.
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 230838.058877951, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:422:61: style: Trailing whitespace is superfluous.
    12739.6922488515, 230837.982521091, 12739.6880348024, 0, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:423:67: style: Trailing whitespace is superfluous.
    0, 0, 0, 359516.264544219, 2038350.75981624, 39129.9403382424, 
                                                                  ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:424:75: style: Trailing whitespace is superfluous.
    185996.396544584, 97476.1890141656, 740504.783591241, 16107.338815536, 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:425:76: style: Trailing whitespace is superfluous.
    106508.949580654, 14258.5686257633, 101917.537990812, 5849.27254897201, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:426:61: style: Trailing whitespace is superfluous.
    40274.2293513815, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:427:61: style: Trailing whitespace is superfluous.
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:428:70: style: Trailing whitespace is superfluous.
    0, 0, 0, 0, 16953.8619081733, 76438.1534931088, 9371.77855246162, 
                                                                     ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:429:63: style: Trailing whitespace is superfluous.
    36026.206094853, 0, 0, 0, 0, 0, 0, 0, 0, 87754.4873186513, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:430:63: style: Trailing whitespace is superfluous.
    12739.6922488515, 87754.458291128, 12739.6880348024, 0, 0, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:431:75: style: Trailing whitespace is superfluous.
    0, 0, 0, 0, 0, 0, 51504.633850817, 38219.0767465544, 31749.0840226633, 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:432:76: style: Trailing whitespace is superfluous.
    22063.3119823062, 49000.0875572278, 12739.6922488515, 49000.0713489264, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:433:70: style: Trailing whitespace is superfluous.
    12739.6880348024, 0, 0, 0, 0, 994001.285111729, 5762230.84981503, 
                                                                     ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:434:75: style: Trailing whitespace is superfluous.
    68275.6502513507, 348851.320801348, 265555.99667851, 1596427.06263507, 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:435:76: style: Trailing whitespace is superfluous.
    29209.9555689847, 150719.996633237, 98134.2206390007, 509587.689954059, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:436:76: style: Trailing whitespace is superfluous.
    21765.5026632803, 88102.9635792995, 77484.3909094827, 12739.6922488515, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:437:61: style: Trailing whitespace is superfluous.
    77484.3652791129, 12739.6880348024, 0, 0, 0, 0, 0, 0, 0, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:438:61: style: Trailing whitespace is superfluous.
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:439:74: style: Trailing whitespace is superfluous.
    0, 0, 0, 0, 0, 0, 62517.21520044, 152876.306986218, 31138.0216539016, 
                                                                         ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:440:75: style: Trailing whitespace is superfluous.
    54028.6974034736, 7122.8800460197, 12739.6922488515, 7122.87768990581, 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:441:61: style: Trailing whitespace is superfluous.
    12739.6880348024, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:442:67: style: Trailing whitespace is superfluous.
    0, 0, 0, 110973.334071681, 38219.0767465544, 77785.5470152146, 
                                                                  ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:443:76: style: Trailing whitespace is superfluous.
    22063.3119823062, 41712.6552890155, 12739.6922488515, 41712.6414912587, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:444:70: style: Trailing whitespace is superfluous.
    12739.6880348024, 0, 0, 0, 0, 1071353.07039102, 6622416.13079146, 
                                                                     ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:445:76: style: Trailing whitespace is superfluous.
    67499.4450785342, 366784.050505885, 159954.137727464, 1210270.76364089, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:446:76: style: Trailing whitespace is superfluous.
    19600.4262494351, 131162.983581654, 43297.0852097893, 412682.581400458, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:447:61: style: Trailing whitespace is superfluous.
    8858.86770448046, 75183.5160586415, 0, 0, 0, 0, 0, 0, 0, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:448:61: style: Trailing whitespace is superfluous.
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:449:70: style: Trailing whitespace is superfluous.
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 43107.4955927332, 127396.922488515, 
                                                                     ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:450:76: style: Trailing whitespace is superfluous.
    15718.5310738292, 40266.0929515833, 14372.3838808244, 38219.0767465544, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:451:63: style: Trailing whitespace is superfluous.
    8969.7151850959, 22063.3119823062, 0, 0, 0, 0, 0, 0, 0, 0, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:452:64: style: Trailing whitespace is superfluous.
    0, 0, 0, 0, 0, 0, 0, 0, 22905.2184230901, 25479.3844977029, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:453:61: style: Trailing whitespace is superfluous.
    16205.9586777255, 18015.6292266913, 0, 0, 0, 0, 0, 0, 0, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:454:61: style: Trailing whitespace is superfluous.
    0, 585019.689499399, 5015430.29143064, 43070.0528466247, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:455:76: style: Trailing whitespace is superfluous.
    321175.280124044, 133667.965357415, 1199146.97895405, 17781.1361396834, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:456:76: style: Trailing whitespace is superfluous.
    140304.126448468, 18639.3782026875, 191095.383732772, 5938.61514348771, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:457:61: style: Trailing whitespace is superfluous.
    52491.0263311259, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:458:73: style: Trailing whitespace is superfluous.
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 13466.9501931725, 12739.6922488515, 
                                                                        ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:459:61: style: Trailing whitespace is superfluous.
    13466.9457385603, 12739.6880348024, 0, 0, 0, 0, 0, 0, 0, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:460:61: style: Trailing whitespace is superfluous.
    0, 36772.1165056736, 38219.0767465544, 33427.6954579838, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:461:61: style: Trailing whitespace is superfluous.
    22063.3119823062, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:462:61: style: Trailing whitespace is superfluous.
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:463:61: style: Trailing whitespace is superfluous.
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:464:61: style: Trailing whitespace is superfluous.
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:465:61: style: Trailing whitespace is superfluous.
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:466:61: style: Trailing whitespace is superfluous.
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:467:61: style: Trailing whitespace is superfluous.
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:468:61: style: Trailing whitespace is superfluous.
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:469:61: style: Trailing whitespace is superfluous.
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:470:61: style: Trailing whitespace is superfluous.
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:471:61: style: Trailing whitespace is superfluous.
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:472:61: style: Trailing whitespace is superfluous.
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:473:61: style: Trailing whitespace is superfluous.
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:474:61: style: Trailing whitespace is superfluous.
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:475:61: style: Trailing whitespace is superfluous.
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:476:61: style: Trailing whitespace is superfluous.
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:477:61: style: Trailing whitespace is superfluous.
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:478:61: style: Trailing whitespace is superfluous.
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:479:64: style: Trailing whitespace is superfluous.
    0, 0, 0, 0, 0, 0, 0, 0), .Dim = c(2L, 2L, 3L, 7L, 4L, 9L)), 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:480:61: style: Trailing whitespace is superfluous.
    ThVN.ha.Bagr.Tart.Tzg.Dkl = structure(c(0, 0, NA, NA, 0, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:481:63: style: Trailing whitespace is superfluous.
    0, NA, NA, 0, 0, NA, NA, 0, 0, NA, NA, 0, 0, NA, NA, 0, 0, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:482:64: style: Trailing whitespace is superfluous.
    NA, NA, 0, 0, NA, NA, 0, 0, NA, NA, 0, 0, NA, NA, 0, 0, NA, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:483:79: style: Trailing whitespace is superfluous.
    NA, 0, 0, NA, NA, 0, 0, NA, NA, 0.000681910133399188, 0.00962242623941959, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:484:62: style: Trailing whitespace is superfluous.
    0, 0, 0.000613959972370994, 0.00962242623941959, 0, 0, 0, 
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:485:63: style: Trailing whitespace is superfluous.
    0, NA, NA, 0, 0, NA, NA, 0, 0, NA, NA, 0, 0, NA, NA, 0, 0, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:486:64: style: Trailing whitespace is superfluous.
    NA, NA, 0, 0, NA, NA, 0, 0, NA, NA, 0, 0, NA, NA, 0, 0, NA, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:487:64: style: Trailing whitespace is superfluous.
    NA, 0, 0, NA, NA, 0, 0, NA, NA, 0, 0, NA, NA, 0, 0, NA, NA, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:488:63: style: Trailing whitespace is superfluous.
    0, 0, NA, NA, 0, 0, NA, NA, 0, 0, NA, NA, 0, 0, NA, NA, 0, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:489:71: style: Trailing whitespace is superfluous.
    0, NA, NA, 0, 0, NA, NA, 0.000846234123966073, 0.0384897049576784, 
                                                                      ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:490:69: style: Trailing whitespace is superfluous.
    0.000232102326458745, 0.00932122705220075, 0.000902133324839992, 
                                                                    ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:491:66: style: Trailing whitespace is superfluous.
    0.0384897049576784, 0.000678321791846552, 0.0183332709076076, 
                                                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:492:63: style: Trailing whitespace is superfluous.
    0, 0, NA, NA, 0, 0, NA, NA, 0, 0, NA, NA, 0, 0, NA, NA, 0, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:493:63: style: Trailing whitespace is superfluous.
    0, NA, NA, 0, 0, NA, NA, 0, 0, NA, NA, 0, 0, NA, NA, 0, 0, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:494:64: style: Trailing whitespace is superfluous.
    NA, NA, 0, 0, NA, NA, 0, 0, NA, NA, 0, 0, NA, NA, 0, 0, NA, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:495:64: style: Trailing whitespace is superfluous.
    NA, 0, 0, NA, NA, 0, 0, NA, NA, 0, 0, NA, NA, 0, 0, NA, NA, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:496:75: style: Trailing whitespace is superfluous.
    0, 0, NA, NA, 0, 0, NA, NA, 0.000121280397336477, 0.00962242623941959, 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:497:74: style: Trailing whitespace is superfluous.
    0, 0, 0.000512130384962343, 0.0384897049576784, 0.000265854334347847, 
                                                                         ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:498:62: style: Trailing whitespace is superfluous.
    0.0207879752313879, 0, 0, NA, NA, 0, 0, NA, NA, 0, 0, NA, 
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:499:64: style: Trailing whitespace is superfluous.
    NA, 0, 0, NA, NA, 0, 0, NA, NA, 0, 0, NA, NA, 0, 0, NA, NA, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:500:63: style: Trailing whitespace is superfluous.
    0, 0, NA, NA, 0, 0, NA, NA, 0, 0, NA, NA, 0, 0, NA, NA, 0, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:501:63: style: Trailing whitespace is superfluous.
    0, NA, NA, 0, 0, NA, NA, 0, 0, NA, NA, 0, 0, NA, NA, 0, 0, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:502:64: style: Trailing whitespace is superfluous.
    NA, NA, 0, 0, NA, NA, 0, 0, NA, NA, 0, 0, NA, NA, 0, 0, NA, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:503:64: style: Trailing whitespace is superfluous.
    NA, 0, 0, NA, NA, 0, 0, NA, NA, 0, 0, NA, NA, 0, 0, NA, NA, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:504:79: style: Trailing whitespace is superfluous.
    0, 0, NA, NA, 0, 0, NA, NA, 0, 0, NA, NA, 0, 0, NA, NA, 0.153428762823326, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:505:80: style: Trailing whitespace is superfluous.
    1.7821513811971, 0.0151690308697574, 0.123424094751065, 0.0302252976360131, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:506:63: style: Trailing whitespace is superfluous.
    0.32887126662636, 0.00424339008148758, 0.0324510202814325, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:507:65: style: Trailing whitespace is superfluous.
    0.00525956714837283, 0.0788290756499395, 0.0015019619690155, 
                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:508:63: style: Trailing whitespace is superfluous.
    0.0341247438502972, 0.0354986229857629, 0.511227134597944, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:509:63: style: Trailing whitespace is superfluous.
    0.00388202442481826, 0.0449090049350532, 0.01249987308484, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:510:62: style: Trailing whitespace is superfluous.
    0.182826098548972, 0.0020231307250395, 0.020706375305784, 
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:511:68: style: Trailing whitespace is superfluous.
    0.000912293535972779, 0.0288672787182588, 0.000273462165008678, 
                                                                   ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:512:61: style: Trailing whitespace is superfluous.
    0.00680446214590731, 0, 0, NA, NA, 8.18470406672479e-05, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:513:62: style: Trailing whitespace is superfluous.
    0.00962242623941959, 0, 0, 0, 0, NA, NA, 0, 0, NA, NA, 0, 
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:514:68: style: Trailing whitespace is superfluous.
    0, NA, NA, 0, 0, NA, NA, 0.0132052230665481, 0.202070951027811, 
                                                                   ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:515:65: style: Trailing whitespace is superfluous.
    0.00262639077928808, 0.0125413802581253, 0.0060142329282837, 
                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:516:62: style: Trailing whitespace is superfluous.
    0.144336393591294, 0.001318516375044, 0.0116145921003212, 
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:517:78: style: Trailing whitespace is superfluous.
    0, 0, NA, NA, 0.0338306794145005, 0.635080131801693, 0.00369407626574004, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:518:63: style: Trailing whitespace is superfluous.
    0.0461931964819284, 0.0491135709379292, 0.928137882330713, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:519:63: style: Trailing whitespace is superfluous.
    0.00769927325358753, 0.1009151260787, 0.00465806534916849, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:520:65: style: Trailing whitespace is superfluous.
    0.0866018361547763, 0.00134702753926392, 0.0243063159901555, 
                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:521:79: style: Trailing whitespace is superfluous.
    0.17984099046026, 7.98975015931076, 0.0127310837403717, 0.387815443354092, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:522:61: style: Trailing whitespace is superfluous.
    0.150819244308021, 5.51479763459794, 0.0135282543724824, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:523:1: style: lines should not be more than 80 characters.
    0.349420961554325, 0.0187601541986197, 0.6323355297763, 0.00514621625832457, 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:523:81: style: Trailing whitespace is superfluous.
    0.349420961554325, 0.0187601541986197, 0.6323355297763, 0.00514621625832457, 
                                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:524:80: style: Trailing whitespace is superfluous.
    0.110182076622643, 0.245312556435414, 3.37705042162938, 0.0165003321893196, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:525:62: style: Trailing whitespace is superfluous.
    0.175099047843972, 0.0274448503047374, 0.442631607013301, 
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:526:64: style: Trailing whitespace is superfluous.
    0.00353876073426541, 0.034493852915945, 0.0205860817725946, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:527:64: style: Trailing whitespace is superfluous.
    0.235808932814389, 0.00366907962052782, 0.0218212643583575, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:528:79: style: Trailing whitespace is superfluous.
    0.192124846201886, 2.4810174466445, 0.0132108145947973, 0.110827457040925, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:529:63: style: Trailing whitespace is superfluous.
    0.0499174203642798, 1.01997718137848, 0.00424981020331755, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:530:63: style: Trailing whitespace is superfluous.
    0.0477062609226068, 0.0085759606182174, 0.163581246070133, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:531:67: style: Trailing whitespace is superfluous.
    0.00238535007215524, 0.0208347384189066, 7.66324121386636e-05, 
                                                                  ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:532:79: style: Trailing whitespace is superfluous.
    0.00962242623941959, 0, 0, 0, 0, NA, NA, 0, 0, NA, NA, 0.0111076904617355, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:533:63: style: Trailing whitespace is superfluous.
    0.723305470601572, 0.00612550434453505, 0.540427068971769, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:534:65: style: Trailing whitespace is superfluous.
    0.00807020884049818, 0.500366164449819, 0.00328116196663716, 
                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:535:76: style: Trailing whitespace is superfluous.
    0.190542940457695, 0, 0, NA, NA, 0.0385226085005166, 0.878912656438936, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:536:64: style: Trailing whitespace is superfluous.
    0.00543773399534317, 0.052286076557626, 0.0168179838682185, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:537:64: style: Trailing whitespace is superfluous.
    0.346407344619105, 0.00371120145936557, 0.0290763129847868, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:538:66: style: Trailing whitespace is superfluous.
    0.00378346003836688, 0.0577345574365175, 0.00176063324574805, 
                                                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:539:63: style: Trailing whitespace is superfluous.
    0.00977216476829028, 0.0820912501896208, 1.57043294324365, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:540:65: style: Trailing whitespace is superfluous.
    0.00648929933337146, 0.0546157072846976, 0.0693730491855105, 
                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:541:61: style: Trailing whitespace is superfluous.
    1.520303253552, 0.00530128601018342, 0.0741339370343378, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:542:65: style: Trailing whitespace is superfluous.
    0.00804861167622945, 0.163581246070133, 0.00213512545717806, 
                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:543:61: style: Trailing whitespace is superfluous.
    0.0202036386851051, 0.816905514825679, 25.3703230205562, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:544:61: style: Trailing whitespace is superfluous.
    0.0330392891112739, 0.633682220546288, 0.55168239872987, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:545:61: style: Trailing whitespace is superfluous.
    19.4041423364571, 0.0272649131323844, 0.903716932569593, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:546:61: style: Trailing whitespace is superfluous.
    0.111168082647745, 3.53547609968259, 0.0117228348781245, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:547:62: style: Trailing whitespace is superfluous.
    0.337658422768892, 0.0229567400024802, 0.279050360943168, 
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:548:66: style: Trailing whitespace is superfluous.
    0.00446524015095632, 0.0286599553154787, 0.00395241467818733, 
                                                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:549:67: style: Trailing whitespace is superfluous.
    0.0384897049576784, 0.000828151521768448, 0.00453630809727153, 
                                                                  ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:550:72: style: Trailing whitespace is superfluous.
    0.000123669564943344, 0.00962242623941959, 0, 0, 0.100867560511478, 
                                                                       ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:551:61: style: Trailing whitespace is superfluous.
    1.66256387749395, 0.0121241805899699, 0.144601808004177, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:552:64: style: Trailing whitespace is superfluous.
    0.0216468191529358, 0.481121311970979, 0.00255825281548618, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:553:65: style: Trailing whitespace is superfluous.
    0.0353327692717897, 0.00132495531704688, 0.0384897049576784, 
                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:554:69: style: Trailing whitespace is superfluous.
    0.000218416742642856, 0.00580286481568829, 0.000272823468570079, 
                                                                    ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:555:79: style: Trailing whitespace is superfluous.
    0.00962242623941959, 0, 0, 0, 0, NA, NA, 0, 0, NA, NA, 0.0433546932003243, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:556:1: style: lines should not be more than 80 characters.
    1.57981614661427, 0.0232754675637515, 1.01674813980093, 0.00949153579730821, 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:556:81: style: Trailing whitespace is superfluous.
    1.57981614661427, 0.0232754675637515, 1.01674813980093, 0.00949153579730821, 
                                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:557:63: style: Trailing whitespace is superfluous.
    0.567723148125756, 0.00581582131338021, 0.165773202311563, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:558:69: style: Trailing whitespace is superfluous.
    0.0130592512838829, 0.962242623941959, 0, 0, 0.0364462211486358, 
                                                                    ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:559:64: style: Trailing whitespace is superfluous.
    0.519611016928658, 0.00447157167738893, 0.0280262051409256, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:560:64: style: Trailing whitespace is superfluous.
    0.0119467681265108, 0.182826098548972, 0.00292960008462852, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:561:65: style: Trailing whitespace is superfluous.
    0.0134779999508794, 0.00368536999714728, 0.0673569836759371, 
                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:562:65: style: Trailing whitespace is superfluous.
    0.00123092978997378, 0.0147486790658123, 0.0749397761949359, 
                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:563:63: style: Trailing whitespace is superfluous.
    1.49147606711004, 0.00640979216803717, 0.0722968543780178, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:564:64: style: Trailing whitespace is superfluous.
    0.0459950552313725, 0.818346831318017, 0.00470821524115113, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:565:64: style: Trailing whitespace is superfluous.
    0.0454915997149836, 0.00761377727996798, 0.115469114873035, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:566:63: style: Trailing whitespace is superfluous.
    0.00124407085113717, 0.0125468082524318, 1.44916734766316, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:567:78: style: Trailing whitespace is superfluous.
    45.2557925671856, 0.044750391785502, 1.00888865624781, 0.732510826225565, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:568:78: style: Trailing whitespace is superfluous.
    22.931958599607, 0.032356970290892, 0.676674078801456, 0.112314504678556, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:569:61: style: Trailing whitespace is superfluous.
    3.86727358396312, 0.0101584509250896, 0.237687057648242, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:570:67: style: Trailing whitespace is superfluous.
    0, 0, NA, NA, 0, 0, NA, NA, 0, 0, NA, NA, 0.00696436666121645, 
                                                                  ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:571:64: style: Trailing whitespace is superfluous.
    0.173203672309553, 0.00201983344913258, 0.0281780236862423, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:572:67: style: Trailing whitespace is superfluous.
    0.00249233151907844, 0.0690405971130593, 0.000618033701498919, 
                                                                  ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:573:68: style: Trailing whitespace is superfluous.
    0.00675790004891104, 0.000265739373902362, 0.00962242623941959, 
                                                                   ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:574:73: style: Trailing whitespace is superfluous.
    0, 0, 0, 0, NA, NA, 0, 0, NA, NA, 0, 0, NA, NA, 0.00168190753409891, 
                                                                        ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:575:66: style: Trailing whitespace is superfluous.
    0.0866018361547763, 0.000200586122149431, 0.0272178485836292, 
                                                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:576:66: style: Trailing whitespace is superfluous.
    0.00160293233617989, 0.144336393591294, 0.000492202027877523, 
                                                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:577:78: style: Trailing whitespace is superfluous.
    0.0204133864377219, 0, 0, NA, NA, 0.00937980054148165, 0.192448524788392, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:578:66: style: Trailing whitespace is superfluous.
    0.00215113762744394, 0.0150452318921007, 0.00112732571135675, 
                                                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:579:67: style: Trailing whitespace is superfluous.
    0.0192448524788392, 0.000253557011409768, 0.00453630809727154, 
                                                                  ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:580:73: style: Trailing whitespace is superfluous.
    0.000158493548890558, 0.00962242623941959, 0, 0, 0.0300507803397141, 
                                                                        ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:581:64: style: Trailing whitespace is superfluous.
    0.558100721886336, 0.00267823044996691, 0.0295153512541343, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:582:65: style: Trailing whitespace is superfluous.
    0.00742900206853341, 0.105846688633615, 0.00228078575698912, 
                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:583:66: style: Trailing whitespace is superfluous.
    0.0111116401543709, 0.000659360694377863, 0.0288672787182588, 
                                                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:584:65: style: Trailing whitespace is superfluous.
    0.000146310662880767, 0, 0.672339862675334, 24.599931333812, 
                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:585:62: style: Trailing whitespace is superfluous.
    0.0269296156248715, 0.586731273695641, 0.223014089775755, 
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:586:61: style: Trailing whitespace is superfluous.
    7.96915046840991, 0.0173656196636955, 0.360702657686194, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:587:65: style: Trailing whitespace is superfluous.
    0.00778177935653625, 0.433009180773881, 0.00185264600755078, 
                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:588:62: style: Trailing whitespace is superfluous.
    0.0361582583671279, 0.125580703574239, 0.273365881952842, 
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:589:64: style: Trailing whitespace is superfluous.
    0.0130135783545394, 0.0199973418868251, 0.0173213197068166, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:590:66: style: Trailing whitespace is superfluous.
    0.0481121311970979, 0.00269119662719114, 0.00641530843426429, 
                                                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:591:70: style: Trailing whitespace is superfluous.
    0.0054745520561065, 0.00962242623941959, 0, 0, 0.063603713006952, 
                                                                     ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:592:64: style: Trailing whitespace is superfluous.
    0.212694644195889, 0.00814785419982143, 0.0207879559711553, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:593:64: style: Trailing whitespace is superfluous.
    0.031803440525107, 0.0962242623941959, 0.00475607780162886, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:594:65: style: Trailing whitespace is superfluous.
    0.00716011289815192, 0.0131203427786719, 0.0288672787182588, 
                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:595:67: style: Trailing whitespace is superfluous.
    0.000549036358433257, 0.00214284984634374, 0.0529590514981235, 
                                                                  ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:596:62: style: Trailing whitespace is superfluous.
    6.33968544142987, 0.00235938814197554, 0.242789060849986, 
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:597:63: style: Trailing whitespace is superfluous.
    0.0263869056981896, 3.09755850370314, 0.00152835421641086, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:598:63: style: Trailing whitespace is superfluous.
    0.109924619273359, 0.00122672314277686, 0.182826098548972, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:599:63: style: Trailing whitespace is superfluous.
    0.000226996360810901, 0.0137417684483042, 0, 0, NA, NA, 0, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:600:69: style: Trailing whitespace is superfluous.
    0, NA, NA, 0, 0, NA, NA, 0.0109595302323592, 0.0288672787182588, 
                                                                    ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:601:66: style: Trailing whitespace is superfluous.
    0.00289920342662742, 0.00214284984634374, 0.0188307522220217, 
                                                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:602:65: style: Trailing whitespace is superfluous.
    0.0577345574365175, 0.00415805828408809, 0.0100942356431596, 
                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:603:66: style: Trailing whitespace is superfluous.
    0.00783196624335188, 0.0288672787182588, 0.00119821740807677, 
                                                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:604:67: style: Trailing whitespace is superfluous.
    0, 0.0305149313194534, 0.115469114873035, 0.00427266081414086, 
                                                                  ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:605:65: style: Trailing whitespace is superfluous.
    0.00566944779037854, 0.0213033020974485, 0.0673569836759371, 
                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:606:67: style: Trailing whitespace is superfluous.
    0.00216053134121522, 0.00352783638078058, 0.00260182837571893, 
                                                                  ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:607:66: style: Trailing whitespace is superfluous.
    0.0192448524788392, 0.00170056949608122, 0.00453630809727154, 
                                                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:608:62: style: Trailing whitespace is superfluous.
    0.0961802266406663, 1.88691732285369, 0.0179199420540005, 
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:609:63: style: Trailing whitespace is superfluous.
    0.0979072260733023, 0.0590796760825048, 0.490743738210399, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:610:64: style: Trailing whitespace is superfluous.
    0.0165557558583406, 0.0506623086877749, 0.0168143140505563, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:611:64: style: Trailing whitespace is superfluous.
    0.0962242623941959, 0.00548320780260261, 0.015606422629092, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:612:62: style: Trailing whitespace is superfluous.
    0.234442477596286, 0.576683720979444, 0.0160328995789114, 
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:613:64: style: Trailing whitespace is superfluous.
    0.0357147911752803, 0.0264081836986164, 0.0673569836759371, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:614:66: style: Trailing whitespace is superfluous.
    0.00437168889268379, 0.00748367108329966, 0.0342062550898764, 
                                                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:615:65: style: Trailing whitespace is superfluous.
    0.0866018361547763, 0.00771071148816498, 0.0121600136427417, 
                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:616:62: style: Trailing whitespace is superfluous.
    0.247473952430493, 0.905764365779927, 0.0154533909197423, 
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:617:61: style: Trailing whitespace is superfluous.
    0.0383208193510496, 0.065268797476713, 0.27079697974607, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:618:66: style: Trailing whitespace is superfluous.
    0.00692606972541598, 0.0219865667533896, 0.00786237808798703, 
                                                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:619:67: style: Trailing whitespace is superfluous.
    0.0203029835247884, 0.000547826678549308, 0.00553397922766689, 
                                                                  ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:620:62: style: Trailing whitespace is superfluous.
    0.132597118459869, 16.1563476358071, 0.00401461958952965, 
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:621:61: style: Trailing whitespace is superfluous.
    0.424412882253484, 0.0473777588690436, 5.46138857882406, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:622:64: style: Trailing whitespace is superfluous.
    0.0018944301624899, 0.152434336112425, 0.00774391937486669, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:623:65: style: Trailing whitespace is superfluous.
    0.795527939691656, 0.000811210211995247, 0.0416210460292656, 
                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:624:61: style: Trailing whitespace is superfluous.
    0, 0, NA, NA, 0.00957678361154155, 0.105846688633615, 0, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:625:1: style: lines should not be more than 80 characters.
    0, 0, 0, NA, NA, 0.035808722725992, 0.0962242623941959, 0.00566485836027159, 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:625:81: style: Trailing whitespace is superfluous.
    0, 0, 0, NA, NA, 0.035808722725992, 0.0962242623941959, 0.00566485836027159, 
                                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:626:62: style: Trailing whitespace is superfluous.
    0.0151629716678497, 0.038282316865604, 0.105846688633615, 
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:627:65: style: Trailing whitespace is superfluous.
    0.00857522232589122, 0.0173391439163171, 0.0072525028403284, 
                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:628:66: style: Trailing whitespace is superfluous.
    0.0192448524788392, 0.00176053548855704, 0.00453630809727154, 
                                                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:629:62: style: Trailing whitespace is superfluous.
    0.0873891594811339, 0.331696400544135, 0.013092127899587, 
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:630:62: style: Trailing whitespace is superfluous.
    0.0327767803476497, 0.0648104619848005, 0.24056065598549, 
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:631:79: style: Trailing whitespace is superfluous.
    0.00842694242256322, 0.00980655872807192, 0, 0, NA, NA, 0.428904627094884, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:632:61: style: Trailing whitespace is superfluous.
    6.00271071296856, 0.0369887019536825, 0.237366994342235, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:633:61: style: Trailing whitespace is superfluous.
    0.224027327850372, 2.02414818311669, 0.0281693815446096, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:634:63: style: Trailing whitespace is superfluous.
    0.0998579765219917, 0.0375200279974759, 0.509988590689238, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:635:64: style: Trailing whitespace is superfluous.
    0.00963190050723032, 0.121567768605457, 0.0480131359453747, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:636:64: style: Trailing whitespace is superfluous.
    0.134713967351874, 0.00689367202855806, 0.0122247434585385, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:637:66: style: Trailing whitespace is superfluous.
    0.0073112145455271, 0.0192448524788392, 0.000221882495125877, 
                                                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:638:77: style: Trailing whitespace is superfluous.
    0.00194413204168779, 0, 0, NA, NA, 0.127019870662033, 0.644702558041113, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:639:64: style: Trailing whitespace is superfluous.
    0.0127763012458876, 0.0332302425336794, 0.0215932322258984, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:640:65: style: Trailing whitespace is superfluous.
    0.0962242623941959, 0.00394377794905474, 0.0123341350799141, 
                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:641:71: style: Trailing whitespace is superfluous.
    0.00129773353768582, 0.00962242623941959, 0, 0, 0.270101226406764, 
                                                                      ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:642:62: style: Trailing whitespace is superfluous.
    29.1494041543984, 0.00636439763785937, 0.525781800866517, 
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:643:63: style: Trailing whitespace is superfluous.
    0.0704967628894873, 7.81965060882708, 0.00282329803062322, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:644:61: style: Trailing whitespace is superfluous.
    0.224628898292627, 0.0156405859172831, 1.81533591822854, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:645:66: style: Trailing whitespace is superfluous.
    0.00117409331389088, 0.0687880227854538, 0.00118500607913765, 
                                                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:646:72: style: Trailing whitespace is superfluous.
    0.0192448524788392, 0, 0, 0.00018137849208533, 0.00962242623941959, 
                                                                       ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:647:63: style: Trailing whitespace is superfluous.
    0, 0, 0, 0, NA, NA, 0.0459082396739691, 0.105846688633615, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:648:65: style: Trailing whitespace is superfluous.
    0.0121539753307923, 0.00605652086876449, 0.0219877592379989, 
                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:649:64: style: Trailing whitespace is superfluous.
    0.0673569836759371, 0.0112359981425462, 0.0225678478381511, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:650:66: style: Trailing whitespace is superfluous.
    0.0046020385857144, 0.0192448524788392, 0.000920991177787353, 
                                                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:651:65: style: Trailing whitespace is superfluous.
    0, 0.138591110128064, 0.659991298518742, 0.0143720844750817, 
                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:652:63: style: Trailing whitespace is superfluous.
    0.0304908774342043, 0.0615539638426843, 0.259805508464329, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:653:63: style: Trailing whitespace is superfluous.
    0.00987782526110943, 0.02226819601189, 0.0152905683576065, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:654:65: style: Trailing whitespace is superfluous.
    0.0577345574365175, 0.0028473613131443, 0.00781773181463222, 
                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:655:77: style: Trailing whitespace is superfluous.
    1.06066164909373, 11.5127445584946, 0.067957670469732, 0.55765569677586, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:656:61: style: Trailing whitespace is superfluous.
    0.382318212767455, 2.92640285104293, 0.0371279889735857, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:657:62: style: Trailing whitespace is superfluous.
    0.162222706347076, 0.0575181973938295, 0.520588573458283, 
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:658:61: style: Trailing whitespace is superfluous.
    0.0173090670812936, 0.0394700009696782, 0, 0, NA, NA, 0, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:659:70: style: Trailing whitespace is superfluous.
    0, NA, NA, 0, 0, NA, NA, 0.00942032780770468, 0.0769794099153567, 
                                                                     ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:660:67: style: Trailing whitespace is superfluous.
    0.00263253345142433, 0.00691096921686582, 0.00336762580302068, 
                                                                  ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:661:65: style: Trailing whitespace is superfluous.
    0.0288672787182588, 0.00038959608880564, 0.0078571161032604, 
                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:662:76: style: Trailing whitespace is superfluous.
    0, 0, NA, NA, 0.218376309315682, 26.7803244393894, 0.00645821202722848, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:663:1: style: lines should not be more than 80 characters.
    0.551056797424667, 0.0370949057368564, 4.9112153151451, 0.00197767172269257, 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:663:81: style: Trailing whitespace is superfluous.
    0.551056797424667, 0.0370949057368564, 4.9112153151451, 0.00197767172269257, 
                                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:664:63: style: Trailing whitespace is superfluous.
    0.150847809871975, 0.00285625769723505, 0.375274623337364, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:665:68: style: Trailing whitespace is superfluous.
    0.000396965163603397, 0.0305365876369488, 0.000174123338584113, 
                                                                   ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:666:80: style: Trailing whitespace is superfluous.
    0.00962242623941959, 0, 0, 0, 0, NA, NA, 0, 0, NA, NA, 0.00480719890328822, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:667:71: style: Trailing whitespace is superfluous.
    0.00962242623941959, 0, 0, 0.0122520074275118, 0.0312636074667473, 
                                                                      ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:668:80: style: Trailing whitespace is superfluous.
    0.00196808672079681, 0.00216182810744878, 0, 0, NA, NA, 0.0383885614598452, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:669:63: style: Trailing whitespace is superfluous.
    0.192448524788392, 0.0075696193065096, 0.0187600668516898, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:670:66: style: Trailing whitespace is superfluous.
    0.00908243718594825, 0.0384897049576784, 0.00367041297781414, 
                                                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:671:76: style: Trailing whitespace is superfluous.
    0.00274941790039897, 0, 0, NA, NA, 0.394498442441531, 5.40780354655381, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:672:63: style: Trailing whitespace is superfluous.
    0.0305504418839365, 0.161210700735552, 0.0805161481149661, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:673:62: style: Trailing whitespace is superfluous.
    0.995434715386941, 0.0130212212310109, 0.067687218384631, 
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:674:66: style: Trailing whitespace is superfluous.
    0.00623894749850322, 0.0769794099153567, 0.00439601466560177, 
                                                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:675:65: style: Trailing whitespace is superfluous.
    0.00694395318096957, 0.0358587270495745, 0.0384897049576784, 
                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:676:66: style: Trailing whitespace is superfluous.
    0.00642247585066966, 0.00453630809727153, 0.0374253504936234, 
                                                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:677:65: style: Trailing whitespace is superfluous.
    0.0288672787182588, 0.0148182663025409, 0.00471426966195624, 
                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:678:72: style: Trailing whitespace is superfluous.
    0.00588717831118292, 0.00962242623941959, 0, 0, 0.0397893110868674, 
                                                                       ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:679:65: style: Trailing whitespace is superfluous.
    0.0769794099153567, 0.0096312091882677, 0.00694395318096957, 
                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:680:64: style: Trailing whitespace is superfluous.
    0.0311167082580965, 0.0384897049576784, 0.0011819787464959, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:681:75: style: Trailing whitespace is superfluous.
    0, 0.00722801577663616, 0.00962242623941959, 0, 0, 0.0776590630611361, 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:682:62: style: Trailing whitespace is superfluous.
    4.40963397521161, 0.00344297193876363, 0.135625403919015, 
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:683:62: style: Trailing whitespace is superfluous.
    0.045903058145801, 2.35887253763603, 0.00302643730461625, 
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:684:64: style: Trailing whitespace is superfluous.
    0.0887112169910659, 0.00300876677702155, 0.202070951027811, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:685:63: style: Trailing whitespace is superfluous.
    0.000555993363734265, 0.0210168676687825, 0, 0, NA, NA, 0, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:686:69: style: Trailing whitespace is superfluous.
    0, NA, NA, 0, 0, NA, NA, 0.0289559562079777, 0.0192448524788392, 
                                                                    ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:687:61: style: Trailing whitespace is superfluous.
    0.000428145001340444, 0.00194413204168779, 0, 0, NA, NA, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:688:74: style: Trailing whitespace is superfluous.
    0, 0, NA, NA, 0, 0, NA, NA, 0.00773282560639062, 0.00962242623941959, 
                                                                         ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:689:78: style: Trailing whitespace is superfluous.
    0, 0, 0.00834277416439056, 0.00962242623941959, 0, 0, 0.0479556395093091, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:690:64: style: Trailing whitespace is superfluous.
    0.817906230350665, 0.00752648869370127, 0.0525662722265879, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:691:64: style: Trailing whitespace is superfluous.
    0.0278029404824256, 0.0866018361547763, 0.0153835242107298, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:692:66: style: Trailing whitespace is superfluous.
    0.00480314975005222, 0.0018156741687763, 0.00962242623941959, 
                                                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:693:68: style: Trailing whitespace is superfluous.
    0, 0, 0.121068336959873, 0.115469114873035, 0.0137023918981214, 
                                                                   ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:694:64: style: Trailing whitespace is superfluous.
    0.0122718152324015, 0.0282047089023914, 0.0384897049576784, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:695:66: style: Trailing whitespace is superfluous.
    0.00277473394256237, 0.00453630809727153, 0.0251809762233315, 
                                                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:696:68: style: Trailing whitespace is superfluous.
    0.0288672787182588, 0.000696409391546735, 0, 0.244939005944744, 
                                                                   ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:697:63: style: Trailing whitespace is superfluous.
    0.452254033252721, 0.0286443596548308, 0.0292115044402658, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:698:64: style: Trailing whitespace is superfluous.
    0.047252972926453, 0.0917831198609432, 0.00669843492916577, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:699:66: style: Trailing whitespace is superfluous.
    0.00866709186201835, 0.0115361820971495, 0.00962242623941959, 
                                                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:700:68: style: Trailing whitespace is superfluous.
    0, 0, 0.208463067550276, 10.9506279625907, 0.00616322558606907, 
                                                                   ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:701:61: style: Trailing whitespace is superfluous.
    0.236933259372753, 0.0653885976822499, 3.07944045480653, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:702:64: style: Trailing whitespace is superfluous.
    0.00362796829485301, 0.100310878244585, 0.0135479147821922, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:703:63: style: Trailing whitespace is superfluous.
    0.71205954171705, 0.00117555345706248, 0.0351465932201869, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:704:61: style: Trailing whitespace is superfluous.
    0.00370314395015528, 0.0384897049576784, 0, 0, 0, 0, NA, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:705:62: style: Trailing whitespace is superfluous.
    NA, 0, 0, NA, NA, 0.0421065957922547, 0.0481121311970979, 
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:706:64: style: Trailing whitespace is superfluous.
    0.007007211539673, 0.00641530843426429, 0.0350903715608783, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:707:65: style: Trailing whitespace is superfluous.
    0.0384897049576784, 0.0182077228016062, 0.00932122705220075, 
                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:708:64: style: Trailing whitespace is superfluous.
    0.0211367633505615, 0.0192448524788392, 0.0037599284628605, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:709:64: style: Trailing whitespace is superfluous.
    0.00194413204168779, 0.0718736522500142, 0.173203672309553, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:710:62: style: Trailing whitespace is superfluous.
    0.01422880970892, 0.0215547941644817, 0.0717222048930544, 
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:711:63: style: Trailing whitespace is superfluous.
    0.105846688633615, 0.0191914699198573, 0.0106626382203072, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:712:65: style: Trailing whitespace is superfluous.
    0.0310764089885276, 0.0384897049576784, 0.00914543227996768, 
                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:713:80: style: Trailing whitespace is superfluous.
    0.0064153084342643, 0.27793780725461, 2.96432139275998, 0.0302344244275546, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:714:62: style: Trailing whitespace is superfluous.
    0.0978612433349988, 0.108772139098755, 0.597387879610036, 
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:715:63: style: Trailing whitespace is superfluous.
    0.0258048360583683, 0.102779707954962, 0.0107052412762538, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:716:62: style: Trailing whitespace is superfluous.
    0.202070951027811, 0.00398903638495532, 0.07215820591141, 
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:717:65: style: Trailing whitespace is superfluous.
    0.0138818197914399, 0.0192448524788392, 0.00250876116832595, 
                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:718:68: style: Trailing whitespace is superfluous.
    0, 0.0144741898798699, 0.0192448524788392, 0.00111641222778308, 
                                                                   ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:719:79: style: Trailing whitespace is superfluous.
    0, 0, 0, NA, NA, 0.159447373662067, 0.500366164449819, 0.0162815468551288, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:720:64: style: Trailing whitespace is superfluous.
    0.0227764061644697, 0.0355141348601964, 0.0866018361547763, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:721:78: style: Trailing whitespace is superfluous.
    0.00814266502491255, 0.0109954237799569, 0, 0, NA, NA, 0.500900142495845, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:722:80: style: Trailing whitespace is superfluous.
    21.9527622524184, 0.0122067006690143, 0.39013884979027, 0.0828241232574965, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:723:62: style: Trailing whitespace is superfluous.
    4.32021762991233, 0.00394704217267401, 0.129733728722879, 
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:724:63: style: Trailing whitespace is superfluous.
    0.0244722011617737, 1.28300825740629, 0.00222985782829781, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:725:65: style: Trailing whitespace is superfluous.
    0.0679932105440174, 0.00592503031870886, 0.0769794099153567, 
                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:726:78: style: Trailing whitespace is superfluous.
    0, 0, 0, 0, NA, NA, 0, 0, NA, NA, 0.0639466033104275, 0.0673569836759371, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:727:80: style: Trailing whitespace is superfluous.
    0.00492780983716084, 0.00540920265461551, 0, 0, NA, NA, 0.0123290513517708, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:728:69: style: Trailing whitespace is superfluous.
    0.00962242623941959, 0, 0, 0.192247406775102, 0.433009180773881, 
                                                                    ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:729:64: style: Trailing whitespace is superfluous.
    0.0281356681596801, 0.0352455281084838, 0.0323484378791945, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:730:64: style: Trailing whitespace is superfluous.
    0.0577345574365175, 0.0170797343757628, 0.0152152399085728, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:731:74: style: Trailing whitespace is superfluous.
    0, 0, NA, NA, 0.626853999545642, 4.56287970321947, 0.044169339540041, 
                                                                         ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:732:61: style: Trailing whitespace is superfluous.
    0.123707883160382, 0.245988910857582, 0.898574282950423, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:733:79: style: Trailing whitespace is superfluous.
    0.04458013626014, 0.074739150405577, 0.025407063699484, 0.163581246070133, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:734:62: style: Trailing whitespace is superfluous.
    0.00747757092725875, 0.0175895224642047, 0, 0, NA, NA, 0, 
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:735:69: style: Trailing whitespace is superfluous.
    0, NA, NA, 0, 0, NA, NA, 0.0215850856315856, 0.0866018361547763, 
                                                                    ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:736:61: style: Trailing whitespace is superfluous.
    0.0033296884223274, 0.0101519326216645, 0, 0, NA, NA, 0, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:737:73: style: Trailing whitespace is superfluous.
    0, NA, NA, 0.291646867985214, 16.3405867948156, 0.00790704695131924, 
                                                                        ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:738:80: style: Trailing whitespace is superfluous.
    0.29864859021315, 0.040392401929004, 2.71435100060459, 0.00203943955162039, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:739:62: style: Trailing whitespace is superfluous.
    0.08399493926689, 0.00378916499736432, 0.242459547233978, 
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:740:67: style: Trailing whitespace is superfluous.
    0.000374802081470438, 0.0149548229668433, 0.00444377302962892, 
                                                                  ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:741:61: style: Trailing whitespace is superfluous.
    0.0769794099153567, 0, 0, 0, 0, NA, NA, 0, 0, NA, NA, 0, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:742:71: style: Trailing whitespace is superfluous.
    0, NA, NA, 0, 0, NA, NA, 0.00758874400502372, 0.00962242623941959, 
                                                                      ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:743:73: style: Trailing whitespace is superfluous.
    0, 0, 0.00654457279169927, 0.0288672787182588, 0.000268119325821096, 
                                                                        ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:744:68: style: Trailing whitespace is superfluous.
    0, 0.0114610799167468, 0.0384897049576784, 0.00282517074259757, 
                                                                   ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:745:76: style: Trailing whitespace is superfluous.
    0.00860703945338563, 0, 0, NA, NA, 0.247021768566326, 2.21819923125756, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:746:64: style: Trailing whitespace is superfluous.
    0.0302501922698567, 0.0844811445741383, 0.0629964732784997, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:747:63: style: Trailing whitespace is superfluous.
    0.327219223624547, 0.0191644597725583, 0.0322994823374931, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:748:79: style: Trailing whitespace is superfluous.
    0, 0, NA, NA, 0.0759370043017781, 0.0481121311970979, 0.00794454118817003, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:749:73: style: Trailing whitespace is superfluous.
    0.00843989656289929, 0, 0, NA, NA, 0, 0, NA, NA, 0.0059455707057893, 
                                                                        ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:750:68: style: Trailing whitespace is superfluous.
    0.0192448524788392, 0.00116836580005321, 0, 0.0401205817685128, 
                                                                   ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:751:65: style: Trailing whitespace is superfluous.
    0.0419931964933494, 0.0163214891131413, 0.00319076421333096, 
                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:752:76: style: Trailing whitespace is superfluous.
    0, 0, NA, NA, 0.103840696257465, 3.10429752403265, 0.00463683557763518, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:753:61: style: Trailing whitespace is superfluous.
    0.0848056848534595, 0.033396791839182, 1.05014106627872, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:754:66: style: Trailing whitespace is superfluous.
    0.00210986117516303, 0.0399963336651683, 0.00480333398554045, 
                                                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:755:65: style: Trailing whitespace is superfluous.
    0.171317554791415, 0.000725225290879591, 0.0140950743561355, 
                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:756:65: style: Trailing whitespace is superfluous.
    0, 0, NA, NA, 0, 0, NA, NA, 0, 0, NA, NA, 0.107847458744689, 
                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:757:65: style: Trailing whitespace is superfluous.
    0.0577345574365175, 0.0138030811585778, 0.00514368989817819, 
                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:758:64: style: Trailing whitespace is superfluous.
    0.0356099471865233, 0.0192448524788392, 0.0143102970309424, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:759:1: style: lines should not be more than 80 characters.
    0.00272178485836292, 0, 0, NA, NA, 0.00341007409330487, 0.00962242623941959, 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:759:81: style: Trailing whitespace is superfluous.
    0.00272178485836292, 0, 0, NA, NA, 0.00341007409330487, 0.00962242623941959, 
                                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:760:77: style: Trailing whitespace is superfluous.
    0, 0, 0, 0, NA, NA, 0, 0, NA, NA, 0.0335204437448671, 0.433009180773881, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:761:65: style: Trailing whitespace is superfluous.
    0.0052120066040134, 0.0292887718454271, 0.00487875987014033, 
                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:762:66: style: Trailing whitespace is superfluous.
    0.0384897049576784, 0.00112916121836574, 0.00491011638250548, 
                                                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:763:68: style: Trailing whitespace is superfluous.
    0.000483827098777557, 0.0192448524788392, 0.000171121691703506, 
                                                                   ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:764:67: style: Trailing whitespace is superfluous.
    0, 0.0737973121439099, 0.0481121311970979, 0.0120789350857571, 
                                                                  ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:765:64: style: Trailing whitespace is superfluous.
    0.0078571161032604, 0.0321392055913968, 0.0192448524788392, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:766:79: style: Trailing whitespace is superfluous.
    0.00945687115783693, 0.00194413204168779, 0, 0, NA, NA, 0.137626259335798, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:767:63: style: Trailing whitespace is superfluous.
    0.192776844770254, 0.0269496888254012, 0.0125916140548494, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:768:64: style: Trailing whitespace is superfluous.
    0.0670297030107802, 0.0577345574365175, 0.0101118040760767, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:769:76: style: Trailing whitespace is superfluous.
    0.00887825127478423, 0, 0, NA, NA, 0.324278047735698, 8.77032815568319, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:770:63: style: Trailing whitespace is superfluous.
    0.0104683661103098, 0.202061807136102, 0.0672427678079059, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:771:63: style: Trailing whitespace is superfluous.
    2.10627290001511, 0.00315360906056943, 0.0623463648533318, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:772:64: style: Trailing whitespace is superfluous.
    0.0187500834268134, 0.548791391399637, 0.00226293489676957, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:773:62: style: Trailing whitespace is superfluous.
    0.0246186220319257, 0, 0, NA, NA, 0, 0, NA, NA, 0, 0, NA, 
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:774:68: style: Trailing whitespace is superfluous.
    NA, 0.0554327228739748, 0.0288672787182588, 0.0041354124737102, 
                                                                   ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:775:65: style: Trailing whitespace is superfluous.
    0.00235713483097811, 0.0184783873638898, 0.0192448524788392, 
                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:776:67: style: Trailing whitespace is superfluous.
    0.00374501060760462, 0.00453630809727154, 0.00782221145101712, 
                                                                  ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:777:71: style: Trailing whitespace is superfluous.
    0.00962242623941959, 0, 0, 0.0614984887107949, 0.0769794099153567, 
                                                                      ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:778:65: style: Trailing whitespace is superfluous.
    0.0328120555082465, 0.00744948192149943, 0.0197254319519886, 
                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:779:71: style: Trailing whitespace is superfluous.
    0.00962242623941959, 0, 0, 0.014792577604543, 0.00962242623941959, 
                                                                      ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:780:67: style: Trailing whitespace is superfluous.
    0, 0, 0.187222760831171, 1.55883305078597, 0.0209093375950528, 
                                                                  ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:781:63: style: Trailing whitespace is superfluous.
    0.0530961249811309, 0.0536941072861476, 0.260602961230351, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:782:65: style: Trailing whitespace is superfluous.
    0.0202067950425597, 0.0271707756978793, 0.00413626078952066, 
                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:783:66: style: Trailing whitespace is superfluous.
    0.0481121311970979, 0.000389778795543265, 0.0140057690666528, 
                                                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:784:61: style: Trailing whitespace is superfluous.
    0.0211278941293584, 0.00962242623941959, 0, 0, 0, 0, NA, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:785:77: style: Trailing whitespace is superfluous.
    NA, 0, 0, NA, NA, 0.174501070727, 0.356029770858525, 0.0239369214480792, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:786:64: style: Trailing whitespace is superfluous.
    0.0225589637260885, 0.0393641205315549, 0.0673569836759371, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:787:78: style: Trailing whitespace is superfluous.
    0.0149628316572294, 0.00907261619454307, 0, 0, NA, NA, 0.582108181442574, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:788:61: style: Trailing whitespace is superfluous.
    14.0433952110792, 0.0174635766231921, 0.266825369142001, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:789:63: style: Trailing whitespace is superfluous.
    0.0983191374952868, 2.68930939275998, 0.00553396369479892, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:790:62: style: Trailing whitespace is superfluous.
    0.0833678783438431, 0.0214989414500417, 0.69387282028416, 
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:791:62: style: Trailing whitespace is superfluous.
    0.00202152852395538, 0.0360347428678367, 0, 0, NA, NA, 0, 
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:792:70: style: Trailing whitespace is superfluous.
    0, NA, NA, 0, 0, NA, NA, 0.0165979502058584, 0.00962242623941959, 
                                                                     ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:793:63: style: Trailing whitespace is superfluous.
    0, 0, 0.0210968930776216, 0.00962242623941959, 0, 0, 0, 0, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:794:71: style: Trailing whitespace is superfluous.
    NA, NA, 0.0859759471528251, 0.173203672309553, 0.0167563558711935, 
                                                                      ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:795:64: style: Trailing whitespace is superfluous.
    0.0150898898469299, 0.0330992885579936, 0.0192448524788392, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:796:78: style: Trailing whitespace is superfluous.
    0.00408620708867367, 0.00272178485836292, 0, 0, NA, NA, 0.43880775728024, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:797:62: style: Trailing whitespace is superfluous.
    2.35157444173216, 0.0487049119664197, 0.0699975709011622, 
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:798:62: style: Trailing whitespace is superfluous.
    0.140360551702892, 0.356029770858525, 0.0451879920386965, 
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:799:64: style: Trailing whitespace is superfluous.
    0.048062277195421, 0.00625895563483629, 0.0192448524788392, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:800:62: style: Trailing whitespace is superfluous.
    0.00361698978516199, 0, 0, 0, NA, NA, 0, 0, NA, NA, 0, 0, 
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:801:73: style: Trailing whitespace is superfluous.
    NA, NA, 0.0209319348623566, 0.0481121311970979, 0.00647550154729029, 
                                                                        ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:802:65: style: Trailing whitespace is superfluous.
    0.00896200589459414, 0.0192915278374623, 0.0288672787182588, 
                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:803:79: style: Trailing whitespace is superfluous.
    0.00520118489398381, 0.00294641853872265, 0, 0, NA, NA, 0.374659206730803, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:804:80: style: Trailing whitespace is superfluous.
    11.169053894347, 0.0117283413517254, 0.241305031450087, 0.0574859776916067, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:805:62: style: Trailing whitespace is superfluous.
    1.87656858879988, 0.0043085916783709, 0.0600086514576581, 
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:806:66: style: Trailing whitespace is superfluous.
    0.00302743362681053, 0.144336393591294, 0.000339102432874504, 
                                                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:807:63: style: Trailing whitespace is superfluous.
    0.00572508926583248, 0, 0, NA, NA, 0, 0, NA, NA, 0, 0, NA, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:808:63: style: Trailing whitespace is superfluous.
    NA, 0, 0, NA, NA, 0.0128047270440601, 0.00962242623941959, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:809:64: style: Trailing whitespace is superfluous.
    0, 0, 0, 0, NA, NA, 0.0146997668208779, 0.0288672787182588, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:810:67: style: Trailing whitespace is superfluous.
    0.00299655057280693, 0, 0.014188550533692, 0.0288672787182588, 
                                                                  ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:811:78: style: Trailing whitespace is superfluous.
    0.00353736850090237, 0.0068044621459073, 0, 0, NA, NA, 0.180137100257763, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:812:79: style: Trailing whitespace is superfluous.
    1.0203168923821, 0.040042920301921, 0.0430692920142788, 0.029516872734681, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:813:64: style: Trailing whitespace is superfluous.
    0.0962242623941959, 0.0127318485088737, 0.0153967402422343, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:814:72: style: Trailing whitespace is superfluous.
    0.000139737010487304, 0.00962242623941959, 0, 0, 0.025919065371024, 
                                                                       ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:815:79: style: Trailing whitespace is superfluous.
    0.00962242623941959, 0, 0, 0, 0, NA, NA, 0, 0, NA, NA, 0.0294967133340961, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:816:68: style: Trailing whitespace is superfluous.
    0.0384897049576784, 0.00510164773925447, 0, 0.0122327870408386, 
                                                                   ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:817:63: style: Trailing whitespace is superfluous.
    0.0192448524788392, 0, 0, 0, 0, NA, NA, 0.105540077062325, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:818:62: style: Trailing whitespace is superfluous.
    1.69844169573761, 0.00663096782756356, 0.051103411959968, 
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:819:64: style: Trailing whitespace is superfluous.
    0.0383384723721556, 0.780077881801693, 0.00290621045504181, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:820:64: style: Trailing whitespace is superfluous.
    0.0300135217322521, 0.00695692298898932, 0.153958819830713, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:821:62: style: Trailing whitespace is superfluous.
    0.00100691202547153, 0.0146169927578749, 0, 0, NA, NA, 0, 
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:822:63: style: Trailing whitespace is superfluous.
    0, NA, NA, 0, 0, NA, NA, 0, 0, NA, NA, 0, 0, NA, NA, 0, 0, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:823:1: style: lines should not be more than 80 characters.
    NA, NA, 0.00530640982811101, 0.00962242623941959, 0, 0, 0.00412590697324745, 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:823:81: style: Trailing whitespace is superfluous.
    NA, NA, 0.00530640982811101, 0.00962242623941959, 0, 0, 0.00412590697324745, 
                                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:824:65: style: Trailing whitespace is superfluous.
    0.00962242623941959, 0, 0, 0, 0, NA, NA, 0.0280298905475069, 
                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:825:65: style: Trailing whitespace is superfluous.
    0.192448524788392, 0.00603599682466324, 0.00399133482064926, 
                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:826:64: style: Trailing whitespace is superfluous.
    0.0328901154221367, 0.0288672787182588, 0.0212202637278846, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:827:67: style: Trailing whitespace is superfluous.
    0.00214284984634374, 0.00078627572279015, 0.00962242623941959, 
                                                                  ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:828:71: style: Trailing whitespace is superfluous.
    0, 0, 0.046620130034188, 0.0192448524788392, 0.000344108251047159, 
                                                                      ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:829:62: style: Trailing whitespace is superfluous.
    0, 0, 0, NA, NA, 0.0332063709586049, 0.00962242623941959, 
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:830:68: style: Trailing whitespace is superfluous.
    0, 0, 0.115649047075005, 0.125091541112455, 0.0275130193686341, 
                                                                   ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:831:64: style: Trailing whitespace is superfluous.
    0.0102814001130812, 0.0302353455811479, 0.0288672787182588, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:832:64: style: Trailing whitespace is superfluous.
    0.011270402257918, 0.00471426966195624, 0.0043246637008729, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:833:67: style: Trailing whitespace is superfluous.
    0.00962242623941959, 0, 0, 0.336345651069449, 5.3436920648428, 
                                                                  ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:834:63: style: Trailing whitespace is superfluous.
    0.0115646714167261, 0.120716118447599, 0.0574440024902534, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:835:63: style: Trailing whitespace is superfluous.
    1.06808931257557, 0.00334876361089835, 0.0332472607840084, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:836:64: style: Trailing whitespace is superfluous.
    0.0149637936447129, 0.261232744936517, 0.00248889054842041, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:837:62: style: Trailing whitespace is superfluous.
    0.0138295978112365, 0, 0, NA, NA, 0, 0, NA, NA, 0, 0, NA, 
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:838:75: style: Trailing whitespace is superfluous.
    NA, 0.0288934505629388, 0.00962242623941959, 0, 0, 0.0591007809793241, 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:839:65: style: Trailing whitespace is superfluous.
    0.0192448524788392, 0.0127697843203309, 0.00453630809727154, 
                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:840:79: style: Trailing whitespace is superfluous.
    0, 0, NA, NA, 0.0214134901265061, 0.0288672787182588, 0.00208306928231655, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:841:61: style: Trailing whitespace is superfluous.
    0, 0.00548447661690741, 0.00962242623941959, 0, 0, 0, 0, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:842:69: style: Trailing whitespace is superfluous.
    NA, NA, 0.104413186761807, 0.70243711547763, 0.0119774054198437, 
                                                                    ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:843:64: style: Trailing whitespace is superfluous.
    0.0317653182198542, 0.0126632455342117, 0.0869301561366385, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:844:66: style: Trailing whitespace is superfluous.
    0.00253496408110539, 0.0124523906564316, 0.00161918085519368, 
                                                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:845:63: style: Trailing whitespace is superfluous.
    0.0192448524788392, 1.10624822576176e-05, 0, 0, 0, NA, NA, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:846:71: style: Trailing whitespace is superfluous.
    0, 0, NA, NA, 0, 0, NA, NA, 0.048070824421012, 0.0673569836759371, 
                                                                      ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:847:65: style: Trailing whitespace is superfluous.
    0.00784261032819157, 0.0100235986579838, 0.0684687992563196, 
                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:848:65: style: Trailing whitespace is superfluous.
    0.0577345574365175, 0.0142759706525931, 0.00514368989817819, 
                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:849:75: style: Trailing whitespace is superfluous.
    0, 0, NA, NA, 0.548258033900044, 8.41807323639661, 0.0163569164401242, 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:850:61: style: Trailing whitespace is superfluous.
    0.161727622348924, 0.0822954998003424, 1.48185364087062, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:851:65: style: Trailing whitespace is superfluous.
    0.00530243872011479, 0.0549415370490225, 0.0223741697893764, 
                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:852:63: style: Trailing whitespace is superfluous.
    0.404141902055623, 0.0023171280683017, 0.0231920334572352, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:853:63: style: Trailing whitespace is superfluous.
    0.000944679584894701, 0.00962242623941959, 0, 0, 0, 0, NA, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:854:64: style: Trailing whitespace is superfluous.
    NA, 0, 0, NA, NA, 0, 0, NA, NA, 0, 0, NA, NA, 0, 0, NA, NA, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:855:65: style: Trailing whitespace is superfluous.
    0.0145589007745547, 0.0192448524788392, 0.00303779113761817, 
                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:856:72: style: Trailing whitespace is superfluous.
    0.00194413204168779, 0, 0, NA, NA, 0, 0, NA, NA, 0.170200295543153, 
                                                                       ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:857:61: style: Trailing whitespace is superfluous.
    0.673569836759371, 0.02353350930661, 0.0222513479420701, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:858:63: style: Trailing whitespace is superfluous.
    0.0330011347547288, 0.134713967351874, 0.0057191545298922, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:859:62: style: Trailing whitespace is superfluous.
    0.0118927826369988, 0, 0, NA, NA, 0, 0, NA, NA, 0, 0, NA, 
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:860:62: style: Trailing whitespace is superfluous.
    NA, 0, 0, NA, NA, 0.0163412781442746, 0.0288672787182588, 
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:861:67: style: Trailing whitespace is superfluous.
    0.00338673536317791, 0.00453630809727154, 0.00485564364327071, 
                                                                  ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:862:64: style: Trailing whitespace is superfluous.
    0.00962242623941959, 0, 0, 0, 0, NA, NA, 0.325656360789892, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:863:79: style: Trailing whitespace is superfluous.
    6.42205314336457, 0.0118569819402662, 0.14383849814924, 0.037163775217352, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:864:64: style: Trailing whitespace is superfluous.
    0.886046283252721, 0.00344363597245294, 0.0400182770531608, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:865:66: style: Trailing whitespace is superfluous.
    0.0017546432066184, 0.0496445382406288, 0.000476085379764341, 
                                                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:866:62: style: Trailing whitespace is superfluous.
    0.0105960779593644, 0, 0, NA, NA, 0, 0, NA, NA, 0, 0, NA, 
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:867:70: style: Trailing whitespace is superfluous.
    NA, 0, 0, NA, NA, 0, 0, NA, NA, 0, 0, NA, NA, 0.0200328018831485, 
                                                                     ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:868:79: style: Trailing whitespace is superfluous.
    0.00962242623941959, 0, 0, 0, 0, NA, NA, 0, 0, NA, NA, 0.0232803815729548, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:869:64: style: Trailing whitespace is superfluous.
    0.175724270405079, 0.00465722818837447, 0.0171397933017442, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:870:66: style: Trailing whitespace is superfluous.
    0.00281552304828926, 0.0288672787182588, 0.00109899530475945, 
                                                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:871:80: style: Trailing whitespace is superfluous.
    0.00890913224202339, 0, 0, NA, NA, 0.0472074592606736, 0.00962242623941959, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:872:79: style: Trailing whitespace is superfluous.
    0, 0, 0, 0, NA, NA, 0, 0, NA, NA, 0.0198182882689747, 0.00962242623941959, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:873:76: style: Trailing whitespace is superfluous.
    0, 0, 0, 0, NA, NA, 0, 0, NA, NA, 0.0896593793775469, 1.17558730501814, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:874:65: style: Trailing whitespace is superfluous.
    0.00586298115105884, 0.0436951180650244, 0.0270919938796263, 
                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:875:64: style: Trailing whitespace is superfluous.
    0.351679665659008, 0.00408806868609189, 0.0392326974541743, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:876:67: style: Trailing whitespace is superfluous.
    0.00432625463145089, 0.0481121311970979, 0.000849687808476386, 
                                                                  ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:877:62: style: Trailing whitespace is superfluous.
    0.0029281742856664, 0, 0, NA, NA, 0, 0, NA, NA, 0, 0, NA, 
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:878:61: style: Trailing whitespace is superfluous.
    NA, 0.0404002719433525, 0.00962242623941959, 0, 0, 0, 0, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:879:68: style: Trailing whitespace is superfluous.
    NA, NA, 0, 0, NA, NA, 0.00866931071770395, 0.00962242623941959, 
                                                                   ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:880:78: style: Trailing whitespace is superfluous.
    0, 0, 0, 0, NA, NA, 0, 0, NA, NA, 0.0432397804209338, 0.0866018361547763, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:881:65: style: Trailing whitespace is superfluous.
    0.0305785734727359, 0.0125729838196577, 0.00605999890505938, 
                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:882:66: style: Trailing whitespace is superfluous.
    0.0334357258162031, 0.000444286495362316, 0.0133639499408685, 
                                                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:883:62: style: Trailing whitespace is superfluous.
    0, 0, NA, NA, 0.0522019624723257, 0.00962242623941959, 0, 
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:884:64: style: Trailing whitespace is superfluous.
    0, 0.0418910572164828, 0.00962242623941959, 0, 0, 0, 0, NA, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:885:69: style: Trailing whitespace is superfluous.
    NA, 0.0228858606738693, 0.0192448524788392, 0.00763604710233304, 
                                                                    ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:886:66: style: Trailing whitespace is superfluous.
    0.00194413204168779, 0.0362593933120276, 0.00962242623941959, 
                                                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:887:61: style: Trailing whitespace is superfluous.
    0, 0, 0, 0, NA, NA, 0.272587219205019, 3.16580568183192, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:888:64: style: Trailing whitespace is superfluous.
    0.0119076358370256, 0.0957002692402692, 0.0626590104195574, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:889:64: style: Trailing whitespace is superfluous.
    0.769794099153567, 0.00447133956684275, 0.0262392179538821, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:890:64: style: Trailing whitespace is superfluous.
    0.0265229758017109, 0.327162492140266, 0.00336073222265743, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:891:62: style: Trailing whitespace is superfluous.
    0.0220744113512114, 0, 0, NA, NA, 0, 0, NA, NA, 0, 0, NA, 
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:892:76: style: Trailing whitespace is superfluous.
    NA, 0, 0, NA, NA, 0, 0, NA, NA, 0.022009661034811, 0.00962242623941959, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:893:79: style: Trailing whitespace is superfluous.
    0, 0, 0, 0, NA, NA, 0, 0, NA, NA, 0.0452718399996124, 0.00962242623941959, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:894:70: style: Trailing whitespace is superfluous.
    0, 0, 0.0412235503357829, 0.307917639661427, 0.00657976759663187, 
                                                                     ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:895:65: style: Trailing whitespace is superfluous.
    0.0229235462204561, 0.00224591908052365, 0.0192448524788392, 
                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:896:63: style: Trailing whitespace is superfluous.
    0.000739745949516426, 0, 0, 0, NA, NA, 0, 0, NA, NA, 0, 0, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:897:66: style: Trailing whitespace is superfluous.
    NA, NA, 0, 0, NA, NA, 0.0445746128024857, 0.0481121311970979, 
                                                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:898:69: style: Trailing whitespace is superfluous.
    0.00398312067836631, 0, 0.0062684450502778, 0.00962242623941959, 
                                                                    ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:899:77: style: Trailing whitespace is superfluous.
    0, 0, 0.00718611113034067, 0.00962242623941959, 0, 0, 0.461999702399579, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:900:61: style: Trailing whitespace is superfluous.
    4.96127384477025, 0.0145973581680253, 0.109494572885929, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:901:64: style: Trailing whitespace is superfluous.
    0.0690762614546471, 0.837316820359734, 0.00540291027677448, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:902:63: style: Trailing whitespace is superfluous.
    0.0344223956023169, 0.0145390724527894, 0.211693377267231, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:903:62: style: Trailing whitespace is superfluous.
    0.00221975959385417, 0.0234829434306613, 0, 0, NA, NA, 0, 
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:904:70: style: Trailing whitespace is superfluous.
    0, NA, NA, 0, 0, NA, NA, 0.0307726471881571, 0.00962242623941959, 
                                                                     ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:905:77: style: Trailing whitespace is superfluous.
    0, 0, 0, 0, NA, NA, 0, 0, NA, NA, 0.013893373785033, 0.0192448524788392, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:906:69: style: Trailing whitespace is superfluous.
    0.00110264124842078, 0, 0.0118378992377908, 0.00962242623941959, 
                                                                    ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:907:63: style: Trailing whitespace is superfluous.
    0, 0, 0, 0, NA, NA, 0.0530661291297709, 0.202070951027811, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:908:64: style: Trailing whitespace is superfluous.
    0.0121597346885879, 0.0157413385449154, 0.0331958525882583, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:909:65: style: Trailing whitespace is superfluous.
    0.0769794099153567, 0.00842832834867286, 0.0110378778586559, 
                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:910:63: style: Trailing whitespace is superfluous.
    0, 0, NA, NA, 0, 0, NA, NA, 0, 0, NA, NA, 0, 0, NA, NA, 0, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:911:61: style: Trailing whitespace is superfluous.
    0, NA, NA, 0, 0, NA, NA, 0, 0, NA, NA, 0.23640154290825, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:912:62: style: Trailing whitespace is superfluous.
    3.18829495389964, 0.00978499795960524, 0.092175966613829, 
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:913:64: style: Trailing whitespace is superfluous.
    0.0551536081809534, 0.833986312802298, 0.00397104564092747, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:914:65: style: Trailing whitespace is superfluous.
    0.0381238519237159, 0.00207527213497804, 0.0481121311970979, 
                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:915:61: style: Trailing whitespace is superfluous.
    0.000436158076643124, 0.00506296438434449, 0, 0, NA, NA, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:916:63: style: Trailing whitespace is superfluous.
    0, 0, NA, NA, 0, 0, NA, NA, 0, 0, NA, NA, 0, 0, NA, NA, 0, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:917:77: style: Trailing whitespace is superfluous.
    0, NA, NA, 0, 0, NA, NA, 0, 0, NA, NA, 0, 0, NA, NA, 0.0278104034043164, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:918:65: style: Trailing whitespace is superfluous.
    0.0962242623941959, 0.00959398841512892, 0.0210828548567982, 
                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:919:67: style: Trailing whitespace is superfluous.
    0.00730618974341216, 0.0192448524788392, 0.000734310148356925, 
                                                                  ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:920:63: style: Trailing whitespace is superfluous.
    0.00194413204168779, 0, 0, NA, NA, 0, 0, NA, NA, 0, 0, NA, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:921:76: style: Trailing whitespace is superfluous.
    NA, 0, 0, NA, NA, 0, 0, NA, NA, 0.174354462526685, 0.00962242623941959, 
                                                                           ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:922:61: style: Trailing whitespace is superfluous.
    0, 0, 0, 0, NA, NA, 0.271546491851896, 1.53958819830713, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:923:63: style: Trailing whitespace is superfluous.
    0.018802648781767, 0.0605631261628521, 0.0736248113821659, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:924:64: style: Trailing whitespace is superfluous.
    0.559311207905079, 0.00795654249791003, 0.0288777849614687, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:925:65: style: Trailing whitespace is superfluous.
    0.0107696498628904, 0.0769794099153567, 0.00176784259377474, 
                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:926:61: style: Trailing whitespace is superfluous.
    0.016355891446015, 0, 0, NA, NA, 0, 0, NA, NA, 0, 0, NA, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:927:64: style: Trailing whitespace is superfluous.
    NA, 0, 0, NA, NA, 0, 0, NA, NA, 0, 0, NA, NA, 0, 0, NA, NA, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:928:72: style: Trailing whitespace is superfluous.
    0, 0, NA, NA, 0, 0, NA, NA, 0.0128054337968337, 0.0577345574365175, 
                                                                       ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:929:63: style: Trailing whitespace is superfluous.
    0.00441479789448573, 0.00697881479039009, 0, 0, NA, NA, 0, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:930:62: style: Trailing whitespace is superfluous.
    0, NA, NA, 0.0662819057876324, 0.00962242623941959, 0, 0, 
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:931:72: style: Trailing whitespace is superfluous.
    0, 0, NA, NA, 0, 0, NA, NA, 0.0389020025395417, 0.0288672787182588, 
                                                                       ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:932:66: style: Trailing whitespace is superfluous.
    0.00461109286846743, 0.00471426966195624, 0.0370102918527748, 
                                                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:933:64: style: Trailing whitespace is superfluous.
    0.00962242623941959, 0, 0, 0, 0, NA, NA, 0.750779835261577, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:934:61: style: Trailing whitespace is superfluous.
    4.35227478370617, 0.0329002923319741, 0.135901743345502, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:935:61: style: Trailing whitespace is superfluous.
    0.200577293435396, 1.20579848843712, 0.0136406201282072, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:936:63: style: Trailing whitespace is superfluous.
    0.0382493739669279, 0.0741218297284099, 0.384897049576784, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:937:64: style: Trailing whitespace is superfluous.
    0.0116514678504386, 0.0251563226892583, 0.0585247917821617, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:938:62: style: Trailing whitespace is superfluous.
    0.00962242623941959, 0, 0, 0, 0, NA, NA, 0, 0, NA, NA, 0, 
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:939:63: style: Trailing whitespace is superfluous.
    0, NA, NA, 0, 0, NA, NA, 0, 0, NA, NA, 0, 0, NA, NA, 0, 0, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:940:65: style: Trailing whitespace is superfluous.
    NA, NA, 0, 0, NA, NA, 0.0472199233866413, 0.115469114873035, 
                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:941:65: style: Trailing whitespace is superfluous.
    0.0175632992659954, 0.0193209584345375, 0.00537998771997316, 
                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:942:62: style: Trailing whitespace is superfluous.
    0.00962242623941959, 0, 0, 0, 0, NA, NA, 0, 0, NA, NA, 0, 
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:943:68: style: Trailing whitespace is superfluous.
    0, NA, NA, 0, 0, NA, NA, 0.083819349854663, 0.0288672787182588, 
                                                                   ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:944:68: style: Trailing whitespace is superfluous.
    0.0333235688904428, 0, 0.0315060160739026, 0.00962242623941959, 
                                                                   ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:945:61: style: Trailing whitespace is superfluous.
    0, 0, 0, 0, NA, NA, 0.809204468588532, 5.00198195533555, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:946:61: style: Trailing whitespace is superfluous.
    0.0322220401107847, 0.135319958108206, 0.12081507636978, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:947:64: style: Trailing whitespace is superfluous.
    0.914130492744861, 0.00798394645620821, 0.0331385606032348, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:948:64: style: Trailing whitespace is superfluous.
    0.0327027529923748, 0.311703581393591, 0.00383823778478425, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:949:62: style: Trailing whitespace is superfluous.
    0.0217070014929452, 0, 0, NA, NA, 0, 0, NA, NA, 0, 0, NA, 
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:950:64: style: Trailing whitespace is superfluous.
    NA, 0, 0, NA, NA, 0, 0, NA, NA, 0, 0, NA, NA, 0, 0, NA, NA, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:951:72: style: Trailing whitespace is superfluous.
    0, 0, NA, NA, 0, 0, NA, NA, 0.0325595539205098, 0.0962242623941959, 
                                                                       ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:952:66: style: Trailing whitespace is superfluous.
    0.00594142763868266, 0.00583239612506342, 0.0108556157461593, 
                                                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:953:66: style: Trailing whitespace is superfluous.
    0.0288672787182588, 0.00253294113512167, 0.00673467094565177, 
                                                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:954:80: style: Trailing whitespace is superfluous.
    0, 0, NA, NA, 0, 0, NA, NA, 0, 0, NA, NA, 0, 0, NA, NA, 0.0173005572245161, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:955:63: style: Trailing whitespace is superfluous.
    0.0192448524788392, 0.000439235210225817, 0, 0, 0, NA, NA, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:956:74: style: Trailing whitespace is superfluous.
    0, 0, NA, NA, 0.441871648141549, 3.7882083095526, 0.0209806227087742, 
                                                                         ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:957:1: style: lines should not be more than 80 characters.
    0.11932723950847, 0.100960848354949, 0.905728578824063, 0.00782708688924316, 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:957:81: style: Trailing whitespace is superfluous.
    0.11932723950847, 0.100960848354949, 0.905728578824063, 0.00782708688924316, 
                                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:958:63: style: Trailing whitespace is superfluous.
    0.0446551913276304, 0.0140785223379454, 0.144336393591294, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:959:61: style: Trailing whitespace is superfluous.
    0.0028033829925013, 0.0150452318921007, 0, 0, NA, NA, 0, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:960:63: style: Trailing whitespace is superfluous.
    0, NA, NA, 0, 0, NA, NA, 0, 0, NA, NA, 0, 0, NA, NA, 0, 0, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:961:62: style: Trailing whitespace is superfluous.
    NA, NA, 0.0101717319674988, 0.00962242623941959, 0, 0, 0, 
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:962:69: style: Trailing whitespace is superfluous.
    0, NA, NA, 0, 0, NA, NA, 0.0277743741239187, 0.0288672787182588, 
                                                                    ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:963:62: style: Trailing whitespace is superfluous.
    0.0240309822468147, 0.00471426966195624, 0, 0, NA, NA, 0, 
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:964:63: style: Trailing whitespace is superfluous.
    0, NA, NA, 0, 0, NA, NA, 0, 0, NA, NA, 0, 0, NA, NA, 0, 0, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:965:64: style: Trailing whitespace is superfluous.
    NA, NA, 0, 0, NA, NA, 0, 0, NA, NA, 0, 0, NA, NA, 0, 0, NA, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:966:64: style: Trailing whitespace is superfluous.
    NA, 0, 0, NA, NA, 0, 0, NA, NA, 0, 0, NA, NA, 0, 0, NA, NA, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:967:63: style: Trailing whitespace is superfluous.
    0, 0, NA, NA, 0, 0, NA, NA, 0, 0, NA, NA, 0, 0, NA, NA, 0, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:968:63: style: Trailing whitespace is superfluous.
    0, NA, NA, 0, 0, NA, NA, 0, 0, NA, NA, 0, 0, NA, NA, 0, 0, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:969:64: style: Trailing whitespace is superfluous.
    NA, NA, 0, 0, NA, NA, 0, 0, NA, NA, 0, 0, NA, NA, 0, 0, NA, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:970:64: style: Trailing whitespace is superfluous.
    NA, 0, 0, NA, NA, 0, 0, NA, NA, 0, 0, NA, NA, 0, 0, NA, NA, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:971:63: style: Trailing whitespace is superfluous.
    0, 0, NA, NA, 0, 0, NA, NA, 0, 0, NA, NA, 0, 0, NA, NA, 0, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:972:63: style: Trailing whitespace is superfluous.
    0, NA, NA, 0, 0, NA, NA, 0, 0, NA, NA, 0, 0, NA, NA, 0, 0, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:973:64: style: Trailing whitespace is superfluous.
    NA, NA, 0, 0, NA, NA, 0, 0, NA, NA, 0, 0, NA, NA, 0, 0, NA, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:974:64: style: Trailing whitespace is superfluous.
    NA, 0, 0, NA, NA, 0, 0, NA, NA, 0, 0, NA, NA, 0, 0, NA, NA, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:975:63: style: Trailing whitespace is superfluous.
    0, 0, NA, NA, 0, 0, NA, NA, 0, 0, NA, NA, 0, 0, NA, NA, 0, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:976:63: style: Trailing whitespace is superfluous.
    0, NA, NA, 0, 0, NA, NA, 0, 0, NA, NA, 0, 0, NA, NA, 0, 0, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:977:64: style: Trailing whitespace is superfluous.
    NA, NA, 0, 0, NA, NA, 0, 0, NA, NA, 0, 0, NA, NA, 0, 0, NA, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:978:64: style: Trailing whitespace is superfluous.
    NA, 0, 0, NA, NA, 0, 0, NA, NA, 0, 0, NA, NA, 0, 0, NA, NA, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:979:63: style: Trailing whitespace is superfluous.
    0, 0, NA, NA, 0, 0, NA, NA, 0, 0, NA, NA, 0, 0, NA, NA, 0, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:980:63: style: Trailing whitespace is superfluous.
    0, NA, NA, 0, 0, NA, NA, 0, 0, NA, NA, 0, 0, NA, NA, 0, 0, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:981:64: style: Trailing whitespace is superfluous.
    NA, NA, 0, 0, NA, NA, 0, 0, NA, NA, 0, 0, NA, NA, 0, 0, NA, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:982:64: style: Trailing whitespace is superfluous.
    NA, 0, 0, NA, NA, 0, 0, NA, NA, 0, 0, NA, NA, 0, 0, NA, NA, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:983:74: style: Trailing whitespace is superfluous.
    0, 0, NA, NA, 0, 0, NA, NA, 0, 0, NA, NA, 0, 0, NA, NA), .Dim = c(2L, 
                                                                         ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:984:64: style: Trailing whitespace is superfluous.
    2L, 3L, 7L, 4L, 9L)), nT.Bagr.Tart.Tzg.Dkl = structure(c(0, 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:985:61: style: Trailing whitespace is superfluous.
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:986:61: style: Trailing whitespace is superfluous.
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 3, 0, 0, 0, 0, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:987:61: style: Trailing whitespace is superfluous.
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 0, 0, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:988:61: style: Trailing whitespace is superfluous.
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:989:63: style: Trailing whitespace is superfluous.
    0, 0, 0, 0, 0, 0, 0, 139, 29, 4, 41, 17, 3, 0, 1, 0, 0, 0, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:990:61: style: Trailing whitespace is superfluous.
    0, 21, 14, 0, 55, 57, 6, 421, 262, 38, 242, 40, 22, 201, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:991:61: style: Trailing whitespace is superfluous.
    96, 15, 1, 0, 0, 6, 3, 0, 78, 31, 6, 143, 130, 15, 1242, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:992:62: style: Trailing whitespace is superfluous.
    841, 177, 27, 4, 1, 115, 43, 4, 1, 0, 0, 8, 4, 1, 49, 18, 
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:993:62: style: Trailing whitespace is superfluous.
    6, 133, 74, 11, 1778, 1006, 214, 0, 0, 0, 15, 7, 1, 0, 0, 
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:994:62: style: Trailing whitespace is superfluous.
    0, 2, 2, 0, 19, 2, 1, 52, 11, 3, 1233, 438, 34, 27, 5, 1, 
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:995:62: style: Trailing whitespace is superfluous.
    21, 10, 3, 395, 244, 17, 0, 0, 0, 3, 6, 3, 12, 7, 2, 138, 
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:996:63: style: Trailing whitespace is superfluous.
    40, 9, 55, 7, 8, 87, 27, 2, 913, 421, 71, 0, 1, 0, 10, 10, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:997:63: style: Trailing whitespace is superfluous.
    2, 31, 25, 0, 416, 152, 34, 13, 2, 0, 61, 9, 1, 1576, 550, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:998:62: style: Trailing whitespace is superfluous.
    154, 1, 1, 0, 11, 5, 2, 63, 26, 6, 720, 205, 41, 0, 0, 0, 
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:999:61: style: Trailing whitespace is superfluous.
    8, 3, 0, 1406, 394, 34, 1, 0, 0, 1, 3, 0, 19, 4, 0, 407, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:1000:61: style: Trailing whitespace is superfluous.
    83, 8, 4, 3, 1, 8, 4, 1, 359, 190, 19, 0, 0, 0, 2, 0, 0, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:1001:63: style: Trailing whitespace is superfluous.
    0, 1, 1, 73, 9, 1, 11, 4, 3, 44, 9, 1, 792, 266, 67, 1, 0, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:1002:65: style: Trailing whitespace is superfluous.
    0, 5, 4, 2, 16, 10, 4, 243, 44, 14, 2, 2, 0, 49, 9, 0, 1360, 
                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:1003:61: style: Trailing whitespace is superfluous.
    353, 111, 1, 0, 0, 7, 0, 1, 41, 4, 0, 374, 80, 13, 0, 0, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:1004:63: style: Trailing whitespace is superfluous.
    0, 9, 0, 0, 1120, 243, 24, 1, 0, 0, 0, 0, 1, 3, 4, 0, 185, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:1005:61: style: Trailing whitespace is superfluous.
    30, 0, 5, 0, 0, 2, 4, 0, 271, 100, 15, 0, 0, 0, 6, 2, 0, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:1006:62: style: Trailing whitespace is superfluous.
    1, 0, 0, 40, 4, 2, 5, 2, 0, 20, 6, 0, 672, 192, 51, 0, 0, 
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:1007:62: style: Trailing whitespace is superfluous.
    0, 3, 2, 1, 8, 1, 1, 143, 22, 4, 1, 0, 0, 34, 7, 0, 1021, 
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:1008:62: style: Trailing whitespace is superfluous.
    241, 63, 0, 0, 0, 1, 1, 0, 16, 2, 0, 214, 28, 2, 0, 0, 0, 
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:1009:61: style: Trailing whitespace is superfluous.
    5, 3, 0, 816, 173, 15, 0, 0, 0, 0, 1, 0, 3, 2, 0, 92, 9, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:1010:62: style: Trailing whitespace is superfluous.
    1, 1, 0, 0, 4, 1, 0, 157, 77, 15, 0, 0, 0, 0, 0, 0, 1, 1, 
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:1011:62: style: Trailing whitespace is superfluous.
    0, 20, 3, 1, 2, 0, 1, 13, 3, 1, 462, 105, 26, 0, 0, 0, 1, 
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:1012:61: style: Trailing whitespace is superfluous.
    2, 0, 3, 1, 0, 66, 7, 2, 0, 0, 0, 7, 6, 0, 688, 136, 39, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:1013:65: style: Trailing whitespace is superfluous.
    1, 0, 0, 0, 0, 0, 2, 0, 0, 67, 14, 0, 0, 0, 0, 3, 1, 0, 522, 
                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:1014:63: style: Trailing whitespace is superfluous.
    81, 4, 0, 0, 0, 0, 0, 0, 1, 0, 0, 18, 3, 0, 1, 0, 0, 1, 0, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:1015:61: style: Trailing whitespace is superfluous.
    0, 106, 33, 5, 0, 0, 0, 1, 0, 0, 1, 0, 0, 8, 3, 0, 1, 1, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:1016:63: style: Trailing whitespace is superfluous.
    0, 2, 1, 0, 271, 76, 32, 0, 0, 0, 0, 0, 1, 0, 0, 1, 29, 2, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:1017:62: style: Trailing whitespace is superfluous.
    0, 0, 0, 0, 5, 1, 1, 436, 84, 20, 0, 0, 0, 1, 0, 0, 2, 1, 
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:1018:62: style: Trailing whitespace is superfluous.
    0, 21, 8, 0, 0, 0, 0, 0, 0, 0, 273, 80, 5, 0, 0, 0, 0, 0, 
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:1019:61: style: Trailing whitespace is superfluous.
    0, 0, 0, 0, 8, 2, 0, 0, 0, 0, 0, 1, 0, 136, 53, 7, 0, 0, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:1020:62: style: Trailing whitespace is superfluous.
    0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 1, 0, 0, 3, 1, 0, 341, 118, 
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:1021:63: style: Trailing whitespace is superfluous.
    37, 1, 0, 0, 0, 0, 0, 0, 0, 0, 10, 1, 0, 0, 0, 0, 3, 1, 0, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:1022:63: style: Trailing whitespace is superfluous.
    388, 89, 31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 3, 0, 0, 0, 0, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:1023:62: style: Trailing whitespace is superfluous.
    2, 0, 0, 297, 81, 14, 0, 0, 0, 0, 0, 0, 1, 0, 0, 3, 0, 0, 
                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:1024:61: style: Trailing whitespace is superfluous.
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:1025:61: style: Trailing whitespace is superfluous.
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:1026:61: style: Trailing whitespace is superfluous.
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:1027:61: style: Trailing whitespace is superfluous.
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:1028:79: style: Trailing whitespace is superfluous.
    0, 0, 0, 0, 0, 0, 0, 0), .Dim = c(3L, 7L, 4L, 9L))), .Names = c("Stratum", 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:1029:73: style: Trailing whitespace is superfluous.
"nTE", "HBF", "se.HBF", "BAGR.Liste", "DKL", "T.ThVN.Bagr.Tart.Tzg.Dkl", 
                                                                        ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:1035:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:1036:73: style: Trailing whitespace is superfluous.
  result <- Totholz.Tart.stratum.fun(totholz.3, ecken.3, trakte.3, 3, 3, 
                                                                        ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:1037:20: style: Put spaces around all infix operators.
            list(g1=c(11,12,13),g2=c(2,3),g3=c(4,5)), A, 
                  ~^~
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:1037:26: style: Commas should always have a space after.
            list(g1=c(11,12,13),g2=c(2,3),g3=c(4,5)), A, 
                         ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:1037:29: style: Commas should always have a space after.
            list(g1=c(11,12,13),g2=c(2,3),g3=c(4,5)), A, 
                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:1037:33: style: Commas should always have a space after.
            list(g1=c(11,12,13),g2=c(2,3),g3=c(4,5)), A, 
                                ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:1037:35: style: Put spaces around all infix operators.
            list(g1=c(11,12,13),g2=c(2,3),g3=c(4,5)), A, 
                                 ~^~
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:1037:40: style: Commas should always have a space after.
            list(g1=c(11,12,13),g2=c(2,3),g3=c(4,5)), A, 
                                       ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:1037:43: style: Commas should always have a space after.
            list(g1=c(11,12,13),g2=c(2,3),g3=c(4,5)), A, 
                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:1037:45: style: Put spaces around all infix operators.
            list(g1=c(11,12,13),g2=c(2,3),g3=c(4,5)), A, 
                                           ~^~
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:1037:50: style: Commas should always have a space after.
            list(g1=c(11,12,13),g2=c(2,3),g3=c(4,5)), A, 
                                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:1037:57: style: Trailing whitespace is superfluous.
            list(g1=c(11,12,13),g2=c(2,3),g3=c(4,5)), A, 
                                                        ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:1038:20: style: Put spaces around all infix operators.
            list(Wa=c(3,5), Begehbar=1))
                  ~^~
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:1038:25: style: Commas should always have a space after.
            list(Wa=c(3,5), Begehbar=1))
                        ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:1038:37: style: Put spaces around all infix operators.
            list(Wa=c(3,5), Begehbar=1))
                                   ~^~
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:1039:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:1041:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:1043:58: style: Trailing whitespace is superfluous.
    Stratum = structure(list(Wa = c(3, 5), Begehbar = 1), 
                                                         ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:1044:39: style: Trailing whitespace is superfluous.
        .Names = c("Wa", "Begehbar")), 
                                      ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:1045:18: style: Trailing whitespace is superfluous.
    nTE = 13232L, 
                 ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:1046:55: style: Trailing whitespace is superfluous.
    HBF = 1323958.42086703, se.HBF = 15760.6334334331, 
                                                      ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:1047:27: style: Trailing whitespace is superfluous.
    TArt.Liste = "Gesamt", 
                          ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:1048:48: style: Trailing whitespace is superfluous.
    T.ThVN.Tart = structure(c(18720220.8092196, 
                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:1049:80: style: Trailing whitespace is superfluous.
         354720338.656413, 517799.620015599, 6821300.9635744, 6333897.44130538, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:1050:1: style: lines should not be more than 80 characters.
         26826289.8825873, 398359.049002373, 946400.326464041, 13112429.4550745, 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:1050:81: style: Trailing whitespace is superfluous.
         26826289.8825873, 398359.049002373, 946400.326464041, 13112429.4550745, 
                                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:1051:64: style: Trailing whitespace is superfluous.
         377114550.991749, 266676.979766229, 6404506.14538798), 
                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:1052:32: style: Trailing whitespace is superfluous.
         .Dim = c(2L, 2L, 3L)), 
                               ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:1053:67: style: Trailing whitespace is superfluous.
    ThVN.ha.Tart = structure(c(14.1395836260175, 267.924077573458, 
                                                                  ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:1054:80: style: Trailing whitespace is superfluous.
        0.345219982742793, 3.78534344783598, 4.7840606936564, 20.2621845669589, 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:1055:1: style: lines should not be more than 80 characters.
        0.27439667526191, 0.498203440678044, 9.90395865036866, 284.838666417322, 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:1055:81: style: Trailing whitespace is superfluous.
        0.27439667526191, 0.498203440678044, 9.90395865036866, 284.838666417322, 
                                                                                ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:1057:69: style: Commas should always have a space after.
        )), nT.Tart = structure(c(3845L, 1223L, 4128L), .Dim = c(3L,1L))), 
                                                                    ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:1057:75: style: Trailing whitespace is superfluous.
        )), nT.Tart = structure(c(3845L, 1223L, 4128L), .Dim = c(3L,1L))), 
                                                                          ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:1058:80: style: Trailing whitespace is superfluous.
    .Names = c("Stratum", "nTE", "HBF", "se.HBF", "TArt.Liste",  "T.ThVN.Tart", 
                                                                               ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:1060:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:1065:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:1066:74: style: Trailing whitespace is superfluous.
  result <- Totholz.klass.stratum.fun(totholz.3, ecken.3, trakte.3, 3, 3, 
                                                                         ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:1067:63: style: Commas should always have a space after.
            list(attr = "tart", kat = list(c(11, 12, 13), c(2,3),c(4,5))), A, 
                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:1067:66: style: Commas should always have a space after.
            list(attr = "tart", kat = list(c(11, 12, 13), c(2,3),c(4,5))), A, 
                                                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:1067:70: style: Commas should always have a space after.
            list(attr = "tart", kat = list(c(11, 12, 13), c(2,3),c(4,5))), A, 
                                                                     ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:1067:78: style: Trailing whitespace is superfluous.
            list(attr = "tart", kat = list(c(11, 12, 13), c(2,3),c(4,5))), A, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:1068:20: style: Put spaces around all infix operators.
            list(Wa=c(3,5), Begehbar=1))
                  ~^~
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:1068:25: style: Commas should always have a space after.
            list(Wa=c(3,5), Begehbar=1))
                        ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:1068:37: style: Put spaces around all infix operators.
            list(Wa=c(3,5), Begehbar=1))
                                   ~^~
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:1069:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:1071:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:1073:58: style: Trailing whitespace is superfluous.
    Stratum = structure(list(Wa = c(3, 5), Begehbar = 1), 
                                                         ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:1074:39: style: Trailing whitespace is superfluous.
        .Names = c("Wa", "Begehbar")), 
                                      ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:1075:18: style: Trailing whitespace is superfluous.
    nTE = 13232L, 
                 ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:1076:55: style: Trailing whitespace is superfluous.
    HBF = 1323958.42086703, se.HBF = 15760.6334334331, 
                                                      ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:1077:66: style: Trailing whitespace is superfluous.
    Klass.Attr = "tart", Klass.Kat = c("11,12,13", "2,3", "4,5"), 
                                                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:1078:67: style: Trailing whitespace is superfluous.
    T.ThVN.klass = structure(c(18720220.8092196, 354720338.656413, 
                                                                  ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:1079:77: style: Trailing whitespace is superfluous.
      517799.620015599, 6821300.9635744, 6333897.44130538, 26826289.8825873, 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:1080:78: style: Trailing whitespace is superfluous.
      398359.049002373, 946400.326464041, 13112429.4550745, 377114550.991749, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:1081:66: style: Trailing whitespace is superfluous.
      266676.979766229, 6404506.14538798), .Dim = c(2L, 2L, 3L)), 
                                                                 ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:1082:68: style: Trailing whitespace is superfluous.
    ThVN.ha.klass = structure(c(14.1395836260175, 267.924077573458, 
                                                                   ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:1083:78: style: Trailing whitespace is superfluous.
      0.345219982742793, 3.78534344783598, 4.7840606936564, 20.2621845669589, 
                                                                             ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:1084:79: style: Trailing whitespace is superfluous.
      0.27439667526191, 0.498203440678044, 9.90395865036866, 284.838666417322, 
                                                                              ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:1085:67: style: Trailing whitespace is superfluous.
      0.156770376224303, 3.24713307502935), .Dim = c(2L, 2L, 3L)), 
                                                                  ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:1086:69: style: Trailing whitespace is superfluous.
    nT.klass = structure(c(3845L, 1223L, 4128L), .Dim = c(3L, 1L))), 
                                                                    ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:1087:77: style: Trailing whitespace is superfluous.
    .Names = c("Stratum", "nTE", "HBF", "se.HBF", "Klass.Attr", "Klass.Kat", 
                                                                            ^
NO COPY: tests/testthat/test_BWI3_HR_Totholz_Funktionen_v1.R:1089:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_deadwood.R:11:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_deadwood.R:13:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_deadwood.R:15:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_deadwood.R:17:55: style: Trailing whitespace is superfluous.
    tnr = c(2062L, 2062L, 2062L, 2062L, 2062L, 2062L), 
                                                      ^
NO COPY: tests/testthat/test_deadwood.R:18:37: style: Trailing whitespace is superfluous.
    enr = c(4L, 4L, 4L, 4L, 1L, 1L), 
                                    ^
NO COPY: tests/testthat/test_deadwood.R:19:36: style: Trailing whitespace is superfluous.
    nr = c(1L, 2L, 3L, 4L, 1L, 2L), 
                                   ^
NO COPY: tests/testthat/test_deadwood.R:20:39: style: Trailing whitespace is superfluous.
    tbagr = c(1L, 1L, 1L, 1L, 1L, 1L), 
                                      ^
NO COPY: tests/testthat/test_deadwood.R:21:32: style: Trailing whitespace is superfluous.
    tart = c(4, 4, 4, 4, 4, 4), 
                               ^
NO COPY: tests/testthat/test_deadwood.R:22:37: style: Trailing whitespace is superfluous.
    tzg = c(3L, 1L, 1L, 2L, 1L, 4L), 
                                    ^
NO COPY: tests/testthat/test_deadwood.R:23:43: style: Trailing whitespace is superfluous.
    tbd = c(24L, 25L, 24L, 30L, 21L, 42L), 
                                          ^
NO COPY: tests/testthat/test_deadwood.R:24:37: style: Trailing whitespace is superfluous.
    tsd = c(0L, 0L, 0L, 0L, 0L, 0L), 
                                    ^
NO COPY: tests/testthat/test_deadwood.R:25:77: style: Trailing whitespace is superfluous.
    lge = c(0.400000006, 0.200000003, 0.200000003, 0.200000003, 0.100000001, 
                                                                            ^
NO COPY: tests/testthat/test_deadwood.R:26:26: style: Trailing whitespace is superfluous.
            0.100000001), 
                         ^
NO COPY: tests/testthat/test_deadwood.R:27:71: style: Trailing whitespace is superfluous.
    tvol = c(0.0180955753, 0.00981747825, 0.00904778764, 0.0141371684, 
                                                                      ^
NO COPY: tests/testthat/test_deadwood.R:28:43: style: Trailing whitespace is superfluous.
             0.00346360635, 0.0138544254), 
                                          ^
NO COPY: tests/testthat/test_deadwood.R:29:37: style: Trailing whitespace is superfluous.
    anz = c(1L, 1L, 1L, 1L, 1L, 1L), 
                                    ^
NO COPY: tests/testthat/test_deadwood.R:30:72: style: Trailing whitespace is superfluous.
    thf = c(127.323944, 127.323944, 127.323944, 127.323944, 127.323944, 
                                                                       ^
NO COPY: tests/testthat/test_deadwood.R:31:56: style: Trailing whitespace is superfluous.
          127.323944), dm = c(24, 25, 24, 30, 21, 42)), 
                                                       ^
NO COPY: tests/testthat/test_deadwood.R:32:80: style: Trailing whitespace is superfluous.
    .Names = c("tnr", "enr", "nr", "tbagr", "tart", "tzg", "tbd", "tsd", "lge", 
                                                                               ^
NO COPY: tests/testthat/test_deadwood.R:33:67: style: Trailing whitespace is superfluous.
               "tvol", "anz", "thf", "dm"), row.names = c(NA, 6L), 
                                                                  ^
NO COPY: tests/testthat/test_deadwood.R:35:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_deadwood.R:40:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_deadwood.R:42:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_deadwood.R:44:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_deadwood.R:46:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_deadwood.R:48:55: style: Trailing whitespace is superfluous.
    tnr = c(2062L, 2062L, 2062L, 2062L, 2210L, 2210L), 
                                                      ^
NO COPY: tests/testthat/test_deadwood.R:49:37: style: Trailing whitespace is superfluous.
    enr = c(3L, 3L, 3L, 3L, 3L, 3L), 
                                    ^
NO COPY: tests/testthat/test_deadwood.R:50:36: style: Trailing whitespace is superfluous.
    nr = c(1L, 2L, 3L, 4L, 1L, 5L), 
                                   ^
NO COPY: tests/testthat/test_deadwood.R:51:39: style: Trailing whitespace is superfluous.
    tbagr = c(1L, 1L, 1L, 1L, 1L, 1L), 
                                      ^
NO COPY: tests/testthat/test_deadwood.R:52:32: style: Trailing whitespace is superfluous.
    tart = c(1, 1, 1, 1, 1, 1), 
                               ^
NO COPY: tests/testthat/test_deadwood.R:53:37: style: Trailing whitespace is superfluous.
    tzg = c(2L, 2L, 2L, 2L, 2L, 3L), 
                                    ^
NO COPY: tests/testthat/test_deadwood.R:54:43: style: Trailing whitespace is superfluous.
    tbd = c(44L, 31L, 31L, 36L, 36L, 36L), 
                                          ^
NO COPY: tests/testthat/test_deadwood.R:55:42: style: Trailing whitespace is superfluous.
    tsd = c(39L, 0L, 27L, 26L, 32L, 27L), 
                                         ^
NO COPY: tests/testthat/test_deadwood.R:56:1: style: lines should not be more than 80 characters.
    lge = c(0.600000024, 12, 0.800000012, 0.899999976, 0.600000024, 0.300000012), 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: tests/testthat/test_deadwood.R:56:82: style: Trailing whitespace is superfluous.
    lge = c(0.600000024, 12, 0.800000012, 0.899999976, 0.600000024, 0.300000012), 
                                                                                 ^
NO COPY: tests/testthat/test_deadwood.R:57:68: style: Trailing whitespace is superfluous.
    tvol = c(0.0811591297, 0.652817607, 0.0528415963, 0.0679290965, 
                                                                   ^
NO COPY: tests/testthat/test_deadwood.R:58:42: style: Trailing whitespace is superfluous.
             0.0544752255, 0.0233793426), 
                                         ^
NO COPY: tests/testthat/test_deadwood.R:59:37: style: Trailing whitespace is superfluous.
    anz = c(1L, 1L, 1L, 1L, 1L, 1L), 
                                    ^
NO COPY: tests/testthat/test_deadwood.R:60:72: style: Trailing whitespace is superfluous.
    thf = c(127.323944, 127.323944, 127.323944, 127.323944, 127.323944, 
                                                                       ^
NO COPY: tests/testthat/test_deadwood.R:61:25: style: Trailing whitespace is superfluous.
            127.323944), 
                        ^
NO COPY: tests/testthat/test_deadwood.R:62:41: style: Trailing whitespace is superfluous.
    dm = c(41.5, 31, 29, 31, 34, 31.5)), 
                                        ^
NO COPY: tests/testthat/test_deadwood.R:63:80: style: Trailing whitespace is superfluous.
    .Names = c("tnr", "enr", "nr", "tbagr", "tart", "tzg", "tbd", "tsd", "lge", 
                                                                               ^
NO COPY: tests/testthat/test_deadwood.R:64:44: style: Trailing whitespace is superfluous.
               "tvol", "anz", "thf", "dm"), 
                                           ^
NO COPY: tests/testthat/test_deadwood.R:65:49: style: Trailing whitespace is superfluous.
    row.names = c(13L, 14L, 15L, 16L, 27L, 31L), 
                                                ^
NO COPY: tests/testthat/test_deadwood.R:67:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_deadwood.R:72:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_deadwood.R:74:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_deadwood.R:76:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_deadwood.R:78:72: style: Trailing whitespace is superfluous.
  ), tvol = c(0.0180955753, 0.00981747825, 0.00904778764, 0.0141371684, 
                                                                       ^
NO COPY: tests/testthat/test_deadwood.R:79:44: style: Trailing whitespace is superfluous.
              0.00346360635, 0.0138544254), 
                                           ^
NO COPY: tests/testthat/test_deadwood.R:80:70: style: Trailing whitespace is superfluous.
  thf = c(127.323944, 127.323944, 127.323944, 127.323944, 127.323944, 
                                                                     ^
NO COPY: tests/testthat/test_deadwood.R:81:23: style: Trailing whitespace is superfluous.
          127.323944), 
                      ^
NO COPY: tests/testthat/test_deadwood.R:82:35: style: Trailing whitespace is superfluous.
  anz = c(1L, 1L, 1L, 1L, 1L, 1L), 
                                  ^
NO COPY: tests/testthat/test_deadwood.R:83:30: style: Trailing whitespace is superfluous.
  tart = c(4, 4, 4, 4, 4, 4), 
                             ^
NO COPY: tests/testthat/test_deadwood.R:84:71: style: Trailing whitespace is superfluous.
  tbagr = c(1L, 1L, 1L, 1L, 1L, 1L), tzg = c(3L, 1L, 1L, 2L, 1L, 4L)), 
                                                                      ^
NO COPY: tests/testthat/test_deadwood.R:85:67: style: Trailing whitespace is superfluous.
  .Names = c("tnr", "tvol", "thf", "anz", "tart", "tbagr", "tzg"), 
                                                                  ^
NO COPY: tests/testthat/test_deadwood.R:87:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_deadwood.R:92:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_deadwood.R:94:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_deadwood.R:95:33: style: Commas should always have a space after.
  output <- deadwood(input[0:50,])
                                ^
NO COPY: tests/testthat/test_deadwood.R:96:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_deadwood.R:97:67: style: Trailing whitespace is superfluous.
  reference <- structure(list(tnr = c(2062L, 2210L, 2210L, 2212L), 
                                                                  ^
NO COPY: tests/testthat/test_deadwood.R:98:71: style: Trailing whitespace is superfluous.
    enr = c(3L, 3L, 4L, 1L), x = c(108.829813847802, 41.4107525970386, 
                                                                      ^
NO COPY: tests/testthat/test_deadwood.R:99:72: style: Trailing whitespace is superfluous.
    8.45000009341954, 43.013250806386)), .Names = c("tnr", "enr", "x"), 
                                                                       ^
NO COPY: tests/testthat/test_deadwood.R:101:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_figures_and_tables.R:12:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_figures_and_tables.R:13:42: style: Only use double-quotes.
  output <- melt_species_attribute_group('FVBN.bagr.akl.gw', 'FI', 'BAF', 'AKL')
                                         ^~~~~~~~~~~~~~~~~~
NO COPY: tests/testthat/test_figures_and_tables.R:13:62: style: Only use double-quotes.
  output <- melt_species_attribute_group('FVBN.bagr.akl.gw', 'FI', 'BAF', 'AKL')
                                                             ^~~~
NO COPY: tests/testthat/test_figures_and_tables.R:13:68: style: Only use double-quotes.
  output <- melt_species_attribute_group('FVBN.bagr.akl.gw', 'FI', 'BAF', 'AKL')
                                                                   ^~~~~
NO COPY: tests/testthat/test_figures_and_tables.R:13:75: style: Only use double-quotes.
  output <- melt_species_attribute_group('FVBN.bagr.akl.gw', 'FI', 'BAF', 'AKL')
                                                                          ^~~~~
NO COPY: tests/testthat/test_figures_and_tables.R:14:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_figures_and_tables.R:15:1: style: lines should not be more than 80 characters.
  reference <- structure(list(prediction = c(101455.691800711, 123702.645472045, 
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: tests/testthat/test_figures_and_tables.R:15:81: style: Trailing whitespace is superfluous.
  reference <- structure(list(prediction = c(101455.691800711, 123702.645472045, 
                                                                                ^
NO COPY: tests/testthat/test_figures_and_tables.R:16:76: style: Trailing whitespace is superfluous.
    96149.3087141302, 109706.758770222, 82485.9048276029, 37055.9687535027, 
                                                                           ^
NO COPY: tests/testthat/test_figures_and_tables.R:17:76: style: Trailing whitespace is superfluous.
    13524.6129992997, 5657.65024172331, 3072.43770128514, 55314.3531603782, 
                                                                           ^
NO COPY: tests/testthat/test_figures_and_tables.R:18:76: style: Trailing whitespace is superfluous.
    108006.955226673, 111067.584122095, 75207.6715450263, 75926.7271831114, 
                                                                           ^
NO COPY: tests/testthat/test_figures_and_tables.R:19:76: style: Trailing whitespace is superfluous.
    44106.3824669629, 20204.3046292027, 5624.08878814184, 3738.66173906768, 
                                                                           ^
NO COPY: tests/testthat/test_figures_and_tables.R:20:75: style: Trailing whitespace is superfluous.
    62658.9084678404, 67033.9527207928, 121385.99103384, 66540.6548667543, 
                                                                          ^
NO COPY: tests/testthat/test_figures_and_tables.R:21:76: style: Trailing whitespace is superfluous.
    56748.6014196971, 42709.1286320823, 21087.7330339931, 8286.85056069205, 
                                                                           ^
NO COPY: tests/testthat/test_figures_and_tables.R:22:77: style: Trailing whitespace is superfluous.
    4329.93913087693), standard_error = c(3325.6817132501, 3780.18021889631, 
                                                                            ^
NO COPY: tests/testthat/test_figures_and_tables.R:23:76: style: Trailing whitespace is superfluous.
    3530.15111745596, 3883.68482898267, 3388.10598882395, 2137.52656393468, 
                                                                           ^
NO COPY: tests/testthat/test_figures_and_tables.R:24:76: style: Trailing whitespace is superfluous.
    1169.25996899341, 770.392860193016, 559.728847202122, 2531.46240617407, 
                                                                           ^
NO COPY: tests/testthat/test_figures_and_tables.R:25:76: style: Trailing whitespace is superfluous.
    3617.53057791328, 3654.57241289469, 3010.69550678946, 3184.42867336539, 
                                                                           ^
NO COPY: tests/testthat/test_figures_and_tables.R:26:75: style: Trailing whitespace is superfluous.
    2309.55961884203, 1439.07762599681, 656.130735374848, 555.80082597679, 
                                                                          ^
NO COPY: tests/testthat/test_figures_and_tables.R:27:76: style: Trailing whitespace is superfluous.
    2733.29029208858, 2750.56950603433, 3774.32693152555, 2702.71874000177, 
                                                                           ^
NO COPY: tests/testthat/test_figures_and_tables.R:28:76: style: Trailing whitespace is superfluous.
    2541.73758639033, 2173.93921595373, 1453.40283817208, 800.031111798687, 
                                                                           ^
NO COPY: tests/testthat/test_figures_and_tables.R:29:65: style: Trailing whitespace is superfluous.
    575.50602663425), abbreviation = structure(c(1L, 1L, 1L, 1L, 
                                                                ^
NO COPY: tests/testthat/test_figures_and_tables.R:30:68: style: Trailing whitespace is superfluous.
    1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 
                                                                   ^
NO COPY: tests/testthat/test_figures_and_tables.R:31:68: style: Trailing whitespace is superfluous.
    1L, 1L, 1L, 1L, 1L, 1L, 1L), .Label = "BAF", class = "factor"), 
                                                                   ^
NO COPY: tests/testthat/test_figures_and_tables.R:32:62: style: Trailing whitespace is superfluous.
    bwi = structure(c(1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 
                                                             ^
NO COPY: tests/testthat/test_figures_and_tables.R:33:64: style: Trailing whitespace is superfluous.
    2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 
                                                               ^
NO COPY: tests/testthat/test_figures_and_tables.R:34:68: style: Trailing whitespace is superfluous.
    3L, 3L), .Label = c("1987", "2002", "2012"), class = "factor"), 
                                                                   ^
NO COPY: tests/testthat/test_figures_and_tables.R:35:64: style: Trailing whitespace is superfluous.
    group = structure(c(1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 1L, 
                                                               ^
NO COPY: tests/testthat/test_figures_and_tables.R:36:64: style: Trailing whitespace is superfluous.
    2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 
                                                               ^
NO COPY: tests/testthat/test_figures_and_tables.R:37:68: style: Trailing whitespace is superfluous.
    8L, 9L), class = "factor", .Label = c("1-20", "21-40", "41-60", 
                                                                   ^
NO COPY: tests/testthat/test_figures_and_tables.R:39:70: style: Trailing whitespace is superfluous.
    )), species = c("Fichte", "Fichte", "Fichte", "Fichte", "Fichte", 
                                                                     ^
NO COPY: tests/testthat/test_figures_and_tables.R:40:64: style: Trailing whitespace is superfluous.
    "Fichte", "Fichte", "Fichte", "Fichte", "Fichte", "Fichte", 
                                                               ^
NO COPY: tests/testthat/test_figures_and_tables.R:41:64: style: Trailing whitespace is superfluous.
    "Fichte", "Fichte", "Fichte", "Fichte", "Fichte", "Fichte", 
                                                               ^
NO COPY: tests/testthat/test_figures_and_tables.R:42:64: style: Trailing whitespace is superfluous.
    "Fichte", "Fichte", "Fichte", "Fichte", "Fichte", "Fichte", 
                                                               ^
NO COPY: tests/testthat/test_figures_and_tables.R:43:74: style: Trailing whitespace is superfluous.
    "Fichte", "Fichte", "Fichte", "Fichte"), grouping_variable = c("AKL", 
                                                                         ^
NO COPY: tests/testthat/test_figures_and_tables.R:44:67: style: Trailing whitespace is superfluous.
    "AKL", "AKL", "AKL", "AKL", "AKL", "AKL", "AKL", "AKL", "AKL", 
                                                                  ^
NO COPY: tests/testthat/test_figures_and_tables.R:45:67: style: Trailing whitespace is superfluous.
    "AKL", "AKL", "AKL", "AKL", "AKL", "AKL", "AKL", "AKL", "AKL", 
                                                                  ^
NO COPY: tests/testthat/test_figures_and_tables.R:46:61: style: Trailing whitespace is superfluous.
    "AKL", "AKL", "AKL", "AKL", "AKL", "AKL", "AKL", "AKL"), 
                                                            ^
NO COPY: tests/testthat/test_figures_and_tables.R:47:74: style: Trailing whitespace is superfluous.
    ownership = c("Gesamtwald", "Gesamtwald", "Gesamtwald", "Gesamtwald", 
                                                                         ^
NO COPY: tests/testthat/test_figures_and_tables.R:48:74: style: Trailing whitespace is superfluous.
    "Gesamtwald", "Gesamtwald", "Gesamtwald", "Gesamtwald", "Gesamtwald", 
                                                                         ^
NO COPY: tests/testthat/test_figures_and_tables.R:49:74: style: Trailing whitespace is superfluous.
    "Gesamtwald", "Gesamtwald", "Gesamtwald", "Gesamtwald", "Gesamtwald", 
                                                                         ^
NO COPY: tests/testthat/test_figures_and_tables.R:50:74: style: Trailing whitespace is superfluous.
    "Gesamtwald", "Gesamtwald", "Gesamtwald", "Gesamtwald", "Gesamtwald", 
                                                                         ^
NO COPY: tests/testthat/test_figures_and_tables.R:51:74: style: Trailing whitespace is superfluous.
    "Gesamtwald", "Gesamtwald", "Gesamtwald", "Gesamtwald", "Gesamtwald", 
                                                                         ^
NO COPY: tests/testthat/test_figures_and_tables.R:52:73: style: Trailing whitespace is superfluous.
    "Gesamtwald", "Gesamtwald", "Gesamtwald")), .Names = c("prediction", 
                                                                        ^
NO COPY: tests/testthat/test_figures_and_tables.R:53:65: style: Trailing whitespace is superfluous.
    "standard_error", "abbreviation", "bwi", "group", "species", 
                                                                ^
NO COPY: tests/testthat/test_figures_and_tables.R:54:1: style: lines should not be more than 80 characters.
    "grouping_variable", "ownership"), row.names = c(NA, 27L), class = "data.frame")
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NO COPY: tests/testthat/test_figures_and_tables.R:56:34: style: Trailing whitespace is superfluous.
  expect_equal(output, reference)  
                                 ^~
NO COPY: tests/testthat/test_figures_and_tables.R:61:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_figures_and_tables.R:62:31: style: Only use double-quotes.
  output <- all_data_by_group('oiB')
                              ^~~~~
NO COPY: tests/testthat/test_figures_and_tables.R:63:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_figures_and_tables.R:64:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_statistics.R:13:60: style: Commas should always have a space after.
  expect_equal(modal_value(c(1, 8, 5, 5, 7, 1), TRUE), c(1,5))
                                                           ^
NO COPY: tests/testthat/test_statistics.R:18:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_statistics.R:20:1: style: Trailing blank lines are superfluous.

^
NO COPY: tests/testthat/test_tree_species_shares.R:13:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_tree_species_shares.R:14:34: style: Words within variable and function names should be separated by '_' rather than '.'.
  output <- tree_species_percent(FVBN.bagr.gw.3)
                                 ^~~~~~~~~~~~~~
NO COPY: tests/testthat/test_tree_species_shares.R:15:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_tree_species_shares.R:16:15: style: Trailing whitespace is superfluous.
  reference <- 
              ^
NO COPY: tests/testthat/test_tree_species_shares.R:17:78: style: Trailing whitespace is superfluous.
    c(34.0480299654245, 8.12350364963504, 3.37185094122167, 5.85201844026124, 
                                                                             ^
NO COPY: tests/testthat/test_tree_species_shares.R:18:76: style: Trailing whitespace is superfluous.
    1.76833653476758, 21.8136258163657, 7.59089819439109, 12.1772800614675, 
                                                                           ^
NO COPY: tests/testthat/test_tree_species_shares.R:20:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_tree_species_shares.R:25:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_tree_species_shares.R:27:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_tree_species_shares.R:28:15: style: Trailing whitespace is superfluous.
  reference <- 
              ^
NO COPY: tests/testthat/test_tree_species_shares.R:29:67: style: Trailing whitespace is superfluous.
      structure(list(bwi = structure(c(1L, 1L, 1L, 1L, 1L, 1L, 1L, 
                                                                  ^
NO COPY: tests/testthat/test_tree_species_shares.R:30:70: style: Trailing whitespace is superfluous.
      1L, 1L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 3L, 3L, 3L, 3L, 3L, 
                                                                     ^
NO COPY: tests/testthat/test_tree_species_shares.R:31:78: style: Trailing whitespace is superfluous.
      3L, 3L, 3L, 3L), .Label = c("1987", "2002", "2012"), class = "factor"), 
                                                                             ^
NO COPY: tests/testthat/test_tree_species_shares.R:32:66: style: Trailing whitespace is superfluous.
      group = structure(c(1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 1L, 
                                                                 ^
NO COPY: tests/testthat/test_tree_species_shares.R:33:66: style: Trailing whitespace is superfluous.
      2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 
                                                                 ^
NO COPY: tests/testthat/test_tree_species_shares.R:34:64: style: Trailing whitespace is superfluous.
      8L, 9L), .Label = c("FI", "TA", "DGL", "KI", "LAE", "BU", 
                                                               ^
NO COPY: tests/testthat/test_tree_species_shares.R:35:74: style: Trailing whitespace is superfluous.
      "EI", "ALH", "ALN"), class = "factor"), value = c(43.5327031406744, 
                                                                         ^
NO COPY: tests/testthat/test_tree_species_shares.R:36:78: style: Trailing whitespace is superfluous.
      7.87648969827919, 2.26216297553824, 8.23866347712015, 1.98345551354271, 
                                                                             ^
NO COPY: tests/testthat/test_tree_species_shares.R:37:78: style: Trailing whitespace is superfluous.
      18.6633590554827, 6.79280808704375, 7.37391233891504, 3.27644571340381, 
                                                                             ^
NO COPY: tests/testthat/test_tree_species_shares.R:38:78: style: Trailing whitespace is superfluous.
      37.7287744906721, 7.89858168761221, 2.84416204823979, 6.77795097962688, 
                                                                             ^
NO COPY: tests/testthat/test_tree_species_shares.R:39:78: style: Trailing whitespace is superfluous.
      1.89646865974553, 21.2065514011396, 7.34725080009367, 10.1598829131215, 
                                                                             ^
NO COPY: tests/testthat/test_tree_species_shares.R:40:78: style: Trailing whitespace is superfluous.
      4.14037701974865, 34.0480299654245, 8.12350364963504, 3.37185094122167, 
                                                                             ^
NO COPY: tests/testthat/test_tree_species_shares.R:41:78: style: Trailing whitespace is superfluous.
      5.85201844026124, 1.76833653476758, 21.8136258163657, 7.59089819439109, 
                                                                             ^
NO COPY: tests/testthat/test_tree_species_shares.R:42:71: style: Trailing whitespace is superfluous.
      12.1772800614675, 5.25445639646562)), .Names = c("bwi", "group", 
                                                                      ^
NO COPY: tests/testthat/test_tree_species_shares.R:44:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_tree_species_shares.R:49:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_tree_species_shares.R:51:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_tree_species_shares.R:52:15: style: Trailing whitespace is superfluous.
  reference <- 
              ^
NO COPY: tests/testthat/test_tree_species_shares.R:53:69: style: Trailing whitespace is superfluous.
    structure(list(Baumartengruppe = structure(1:9, .Label = c("FI", 
                                                                    ^
NO COPY: tests/testthat/test_tree_species_shares.R:54:76: style: Trailing whitespace is superfluous.
    "TA", "DGL", "KI", "LAE", "BU", "EI", "ALH", "ALN"), class = "factor"), 
                                                                           ^
NO COPY: tests/testthat/test_tree_species_shares.R:55:69: style: Trailing whitespace is superfluous.
    `1987` = c(43.5327031406744, 7.87648969827919, 2.26216297553824, 
                                                                    ^
NO COPY: tests/testthat/test_tree_species_shares.R:56:76: style: Trailing whitespace is superfluous.
    8.23866347712015, 1.98345551354271, 18.6633590554827, 6.79280808704375, 
                                                                           ^
NO COPY: tests/testthat/test_tree_species_shares.R:57:70: style: Trailing whitespace is superfluous.
    7.37391233891504, 3.27644571340381), `2002` = c(37.7287744906721, 
                                                                     ^
NO COPY: tests/testthat/test_tree_species_shares.R:58:76: style: Trailing whitespace is superfluous.
    7.89858168761221, 2.84416204823979, 6.77795097962688, 1.89646865974553, 
                                                                           ^
NO COPY: tests/testthat/test_tree_species_shares.R:60:72: style: Trailing whitespace is superfluous.
    ), `2012` = c(34.0480299654245, 8.12350364963504, 3.37185094122167, 
                                                                       ^
NO COPY: tests/testthat/test_tree_species_shares.R:61:76: style: Trailing whitespace is superfluous.
    5.85201844026124, 1.76833653476758, 21.8136258163657, 7.59089819439109, 
                                                                           ^
NO COPY: tests/testthat/test_tree_species_shares.R:62:72: style: Trailing whitespace is superfluous.
    12.1772800614675, 5.25445639646562)), .Names = c("Baumartengruppe", 
                                                                       ^
NO COPY: tests/testthat/test_tree_species_shares.R:64:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_variable_getters.R:13:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_variable_getters.R:15:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_variable_getters.R:16:15: style: Trailing whitespace is superfluous.
  reference <- 
              ^
NO COPY: tests/testthat/test_variable_getters.R:17:68: style: Trailing whitespace is superfluous.
    structure(list(bagr.lab = c("Fichte", "Weißtanne", "Douglasie", 
                                                                   ^
NO COPY: tests/testthat/test_variable_getters.R:18:76: style: Trailing whitespace is superfluous.
    "Kiefer", "Lärchen", "sonst. Nadelholz", "Buche", "Eichen", "Roteiche", 
                                                                           ^
NO COPY: tests/testthat/test_variable_getters.R:19:68: style: Trailing whitespace is superfluous.
    "Esche", "Bergahorn", "Hainbuche", "sonst. Hartholz", "Birken", 
                                                                   ^
NO COPY: tests/testthat/test_variable_getters.R:20:65: style: Trailing whitespace is superfluous.
    "Erlen", "Pappeln", "sonst. Weichholz"), ba.grupp = list(10, 
                                                                ^
NO COPY: tests/testthat/test_variable_getters.R:21:64: style: Trailing whitespace is superfluous.
    30, 40, 20, c(50, 51), c(11L, 12L, 13L, 14L, 15L, 16L, 17L, 
                                                               ^
NO COPY: tests/testthat/test_variable_getters.R:22:64: style: Trailing whitespace is superfluous.
    18L, 19L, 21L, 22L, 23L, 24L, 25L, 26L, 27L, 28L, 29L, 31L, 
                                                               ^
NO COPY: tests/testthat/test_variable_getters.R:23:64: style: Trailing whitespace is superfluous.
    32L, 33L, 34L, 35L, 36L, 37L, 38L, 39L, 90L, 91L, 92L, 93L, 
                                                               ^
NO COPY: tests/testthat/test_variable_getters.R:24:63: style: Trailing whitespace is superfluous.
    94L, 95L, 96L, 97L, 98L, 99L), 100, c(110, 111), 112, 120, 
                                                              ^
NO COPY: tests/testthat/test_variable_getters.R:25:64: style: Trailing whitespace is superfluous.
    140, 130, 141:199, c(200, 201), 210:213, 220:224, 230:299), 
                                                               ^
NO COPY: tests/testthat/test_variable_getters.R:26:62: style: Trailing whitespace is superfluous.
    colors = c("grey30", "red", "violet", "orange", "yellow", 
                                                             ^
NO COPY: tests/testthat/test_variable_getters.R:27:69: style: Trailing whitespace is superfluous.
    "#DC143C", "green", "darkblue", "#00BFFF", "#483D8B", "#008B8B", 
                                                                    ^
NO COPY: tests/testthat/test_variable_getters.R:30:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test_variable_getters.R:32:1: style: Trailing whitespace is superfluous.
  
^~
NO COPY: tests/testthat/test-throw.R:5:1: style: lines should not be more than 80 characters.
                        testthat::expect_error(bundeswaldinventur:::throw(string),
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Warning messages:
1: In readLines(filename) :
  incomplete final line found on '/home/nik/git/os/fva/bundeswaldinventur/tests/testthat/test_deadwood.R'
2: In readLines(file) :
  incomplete final line found on '/home/nik/git/os/fva/bundeswaldinventur/tests/testthat/test_deadwood.R'
3: In readLines(filename) :
  incomplete final line found on '/home/nik/git/os/fva/bundeswaldinventur/tests/testthat/test_figures_and_tables.R'
4: In readLines(file) :
  incomplete final line found on '/home/nik/git/os/fva/bundeswaldinventur/tests/testthat/test_figures_and_tables.R'
5: In readLines(filename) :
  incomplete final line found on '/home/nik/git/os/fva/bundeswaldinventur/tests/testthat/test_tree_species_shares.R'
6: In readLines(file) :
  incomplete final line found on '/home/nik/git/os/fva/bundeswaldinventur/tests/testthat/test_tree_species_shares.R'
