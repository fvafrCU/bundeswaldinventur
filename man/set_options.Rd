% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/options.R
\name{set_options}
\alias{set_options}
\title{set options in a list}
\usage{
set_options(..., name = ifelse(is.null(getOption("package_name")), "my_list",
  getOption("package_name")), reset = FALSE, overwrite = TRUE)
}
\arguments{
\item{...}{see \code{\link{options}}.}

\item{name}{[character(1)]\cr Name of the list.}

\item{reset}{[boolean(1)]\cr Reset all list options to the list's
defaults?}

\item{overwrite}{[boolean(1)]\cr Overwrite options already set? Is set to
FALSE on package loading to ensure your previously set list options
won't get overridden. Just ignore that argument.}
}
\value{
invisible(TRUE)
}
\description{
I want to bundle options in a named list to not clutter the options().
}
\note{
use something like
.onLoad <- function(libname, pkgname) {
  op <- options()
  op.package <- list(
    package_name = "foo"
  )
  toset <- !(names(op.package) %in% names(op))
  if(any(toset)) options(op.package[toset])

  set_options(overwrite = FALSE)

  return(invisible(NULL))
}
in your zzz.R to bundle a package's options into the list named "foo".
}
\examples{
set_options(my_value = 3, name = "my_list")
get_options(name = "my_list")
}
